const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":1301,\"nextId\":1301,\"documentIds\":{\"0\":\"v-4b17c12f\",\"1\":\"v-4b17c12f@0\",\"2\":\"v-4b17c12f@1\",\"3\":\"v-184f4da6\",\"4\":\"v-63569d6e\",\"5\":\"v-63569d6e@0\",\"6\":\"v-63569d6e@1\",\"7\":\"v-0188372f\",\"8\":\"v-47a75f3e\",\"9\":\"v-47a75f3e#手机市场\",\"10\":\"v-47a75f3e#想法从何而来\",\"11\":\"v-47a75f3e#打破现状\",\"12\":\"v-47a75f3e@1\",\"13\":\"v-4ba4912a\",\"14\":\"v-4ba4912a@0\",\"15\":\"v-4ba4912a@1\",\"16\":\"v-7bbf112b\",\"17\":\"v-7bbf112b#menu\",\"18\":\"v-7bbf112b#介绍\",\"19\":\"v-7bbf112b#betxin\",\"20\":\"v-7bbf112b#概览\",\"21\":\"v-7bbf112b#betxin目前支持cnb作为整个市场的通货-即使用cnb对话题进行交易\",\"22\":\"v-7bbf112b#页面\",\"23\":\"v-7bbf112b#_1-页面介绍-常用的功能\",\"24\":\"v-7bbf112b#_2-话题购买功能以及结算\",\"25\":\"v-7bbf112b#_2-0-话题购买功能介绍\",\"26\":\"v-7bbf112b#_2-1-话题购买时的模拟功能\",\"27\":\"v-7bbf112b#_2-2-话题结算规则\",\"28\":\"v-7bbf112b#_3-话题售出功能介绍\",\"29\":\"v-7bbf112b@0\",\"30\":\"v-7bbf112b@1\",\"31\":\"v-1f902b80\",\"32\":\"v-1f902b80#betxin\",\"33\":\"v-1f902b80#menu\",\"34\":\"v-1f902b80#什么是betxin\",\"35\":\"v-1f902b80#概览\",\"36\":\"v-1f902b80#_1-你没有任何加密货币\",\"37\":\"v-1f902b80#_2-你有加密货币但没有pusd\",\"38\":\"v-1f902b80#页面\",\"39\":\"v-1f902b80#_1-页面介绍\",\"40\":\"v-1f902b80#_2-购买预测\",\"41\":\"v-1f902b80#_3-收藏\",\"42\":\"v-1f902b80#_4-评论\",\"43\":\"v-1f902b80@0\",\"44\":\"v-1f902b80@1\",\"45\":\"v-51ce692c\",\"46\":\"v-51ce692c#镜像\",\"47\":\"v-51ce692c#容器\",\"48\":\"v-51ce692c#仓库\",\"49\":\"v-51ce692c#使用镜像\",\"50\":\"v-51ce692c#运行\",\"51\":\"v-51ce692c#列出容器\",\"52\":\"v-51ce692c#虚悬镜像\",\"53\":\"v-51ce692c#中间层镜像\",\"54\":\"v-51ce692c#列出部分镜像\",\"55\":\"v-51ce692c#删除本地镜像\",\"56\":\"v-51ce692c#使用-dockerfile-定制镜像\",\"57\":\"v-51ce692c#from指定基础镜像\",\"58\":\"v-51ce692c#run-执行命令\",\"59\":\"v-51ce692c#构建镜像\",\"60\":\"v-51ce692c#镜像构建上下文-context\",\"61\":\"v-51ce692c#镜像的实现原理\",\"62\":\"v-51ce692c#容器-1\",\"63\":\"v-51ce692c#启动容器\",\"64\":\"v-51ce692c#新建并启动\",\"65\":\"v-51ce692c#启动已终止容器\",\"66\":\"v-51ce692c#后台运行\",\"67\":\"v-51ce692c#终止容器\",\"68\":\"v-51ce692c#进入容器\",\"69\":\"v-51ce692c#导出容器\",\"70\":\"v-51ce692c#导入容器快照\",\"71\":\"v-51ce692c#删除容器\",\"72\":\"v-51ce692c#清理所有处于终止状态的容器\",\"73\":\"v-51ce692c#仓库-1\",\"74\":\"v-51ce692c#数据管理\",\"75\":\"v-51ce692c#底层实现\",\"76\":\"v-51ce692c#命名空间\",\"77\":\"v-51ce692c#控制组\",\"78\":\"v-51ce692c#联合文件系统\",\"79\":\"v-51ce692c@0\",\"80\":\"v-51ce692c@1\",\"81\":\"v-7af0c171\",\"82\":\"v-7af0c171@0\",\"83\":\"v-7af0c171@1\",\"84\":\"v-5ac20bf9\",\"85\":\"v-5ac20bf9@0\",\"86\":\"v-77c978ab\",\"87\":\"v-77c978ab@0\",\"88\":\"v-77e2dd77\",\"89\":\"v-77e2dd77@0\",\"90\":\"v-5b6f1d36\",\"91\":\"v-5b6f1d36@0\",\"92\":\"v-5b6f1d36@1\",\"93\":\"v-0837b04d\",\"94\":\"v-0837b04d#什么是比特币\",\"95\":\"v-0837b04d#比特币的历史\",\"96\":\"v-0837b04d#钱包\",\"97\":\"v-0837b04d@0\",\"98\":\"v-0837b04d@1\",\"99\":\"v-27565d98\",\"100\":\"v-27565d98@0\",\"101\":\"v-27565d98@1\",\"102\":\"v-890344d6\",\"103\":\"v-890344d6@0\",\"104\":\"v-890344d6@1\",\"105\":\"v-31ceabbe\",\"106\":\"v-31ceabbe@0\",\"107\":\"v-31ceabbe@1\",\"108\":\"v-4ac66ad7\",\"109\":\"v-4ac66ad7#solana-简介\",\"110\":\"v-4ac66ad7#solana-开发入门\",\"111\":\"v-4ac66ad7#账户模型\",\"112\":\"v-4ac66ad7#本机程序\",\"113\":\"v-4ac66ad7#sysvar账户\",\"114\":\"v-4ac66ad7#自定义程序\",\"115\":\"v-4ac66ad7#数据帐户\",\"116\":\"v-4ac66ad7#交易与指令\",\"117\":\"v-4ac66ad7#消息\",\"118\":\"v-4ac66ad7#交易费用\",\"119\":\"v-4ac66ad7#计算预算\",\"120\":\"v-4ac66ad7#账户数据大小限制\",\"121\":\"v-4ac66ad7#计算单元\",\"122\":\"v-4ac66ad7#计算单元限制\",\"123\":\"v-4ac66ad7#优先级费用\",\"124\":\"v-4ac66ad7#租金\",\"125\":\"v-4ac66ad7#垃圾回收\",\"126\":\"v-4ac66ad7#程序\",\"127\":\"v-4ac66ad7#升级solana程序\",\"128\":\"v-4ac66ad7#可验证程序\",\"129\":\"v-4ac66ad7#伯克利包过滤器-bpf\",\"130\":\"v-4ac66ad7#程序派生地址\",\"131\":\"v-4ac66ad7#cpi-跨程序调用\",\"132\":\"v-4ac66ad7#solana链上代币\",\"133\":\"v-4ac66ad7#代币程序\",\"134\":\"v-4ac66ad7#mint账户\",\"135\":\"v-4ac66ad7#代币账户\",\"136\":\"v-4ac66ad7#关联代币账户\",\"137\":\"v-4ac66ad7#群集和公共-rpc-端点\",\"138\":\"v-4ac66ad7#版本化交易\",\"139\":\"v-4ac66ad7#地址查找表\",\"140\":\"v-4ac66ad7#交易确认及到期\",\"141\":\"v-4ac66ad7@0\",\"142\":\"v-4ac66ad7@1\",\"143\":\"v-921437f0\",\"144\":\"v-921437f0#aave-简介\",\"145\":\"v-921437f0@0\",\"146\":\"v-921437f0@1\",\"147\":\"v-31625e26\",\"148\":\"v-31625e26#marginfi-vs-solend\",\"149\":\"v-31625e26#marginfi-介绍\",\"150\":\"v-31625e26#功能\",\"151\":\"v-31625e26#玩法\",\"152\":\"v-31625e26#核心代码交互\",\"153\":\"v-31625e26#结论\",\"154\":\"v-31625e26@0\",\"155\":\"v-31625e26@1\",\"156\":\"v-ad4f29c6\",\"157\":\"v-ad4f29c6#概念介绍\",\"158\":\"v-ad4f29c6#_1-lend-存款\",\"159\":\"v-ad4f29c6#_2-borrow-借款\",\"160\":\"v-ad4f29c6#_3-withdraw-提现\",\"161\":\"v-ad4f29c6#_4-repay-偿还\",\"162\":\"v-ad4f29c6#_5-liquidate-清算\",\"163\":\"v-ad4f29c6#_6-flash-loan-闪电贷\",\"164\":\"v-ad4f29c6#_7-health-factor-健康因子\",\"165\":\"v-ad4f29c6#_8-预言机-oracle\",\"166\":\"v-ad4f29c6#_9-利率模型\",\"167\":\"v-ad4f29c6@0\",\"168\":\"v-ad4f29c6@1\",\"169\":\"v-65558b15\",\"170\":\"v-65558b15@0\",\"171\":\"v-65558b15@1\",\"172\":\"v-4c2bcbf4\",\"173\":\"v-4c2bcbf4#pusd是什么\",\"174\":\"v-4c2bcbf4#流通量\",\"175\":\"v-4c2bcbf4#为什么会出现负溢价\",\"176\":\"v-4c2bcbf4#前段时间的负溢价是如何消除的\",\"177\":\"v-4c2bcbf4#复盘pusd铸币利率提高的市场机会\",\"178\":\"v-4c2bcbf4@0\",\"179\":\"v-4c2bcbf4@1\",\"180\":\"v-9dbcf8de\",\"181\":\"v-9dbcf8de#稳定币类型\",\"182\":\"v-9dbcf8de#资产种类划分\",\"183\":\"v-9dbcf8de#实现机制划分\",\"184\":\"v-9dbcf8de#中心化稳定币\",\"185\":\"v-9dbcf8de#去中心化稳定币\",\"186\":\"v-9dbcf8de#算法稳定币\",\"187\":\"v-9dbcf8de#pusd介绍和当前发展状况\",\"188\":\"v-9dbcf8de#pusd未来规划和稳定币领域的未来发展情况\",\"189\":\"v-9dbcf8de@0\",\"190\":\"v-9dbcf8de@1\",\"191\":\"v-217737e2\",\"192\":\"v-217737e2#快速搭建t3-app项目\",\"193\":\"v-217737e2#通读nextauth文档\",\"194\":\"v-217737e2#jwt-token配置\",\"195\":\"v-217737e2#接入mixin-oauth\",\"196\":\"v-217737e2#接入-web3-登录\",\"197\":\"v-217737e2#solana-登录\",\"198\":\"v-217737e2#eth-登录\",\"199\":\"v-217737e2#添加session会话\",\"200\":\"v-217737e2#基于角色的认证\",\"201\":\"v-217737e2@0\",\"202\":\"v-217737e2@1\",\"203\":\"v-35635e56\",\"204\":\"v-35635e56@0\",\"205\":\"v-35635e56@1\",\"206\":\"v-ed510016\",\"207\":\"v-ed510016#组合\",\"208\":\"v-ed510016#_77-组合\",\"209\":\"v-ed510016#_216-组合总和iii\",\"210\":\"v-ed510016#_17-电话号码的字母总和\",\"211\":\"v-ed510016#_39-组合总和\",\"212\":\"v-ed510016#_40-组合总和ii\",\"213\":\"v-ed510016#_131-分割回文串\",\"214\":\"v-ed510016#_93-复原ip地址\",\"215\":\"v-ed510016#_78-子集\",\"216\":\"v-ed510016#_13-子集ii\",\"217\":\"v-ed510016#_491-递增子序列\",\"218\":\"v-ed510016#_46-全排列\",\"219\":\"v-ed510016#_47-全排列ii\",\"220\":\"v-ed510016#_51-n皇后\",\"221\":\"v-ed510016@0\",\"222\":\"v-ed510016@1\",\"223\":\"v-6bd45cce\",\"224\":\"v-6bd45cce#动态规划基础\",\"225\":\"v-6bd45cce#基础题目\",\"226\":\"v-6bd45cce#_509-斐波那契数\",\"227\":\"v-6bd45cce#_70-爬楼梯\",\"228\":\"v-6bd45cce#_746-使用最小花费爬楼梯\",\"229\":\"v-6bd45cce#_62-不同路径\",\"230\":\"v-6bd45cce#_63-不同路径ii\",\"231\":\"v-6bd45cce#_343-整数拆分\",\"232\":\"v-6bd45cce#_96-不同的二叉搜索树\",\"233\":\"v-6bd45cce#背包问题\",\"234\":\"v-6bd45cce#_01-背包基础\",\"235\":\"v-6bd45cce#二维数组\",\"236\":\"v-6bd45cce#一维数组\",\"237\":\"v-6bd45cce#_416-分割等和子集\",\"238\":\"v-6bd45cce#_1049-最后一块石头的重量-ii\",\"239\":\"v-6bd45cce#_494-目标和\",\"240\":\"v-6bd45cce#_474-一和零\",\"241\":\"v-6bd45cce#完全背包问题\",\"242\":\"v-6bd45cce#_518-零钱兑换-ii\",\"243\":\"v-6bd45cce#_70-爬楼梯-1\",\"244\":\"v-6bd45cce#_322-零钱兑换\",\"245\":\"v-6bd45cce#_279-完全平方数\",\"246\":\"v-6bd45cce#_139-单词拆分\",\"247\":\"v-6bd45cce#打家劫舍\",\"248\":\"v-6bd45cce#_198-打家劫舍\",\"249\":\"v-6bd45cce#_213-打家劫舍ii\",\"250\":\"v-6bd45cce#_337-打家劫舍-iii\",\"251\":\"v-6bd45cce#股票问题\",\"252\":\"v-6bd45cce#_121-买卖股票的最佳时机\",\"253\":\"v-6bd45cce#_122-买卖股票的最佳时机ii\",\"254\":\"v-6bd45cce#_123-买卖股票的最佳时机iii\",\"255\":\"v-6bd45cce#_188-买卖股票的最佳时机iv\",\"256\":\"v-6bd45cce#_309-最佳买卖股票时机含冷冻期\",\"257\":\"v-6bd45cce#_300-最长递增子序列\",\"258\":\"v-6bd45cce#_674-最长连续递增序列\",\"259\":\"v-6bd45cce#_718-最长重复子数组\",\"260\":\"v-6bd45cce#_1143-最长公共子序列\",\"261\":\"v-6bd45cce#_1035-不相交的线\",\"262\":\"v-6bd45cce#_53-最大子数组和\",\"263\":\"v-6bd45cce#_392-判断子序列\",\"264\":\"v-6bd45cce#_115-不同的子序列\",\"265\":\"v-6bd45cce#_583-两个字符串的删除操作\",\"266\":\"v-6bd45cce#_72-编辑距离\",\"267\":\"v-6bd45cce#_647-回文子串\",\"268\":\"v-6bd45cce#_516-最长回文子序列\",\"269\":\"v-6bd45cce@0\",\"270\":\"v-6bd45cce@1\",\"271\":\"v-127499ab\",\"272\":\"v-127499ab@0\",\"273\":\"v-127499ab@1\",\"274\":\"v-1de1766a\",\"275\":\"v-1de1766a#_03-数组中重复的数字\",\"276\":\"v-1de1766a#_04-二维数组中的查找\",\"277\":\"v-1de1766a#_05-替换空格\",\"278\":\"v-1de1766a#_06-从尾到头打印链表\",\"279\":\"v-1de1766a#_07-重建二叉树\",\"280\":\"v-1de1766a#_09-用两个栈实现队列\",\"281\":\"v-1de1766a#_10-i-斐波那契数列\",\"282\":\"v-1de1766a#_10-ii-青蛙跳台阶问题\",\"283\":\"v-1de1766a#_11-旋转数组的最小数字\",\"284\":\"v-1de1766a#_12-矩阵中的路径\",\"285\":\"v-1de1766a#_14-i-剪绳子\",\"286\":\"v-1de1766a#_14-ii-剪绳子-ii\",\"287\":\"v-1de1766a#_15-二进制中1的个数\",\"288\":\"v-1de1766a#_16-数值的整数次方\",\"289\":\"v-1de1766a#_17-打印从1到最大的n位数\",\"290\":\"v-1de1766a#_18-删除链表的节点\",\"291\":\"v-1de1766a#_19-正则表达式匹配\",\"292\":\"v-1de1766a#_20-表示数值的字符串\",\"293\":\"v-1de1766a#_21-调整数组顺序使奇数位于偶数前面\",\"294\":\"v-1de1766a#_22-链表中倒数第k个节点\",\"295\":\"v-1de1766a#_24-反转链表\",\"296\":\"v-1de1766a#_25-合并两个排序的链表\",\"297\":\"v-1de1766a#_26-树的子结构\",\"298\":\"v-1de1766a#_27-二叉树的镜像\",\"299\":\"v-1de1766a#_28-对称的二叉树\",\"300\":\"v-1de1766a#_29-顺时针打印矩阵\",\"301\":\"v-1de1766a#_30-包含min函数的栈\",\"302\":\"v-1de1766a#_31-栈的压入、弹出序列\",\"303\":\"v-1de1766a#_32-i-从上到下打印二叉树\",\"304\":\"v-1de1766a#_32-ii-从上到下打印二叉树-ii\",\"305\":\"v-1de1766a#_32-iii-从上到下打印二叉树-iii\",\"306\":\"v-1de1766a#_33-二叉搜索树的后序遍历序列\",\"307\":\"v-1de1766a#_34-二叉树中和为某一值的路径\",\"308\":\"v-1de1766a#_35-复杂链表的复制\",\"309\":\"v-1de1766a#_36-二叉搜索树与双向链表\",\"310\":\"v-1de1766a#_37-序列化二叉树\",\"311\":\"v-1de1766a#_38-字符串的排列\",\"312\":\"v-1de1766a#_39-数组中出现次数超过一半的数字\",\"313\":\"v-1de1766a#_40-最小的k个数\",\"314\":\"v-1de1766a#_41-数据流中的中位数\",\"315\":\"v-1de1766a#_42-连续子数组的最大和\",\"316\":\"v-1de1766a#_43-1-n-整数中-1-出现的次数\",\"317\":\"v-1de1766a#_44-数字序列中某一位的数字\",\"318\":\"v-1de1766a#offer-46-把数字翻译成字符串\",\"319\":\"v-1de1766a#_47-礼物的最大价值\",\"320\":\"v-1de1766a#_48-最长不含重复字符的子字符串\",\"321\":\"v-1de1766a#_49-丑数\",\"322\":\"v-1de1766a#_50-第一个只出现一次的字符\",\"323\":\"v-1de1766a#_51-数组中的逆序对\",\"324\":\"v-1de1766a#_52-两个链表的第一个公共节点\",\"325\":\"v-1de1766a#_53-i-在排序数组中查找数字-i\",\"326\":\"v-1de1766a#_53-ii-0-n-1中缺失的数字\",\"327\":\"v-1de1766a#_54-二叉搜索树的第k大节点\",\"328\":\"v-1de1766a#_55-i-二叉树的深度\",\"329\":\"v-1de1766a#_55-ii-平衡二叉树\",\"330\":\"v-1de1766a#_56-i-数组中数字出现的次数\",\"331\":\"v-1de1766a#_56-ii-数组中数字出现的次数-ii\",\"332\":\"v-1de1766a#_57-和为s的两个数字\",\"333\":\"v-1de1766a#_58-i-翻转单词顺序\",\"334\":\"v-1de1766a#_58-i-翻转单词顺序-1\",\"335\":\"v-1de1766a#_58-ii-左旋转字符串\",\"336\":\"v-1de1766a#_59-i-滑动窗口的最大值\",\"337\":\"v-1de1766a#_60-n个骰子的点数\",\"338\":\"v-1de1766a@0\",\"339\":\"v-1de1766a@1\",\"340\":\"v-56bd5e7e\",\"341\":\"v-56bd5e7e#执行一条sql查询语句-期间发生了什么\",\"342\":\"v-56bd5e7e#连接器\",\"343\":\"v-56bd5e7e#查询缓存\",\"344\":\"v-56bd5e7e#解析-sql\",\"345\":\"v-56bd5e7e#解析器\",\"346\":\"v-56bd5e7e#执行-sql\",\"347\":\"v-56bd5e7e#预处理器\",\"348\":\"v-56bd5e7e#优化器\",\"349\":\"v-56bd5e7e#执行器\",\"350\":\"v-56bd5e7e#索引常见问题\",\"351\":\"v-56bd5e7e#什么时候需要创建索引\",\"352\":\"v-56bd5e7e#什么时候不需要创建索引\",\"353\":\"v-56bd5e7e#有什么优化索引的方法\",\"354\":\"v-56bd5e7e#内存-揭开-buffer-pool-的面纱\",\"355\":\"v-56bd5e7e#日志\",\"356\":\"v-56bd5e7e#为什么需要undo-log\",\"357\":\"v-56bd5e7e#为什么需要-redo-log\",\"358\":\"v-56bd5e7e#为什么需要-binlog\",\"359\":\"v-56bd5e7e#主从复制是怎么实现\",\"360\":\"v-56bd5e7e#为什么需要两阶段提交\",\"361\":\"v-56bd5e7e#事务\",\"362\":\"v-56bd5e7e#事务的隔离级别是怎么实现的\",\"363\":\"v-56bd5e7e#锁\",\"364\":\"v-56bd5e7e#全局锁\",\"365\":\"v-56bd5e7e#表级锁\",\"366\":\"v-56bd5e7e#表锁\",\"367\":\"v-56bd5e7e#元数据锁\",\"368\":\"v-56bd5e7e#意向锁\",\"369\":\"v-56bd5e7e#auto-inc-锁\",\"370\":\"v-56bd5e7e#行级锁\",\"371\":\"v-56bd5e7e#record-lock\",\"372\":\"v-56bd5e7e#gap-lock\",\"373\":\"v-56bd5e7e#next-key-lock\",\"374\":\"v-56bd5e7e#插入意向锁\",\"375\":\"v-56bd5e7e#buffer-pool\",\"376\":\"v-56bd5e7e#为什么要有buffer-pool\",\"377\":\"v-56bd5e7e#如何管理buffer-pool\",\"378\":\"v-56bd5e7e@0\",\"379\":\"v-56bd5e7e@1\",\"380\":\"v-46709ae2\",\"381\":\"v-46709ae2#引入缓存提高性能\",\"382\":\"v-46709ae2#缓存利用率与一致性问题\",\"383\":\"v-46709ae2#并发引入的一致性问题\",\"384\":\"v-46709ae2#删除缓存可以保证一致性吗\",\"385\":\"v-46709ae2#如何保证两步都执行成功\",\"386\":\"v-46709ae2#主从库延迟和延迟双删问题\",\"387\":\"v-46709ae2#可以做到强一致吗\",\"388\":\"v-46709ae2#总结\",\"389\":\"v-46709ae2@0\",\"390\":\"v-46709ae2@1\",\"391\":\"v-f29e4144\",\"392\":\"v-f29e4144#数据结构与对象\",\"393\":\"v-f29e4144#sds-简单动态字符串\",\"394\":\"v-f29e4144#链表\",\"395\":\"v-f29e4144#字典\",\"396\":\"v-f29e4144#渐进式rehash\",\"397\":\"v-f29e4144#跳表\",\"398\":\"v-f29e4144#整数集合\",\"399\":\"v-f29e4144#压缩列表\",\"400\":\"v-f29e4144#对象\",\"401\":\"v-f29e4144#_5种常见的数据类型\",\"402\":\"v-f29e4144#string内部实现\",\"403\":\"v-f29e4144#命令\",\"404\":\"v-f29e4144#list-类型内部实现\",\"405\":\"v-f29e4144#命令-1\",\"406\":\"v-f29e4144#hash-类型内部实现\",\"407\":\"v-f29e4144#命令-2\",\"408\":\"v-f29e4144#set-类型内部实现\",\"409\":\"v-f29e4144#命令-3\",\"410\":\"v-f29e4144#zset-类型内部实现\",\"411\":\"v-f29e4144#redis线程模型\",\"412\":\"v-f29e4144#redis-采用单线程为什么还这么快\",\"413\":\"v-f29e4144#redis持久化\",\"414\":\"v-f29e4144#redis-过期删除与内存淘汰\",\"415\":\"v-f29e4144#redis的rdb持久化过程\",\"416\":\"v-f29e4144#rdb文件的创建与载入\",\"417\":\"v-f29e4144#自动间隔性保存\",\"418\":\"v-f29e4144#rdb文件的结构\",\"419\":\"v-f29e4144#databases部分\",\"420\":\"v-f29e4144#key-value-pairs部分\",\"421\":\"v-f29e4144#aof文件结构\",\"422\":\"v-f29e4144#aof持久化的实现\",\"423\":\"v-f29e4144#发布与订阅\",\"424\":\"v-f29e4144#事务\",\"425\":\"v-f29e4144#复制\",\"426\":\"v-f29e4144#哨兵\",\"427\":\"v-f29e4144#集群\",\"428\":\"v-f29e4144#槽指派\",\"429\":\"v-f29e4144#在集群中执行命令\",\"430\":\"v-f29e4144#节点数据库的实现\",\"431\":\"v-f29e4144#重新分片\",\"432\":\"v-f29e4144#ask错误\",\"433\":\"v-f29e4144#复制与故障转移\",\"434\":\"v-f29e4144#消息\",\"435\":\"v-f29e4144#消息头\",\"436\":\"v-f29e4144#redis分布式锁问题\",\"437\":\"v-f29e4144#redis-如何解决集群情况下分布式锁的可靠性\",\"438\":\"v-f29e4144@0\",\"439\":\"v-f29e4144@1\",\"440\":\"v-fead0b28\",\"441\":\"v-fead0b28@0\",\"442\":\"v-fead0b28@1\",\"443\":\"v-a93e83a8\",\"444\":\"v-a93e83a8@0\",\"445\":\"v-a93e83a8@1\",\"446\":\"v-a1813a80\",\"447\":\"v-a1813a80#panic-处理不可恢复的错误\",\"448\":\"v-a1813a80#result-t-e-处理可恢复的错误\",\"449\":\"v-a1813a80#不处理result\",\"450\":\"v-a1813a80#传播错误\",\"451\":\"v-a1813a80#传播错误的简写-运算符\",\"452\":\"v-a1813a80@0\",\"453\":\"v-a1813a80@1\",\"454\":\"v-5ff9675f\",\"455\":\"v-5ff9675f#编译期初始化\",\"456\":\"v-5ff9675f#静态常量\",\"457\":\"v-5ff9675f#静态变量\",\"458\":\"v-5ff9675f#原子类型\",\"459\":\"v-5ff9675f#运行期初始化\",\"460\":\"v-5ff9675f#lazy-static\",\"461\":\"v-5ff9675f#box-leak\",\"462\":\"v-5ff9675f#从函数中返回全局变量\",\"463\":\"v-5ff9675f#标准库中的-oncecell\",\"464\":\"v-5ff9675f#总结\",\"465\":\"v-5ff9675f@0\",\"466\":\"v-5ff9675f@1\",\"467\":\"v-472731bc\",\"468\":\"v-472731bc#切片-slice\",\"469\":\"v-472731bc#其他切片\",\"470\":\"v-472731bc#字符串的字面量是切片\",\"471\":\"v-472731bc#什么是字符串\",\"472\":\"v-472731bc#string与-str的转换\",\"473\":\"v-472731bc#字符串索引\",\"474\":\"v-472731bc#字符串的不同表现形式\",\"475\":\"v-472731bc#字符串切片\",\"476\":\"v-472731bc#操作字符串\",\"477\":\"v-472731bc#push-追加\",\"478\":\"v-472731bc#insert-插入\",\"479\":\"v-472731bc#replace-替换\",\"480\":\"v-472731bc#delete-删除\",\"481\":\"v-472731bc#concatenate-连接\",\"482\":\"v-472731bc#使用-format-连接字符串\",\"483\":\"v-472731bc#字符串转义\",\"484\":\"v-472731bc#操作-utf-8-字符串\",\"485\":\"v-472731bc#字符\",\"486\":\"v-472731bc#字节\",\"487\":\"v-472731bc#获取子串\",\"488\":\"v-472731bc@0\",\"489\":\"v-472731bc@1\",\"490\":\"v-2e9f4d3d\",\"491\":\"v-2e9f4d3d@0\",\"492\":\"v-2e9f4d3d@1\",\"493\":\"v-0f744524\",\"494\":\"v-0f744524#localsent-工具介绍\",\"495\":\"v-0f744524@0\",\"496\":\"v-0f744524@1\",\"497\":\"v-744b11a6\",\"498\":\"v-744b11a6@0\",\"499\":\"v-744b11a6@1\",\"500\":\"v-75b021da\",\"501\":\"v-75b021da#书籍-50本\",\"502\":\"v-75b021da#李笑来部曲-11\",\"503\":\"v-75b021da#非虚构类书籍-27\",\"504\":\"v-75b021da#技术类书籍-11\",\"505\":\"v-75b021da#基本工作\",\"506\":\"v-75b021da@0\",\"507\":\"v-75b021da@1\",\"508\":\"v-191e3f24\",\"509\":\"v-191e3f24#总览\",\"510\":\"v-191e3f24#开始\",\"511\":\"v-191e3f24#总代码架构图示\",\"512\":\"v-191e3f24#如何了解一个package\",\"513\":\"v-191e3f24#数据模型\",\"514\":\"v-191e3f24#生成哈希值和新区块\",\"515\":\"v-191e3f24#数据核实\",\"516\":\"v-191e3f24#web服务\",\"517\":\"v-191e3f24#差不多完事了\",\"518\":\"v-191e3f24@1\",\"519\":\"v-47375370\",\"520\":\"v-47375370#enjoy\",\"521\":\"v-47375370#中文版本\",\"522\":\"v-47375370@1\",\"523\":\"v-5376a85d\",\"524\":\"v-5376a85d@1\",\"525\":\"v-6d02af8e\",\"526\":\"v-6d02af8e@0\",\"527\":\"v-6d02af8e@1\",\"528\":\"v-48804d80\",\"529\":\"v-48804d80@0\",\"530\":\"v-48804d80@1\",\"531\":\"v-374fb63b\",\"532\":\"v-374fb63b#传统互联网\",\"533\":\"v-374fb63b#如今互联网\",\"534\":\"v-374fb63b#未来互联网\",\"535\":\"v-374fb63b@0\",\"536\":\"v-374fb63b@1\",\"537\":\"v-6162d44c\",\"538\":\"v-6162d44c@0\",\"539\":\"v-6162d44c@1\",\"540\":\"v-0230ae44\",\"541\":\"v-0230ae44@0\",\"542\":\"v-0230ae44@1\",\"543\":\"v-4f026ee2\",\"544\":\"v-4f026ee2@0\",\"545\":\"v-4f026ee2@1\",\"546\":\"v-ca8f39fa\",\"547\":\"v-ca8f39fa#english-version\",\"548\":\"v-ca8f39fa#results-after-leaving\",\"549\":\"v-ca8f39fa#but-in-the-end-i-returned-to-wechat\",\"550\":\"v-ca8f39fa#a-few-suggestions-for-friends-who-want-to-leave-the-wechat-circle\",\"551\":\"v-ca8f39fa#chinese-version\",\"552\":\"v-ca8f39fa#离开后的结果\",\"553\":\"v-ca8f39fa#但最终我还是回归了微信\",\"554\":\"v-ca8f39fa#给想离开微信圈朋友的几条建议\",\"555\":\"v-ca8f39fa@0\",\"556\":\"v-ca8f39fa@1\",\"557\":\"v-8b9fe7ba\",\"558\":\"v-8b9fe7ba@0\",\"559\":\"v-8b9fe7ba@1\",\"560\":\"v-3a828186\",\"561\":\"v-3a828186@0\",\"562\":\"v-3a828186@1\",\"563\":\"v-423b1ad8\",\"564\":\"v-423b1ad8@0\",\"565\":\"v-423b1ad8@1\",\"566\":\"v-1c41ff49\",\"567\":\"v-1c41ff49@0\",\"568\":\"v-1c41ff49@1\",\"569\":\"v-0e9a89f8\",\"570\":\"v-0e9a89f8#你迄今为止的人生道路\",\"571\":\"v-0e9a89f8#重新审视厨师与主厨\",\"572\":\"v-0e9a89f8#您的职业规划\",\"573\":\"v-0e9a89f8#深入分析第一部分-您的-想要-框\",\"574\":\"v-0e9a89f8#解剖欲望章鱼\",\"575\":\"v-0e9a89f8#寻找冒充者\",\"576\":\"v-0e9a89f8#拒绝牢狱\",\"577\":\"v-0e9a89f8#优先排名\",\"578\":\"v-0e9a89f8#深度剖析-第二部分-你的现实盒子\",\"579\":\"v-0e9a89f8#职业前景\",\"580\":\"v-0e9a89f8#你的潜力\",\"581\":\"v-0e9a89f8#速度\",\"582\":\"v-0e9a89f8#坚持不懈\",\"583\":\"v-0e9a89f8#你真正的优势和劣势\",\"584\":\"v-0e9a89f8#填充现实盒子\",\"585\":\"v-0e9a89f8#将点连接成线-展望未来\",\"586\":\"v-0e9a89f8#开始行动\",\"587\":\"v-0e9a89f8#行动之后\",\"588\":\"v-0e9a89f8#下一个点呢\",\"589\":\"v-0e9a89f8@0\",\"590\":\"v-0e9a89f8@1\",\"591\":\"v-32ffaab1\",\"592\":\"v-32ffaab1#一些看法\",\"593\":\"v-32ffaab1@0\",\"594\":\"v-32ffaab1@1\",\"595\":\"v-392442de\",\"596\":\"v-392442de#常识\",\"597\":\"v-392442de#判断依据\",\"598\":\"v-392442de#观点\",\"599\":\"v-392442de#总结\",\"600\":\"v-392442de@0\",\"601\":\"v-392442de@1\",\"602\":\"v-da4dc49c\",\"603\":\"v-da4dc49c@0\",\"604\":\"v-da4dc49c@1\",\"605\":\"v-51eb093a\",\"606\":\"v-51eb093a@0\",\"607\":\"v-51eb093a@1\",\"608\":\"v-2cbfa890\",\"609\":\"v-2cbfa890#气候难民\",\"610\":\"v-2cbfa890#集体注意力的缺失\",\"611\":\"v-2cbfa890#数字技术的不幸\",\"612\":\"v-2cbfa890@0\",\"613\":\"v-2cbfa890@1\",\"614\":\"v-7e425500\",\"615\":\"v-7e425500#金钱是有生命力的-1\",\"616\":\"v-7e425500@0\",\"617\":\"v-7e425500@1\",\"618\":\"v-321ca414\",\"619\":\"v-321ca414#时间和地点的影响\",\"620\":\"v-321ca414#流行思想的影响\",\"621\":\"v-321ca414#大众文化的影响\",\"622\":\"v-321ca414#科学的操作\",\"623\":\"v-321ca414#心理学的影响\",\"624\":\"v-321ca414@0\",\"625\":\"v-321ca414@1\",\"626\":\"v-21ddef20\",\"627\":\"v-21ddef20#对批判性思考有不少误解\",\"628\":\"v-21ddef20#避免抄袭\",\"629\":\"v-21ddef20@0\",\"630\":\"v-21ddef20@1\",\"631\":\"v-6056606e\",\"632\":\"v-6056606e#_1-培养正念\",\"633\":\"v-6056606e#_2-锻炼身体\",\"634\":\"v-6056606e#_3-尽快找到可以让自己充满激情的事业\",\"635\":\"v-6056606e@0\",\"636\":\"v-6056606e@1\",\"637\":\"v-27098123\",\"638\":\"v-27098123#为什么我们的想法有时往往不是真理\",\"639\":\"v-27098123#我们的想法来源于何处\",\"640\":\"v-27098123#不完善的感知\",\"641\":\"v-27098123#不完善的记忆\",\"642\":\"v-27098123#有缺陷的信息\",\"643\":\"v-27098123#聪明人也会犯错\",\"644\":\"v-27098123@0\",\"645\":\"v-27098123@1\",\"646\":\"v-0e92e1ec\",\"647\":\"v-0e92e1ec#误解\",\"648\":\"v-0e92e1ec#误区\",\"649\":\"v-0e92e1ec#知识循环\",\"650\":\"v-0e92e1ec@0\",\"651\":\"v-0e92e1ec@1\",\"652\":\"v-7057c552\",\"653\":\"v-7057c552#认知意味着什么\",\"654\":\"v-7057c552#我们是如何知道的\",\"655\":\"v-7057c552#为什么认知是困难的\",\"656\":\"v-7057c552#信仰是一种形式的知识吗\",\"657\":\"v-7057c552#知识的障碍\",\"658\":\"v-7057c552@0\",\"659\":\"v-7057c552@1\",\"660\":\"v-69799310\",\"661\":\"v-69799310@0\",\"662\":\"v-69799310@1\",\"663\":\"v-f94547aa\",\"664\":\"v-f94547aa@0\",\"665\":\"v-f94547aa@1\",\"666\":\"v-63abedbc\",\"667\":\"v-63abedbc@0\",\"668\":\"v-63abedbc@1\",\"669\":\"v-1eb20697\",\"670\":\"v-1eb20697#计算机技术\",\"671\":\"v-1eb20697@0\",\"672\":\"v-1eb20697@1\",\"673\":\"v-5316d9fc\",\"674\":\"v-5316d9fc#成长型思维模式\",\"675\":\"v-5316d9fc@0\",\"676\":\"v-5316d9fc@1\",\"677\":\"v-3e8c5afb\",\"678\":\"v-3e8c5afb@0\",\"679\":\"v-3e8c5afb@1\",\"680\":\"v-5d6d81ad\",\"681\":\"v-5d6d81ad@0\",\"682\":\"v-5d6d81ad@1\",\"683\":\"v-650ae6ea\",\"684\":\"v-650ae6ea@0\",\"685\":\"v-650ae6ea@1\",\"686\":\"v-6c2f3742\",\"687\":\"v-6c2f3742@0\",\"688\":\"v-6c2f3742@1\",\"689\":\"v-508e0582\",\"690\":\"v-508e0582@0\",\"691\":\"v-508e0582@1\",\"692\":\"v-6ecc2a70\",\"693\":\"v-6ecc2a70@0\",\"694\":\"v-6ecc2a70@1\",\"695\":\"v-50500806\",\"696\":\"v-50500806@0\",\"697\":\"v-50500806@1\",\"698\":\"v-f646ccee\",\"699\":\"v-f646ccee@0\",\"700\":\"v-f646ccee@1\",\"701\":\"v-0dd8ffa4\",\"702\":\"v-0dd8ffa4#为什么你应该提现你的coin\",\"703\":\"v-0dd8ffa4#_1-提现告诉你币确实存在\",\"704\":\"v-0dd8ffa4#_2-交易所遭到黑客攻击\",\"705\":\"v-0dd8ffa4#_3-创始人经常拉拢用户并窃取资金\",\"706\":\"v-0dd8ffa4#_4-交易所关闭、破产-然后消失——你的钱也随之消失\",\"707\":\"v-0dd8ffa4@0\",\"708\":\"v-0dd8ffa4@1\",\"709\":\"v-0feb8628\",\"710\":\"v-0feb8628#不使用云-你需要付出什么\",\"711\":\"v-0feb8628#最后\",\"712\":\"v-0feb8628@0\",\"713\":\"v-0feb8628@1\",\"714\":\"v-7d969102\",\"715\":\"v-7d969102@0\",\"716\":\"v-7d969102@1\",\"717\":\"v-35fbaab6\",\"718\":\"v-35fbaab6#政府机构的缺点\",\"719\":\"v-35fbaab6@0\",\"720\":\"v-35fbaab6@1\",\"721\":\"v-6f36f50e\",\"722\":\"v-6f36f50e#为什么选择模块化\",\"723\":\"v-6f36f50e#我们不需要微服务\",\"724\":\"v-6f36f50e#单体架构\",\"725\":\"v-6f36f50e#开放核心\",\"726\":\"v-6f36f50e@0\",\"727\":\"v-6f36f50e@1\",\"728\":\"v-2740fec4\",\"729\":\"v-2740fec4@0\",\"730\":\"v-2740fec4@1\",\"731\":\"v-0e0d3bfa\",\"732\":\"v-0e0d3bfa@0\",\"733\":\"v-0e0d3bfa@1\",\"734\":\"v-44c8865e\",\"735\":\"v-44c8865e#二十年前的年轻人\",\"736\":\"v-44c8865e@0\",\"737\":\"v-44c8865e@1\",\"738\":\"v-6a7a8deb\",\"739\":\"v-6a7a8deb#生产者心态\",\"740\":\"v-6a7a8deb#如何做一个生产者\",\"741\":\"v-6a7a8deb@0\",\"742\":\"v-6a7a8deb@1\",\"743\":\"v-b3870078\",\"744\":\"v-b3870078@0\",\"745\":\"v-b3870078@1\",\"746\":\"v-ed2b00be\",\"747\":\"v-ed2b00be#为什么贫富差距会越来越大\",\"748\":\"v-ed2b00be#如何应对\",\"749\":\"v-ed2b00be@0\",\"750\":\"v-ed2b00be@1\",\"751\":\"v-037e4c79\",\"752\":\"v-037e4c79@0\",\"753\":\"v-037e4c79@1\",\"754\":\"v-241f1ebf\",\"755\":\"v-241f1ebf@0\",\"756\":\"v-241f1ebf@1\",\"757\":\"v-c75dfafe\",\"758\":\"v-c75dfafe#过去几年的收获\",\"759\":\"v-c75dfafe#过去四年我的的几个重大决策\",\"760\":\"v-c75dfafe#毕业想法\",\"761\":\"v-c75dfafe#未来规划\",\"762\":\"v-c75dfafe@0\",\"763\":\"v-c75dfafe@1\",\"764\":\"v-4b052672\",\"765\":\"v-4b052672@0\",\"766\":\"v-4b052672@1\",\"767\":\"v-ca88b3d4\",\"768\":\"v-ca88b3d4@0\",\"769\":\"v-ca88b3d4@1\",\"770\":\"v-08419e11\",\"771\":\"v-08419e11#一、技术采用与年龄相关\",\"772\":\"v-08419e11#二、技术文盲的一些迹象\",\"773\":\"v-08419e11#三、面对技术进步的选择\",\"774\":\"v-08419e11@0\",\"775\":\"v-08419e11@1\",\"776\":\"v-dc163d2e\",\"777\":\"v-dc163d2e@0\",\"778\":\"v-dc163d2e@1\",\"779\":\"v-63b7a658\",\"780\":\"v-63b7a658@0\",\"781\":\"v-63b7a658@1\",\"782\":\"v-145e1837\",\"783\":\"v-145e1837#了解历史\",\"784\":\"v-145e1837#言论自由的假象\",\"785\":\"v-145e1837@0\",\"786\":\"v-145e1837@1\",\"787\":\"v-02bd21b0\",\"788\":\"v-02bd21b0#现象\",\"789\":\"v-02bd21b0#应对策略\",\"790\":\"v-02bd21b0@0\",\"791\":\"v-02bd21b0@1\",\"792\":\"v-4a5114f2\",\"793\":\"v-4a5114f2@0\",\"794\":\"v-4a5114f2@1\",\"795\":\"v-339ffa36\",\"796\":\"v-339ffa36@0\",\"797\":\"v-339ffa36@1\",\"798\":\"v-44670ac2\",\"799\":\"v-44670ac2#_1-尝试过早\",\"800\":\"v-44670ac2#_2-应用场景不正确\",\"801\":\"v-44670ac2#_3-没有发展社区\",\"802\":\"v-44670ac2@0\",\"803\":\"v-44670ac2@1\",\"804\":\"v-07fa500d\",\"805\":\"v-07fa500d@0\",\"806\":\"v-d3841176\",\"807\":\"v-d3841176@0\",\"808\":\"v-639ff8c7\",\"809\":\"v-639ff8c7@0\",\"810\":\"v-6c923647\",\"811\":\"v-6c923647@0\",\"812\":\"v-8851fa62\",\"813\":\"v-8851fa62#定义\",\"814\":\"v-8851fa62#示例\",\"815\":\"v-8851fa62#总结\",\"816\":\"v-8851fa62@0\",\"817\":\"v-8851fa62@1\",\"818\":\"v-76d9104a\",\"819\":\"v-76d9104a#定义\",\"820\":\"v-76d9104a#示例\",\"821\":\"v-76d9104a#总结\",\"822\":\"v-76d9104a@0\",\"823\":\"v-76d9104a@1\",\"824\":\"v-661b70cf\",\"825\":\"v-661b70cf#用法\",\"826\":\"v-661b70cf#优点\",\"827\":\"v-661b70cf#示例\",\"828\":\"v-661b70cf#总结\",\"829\":\"v-661b70cf@0\",\"830\":\"v-661b70cf@1\",\"831\":\"v-fd75a52c\",\"832\":\"v-fd75a52c#用法\",\"833\":\"v-fd75a52c#示例\",\"834\":\"v-fd75a52c#总结\",\"835\":\"v-fd75a52c@0\",\"836\":\"v-fd75a52c@1\",\"837\":\"v-315de7c8\",\"838\":\"v-315de7c8#示例\",\"839\":\"v-315de7c8#总结\",\"840\":\"v-315de7c8@0\",\"841\":\"v-315de7c8@1\",\"842\":\"v-72733132\",\"843\":\"v-72733132#用法\",\"844\":\"v-72733132#示例\",\"845\":\"v-72733132#总结\",\"846\":\"v-72733132@0\",\"847\":\"v-72733132@1\",\"848\":\"v-38facdc4\",\"849\":\"v-38facdc4#用法\",\"850\":\"v-38facdc4#总结\",\"851\":\"v-38facdc4@0\",\"852\":\"v-38facdc4@1\",\"853\":\"v-5d98f0ea\",\"854\":\"v-5d98f0ea#用法\",\"855\":\"v-5d98f0ea#示例\",\"856\":\"v-5d98f0ea#总结\",\"857\":\"v-5d98f0ea@0\",\"858\":\"v-5d98f0ea@1\",\"859\":\"v-f2384f3c\",\"860\":\"v-f2384f3c#用法\",\"861\":\"v-f2384f3c#示例\",\"862\":\"v-f2384f3c#总结\",\"863\":\"v-f2384f3c@0\",\"864\":\"v-f2384f3c@1\",\"865\":\"v-12590df2\",\"866\":\"v-12590df2#用法\",\"867\":\"v-12590df2#示例\",\"868\":\"v-12590df2#总结\",\"869\":\"v-12590df2@0\",\"870\":\"v-12590df2@1\",\"871\":\"v-5bc4ac66\",\"872\":\"v-5bc4ac66#定义\",\"873\":\"v-5bc4ac66#用处\",\"874\":\"v-5bc4ac66#实现\",\"875\":\"v-5bc4ac66#另一种实现\",\"876\":\"v-5bc4ac66#总结\",\"877\":\"v-5bc4ac66@0\",\"878\":\"v-5bc4ac66@1\",\"879\":\"v-69c0f5be\",\"880\":\"v-69c0f5be#定义\",\"881\":\"v-69c0f5be#用处\",\"882\":\"v-69c0f5be#实现\",\"883\":\"v-69c0f5be#简单工厂\",\"884\":\"v-69c0f5be#总结\",\"885\":\"v-69c0f5be@0\",\"886\":\"v-69c0f5be@1\",\"887\":\"v-7416be34\",\"888\":\"v-7416be34#定义\",\"889\":\"v-7416be34#用处\",\"890\":\"v-7416be34#实现\",\"891\":\"v-7416be34#总结\",\"892\":\"v-7416be34@0\",\"893\":\"v-7416be34@1\",\"894\":\"v-905690c6\",\"895\":\"v-905690c6#定义\",\"896\":\"v-905690c6#用处\",\"897\":\"v-905690c6#实现\",\"898\":\"v-905690c6#饿汉式\",\"899\":\"v-905690c6#懒汉式\",\"900\":\"v-905690c6#总结\",\"901\":\"v-905690c6@0\",\"902\":\"v-905690c6@1\",\"903\":\"v-964b6834\",\"904\":\"v-964b6834#用处\",\"905\":\"v-964b6834#实现\",\"906\":\"v-964b6834#总结\",\"907\":\"v-964b6834@0\",\"908\":\"v-964b6834@1\",\"909\":\"v-130a3318\",\"910\":\"v-130a3318#实现\",\"911\":\"v-130a3318#总结\",\"912\":\"v-130a3318@0\",\"913\":\"v-130a3318@1\",\"914\":\"v-6484f0ae\",\"915\":\"v-6484f0ae#用法\",\"916\":\"v-6484f0ae#总结\",\"917\":\"v-6484f0ae@0\",\"918\":\"v-6484f0ae@1\",\"919\":\"v-07d89b7a\",\"920\":\"v-07d89b7a#用法\",\"921\":\"v-07d89b7a#示例\",\"922\":\"v-07d89b7a#总结\",\"923\":\"v-07d89b7a@0\",\"924\":\"v-07d89b7a@1\",\"925\":\"v-7d8747fa\",\"926\":\"v-7d8747fa#定义\",\"927\":\"v-7d8747fa#用法\",\"928\":\"v-7d8747fa#总结\",\"929\":\"v-7d8747fa@0\",\"930\":\"v-7d8747fa@1\",\"931\":\"v-26aaad0a\",\"932\":\"v-26aaad0a#用法\",\"933\":\"v-26aaad0a#示例\",\"934\":\"v-26aaad0a#总结\",\"935\":\"v-26aaad0a@0\",\"936\":\"v-26aaad0a@1\",\"937\":\"v-741ecf27\",\"938\":\"v-741ecf27#用法\",\"939\":\"v-741ecf27#示例\",\"940\":\"v-741ecf27#总结\",\"941\":\"v-741ecf27@0\",\"942\":\"v-741ecf27@1\",\"943\":\"v-6e1e1211\",\"944\":\"v-6e1e1211#选择排序\",\"945\":\"v-6e1e1211#冒泡排序\",\"946\":\"v-6e1e1211#插入排序\",\"947\":\"v-6e1e1211#希尔排序-改进的插入排序\",\"948\":\"v-6e1e1211#归并排序\",\"949\":\"v-6e1e1211#快速排序\",\"950\":\"v-6e1e1211#堆排序\",\"951\":\"v-6e1e1211@0\",\"952\":\"v-6e1e1211@1\",\"953\":\"v-5e01f85f\",\"954\":\"v-5e01f85f@0\",\"955\":\"v-5e01f85f@1\",\"956\":\"v-79877d44\",\"957\":\"v-79877d44#安装\",\"958\":\"v-79877d44#快速开始\",\"959\":\"v-79877d44#mock变量\",\"960\":\"v-79877d44#mock函数-方法\",\"961\":\"v-79877d44#禁用内联优化\",\"962\":\"v-79877d44#重复mock问题\",\"963\":\"v-79877d44@0\",\"964\":\"v-79877d44@1\",\"965\":\"v-e8137298\",\"966\":\"v-e8137298#单测\",\"967\":\"v-e8137298#单测函数\",\"968\":\"v-e8137298#测试组\",\"969\":\"v-e8137298#测试覆盖率\",\"970\":\"v-e8137298#基准测试\",\"971\":\"v-e8137298#网络测试\",\"972\":\"v-e8137298#httptest\",\"973\":\"v-e8137298#gock\",\"974\":\"v-e8137298#mysql和redis单测\",\"975\":\"v-e8137298#go-sqlmock\",\"976\":\"v-e8137298#miniredis\",\"977\":\"v-e8137298#gomock-模拟接口行为\",\"978\":\"v-e8137298#使用monkey打桩\",\"979\":\"v-e8137298#编写可测试的代码\",\"980\":\"v-e8137298#接口抽象进行解耦\",\"981\":\"v-e8137298#依赖注入代替隐式依赖\",\"982\":\"v-e8137298#solid原则\",\"983\":\"v-e8137298@0\",\"984\":\"v-e8137298@1\",\"985\":\"v-fbe29fe4\",\"986\":\"v-fbe29fe4@0\",\"987\":\"v-fbe29fe4@1\",\"988\":\"v-1a96dc53\",\"989\":\"v-1a96dc53#入门过程\",\"990\":\"v-1a96dc53#为命令添加具体的功能\",\"991\":\"v-1a96dc53#为-command-添加选项-flags\",\"992\":\"v-1a96dc53#一个完整的-demo\",\"993\":\"v-1a96dc53#在-commnad-执行前后执行额外的操作\",\"994\":\"v-1a96dc53#总结\",\"995\":\"v-1a96dc53@0\",\"996\":\"v-1a96dc53@1\",\"997\":\"v-5a878cac\",\"998\":\"v-5a878cac#定时任务\",\"999\":\"v-5a878cac#使用-robfig-cron-库\",\"1000\":\"v-5a878cac#安装\",\"1001\":\"v-5a878cac#使用\",\"1002\":\"v-5a878cac#时间格式\",\"1003\":\"v-5a878cac#预定义规则\",\"1004\":\"v-5a878cac#定时器\",\"1005\":\"v-5a878cac#job-接口\",\"1006\":\"v-5a878cac@0\",\"1007\":\"v-5a878cac@1\",\"1008\":\"v-dc2ab450\",\"1009\":\"v-dc2ab450#什么是有限状态机\",\"1010\":\"v-dc2ab450#利用有限状态机编写易于维护的代码\",\"1011\":\"v-dc2ab450#小结\",\"1012\":\"v-dc2ab450@0\",\"1013\":\"v-dc2ab450@1\",\"1014\":\"v-6fa66932\",\"1015\":\"v-6fa66932@0\",\"1016\":\"v-6fa66932@1\",\"1017\":\"v-62532876\",\"1018\":\"v-62532876#下载\",\"1019\":\"v-62532876#使用\",\"1020\":\"v-62532876#总结\",\"1021\":\"v-62532876@0\",\"1022\":\"v-62532876@1\",\"1023\":\"v-ff67f860\",\"1024\":\"v-ff67f860#make简介\",\"1025\":\"v-ff67f860#makefile简介\",\"1026\":\"v-ff67f860#makefile-在go程序中使用\",\"1027\":\"v-ff67f860#goreleaser-一键发布你的go代码\",\"1028\":\"v-ff67f860@0\",\"1029\":\"v-ff67f860@1\",\"1030\":\"v-139649e0\",\"1031\":\"v-139649e0@0\",\"1032\":\"v-139649e0@1\",\"1033\":\"v-1db99d9a\",\"1034\":\"v-1db99d9a#构造一个限流器\",\"1035\":\"v-1db99d9a#wait-waitn\",\"1036\":\"v-1db99d9a#allow-allown\",\"1037\":\"v-1db99d9a#reserve-reserven\",\"1038\":\"v-1db99d9a#动态调整速率\",\"1039\":\"v-1db99d9a@0\",\"1040\":\"v-1db99d9a@1\",\"1041\":\"v-66134bc6\",\"1042\":\"v-66134bc6@0\",\"1043\":\"v-66134bc6@1\",\"1044\":\"v-1539dda3\",\"1045\":\"v-1539dda3#cookie-session-认证\",\"1046\":\"v-1539dda3#token-认证\",\"1047\":\"v-1539dda3#jwt-认证\",\"1048\":\"v-1539dda3@0\",\"1049\":\"v-1539dda3@1\",\"1050\":\"v-7eae6995\",\"1051\":\"v-7eae6995#gin的default函数\",\"1052\":\"v-7eae6995#engine-use函数\",\"1053\":\"v-7eae6995#注册事件处理\",\"1054\":\"v-7eae6995#启动-r-run\",\"1055\":\"v-7eae6995#http-listenandserve方法\",\"1056\":\"v-7eae6995#中间件与handler\",\"1057\":\"v-7eae6995#总结\",\"1058\":\"v-7eae6995@0\",\"1059\":\"v-7eae6995@1\",\"1060\":\"v-aa99d168\",\"1061\":\"v-aa99d168@0\",\"1062\":\"v-aa99d168@1\",\"1063\":\"v-e7a26318\",\"1064\":\"v-e7a26318@0\",\"1065\":\"v-e7a26318@1\",\"1066\":\"v-e438b1da\",\"1067\":\"v-e438b1da#安装grpc\",\"1068\":\"v-e438b1da#总结\",\"1069\":\"v-e438b1da@0\",\"1070\":\"v-e438b1da@1\",\"1071\":\"v-e0cf009c\",\"1072\":\"v-e0cf009c#流式grpc\",\"1073\":\"v-e0cf009c#grpc对比websocket\",\"1074\":\"v-e0cf009c#grpc的错误处理\",\"1075\":\"v-e0cf009c#总结\",\"1076\":\"v-e0cf009c@0\",\"1077\":\"v-e0cf009c@1\",\"1078\":\"v-dd654f5e\",\"1079\":\"v-dd654f5e#基本示例\",\"1080\":\"v-dd654f5e#transcoding\",\"1081\":\"v-dd654f5e@0\",\"1082\":\"v-dd654f5e@1\",\"1083\":\"v-d9fb9e20\",\"1084\":\"v-d9fb9e20#grpc基础语法教程\",\"1085\":\"v-d9fb9e20#grpc导入别的包去使用\",\"1086\":\"v-d9fb9e20#any包\",\"1087\":\"v-d9fb9e20#timestamp包\",\"1088\":\"v-d9fb9e20#field-mask-包\",\"1089\":\"v-d9fb9e20#总结\",\"1090\":\"v-d9fb9e20@0\",\"1091\":\"v-d9fb9e20@1\",\"1092\":\"v-d691ece2\",\"1093\":\"v-d691ece2#元数据处理\",\"1094\":\"v-d691ece2#发送接收元数据\",\"1095\":\"v-d691ece2#设置header和trailer\",\"1096\":\"v-d691ece2#拦截中间件\",\"1097\":\"v-d691ece2#注册拦截器\",\"1098\":\"v-d691ece2#加密处理\",\"1099\":\"v-d691ece2#grpc的加密处理中间件\",\"1100\":\"v-d691ece2#grpc拦截器和gin的拦截器对比\",\"1101\":\"v-d691ece2#总结\",\"1102\":\"v-d691ece2@0\",\"1103\":\"v-d691ece2@1\",\"1104\":\"v-438e754c\",\"1105\":\"v-438e754c#docker启动redis\",\"1106\":\"v-438e754c#什么是lua脚本\",\"1107\":\"v-438e754c#redis中lua脚本的debug\",\"1108\":\"v-438e754c#go语言操作redis\",\"1109\":\"v-438e754c#总结\",\"1110\":\"v-438e754c@0\",\"1111\":\"v-438e754c@1\",\"1112\":\"v-57ad0ed6\",\"1113\":\"v-57ad0ed6@0\",\"1114\":\"v-57ad0ed6@1\",\"1115\":\"v-165c4183\",\"1116\":\"v-165c4183#what-is-concurrency\",\"1117\":\"v-165c4183#what-is-parallelism-and-how-is-it-different-from-concurrency\",\"1118\":\"v-165c4183#concurrency-and-parallelism-a-technical-point-of-view\",\"1119\":\"v-165c4183#what-are-goroutines\",\"1120\":\"v-165c4183#starting-multiple-goroutines\",\"1121\":\"v-165c4183#what-are-channel\",\"1122\":\"v-165c4183#declaring-channels\",\"1123\":\"v-165c4183#sending-and-receiving-from-a-channel\",\"1124\":\"v-165c4183#channel-example-program\",\"1125\":\"v-165c4183#deadlock\",\"1126\":\"v-165c4183#unidirectional-channels\",\"1127\":\"v-165c4183#closing-channels-and-for-range-loops-on-channels\",\"1128\":\"v-165c4183@0\",\"1129\":\"v-165c4183@1\",\"1130\":\"v-5aa00416\",\"1131\":\"v-5aa00416#gmp\",\"1132\":\"v-5aa00416#g\",\"1133\":\"v-5aa00416#m\",\"1134\":\"v-5aa00416#p\",\"1135\":\"v-5aa00416#创建-goroutine\",\"1136\":\"v-5aa00416#chan-底层\",\"1137\":\"v-5aa00416#数据结构\",\"1138\":\"v-5aa00416#interface-接口的底层实现\",\"1139\":\"v-5aa00416#数据结构-1\",\"1140\":\"v-5aa00416#类型转换\",\"1141\":\"v-5aa00416#go同步原句与锁\",\"1142\":\"v-5aa00416#mutex\",\"1143\":\"v-5aa00416#rwmutex\",\"1144\":\"v-5aa00416#waitgroup\",\"1145\":\"v-5aa00416#once\",\"1146\":\"v-5aa00416#cond\",\"1147\":\"v-5aa00416#内存分配\",\"1148\":\"v-5aa00416#内存布局\",\"1149\":\"v-5aa00416#小于32kb的内存分配\",\"1150\":\"v-5aa00416#小于16kb对象的分配\",\"1151\":\"v-5aa00416@0\",\"1152\":\"v-5aa00416@1\",\"1153\":\"v-5da90d53\",\"1154\":\"v-5da90d53@0\",\"1155\":\"v-5da90d53@1\",\"1156\":\"v-6f8bc77d\",\"1157\":\"v-6f8bc77d@0\",\"1158\":\"v-6f8bc77d@1\",\"1159\":\"v-00e31ada\",\"1160\":\"v-00e31ada#介绍\",\"1161\":\"v-00e31ada#简单例子\",\"1162\":\"v-00e31ada#var形式\",\"1163\":\"v-00e31ada#自定义类型解析\",\"1164\":\"v-00e31ada@0\",\"1165\":\"v-00e31ada@1\",\"1166\":\"v-18827cdf\",\"1167\":\"v-18827cdf#print-系列函数\",\"1168\":\"v-18827cdf#sprint-系列函数\",\"1169\":\"v-18827cdf#fprint-系列函数\",\"1170\":\"v-18827cdf#errors\",\"1171\":\"v-18827cdf#scan-系列函数\",\"1172\":\"v-18827cdf#fscan-系列函数\",\"1173\":\"v-18827cdf#sscan-系列函数\",\"1174\":\"v-18827cdf#总结\",\"1175\":\"v-18827cdf@0\",\"1176\":\"v-18827cdf@1\",\"1177\":\"v-4931fef0\",\"1178\":\"v-4931fef0#常用函数\",\"1179\":\"v-4931fef0#logger类型配置日志\",\"1180\":\"v-4931fef0#配置日志前缀\",\"1181\":\"v-4931fef0#配置日志输出位置\",\"1182\":\"v-4931fef0#创建自己的logger\",\"1183\":\"v-4931fef0#总结\",\"1184\":\"v-4931fef0@0\",\"1185\":\"v-4931fef0@1\",\"1186\":\"v-76b39f2f\",\"1187\":\"v-76b39f2f#反射怎么用\",\"1188\":\"v-76b39f2f#type\",\"1189\":\"v-76b39f2f#value\",\"1190\":\"v-76b39f2f#通过反射来更改变量的底层值\",\"1191\":\"v-76b39f2f#isvaild\",\"1192\":\"v-76b39f2f#结构体反射\",\"1193\":\"v-76b39f2f#通过reflect自动注册http路由\",\"1194\":\"v-76b39f2f#总结\",\"1195\":\"v-76b39f2f@0\",\"1196\":\"v-76b39f2f@1\",\"1197\":\"v-6621bbf2\",\"1198\":\"v-6621bbf2#简要介绍\",\"1199\":\"v-6621bbf2#appendxxx-简要介绍\",\"1200\":\"v-6621bbf2#quotexxx-简要介绍quotexxx-函数是-strconv-包中的一组函数-用于将基本类型的值转换为其在-go-语言中的源代码表示形式-并返回该表示形式的字符串。\",\"1201\":\"v-6621bbf2#总结\",\"1202\":\"v-6621bbf2@0\",\"1203\":\"v-6621bbf2@1\",\"1204\":\"v-5c5ebc19\",\"1205\":\"v-5c5ebc19#简要介绍\",\"1206\":\"v-5c5ebc19#函数\",\"1207\":\"v-5c5ebc19#duration\",\"1208\":\"v-5c5ebc19#location\",\"1209\":\"v-5c5ebc19#month\",\"1210\":\"v-5c5ebc19#parseerror\",\"1211\":\"v-5c5ebc19#ticker\",\"1212\":\"v-5c5ebc19#time类型\",\"1213\":\"v-5c5ebc19#总结\",\"1214\":\"v-5c5ebc19@0\",\"1215\":\"v-5c5ebc19@1\",\"1216\":\"v-3157fb22\",\"1217\":\"v-3157fb22#介绍mongodb\",\"1218\":\"v-3157fb22#相关概念\",\"1219\":\"v-3157fb22#mongodb安装以及简单上手\",\"1220\":\"v-3157fb22#go语言操作mongo\",\"1221\":\"v-3157fb22#要求\",\"1222\":\"v-3157fb22#功能\",\"1223\":\"v-3157fb22#安装\",\"1224\":\"v-3157fb22#usage\",\"1225\":\"v-3157fb22#开始\",\"1226\":\"v-3157fb22#创建索引\",\"1227\":\"v-3157fb22#创建索引-1\",\"1228\":\"v-3157fb22#插入一个文档\",\"1229\":\"v-3157fb22#查找一个文档\",\"1230\":\"v-3157fb22#删除文档\",\"1231\":\"v-3157fb22#插入多条数据\",\"1232\":\"v-3157fb22#批量查找sort和limit\",\"1233\":\"v-3157fb22#count\",\"1234\":\"v-3157fb22#update\",\"1235\":\"v-3157fb22#select\",\"1236\":\"v-3157fb22#aggregate\",\"1237\":\"v-3157fb22#建立连接时支持所有-mongodb-的options\",\"1238\":\"v-3157fb22#事务\",\"1239\":\"v-3157fb22#预定义操作符\",\"1240\":\"v-3157fb22#hooks\",\"1241\":\"v-3157fb22#自动化更新fields\",\"1242\":\"v-3157fb22#validation-tags-基于tag的字段验证\",\"1243\":\"v-3157fb22@0\",\"1244\":\"v-3157fb22@1\",\"1245\":\"v-ee151426\",\"1246\":\"v-ee151426@0\",\"1247\":\"v-ee151426@1\",\"1248\":\"v-e1e3da16\",\"1249\":\"v-69a86107\",\"1250\":\"v-41ad8c23\",\"1251\":\"v-1aaf0020\",\"1252\":\"v-88d61c22\",\"1253\":\"v-85603d8c\",\"1254\":\"v-2aef844c\",\"1255\":\"v-44a8a86c\",\"1256\":\"v-e5f47924\",\"1257\":\"v-44aa0624\",\"1258\":\"v-62405b3d\",\"1259\":\"v-33465e08\",\"1260\":\"v-42aebd54\",\"1261\":\"v-0b04583d\",\"1262\":\"v-2897b160\",\"1263\":\"v-368344da\",\"1264\":\"v-01742aa6\",\"1265\":\"v-7dc9dfbb\",\"1266\":\"v-7915bbed\",\"1267\":\"v-2d1aaa94\",\"1268\":\"v-ff059b98\",\"1269\":\"v-561f115c\",\"1270\":\"v-121f466e\",\"1271\":\"v-1606be80\",\"1272\":\"v-af437cd2\",\"1273\":\"v-1410c3e8\",\"1274\":\"v-3d42f458\",\"1275\":\"v-1410c407\",\"1276\":\"v-5bb0b1ce\",\"1277\":\"v-1410c426\",\"1278\":\"v-670c59da\",\"1279\":\"v-1410c445\",\"1280\":\"v-081de6ca\",\"1281\":\"v-1410c464\",\"1282\":\"v-f9338488\",\"1283\":\"v-596a1a0f\",\"1284\":\"v-75a9ea48\",\"1285\":\"v-558b1c03\",\"1286\":\"v-1582d2de\",\"1287\":\"v-1f7c2346\",\"1288\":\"v-0e00f24e\",\"1289\":\"v-06dee026\",\"1290\":\"v-36c34d82\",\"1291\":\"v-6aedfa76\",\"1292\":\"v-f57efbb0\",\"1293\":\"v-22d3e82c\",\"1294\":\"v-49b1e519\",\"1295\":\"v-07e6c450\",\"1296\":\"v-3615a205\",\"1297\":\"v-fa3fa1b0\",\"1298\":\"v-614d0189\",\"1299\":\"v-522ca6fe\",\"1300\":\"v-3d1150b4\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[null,null,1],\"3\":[1,43],\"4\":[1,49],\"5\":[null,null,1],\"6\":[null,null,1],\"7\":[1],\"8\":[1,40],\"9\":[1,33],\"10\":[2,23],\"11\":[1,33],\"12\":[null,null,1],\"13\":[1],\"14\":[null,null,1],\"15\":[null,null,1],\"16\":[2,4],\"17\":[1,4],\"18\":[1],\"19\":[1,15],\"20\":[1],\"21\":[3,4],\"22\":[1],\"23\":[4,22],\"24\":[2],\"25\":[3,15],\"26\":[3,57],\"27\":[2,37],\"28\":[2,23],\"29\":[null,null,1],\"30\":[null,null,2],\"31\":[2],\"32\":[1],\"33\":[1,4],\"34\":[2,16],\"35\":[1],\"36\":[2,19],\"37\":[2,9],\"38\":[1],\"39\":[2,8],\"40\":[2,22],\"41\":[2,6],\"42\":[2],\"43\":[null,null,1],\"44\":[null,null,2],\"45\":[2,23],\"46\":[1,67],\"47\":[1,74],\"48\":[1,87],\"49\":[1,83],\"50\":[1,45],\"51\":[1,93],\"52\":[1,42],\"53\":[1,32],\"54\":[1,47],\"55\":[1,226],\"56\":[3,54],\"57\":[1,73],\"58\":[2,175],\"59\":[1,25],\"60\":[3,151],\"61\":[1,23],\"62\":[1,11],\"63\":[1,10],\"64\":[1,43],\"65\":[1,18],\"66\":[1,52],\"67\":[1,6],\"68\":[1,71],\"69\":[1,34],\"70\":[1,31],\"71\":[1,18],\"72\":[1,11],\"73\":[1,18],\"74\":[1,146],\"75\":[1,62],\"76\":[1,99],\"77\":[1,24],\"78\":[1,45],\"79\":[null,null,1],\"80\":[null,null,1],\"81\":[3,3],\"82\":[null,null,1],\"83\":[null,null,1],\"84\":[2,1],\"85\":[null,null,2],\"86\":[2,2],\"87\":[null,null,2],\"88\":[1,2],\"89\":[null,null,1],\"90\":[4,225],\"91\":[null,null,2],\"92\":[null,null,1],\"93\":[2,7],\"94\":[2,59],\"95\":[1,28],\"96\":[1],\"97\":[null,null,1],\"98\":[null,null,1],\"99\":[2,3],\"100\":[null,null,1],\"101\":[null,null,1],\"102\":[2],\"103\":[null,null,1],\"104\":[null,null,1],\"105\":[1,32],\"106\":[null,null,1],\"107\":[null,null,1],\"108\":[2,6],\"109\":[2,31],\"110\":[2,7],\"111\":[1,45],\"112\":[1,29],\"113\":[1,5],\"114\":[1,30],\"115\":[1,9],\"116\":[1,65],\"117\":[1,41],\"118\":[1,42],\"119\":[1,12],\"120\":[1,12],\"121\":[1,26],\"122\":[1,28],\"123\":[1,7],\"124\":[1,8],\"125\":[1,13],\"126\":[1,23],\"127\":[1,9],\"128\":[1,18],\"129\":[3,21],\"130\":[1,2],\"131\":[2,25],\"132\":[1,29],\"133\":[1,21],\"134\":[1,16],\"135\":[1,20],\"136\":[1,10],\"137\":[3,8],\"138\":[1,14],\"139\":[1,11],\"140\":[1,9],\"141\":[null,null,1],\"142\":[null,null,1],\"143\":[3,8],\"144\":[2,18],\"145\":[null,null,1],\"146\":[null,null,3],\"147\":[3,9],\"148\":[3,18],\"149\":[2,8],\"150\":[1,166],\"151\":[1,66],\"152\":[1,292],\"153\":[1,25],\"154\":[null,null,1],\"155\":[null,null,4],\"156\":[3,13],\"157\":[1,20],\"158\":[4,8],\"159\":[4,14],\"160\":[4,7],\"161\":[4,6],\"162\":[4,10],\"163\":[5,47],\"164\":[5,31],\"165\":[4,10],\"166\":[2,67],\"167\":[null,null,1],\"168\":[null,null,3],\"169\":[3,103],\"170\":[null,null,1],\"171\":[null,null,1],\"172\":[1,3],\"173\":[1,5],\"174\":[1,14],\"175\":[1,25],\"176\":[1,28],\"177\":[1,45],\"178\":[null,null,1],\"179\":[null,null,1],\"180\":[2,19],\"181\":[1,2],\"182\":[1,16],\"183\":[1,3],\"184\":[1,25],\"185\":[1,36],\"186\":[1,10],\"187\":[1,24],\"188\":[1,24],\"189\":[null,null,1],\"190\":[null,null,1],\"191\":[2,55],\"192\":[2,162],\"193\":[1,116],\"194\":[2,121],\"195\":[2,84],\"196\":[3,2],\"197\":[2,2],\"198\":[2],\"199\":[1,42],\"200\":[1,42],\"201\":[null,null,2],\"202\":[null,null,4],\"203\":[1],\"204\":[null,null,1],\"205\":[null,null,2],\"206\":[1,54],\"207\":[1],\"208\":[2,42],\"209\":[2,34],\"210\":[2,57],\"211\":[2,36],\"212\":[2,55],\"213\":[2,52],\"214\":[2,44],\"215\":[2,25],\"216\":[2,46],\"217\":[2,44],\"218\":[2,40],\"219\":[2,39],\"220\":[2,17],\"221\":[null,null,1],\"222\":[null,null,2],\"223\":[1,6],\"224\":[2,22],\"225\":[1],\"226\":[2,22],\"227\":[2,23],\"228\":[2,40],\"229\":[2,27],\"230\":[2,45],\"231\":[2,46],\"232\":[2,37],\"233\":[1],\"234\":[2],\"235\":[1,143],\"236\":[1,104],\"237\":[2,57],\"238\":[3,26],\"239\":[2,73],\"240\":[2,56],\"241\":[1,55],\"242\":[3,60],\"243\":[2,50],\"244\":[2,56],\"245\":[2,38],\"246\":[2,28],\"247\":[1],\"248\":[2,44],\"249\":[2,42],\"250\":[3,27],\"251\":[1],\"252\":[2,124],\"253\":[2,59],\"254\":[2,97],\"255\":[2,38],\"256\":[2,28],\"257\":[2,89],\"258\":[2,64],\"259\":[2,97],\"260\":[2,95],\"261\":[2,33],\"262\":[2,60],\"263\":[2,89],\"264\":[2,149],\"265\":[2,102],\"266\":[2,138],\"267\":[2,102],\"268\":[2,87],\"269\":[null,null,1],\"270\":[null,null,3],\"271\":[1,9],\"272\":[null,null,1],\"273\":[null,null,2],\"274\":[2,20],\"275\":[3,53],\"276\":[3,86],\"277\":[3,49],\"278\":[3,39],\"279\":[3,48],\"280\":[2,39],\"281\":[3,23],\"282\":[3,22],\"283\":[2,47],\"284\":[2,71],\"285\":[3,51],\"286\":[3,45],\"287\":[2,67],\"288\":[2,46],\"289\":[2,23],\"290\":[2,37],\"291\":[2,69],\"292\":[2,42],\"293\":[2,43],\"294\":[2,48],\"295\":[2,35],\"296\":[2,39],\"297\":[2,80],\"298\":[2,33],\"299\":[2,42],\"300\":[2,71],\"301\":[2,51],\"302\":[3,48],\"303\":[3,39],\"304\":[3,44],\"305\":[3,51],\"306\":[2,17],\"307\":[2,46],\"308\":[2,37],\"309\":[2,1],\"310\":[2,1],\"311\":[2,48],\"312\":[2,35],\"313\":[2,47],\"314\":[2,1],\"315\":[2,37],\"316\":[5,21],\"317\":[2,50],\"318\":[3,60],\"319\":[2,51],\"320\":[2,47],\"321\":[2,50],\"322\":[2,36],\"323\":[2,42],\"324\":[2,35],\"325\":[3,50],\"326\":[4,77],\"327\":[2,34],\"328\":[3,38],\"329\":[3,45],\"330\":[3,40],\"331\":[3,39],\"332\":[2,44],\"333\":[3,31],\"334\":[3,47],\"335\":[3,39],\"336\":[3,56],\"337\":[2,24],\"338\":[null,null,1],\"339\":[null,null,2],\"340\":[2,11],\"341\":[2,46],\"342\":[1,11],\"343\":[1,38],\"344\":[2],\"345\":[1,33],\"346\":[2],\"347\":[1,10],\"348\":[1,13],\"349\":[1,43],\"350\":[1,40],\"351\":[1,18],\"352\":[1,33],\"353\":[2,100],\"354\":[5,2],\"355\":[1,66],\"356\":[2,90],\"357\":[4,260],\"358\":[3,231],\"359\":[2,62],\"360\":[2,332],\"361\":[1,148],\"362\":[1,273],\"363\":[1,2],\"364\":[1,46],\"365\":[1,10],\"366\":[1,37],\"367\":[1,35],\"368\":[1,63],\"369\":[3,69],\"370\":[1,56],\"371\":[2,45],\"372\":[2,28],\"373\":[3,51],\"374\":[1,67],\"375\":[2],\"376\":[3,75],\"377\":[3,294],\"378\":[null,null,1],\"379\":[null,null,1],\"380\":[1,9],\"381\":[1,21],\"382\":[1,34],\"383\":[1,88],\"384\":[1,109],\"385\":[2,156],\"386\":[1,125],\"387\":[2,56],\"388\":[1,60],\"389\":[null,null,1],\"390\":[null,null,2],\"391\":[2],\"392\":[1],\"393\":[3,74],\"394\":[1,42],\"395\":[1,167],\"396\":[1,76],\"397\":[1,52],\"398\":[1,57],\"399\":[1,57],\"400\":[1,29],\"401\":[1],\"402\":[1,76],\"403\":[1,91],\"404\":[2,30],\"405\":[1,78],\"406\":[2,31],\"407\":[1,57],\"408\":[2,18],\"409\":[1,52],\"410\":[2,96],\"411\":[1,67],\"412\":[3,76],\"413\":[1,302],\"414\":[2,148],\"415\":[1],\"416\":[1,58],\"417\":[1,50],\"418\":[1,46],\"419\":[1,46],\"420\":[3,27],\"421\":[1,9],\"422\":[1,95],\"423\":[1,69],\"424\":[1,259],\"425\":[1,392],\"426\":[1,629],\"427\":[1,157],\"428\":[1,164],\"429\":[1,66],\"430\":[1,8],\"431\":[1,57],\"432\":[1,87],\"433\":[1,154],\"434\":[1,57],\"435\":[1,192],\"436\":[1,124],\"437\":[3,78],\"438\":[null,null,1],\"439\":[null,null,1],\"440\":[1],\"441\":[null,null,1],\"442\":[null,null,1],\"443\":[1],\"444\":[null,null,1],\"445\":[null,null,1],\"446\":[1,48],\"447\":[2,190],\"448\":[4,171],\"449\":[1,86],\"450\":[1,135],\"451\":[2,66],\"452\":[null,null,1],\"453\":[null,null,1],\"454\":[2,24],\"455\":[1,10],\"456\":[1,28],\"457\":[1,32],\"458\":[1,56],\"459\":[1,56],\"460\":[2,64],\"461\":[2,52],\"462\":[2,39],\"463\":[2,70],\"464\":[1,12],\"465\":[null,null,1],\"466\":[null,null,1],\"467\":[2,50],\"468\":[3,120],\"469\":[1,18],\"470\":[1,18],\"471\":[2,56],\"472\":[2,28],\"473\":[1,68],\"474\":[1,50],\"475\":[1,59],\"476\":[1,5],\"477\":[3,28],\"478\":[3,37],\"479\":[3,50],\"480\":[3,72],\"481\":[3,82],\"482\":[3,22],\"483\":[1,96],\"484\":[4,6],\"485\":[1,17],\"486\":[1,16],\"487\":[1,17],\"488\":[null,null,1],\"489\":[null,null,1],\"490\":[2,6],\"491\":[null,null,1],\"492\":[null,null,1],\"493\":[1,12],\"494\":[2,78],\"495\":[null,null,1],\"496\":[null,null,1],\"497\":[2,3],\"498\":[null,null,1],\"499\":[null,null,4],\"500\":[2,76],\"501\":[3],\"502\":[3,15],\"503\":[3,36],\"504\":[3,26],\"505\":[1,79],\"506\":[null,null,1],\"507\":[null,null,2],\"508\":[2,4],\"509\":[1,50],\"510\":[1,24],\"511\":[1,39],\"512\":[1,69],\"513\":[1,37],\"514\":[1,66],\"515\":[1,31],\"516\":[1,154],\"517\":[1,68],\"518\":[null,null,1],\"519\":[1,120],\"520\":[2],\"521\":[1,41],\"522\":[null,null,3],\"523\":[1,1003],\"524\":[null,null,1],\"525\":[1,100],\"526\":[null,null,1],\"527\":[null,null,2],\"528\":[1,126],\"529\":[null,null,1],\"530\":[null,null,1],\"531\":[1,36],\"532\":[1,56],\"533\":[1,135],\"534\":[1,183],\"535\":[null,null,1],\"536\":[null,null,3],\"537\":[1,239],\"538\":[null,null,1],\"539\":[null,null,2],\"540\":[1,149],\"541\":[null,null,1],\"542\":[null,null,2],\"543\":[2,483],\"544\":[null,null,1],\"545\":[null,null,1],\"546\":[1],\"547\":[2,440],\"548\":[3,168],\"549\":[8,83],\"550\":[12,54],\"551\":[2,148],\"552\":[1,48],\"553\":[1,19],\"554\":[1,12],\"555\":[null,null,1],\"556\":[null,null,2],\"557\":[2,130],\"558\":[null,null,1],\"559\":[null,null,1],\"560\":[1,143],\"561\":[null,null,1],\"562\":[null,null,3],\"563\":[1,320],\"564\":[null,null,1],\"565\":[null,null,2],\"566\":[1,16],\"567\":[null,null,1],\"568\":[null,null,1],\"569\":[2,93],\"570\":[1,88],\"571\":[1,108],\"572\":[1,120],\"573\":[4,213],\"574\":[1,107],\"575\":[1,191],\"576\":[1,51],\"577\":[1,189],\"578\":[3,114],\"579\":[1,60],\"580\":[1,96],\"581\":[1,60],\"582\":[1,22],\"583\":[1,46],\"584\":[1,81],\"585\":[2,177],\"586\":[1,57],\"587\":[1,71],\"588\":[2,108],\"589\":[null,null,2],\"590\":[null,null,2],\"591\":[2,43],\"592\":[1,90],\"593\":[null,null,1],\"594\":[null,null,3],\"595\":[1,20],\"596\":[1,8],\"597\":[1],\"598\":[1,16],\"599\":[1,2],\"600\":[null,null,1],\"601\":[null,null,3],\"602\":[1,9],\"603\":[null,null,1],\"604\":[null,null,3],\"605\":[1,153],\"606\":[null,null,1],\"607\":[null,null,2],\"608\":[1],\"609\":[1,65],\"610\":[1,26],\"611\":[1,41],\"612\":[null,null,1],\"613\":[null,null,2],\"614\":[1,34],\"615\":[1,11],\"616\":[null,null,1],\"617\":[null,null,2],\"618\":[2,30],\"619\":[2,32],\"620\":[2,41],\"621\":[2,26],\"622\":[2,13],\"623\":[2,37],\"624\":[null,null,1],\"625\":[null,null,2],\"626\":[2,96],\"627\":[2,177],\"628\":[2,49],\"629\":[null,null,1],\"630\":[null,null,2],\"631\":[1,141],\"632\":[2,8],\"633\":[2,5],\"634\":[2,18],\"635\":[null,null,1],\"636\":[null,null,2],\"637\":[2,35],\"638\":[2],\"639\":[2,22],\"640\":[1,12],\"641\":[1,10],\"642\":[1,16],\"643\":[1,38],\"644\":[null,null,1],\"645\":[null,null,2],\"646\":[1,166],\"647\":[1,63],\"648\":[1,95],\"649\":[1,56],\"650\":[null,null,1],\"651\":[null,null,2],\"652\":[1],\"653\":[2,75],\"654\":[2,26],\"655\":[1,6],\"656\":[1,5],\"657\":[1,25],\"658\":[null,null,1],\"659\":[null,null,2],\"660\":[1,95],\"661\":[null,null,1],\"662\":[null,null,2],\"663\":[2,55],\"664\":[null,null,1],\"665\":[null,null,3],\"666\":[1,18],\"667\":[null,null,1],\"668\":[null,null,2],\"669\":[1,98],\"670\":[1,7],\"671\":[null,null,1],\"672\":[null,null,3],\"673\":[3,83],\"674\":[1,113],\"675\":[null,null,1],\"676\":[null,null,3],\"677\":[1,88],\"678\":[null,null,1],\"679\":[null,null,2],\"680\":[2,63],\"681\":[null,null,1],\"682\":[null,null,2],\"683\":[1,64],\"684\":[null,null,1],\"685\":[null,null,2],\"686\":[1,63],\"687\":[null,null,1],\"688\":[null,null,2],\"689\":[1,43],\"690\":[null,null,1],\"691\":[null,null,2],\"692\":[1,26],\"693\":[null,null,1],\"694\":[null,null,2],\"695\":[2,46],\"696\":[null,null,1],\"697\":[null,null,3],\"698\":[1,53],\"699\":[null,null,1],\"700\":[null,null,1],\"701\":[4,29],\"702\":[1],\"703\":[2,42],\"704\":[2,58],\"705\":[2,26],\"706\":[5,57],\"707\":[null,null,1],\"708\":[null,null,1],\"709\":[2,42],\"710\":[2,48],\"711\":[1,8],\"712\":[null,null,1],\"713\":[null,null,1],\"714\":[1,27],\"715\":[null,null,1],\"716\":[null,null,1],\"717\":[3,41],\"718\":[1,16],\"719\":[null,null,1],\"720\":[null,null,1],\"721\":[4,99],\"722\":[2,39],\"723\":[1,39],\"724\":[1,33],\"725\":[1,34],\"726\":[null,null,1],\"727\":[null,null,1],\"728\":[1],\"729\":[null,null,1],\"730\":[null,null,2],\"731\":[2,78],\"732\":[null,null,1],\"733\":[null,null,1],\"734\":[1,58],\"735\":[1,11],\"736\":[null,null,1],\"737\":[null,null,1],\"738\":[1,30],\"739\":[1,36],\"740\":[1,22],\"741\":[null,null,1],\"742\":[null,null,1],\"743\":[1,28],\"744\":[null,null,1],\"745\":[null,null,2],\"746\":[2,32],\"747\":[1,8],\"748\":[1,7],\"749\":[null,null,1],\"750\":[null,null,1],\"751\":[2,160],\"752\":[null,null,1],\"753\":[null,null,1],\"754\":[1,40],\"755\":[null,null,1],\"756\":[null,null,1],\"757\":[1,13],\"758\":[1,19],\"759\":[1,43],\"760\":[1,8],\"761\":[1,7],\"762\":[null,null,1],\"763\":[null,null,1],\"764\":[2,32],\"765\":[null,null,1],\"766\":[null,null,1],\"767\":[3,32],\"768\":[null,null,1],\"769\":[null,null,1],\"770\":[1,7],\"771\":[2,116],\"772\":[2,49],\"773\":[2,29],\"774\":[null,null,1],\"775\":[null,null,1],\"776\":[1,34],\"777\":[null,null,1],\"778\":[null,null,1],\"779\":[2,19],\"780\":[null,null,1],\"781\":[null,null,1],\"782\":[1,9],\"783\":[1,12],\"784\":[1,18],\"785\":[null,null,1],\"786\":[null,null,1],\"787\":[1,10],\"788\":[1,34],\"789\":[1,89],\"790\":[null,null,1],\"791\":[null,null,1],\"792\":[1,45],\"793\":[null,null,1],\"794\":[null,null,1],\"795\":[1,50],\"796\":[null,null,1],\"797\":[null,null,1],\"798\":[2,6],\"799\":[2,13],\"800\":[2,25],\"801\":[2,19],\"802\":[null,null,1],\"803\":[null,null,1],\"804\":[1,41],\"805\":[null,null,1],\"806\":[1,51],\"807\":[null,null,1],\"808\":[1,33],\"809\":[null,null,1],\"810\":[1,36],\"811\":[null,null,1],\"812\":[1,4],\"813\":[1,8],\"814\":[1,53],\"815\":[1,5],\"816\":[null,null,1],\"817\":[null,null,3],\"818\":[1,9],\"819\":[1,17],\"820\":[1,79],\"821\":[1,24],\"822\":[null,null,1],\"823\":[null,null,3],\"824\":[1,7],\"825\":[1,12],\"826\":[1,11],\"827\":[1,111],\"828\":[1,21],\"829\":[null,null,1],\"830\":[null,null,3],\"831\":[1,6],\"832\":[1,15],\"833\":[1,65],\"834\":[1,7],\"835\":[null,null,1],\"836\":[null,null,3],\"837\":[1,24],\"838\":[1,66],\"839\":[1,9],\"840\":[null,null,1],\"841\":[null,null,3],\"842\":[1,7],\"843\":[1,17],\"844\":[1,75],\"845\":[1,7],\"846\":[null,null,1],\"847\":[null,null,3],\"848\":[1,25],\"849\":[1,42],\"850\":[1,6],\"851\":[null,null,1],\"852\":[null,null,3],\"853\":[1,7],\"854\":[1,17],\"855\":[1,53],\"856\":[1,6],\"857\":[null,null,1],\"858\":[null,null,3],\"859\":[1,9],\"860\":[1,7],\"861\":[1,27],\"862\":[1,11],\"863\":[null,null,1],\"864\":[null,null,3],\"865\":[1,7],\"866\":[1,16],\"867\":[1,75],\"868\":[1,10],\"869\":[null,null,1],\"870\":[null,null,3],\"871\":[1,4],\"872\":[1,9],\"873\":[1,35],\"874\":[1,36],\"875\":[1,28],\"876\":[1,11],\"877\":[null,null,1],\"878\":[null,null,3],\"879\":[1,6],\"880\":[1,10],\"881\":[1,13],\"882\":[1],\"883\":[1,39],\"884\":[1,11],\"885\":[null,null,1],\"886\":[null,null,3],\"887\":[1,14],\"888\":[1],\"889\":[1,11],\"890\":[1,23],\"891\":[1,5],\"892\":[null,null,1],\"893\":[null,null,3],\"894\":[1,9],\"895\":[1,8],\"896\":[1,9],\"897\":[1],\"898\":[1,28],\"899\":[1,69],\"900\":[1,8],\"901\":[null,null,1],\"902\":[null,null,3],\"903\":[1,11],\"904\":[1,10],\"905\":[1,47],\"906\":[1,18],\"907\":[null,null,1],\"908\":[null,null,3],\"909\":[1,17],\"910\":[1,56],\"911\":[1,7],\"912\":[null,null,1],\"913\":[null,null,3],\"914\":[1,12],\"915\":[1,61],\"916\":[1,3],\"917\":[null,null,1],\"918\":[null,null,3],\"919\":[1,11],\"920\":[1,9],\"921\":[1,20],\"922\":[1,6],\"923\":[null,null,1],\"924\":[null,null,3],\"925\":[1,8],\"926\":[1,15],\"927\":[1,71],\"928\":[1,6],\"929\":[null,null,1],\"930\":[null,null,3],\"931\":[1,7],\"932\":[1,7],\"933\":[1,19],\"934\":[1,4],\"935\":[null,null,1],\"936\":[null,null,3],\"937\":[1,4],\"938\":[1,6],\"939\":[1,17],\"940\":[1,5],\"941\":[null,null,1],\"942\":[null,null,3],\"943\":[1],\"944\":[1,44],\"945\":[1,32],\"946\":[1,33],\"947\":[2,44],\"948\":[1,75],\"949\":[1,25],\"950\":[1,54],\"951\":[null,null,1],\"952\":[null,null,3],\"953\":[2,1],\"954\":[null,null,1],\"955\":[null,null,3],\"956\":[2,55],\"957\":[1,8],\"958\":[1,62],\"959\":[1,86],\"960\":[2,88],\"961\":[1,16],\"962\":[1,3],\"963\":[null,null,1],\"964\":[null,null,3],\"965\":[2,3],\"966\":[1,29],\"967\":[1,150],\"968\":[1,43],\"969\":[1,32],\"970\":[1,74],\"971\":[1,7],\"972\":[1,190],\"973\":[1,124],\"974\":[1,6],\"975\":[2,171],\"976\":[1,143],\"977\":[2,163],\"978\":[1,133],\"979\":[1,82],\"980\":[1,103],\"981\":[1,87],\"982\":[1,28],\"983\":[null,null,1],\"984\":[null,null,2],\"985\":[1],\"986\":[null,null,1],\"987\":[null,null,3],\"988\":[2,91],\"989\":[1,91],\"990\":[1,30],\"991\":[5,112],\"992\":[2,99],\"993\":[3,43],\"994\":[1,16],\"995\":[null,null,1],\"996\":[null,null,2],\"997\":[1,61],\"998\":[1,7],\"999\":[4,6],\"1000\":[1,9],\"1001\":[1,43],\"1002\":[1,97],\"1003\":[1,25],\"1004\":[1,10],\"1005\":[2,51],\"1006\":[null,null,1],\"1007\":[null,null,3],\"1008\":[2,17],\"1009\":[1,159],\"1010\":[1,144],\"1011\":[1,83],\"1012\":[null,null,1],\"1013\":[null,null,2],\"1014\":[2,2],\"1015\":[null,null,1],\"1016\":[null,null,3],\"1017\":[3,22],\"1018\":[1,17],\"1019\":[1,94],\"1020\":[1,4],\"1021\":[null,null,1],\"1022\":[null,null,3],\"1023\":[1,20],\"1024\":[1,3],\"1025\":[1,36],\"1026\":[2,48],\"1027\":[2,4],\"1028\":[null,null,1],\"1029\":[null,null,2],\"1030\":[2,5],\"1031\":[null,null,1],\"1032\":[null,null,2],\"1033\":[2,28],\"1034\":[1,53],\"1035\":[2,38],\"1036\":[2,29],\"1037\":[2,58],\"1038\":[1,31],\"1039\":[null,null,1],\"1040\":[null,null,3],\"1041\":[1],\"1042\":[null,null,1],\"1043\":[null,null,2],\"1044\":[3,9],\"1045\":[3,92],\"1046\":[2,13],\"1047\":[2,264],\"1048\":[null,null,1],\"1049\":[null,null,2],\"1050\":[2,43],\"1051\":[1,22],\"1052\":[2,70],\"1053\":[1,92],\"1054\":[3,73],\"1055\":[2,600],\"1056\":[1,69],\"1057\":[1,16],\"1058\":[null,null,1],\"1059\":[null,null,2],\"1060\":[1,8],\"1061\":[null,null,1],\"1062\":[null,null,4],\"1063\":[3,102],\"1064\":[null,null,1],\"1065\":[null,null,2],\"1066\":[3,15],\"1067\":[1,183],\"1068\":[1,3],\"1069\":[null,null,1],\"1070\":[null,null,2],\"1071\":[3,15],\"1072\":[1,150],\"1073\":[1,187],\"1074\":[1,83],\"1075\":[1,8],\"1076\":[null,null,1],\"1077\":[null,null,2],\"1078\":[4,28],\"1079\":[1,134],\"1080\":[1,115],\"1081\":[null,null,1],\"1082\":[null,null,2],\"1083\":[3,5],\"1084\":[1,175],\"1085\":[1],\"1086\":[1,24],\"1087\":[1,26],\"1088\":[3,120],\"1089\":[1,21],\"1090\":[null,null,1],\"1091\":[null,null,2],\"1092\":[3,1],\"1093\":[1,71],\"1094\":[1,39],\"1095\":[1,98],\"1096\":[1,5],\"1097\":[1,77],\"1098\":[1,11],\"1099\":[1,121],\"1100\":[1,40],\"1101\":[1,5],\"1102\":[null,null,1],\"1103\":[null,null,2],\"1104\":[2,9],\"1105\":[1],\"1106\":[1,3],\"1107\":[1],\"1108\":[1],\"1109\":[1],\"1110\":[null,null,1],\"1111\":[null,null,2],\"1112\":[2,6],\"1113\":[null,null,1],\"1114\":[null,null,3],\"1115\":[4,33],\"1116\":[4,51],\"1117\":[10,46],\"1118\":[8,157],\"1119\":[4,148],\"1120\":[3,107],\"1121\":[4,31],\"1122\":[2,76],\"1123\":[6,79],\"1124\":[3,132],\"1125\":[1,81],\"1126\":[2,111],\"1127\":[7,126],\"1128\":[null,null,1],\"1129\":[null,null,2],\"1130\":[2],\"1131\":[1,14],\"1132\":[1,146],\"1133\":[1,66],\"1134\":[1,93],\"1135\":[2,390],\"1136\":[2,40],\"1137\":[1,224],\"1138\":[2,170],\"1139\":[1,105],\"1140\":[1,30],\"1141\":[1,25],\"1142\":[1,173],\"1143\":[1,111],\"1144\":[1,122],\"1145\":[1,45],\"1146\":[1,127],\"1147\":[1,13],\"1148\":[1,19],\"1149\":[1,74],\"1150\":[1,24],\"1151\":[null,null,1],\"1152\":[null,null,1],\"1153\":[3,105],\"1154\":[null,null,1],\"1155\":[null,null,1],\"1156\":[2,55],\"1157\":[null,null,1],\"1158\":[null,null,1],\"1159\":[3],\"1160\":[1,13],\"1161\":[1,153],\"1162\":[1,56],\"1163\":[1,136],\"1164\":[null,null,1],\"1165\":[null,null,1],\"1166\":[3,23],\"1167\":[2,25],\"1168\":[2,30],\"1169\":[2,52],\"1170\":[1,14],\"1171\":[2,34],\"1172\":[2,85],\"1173\":[2,97],\"1174\":[1,5],\"1175\":[null,null,1],\"1176\":[null,null,1],\"1177\":[3,13],\"1178\":[1,34],\"1179\":[1,76],\"1180\":[1,25],\"1181\":[1,77],\"1182\":[1,22],\"1183\":[1,15],\"1184\":[null,null,1],\"1185\":[null,null,1],\"1186\":[3,22],\"1187\":[1,22],\"1188\":[1,167],\"1189\":[1,58],\"1190\":[1,47],\"1191\":[1,59],\"1192\":[1,72],\"1193\":[1,110],\"1194\":[1,70],\"1195\":[null,null,1],\"1196\":[null,null,1],\"1197\":[2,9],\"1198\":[1,93],\"1199\":[2,44],\"1200\":[10,53],\"1201\":[1,5],\"1202\":[null,null,1],\"1203\":[null,null,1],\"1204\":[3,19],\"1205\":[1,61],\"1206\":[1,59],\"1207\":[1,68],\"1208\":[1,70],\"1209\":[1,18],\"1210\":[1,24],\"1211\":[1,32],\"1212\":[1,183],\"1213\":[1,37],\"1214\":[null,null,1],\"1215\":[null,null,1],\"1216\":[1,7],\"1217\":[1,28],\"1218\":[1,29],\"1219\":[1,36],\"1220\":[1,9],\"1221\":[1,8],\"1222\":[1,18],\"1223\":[1,13],\"1224\":[1],\"1225\":[1,49],\"1226\":[1,23],\"1227\":[1,13],\"1228\":[1,11],\"1229\":[1,16],\"1230\":[1,10],\"1231\":[1,29],\"1232\":[4,21],\"1233\":[1,12],\"1234\":[1,18],\"1235\":[1,14],\"1236\":[1,27],\"1237\":[3,35],\"1238\":[1,28],\"1239\":[1,29],\"1240\":[1,38],\"1241\":[1,69],\"1242\":[3,84],\"1243\":[null,null,1],\"1244\":[null,null,3],\"1245\":[1,10],\"1246\":[null,null,1],\"1247\":[null,null,2],\"1248\":[1],\"1249\":[1],\"1250\":[1],\"1251\":[1],\"1252\":[1],\"1253\":[6],\"1254\":[1],\"1255\":[1],\"1256\":[1],\"1257\":[1],\"1258\":[1],\"1259\":[1],\"1260\":[1],\"1261\":[1],\"1262\":[1],\"1263\":[1],\"1264\":[1],\"1265\":[1],\"1266\":[1],\"1267\":[2],\"1268\":[1],\"1269\":[1],\"1270\":[1],\"1271\":[1],\"1272\":[1],\"1273\":[1],\"1274\":[1],\"1275\":[1],\"1276\":[1],\"1277\":[1],\"1278\":[1],\"1279\":[1],\"1280\":[1],\"1281\":[1],\"1282\":[1],\"1283\":[1],\"1284\":[1],\"1285\":[3],\"1286\":[1],\"1287\":[1],\"1288\":[1],\"1289\":[1],\"1290\":[1],\"1291\":[1],\"1292\":[1],\"1293\":[1],\"1294\":[1],\"1295\":[1],\"1296\":[1],\"1297\":[1],\"1298\":[1],\"1299\":[1],\"1300\":[1]},\"averageFieldLength\":[1.5921943136992454,53.769259134589035,1.1619130748464077],\"storedFields\":{\"0\":{\"h\":\"归档内容\"},\"1\":{\"c\":[\"archives\"]},\"2\":{\"c\":[\"archives\"]},\"3\":{\"h\":\"关于\",\"t\":[\"你好，我是离心，目前就职于七牛云。\",\"作品有Betxin(CNB)，Anyswap，Deep\",\"技能:\",\"Language: Golang/JavaScipt/Typescript/Rust\",\"Frontend Framework: NuxtJS/NextJS/VueJs/ReactJs\",\"FullStack Framework Kit: NextJs & TypeScript & Prisma & TRPC & TailwindCss & NextAuth\",\"Databases: MongoDB/MySQL/Redis/PostgreSQL\",\"Ops: Docker/Ubuntu\",\"联系我:\",\"yanglixin@yanglixin.com\",\"github.com/lixvyang\",\"崇尚逻辑思考，热爱阅读思考。\"]},\"4\":{\"h\":\"我的OKR任务\",\"t\":[\"最近听说了OKR的工作方式在提升工作效率方面有很大的提升，我也来尝试给我自己做一个OKR(Objective Key Result)。\",\"2023第四季度\",\"目标1： 写文章10篇 录制高质量分享视频10个 KR:\",\"录制zerolog视频\",\"录制两万字入门prometheus视频\",\"录制zerolog 制作gin框架的视频\",\"目标2: 减脂计划，目标是减脂10公斤，包括力量训练、有氧训练。 每天早上拍照+吃自己的饭。 50公里\",\"已经走路5公里\",\"10.12 已经减脂3公斤\",\"目标3: 英语学习 目标：每日精读一篇英语原文(不限技术文)，查出所有的生僻字，记录到笔记本上，每天晚上跟随记忆曲线复习。\",\"目标4: 读书3本并且将笔记记录到blog上。 认真读书1本《TCP/IP详解》，记录笔记到blog上，每天应该需要1小时。\",\"暂时还没有做\",\"目标6： 专注计划 每天非必要不接触手机，娱乐时间减少至1小时。\",\"目标7: 财务目标\",\"注意\",\"恕不能透露\"]},\"5\":{\"c\":[\"thinking\"]},\"6\":{\"c\":[\"thinking\"]},\"7\":{\"h\":\"我的朋友们\"},\"8\":{\"h\":\"完全竞争假设\",\"t\":[\"在经济学领域里对市场的划分有四个档次，分别是完全竞争市场、垄断竞争市场、寡头垄断市场、完全垄断市场。当然我列出的名词从字面上也可以大致理解个具体，但这不妨碍我还是要说明一下。\",\"Wikipedia的页面最近重新设计了，之前像是上个世纪的Web的纯html页面，很杂，现在则有一种现代感的简洁美，好评一下。以下我内容进行总结自Wiki页面，当然为了防止知识传播的二次消耗，我还是在名字中加上一个链接。\",\"完全竞争市场：买卖双方的规模足够大，每个人都是价格的接收者，而且因为市场规模足够大，每个个体都无法左右价格的市场，就称为完全竞争市场。比如我们常见的菜市场，一颗大白菜的价格整个市场都差不多，各个白菜之间近乎无差异，所以在完全竞争市场里，没有一个个体可以左右市场价格。\",\"垄断竞争市场:在买卖双方类似于完全竞争市场，有许多买卖方，但有一个不同之处：许多厂商的制作产品有差异化。\",\"寡头垄断市场：由少数几个卖家主导的市场，寡头垄断市场中，各寡头可能会进行各种形式的合谋，以此来减少相互之间的竞争，共同抬高其产品或服务的价格，以获得更高的利润。\",\"完全垄断市场：只有一个卖家主导的市场，该厂商生产的商品没有任何接近的替代品，所以此厂商可以控制和操纵市场价格。\"]},\"9\":{\"h\":\"手机市场\",\"t\":[\"我以手机市场为例来分析各个阶段的市场情况，在起初二十手机初的年代，那个时候手机市场是完全竞争市场，因为各个厂家都差不多类似的情况，无非是你比我屏幕大一点，我比你相机好一点的情况，但都是一样的按键手机。但高端和低端手机厂家却是一种垄断竞争的状态，高端手机比如当时的索尼，三星垄断高端市场。\",\"这样的情况持续到了Jobs发布了Iphone，一个跨时代的产品，甚至可以这么说当时的Iphone引领了移动互联网的浪潮，于是苹果公司当时处于一种完全垄断市场的状态，完全垄断意味着随意操纵价格，记得当时的漫画《尸兄》里还有个卖肾买Iphone6的角色。\",\"之后的情况完全垄断市场就发生了变化，各个厂商进入垄断竞争阶段有一些厂商也可以与苹果进行竞争，比如华为的一系列产品。但当时的低端手机市场还是有很多厂商的比如现在已经看不到的金立和中兴这些品牌，在2015年左右还是很有很足的市场份额，但这样的市场发生变化往往就在两三年之间。\",\"现在的手机市场已经完全进入寡头垄断市场，各个产品的差异都差不多，玩不出了新花样，早已没有了当年蹲在屏幕前看乐视2发布会的心情。当人们已经习惯了每年有更大的屏幕，更高的分辨率，像素更高的相机时，这个市场就已经成为了一个垄断竞争市场。\"]},\"10\":{\"h\":\"想法从何而来?\",\"t\":[\"在我们的市场营销实训中，安装了一个营销之路的软件，这也恰好是挑战杯比赛的软件，在网上也有人总结了如何在起初获得优势而后建立垄断。但就因为每个人都是这样想获得初始优势的，所以情况出乎我们的意料。\",\"在完全竞争市场中，在各个厂商的各个产品差别度无几的情况下，只有提高广告费，才可以建立优势，但也正是因为这种情况，每个厂商都花费了巨额的广告费，所以广告费的效益并不大。那么最终情况是什么样？每个厂家都陷入一种贷款去获得存活的机会，在这种情况下比的就是谁能活得更久而已，恶性竞争无非如此。没有广告就卖不出去产品，卖不出去产品就没有存活下去的机会，所以只能在起初买很多广告，才可以卖得出去产品，以获得存活机会。\"]},\"11\":{\"h\":\"打破现状\",\"t\":[\"回到了二十世纪初的状态。\",\"那么让我们把时间线拉回到二十世纪初，什么情况打破了原来的市场状态呢？苹果公司发布了Iphone。\",\"这和YC创业课和《从0到1》这本书的理念类似，打破僵局往往需要不一样的创新。那创新从哪里来？绝对不是继续现有的路线。\",\"做产品从0到1是少数的创见，这和随便开个小店创业不一样，随便摆个地摊，推个小车只能叫谋生。\",\"如何叫有效的创新？\",\"从0到1便是\",\"微创新算创新吗？\",\"算创新，但不是从0到1的创见\",\"如何做？老实说目前我还没有找到（否则我不就去做了么？hh），但有一点是可以肯定的，一定要从行业内部广泛的汲取思路，把自己的思路放到产品上，这样才能让产品更加有效。多思考为什么这样的产品可以成功，如何打破垄断，视野和思路不断开阔会有不一样的体验。\",\"一点点微见，后续会有更新。\"]},\"12\":{\"c\":[\"econonics\"]},\"13\":{\"h\":\"思考\"},\"14\":{\"c\":[\"thinking\"]},\"15\":{\"c\":[\"thinking\"]},\"16\":{\"h\":\"Betxin Rules\",\"t\":[\"https://cnb.betxin.one\"]},\"17\":{\"h\":\"Menu\",\"t\":[\"Start:\",\"Intro\",\"OverView\",\"page\"]},\"18\":{\"h\":\"介绍\"},\"19\":{\"h\":\"Betxin\",\"t\":[\"Betxin是一个信息交易市场平台,你可以在这里交易世界上最受争议的话题例如(政治、加密货币、实事等)。在Betxin上,你可以根据自己的预测来构建投资预测组合，如果你的投资预测是正确的那么您将获得回报，当你决定在市场上进行预测投资时,你其实是在权衡自己的知识、头脑以及对未来的远见。市场比率在一定程度上反映了过去一段时间人们对未来的看法。在这里您可以根据您的预测进行购买，在预测达不到预期时也可以选择卖出。\"]},\"20\":{\"h\":\"概览\"},\"21\":{\"h\":\"Betxin目前支持CNB作为整个市场的通货(即使用CNB对话题进行交易)\",\"t\":[\"CNB简介\",\"Back to top>>>>>>>>>\"]},\"22\":{\"h\":\"页面\"},\"23\":{\"h\":\"1. 页面介绍(常用的功能)\",\"t\":[\"无需登陆可做的事情\",\"查看话题列表\",\"topic_list\",\"topic_list\",\"查看具体话题详情以及热门话题和即将结束的话题\",\"topic_detail\",\"topic_detail\",\"搜索话题\",\"search_topic\",\"浏览话题中心\",\"market_list\",\"下述功能需要登陆账户(Mixin Messenger)才可参与\",\"购买话题份额\",\"buy_topic\",\"buy_topic\",\"售出已有的话题份额\",\"sell_topic\",\"sell_topic\",\"查看相关的话题列表\",\"related_topic_list\",\"related_topic_list\",\"话题中心发布自己的话题\",\"publish_topic\"]},\"24\":{\"h\":\"2. 话题购买功能以及结算\"},\"25\":{\"h\":\"2.0 话题购买功能介绍\",\"t\":[\"话题具有:\",\"截止购买时间\",\"截止售出时间\",\"结束时间\",\"例如:一个话题的结束时间是2024年12月31日，话题截止售出时间是2024年12月25日，话题截止购买时间是2024年12月30日。\",\"则2024年12月25日之后话题就已截止售出(用户无法在此日期后将已购入的话题份额售出)。\",\"但是话题的结束购买功能在2024年12月31日结束，这意味着即使话题的购买者无法在2024年12月25日之后售出，但在话题结束购买日期之前仍可以继续参与话题的购买，增加自己的话题余额。\"]},\"26\":{\"h\":\"2.1 话题购买时的模拟功能\",\"t\":[\"topic_purchase_simulate\",\"话题购买时可以模拟话题结算结果:\",\"例如：某话题的已有购买者的情况如下\",\"购买者\",\"YES 购入份额(CNB)\",\"NO 购入份额(CNB)\",\"A\",\"10K\",\"20K\",\"B\",\"30K\",\"40K\",\"A购入了 30K CNB(10K YES、 20K NO份额), B购入了70K CNB(30K YES、 40K NO份额)，此时话题的总数额为 100K CNB。\",\"此时我们作为C用户可以在购买话题时，在输入框选择数额以及YES/NO来模拟话题结算时我们的最终获利情况。\",\"例如我们选择购买 30K CNB的YES份额:\",\"话题的总数额: 130K CNB (30K为C用户的购买份额，100K为购买前话题的总数额),YES总数额: 70K, NO总数额: 60K\",\"如果话题的最终结果是YES，则全体用户的获利情况如下\",\"平台抽取1%的话题总数额为 1.3K CNB，剩余 128.7K CNB。\",\"A、B、C用户的获利情况如下:\",\"购买者\",\"获利计算方式\",\"获利结果\",\"A\",\"10K / 70K * 128.7K\",\"18.40K\",\"B\",\"30K / 70K * 128.7K\",\"55.15K\",\"C\",\"30K / 70K * 128.7K\",\"55.15K\",\"如果话题的最终结果是NO，则全体用户的获利情况如下:\",\"平台抽取1%的话题总数额为 1.3K CNB，剩余 128.7K CNB。\",\"A、B、C用户的获利情况如下:\",\"购买者\",\"获利计算方式\",\"获利结果\",\"A\",\"20K / 60K * 128.7K\",\"42.90K\",\"B\",\"40K / 60K * 128.7K\",\"85.8K\",\"C\",\"0 / 60K * 128.7K\",\"0\"]},\"27\":{\"h\":\"2.2 话题结算规则\",\"t\":[\"在话题的详情界面中可以看到话题的具体规则，通常情况下话题规则会详细描述话题结束时的结算分配规则。\",\"例如一个话题的规则是:\",\"如果 BTC 价格在美国东部时间 2024 年 5 月 25 日凌晨 12：00 此周根据币安的价格跌破 $65000，则该市场将解析为“YES”。否则，这个市场将解析为“NO”。该市场的来源将是币安 （https://www.binance.com/en/trade/BTC_USDT） 的 30 分钟最低价。 \",\"那么话题将在2024年5月25日美国东部时间12:00时结束话题，并在未来不超过24小时内完成话题的具体结算，并且向用户发送具体结算的信息。\"]},\"28\":{\"h\":\"3. 话题售出功能介绍\",\"t\":[\"话题已购买的份额可以选择售出(需要5%的平台手续费、5%的用户手续费)。\",\"详细规则如下:\",\"话题具有截止售出时间，用户必须在此话题截止售出时间点之前完成话题份额的售出\",\"售出将产生5%的平台手续费(未来可能会产生新的经济模型)\",\"5%的用户手续费\",\"详细介绍5%的用户手续费: 每当话题有用户选择退款时，事实是对其他已购买者权益的侵害(即话题总数额减少，结束时得到的数额减少)，所以话题退款者需要向其他本话题的购买者补偿对应的损失，本金的5%将会均分给其他已购买者(若没有购买者则手续费返还给平台方)。\",\"如果您有任何疑问或者建议，请联系Mixin ID: 7000102163\"]},\"29\":{\"c\":[\"betxin\"]},\"30\":{\"c\":[\"betxin-rules\"]},\"31\":{\"h\":\"Betxin 规则\"},\"32\":{\"h\":\"Betxin\"},\"33\":{\"h\":\"Menu\",\"t\":[\"Start:\",\"Intro\",\"OverView\",\"page\"]},\"34\":{\"h\":\"什么是Betxin?\",\"t\":[\"Betxin是一个信息交易市场平台,你可以在这里交易世界上最受争议的话题例如(病毒、政治、加密货币、实事等)。在Betxin上,你可以根据自己的预测来构建投资预测组合，如果你的投资预测是正确的那么您将获得回报，当你决定在市场上进行预测投资时,你其实是在权衡自己的知识、头脑以及对未来的远见。市场比率在一定程度上反映了过去一段时间人们对未来的看法。在这里您可以根据您的预测进行购买，在预测达不到预期时也可以选择卖出。\"]},\"35\":{\"h\":\"概览\"},\"36\":{\"h\":\"1. 你没有任何加密货币\",\"t\":[\"如果你是一个加密新手，不用担心，我们来引导你来完成它．为了开始在Betxin上交易，您必须先创建一个Mixin账户\",\"未来会支持MetaMask/Coinbase/Wallet Connect等钱包\",\"购买一些加密货币例如(BTC, PUSD, XIN等)，如果您在Mixin中还没有任何加密货币，请在Mixin Message主页面的搜索框中搜索 7000103206(TIGA)，在这个机器人中您可以购买您需要的加密货币\"]},\"37\":{\"h\":\"2. 你有加密货币但没有PUSD\",\"t\":[\"不用担心，在BETXIN中您可以使用Mixin支持的36种加密货币进行购买，Betxin会在您支付加密货币之后帮您转换为PUSD，其中的转换费用需要您自己承担\",\"一旦您的Mixin账户中有了Betxin所支持的加密货币，您就可以体验Betxin中所需的一切\",\"Back to top>>>>>>>>>\"]},\"38\":{\"h\":\"页面\"},\"39\":{\"h\":\"1. 页面介绍\",\"t\":[\"首先，您需要点击左上角让Betxin识别您的账户信息\",\"进入主页面您可以查看您感兴趣的话题种类\",\"同时您也可以看到主页面有反馈和个人信息页面，您可以查看这些\",\"Back to top>>>>>>>>>\"]},\"40\":{\"h\":\"2.购买预测\",\"t\":[\"如果您遇到您喜欢的话题，您可以进行购买预测\",\"您可以点击某个话题进入话题页面\",\"点击购买按钮\",\"您可以选择您想支付的数字货币，Betxin支持36种不同的加密货币\",\"选择您想支付的数额\",\"当您购买成功，页面会跳转到主页面，当您再次进入话题页面，您的购买信息已经显示成功\",\"当您想将您的筹码换出，您可以点击已购买话题的Refund按钮，来选择退款\",\"当您点击了Refund按钮后，您可以在机器人的聊天页面查看您的退款(注意！退款将扣除5%的本金费用)\",\"Back to top>>>>>>>>>\"]},\"41\":{\"h\":\"3. 收藏\",\"t\":[\"当您遇到喜欢的话题，您可以收藏，您只需点击话题右上角的星星\",\"Back to top>>>>>>>>>\"]},\"42\":{\"h\":\"4. 评论\"},\"43\":{\"c\":[\"betxin\"]},\"44\":{\"c\":[\"betxin-rules\"]},\"45\":{\"h\":\"Docker 底层技术\",\"t\":[\"Docker 的关键部分就是镜像,容器和仓库理解了这三个概念，就理解了 Docker 的整个生命周期。\",\"Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 Docker 技术比虚拟机技术更为轻便、快捷。\",\"下面的图片比较了 Docker 和传统虚拟化方式的不同之处。传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。\"]},\"46\":{\"h\":\"镜像\",\"t\":[\"我们知道操作系统分为内核区和用户区,对于Linux而言,内核启动后,会挂在root文件系统为其提供用户空间的支持,而Docker镜像就先当于是一个/root文件系统,比如官方的Ubuntu18.04就包含了一整套Ubuntu18.04的最小系统root文件系统.\",\"Docker镜像是一个特殊的文件系统,除了提供容器运行时所需的程序,库,资源和配置外,还包含了一些为运行时准备的配置参数(如匿名卷、环境变量、用户等).其内容在构建之后也不会被改变。\",\"分层存储\",\"因为镜像包含操作系统完整的 root 文件系统，其体积往往是庞大的，因此在 Docker 设计时，就充分利用 Union FS(opens new window) 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。\",\"镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。比如，删除前一层文件的操作，实际不是真的删除前一层的文件，而是仅在当前层标记为该文件已删除。在最终容器运行的时候，虽然不会看到这个文件，但是实际上该文件会一直跟随镜像。因此，在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。\",\"分层存储的特征还使得镜像的复用、定制变的更为容易。甚至可以用之前构建好的镜像作为基础层，然后进一步添加新的层，以定制自己所需的内容，构建新的镜像。\"]},\"47\":{\"h\":\"容器\",\"t\":[\"镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的 类 和 实例 一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。\",\"容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间\",\"(opens new window)。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会混淆容器和虚拟机。\",\"前面讲过镜像使用的是分层存储，容器也是如此。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为 容器存储层。\",\"容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。\",\"按照 Docker 最佳实践的要求，容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用 数据卷（Volume）、或者 绑定宿主目录，在这些位置的读写会跳过容器存储层，直接对宿主（或网络存储）发生读写，其性能和稳定性更高。\",\"数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器删除或者重新运行之后，数据却不会丢失。\"]},\"48\":{\"h\":\"仓库\",\"t\":[\"镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。\",\"一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个 标签（Tag）；每个标签对应一个镜像。\",\"通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <仓库名>:<标签> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签。\",\"以 Ubuntu 镜像 为例，ubuntu 是仓库的名字，其内包含有不同的版本标签，如，16.04, 18.04。我们可以通过 ubuntu:16.04，或者 ubuntu:18.04 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 ubuntu，那将视为 ubuntu:latest。\",\"仓库名经常以 两段式路径 形式出现，比如 jwilder/nginx-proxy，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务\",\"Docker Registry 公开服务\",\"Docker Registry 公开服务是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。\",\"最常使用的 Registry 公开服务是官方的 Docker Hub(opens new window)，这也是默认的 Registry，并拥有大量的高质量的 官方镜像。除此以外，还有 Red Hat 的 Quay.io；Google 的 Google Container Registry，Kubernetes 的镜像使用的就是这个服务；代码托管平台 GitHub 推出的 ghcr.io。\"]},\"49\":{\"h\":\"使用镜像\",\"t\":[\"包括：\",\"从仓库获取镜像；\",\"管理本地主机上的镜像；\",\"介绍镜像实现的基本原理。\",\"之前提到过，Docker Hub 上有大量的高质量的镜像可以用，这里我们就说一下怎么获取这些镜像。\",\"从Docker中获取镜像的命令是docker pull命令,其格式为\",\"docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签] \",\"具体的选项可以通过 docker pull --help 命令看到，这里我们说一下镜像名称的格式。\",\"Docker 镜像仓库地址：地址的格式一般是 <域名/IP>[:端口号]。默认地址是 Docker Hub(docker.io)。 仓库名：如之前所说，这里的仓库名是两段式名称，即 <用户名>/<软件名>。对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像。\",\"比如：\",\"$ docker pull ubuntu:18.04 18.04: Pulling from library/ubuntu 92dc2a97ff99: Pull complete be13a9d27eb8: Pull complete c8299583700a: Pull complete Digest: sha256:4bc3ae6596938cb0d9e5ac51a1152ec9dcac2a1c50829c74abd9c4361e321b26 Status: Downloaded newer image for ubuntu:18.04 docker.io/library/ubuntu:18.04 \",\"上面的命令没有给出Docker镜像仓库地址,因此将会从docker.io官方获取,而镜像名称是 ubuntu:18.04，因此将会获取官方镜像 library/ubuntu 仓库中标签为 18.04 的镜像。docker pull 命令的输出结果最后一行给出了镜像的完整名称，即： docker.io/library/ubuntu:18.04。\",\"从下载过程中,我们可以看到之前提及的分层概念,镜像是由多层存储所构成。下载也是一层层的去下载，并非单一文件。下载过程中给出了每一层的 ID 的前 12 位。并且下载结束后，给出该镜像完整的 sha256 的摘要，以确保下载一致性。\"]},\"50\":{\"h\":\"运行\",\"t\":[\"有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。以上面的 ubuntu:18.04 为例，如果我们打算启动里面的 bash 并且进行交互式操作的话，可以执行下面的命令。\",\"$ docker run -it --rm ubuntu:18.04 bash \",\"docker run 就是运行容器的命令,具体格式我们会在 容器 一节进行详细讲解，我们这里简要的说明一下上面用到的参数。 -it这是两个参数,-i是交互操作,-t是终端操作,我们这里打算进入bash执行命令并查看返回结果,因此我们需要交互式终端. --rm是容器退出后自动删除容器,。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 docker rm。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 --rm 可以避免浪费空间。 ubuntu:18.04：这是指用 ubuntu:18.04 镜像为基础来启动容器。 bash是放在镜像名之后的命令,这里我们希望有个交互式 Shell，因此用的是 bash。\",\"进入容器后，我们可以在 Shell 下操作\"]},\"51\":{\"h\":\"列出容器\",\"t\":[\"要想列出已经下载下来的镜像，可以使用 docker image ls 命令。\",\"列表包含了 仓库名、标签、镜像 ID、创建时间 以及 所占用的空间。\",\"REPOSITORY TAG IMAGE ID CREATED SIZE rabbitmq 3-management f42f6d9c3578 6 days ago 263MB rabbitmq 3.11-management f42f6d9c3578 6 days ago 263MB rabbitmq management f42f6d9c3578 6 days ago 263MB ubuntu 18.04 71eaf13299f4 7 weeks ago 63.1MB redislabs/redisinsight latest 671987a1c3f4 3 months ago 1.47GB hello-world latest feb5d9fea6a5 14 months ago 13.3kB \",\"一个镜像可以对应多个标签比如3-management``management标签不同,但镜像ID是相同的.\",\"仔细观察,这里标识的所占用空间和在 Docker Hub 上看到的镜像大小不同。比如ubuntu18.04镜像大小这里是63.1MB,但官网是25MB,这是因为 Docker Hub 中显示的体积是压缩后的体积。在镜像下载和上传过程中镜像是保持着压缩状态的，因此 Docker Hub 所显示的大小是网络传输中更关心的流量大小。而 docker image ls 显示的是镜像下载到本地后，展开的大小，准确说，是展开后的各层所占空间的总和，因为镜像到本地后，查看空间的时候，更关心的是本地磁盘空间占用的大小。\",\"另外一个需要注意的问题是，docker image ls 列表中的镜像体积总和并非是所有镜像实际硬盘消耗。由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层。由于 Docker 使用 Union FS，相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多。\",\"你可以通过 docker system df 命令来便捷的查看镜像、容器、数据卷所占用的空间。\"]},\"52\":{\"h\":\"虚悬镜像\",\"t\":[\"相关信息\",\"上面的镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为none.\",\"这个镜像原本是有镜像名和标签的，原来为 mongo:3.2，随着官方镜像维护，发布了新版本后，重新 docker pull mongo:3.2 时，mongo:3.2 这个镜像名被转移到了新下载的镜像身上，而旧的镜像上的这个名称则被取消，从而成为了 none。除了 docker pull 可能导致这种情况，docker build 也同样可以导致这种现象。由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 none 的镜像。这类无标签镜像也被称为 虚悬镜像(dangling image) ，可以用下面的命令专门显示这类镜像：\",\"一般来说，虚悬镜像已经失去了存在的价值，是可以随意删除的，可以用下面的命令删除。\",\"$ docker image prune \"]},\"53\":{\"h\":\"中间层镜像\",\"t\":[\"为了加速镜像构建、重复利用资源，Docker 会利用 中间层镜像。所以在使用一段时间后，可能会看到一些依赖的中间层镜像。默认的 docker image ls 列表中只会显示顶层镜像，如果希望显示包括中间层镜像在内的所有镜像的话，需要加 -a 参数。\",\"这样会看到很多无标签的镜像，与之前的虚悬镜像不同，这些无标签的镜像很多都是中间层镜像，是其它镜像所依赖的镜像。这些无标签镜像不应该删除，否则会导致上层镜像因为依赖丢失而出错。实际上，这些镜像也没必要删除，因为之前说过，相同的层只会存一遍，而这些镜像是别的镜像的依赖，因此并不会因为它们被列出来而多存了一份，无论如何你也会需要它们。只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除。\"]},\"54\":{\"h\":\"列出部分镜像\",\"t\":[\"不加任何参数的情况下，docker image ls 会列出所有顶层镜像，但是有时候我们只希望列出部分镜像。docker image ls 有好几个参数可以帮助做到这个事情。\",\"根据仓库名列出镜像\",\"$ docker image ls ubuntu\",\"列出特定的某个镜像，也就是说指定仓库名和标签\",\"$ docker image ls ubuntu:18.04\",\"除此以外，docker image ls 还支持强大的过滤器参数 --filter，或者简写 -f。之前我们已经看到了使用过滤器来列出虚悬镜像的用法，它还有更多的用法。比如，我们希望看到在 mongo:3.2 之后建立的镜像，可以用下面的命令：\",\"$ docker image ls -f since=mongo:3.2 REPOSITORY TAG IMAGE ID CREATED SIZE redis latest 5f515359c7f8 5 days ago 183 MB nginx latest 05a60462f8ba 5 days ago 181 MB \"]},\"55\":{\"h\":\"删除本地镜像\",\"t\":[\"如果要删除本地的镜像，可以使用 docker image rm 命令，其格式为：\",\"docker image rm [选项] <镜像1> [<镜像2> ...] \",\"用 ID、镜像名、摘要删除镜像\",\"其中，<镜像> 可以是 镜像短 ID、镜像长 ID、镜像名 或者 镜像摘要。\",\"我们可以用镜像的完整 ID，也称为 长 ID，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 短 ID 来删除镜像。docker image ls 默认列出的就已经是短 ID 了，一般取前3个字符以上，只要足够区分于别的镜像就可以了。\",\"比如这里，如果我们要删除 redis:alpine 镜像，可以执行：\",\"$ docker image rm 501 Untagged: redis:alpine Untagged: redis@sha256:f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86d Deleted: sha256:501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7 Deleted: sha256:96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899b Deleted: sha256:32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23 Deleted: sha256:127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2fa Deleted: sha256:1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3 Deleted: sha256:4fc455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7 \",\"当然，更精确的是使用 镜像摘要 删除镜像。\",\"$ docker image ls --digests REPOSITORY TAG DIGEST IMAGE ID CREATED SIZE node slim sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228 6e0c4c8e3913 3 weeks ago 214 MB $ docker image rm node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228 Untagged: node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228 \",\"Untagged 和 Deleted 如果观察上面这几个命令的运行输出信息的话，你会注意到删除行为分为两类，一类是 Untagged，另一类是 Deleted。我们之前介绍过，镜像的唯一标识是其 ID 和摘要，而一个镜像可以有多个标签。\",\"因此当我们使用上面命令删除镜像的时候，实际上是在要求删除某个标签的镜像。所以首先需要做的是将满足我们要求的所有镜像标签都取消，这就是我们看到的 Untagged 的信息。因为一个镜像可以对应多个标签，因此当我们删除了所指定的标签后，可能还有别的标签指向了这个镜像，如果是这种情况，那么 Delete 行为就不会发生。所以并非所有的 docker image rm 都会产生删除镜像的行为，有可能仅仅是取消了某个标签而已。\",\"当该镜像所有的标签都被取消了，该镜像很可能会失去了存在的意义，因此会触发删除行为。镜像是多层存储结构，因此在删除的时候也是从上层向基础层方向依次进行判断删除。镜像的多层结构让镜像复用变得非常容易，因此很有可能某个其它镜像正依赖于当前镜像的某一层。这种情况，依旧不会触发删除该层的行为。直到没有任何层依赖当前层时，才会真实的删除当前层。这就是为什么，有时候会奇怪，为什么明明没有别的标签指向这个镜像，但是它还是存在的原因，也是为什么有时候会发现所删除的层数和自己 docker pull 看到的层数不一样的原因。\",\"除了镜像依赖以外，还需要注意的是容器对镜像的依赖。如果有用这个镜像启动的容器存在（即使容器没有运行），那么同样不可以删除这个镜像。之前讲过，容器是以镜像为基础，再加一层容器存储层，组成这样的多层存储结构去运行的。因此该镜像如果被这个容器所依赖的，那么删除必然会导致故障。如果这些容器是不需要的，应该先将它们删除，然后再来删除镜像。\",\"用 docker image ls 命令来配合\",\"像其它可以承接多个实体的命令一样，可以使用 docker image ls -q 来配合使用 docker image rm，这样可以成批的删除希望删除的镜像。我们在“镜像列表”章节介绍过很多过滤镜像列表的方式都可以拿过来使用。\",\"比如，我们需要删除所有仓库名为 redis 的镜像:\",\"$ docker image rm $(docker image ls -q redis) \",\"利用 commit 理解镜像构成\",\"镜像是容器的基础,每次执行 docker run 的时候都会指定哪个镜像作为容器运行的基础。在之前的例子中，我们所使用的都是来自于 Docker Hub 的镜像。直接使用这些镜像是可以满足一定的需求，而当这些镜像无法直接满足需求时，我们就需要定制这些镜像。接下来的几节就将讲解如何定制镜像。\",\"回顾一下之前我们学到的知识，镜像是多层存储，每一层是在前一层的基础上进行的修改；而容器同样也是多层存储，是在以镜像为基础层，在其基础上加一层作为容器运行时的存储层。\",\"现在让我们以定制一个 Web 服务器为例子，来讲解镜像是如何构建的。\",\"$ docker run --name webserver -d -p 80:80 nginx \",\"docker commit可以在镜像运行成容器的时候对容器进行修改,再使用docker commit命令将容器的存储层保存到镜像层再commit一下定制新的镜像.\",\"慎用 docker commit\",\"使用 docker commit 命令虽然可以比较直观的帮助理解镜像分层存储的概念，但是实际环境中并不会这样使用。\",\"首先，如果仔细观察之前的 docker diff webserver 的结果，你会发现除了真正想要修改的 /usr/share/nginx/html/index.html 文件外，由于命令的执行，还有很多文件被改动或添加了。这还仅仅是最简单的操作，如果是安装软件包、编译构建，那会有大量的无关内容被添加进来，将会导致镜像极为臃肿。\",\"此外，使用 docker commit 意味着所有对镜像的操作都是黑箱操作，生成的镜像也被称为 黑箱镜像，换句话说，就是除了制作镜像的人知道执行过什么命令、怎么生成的镜像，别人根本无从得知。而且，即使是这个制作镜像的人，过一段时间后也无法记清具体的操作。这种黑箱镜像的维护工作是非常痛苦的。\",\"而且，回顾之前提及的镜像所使用的分层存储的概念，除当前层外，之前的每一层都是不会发生改变的，换句话说，任何修改的结果仅仅是在当前层进行标记、添加、修改，而不会改动上一层。如果使用 docker commit 制作镜像，以及后期修改的话，每一次修改都会让镜像更加臃肿一次，所删除的上一层的东西并不会丢失，会一直如影随形的跟着这个镜像，即使根本无法访问到。这会让镜像更加臃肿。\",\"https://vuepress.mirror.docker-practice.com/image/commit/\"]},\"56\":{\"h\":\"使用 Dockerfile 定制镜像\",\"t\":[\"学到docker commit可以得知,镜像的制作就是为每一层添加所需的配置,文件,如果我们可以把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，那么之前提及的无法重复的问题、镜像构建透明性的问题、体积的问题就都会解决。这个脚本就是 Dockerfile。\",\"Dockerfile 是一个文本文件，其内包含了一条条的 指令(Instruction)，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。\",\"还以之前定制 nginx 镜像为例，这次我们使用 Dockerfile 来定制。\",\"在一个空白目录中，建立一个文本文件，并命名为 Dockerfile：\",\"$ mkdir mynginx $ cd mynginx $ touch Dockerfile \",\"其内容为：\",\"FROM nginx RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html \",\"这个 Dockerfile 很简单，一共就两行。涉及到了两条指令，FROM 和 RUN。\"]},\"57\":{\"h\":\"FROM指定基础镜像\",\"t\":[\"所谓定制镜像，那一定是以一个镜像为基础，在其上进行定制。就像我们之前运行了一个 nginx 镜像的容器，再进行修改一样，基础镜像是必须指定的。而 FROM 就是指定 基础镜像，因此一个 Dockerfile 中 FROM 是必备的指令，并且必须是第一条指令\",\"在 Docker Hub 上有非常多的高质量的官方镜像，有可以直接拿来使用的服务类的镜像，如 nginx、redis、mongo、mysql、httpd、php、tomcat 等；也有一些方便开发、构建、运行各种语言应用的镜像，如 node、openjdk、python、ruby、golang 等。可以在其中寻找一个最符合我们最终目标的镜像为基础镜像进行定制。\",\"如果没有找到对应的服务镜像,官网镜像中还提供了一些更为基础的操作系统镜像，如 ubuntu、debian、centos、fedora、alpine 等，这些操作系统的软件库为我们提供了更广阔的扩展空间。\",\"除了选择现有镜像为基础镜像外，Docker 还存在一个特殊的镜像，名为 scratch。这个镜像是虚拟的概念，并不实际存在，它表示一个空白的镜像。\",\"FROM scratch \",\"如果你以 scratch 为基础镜像的话，意味着你不以任何镜像为基础，接下来所写的指令将作为镜像第一层开始存在。\",\"不以任何系统为基础，直接将可执行文件复制进镜像的做法并不罕见，对于 Linux 下静态编译的程序来说，并不需要有操作系统提供运行时支持，所需的一切库都已经在可执行文件里了，因此直接 FROM scratch 会让镜像体积更加小巧。使用 Go 语言开发的应用很多会使用这种方式来制作镜像，这也是为什么有人认为 Go 是特别适合容器微服务架构的语言的原因之一。\"]},\"58\":{\"h\":\"RUN 执行命令\",\"t\":[\"RUN 指令是用来执行命令行命令的。由于命令行的强大能力，RUN 指令在定制镜像时是最常用的指令之一。其格式有两种：\",\"shell 格式：RUN <命令>，就像直接在命令行中输入的命令一样。刚才写的 Dockerfile 中的 RUN 指令就是这种格式。\",\"RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html\",\"exec 格式：RUN [\\\"可执行文件\\\", \\\"参数1\\\", \\\"参数2\\\"]，这更像是函数调用中的格式。\",\"既然 RUN 就像 Shell 脚本一样可以执行命令，那么我们是否就可以像 Shell 脚本一样把每个命令对应一个 RUN 呢？比如这样：\",\"FROM debian:stretch RUN apt-get update RUN apt-get install -y gcc libc6-dev make wget RUN wget -O redis.tar.gz \\\"http://download.redis.io/releases/redis-5.0.3.tar.gz\\\" RUN mkdir -p /usr/src/redis RUN tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 RUN make -C /usr/src/redis RUN make -C /usr/src/redis install \",\"之前说过，Dockerfile 中每一个指令都会建立一层，RUN 也不例外。每一个 RUN 的行为，就和刚才我们手工建立镜像的过程一样：新建立一层，在其上执行这些命令，执行结束后，commit 这一层的修改，构成新的镜像。\",\"而上面的这种写法，创建了 7 层镜像。这是完全没有意义的，而且很多运行时不需要的东西，都被装进了镜像里，比如编译环境、更新的软件包等等。结果就是产生非常臃肿、非常多层的镜像，不仅仅增加了构建部署的时间，也很容易出错。 这是很多初学 Docker 的人常犯的一个错误。\",\"Union FS 是有最大层数限制的，比如 AUFS，曾经是最大不得超过 42 层，现在是不得超过 127 层。\",\"上面的 Dockerfile 正确的写法应该是这样：\",\"FROM debian:stretch RUN set -x; buildDeps='gcc libc6-dev make wget' \\\\ && apt-get update \\\\ && apt-get install -y $buildDeps \\\\ && wget -O redis.tar.gz \\\"http://download.redis.io/releases/redis-5.0.3.tar.gz\\\" \\\\ && mkdir -p /usr/src/redis \\\\ && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \\\\ && make -C /usr/src/redis \\\\ && make -C /usr/src/redis install \\\\ && rm -rf /var/lib/apt/lists/* \\\\ && rm redis.tar.gz \\\\ && rm -r /usr/src/redis \\\\ && apt-get purge -y --auto-remove $buildDeps \",\"首先，之前所有的命令只有一个目的，就是编译、安装 redis 可执行文件。因此没有必要建立很多层，这只是一层的事情。因此，这里没有使用很多个 RUN 一一对应不同的命令，而是仅仅使用一个 RUN 指令，并使用 && 将各个所需命令串联起来。将之前的 7 层，简化为了 1 层。在撰写 Dockerfile 的时候，要经常提醒自己，这并不是在写 Shell 脚本，而是在定义每一层该如何构建。\",\"并且，这里为了格式化还进行了换行。Dockerfile 支持 Shell 类的行尾添加 \\\\ 的命令换行方式，以及行首 # 进行注释的格式。良好的格式，比如换行、缩进、注释等，会让维护、排障更为容易，这是一个比较好的习惯。\",\"此外，还可以看到这一组命令的最后添加了清理工作的命令，删除了为了编译构建所需要的软件，清理了所有下载、展开的文件，并且还清理了 apt 缓存文件。这是很重要的一步，我们之前说过，镜像是多层存储，每一层的东西并不会在下一层被删除，会一直跟随着镜像。因此镜像构建时，一定要确保每一层只添加真正需要添加的东西，任何无关的东西都应该清理掉。\",\"很多人初学 Docker 制作出了很臃肿的镜像的原因之一，就是忘记了每一层构建的最后一定要清理掉无关文件。\"]},\"59\":{\"h\":\"构建镜像\",\"t\":[\"好了，让我们再回到之前定制的 nginx 镜像的 Dockerfile 来。现在我们明白了这个 Dockerfile 的内容，那么让我们来构建这个镜像吧。\",\"docker build -t nginx:v3 . docker build [选项] <上下文路径/URL/-> # 在这里我们指定了最终镜像的名称 -t nginx:v3，构建成功后，我们可以像之前运行 nginx:v2 那样来运行这个镜像，其结果会和 nginx:v2 一样。 \"]},\"60\":{\"h\":\"镜像构建上下文（Context）\",\"t\":[\"如果注意，会看到 docker build 命令最后有一个 .。. 表示当前目录，而 Dockerfile 就在当前目录，因此不少初学者以为这个路径是在指定 Dockerfile 所在路径，这么理解其实是不准确的。如果对应上面的命令格式，你可能会发现，这是在指定 上下文路径。那么什么是上下文呢？\",\"首先我们要理解 docker build 的工作原理。Docker 在运行时分为 Docker 引擎（也就是服务端守护进程）和客户端工具。Docker 的引擎提供了一组 REST API，被称为 Docker Remote API\",\"(opens new window)，而如 docker 命令这样的客户端工具，则是通过这组 API 与 Docker 引擎交互，从而完成各种功能。因此，虽然表面上我们好像是在本机执行各种 docker 功能，但实际上，一切都是使用的远程调用形式在服务端（Docker 引擎）完成。也因为这种 C/S 设计，让我们操作远程服务器的 Docker 引擎变得轻而易举。\",\"当我们进行镜像构建的时候，并非所有定制都会通过 RUN 指令完成，经常会需要将一些本地文件复制进镜像，比如通过 COPY 指令、ADD 指令等。而 docker build 命令构建镜像，其实并非在本地构建，而是在服务端，也就是 Docker 引擎中构建的。那么在这种客户端/服务端的架构中，如何才能让服务端获得本地文件呢？\",\"这就引入了上下文的概念。当构建的时候，用户会指定构建镜像上下文的路径，docker build 命令得知这个路径后，会将路径下的所有内容打包，然后上传给 Docker 引擎。这样 Docker 引擎收到这个上下文包后，展开就会获得构建镜像所需的一切文件。\",\"如果在 Dockerfile 中这么写：\",\"COPY ./package.json /app/ \",\"这并不是要复制执行 docker build 命令所在的目录下的 package.json，也不是复制 Dockerfile 所在目录下的 package.json，而是复制 上下文（context） 目录下的 package.json。\",\"因此，COPY 这类指令中的源文件的路径都是相对路径。这也是初学者经常会问的为什么 COPY ../package.json /app 或者 COPY /opt/xxxx /app 无法工作的原因，因为这些路径已经超出了上下文的范围，Docker 引擎无法获得这些位置的文件。如果真的需要那些文件，应该将它们复制到上下文目录中去。\",\"现在就可以理解刚才的命令 docker build -t nginx:v3 . 中的这个 .，实际上是在指定上下文的目录，docker build 命令会将该目录下的内容打包交给 Docker 引擎以帮助构建镜像。\",\"如果观察 docker build 输出，我们其实已经看到了这个发送上下文的过程：\",\"$ docker build -t nginx:v3 . Sending build context to Docker daemon 2.048 kB ... \",\"一般来说，应该会将 Dockerfile 置于一个空目录下，或者项目根目录下。如果该目录下没有所需文件，那么应该把所需文件复制一份过来。如果目录下有些东西确实不希望构建时传给 Docker 引擎，那么可以用 .gitignore 一样的语法写一个 .dockerignore，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。\",\"那么为什么会有人误以为 . 是指定 Dockerfile 所在目录呢？这是因为在默认情况下，如果不额外指定 Dockerfile 的话，会将上下文目录下的名为 Dockerfile 的文件作为 Dockerfile。\",\"这只是默认行为，实际上 Dockerfile 的文件名并不要求必须为 Dockerfile，而且并不要求必须位于上下文目录中，比如可以用 -f ../Dockerfile.php 参数指定某个文件作为 Dockerfile。\",\"当然，一般大家习惯性的会使用默认的文件名 Dockerfile，以及会将其置于镜像构建上下文目录中。\"]},\"61\":{\"h\":\"镜像的实现原理\",\"t\":[\"Docker 镜像是怎么实现增量的修改和维护的？\",\"每个镜像都由很多层次构成，Docker 使用 Union FS 将这些不同的层结合到一个镜像中去。\",\"通常 Union FS 有两个用途, 一方面可以实现不借助 LVM、RAID 将多个 disk 挂到同一个目录下,另一个更常用的就是将一个只读的分支和一个可写的分支联合在一起，Live CD 正是基于此方法可以允许在镜像不变的基础上允许用户在其上进行一些写操作。\",\"Docker 在 OverlayFS 上构建的容器也是利用了类似的原理。\"]},\"62\":{\"h\":\"容器\",\"t\":[\"容器是 Docker 又一核心概念。\",\"简单的说，容器是独立运行的一个或一组应用，以及它们的运行态环境。对应的，虚拟机可以理解为模拟运行的一整套操作系统（提供了运行态环境和其他系统环境）和跑在上面的应用。\"]},\"63\":{\"h\":\"启动容器\",\"t\":[\"启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（exited）的容器重新启动。\",\"因为 Docker 的容器实在太轻量级了，很多时候用户都是随时删除和新创建容器。\"]},\"64\":{\"h\":\"新建并启动\",\"t\":[\"所需要的命令主要为 docker run。\",\"例如，下面的命令输出一个 “Hello World”，之后终止容器。\",\"docker run ubuntu:18.04 /bin/echo 'Hello world' Hello \",\"下面的命令则启动一个 bash 终端，允许用户进行交互。docker run -t -i ubuntu:18.04 /bin/bash\",\"其中，-t 选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上， -i 则让容器的标准输入保持打开。\",\"当利用 docker run 来创建容器时，Docker 在后台运行的标准操作包括：\",\"检查本地是否存在指定的镜像，不存在就从 registry 下载\",\"利用镜像创建并启动一个容器\",\"分配一个文件系统，并在只读的镜像层外面挂载一层可读写层\",\"从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去\",\"从地址池配置一个 ip 地址给容器\",\"执行用户指定的应用程序\",\"执行完毕后容器被终止\"]},\"65\":{\"h\":\"启动已终止容器\",\"t\":[\"可以利用 docker container start 命令，直接将一个已经终止（exited）的容器启动运行。\",\"容器的核心为所执行的应用程序，所需要的资源都是应用程序运行所必需的。除此之外，并没有其它的资源。可以在伪终端中利用 ps 或 top 来查看进程信息。\"]},\"66\":{\"h\":\"后台运行\",\"t\":[\"更多的时候，需要让 Docker 在后台运行而不是直接把执行命令的结果输出在当前宿主机下。此时，可以通过添加 -d 参数来实现。\",\"下面举两个例子来说明一下。如果不使用 -d 参数运行容器。\",\"$ docker run ubuntu:18.04 /bin/sh -c \\\"while true; do echo hello world; sleep 1; done\\\" hello world hello world hello world hello world \",\"容器会把输出的结果 (STDOUT) 打印到宿主机上面\",\"如果使用了 -d 参数运行容器。\",\"$ docker run -d ubuntu:18.04 /bin/sh -c \\\"while true; do echo hello world; sleep 1; done\\\" 77b2dc01fe0f3f1265df143181e7b9af5e05279a884f4776ee75350ea9d8017a \",\"此时容器会在后台运行并不会把输出的结果 (STDOUT) 打印到宿主机上面(输出结果可以用 docker logs 查看)。\",\"注： 容器是否会长久运行，是和 docker run 指定的命令有关，和 -d 参数无关。\",\"使用 -d 参数启动后会返回一个唯一的 id，也可以通过 docker container ls 命令来查看容器信息。\"]},\"67\":{\"h\":\"终止容器\",\"t\":[\"可以使用 docker container stop 来终止一个运行中的容器。\"]},\"68\":{\"h\":\"进入容器\",\"t\":[\"在使用 -d 参数时，容器启动后会进入后台。\",\"某些时候需要进入容器进行操作，包括使用 docker attach 命令或 docker exec 命令，推荐大家使用 docker exec 命令，原因会在下面说明。\",\"attach 命令\",\"下面示例如何使用 docker attach 命令。\",\"$ docker run -dit ubuntu 243c32535da7d142fb0e6df616a3c3ada0b8ab417937c853a9e1c251f499f550 $ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 243c32535da7 ubuntu:latest \\\"/bin/bash\\\" 18 seconds ago Up 17 seconds nostalgic_hypatia $ docker attach 243c root@243c32535da7:/# \",\"注意： 如果从这个 stdin 中 exit，会导致容器的停止。\",\"exec 命令\",\"-i -t 参数\",\"docker exec 后边可以跟多个参数，这里主要说明 -i -t 参数。\",\"只用 -i 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。\",\"当 -i -t 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。\",\"$ docker run -dit ubuntu 69d137adef7a8a689cbcb059e94da5489d3cddd240ff675c640c8d96e84fe1f6 $ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 69d137adef7a ubuntu:latest \\\"/bin/bash\\\" 18 seconds ago Up 17 seconds zealous_swirles $ docker exec -i 69d1 bash ls bin boot dev ... $ docker exec -it 69d1 bash root@69d137adef7a:/# \"]},\"69\":{\"h\":\"导出容器\",\"t\":[\"如果要导出本地某个容器，可以使用 docker export 命令。\",\"$ docker container ls -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 7691a814370e ubuntu:18.04 \\\"/bin/bash\\\" 36 hours ago Exited (0) 21 hours ago test $ docker export 7691a814370e > ubuntu.tar \",\"这样将导出容器快照到本地文件。\"]},\"70\":{\"h\":\"导入容器快照\",\"t\":[\"可以使用 docker import 从容器快照文件中再导入为镜像，例如\",\"$ cat ubuntu.tar | docker import - test/ubuntu:v1.0 $ docker image ls REPOSITORY TAG IMAGE ID CREATED VIRTUAL SIZE test/ubuntu v1.0 9d37a6082e97 About a minute ago 171.3 MB \"]},\"71\":{\"h\":\"删除容器\",\"t\":[\"可以使用 docker container rm 来删除一个处于终止状态的容器。例如\",\"$ docker container rm trusting_newton trusting_newton \",\"如果要删除一个运行中的容器，可以添加 -f 参数。Docker 会发送 SIGKILL 信号给容器。\"]},\"72\":{\"h\":\"清理所有处于终止状态的容器\",\"t\":[\"用 docker container ls -a 命令可以查看所有已经创建的包括终止状态的容器，如果数量太多要一个个删除可能会很麻烦，用下面的命令可以清理掉所有处于终止状态的容器。\",\"$ docker container prune \"]},\"73\":{\"h\":\"仓库\",\"t\":[\"仓库（Repository）是集中存放镜像的地方。\",\"一个容易混淆的概念是注册服务器（Registry）。实际上注册服务器是管理仓库的具体服务器，每个服务器上可以有多个仓库，而每个仓库下面有多个镜像。从这方面来说，仓库可以被认为是一个具体的项目或目录。例如对于仓库地址 docker.io/ubuntu 来说，docker.io 是注册服务器地址，ubuntu 是仓库名。\"]},\"74\":{\"h\":\"数据管理\",\"t\":[\"介绍如何在 Docker 内部以及容器之间管理数据，在容器中管理数据主要有两种方式：\",\"数据卷（Volumes）\",\"挂载主机目录 (Bind mounts)\",\"数据卷 是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：\",\"数据卷 可以在容器之间共享和重用 对 数据卷 的修改会立马生效 对 数据卷 的更新，不会影响镜像 数据卷 默认会一直存在，即使容器被删除 注意：数据卷 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会复制到数据卷中（仅数据卷为空时会复制）。 \",\"创建一个数据卷\",\"$ docker volume create my-vol \",\"查看所有的 数据卷\",\"$ docker volume ls DRIVER VOLUME NAME local my-vol \",\"在主机里使用以下命令可以查看指定 数据卷 的信息\",\"$ docker volume inspect my-vol [ { \\\"Driver\\\": \\\"local\\\", \\\"Labels\\\": {}, \\\"Mountpoint\\\": \\\"/var/lib/docker/volumes/my-vol/_data\\\", \\\"Name\\\": \\\"my-vol\\\", \\\"Options\\\": {}, \\\"Scope\\\": \\\"local\\\" } ] \",\"启动一个挂载数据卷的容器\",\"在用 docker run 命令的时候，使用 --mount 标记来将 数据卷 挂载到容器里。在一次 docker run 中可以挂载多个 数据卷。\",\"下面创建一个名为 web 的容器，并加载一个 数据卷 到容器的 /usr/share/nginx/html 目录。\",\"$ docker run -d -P \\\\ --name web \\\\ # -v my-vol:/usr/share/nginx/html \\\\ --mount source=my-vol,target=/usr/share/nginx/html \\\\ nginx:alpine \",\"查看数据卷的具体信息\",\"$ docker inspect web \",\"在主机里使用以下命令可以查看 web 容器的信息\",\"$ docker inspect web \",\"数据卷 信息在 \\\"Mounts\\\" Key 下面\",\"\\\"Mounts\\\": [ { \\\"Type\\\": \\\"volume\\\", \\\"Name\\\": \\\"my-vol\\\", \\\"Source\\\": \\\"/var/lib/docker/volumes/my-vol/_data\\\", \\\"Destination\\\": \\\"/usr/share/nginx/html\\\", \\\"Driver\\\": \\\"local\\\", \\\"Mode\\\": \\\"\\\", \\\"RW\\\": true, \\\"Propagation\\\": \\\"\\\" } ], \",\"删除数据卷\",\"$ docker volume rm my-vol \",\"数据卷 是被设计用来持久化数据的，它的生命周期独立于容器，Docker 不会在容器被删除后自动删除 数据卷，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的 数据卷。如果需要在删除容器的同时移除数据卷。可以在删除容器的时候使用 docker rm -v 这个命令。\",\"无主的数据卷可能会占据很多空间，要清理请使用以下命令\",\"$ docker volume prune \",\"挂载一个主机目录作为数据卷\",\"使用 --mount 标记可以指定挂载一个本地主机的目录到容器中去。\",\"$ docker run -d -P \\\\ --name web \\\\ # -v /src/webapp:/usr/share/nginx/html \\\\ --mount type=bind,source=/src/webapp,target=/usr/share/nginx/html \\\\ nginx:alpine \",\"上面的命令加载主机的 /src/webapp 目录到容器的 /usr/share/nginx/html目录。这个功能在进行测试的时候十分方便，比如用户可以放置一些程序到本地目录中，来查看容器是否正常工作。本地目录的路径必须是绝对路径，以前使用 -v 参数时如果本地目录不存在 Docker 会自动为你创建一个文件夹，现在使用 --mount 参数时如果本地目录不存在，Docker 会报错。\",\"Docker 挂载主机目录的默认权限是 读写，用户也可以通过增加 readonly 指定为 只读。\",\"Docker 挂载主机目录的默认权限是 读写，用户也可以通过增加 readonly 指定为 只读。\",\"$ docker run -d -P \\\\ --name web \\\\ # -v /src/webapp:/usr/share/nginx/html:ro \\\\ --mount type=bind,source=/src/webapp,target=/usr/share/nginx/html,readonly \\\\ nginx:alpine \",\"加了 readonly 之后，就挂载为 只读 了。如果你在容器内 /usr/share/nginx/html 目录新建文件，会显示如下错误\",\"/usr/share/nginx/html # touch new.txt touch: new.txt: Read-only file system \"]},\"75\":{\"h\":\"底层实现\",\"t\":[\"Docker 底层的核心技术包括 Linux 上的命名空间（Namespaces）、控制组（Control groups）、Union 文件系统（Union file systems）和容器格式（Container format）。\",\"我们知道，在操作系统中，包括内核、文件系统、网络、PID、UID、IPC、内存、硬盘、CPU 等等，所有的资源都是应用进程直接共享的。\",\"要想实现虚拟化，除了要实现对内存、CPU、网络IO、硬盘IO、存储空间等的限制外，还要实现文件系统、网络、PID、UID、IPC等等的相互隔离。 前者相对容易实现一些，后者则需要宿主机系统的深入支持。\",\"随着 Linux 系统对于命名空间功能的完善实现，程序员已经可以实现上面的所有需求，让某些进程在彼此隔离的命名空间中运行。大家虽然都共用一个内核和某些运行时环境（例如一些系统命令和系统库），但是彼此却看不到，都以为系统中只有自己的存在。这种机制就是容器（Container），利用命名空间来做权限的隔离控制，利用 cgroups 来做资源分配。\",\"Docker 采用了 C/S 架构，包括客户端和服务端。Docker 守护进程 （Daemon）作为服务端接受来自客户端的请求，并处理这些请求（创建、运行、分发容器）。\"]},\"76\":{\"h\":\"命名空间\",\"t\":[\"命名空间是 Linux 内核一个强大的特性。每个容器都有自己单独的命名空间，运行在其中的应用都像是在独立的操作系统中运行一样。命名空间保证了容器之间彼此互不影响。\",\"pid 命名空间\",\"不同用户的进程就是通过 pid 命名空间隔离开的，且不同命名空间中可以有相同 pid。所有的 LXC 进程在 Docker 中的父进程为 Docker 进程，每个 LXC 进程具有不同的命名空间。同时由于允许嵌套，因此可以很方便的实现嵌套的 Docker 容器。\",\"net 命名空间\",\"有了 pid 命名空间，每个命名空间中的 pid 能够相互隔离，但是网络端口还是共享 host 的端口。网络隔离是通过 net 命名空间实现的， 每个 net 命名空间有独立的 网络设备，IP 地址，路由表，/proc/net 目录。这样每个容器的网络就能隔离开来。Docker 默认采用 veth 的方式，将容器中的虚拟网卡同 host 上的一 个Docker 网桥 docker0 连接在一起。\",\"ipc 命名空间\",\"容器中进程交互还是采用了 Linux 常见的进程间交互方法(interprocess communication - IPC)， 包括信号量、消息队列和共享内存等。然而同 VM 不同的是，容器的进程间交互实际上还是 host 上具有相同 pid 命名空间中的进程间交互，因此需要在 IPC 资源申请时加入命名空间信息，每个 IPC 资源有一个唯一的 32 位 id。\",\"mnt 命名空间\",\"类似 chroot，将一个进程放到一个特定的目录执行。mnt 命名空间允许不同命名空间的进程看到的文件结构不同，这样每个命名空间 中的进程所看到的文件目录就被隔离开了。同 chroot 不同，每个命名空间中的容器在 /proc/mounts 的信息只包含所在命名空间的 mount point。\",\"uts 命名空间\",\"UTS(\\\"UNIX Time-sharing System\\\") 命名空间允许每个容器拥有独立的 hostname 和 domain name， 使其在网络上可以被视作一个独立的节点而非 主机上的一个进程。\",\"user 命名空间\",\"每个容器可以有不同的用户和组 id， 也就是说可以在容器内用容器内部的用户执行程序而非主机上的用户。\"]},\"77\":{\"h\":\"控制组\",\"t\":[\"控制组是 Linux 内核的一个特性，主要用来对共享资源进行隔离、限制、审计等。只有能控制分配到容器的资源，才能避免当多个容器同时运行时的对系统资源的竞争。\",\"控制组技术最早是由 Google 的程序员在 2006 年提出，Linux 内核自 2.6.24 开始支持。\",\"控制组可以提供对容器的内存、CPU、磁盘 IO 等资源的限制和审计管理。\"]},\"78\":{\"h\":\"联合文件系统\",\"t\":[\"联合文件系统是 Docker 镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。另外，不同 Docker 容器就可以共享一些基础的文件系统层，同时再加上自己独有的改动层，大大提高了存储的效率。\",\"Docker 中使用的 AUFS（Advanced Multi-Layered Unification Filesystem）就是一种联合文件系统。 AUFS 支持为每一个成员目录（类似 Git 的分支）设定只读（readonly）、读写（readwrite）和写出（whiteout-able）权限, 同时 AUFS 里有一个类似分层的概念, 对只读权限的分支可以逻辑上进行增量地修改(不影响只读部分的)。\",\"Docker 目前支持的联合文件系统包括 OverlayFS, AUFS, Btrfs, VFS, ZFS 和 Device Mapper。\"]},\"79\":{\"c\":[\"tutorial\"]},\"80\":{\"c\":[\"docker\"]},\"81\":{\"h\":\"剑指 Docker 😃\",\"t\":[\"Docker 快速入门你需要了解的一切...\"]},\"82\":{\"c\":[\"tutorial\"]},\"83\":{\"c\":[\"docker\"]},\"84\":{\"h\":\"Golang 笔记\",\"t\":[\"这里整理了一下我在学习Go语言过程中的笔记🚀\"]},\"85\":{\"c\":[\"Golang笔记\",\"tutorial\"]},\"86\":{\"h\":\"Rust 笔记\",\"t\":[\"这里整理了一下我在学习Rust语言过程中的笔记🚀。\"]},\"87\":{\"c\":[\"Rust 笔记\"]},\"88\":{\"h\":\"编程工具\",\"t\":[\"这里整理了一下我使用的工具，不局限于编程工具🚀\"]},\"89\":{\"c\":[\"生产力工具\"]},\"90\":{\"h\":\"TCP/IP Network Program\",\"t\":[\"If you are learn TCP/IP network, you must have heard that CS model with this.\",\"But if you are new with network programing, there are difficult.\",\"This is a tutor try to help you to know network programing simply.\",\"The first of all, you have to gcc env.\",\"Input gcc --version on your shell.\",\"$ gcc --version gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0 Copyright (C) 2021 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. \",\"Oh... we will to travel will c language.\",\"First at first, we touch a client.c file, to start our client.\",\"touch client.c server.c \",\"# client.c #include <netinet/in.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/socket.h> #include <arpa/inet.h> void error_handling(char *message); int main(int argc, char* argv[]){ int sock; struct sockaddr_in serv_addr; char message[30]; int str_len; if (argc != 3) { printf(\\\"Useage: %s <IP> <port>\\\\n\\\", argv[0]); exit(1); } sock = socket(PF_INET, SOCK_STREAM, 0); if (sock == -1) { error_handling(\\\"socket() error\\\"); } memset(&serv_addr, 0, sizeof(serv_addr)); serv_addr.sin_family = AF_INET; serv_addr.sin_addr.s_addr = inet_addr(argv[1]); serv_addr.sin_port = htons(atoi(argv[2])); if(connect(sock, (struct sockaddr*)&serv_addr, sizeof(serv_addr))==-1) { error_handling(\\\"connect() error!\\\"); } str_len = read(sock, message, sizeof(message)-1); if (str_len == -1) { error_handling(\\\"read() error\\\"); } printf(\\\"Message read from server:%s \\\\n\\\", message); close(sock); return 0; } void error_handling(char *message) { fputs(message, stderr); fputc('\\\\n', stderr); exit(1); } \",\"I know you are confused with all of this. So I will explain all client code.\",\"Let's go to main func.\",\" // create a sock to save result of socket() int sock; // create a serv_addr to save sock in our compute addr struct sockaddr_in serv_addr; // create message to send message to client char message[30]; // str_len is strlen(message) int str_len; if (argc != 3) { printf(\\\"Useage: %s <IP> <port>\\\\n\\\", argv[0]); exit(1); } /* * sock is a file descriptor * you can use sock to manipulate serve * if sock == -1; socket() error! */ sock = socket(PF_INET, SOCK_STREAM, 0); if (sock == -1) { error_handling(\\\"socket() error\\\"); } \",\" // memset is a function to init our serv_addr memset(&serv_addr, 0, sizeof(serv_addr)); // init our serv_addr with value serv_addr.sin_family = AF_INET; serv_addr.sin_addr.s_addr = inet_addr(argv[1]); serv_addr.sin_port = htons(atoi(argv[2])); // connect our serv_addr with sock file descriptor if(connect(sock, (struct sockaddr*)&serv_addr, sizeof(serv_addr))==-1) { error_handling(\\\"connect() error!\\\"); } // read message str_len = read(sock, message, sizeof(message)-1); if (str_len == -1) { error_handling(\\\"read() error\\\"); } printf(\\\"Message read from server:%s \\\\n\\\", message); close(sock); return 0; \",\"So now, our client.c complete!!!\",\"Let us to compile client.c gcc client.c -o client.\",\"Run it with ./client 127.0.0.1 8888\",\"connect() error! \",\"Oh... connect error, Looks like we haven't written our server side yet.\",\"I almost forgot the server side code here...\",\"# server.c #include <netinet/in.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #include <sys/socket.h> #include <arpa/inet.h> void error_handling(char *message); int main(int argc, char const *argv[]) { int serv_sock; int clnt_sock; struct sockaddr_in serv_addr; struct sockaddr_in clnt_addr; socklen_t clnt_addr_size; char message[]=\\\"Hello world\\\\n\\\"; if (argc != 2) { printf(\\\"Usage: %s <port>\\\\n\\\", argv[0]); exit(1); } serv_sock = socket(PF_INET, SOCK_STREAM, 0); if (serv_sock == -1) { error_handling(\\\"socket() error\\\"); } memset(&serv_addr, 0, sizeof(serv_addr)); serv_addr.sin_family = AF_INET; serv_addr.sin_addr.s_addr = htonl(INADDR_ANY); serv_addr.sin_port=htons(atoi(argv[1])); if (bind(serv_sock,(struct sockaddr*)&serv_addr, sizeof(serv_addr))==-1) { error_handling(\\\"bind() error\\\"); } if (listen(serv_sock, 5) == -1) { error_handling(\\\"listen() error\\\"); } clnt_addr_size=sizeof(clnt_addr); clnt_sock=accept( serv_sock, (struct sockaddr*)&clnt_addr, &clnt_addr_size); if (clnt_sock == -1) { error_handling(\\\"accept() error\\\"); } write(clnt_sock, message, sizeof(message)); close(clnt_sock); close(serv_sock); return 0; } void error_handling(char *message) { fputs(message, stderr); fputc('\\\\n', stderr); exit(1); } \",\"I will explain all of code.\",\" // server and client sock... int serv_sock; int clnt_sock; // server and client address file descriptor struct sockaddr_in serv_addr; struct sockaddr_in clnt_addr; socklen_t clnt_addr_size; // send message to client you can change it char message[]=\\\"Hello world\\\\n\\\"; if (argc != 2) { printf(\\\"Usage: %s <port>\\\\n\\\", argv[0]); exit(1); } // sock file descriptor serv_sock = socket(PF_INET, SOCK_STREAM, 0); if (serv_sock == -1) { error_handling(\\\"socket() error\\\"); } \",\" // init serv_addr memset(&serv_addr, 0, sizeof(serv_addr)); serv_addr.sin_family = AF_INET; serv_addr.sin_addr.s_addr = htonl(INADDR_ANY); serv_addr.sin_port=htons(atoi(argv[1])); // bind our port if (bind(serv_sock,(struct sockaddr*)&serv_addr, sizeof(serv_addr))==-1) { error_handling(\\\"bind() error\\\"); } // listen if (listen(serv_sock, 5) == -1) { error_handling(\\\"listen() error\\\"); } clnt_addr_size=sizeof(clnt_addr); clnt_sock=accept( serv_sock, (struct sockaddr*)&clnt_addr, &clnt_addr_size); if (clnt_sock == -1) { error_handling(\\\"accept() error\\\"); } // write message to client write(clnt_sock, message, sizeof(message)); close(clnt_sock); close(serv_sock); return 0; \",\"Let's run it;\",\"gcc server.c -o server gcc client.c -o client ./server 8888 \",\"Start client to receive message.\",\"./client 127.0.0.1 8888 Message read from server:Hello world \",\"Oh, Message received!!!\",\"Let's change message ...\",\"#server.c char message[]=\\\"Hello C network program\\\\n\\\"; \",\"Recompile.\",\"gcc server.c -o server ./server 8888 \",\"./client 127.0.0.1 8888 server:Hello C network program \",\"This tutorial is over, but network programming is just beginning Good luck\"]},\"91\":{\"c\":[\"c\",\"linux\"]},\"92\":{\"c\":[\"network\"]},\"93\":{\"h\":\"概述-简介比特币\",\"t\":[\"这一系列笔记是我阅读《精通比特币》时的阅读概要，意图让大家快速理解比特币(虽然很多教学视频已经做了这样的工作)。\",\"本系列笔记有些地方会加入一些代码方便读者更深入理解原理。\"]},\"94\":{\"h\":\"什么是比特币？\",\"t\":[\"比特币是区块链技术的第一个应用，时至今日(2023年)已然成为了当今世界上不可忽视的全球自由资本市场的子集。当然这个子集很特殊，特殊到你的手机都可以运行一个比特币的全节点，只要存储空间足够。\",\"用户可以通过比特币完成传统货币可以完成的任何事情，包括购买、出售、借贷等。\",\"但是与传统货币不同，比特币是完全虚拟的，比特币隐含在发起者向接受者的交易中的，用户通过自己掌握的私钥来证明自己拥有比特币的所有权。\",\"比特币是一个点对点的分布式系统，系统中不存在中央服务器或控制点。 比特币是通过一个叫做挖矿(mint)的过程创造的，矿工在处理比特币交易时通过大量计算竞猜一个数学题的答案。 比特币网络的任何参与者（使用一个设备运营比特币完整协议栈的用户）都可以成为矿工，利用他们电脑的处理能力来验证和记录交易。 平均每隔10分钟，会有一个矿工计算出数学题的答案，可以验证过去10分钟的交易，并且获得新发行的比特币奖励。 实质上，比特币将中央银行的货币发行和清算功能进行了去中心化，不再需要任何中央银行了。\",\"比特币协议中内置了调用网络中挖矿方法的算法，难度是动态调整的，所以无论网络中有多少矿工，平均10分钟都会有一个矿工成功挖到矿，比特币的总量为2100个，每隔4年，比特币的发行速率都会减半，到2140年，所有比特币发行完毕。 由于比特币的发行速度递减，长期来看，比特币是货币通缩的。\",\"比特币是协议的名称，是一个点对点网络，也是分布式计算的创新。 比特币货币本身只是这项创新的第一个应用。 比特币代表了数十年密码学和分布式系统研究的一个高峰，以独特而强大的方式将四项关键创新融合在一起：\",\"去中心化的点对点网络（比特币协议）\",\"公开的账本（区块链）\",\"一套独立交易验证和货币发行的规则（共识协议）\",\"在有效的区块链上达成全球分散共识的机制（PoW工作证明机制）\"]},\"95\":{\"h\":\"比特币的历史\",\"t\":[\"从中本聪在2008年发表的比特币白皮书开始比特币白皮书,在借鉴了b-money和HashCash等之前的几个发明后，创造了完全去中心化的虚拟货币系统。关键性创新是通过POW(工作量证明)每10分钟进行一次选举，使整个网络的交易状态达成共识，这个方法优雅地解决了双重支付(双花)的问题。\",\"中本聪的发明也是一个分布式计算问题的实践和创新：“拜占庭将军问题”。简单来说，这个问题涉及试图在不可靠且可能受损的网络上交换信息来达成行动方案或系统状态的统一。 中本聪的Proof-of-Work的方案，不需要中心化的可信机构，即可达成共识，代表了分布式计算领域的突破，有着超越数字货币的广泛适用性。 它可以用于在去中心化网络中达成共识，证明选举，抽奖，资产登记，数字公证等的公平性。\"]},\"96\":{\"h\":\"钱包\"},\"97\":{\"c\":[\"notes\"]},\"98\":{\"c\":[\"bitcoin\"]},\"99\":{\"h\":\"比特币如何运行?\",\"t\":[\"交易，区块，挖矿和区块链\"]},\"100\":{\"c\":[\"notes\"]},\"101\":{\"c\":[\"bitcoin\"]},\"102\":{\"h\":\"概述-简介以太坊\"},\"103\":{\"c\":[\"notes\"]},\"104\":{\"c\":[\"ethereum\"]},\"105\":{\"h\":\"Solidity基础学习\",\"t\":[\"学习Solidity 最简单的方式就是通过在线的Remix学习，如果运行的代码没问题，那么就可以编译通过，反之就是代码有问题。\",\"Solidity的基础数据类型:boolean、uint、int、address、bytes。\",\"基础函数：\",\"变量有四种不同的可见域:\",\"public 任何都可见\",\"private 本合约可看\",\"external 外部合约可看\",\"internal 内部合约+继承本合约可看\",\"pure、view不会消耗gas。\",\"evm有六种存储数据的方式:\",\"stack\",\"memory\",\"storage\",\"calldata\",\"code\",\"logs\",\"calldata合memory的区别是如果最终不想改变变量名，就使用calldata\"]},\"106\":{\"c\":[\"notes\"]},\"107\":{\"c\":[\"ethereum\"]},\"108\":{\"h\":\"Solana 开发基础简介\",\"t\":[\"最近沉迷Solana生态，并且基于已有的链上合约写了个Dapp(Anyswap)，感觉得深入一下solana链基础才能配合后续更好的开发,所以本文想用大白话来总结一下solana开发需要的知识。\",\"本文基于solana官方文档而来\"]},\"109\":{\"h\":\"Solana 简介\",\"t\":[\"区块链发展了这么多年，有两个链是人们在构建过程中绕不过去的坎儿，其中之一是BTC，另外就是ETH。\",\"BTC自然不用多说，我想聊的更多的是ETH，ETH自2014年横空出世以来解决了人们在链上的很多问题，特别是智能合约的出现，让DEFI、NFT等概念大火。\",\"ETH发展了这么多年，可以说基于ETH发展出的生态已经让ETH基于区块链开发的垄断地位了，但是也有很多人对ETH的高Gas不满，是的一个链用的人多了Gas自然就贵了，这也是Solana崛起的原因之一——Gas非常便宜，正常情况下不到一美分。但如果后续Solana生态发展成ETH的样子，Gas是什么样子也说不准，但目前来说，Solana生态还在蓬勃发展。\",\"另外Solana的优点就是的链上程序是二进制应用，C、C++、Rust都可以编写(最近出了个Python的解释器有待观望)，非常方便已有这些编程语言基础的程序员入门。之后就是确认时间非常短400ms，就可以在区块中确认，几乎没有等待时间。\"]},\"110\":{\"h\":\"Solana 开发入门\",\"t\":[\"简而言之Solana的开发分为两部分：\",\"链上程序开发\",\"链下Dapp开发\",\"链上程序是公开的大家都可以使用的合约程序，链下Dapp是可以给用户使用的界面(普通用户自然不可能与链上程序直接交互)。\"]},\"111\":{\"h\":\"账户模型\",\"t\":[\"账户是Solana的核心要素，可以理解为unix世界里的文件。\",\"关键点:\",\"账户最多存储10MB包含可执行程序、程序状态。\",\"账户需要SOL为单位的租金(rent)与存储的数据量成正比，租金可以在账户关闭时全额退还。(与BTC的UTXO模式不同)\",\"账户都有一个程序“所有者”，只有账户所有者程序才能修改余额，任何人都可以增加余额。\",\"程序账户是存储可执行代码的无状态帐户。\",\"数据帐户由程序创建，用于存储和管理程序状态。\",\"本机程序是Solana运行时附带的内置程序。\",\"Sysvar帐户是存储网络群集状态的特殊帐户。\",\"账户结构：\",\"data: 存储帐户状态的字节数组。如果帐户是一个程序（智能合约），则存储可执行程序代码。此字段通常称为“帐户数据”。 executable ：指示帐户是否为程序的布尔标志 lamports ：账户余额的数字表示，单位为lamports，即 SOL 的最小单位（1SOL=10e9 lamports）（为何是使用lamports，原因是solana为了避免链上程序处理浮点数设计的，所有链上程序交互都是以整数计算）。 owner: 指定拥有帐户程序的公钥（程序 ID）。 \",\"程序账户的owner的所有者才可以修改账户上的存储数据或转账。\"]},\"112\":{\"h\":\"本机程序\",\"t\":[\"本机程序是solana链的原生程序，为网络提供核心功能。在Solana上开发自定义程序时，通常会与两个本机程序进行交互，即系统程序和BPF加载程序。\",\"默认情况下所有新账户都归系统程序所有，系统程序执行几个关键任务，例如：\",\"创建新帐户：只有系统程序可以创建新帐户。\",\"空间分配：设置每个账户的数据字段的字节容量。\",\"分配程序所有权：系统程序创建帐户后，可以将指定的程序所有者重新分配给其他程序帐户。这就是自定义程序获取系统程序创建的新帐户的所有权的方式。 在Solana上，“钱包”只是系统程序拥有的帐户。钱包的lamport余额是账户拥有的SOL金额。\",\"BPFLoader程序\",\"BPF加载程序是被指定为网络上所有其他程序（不包括本机程序）的“所有者”的程序。它负责部署、升级和执行自定义程序。\"]},\"113\":{\"h\":\"Sysvar账户\",\"t\":[\"Sysvar帐户是位于预定义地址的特殊帐户，用于提供对集群状态数据的访问。这些帐户会使用有关网络群集的数据动态更新。您可以在此处找到Sysvar帐户的完整列表。\"]},\"114\":{\"h\":\"自定义程序\",\"t\":[\"在 Solana 上，“智能合约”被称为程序。程序是包含可执行代码的帐户，并由设置为 true 的“可执行”标志指示。\",\"程序部署时理论上会产生三个账户：\",\"程序账户： 链上程序主账户，存储可执行账户的地址(即存储已编译的程序代码的账户)和程序的更新权限（有权对程序账户进行更改的地址）。\",\"程序可执行数据帐户: 第一点提到的包含程序的可执行字节码的帐户。\",\"缓冲区帐户：在主动部署或升级程序时存储字节码的临时帐户。该过程完成后，数据将传输到程序可执行数据帐户，并关闭缓冲区帐户。 例如，以下是指向令牌扩展程序帐户及其对应程序可执行数据帐户的 Solana Explorer 的链接。\"]},\"115\":{\"h\":\"数据帐户\",\"t\":[\"Solana程序是“无状态的”，这意味着程序帐户仅包含程序的可执行字节码。若要存储和修改其他数据，必须创建新帐户。这些帐户通常称为“数据帐户”。\",\"数据帐户可以存储所有者程序代码中定义的任何任意数据。\"]},\"116\":{\"h\":\"交易与指令\",\"t\":[\"在Solana上我们发送交易与网络进行交互，一个交易可以包含多个指令，每个指令代表一个要处理的具体操作。上述提到的程序账户就可以处理Solana网络的交互逻辑。\",\"关键点：\",\"执行顺序：如果交易包含多条指令，则按照指令添加到交易中的顺序进行处理。\",\"原子性：交易是原子性的，这意味着它要么完全完成，所有指令都成功处理，要么完全失败。如果交易中的任何指令失败，则不会执行任何指令。\",\"简单说，一条交易可以视为处理一条或多条指令的请求。比如一个指令是发送交易给A，另一个指令是与B程序进行交互...\",\"每次交易最大为1232个字节\",\"Transcation由以下组成：\",\"签名(sign)：交易中包含的签名数组。\",\"消息(message)：要原子性处理的指令列表。\",\"消息包含\",\"消息头：指定签名者和只读账户的数量。\",\"账户地址：交易指令所需的账户地址数组。\",\"最近区块哈希：充当交易的时间戳。\",\"指令：要执行的指令数组。\",\"Solana网络坚持 1280 字节的最大传输单元 （MTU） 大小。符合Ipv6大小限制，确保UDP可以快速可靠传递集群消息。在考虑必要的标头（IPv6 为 40 字节，分段为8 字节）后，仍有 1232 个字节可用于数据包的数据，例如序列化交易。\",\"其中签名需要64字节。签名的数量可能会有所不同，具体取决于交易的要求。 消息：消息包括说明、帐户和其他元数据，每个帐户需要 32 个字节。账户和元数据的组合大小可能会有所不同，具体取决于交易中包含的指令。\"]},\"117\":{\"h\":\"消息\",\"t\":[\"消息头指定交易的帐户地址数组中包含的帐户的权限。它由三个字节组成，每个字节包含一个 u8 整数，它们共同指定：\",\"交易所需的签名数量。\",\"需要签名的只读账户地址数量。\",\"不需要签名的只读账户地址数量。\",\"交易消息包括一个数组，其中包含交易内指令所需的所有账户地址。\",\"最近区块哈希：交易区块哈希的最长期限为 150 个区块（假设区块时间为 400 毫秒，则为大约1分钟）。如果交易的区块哈希比最新的区块哈希早 150 个区块，则认为该交易已过期。这意味着未在特定时间范围内处理的交易将永远不会被执行。\",\"指令数组：与帐户地址数组非常相似，这个紧凑的数组以指令数的紧凑型u16编码开始，然后是指令数组。数组中的每条指令都指定以下信息：\",\"程序 ID：标识将处理指令的链上程序。这表示为指向帐户地址数组中的帐户地址的 u8 索引。\",\"账户地址索引的紧凑数组：指向指令所需的每个账户的账户地址数组的 u8 索引数组。\",\"不透明u8数据的紧凑数组：特定于所调用程序的 u8 字节数组。此数据指定要在程序上调用的指令以及指令所需的任何其他数据（例如函数参数）。\"]},\"118\":{\"h\":\"交易费用\",\"t\":[\"Solana区块链有几种不同类型的费用和成本开销，这些费用是使用该无准入要求的网络所产生的。它们可以分为几种特定类型：\",\"交易费用 - 给验证者处理交易/指令的费用\",\"优先级费用 - 一种可选费用，用于提高交易被处理的顺序\",\"租金 - 为了在链上存储数据而预留的余额\",\"交易费用:Solana上的验证节点需要被激励，所以每笔交易都需要给构建Solana的去中心化节点费用。\",\"目前，基础Solana交易费设定为每个签名5k lamports的静态值。在这个基础费用之上，可以添加任何额外的优先级费用。\",\"为什么要交易费？\",\"为提供节点资源的验证者补偿\",\"防止spam垃圾交易横行\",\"通过协议设定的每笔交易的最低费用金额，为网络提供长期的经济稳定性\",\"基础经济模型设计：\",\"每笔交易费用的固定比例（最初是50%）被烧毁（销毁），剩余的部分归当前处理交易的领导者所有。\",\"预先设置好的全局通货膨胀率为分配给Solana 验证者的奖励提供了来源\",\"费用收取\",\"关键点\",\"交易必须至少有一个账户已签署交易并是可写入的。这些可写入的签名者帐户首先在帐户列表中序列化，其中第一个始终用作“费用支付者”。\",\"交易被处理之前，费用支付者账户的余额扣除做为交易费，如果余额不足则交易终止并导致交易失败\",\"如果交易指令中有任何指令失败，则依然扣除交易费\"]},\"119\":{\"h\":\"计算预算\",\"t\":[\"为了防止计算资源的滥用，每个交易都被分配了一个“计算预算”。这个预算指定了有关计算单元的详细信息，包括：\",\"交易可能执行的不同类型操作所关联的计算成本（每个操作消耗的计算单元）\",\"交易可以消耗的最大计算单元数量（计算单元限制）\",\"交易必须遵守的操作边界（如账户数据大小限制）\"]},\"120\":{\"h\":\"账户数据大小限制\",\"t\":[\"交易可以通过包含一个SetLoadedAccountsDataSizeLimit指令（不得超过运行时的绝对最大值）来指定它允许加载的账户数据的最大字节数。如果没有提供SetLoadedAccountsDataSizeLimit，则交易默认使用运行时的MAX_LOADED_ACCOUNTS_DATA_SIZE_BYTES 值。\"]},\"121\":{\"h\":\"计算单元\",\"t\":[\"链上每笔交易执行的所有操作都需要验证者在处理时消耗不同数量的计算资源（计算成本）。这些资源消耗的最小度量单位称为“计算单元”。\",\"在处理交易时，计算单元会被链上执行的每条指令（消耗预算）逐步消耗。由于每条指令执行不同的逻辑（写入帐户、CPI、执行系统调用等），因此每条指令可能消耗不同数量的计算单元。\",\"以下是一些产生计算成本的常见操作：\",\"执行指令\",\"在程序之间传递数据\",\"执行系统调用\",\"使用系统变量\",\"使用 msg! 宏记录日志\",\"记录公钥\",\"创建程序地址（PDAs）\",\"跨程序调用（CPI）\",\"加密操作\"]},\"122\":{\"h\":\"计算单元限制\",\"t\":[\"每笔交易都有一个可以使用的最大计算单元数 （CU），称为“计算单元限制”。每个交易，Solana 运行时的绝对最大计算单元限制为140万CU，并将默认请求的最大限制设置为每条指令每条指令20万CU。\",\"交易可以通过包含单个 SetComputeUnitLimit 指令来请求更具体和最佳的计算单元限制。可以是上限或下限。但它可能永远不会要求高于每笔交易的绝对最大限制。\",\"虽然交易的默认计算单位限制在大多数情况下适用于简单交易，但它们通常不是最佳的（对于运行时和用户）。对于更复杂的交易，例如调用执行多个 CPI 的程序，您可能需要为交易请求更高的计算单位限制。\",\"请求交易的最佳计算单元限制，对于帮助您降低交易费用并帮助在网络上更好地安排交易至关重要。钱包、dApp 和其他服务应确保其计算单元请求是最佳的，以便为其用户提供最佳体验。\"]},\"123\":{\"h\":\"优先级费用\",\"t\":[\"作为计算预算的一部分，运行时支持交易支付一个可选的费用，称为“优先级费用”。支付这笔额外费用有助于提高交易在处理时优先于其他交易的方式，从而缩短执行时间。\"]},\"124\":{\"h\":\"租金\",\"t\":[\"存入每个Solana 账户以使其相关数据在链上可用的费用称为“租金”。这笔费用在每个账户的正常 lamport 余额中扣留，并在账户关闭时收回。\"]},\"125\":{\"h\":\"垃圾回收\",\"t\":[\"未保持 lamport 余额大于零的帐户将在称为垃圾回收的过程中从网络中删除。此过程有助于减少不再使用/维护的数据的网络范围存储。\",\"在交易成功将帐户余额减少到精确 0 后，运行时会自动进行垃圾回收。任何试图将账户余额降低到其租金豁免最低余额（不完全为零）的交易都将失败。\"]},\"126\":{\"h\":\"程序\",\"t\":[\"在 Solana 生态系统中，“智能合约”被称为程序。每个程序都是一个链上账户，用于存储可执行逻辑，并组织成特定的功能，称为指令。\",\"关键点：\",\"程序是包含可执行代码的链上账户。此代码被组织成不同的函数，称为指令\",\"程序是无状态的，但可以包括创建新账户的指令，这些账户用于存储和管理程序状态。\",\"程序可以通过升级权限设定的账户来更新。当升级权限设置为null时，程序变为不可变。\",\"可验证的构建使用户能够验证链上程序是否与公开可用的源代码匹配。\",\"编写Solana程序： Rust、Anchor框架。\"]},\"127\":{\"h\":\"升级Solana程序\",\"t\":[\"链上程序可以由被指定为“升级权限”的账户直接修改，该账户通常是最初部署程序的账户。\",\"如果升级权限被撤销并设置为 None，则程序变为不可变，无法再更新。\"]},\"128\":{\"h\":\"可验证程序\",\"t\":[\"Solana 开发者社区引入了支持可验证构建的工具，使开发者和用户能够验证链上程序是否准确反映了他们公开共享的源代码。\",\"搜索已验证的程序: 要快速检查已验证的程序，用户可以在 SolanaFM浏览器上搜索程序地址并转到到“验证”网页标签。在这里查看经过验证的程序示例。\",\"验证工具: Ellipsis Labs的Solana可验证构建CLI使用户能够独立地验证链上程序与发布的源代码。\",\"Anchor中对可验证构建的支持: Anchor提供了内置的可验证构建支持。详细信息可以在Anchor文档 中找到。\"]},\"129\":{\"h\":\"伯克利包过滤器 (BPF)\",\"t\":[\"Solana利用 LLVM编译器基础设施 将程序编译成可执行和可链接格式 (ELF)文件。这些文件包括Solana程序的伯克利包过滤器 (eBPF)字节码的修改版本，称为“Solana字节码格式” (sBPF)。\",\"LLVM 的使用使 Solana 能够潜在地支持任何可以编译到 LLVM 的 BPF 后端的编程语言。这大大增强了 Solana 作为开发平台的灵活性。\"]},\"130\":{\"h\":\"程序派生地址\",\"t\":[\"这个后续用到了再说\",\"etc\"]},\"131\":{\"h\":\"CPI 跨程序调用\",\"t\":[\"跨程序调用 (CPI) 是指一个程序调用另一个程序的指令。此机制允许 Solana 程序具有可组合性。\",\"您可以将指令视为程序向网络公开的 API 端点，将 CPI 视为一个 API 在内部调用另一个 API。\",\"当一个程序向另一个程序发起跨程序调用（CPI）时：\",\"初始交易中调用程序A的签署者权限会被延申给程序B。\",\"被调用的程序B也可以进一步对其他程序进行CPI，深度最多为4（例如: B->C,C->D）。\",\"这些程序可以代表源自其程序ID的程序PDAs进行“签名”\"]},\"132\":{\"h\":\"Solana链上代币\",\"t\":[\"代币是代表不同类别资产所有权的数字资产。 代币化使产权的数字化成为可能，是管理可替代和不可替代资产的基本组成部分。\",\"同质化代币代表相同类型和价值的可互换和可分割资产（例如 USDC）。\",\"非同质化代币（NFT）代表不可分割资产（例如艺术品）的所有权。\",\"本节将介绍代币在 Solana 上如何表示的基础知识。这些被称为 SPL (Solana 程序库) 代币\",\"代币程序包含与网络上的代币（同质化和非同质化）交互的所有指令逻辑。\",\"铸币账户代表一种特定类型的代币，并存储有关代币的全局元数据， 例如总供应量和铸币权限（授权创建代币新单位的地址）。\",\"代币账户跟踪特定地址拥有特定类型代币（铸币账户）的单位数量的个人所有权。\"]},\"133\":{\"h\":\"代币程序\",\"t\":[\"代币程序 包含与网络上的代币（同质化和非同质化）交互的所有指令逻辑。 Solana上的所有代币实际上是代币计划拥有的 数据账户。\",\"一些常用的说明包括：\",\"InitializeMint:创建一个新的铸币账户来代表一种新型的代币。\",\"InitializeAccount:创建一个新的代币账户来持有特定类型代币（铸币厂）的单位。\",\"MintTo:创建特定类型代币的新单位，并将其添加到代币帐户。这增加了代币的供应，并且只能由铸币账户的铸币厂机构完成。\",\"Transfer:将特定类型代币的单位从一个代币账户转移到另一个代币账户。\"]},\"134\":{\"h\":\"Mint账户\",\"t\":[\"Solana 上的代币由代币计划拥有的铸币账户 的地址唯一标识。 此帐户实际上是特定代币的全局计数器，并存储以下数据：\",\"供应量：代币的总供应量 代币精度：代币小数精度位数 铸币权限：被授权创建代币新单位的账户，从而增加供应量 冻结权限：有权冻代币从“代币账户”转移的账户\"]},\"135\":{\"h\":\"代币账户\",\"t\":[\"要跟踪特定代币的每个单位的个人所有权，必须创建代币计划拥有的另一种类型的数据帐户。此帐户称为 代币帐户 。\",\"账户上最常引用的数据包括：\",\"铸造: 代币账户持有的代币类型\",\"所有者：被授权将代币转出代币账户的账户\",\"金额：代币账户当前持有的代币单位数量\",\"为了让钱包拥有某个代币的单位数量，它需要为特定类型的代币（铸币）创建一个代币账户，将钱包指定为代币账户的所有者。一个钱包可以为同一类型的代币创建多个代币账户，但每个代币账户只能由一个钱包拥有，并持有一种代币的数量。\"]},\"136\":{\"h\":\"关联代币账户\",\"t\":[\"为了简化为特定铸币和所有者查找代币账户地址的过程，我们经常使用关联代币账户。\",\"关联代币账户是一种代币账户，其地址是使用所有者的地址和铸币账户的地址确定派生的。 您可以将关联代币账户视为特定铸币厂和所有者的“默认”代币账户。\",\"重要的是要了解关联的代币账户不是不同类型的代币账户。它只是一个具有特定地址代币帐户。\"]},\"137\":{\"h\":\"群集和公共 RPC 端点\",\"t\":[\"Solana区块链有几个不同的验证节点组，称为集群。每个集群在整体生态系统中承担不同的任务，并包含专用的API节点来处理其各自集群的JSON-RPC请求。\",\"集群内的各个节点由第三方拥有和操作，每个节点都有一个公共端点。\"]},\"138\":{\"h\":\"版本化交易\",\"t\":[\"版本化交易是新的交易形式，允许在 Solana 运行时中使用附加功能，包括地址查找表。\",\"虽然不需要对链上程序进行更改来支持版本化交易的新功能（或向后兼容），但开发人员将需要更新其客户端代码以防止由于不同交易版本而导致的错误。\",\"Solana 运行时支持两种交易版本：\",\"legacy - 旧的交易版本，没有额外的功能\",\"v0 - 添加了对地址查找表的支持\"]},\"139\":{\"h\":\"地址查找表\",\"t\":[\"作用: 由于 Solana 区块链上的每笔交易都需要列出作为交易一部分进行交互的每个地址，这种列表实际上限制每笔交易 32 个地址。使用地址查找表的话，可以将限制提高到每笔交易 256 个地址。\"]},\"140\":{\"h\":\"交易确认及到期\",\"t\":[\"对于许多新开发者来说，在构建应用程序时，与交易确认相关的问题很常见。本文旨在加深对 Solana 区块链上确认机制的整体理解，同时提供一些推荐的最佳实践。\",\"etc...\"]},\"141\":{\"c\":[\"notes\"]},\"142\":{\"c\":[\"solana\"]},\"143\":{\"h\":\"Defi乐高之借贷协议(2)--AAVE\",\"t\":[\"AAVE 协议是以太坊生态最知名,最成熟的借贷协议(没有之一),名称来源于芬兰语中的\\\"ghost\\\",象征其隐形的去中心化金融服务.\"]},\"144\":{\"h\":\"AAVE 简介\",\"t\":[\"AAVE 是一个开源的流动性协议,用户可以自己参与存款和借款,AAVE 协议目前版本发展到V4,支持多链部署(ETH主网、Arbitrum、Optimism、Polygon、Avalanche等。)\",\"官网入口：https://aave.com/\",\"参与 AAVE 协议时你需要去官网详细了解借贷协议相关概念避免资金损失。\",\"etc...\"]},\"145\":{\"c\":[\"notes\"]},\"146\":{\"c\":[\"crypto\",\"lend\",\"swap\"]},\"147\":{\"h\":\"Defi乐高之借贷协议(2)--MarginFi\",\"t\":[\"MarginFi 协议是Solana生态最知名成熟的借贷协议之一，其借贷模型很多参考了Solend(这位是Solana上最古老的借贷协议)，本文涉及对MarginFi源代码的解析。\",\"本来想写ETH生态的AAVE，但对MarginFi最熟悉，就先写这个了。\"]},\"148\":{\"h\":\"MarginFi VS Solend\",\"t\":[\"Marginfi 是一个开源的流动性借贷协议, Marginfi的很多影子都有借鉴 Solend。\",\"由于 SoLend 和 SUI 生态的 SuiLend 是同一个团队在做，同时其团队重心已经在Sui生态倾斜，SoLend 已经没什么开发了，所以要在 Solana上 学习和使用借贷协议应该优先考虑正在活跃开发的 Marginfi，但如果你是有巨量资金并有安全考虑则应该使用 SoLend。\"]},\"149\":{\"h\":\"MarginFi 介绍\",\"t\":[\"MarginFi 是Solana生态上的去中心化借贷协议，利用Solana的高吞吐量和低费用提供了非常流畅的借贷体验,借贷Lend官网。\",\"介绍文档中有介绍其的核心机制，是Marginfi协议最全的资料，要想更深入就只能去翻源代码了。\"]},\"150\":{\"h\":\"功能\",\"t\":[\"一个Solana地址支持多个账户, 你可以在自己的一个Solana地址初始化多个借贷账户只要支付租金就可以了。 \",\"Lend\",\"在 Marginfi 中，用户存入资产后不会获得独立的代币凭证（区别于 AAVE 的 aToken），而是在协议内部记录用户的存款份额。\",\"比如我存入了 1SOl 到 MarginFi中，那么在 MarginFi 协议中会有对应的 Share 份额记录，协议内部为每个Share进行维护当我 Withdraw 时会连本带息将所有的资金都拿回(内部处理没有这么简单，但这是最简单的表述方式)。\",\"Borrow\",\"只要你有足够的可作为抵押的抵押品，那么你可以借出其他的资产(不能同时lend/borrow同一个资产)\",\"MarginFi采用统一抵押池方式，不同于AAVE的资产隔离，这种方式反而更方便(仅需要对某些隔离代币进行单独设置即可达到AAVE的隔离效果)，好处:\",\"所有存入的资产共同作为借款的抵押品\",\"用户可以借出任何支持的资产，只要总体健康因子保持在安全范围内\",\"只有单一的可变利率模式，没有固定利率选项（简化设计）\",\"Withdraw\",\"没什么特殊讲的，连本带息拿回即可，需要保证账户健康因子处于健康状态。\",\"Repay\",\"Marginfi 支持部分或全部偿还借款。由于 Solana 的低交易费用，用户可以更频繁地进行小额偿还，提高健康因子。\",\"Health Factor\",\"每个账户的健康状况都以 health factor 表示。账户健康因子是一个单一值，概括了投资组合的健康状况。\",\"A = 1 - liabilities(weight) / asset(weight) \",\"帐户运行状况通常在 0% 到 100% 之间，但从技术上讲可以低至 -∞。当您的账户健康状况达到 0% 或以下时，您将面临清算风险。\",\"下面对上面的公式进行概念介绍(用官网的介绍):\",\"当你在 marginfi 上借出资产时，在为抵押品定价时需要牢记以下几点：\",\"每项资产都有一个由其预言机确定的市场美元价格。\",\"每项资产都有一个经过置信区间调整的市场美元价格，由价格预言机 95% 置信区间的下限决定。\",\"每项资产都有一个加权价格，即置信区间调整后的市场美元价格乘以资产的存款权重。\",\"以下是一个例子：\",\"假设价格预言机提供的 SOL 市场美元价格为 25 美元。 价格预言机的 95% 置信区间为 +/- 1 美元，即 24-26 美元。此置信区间的下限为 24 美元，因此置信区间调整后的市场美元价格为 24 美元。 假设 marginfi 上的 SOL 资产权重为 90%。我们将置信区间调整后的市场美元价格乘以资产权重，即 24 美元 * 90%。 经过所有调整后，SOL 作为抵押品的价格为 24 * 0.9 = 21.60 美元。 \",\"与资产类似，marginfi 上的债务也进行调整：\",\"每项债务都有一个由其预言机确定的市场美元价格。该市场美元价格与给定代币出借时的市场美元价格相同。\",\"每项债务都有一个经过置信区间调整的市场美元价格，由价格预言机 95% 置信区间的上限决定。\",\"每项债务都有一个加权价格，即置信区间调整后的市场美元价格乘以债务的借入权重。\",\"以下是一个例子：\",\"假设价格预言机提供的 SOL 市场美元价格为 25 美元。 价格预言机的 95% 置信区间为 +/- 1 美元，即 24-26 美元。此置信区间的上限为 26 美元，因此置信区间调整后的市场美元价格为 26 美元。 假设 marginfi 上的 SOL LTV 为 80%。我们将置信区间调整后的市场美元价格乘以 1/LTV1 。在本例中为 1/0.80=1.25。 经过所有调整后，SOL 的债务价格为 26*1.25 = 32.50 美元。 \",\"Liquidate\",\"协议的清算非常重要，这是在极端行情下协议仍能安全运行的必要条件。\",\"MarginFi的清算条件非常保守，当账户面临清算时，借款人将承担 5% 的清算罚款(5%的罚款从抵押品中扣除)，由清算人（2.5%）和 Marginfi 协议的保险基金（2.5%）平分。协议采用部分清算方式，仅清算将账户健康因子恢复到 1 所需的最小金额的资产,比起AAVE的激进50%清算已经相当保守了。\",\"最终结果是:\",\"借款人失去抵押品 (1+5%) 清算人: 支付债务，获得抵押品(1+2.5%) 协议方: 获取抵押品(2.5%) \",\"当然还有一种最坏的情况,即银行发生有个坏账账户无人清算且保险基金无法全部偿还，那么可能会启动最差的坏账程序，让损失平摊在所有存款人上，相当于是所有存款人来平均支付坏账，后面会有代码分析。\"]},\"151\":{\"h\":\"玩法\",\"t\":[\"总的来说 Marginfi 支持相当多的玩法，官网列出的有:\",\"收益聚合器 描述：创建一个平台，自动将用户资金在各种借贷协议之间转移，以最大化他们的年化收益率(APY)。 好处：用户无需手动跟踪和转移资金，就能从其加密资产获得尽可能高的回报。\",\"去中心化稳定币 描述：开发一个稳定币系统，通过超额抵押的加密贷款来维持价格稳定。 好处：用户可以通过抵押他们的加密资产借出稳定币，提供稳定的交换媒介，同时保持他们的加密投资不变。\",\"杠杆交易平台 描述：构建一个允许用户借入资金以增加交易仓位规模的平台，从而实现更高的潜在回报。 好处：交易者可以通过杠杆借款放大收益，而贷款人则可以从提供的资金中赚取利息。\",\"自动化投资顾问 描述：设计一个人工智能驱动的投资顾问，使用借贷策略优化用户投资组合。 好处：用户获得个性化的投资建议，利用借贷平衡风险和回报。\",\"DeFi交易所的流动性池 描述：创建为去中心化交易所提供即时贷款的流动性池，促进平滑快速的交易。 好处：流动性提供者从资金中赚取利息，而交易者则受益于改善的市场流动性和减少的滑点。\",\"加密货币储蓄账户 描述：提供储蓄账户，用户可以存入加密资产赚取稳定的利率。 好处：用户可以享受与传统银行储蓄账户类似的安全可预测的加密资产回报。\",\"闪电贷套利机器人 描述：开发使用闪电贷款利用多个交易所之间价格差异的机器人，通过套利赚取利润。 好处：套利机器人可以迅速利用市场低效率，提供稳定回报。\",\"抵押NFT贷款 描述：允许用户以NFT作为抵押品进行借款。 好处：NFT持有者无需出售其宝贵的数字资产即可释放流动性。\",\"去中心化保险平台 描述：创建通过借出资金赚取利息来覆盖潜在索赔的保险平台。 好处：保险池通过借贷增加资金，确保为所有成员提供足够的保障。\",\"DAO财库管理 描述：使DAO能够通过出借闲置资金赚取利息，更有效地管理其财库。 好处：DAO可以通过储备金产生被动收入来增加财务可持续性。\",\"目前 MarginFi 团队已经做了杠杆交易的产品做多做空的产品:\",\"MrgnLend 核心产品所有代币的借贷.\",\"Arena 主要是杠杆交易 Meme 币.\",\"MrgnLoop 多次套利协议.\"]},\"152\":{\"h\":\"核心代码交互\",\"t\":[\"这里涉及分析 MarginFi 的核心代码大概3000行左右 Marginfi Core\",\"我在翻 MarginFi 协议的代码过程中，我发现 MarginFi 协议支持非常多的参数，例如一个代币对应的银行可配置是否为隔离银行(不支持作为抵押品)，支持设置银行的Weight与LTV、 Max Supply、Max Borrow和各种Fee等等。\",\"MarginFi是以Group形式管理多个Bank的，一个Bank管理一个代币。\",\"你可以理解为: 一个Group可以管理多个银行对应代币的借贷行为，支持设置Group Fee支持组级别的费用,我们在上面看到的 Lend 界面其实就是一个 Group 下面对应的所有 Bank。\",\"相关信息\",\"其实不同组可以创建相同的银行代币，比如如果我想为Mixin生态的代币也建立一个Mixin Group，那么我可以在自己的组内创建Solana代币的银行，创建XIN代币的银行等等。\",\"你可以看下核心代码中支持的设置，一个 Bank 对应的就是一个代币:\",\"创建银行的可配置项非常多:\",\"/// 创建银行配置 pub struct BankConfigCompact { pub asset_weight_init: WrappedI80F48, // 初始资产权重 pub asset_weight_maint: WrappedI80F48, // 维护资产权重 pub liability_weight_init: WrappedI80F48, // 初始债务权重 pub liability_weight_maint: WrappedI80F48, // 维护债务权重 pub deposit_limit: u64, // 存款限额 pub borrow_limit: u64, // 借款限额 pub interest_rate_config: InterestRateConfigCompact, // 利率配置 pub operational_state: BankOperationalState, // 银行操作状态 Paused,Operational,ReduceOnly pub oracle_setup: OracleSetup, // 预言机设置 pub oracle_key: Pubkey, // 预言机密钥 pub risk_tier: RiskTier, // 风险等级 是否是隔离资产 pub total_asset_value_init_limit: u64, // 初始化保证金要求的资产价值限额（以美元计） pub oracle_max_age: u16, // 预言机价格数据的最大有效时间（秒） } pub struct InterestRateConfig { pub optimal_utilization_rate: WrappedI80F48, // 最优利用率 pub plateau_interest_rate: WrappedI80F48, // 平台利率 pub max_interest_rate: WrappedI80F48, // 最大利率 pub insurance_fee_fixed_apr: WrappedI80F48, // 固定年利率的保险费 pub insurance_ir_fee: WrappedI80F48, // 保险利率费用 pub protocol_fixed_fee_apr: WrappedI80F48, // 固定年利率的协议费用 pub protocol_ir_fee: WrappedI80F48, // 协议利率费用 } \",\"/// 利用率计算采用 分段线性利率函数。 /// 参数 ur 是 资金利用率 borrow/lend /// 当利用率接近 `optimal_utilization_rate` 时，曲线接近 `plateau_interest_rate`， /// 一旦利用率超过 `optimal_utilization_rate`，曲线接近 `max_interest_rate`。 fn interest_rate_curve(&self, ur: I80F48) -> Option<I80F48> { let optimal_ur = self.optimal_utilization_rate.into(); let plateau_ir = self.plateau_interest_rate.into(); let max_ir: I80F48 = self.max_interest_rate.into(); if ur <= optimal_ur { ur.checked_div(optimal_ur)?.checked_mul(plateau_ir) } else { (ur - optimal_ur) .checked_div(I80F48::ONE - optimal_ur)? .checked_mul(max_ir - plateau_ir)? .checked_add(plateau_ir) } } \",\"/// 返回借款人和存款人的利率。 /// 利率以年利率（APR）表示（0-）。 /// /// utilization_ratio 利用率，表示已使用的资源占总资源的比例 /// 返回 (`lending_rate`, `borrowing_rate`, `group_fees_apr``insurance_fees_apr`) pub fn calc_interest_rate( &self, utilization_ratio: I80F48, ) -> Option<(I80F48, I80F48, I80F48, I80F48)> { let protocol_ir_fee = I80F48::from(self.protocol_ir_fee); let insurance_ir_fee = I80F48::from(self.insurance_ir_fee) let protocol_fixed_fee_apr = I80F48::from(selprotocol_fixed_fee_apr); let insurance_fee_fixed_apr = I80F48::from(selinsurance_fee_fixed_apr) // 计算总的利率费用和总的固定年利率费用 let rate_fee = protocol_ir_fee + insurance_ir_fee; let total_fixed_fee_apr = protocol_fixed_fee_apr insurance_fee_fixed_apr // 计算基础利率 let base_rate = self.interest_rate_cur(utilization_ratio)? // 根据利用率调整存款利率，使借款人和存款人之间的支付对称化 let lending_rate = base_rate.checked_m(utilization_ratio)? debug!(\\\"base_rate: {:?}\\\", base_rate); debug!(\\\"rate_fee: {:?}\\\", rate_fee); debug!(\\\"total_fixed_fee_apr: {:?}\\\", total_fixed_fee_apr); // 根据费用调整借款利率 // borrowing_rate = base_rate + base_rate * rate_fee total_fixed_fee_apr let borrowing_rate = base_rate .checked_mul(I80F48::ONE.checked_add(rate_fee)?)? .checked_add(total_fixed_fee_apr)? // 计算组费用的年利率 let group_fees_apr = calc_fee_rate( base_rate, self.protocol_ir_fee.into(), self.protocol_fixed_fee_apr.into(), )? // 计算保险费用的年利率 let insurance_fees_apr = calc_fee_rate( base_rate, self.insurance_ir_fee.into(), self.insurance_fee_fixed_apr.into(), )? // 确保所有利率均为非负值 assert!(lending_rate >= I80F48::ZERO); assert!(borrowing_rate >= I80F48::ZERO); assert!(group_fees_apr >= I80F48::ZERO); assert!(insurance_fees_apr >= I80F48::ZERO) // 返回计算出的利率 Some(( lending_rate, borrowing_rate, group_fees_apr, insurance_fees_apr, )) } \",\"代码可以看到lend 和 borrow 之间的利息差主要是支付给了协议组方和保险库等等.\",\"保险费是在无人清算时使用的，每次有人还款时一部分资金都会进入到保险金库，后面如果某个用户的健康不足且无人清算的情况下，可以使用保险金库进行清算。\",\"利率计算代码:\",\"/// 每次有 Lend/Borrow/Repay/Withdraw/... 行为时都会计算利息: /// 核心逻辑就是计算上次行为距今有多久,然后根据时间、利用率计算利息，并将利息存到保险账户、银行账户、费用账户，然后更新每个份额的价值。 pub fn accrue_interest( &mut self, current_timestamp: i64, #[cfg(not(feature = \\\"client\\\"))] bank: Pubkey, ) -> MarginfiResult<()> { #[cfg(all(not(feature = \\\"client\\\"), feature = \\\"debug\\\"))] solana_program::log::sol_log_compute_units(); // 计算时间差 let time_delta: u64 = (current_timestamp - self.last_update).try_into().unwrap(); // 如果时间差为0，直接返回 if time_delta == 0 { return Ok(()); } // 获取总资产和总债务 let total_assets = self.get_asset_amount(self.total_asset_shares.into())?; let total_liabilities = self.get_liability_amount(self.total_liability_shares.into())?; // 更新最后更新时间 self.last_update = current_timestamp; // 如果总资产或总债务为0，记录事件并返回 if (total_assets == I80F48::ZERO) || (total_liabilities == I80F48::ZERO) { #[cfg(not(feature = \\\"client\\\"))] emit!(LendingPoolBankAccrueInterestEvent { header: GroupEventHeader { marginfi_group: self.group, signer: None }, bank, mint: self.mint, delta: time_delta, fees_collected: 0., insurance_collected: 0., }); return Ok(()); } // 计算利率累积状态变化 let (asset_share_value, liability_share_value, fees_collected, insurance_collected) = calc_interest_rate_accrual_state_changes( time_delta, total_assets, total_liabilities, &self.config.interest_rate_config, self.asset_share_value.into(), self.liability_share_value.into(), ) .ok_or_else(math_error!())?; debug!( \\\"存款份额价值: {}\\\\n债务份额价值: {}\\\\n收集的费用: {}\\\\n收集的保险费: {}\\\", asset_share_value, liability_share_value, fees_collected, insurance_collected ); // 更新资产和债务份额价值 self.asset_share_value = asset_share_value.into(); self.liability_share_value = liability_share_value.into(); // 更新收集的费用 self.collected_group_fees_outstanding = { fees_collected .checked_add(self.collected_group_fees_outstanding.into()) .ok_or_else(math_error!())? .into() }; // 更新收集的保险费 self.collected_insurance_fees_outstanding = { insurance_collected .checked_add(self.collected_insurance_fees_outstanding.into()) .ok_or_else(math_error!())? .into() }; #[cfg(not(feature = \\\"client\\\"))] { #[cfg(feature = \\\"debug\\\")] solana_program::log::sol_log_compute_units(); // 记录利率累积事件 emit!(LendingPoolBankAccrueInterestEvent { header: GroupEventHeader { marginfi_group: self.group, signer: None }, bank, mint: self.mint, delta: time_delta, fees_collected: fees_collected.to_num::<f64>(), insurance_collected: insurance_collected.to_num::<f64>(), }); } Ok(()) } \",\"最差情况下的坏账处理，让所有存款人支付损失,其实是将每个人的份额减少:\",\"/// 将 `loss_amount` 的损失在所有存款人之间分摊， /// `total_deposit_shares` 保持不变，但存款的总价值减少 `loss_amount`； pub fn socialize_loss(&mut self, loss_amount: I80F48)->MarginfiResult { let total_asset_shares: I80F48 = self.total_asset_sharesint(); let old_asset_share_value: I80F48 = self.asset_share_valueint(); let new_share_value = total_asset_shares // 旧的资产份额价值乘以总资产份额 .checked_mul(old_asset_share_value) .ok_or_else(math_error!())? // 减去损失金额 .checked_sub(loss_amount) .ok_or_else(math_error!())? // 除以总资产份额 .checked_div(total_asset_shares) .ok_or_else(math_error!())?; // 更新资产份额价值 self.asset_share_value = new_share_value.into(); Ok(()) } \"]},\"153\":{\"h\":\"结论\",\"t\":[\"Marginfi 其实是相当灵活的协议,支持的参数非常多已经稳定运行两年多算是 Solend 的平替,用起来也相当方便,也有很多简单的套利机会.\",\"我在用的套利,可能有安全风险:\",\"将 Sol 流动性质押获得 JitoSOL,将 JitoSOL 存入 MarginFI后,借 Pyth,再用 Pyth 去 Pyth 官网质押,可以获取5.5%左右 Pyth 本位的利差.\"]},\"154\":{\"c\":[\"notes\"]},\"155\":{\"c\":[\"crypto\",\"lend\",\"swap\",\"marginfi\"]},\"156\":{\"h\":\"Defi乐高之借贷协议(1)\",\"t\":[\"本系列会介绍常见的借贷协议例如 EVM 系的 AAVE、Morpho，SVM 系的 Marginfi、Solend等，会列举出他们的一些常见行为，以及不同之处，最后还会给出一些收益不错(APY>12%)的套利行为\"]},\"157\":{\"h\":\"概念介绍\",\"t\":[\"最近对借贷协议非常感兴趣，所以去各个借贷协议上去玩了玩，读了读这些协议的文档做了一些Research，觉得有必要将学习到的常见借贷协议机制给总结下来，不然也不好意思说自己懂DeFi喜欢玩套利。\",\"相同之处，所有的借贷协议都一定有五种行为：Lend(存款)、Borrow(借款)、Withdraw(提现)、Repay(偿还)、Liquidate(清算)，一般协议还支持闪贷等，下面讲解一下基础的概念。\"]},\"158\":{\"h\":\"1. Lend (存款)\",\"t\":[\"用户将资产存入借贷池中，获得对应的凭证代币(也可能不会)，可以赚取存款利息，存入的资产会成为借贷池的流动性，一般情况借贷协议会根据借贷池被借用的比例动态设置利率，避免池子里的钱都被借走导致存款人无法Withdraw。\"]},\"159\":{\"h\":\"2. Borrow (借款)\",\"t\":[\"用户需要通过Lend行为先存入抵押品，根据资产抵押率计算可借额度，不同资产的抵押率不同(例如稳定币通常在 75%-100%, 波动币种在 50%-75%,一些流动性较低的资产抵押率是0%)，在借款后偿还时需要支付借款利息，需要注意维持健康因子(Health Factor)以避免清算\"]},\"160\":{\"h\":\"3. Withdraw (提现)\",\"t\":[\"用户可以随时提取存入的资产，需要确保有足够的流动性，如果资产被借出,可能需要等待或只能提取部分，提现会销毁对应的凭证代币(也可能没有凭证代币)\"]},\"161\":{\"h\":\"4. Repay (偿还)\",\"t\":[\"偿还借出的资产本金和利息，可以选择部分偿还或全部偿还，偿还后会释放对应的抵押品额度，一些协议支持使用不同代币偿还(通常是从其他协议Swap交易获得需要偿还的代币)\"]},\"162\":{\"h\":\"5. Liquidate (清算)\",\"t\":[\"当用户的健康因子低于阈值时触发(通常是 1)清算人可以购买被清算用户的抵押品，清算人通常可以获得一定折扣(例如 5%-10%)，清算机制保护协议的安全性，不同协议的清算触发条件和奖励机制可能不同\"]},\"163\":{\"h\":\"6. Flash Loan(闪电贷)\",\"t\":[\"一些协议特有的功能，在同一个区块内完成借贷和还款(做多做空)，不需要抵押品，主要用于套利、清算等场景，需要支付手续费。\",\"闪贷套利(在一个区块中完成的操作)：\",\"DEX价差套利 1. 从AAVE闪贷借出1000 USDC 2. 在DEX-A以1980 USDC买入1个ETH 3. 在DEX-B以2000 USDC卖出1个ETH 4. 偿还1000 USDC + 0.9 USDC(手续费) 5. 净利润约19.1 USDC 清算套利 1. 发现某用户健康因子接近1 2. 闪贷借出足够资金 3. 执行清算获得折扣资产(5-10%折扣) 4. 在市场上卖出获得的资产 5. 偿还闪贷 6. 获得清算利润 借贷利率套利 1. 从AAVE闪贷借出10000 USDC 2. 在Compound存入获得8%年化 3. 在Compound借出ETH获得12%年化 4. 在AAVE存入ETH获得15%年化 5. 偿还闪贷本金和手续费 6. 赚取利率差价 \"]},\"164\":{\"h\":\"7. Health Factor(健康因子)\",\"t\":[\"健康因子是账户的健康度,通常是存款/借款的比例。\",\"例子:我存入了$100K美金的BTC，BTC的抵押率是50%，那么我可以借出 $50k其他资产，如果我借出 $10k 的USDT，那么我的健康度的计算方式就是: $100k x 50% / $10k = 5,那么我的健康因子就是安全的，不会被清算，此时如果 BTC暴跌或者USDT暴涨，那么当健康因子<1时就会被清算，清算时我们的本金可能会以市场折扣价被收购比如清算人会用 $1k BTC帮助我们偿还 $800 USDT的借款，我们需要避免这种情况的发生。\",\"健康因子的计算方式各个协议可能不同，但是基本思路类似。\"]},\"165\":{\"h\":\"8. 预言机 (Oracle)\",\"t\":[\"链上的代币价格通常由预言机提供(如果预言机被攻击则几乎所有DeFi协议都会有风险)，大多数借贷协议使用 Chainlink、Pyth 等知名预言机服务，这些预言机通过去中心化的方式聚合多个数据源的价格信息，以确保价格数据的准确性和可靠性。一些协议也会使用自己的预言机系统或多个预言机的组合来增强安全性。\"]},\"166\":{\"h\":\"9. 利率模型\",\"t\":[\"借贷协议通常采用动态利率模型，根据资金池的使用率自动调整存借利率：\",\"利用率 = 已借出金额 / 总存款金额\",\"当利用率较低时，借款利率较低以刺激贷款\",\"当利用率较高时，借款利率快速上升以维持流动性\",\"存款利率通常是借款利率的一定比例(如 50%-70%),中间的差价一般由项目方/Pool Creater 获取\",\"不同协议的具体利率计算公式可能不同，但都遵循\\\"利用率越高，利率越高\\\"的基本原则，避免借贷池枯竭。\",\"下一个章节将详细讲解AAVE协议在这些方面的具体含义，并且会附加一些合约代码进行讲解。\",\"分享一下我最近在Sui链上有个U本位14%左右的年化套利(不构成投资建议,不懂就不要参与):\",\"在 scallop 抵押 USDC 获得sUSDC, 去 Bucket,抵押 sUSDC 铸造 Bucket代币,再重新质押 Bucket 最终的 U 本位收益是: (5.65 + 15.5 - 6.62) ≈ 14.5%\",\"SUI本位 20% 左右的年化:\",\"去 NAVI 上质押 Sui 获取 vSui,再抵押 vSUI 去借Sui,重复流程,最终可以到 20% 左右的 SUI 本位年化\"]},\"167\":{\"c\":[\"notes\"]},\"168\":{\"c\":[\"crypto\",\"lend\",\"swap\"]},\"169\":{\"h\":\"预测市场 Polymarket Research\",\"t\":[\"Polymarket 预测市场其实已经存在很久了,从 Vtalink 投资距今都有好几年了,我在 2021 年就开始接触,但一直没有深入其文档源码仔细调研,索性近两天人站调研一下.\",\"预测市场是什么?\",\"预测市场是针对未来事件进行预测的方式,投资者投资自己的真金白银,换取自己对未来事件发生情况的权益,如果发生那么自己会有收益,如果没有发生则自己会亏损.\",\"举个例子,2025年苹果市值会到达 10 万亿美金吗?你可以购买 YES/NO 的情况,你根据你的判断来进行购入接着自负盈亏.\",\"这一套系统在技术上的复杂度其实是不高的,需要一个二元订单铺模型具体可以参考以下文档.\",\"Document\",\"Code Document\",\"核心的一点是采用权益代币 A A' 来代替YES/NO,接着用真实世界的代币USDC充当 C,其中A + A' = C,这样一个模式来保证订单铺的稳定性.\",\"下面你就可以看懂文档具体的内容了.\",\"匹配场景 资产： A ：ERC1155 标准的结果代币。 A' ：ERC1155 标准的结果代币，是 A 的互补代币（假设一个结果代币和它的互补代币总是可以合并成一个单位的抵押资产，一个单位的抵押资产也总是可以拆分成一个结果代币和它的互补代币，即 A + A' = C 。还假设结果代币和抵押资产具有相同的小数位数 / 基本单位。以下例子中假设 C 为 USDC 来进行定价）。 C ：ERC20 标准的抵押代币。 场景 1 - 正常（NORMAL）： 订单创建者（Maker）订单：用户 A 以 0.5 美元的价格买入 100 个代币 A。 订单接受者（Taker）订单：用户 B 以 0.5 美元的价格卖出 50 个代币 A。 匹配操作概述：调用 matchOrders(makerOrder, [takerOrder], 50, [25]) 函数进行匹配，具体操作如下： 把 50 个代币 A 从用户 B 转移到 CTFExchange 合约中。 把 25 个代币 C 从用户 A 转移到 CTFExchange 合约中。 把 50 个代币 A 从 CTFExchange 合约转移给用户 A。 把 25 个代币 C 从 CTFExchange 合约转移给用户 B。 \",\"到最后为什么是 25个代币呢,主要是因为A和A'的价格是0.5,那么50 个代币 A 就是 0.25 C 了.\",\"这个模型在技术上其实并不复杂,到最后预测市场业务可以发展起来很大程度上是运营发展起来.最后总有一些用户留在这个系统中,据我所知 polymarket 的真实用户比很多公链都多...\"]},\"170\":{\"c\":[\"notes\"]},\"171\":{\"c\":[\"crypto\"]},\"172\":{\"h\":\"如何通过pUSD的套利\",\"t\":[\"本文不仅仅是pUSD的套利介绍，实际上适合所有的稳定币套利模式...\"]},\"173\":{\"h\":\"pUSD是什么\",\"t\":[\"pUSD是Mixin上1:1锚定美元的去中心化稳定币，所有pUSD都是通过pando leaf超额抵押产生的。\"]},\"174\":{\"h\":\"流通量\",\"t\":[\"通过 Pando Leaf的官网，就可以看到Leaf的信息\",\"pando-leaf.png\",\"可以看到Pando Leaf的总抵押目前有4556万美元，总供应有1217万美元，抵押比例为375.39%\",\"pUSD的总供应就是leaf的总供应1217万美元。\"]},\"175\":{\"h\":\"为什么会出现负溢价\",\"t\":[\"负溢价：相较于其他币更便宜。\",\"例如pUSD相对USDT负溢价就是 1个USDT可兑换超过1个pUSD(例如1USDT可以兑换1.05个pUSD)。\",\"所以这就是大家感到疑惑的地方，就是大家都是1:1锚定美元，但是大家相互兑换却对不上的情况。\",\"因为pUSD相较于USDT总的流通量更少，假设有许多用户在pando协议里卖出pUSD同时买入USDT，那么这会导致他们单方向的操作会导致在Pando的Swap协议中的pUSD/USDT流动池中pUST的数量不断增加，而USDT的数量不断减少，当流动池中的pUSD比USDT多许多的时候，因为市场的供求关系，SWAP算法也是由市场的供求关系决定的，这种时候就会出现对应的价格差。\",\"所以总的来说，负溢价主要原因是市场上pUSD的数量太多了，而市场上相较于其他稳定币更少，在Pando市场上是这种情况，所以实际上也可能出现正溢价。\"]},\"176\":{\"h\":\"前段时间的负溢价是如何消除的\",\"t\":[\"8.15开始，Pando leaf铸币利率从8.5%提升到了11.5%，直接带来的影响是通过Pando leaf贷款得来的pUSD的成本会大幅升高，对用户来说贷款得来的pUSD带来的价值小于11.5%，那么这些用户更有可能去还款，所以当用户归还Pando Leaf中的pUSD时，Pando Swap协议中的pUSD会变少。\",\"这个原因是很多从Pando Leaf贷出来的pUSD用户会进一步在Swap中将pUSD转换为其他稳定币、数字货币进行操作，所以当这样的用户发现无法超过11.5%的利率的时候他们就会在Swap协议中先换出pUSD归还leaf的pUSD。\",\"Pando Leaf铸币利率的提升会让大家的还款意愿提升，会更多进行pUSD的还款，那么市面上的pUSD价格会回升，原因是市面上的pUSD变少了，所以根据供求关系，市面上的pUSD价格就提升了。\",\"通过利率调整市面上的货币数量也很熟悉，因为这样的调整过程是和传统金融领域的过程相似的，其实中央银行的加息也是同样的原理。\"]},\"177\":{\"h\":\"复盘pUSD铸币利率提高的市场机会\",\"t\":[\"假设原本1000pUSD的贷款，在利率为8.5的时候铸币的，当得知不久之后利率将提升值\",\"假如在其他平台贷款了1000USDT，然后将1000USDT在pando Swap协议中兑换成了pUSD，在pando价格偏移期间，我们一度看到价格变成了1:0.9或者1:0.89，假如我们在1:0.97时进行兑换，那么1000USDT可以兑换成1025pUSD，我们可以看到同样是1:1稳定币，1000USDT却可以兑换1025个pUSD，那么这个多出来的就可以用来偿还pando leaf的贷款利息，我们就把3个月以来的贷款利息全部都补齐了。\",\"我们总结一下，实际上就是在得知利息会提升的时间点，将pUSD的贷款置换成了其他平台的USDT贷款，通过当时市场上的套利空间，将pando leaf的利息给补齐了，相当于利息不用付了。\",\"现在pUSD的铸币利率提升了，想要借稳定币怎么办呢？\",\"这时候就需要去更便宜的平台，比较各个平台的贷款利率了，比如去看看币安、火币等价格，这些USDT的贷款价格都更优惠。\",\"这个机会来自于这个得知pando利率即将提升的机会。\",\"那么目前假设pUSD对USDT出现了负溢价，却没有被leaf调整，这个时候又有怎样的机会呢？\",\"假如这个时候你手上有更多的USDT，那么你就可以兑换更多的pUSD，一旦价格恢复到1:1的时候，实际上是进行了一次套利。\"]},\"178\":{\"c\":[\"notes\"]},\"179\":{\"c\":[\"crypto\"]},\"180\":{\"h\":\"稳定币总结 & pUSD套利\",\"t\":[\"很多人对加密货币感兴趣，进入加密市场对于绝大多数人来讲，第一个接触的就是稳定币(stable coin)，但是很多人却对稳定币并不了解，本文尝试去总结一下常见的稳定币以及我常用的PUSD...\",\"什么是稳定币？\",\"稳定币是加密货币的一种，但是相对于常规加密货币而言(BTC/ETH)，它的价值相对比较稳定，一般是与现实世界的某些资产挂钩，例如美金、港币等等。\",\"对于普通人来说就不需要担心稳定币的价格会突然下降，更符合普通大众的使用习惯。\"]},\"181\":{\"h\":\"稳定币类型\",\"t\":[\"因为稳定币会和现实世界的某些资产相挂钩，所以第一个分类标准就是资产种类\"]},\"182\":{\"h\":\"资产种类划分\",\"t\":[\"国家稳定货币相关的，比如挂钩美元、欧元、日元等等。\",\"某种资产挂钩比如黄金。\",\"与美元挂钩的有泰达公司发布的USDT、Circle发布的USDC、makerDAO发布的DAI、其他还有比如FRX 与欧元挂钩的有EUROC、EURT、 AGEUR 与黄金挂钩的有EKON\",\"因为美元是全球储备的稳定币，所以许多稳定币都是可以直接兑换美元的，所以这也叫做美元稳定币\"]},\"183\":{\"h\":\"实现机制划分\",\"t\":[\"中心化现实资产挂钩稳定币\",\"数字资产抵押铸造稳定币\",\"无资产抵押的算法稳定币\"]},\"184\":{\"h\":\"中心化稳定币\",\"t\":[\"中心化稳定币一般是由中央机构/公司发行管理的稳定币，抵押物一般有股票、黄金、现金、债券、房地产等传统领域的资产，我们熟悉的USDT、USDC都是属于中心化稳定币\",\"中心化稳定币主要有两个问题:\",\"受合格和监管要求，但是由于是中心化稳定币，所以会有一定的信用风险，如果这些发行公司本身出现问题，那么稳定币可能就会突然发送大幅度贬值，\",\"因为是中心化的，所以某些特殊情况下，可能应监管要求就无法正常流通了\",\"USDT、USDC等一直没有公布抵押资产，未来可能会有挤兑破产风险，曾经有段时间的价格下跌很大。\",\"所以中心化稳定币是需要的，但是长期来看却有不可避免而无法解决的问题。\"]},\"185\":{\"h\":\"去中心化稳定币\",\"t\":[\"去中心化抵押数字资产产生的稳定币:\",\"特点：\",\"不是由现实世界资产作为抵押物的，而是直接由数字资产抵押，比如直接使用BTC、ETH抵押\",\"数字资产全额/超额抵押\",\"数字货币超额抵押一般是使用BTC、ETH等价格会有剧烈波动的稳定币，比如目前价值20000美元的ETH可以铸造10000美元的稳定币，因为是超额抵押，而且具体的抵押代码是通过区块链上的智能合约实现的，不能人为进行操纵，所以就不用像中心化的稳定币那样去担心抵押的资产无法按照抵押比例取出来的，相对于中心化稳定币，去中心化的稳定币在资金上更加安全。\",\"有由于是去中心化、透明的，所以有很大的发展潜力，像DAI、pUSD都是属于这类。\",\"其他稳定币抵押铸造稳定币：\",\"由其他稳定币抵押铸造稳定币，一般是全额抵押，MobCoin发行的EUSD就属于这类，抵押物包括USDC、USDP、TUSD等，每笔交易都是通过端对端零知识加密只有交易双方才可以看到交易数据。所以EUSD是现在唯一的隐私稳定币，它的目标是保证用户的隐私交易数据。\",\"Pando的各种协议，包括去中心化和中心化各种交易所，EUSD的流通性都是最大的。\"]},\"186\":{\"h\":\"算法稳定币\",\"t\":[\"稳定币的供应和价格完全通过算法来调节，而且无抵押资产。\",\"价格是否能够保持稳定，完全取决于算法，我们知道市场能否保持稳定完全是复杂变动的，算法稳定币能否在极端情况下价格保持稳定是非常困难的。\",\"之前UST是重点关注的算法稳定币项目，但是依然发生了LUNA崩盘的情况，所以目前的算法稳定币模式还是没有走通。\"]},\"187\":{\"h\":\"pUSD介绍和当前发展状况\",\"t\":[\"pUSD属于去中心化稳定币，由数字资产超额抵押产生的稳定币，也是Mixin生态原生的稳定币，可以在Pando各种场景下使用。\",\"pUSD是1:1锚定的美元价格，所有的pUSD都是通过pando leaf超额抵押铸造产生的可以抵押资产包括BTC、ETH、EOS等等\",\"总流通量可通过pando官网的leaf查询到，目前有1217万美元。\",\"pUSD通过MTG去中心化管理，因为有超额抵押和MTG多签机制，保证了pUSD透明和安全。\",\"稳定币是去中心化金融发展的基础，pUSD和Mixin的去中心化金融的发展是密不可分的。\",\"因为目前pUSD的发行量相对于USDT、USDC还是很少，所以又时候可能会发生价格偏离，所以在这个时候存在套利机会。\",\"通过套利机会不仅仅可以为自己赚取利润，也可以帮助pUSD的更稳定。\"]},\"188\":{\"h\":\"pUSD未来规划和稳定币领域的未来发展情况\",\"t\":[\"pUSD可以通过在Quill中购买文章，可以和Mixpay合作来拓展使用的场景，希望做到的是有更多的地方使用pUSD。\",\"其实稳定币领域更多关注的还是如何在实际生活中使用，比如在游戏、金融服务、社交媒体中使用，有更多与现实世界的交互，也更容易有加密领域的破圈。\",\"目前有一个好的趋势就是有越来越多的金融机构愿意加入到去中心化领域中来，比如最近Paypal推出了自家的稳定币Paypal USD非常注重稳定性，是由短期美元国债、现金等价物通过监管审批机构认可的。\",\"CBDC也在做稳定币，香港今年7月份有许多领域专家呼吁香港政府发行以香港外汇储备作为外汇的港元稳定币HKBG，港元稳定币可以解决当前支付体系延迟的问题，并且可以帮助港元提升作为国际货币的地位。\",\"除了这些，还有RWA领域，也就是现实世界资产在虚拟世界映射的领域。\",\"当前讨论的热度很高，现实中有许多不同的资产适合通过代币化的方式来促进交易的增加流动性。\"]},\"189\":{\"c\":[\"notes\"]},\"190\":{\"c\":[\"crypto\"]},\"191\":{\"h\":\"NextAuth 学习笔记\",\"t\":[\"NextJs是目前最流行的 FullStack FrameWork 之一，它提供了一套完整的开发体验，包括服务端渲染、API路由、数据管理、路由管理等。\",\"于是在 NextJs 之上就会有许多插件系统帮助我们实现各种功能，其中就包括 NextAuth。\",\"NextAuth 是 NextJs 的一个插件，它可以帮助你实现用户认证、授权、管理等功能。\",\"本文将介绍 NextAuth 的基本用法，以及如何集成到 NextJs 项目中。\",\"本文是我在使用NextAuth过程中,尝试使用 JWT Token 使用方式, 尝试使用 Prisma ORM 框架, 尝试使用 Github/Mixin第三方登录/Email(Resent)后总结而来的学习笔记。\",\"使用T3-App快速搭建NextJs项目, 简单来说T3-App是一个NextJs的脚手架，比如之前使用NextJs的方式是安装了NextJs，接着需要安装prisma、next-auth、dotenv、TailwindCSS等等依赖服务，于是T3-App可以帮助你节省这些时间，T3-App会自动帮你安装这些依赖，并且配置好项目。\",\"所以我们后续使用T3-App快速搭建项目后，将着重点放在NextAuth的使用上。\"]},\"192\":{\"h\":\"快速搭建T3-App项目\",\"t\":[\"根据t3-app的文档，我们可以快速搭建一个NextJs项目，这里我们使用T3-App快速搭建项目。\",\"pnpm create t3-app@latest \",\"What will your project be called? nextauth-test Will you be using TypeScript or JavaScript? TypeScript Will you be using Tailwind CSS for styling? Yes Would you like to use tRPC? Yes What authentication provider would you like to use? NextAuth.js What database ORM would you like to use? Prisma Would you like to use Next.js App Router? Yes What database provider would you like to use? SQLite (LibSQL) # 数据库这里开发测试时你可以随意使用 Should we initialize a Git repository and stage the changes? Yes Should we run 'pnpm install' for you? Yes What import alias would you like to use? ~/ \",\"接着你进入到文档后发现pnpm dev是运行不起来的，原因是默认NextAuth的第三方登录默认使用的是Discard登录，所以你需要去Discard Developer Portal申请一个OAuth2.0的Client ID和Client Secret，然后在项目根目录下创建.env文件，添加以下内容：\",\"# Next Auth Discord Provider DISCORD_CLIENT_ID=\\\"\\\" DISCORD_CLIENT_SECRET=\\\"\\\" \",\"但是相信开发人员都是有自己的Github账号的，所以事实上我们可以直接使用Github登录，所以我们需要在项目根目录下创建.env文件，添加以下内容：\",\"# Next Auth Github Provider GITHUB_CLIENT_ID=\\\"xxx\\\" GITHUB_CLIENT_SECRET=\\\"xxx\\\" \",\"你需要去Github Settings -> Developer settings -> OAuth Apps申请一个Github OAuth App的Client ID和Client Secret。\",\"注意填入 App 的Homepage URL 和 Callback URL分别为：\",\"Homepage URL: http://localhost:3000 Callback URL: http://localhost:3000/api/auth/callback/github \",\"端口是NextJS服务的端口默认是3000，如果你使用其他端口，请修改对应的端口。\",\"接着将.env中的需求修改的其他部分进行更新，比如:\",\"# 使用openssl rand -base64 32 生成一个随机的密钥 NEXTAUTH_SECRET=\\\"xxx\\\" NEXTAUTH_URL=\\\"http://localhost:3000\\\" # 这里的端口同上修改 \",\"代码里对应的Discard登录的配置一律改为Github登录的配置，其余部分保持不变。\",\"src/env.js中的DISCARD所有字段都改为GITHUB，然后在src/server/auth.ts文件中，将providers字段中的discord改为github，然后将client_id和client_secret字段中的DISCORD_CLIENT_ID和DISCORD_CLIENT_SECRET改为GITHUB_CLIENT_ID和GITHUB_CLIENT_SECRET。\",\"# src/server/auth.ts # 后续我们将扩展使用Mixin登录和Email(Resent)进行登录 import GithubProvider from \\\"next-auth/providers/github\\\"; providers: [ GithubProvider({ clientId: env.GITHUB_CLIENT_ID, clientSecret: env.GITHUB_CLIENT_SECRET }) ] \",\"接下来如无意外，从浏览器进入http://localhost:3000就可以点击SignIn按钮使用Github进行登录了。\",\"注意\",\"如果你遇到了额外问题，大概率是你的配置不对或者哪个地方代码没有改，用错误信息去问AI就可以解决了。\",\"Amazing！我们已经成功搭建了一个NextJs项目，并且集成了NextAuth，并且使用了Github登录。\"]},\"193\":{\"h\":\"通读NextAuth文档\",\"t\":[\"一般情况下，面对经常使用的库/组建通读一遍可以省去很多debug的时间。\",\"官网的Get Start内容大致给我们介绍了一下内容：\",\"NextAuth.js 是用于Next.js应用程序的完整开源身份验证解决方案。 它从头开始设计，以支持 Next.js 和无服务器。 - 它旨在与任意 OAuth 服务配合使用，支持 OAuth 1.0、1.0A、2.0 和 OpenID Connect - 对许多常用登录服务的内置支持 - 支持使用任何后端（Active Directory、LDAP 等）进行无状态身份验证 - 支持 JSON Web 令牌和 Sessions 会话 - 专为无服务器设计，但在任何地方运行（AWS Lambda、Docker、Heroku 等） 拥有自己的数据 NextAuth.js可以与数据库一起使用，也可以不与数据库一起使用。 - 一种开源解决方案，可让您保持对数据的控制 - 支持自带数据库 （BYOD），可与任何数据库一起使用 - 内置支持 MySQL、MariaDB、Postgres、SQL Server、MongoDB 和 SQLite - 与来自流行托管服务提供商的数据库配合使用效果很好 - 也可以在没有数据库的情况下使用（例如 OAuth + JWT） 注意：电子邮件登录需要配置数据库以存储一次性验证令牌。 默认安全 - 促进使用无密码登录机制 - 默认情况下设计为安全，并鼓励采用最佳实践来保护用户数据 - 在 POST 路由上使用跨站点请求伪造令牌（登录、注销） - 默认 Cookie 政策旨在为每个 Cookie 制定最严格的政策 - 启用 JSON Web 令牌后，默认情况下会使用 A256GCM 对它们进行加密 （JWE） - 自动生成对称签名和加密密钥，方便开发人员 - 具有选项卡/窗口同步和 keepalive 消息功能，可支持短期会话 - 尝试实施 Open Web Application Security Project 发布的最新指南 高级选项允许您定义自己的例程，以控制允许登录的帐户、编码和解码 JSON Web 令牌，以及设置自定义 Cookie 安全策略和会话属性，以便您可以控制谁可以登录以及必须重新验证会话的频率。 etc... \",\"文档中的内容非常庞杂，但属于可接受的范围内，我们需要什么就去阅读什么就OK。\",\"大概有几个部分我们需要仔细阅读一下: NextAuthOptions、Session、Provider、Database、Callbacks部分，这些部分可以让我们使用起来更加得心应手。\"]},\"194\":{\"h\":\"JWT Token配置\",\"t\":[\"默认情况下是JWT来记录用户信息，但是我们需要额外配置一些信息来让我们的服务更易使用:\",\"例如你可以覆盖原有的Session属性，让Session属性包含用户的id和role，这样我们就可以在组建中获取登录用户的id和role了，并且根据id和role来控制用户的权限和行为。\",\"declare module \\\"next-auth\\\" { interface Session { user: { id: string; // role: UserRole; } & DefaultSession[\\\"user\\\"]; } } \",\"配置jwt和callback:\",\"callbacks: { async session({ session, token }) { // 将 token.user 的 id 添加到 session.user if (token?.user && token?.user.id) { session.user.id = token.user.id; } return session; }, async jwt({ token, user }) { if (user) { token.user = { ...user, id: user.id, }; } return token; }, }, session: { strategy: \\\"jwt\\\", }, \",\"这样就可以在服务端获取到用户的id了，并且可以根据id来控制用户的权限和行为。\",\"如果我们想使用Email登录，我推荐Resend服务，每个月免费3000封电子邮件，可以很方便的集成到NextAuth中，可以搭配React Email组件来实组件的发送。\",\"Resend官网有针对NextJs接入的例子非常方便:\",\"// .env EMAIL_SERVER_USER=\\\"resend\\\" EMAIL_SERVER_PASSWORD=\\\"xxxx\\\" EMAIL_SERVER_HOST=\\\"smtp.resend.com\\\" EMAIL_SERVER_PORT=\\\"465\\\" EMAIL_FROM=\\\"email@$YOUR_DOMAIN.com\\\" // server/auth.ts EmailProvider({ server: { host: env.EMAIL_SERVER_HOST, port: env.EMAIL_SERVER_PORT, auth: { user: env.EMAIL_SERVER_USER, pass: env.EMAIL_SERVER_PASSWORD, }, }, from: env.EMAIL_FROM, // sendVerificationRequest # 还可以自己定义邮件内容 }), \",\"但是这样的话，email用户每次登录都没有对应的名称，我们可以覆盖prisma db原有的createUser方法，在创建用户时，将用户的name和email一起创建到数据库中,解决方案:\",\"import { PrismaAdapter } from '@next-auth/prisma-adapter'; /** @return { import(\\\"next-auth/adapters\\\").Adapter } */ export default function CustomPrismaAdapterForNextAuth(prisma) { const adapter = PrismaAdapter(prisma); adapter.createUser = async data => { const userExist = await prisma.user.findUnique({ where: { email: data.email } }); if (userExist) { return userExist; } return prisma.user.create({ data: { email: data.email, name: data.name || data.email.split('@')[0], username: data.username || `${data.email.split('@')[0]}_${Math.random().toString(36).substring(7)}`, image: data.image || `https://www.gravatar.com/avatar/${Math.random().toString(36).substring(7)}?d=identicon&r=PG`, emailVerified: data.emailVerified } }); }; return adapter; } export const authOptions = { adapter: CustomPrismaAdapterForNextAuth(prisma), providers: [ ... \"]},\"195\":{\"h\":\"接入Mixin Oauth\",\"t\":[\"不仅仅是Mixin，其他Oauth也是类似的接入方式,在authOptions中添加provider:\",\"providers: [ { id: \\\"mixin\\\", name: \\\"mixin\\\", type: \\\"oauth\\\", style: { logo: \\\"https://mixin.one/zh/img/favicon.png\\\", bg: \\\"#41a6f6\\\", text: \\\"#000000\\\", }, clientId: env.MIXIN_CLIENT_ID, clientSecret: env.MIXIN_CLIENT_SECRET, authorization: { url: \\\"https://mixin.one/oauth/authorize\\\", params: { scope: \\\"PROFILE:READ\\\", client_id: env.MIXIN_CLIENT_ID, response_type: \\\"code\\\", }, }, token: { url: \\\"https://api.mixin.one/oauth/token\\\", async request(context) { const response = await fetch(\\\"https://api.mixin.one/oauth/token\\\", { method: \\\"POST\\\", headers: { \\\"Content-Type\\\": \\\"application/json\\\", }, body: JSON.stringify({ client_id: env.MIXIN_CLIENT_ID, client_secret: env.MIXIN_CLIENT_SECRET, code: context.params.code, }), }).then((resp) => resp.json()); return { tokens: { access_token: response.data.access_token, scope: response.data.scope, }, }; }, }, userinfo: \\\"https://api.mixin.one/me\\\", profile(profile: any) { return { id: profile?.data.user_id, name: profile?.data.full_name, email: profile?.data.email, image: profile?.data.avatar_url, }; }, }, ...// 其他provider/Github/Email ] \",\"Mixin登录用户的所有信息都可以通过这个provider获取到，包括id、name、image等，注意Mixin用户没有Email。\",\"基于角色的管理也比较重要，如果你的控制台需要角色去管理的话。\"]},\"196\":{\"h\":\"接入 Web3 登录\",\"t\":[\"NextAuth ETH灯枯教程\"]},\"197\":{\"h\":\"Solana 登录\",\"t\":[\"NextAuth Solana登录教程\"]},\"198\":{\"h\":\"Eth 登录\"},\"199\":{\"h\":\"添加Session会话\",\"t\":[\"你需要添加SessionProvider来存储Session信息，以便于客户端代码可以获取session信息。\",\"于是你就可以保护你的API路由了，只允许登录用户访问。\",\"// middleware中控制的不区分客户端/服务端组件 export { default } from \\\"next-auth/middleware\\\" export const config = { matcher: [\\\"/dashboard\\\"] } // client客户端组件 const {data: session, update} = useSession({ // 这里的update 可以重新获取session信息，比如用户修改了用户信息，则可以更新session信息 required: true, onUnauthenticated() { redirect('/signin?callbackUrl=${your-page-url}') } }); // 服务端组件 const session = getServerSession(authOptions); if (!session) { redirect('/signin?callbackUrl=${your-page-url}') } // 如果你想保护API路由，指向让登录用户使用，使用方式和上面一样。 \"]},\"200\":{\"h\":\"基于角色的认证\",\"t\":[\"文档地址\",\"// middleware/config export default withAuth({ callbacks: { authorized: ({req, token}) => { if (req.nextUrl.pathname === '/admin') { return token?.role === 'admin'; } return Boolean(token); } }, function middleware() {} // if authorized return true, else handle middleware }) const config = {matcher: [\\\"/dashboard\\\", \\\"/admin\\\", \\\"protected-route\\\"]} \",\"这里也是有点问题，一个已经登录的用户访问 /admin authorized返回 false,会重定向到sign in 界面，所以实际上在sign in 页面需要检测session 判断是否用户已经登录，如果已经登录则重定向到首页即可。或者直接在middleware中执行页面跳转。\"]},\"201\":{\"c\":[\"frontend\",\"nextjs\"]},\"202\":{\"c\":[\"nextjs\",\"next-auth\",\"authentication\"]},\"203\":{\"h\":\"设计模式\"},\"204\":{\"c\":[\"tutorial\"]},\"205\":{\"c\":[\"design-patterns\"]},\"206\":{\"h\":\"回溯算法\",\"t\":[\"学习笔记\",\"组合\",\"切割\",\"子集\",\"排列\",\"棋盘\",\"回溯算法其实是一个非常低效率的算法，它的本质其实就是穷举，让计算机算出所有的可能。但有些问题能求出解就不错了，压根没办法通过别的方法去试出来。\",\"回溯法，一般可以解决如下几种问题：\",\"组合问题：N个数里面按一定规则找出k个数的集合\",\"切割问题：一个字符串按一定规则有几种切割方式\",\"子集问题：一个N个数的集合里有多少符合条件的子集\",\"排列问题：N个数按一定规则全排列，有几种排列方式\",\"棋盘问题：N皇后，解数独等等\",\"回溯法解决的问题都可以抽象为树形结构，是的，我指的是所有回溯法的问题都可以抽象为树形结构！\",\"因为回溯法解决的都是在集合中递归查找子集，集合的大小就构成了树的宽度，递归的深度，都构成的树的深度。\",\"递归就要有终止条件，所以必然是一棵高度有限的树（N叉树）。\",\"一般的回溯代码会长成这个样子：\",\"func backtrack(参数) { if (终止条件) { 存放结果 return; } for 选择：本层集合中元素（树中节点孩子的数量就是集合的大小 { 处理节点; backtrack(路径，选择列表); // 递归 回溯，撤销处理结果 } } \"]},\"207\":{\"h\":\"组合\"},\"208\":{\"h\":\"77. 组合\",\"t\":[\"依据上述的代码框架很容易得到代码其实应该长这个样子\",\"func combine(n int, k int) [][]int { res := [][]int{} backtrack(1, n, k, &res, []int{}) return res } func backtrack(startIndex,n, k int, res *[][]int, path []int) { if len(path) == k { tmp := make([]int, k) copy(tmp, path) *res = append(*res, tmp) } for i := startIndex; i <= n; i++ { path = append(path, i) backtrack(i+1, n, k, res, path) path = path[:len(path)-1] } } \",\"这个代码放进去其实就可以运行了，但这里其实还有一个更高效的剪枝操作，就是原来有些不需要的递归是可以直接return出去的。\",\"那么我们已经递归到某一个位置，已经选择的元素的个数为len(path), 所需的元素个数就是k-len(path)， 接下来我们递归到的地方所剩余元素个数为(n-i) 需要 >= k-len(path)，所以这里我们的剪枝代码就是n-i +1 < k-len(path) 这里为什么要+1呢？因为起始位置是从1开始的而不是0, 所以我们需要在左侧+1\",\"所以之后的回溯代码为\",\" func backtrack(startIndex,n, k int, res *[][]int, path []int) { if len(path) == k { tmp := make([]int, k) copy(tmp, path) *res = append(*res, tmp) } if n-startIndex +1 < k-len(path) { return } for i := startIndex; i <= n; i++ { path = append(path, i) backtrack(i+1, n, k, res, path) path = path[:len(path)-1] } } \"]},\"209\":{\"h\":\"216. 组合总和III\",\"t\":[\"这个代码是这个样子\",\"func combinationSum3(k int, n int) [][]int { var res [][]int backtraverse(k, n, []int{}, &res, 1, 0) return res } func backtraverse(k, n int, path []int, res *[][]int, startIndex int, sum int) { // 剪枝操作 if sum > n { return } if len (path) == k { // 深拷贝 tmp := make([]int, k) copy(tmp, path) *res = append(*res, tmp) return } for i := startIndex; i <= 9; i++ { sum += i path = append(path, i) backtraverse(k, n, path, res, i+1, sum) path = path[:len(path)-1] sum -= i } } \"]},\"210\":{\"h\":\"17. 电话号码的字母总和\",\"t\":[\"这个题的关键是如何将输入的数字转换为字母，其实可以通过map映射或者直接用Mapmap[int]string就可以，当然也可以直接通过一个数组digitsMap := [...]string{}进行转换。\",\"func letterCombinations(digits string) []string { if len(digits) == 0 { return []string{} } digitsMap := map[int]string{ 0: \\\"\\\", 1: \\\"\\\", 2: \\\"abc\\\", 3: \\\"def\\\", 4: \\\"ghi\\\", 5: \\\"jkl\\\", 6: \\\"mno\\\", 7: \\\"pqrs\\\", 8: \\\"tuv\\\", 9: \\\"wxyz\\\", } res := make([]string, 0) backtarcing(\\\"\\\", digits, 0, digitsMap, &res) return res } func backtarcing(tmpString string, digits string, Index int, digitsMap map[int]string, res *[]string) { if len(tmpString) == len(digits) { // 字符串不用考虑深拷贝问题 *res = append(*res, tmpString) return } // 关键 1. 通过tmpK找到相对应的字符串 tmpK := digits[Index]-'0' letter := digitsMap[int(tmpK)] for i := 0; i < len(letter); i++ { tmpString = tmpString + string(letter[i]) // 关键 2. 这里的startIndex 没有用i+1, 是因为这里回溯的其实是digits第二个数字， 所以不需要startIndex去回溯 backtarcing(tmpString, digits, Index+1, digitsMap, res) tmpString = tmpString[:len(tmpString)-1] } } \"]},\"211\":{\"h\":\"39. 组合总和\",\"t\":[\"需要注意上一个是不需要startIndex控制递归的，其实是因为电话号码的每个集合都不相互影响，但本题是需要startIndex的，不同是递归传入的i+1变成i了，因为i是可以被重复选取的。\",\"不难写出如下代码\",\"func combinationSum(candidates []int, target int) [][]int { var res [][]int backtracing(0, &res, []int{}, target, 0, candidates) return res } func backtracing(sum int, res *[][]int, path []int, target int, startIndex int, candidates []int) { // 剪枝 if sum > target { return } if sum == target { tmp := make([]int, len(path)) copy(tmp, path) *res = append(*res, tmp) return } for i := startIndex; i < len(candidates); i++ { sum += candidates[i] path = append(path, candidates[i]) backtracing(sum, res, path, target, i, candidates) path = path[:len(path)-1] sum -= candidates[i] } } \"]},\"212\":{\"h\":\"40. 组合总和II\",\"t\":[\"这道题目和39.组合总和有如下区别：\",\"本题candidates 中的每个数字在每个组合中只能使用一次。\",\"本题数组candidates的元素是有重复的，而39.组合总和是无重复元素的数组candidates\",\"对于排除重复元素的一定要排序好\",\"本题的难点在于区别2中：集合（数组candidates）有重复元素，但还不能有重复的组合。\",\"排除的元素应该是同层的相同的元素\",\"func combinationSum2(candidates []int, target int) [][]int { sort.Ints(candidates) used := make([]bool, len(candidates)) res := [][]int{} backtracking([]int{}, candidates, 0, &res, 0, target, used) return res } func backtracking(path, candidates []int, startIndex int, res *[][]int, sum, target int, used []bool) { if sum > target { return } if sum == target { tmp := make([]int, len(path)) copy(tmp, path) *res = append(*res, tmp) return } for i := startIndex; i < len(candidates); i++ { if i > 0 && candidates[i] == candidates[i-1] && !used[i-1] { continue } used[i] = true sum += candidates[i] path = append(path,candidates[i]) backtracking(path, candidates, i+1, res, sum, target, used) path = path[:len(path)-1] sum -= candidates[i] used[i] = false } } \",\"func combinationSum2(candidates []int, target int) [][]int { var res [][]int quickSort(candidates) fmt.Println(candidates) backtracing(target, 0, 0, candidates, &res, []int{}) return res } func backtracing(target, sum, startIndex int, candidates []int, res *[][]int, path []int) { if sum > target { return } if sum == target { tmp := make([]int, len(path)) copy(tmp, path) *res = append(*res, tmp) } for i := startIndex; i < len(candidates); i++ { if i > startIndex && candidates[i] == candidates[i-1] { continue } sum += candidates[i] path = append(path, candidates[i]) backtracing(target, sum, i+1, candidates, res, path) path = path[:len(path)-1] sum -= candidates[i] } } \"]},\"213\":{\"h\":\"131. 分割回文串\",\"t\":[\"本题有两个关键问题：\",\"切割问题\",\"判断回文\",\"我们来分析一下切割，其实切割问题类似组合问题。\",\"例如对于字符串abcdef：\",\"组合问题：选取一个a之后，在bcdef中再去选取第二个，选取b之后在cdef中在选组第三个.....。\",\"切割问题：切割一个a之后，在bcdef中再去切割第二段，切割b之后在cdef中在切割第三段.....。\",\"所以代码应该是下面这个样子\",\"func partition(s string) [][]string { var res [][]string//结果集合 backtracking(0, []string{},&res, s) return res } func backtracking(startIndex int, path []string, res *[][]string, s string) { if startIndex == len(s) { t := make([]string, len(path)) copy(t, path) *res=append(*res,t) } for i := startIndex; i < len(s); i++ { if Ispartion(s, startIndex, i) { path = append(path, s[startIndex:i+1]) } else { continue } backtracking(i+1, path, res, s) path = path[:len(path)-1] } } func Ispartion(s string, start, end int) bool { for start < end { if s[start] != s[end] { return false } start++ end-- } return true } \"]},\"214\":{\"h\":\"93.复原IP地址\",\"t\":[\"func restoreIpAddresses(s string) []string { res := []string{} backtrack(0, s, &res, []string{}) return res } func backtrack(startIndex int, s string, res *[]string, path []string) { if len(path) == 4 && startIndex == len(s) { tempString := path[0]+\\\".\\\"+path[1]+\\\".\\\"+path[2]+\\\".\\\"+path[3] *res = append(*res, tempString) } for i := startIndex; i < len(s); i++ { if isNormalIp(s, startIndex, i) { path = append(path, s[startIndex:i+1]) } else { continue } backtrack(i+1, s, res, path) path = path[:len(path)-1] } } func isNormalIp(s string, start, end int) bool { checkInt, _ := strconv.Atoi(s[start:end+1]) if checkInt > 255 { return false } if end-start+1>1 && s[start] == '0' { return false } return true } \"]},\"215\":{\"h\":\"78. 子集\",\"t\":[\"这个子集问题好像不需要判断结束递归条件，直接COPY就可以\",\"func subsets(nums []int) [][]int { res := [][]int{} backtrace(0, &res, []int{}, nums) return res } func backtrace(startIndex int, res *[][]int, track []int, nums []int) { tmp := make([]int, len(track)) copy(tmp, track) *res = append(*res, tmp) for i := startIndex; i < len(nums); i++ { track = append(track, nums[i]) backtrace(i+1, res, track, nums) track = track[:len(track)-1] } } \"]},\"216\":{\"h\":\"13. 子集II\",\"t\":[\"这个问题和前面提到过的组合总和II是一样的，第一步先将数组排序，再接着进行去重。\",\"去重的逻辑，就是遇到同层使用过的元素就过滤掉，但如果是同一个树枝取到就可以接着递归。\",\"func subsetsWithDup(nums []int) [][]int { quickSort(nums) res := make([][]int, 0) used := make([]bool, len(nums)) backtrack(0, []int{}, nums, &res, used) return res } func backtrack(startIndex int, track, nums []int, res *[][]int, used []bool) { temp := make([]int, len(track)) copy(temp, track) *res = append(*res, temp) for i := startIndex; i < len(nums); i++ { if i>0 && nums[i] == nums[i-1] && used[i-1] == false { continue } used[i] = true track = append(track, nums[i]) backtrack(i+1, track, nums, res, used) track = track[:len(track)-1] used[i] = false } } func quickSort(nums []int) { separateSort(nums, 0, len(nums)-1) } func separateSort(nums []int, start, end int) { if start >= end { return } i := paration(nums, start, end) separateSort(nums, start, i-1) separateSort(nums, i+1, end) } func paration(nums []int, start, end int) int { pivot := nums[end] i := start for j := start; j < len(nums); j++ { if nums[j] < pivot { nums[i], nums[j] = nums[j], nums[i] i++ } } nums[i], nums[end] = nums[end], nums[i] return i } \"]},\"217\":{\"h\":\"491. 递增子序列\",\"t\":[\"乍一看和上一个子集差不多但其实差别还是很大的，第一个是结束递条件，第二个是本题不可以直接排序。\",\"而本题求自增子序列，是不能对原数组经行排序的，排完序的数组都是自增子序列了。\",\"所以不能使用之前的去重逻辑！\",\"而且本题的去重去除的其实是同一树层下相同的元素。\",\"所以不需要在递归函数中传used属性，直接在函数体中定义一个history数组就可以。\",\"func findSubsequences(nums []int) [][]int { var res [][]int backtracking(0, []int{}, nums, &res) return res } func backtracking(startIndex int, subPath, nums []int, res *[][]int) { if len(subPath) > 1 { tmp := make([]int, len(subPath)) copy(tmp, subPath) *res = append(*res, tmp) } history := [201]bool{} for i := startIndex; i < len(nums); i++ { if len(subPath) > 0 && nums[i] < subPath[len(subPath)-1] || history[nums[i]+100] { continue } history[100+nums[i]] = true subPath = append(subPath, nums[i]) backtracking(i+1, subPath, nums, res) subPath = subPath[:len(subPath)-1] } } \"]},\"218\":{\"h\":\"46. 全排列\",\"t\":[\"排列问题和组合问题不一样的地方在于对于排列而言{1, 2}， {2, 1}是两个不一样的集合，对于组合而言{1, 2} {2, 1}其实是一样的。\",\"但同一树枝下相同的元素就不可以重复用了，所以还需要定义一个used数组去重。\",\"比如{1, 2，3} 如果第一次取了1 那么之后就不能再取1了， 所以需要used数组去重。\",\"func permute(nums []int) [][]int { used := make([]bool, len(nums)) res := make([][]int, 0) backtracing(nums, &res, []int{}, used) return res } func backtracing(nums []int, res *[][]int, track []int, used []bool) { if len(track) == len(nums) { tmp := make([]int, len(nums)) copy(tmp, track) *res = append(*res, tmp) } for i := 0; i < len(nums); i++ { if used[i] == true { continue } used[i] = true track = append(track, nums[i]) backtracing(nums, res, track, used) used[i] = false track = track[:len(track)-1] } } \"]},\"219\":{\"h\":\"47. 全排列II\",\"t\":[\"给定一个可包含重复数字的序列 nums ，按任意顺序 返回所有不重复的全排列。\",\"本题一个关键点是可包含重复数字的序列，并且任意顺序返回不重复的全排列。\",\"涉及到去重。\",\"所以其实和组合总和II的去重逻辑差不多，都一样一开始需要排序一下。\",\"func permuteUnique(nums []int) [][]int { res := make([][]int, 0) used := make([]bool, len(nums)) sort.Ints(nums) backtracing(nums, []int{}, used, &res) return res } func backtracing(nums, track []int, used []bool, res *[][]int) { if len(track) == len(nums) { tmp := make([]int, len(nums)) copy(tmp, track) *res = append(*res, tmp) } for i := 0; i < len(nums); i++ { if i > 0 && nums[i] == nums[i-1] && used[i-1] == false { continue } if (used[i] == false) { used[i] = true track = append(track, nums[i]) backtracing(nums, track, used, res) track = track[:len(track)-1] used[i] = false } } } \"]},\"220\":{\"h\":\"51. N皇后\",\"t\":[\"n 皇后问题 研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。\",\"给你一个整数 n ，返回所有不同的 n 皇后问题 的解决方案。\",\"每一种解法包含一个不同的 n 皇后问题 的棋子放置方案，该方案中 'Q' 和 '.' 分别代表了皇后和空位。\"]},\"221\":{\"c\":[\"tutorial\"]},\"222\":{\"c\":[\"leetcode\",\"backtrack\"]},\"223\":{\"h\":\"动态规划\",\"t\":[\"学习笔记\",\"基础题目\",\"背包问题\",\"打家劫舍\",\"股票问题\",\"子序列问题\"]},\"224\":{\"h\":\"动态规划基础：\",\"t\":[\"动态规划，英文：Dynamic Programming，简称DP，如果某一问题有很多重叠子问题，使用动态规划是最有效的。\",\"状态转移公式（递推公式）是很重要，但动规不仅仅只有递推公式。\",\"动态规划问题拆解为如下五步曲，这五步都搞清楚了，才能说把动态规划真的掌握了！\",\"确定dp数组（dp table）以及下标的含义\",\"确定递推公式\",\"dp数组如何初始化\",\"确定遍历顺序\",\"举例推导dp数组\"]},\"225\":{\"h\":\"基础题目\"},\"226\":{\"h\":\"509. 斐波那契数\",\"t\":[\"这道题目非常简单，使用一个dp数组就可以解决。\",\"func fib(n int) int { if n < 2 { return n } dp := make([]int, n+1) dp[0] = 0 dp[1] = 1 for i := 2; i <= n; i++ { dp[i] = dp[i-1] + dp[i-2] } return dp[n] } \"]},\"227\":{\"h\":\"70. 爬楼梯\",\"t\":[\"本题需要注意，爬楼梯每爬一次楼梯， 最终的dp公式是dp[i] = dp[i-1] + dp[i-2]\",\"func climbStairs(n int) int { if n < 2 { return 1 } dp := make([]int, n+1) dp[1] = 1 dp[0] = 1 for i := 2; i <= n; i++ { dp[i] = dp[i-1] + dp[i-2] } return dp[n] } \"]},\"228\":{\"h\":\"746. 使用最小花费爬楼梯\",\"t\":[\"给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。\",\"你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。\",\"请你计算并返回达到楼梯顶部的最低花费。\",\"这里需要注意的是，cost[i] 是从楼梯第i个台阶向上爬所需支付的费用，即从2楼向上爬需要花费cost[2]，所以不难推出dp[i] = min(cost[i-1]+dp[i-1], cost[i-2]+dp[i-2]\",\"同时可以选择从下标为1或0的台阶开始爬，也就是dp[1] = 0 dp[0] = 0\",\"func minCostClimbingStairs(cost []int) int { dp := make([]int, len(cost)+1) dp[0] = 0 dp[1] = 0 for i := 2; i <= len(cost); i++ { dp[i] = min(cost[i-1]+dp[i-1], cost[i-2]+dp[i-2]) } return dp[len(cost)] } func min(a, b int) int { if a < b { return a } return b } \"]},\"229\":{\"h\":\"62. 不同路径\",\"t\":[\"首先第一步确定dp数组， dp[i][j]即是到达第dp[i][]j的总路径有几条。\",\"确定递推公式，dp[i][j]的求和方式只可以通过dp[i][j-1] 和 dp[i-1][j]来取得。\",\"dp[i][j] = dp[i][j-1] + dp[i-1][j]\",\"func uniquePaths(m int, n int) int { dp := make([][]int, m) for i := range dp { dp[i] = make([]int, n) } for i := 0; i < m; i++ { dp[i][0] = 1 } for i := 0; i < n; i++ { dp[0][i] = 1 } for i := 1; i < m; i++ { for j := 1; j < n; j++ { dp[i][j] = dp[i-1][j] + dp[i][j-1] } } return dp[m-1][n-1] } \"]},\"230\":{\"h\":\"63. 不同路径II\",\"t\":[\"一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。\",\"机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish”）。\",\"现在考虑网格中有障碍物。那么从左上角到右下角将会有多少条不同的路径？\",\"网格中的障碍物和空位置分别用 1 和 0 来表示。\",\"本题其实大致和上一题差不多，但有一个障碍物问题，所以需要考虑当dp[i][j]为障碍物的情况。\",\"func uniquePathsWithObstacles(obstacleGrid [][]int) int { dp := make([][]int, len(obstacleGrid)) for i := range dp { dp[i] = make([]int, len(obstacleGrid[0])) } // 1. dp[i][0] == 1 stop for i := 0; i < len(obstacleGrid) && obstacleGrid[i][0] != 1; i++ { dp[i][0] = 1 } // 2. dp[0][i] == 1 stop for i := 0; i < len(obstacleGrid[0]) && obstacleGrid[0][i] != 1; i++ { dp[0][i] = 1 } // 2. dp[i][j] == 1 continue for i := 1; i < len(obstacleGrid); i++ { for j := 1; j < len(obstacleGrid[0]); j++ { if obstacleGrid[i][j] == 1 { continue } dp[i][j] = dp[i-1][j] + dp[i][j-1] } } return dp[len(obstacleGrid)-1][len(obstacleGrid[0])-1] } \"]},\"231\":{\"h\":\"343. 整数拆分\",\"t\":[\"给定一个正整数 n，将其拆分为至少两个正整数的和，并使这些整数的乘积最大化。 返回你可以获得的最大乘积。\",\"确定dp数组的定义 ----------> dp[i]：分拆数字i，可以得到的最大乘积为dp[i]。\",\"确定递推公式 dp[i] = max(dp[i], max(j*(i-j), j * dp[i-j]))\",\"可以这么理解，j * (i - j) 是单纯的把整数拆分为两个数相乘，而j * dp[i - j]是拆分成两个以及两个以上的个数相乘。\",\"如果定义dp[i - j] * dp[j] 也是默认将一个数强制拆成4份以及4份以上了。\",\"所以递推公式：dp[i] = max(dp[i], (i - j) * j, dp[i - j] * j);\",\"那么在取最大值的时候，为什么还要比较dp[i]呢？\",\"因为在递推公式推导的过程中，每次计算dp[i]，取最大的而已。\",\"func integerBreak(n int) int { dp := make([]int, n+1) dp[2] = 1 for i := 3; i <= n; i++ { for j := 1; j < i-1; j++ { dp[i] = max(dp[i], max(j*(i-j), j * dp[i-j])) } } return dp[n] } func max(a, b int) int { if a > b { return a } return b } \"]},\"232\":{\"h\":\"96.不同的二叉搜索树\",\"t\":[\"给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？\",\"确定dp数组（dp table）以及下标的含义\",\"dp[i] ： 1到i为节点组成的二叉搜索树的个数为dp[i]\",\"也可以理解是i的不同元素节点组成的二叉搜索树的个数为dp[i] ，都是一样的。\",\"以下分析如果想不清楚，就来回想一下dp[i]的定义\",\"确定递推公式\",\"dp[i] += dp[以j为头结点左子树节点数量] * dp[以j为头结点右子树节点数量]\",\"所以递推公式：dp[i] += dp[j - 1] * dp[i - j]; ，j-1 为j为头结点左子树节点数量，i-j 为以j为头结点右子树节点数量\",\"func numTrees(n int) int { dp := make([]int, n+1) dp[0] = 1 for i := 1; i <= n; i++ { for j := 1; j <= i; j++ { dp[i] += dp[j - 1] * dp[i - j]; } } return dp[n]; } \"]},\"233\":{\"h\":\"背包问题\"},\"234\":{\"h\":\"01-背包基础\"},\"235\":{\"h\":\"二维数组\",\"t\":[\"有n件物品和一个最多能背重量为w 的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。每件物品只能用一次，求解将哪些物品装入背包里物品价值总和最大。\",\"这是一个标准的背包问题\",\"在下面的讲解中，我举一个例子：\",\"背包最大重量为4。\",\"物品为：\",\"重量\",\"价值\",\"物品1\",\"1\",\"15\",\"物品2\",\"3\",\"20\",\"物品3\",\"4\",\"30\",\"问背包能背的物品最大价值是多少？\",\"以下讲解和图示中出现的数字都是以这个例子为例。\",\"二维dp数组01背包问题\",\"确定dp数组以及下标的含义 对于背包问题有一种写法是用二维数组dp[i][j]即dp[i][j]表示从下标为[0-i]的物品里任意取,放进容量为j的背包价值最大为多少.\",\"确定递推公式\",\"再回顾一下dp[i][j]的含义：从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少。\",\"那么可以有两个方向推出来dp[i][j]\",\"不放物品i：由dp[i - 1][j]推出，即背包容量为j，里面不放物品i的最大价值，此时dp[i][j]就是dp[i - 1][j]。(其实就是当物品i的重量大于背包j的重量时，物品i无法放进背包中，所以被背包内的价值依然和前面相同。)\",\"放物品i：由dp[i - 1][j - weight[i]]推出，dp[i - 1][j - weight[i]] 为背包容量为j - weight[i]的时候不放物品i的最大价值，那么dp[i - 1][j - weight[i]] + value[i] （物品i的价值），就是背包放物品i得到的最大价值\",\"所以递归公式： dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);\",\"dp数组如何初始化\",\"关于初始化，一定要和dp数组的定义吻合，否则到递推公式的时候就会越来越乱。\",\"首先从dp[i][j]的定义出发，如果背包容量j为0的话，即dp[i][0]，无论是选取哪些物品，背包价值总和一定为0。如图：\",\"在看其他情况。\",\"状态转移方程 dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); 可以看出i 是由 i-1 推导出来，那么i为0的时候就一定要初始化。\",\"dp[0][j]，即：i为0，存放编号0的物品的时候，各个容量的背包所能存放的最大价值。\",\"那么很明显当 j < weight[0]的时候，dp[0][j] 应该是 0，因为背包容量比编号0的物品重量还小。\",\"当j >= weight[0]时，dp[0][j] 应该是value[0]，因为背包容量放足够放编号0物品。\",\"代码初始化如下：\",\"for (int j = 0 ; j < weight[0]; j++) { // 当然这一步，如果把dp数组预先初始化为0了，这一步就可以省略，但很多同学应该没有想清楚这一点。 dp[0][j] = 0; } // 正序遍历 for (int j = weight[0]; j <= bagweight; j++) { dp[0][j] = value[0]; } \",\"此时dp数组初始化情况如图所示：\",\"dp[0][j] 和 dp[i][0] 都已经初始化了，那么其他下标应该初始化多少呢？\",\"其实从递归公式： dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); 可以看出dp[i][j] 是由左上方数值推导出来了，那么 其他下标初始为什么数值都可以，因为都会被覆盖。\",\"确定遍历顺序\",\"在如下图中，可以看出，有两个遍历的维度：物品与背包重量\",\"那么问题来了，先遍历 物品还是先遍历背包重量呢？\",\"其实都可以！！ 但是先遍历物品更好理解。\",\"那么我先给出先遍历物品，然后遍历背包重量的代码。\",\"// weight数组的大小 就是物品个数 for(int i = 1; i < weight.size(); i++) { // 遍历物品 for(int j = 0; j <= bagweight; j++) { // 遍历背包容量 if (j < weight[i]) dp[i][j] = dp[i - 1][j]; else dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); } } \",\"先遍历背包，再遍历物品，也是可以的\",\"举例推导dp数组\",\"来看一下对应的dp数组的数值，如图：\",\"最终结果就是dp[2][4]。\"]},\"236\":{\"h\":\"一维数组\",\"t\":[\"一维滚动数组\",\"今天我们就来说一说滚动数组，其实在前面的题目中我们已经用到过滚动数组了，就是把二维dp降为一维dp.\",\"对于背包问题其实状态都是可以压缩的。\",\"在使用二维数组的时候，递推公式：dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);\",\"其实可以发现如果把dp[i - 1]那一层拷贝到dp[i]上，表达式完全可以是：dp[i][j] = max(dp[i][j], dp[i][j - weight[i]] + value[i]);\",\"与其把dp[i - 1]这一层拷贝到dp[i]上，不如只用一个一维数组了，只用dp[j]（一维数组，也可以理解是一个滚动数组）。\",\"这就是滚动数组的由来，需要满足的条件是上一层可以重复利用，直接拷贝到当前层。\",\"读到这里估计大家都忘了 dp[i][j]里的i和j表达的是什么了，i是物品，j是背包容量。\",\"dp[i][j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少。\",\"一定要时刻记住这里i和j的含义，要不然很容易看懵了。\",\"动规五部曲分析如下：\",\"确定dp数组的定义\",\"dp[j]表示容量为j的背包所背的价值最大为dp[j]\",\"一维dp数组的递推公式\",\"dp[j]为 容量为j的背包所背的最大价值，那么如何推导dp[j]呢？\",\"dp[j]可以通过dp[j - weight[i]]推导出来，dp[j - weight[i]]表示容量为j - weight[i]的背包所背的最大价值。\",\"dp[j - weight[i]] + value[i] 表示 容量为 j - 物品i重量 的背包 加上 物品i的价值。（也就是容量为j的背包，放入物品i了之后的价值即：dp[j]）\",\"此时dp[j]有两个选择，一个是取自己dp[j] 相当于 二维dp数组中的dp[i-1][j]，即不放物品i，一个是取dp[j - weight[i]] + value[i]，即放物品i，指定是取最大的，毕竟是求最大价值，\",\"所以递归公式为：\",\"dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\",\"可以看出相对于二维dp数组的写法，就是把dp[i][j]中i的维度去掉了。\",\"一维dp数组如何初始化\",\"关于初始化，一定要和dp数组的定义吻合，否则到递推公式的时候就会越来越乱。\",\"dp[j]表示：容量为j的背包，所背的物品价值可以最大为dp[j]，那么dp[0]就应该是0，因为背包容量为0所背的物品的最大价值就是0。\",\"那么dp数组除了下标0的位置，初始为0，其他下标应该初始化多少呢？\",\"看一下递归公式：dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\",\"dp数组在推导的时候一定是取价值最大的数，如果题目给的价值都是正整数那么非0下标都初始化为0就可以了。\",\"这样才能让dp数组在递归公式的过程中取的最大的价值，而不是被初始值覆盖了。\",\"那么我假设物品价值都是大于0的，所以dp数组初始化的时候，都初始为0就可以了。\",\"一维dp数组遍历顺序\",\"代码如下：\",\"for i := 0; i < len(weight); i++ { for j := bagweight; j >= weight[i]; j-- { dp[j] = max(dp[j], dp[j-weight[i]]+value[i]) } } \"]},\"237\":{\"h\":\"416. 分割等和子集\",\"t\":[\"给你一个只包含正整数的非空数组nums。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。\",\"背包的体积为sum / 2\",\"背包要放入的商品（集合里的元素）重量为 元素的数值，价值也为元素的数值\",\"背包如果正好装满，说明找到了总和为 sum / 2 的子集。\",\"背包中每一个元素是不可重复放入。\",\"套到本题，dp[j]表示 背包总容量是j，最大可以凑成j的子集总和为dp[j]。\",\"01背包的递推公式为：dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\",\"确定遍历顺序,如果使用一维dp数组，物品遍历的for循环放在外层，遍历背包的for循环放在内层，且内层for循环倒序遍历！\",\"func canPartition(nums []int) bool { sum := 0 for _, num := range nums { sum += num } if sum % 2 == 1 { return false } target := sum/2 dp := make([]int, target+1) for i := 0; i < len(nums); i++ { for j := target; j >= nums[i]; j-- { dp[j] = max(dp[j], dp[j-nums[i]]+nums[i]) } } return dp[target] == target } \"]},\"238\":{\"h\":\"1049. 最后一块石头的重量 II\",\"t\":[\"这个题和上个题几乎一点区别都没有\",\"甚至可以一点代码都不用改\",\"func lastStoneWeightII(stones []int) int { sum := 0 for i := 0; i < len(stones); i++ { sum += stones[i] } target := sum / 2 dp := make([]int, target+1) for i := 0; i < len(stones); i++ { for j := target; j >= stones[i]; j-- { dp[j] = max(dp[j], dp[j-stones[i]]+stones[i]) } } return sum-2*dp[target] } \"]},\"239\":{\"h\":\"494. 目标和\",\"t\":[\"这个题如何转换成01背包问题呢?\",\"假设加法总和为x,那么减法总和为sum-x.\",\"所以我们要求x-(sum-x) = S, x = (S + sum) / 2\",\"此时问题就转化为，装满容量为x背包，有几种方法。\",\"大家看到(S + sum) / 2 应该担心计算的过程中向下取整有没有影响。\",\"这么担心就对了，例如sum 是5，S是2的话其实就是无解的，所以：if ((S + sum) % 2 == 1) return 0; // 此时没有方案\",\"同时如果 S的绝对值已经大于sum，那么也是没有方案的。if (abs(S) > sum) return 0; // 此时没有方案\",\"再回归到01背包问题，为什么是01背包呢？\",\"因为每个物品（题目中的1）只用一次！\",\"这次和之前遇到的背包问题不一样了，之前都是求容量为j的背包，最多能装多少。\",\"本题则是装满有几种方法。其实这就是一个组合问题了。\",\"dp[j] 表示：填满j（包括j）这么大容积的包，有dp[j]种方法\",\"求组合类问题的公式，都是类似这种：\",\"dp[j] += dp[j - nums[i]]\",\"func findTargetSumWays(nums []int, target int) int { sum := 0 for i := 0; i < len(nums); i++ { sum += nums[i] } if (target + sum) %2 == 1 { return 0 } if abs(target) > sum { return 0 } bag := (sum+target)/2 dp := make([]int, bag+1) dp[0] = 1 for i := 0; i < len(nums); i++ { for j := bag; j >= nums[i]; j-- { // 遍历到了nums[i]已经有一个nums[i] 所以有dp[j-nums[i]] 种方法变成dp[j] dp[j] += dp[j-nums[i]] } } return dp[bag] } func abs(a int) int { if a < 0 { return -a } return a } \"]},\"240\":{\"h\":\"474.一和零\",\"t\":[\"确定dp数组（dp table）以及下标的含义\",\"dp[i][j]：最多有i个0和j个1的strs的最大子集的大小为dp[i][j]。\",\"确定递推公式 \",\"dp[i][j] 可以由前一个strs里的字符串推导出来，strs里的字符串有zeroNum个0，oneNum个1。\",\"dp[i][j] 就可以是 dp[i - zeroNum][j - oneNum] + 1。\",\"dp[i][j] = max(dp[i][j], dp[i - zeroNum][j - oneNum] + 1)\",\"此时大家可以回想一下01背包的递推公式：dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\",\"对比一下就会发现，字符串的zeroNum和oneNum相当于物品的重量（weight[i]），字符串本身的个数相当于物品的价值（value[i]）。\",\"这就是一个典型的01背包！ 只不过物品的重量有了两个维度而已。\",\"dp数组如何初始化\",\"因为物品价值不会是负数，初始为0，保证递推的时候dp[i][j]不会被初始值覆盖。\",\"func findMaxForm(strs []string, m int, n int) int { dp := make([][]int, m+1) for i := range dp { dp[i] = make([]int, n+1) } for _, str := range strs { zeroNum, oneNum := 0, 0 for _, v := range str { if v == '0' { zeroNum++ } else { oneNum++ } } for j := m; j >= zeroNum; j-- { for k := n; k >= oneNum; k-- { dp[j][k] = max(dp[j][k], dp[j-zeroNum][k-oneNum]+1) } } } return dp[m][n] } \"]},\"241\":{\"h\":\"完全背包问题\",\"t\":[\"有N件物品和一个最多能背重量为W的背包。第i件物品的重量是weight[i]，得到的价值是value[i] 。每件物品都有无限个（也就是可以放入背包多次），求解将哪些物品装入背包里物品价值总和最大。\",\"完全背包和01背包问题唯一不同的地方就是，每种物品有无限件。\",\"同样leetcode上没有纯完全背包问题，都是需要完全背包的各种应用，需要转化成完全背包问题，所以我这里还是以纯完全背包问题进行讲解理论和原理。\",\"背包最大重量为4。\",\"物品为：\",\"重量\",\"价值\",\"物品0\",\"1\",\"15\",\"物品1\",\"3\",\"20\",\"物品2\",\"4\",\"30\",\"每件商品都有无限个！\",\"问背包能背的物品最大价值是多少？\",\"首先在回顾一下01背包的核心代码\",\"for(int i = 0; i < weight.size(); i++) { // 遍历物品 for(int j = bagWeight; j >= weight[i]; j--) { // 遍历背包容量 dp[j] = max(dp[j], dp[j - weight[i]] + value[i]); } } \",\"我们知道01背包内嵌的循环是从大到小遍历，为了保证每个物品仅被添加一次。\",\"而完全背包的物品是可以添加多次的，所以要从小到大去遍历，即：\",\"for (int i = 0; i < weight.size(); i++) { for (int j = weight[i]; j <= bagweight; j++) { dp[j] = max(dp[j], dp[j - weight[i]] + value[i]); } } \"]},\"242\":{\"h\":\"518. 零钱兑换 II\",\"t\":[\"这是一道典型的背包问题，一看到钱币数量不限，就知道这是一个完全背包。\",\"注意题目描述中是凑成总金额的硬币组合数，为什么强调是组合数呢？\",\"例如示例一：\",\"5 = 2 + 2 + 1\",\"5 = 2 + 1 + 2\",\"这是一种组合，都是 2 2 1。\",\"如果问的是排列数，那么上面就是两种排列了。\",\"组合不强调元素之间的顺序，排列强调元素之间的顺序。\",\"确定dp数组以及下标的含义\",\"dp[j]：凑成总金额j的货币组合数为dp[j]\",\"确定递推公式\",\"dp[j] （考虑coins[i]的组合总和） 就是所有的dp[j - coins[i]]（不考虑coins[i]）相加。\",\"所以递推公式：dp[j] += dp[j - coins[i]];\",\"dp数组如何初始化 dp[0] = 1\",\"确定遍历顺序\",\"本题中我们是外层for循环遍历物品（钱币），内层for遍历背包（金钱总额），还是外层for遍历背包（金钱总额），内层for循环遍历物品（钱币）呢？\",\"如果先遍历物品,后遍历背包就是组合问题.\",\"如果先遍历背包,后遍历物品就是排列问题.\",\"所以本题是\",\"func change(amount int, coins []int) int { dp := make([]int, amount+1) dp[0] = 1 for i := 0; i < len(coins); i++ { for j := coins[i]; j <= amount; j++ { dp[j] += dp[j-coins[i]] } } return dp[amount] } \"]},\"243\":{\"h\":\"70. 爬楼梯\",\"t\":[\"改为：一步一个台阶，两个台阶，三个台阶，.......，直到 m个台阶。问有多少种不同的方法可以爬到楼顶呢？\",\"dp[i]：爬到有i个台阶的楼顶，有dp[i]种方法。\",\"dp[i]有几种来源，dp[i - 1]，dp[i - 2]，dp[i - 3] 等等，即：dp[i - j], 那么递推公式为：dp[i] += dp[i - j]\",\"dp数组如何初始化\",\"既然递归公式是 dp[i] += dp[i - j]，那么dp[0] 一定为1，dp[0]是递归中一切数值的基础所在，如果dp[0]是0的话，其他数值都是0了。\",\"本题要求的其实是排列数.\",\"func climbStairs(n int) int { dp := make([]int, n+1) dp[0] = 1 // 背包 for i := 1; i < n; i++ { // 物品 for j := 1; j <= m; j++ { if (i-j >= 0) dp[i] += dp[i-j] } } return dp[n] } \"]},\"244\":{\"h\":\"322. 零钱兑换\",\"t\":[\"dp[j]：凑足总额为j所需钱币的最少个数为dp[j]\",\"确定递推公式\",\"得到dp[j]（考虑coins[i]），只有一个来源，dp[j - coins[i]]（没有考虑coins[i]）。\",\"凑足总额为j - coins[i]的最少个数为dp[j - coins[i]]，那么只需要加上一个钱币coins[i]即dp[j - coins[i]] + 1就是dp[j]（考虑coins[i]）\",\"所以dp[j] 要取所有 dp[j - coins[i]] + 1 中最小的。\",\"递推公式：dp[j] = min(dp[j - coins[i]] + 1, dp[j]);\",\"首先凑足总金额为0所需钱币的个数一定是0，那么dp[0] = 0;\",\"其他下标对应的数值呢？\",\"考虑到递推公式的特性，dp[j]必须初始化为一个最大的数，否则就会在min(dp[j - coins[i]] + 1, dp[j])比较的过程中被初始值覆盖。\",\"所以下标非0的元素都是应该是最大值。\",\"代码\",\"func coinChange(coins []int, amount int) int { dp := make([]int, amount+1) for i := 1 ; i <= amount; i++ { dp[i] = math.MaxInt32 } dp[0] = 0 for i := 1; i < len(coins); i++ { for j := coins[i]; j <= amount; j++ { if dp[j-coins[i]] != math.MaxInt32 { dp[j] = min(dp[j], dp[j-coins[i]]+1) } } } if dp[amount] == math.MaxInt32 { return -1 } // fmt.Println(dp) return dp[amount] } func min(a, b int) int { if a < b { return a } return b } \"]},\"245\":{\"h\":\"279. 完全平方数\",\"t\":[\"给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。\",\"其实和上一个题差不多哈哈\",\"func numSquares(n int) int { dp := make([]int, n+1) dp[0] = 0 for i := 1; i <= n; i++ { dp[i] = math.MaxInt32 } for i := 1; i <= n; i++ { for j := i*i; j <= n; j++ { dp[j] = min(dp[j], dp[j-i*i]+1) } } fmt.Println(dp) if dp[n] == math.MaxInt32 { return -1 } return dp[n] } func min(a, b int) int { if a < b { return a } return b } \"]},\"246\":{\"h\":\"139. 单词拆分\",\"t\":[\"func wordBreak(s string, wordDict []string) bool { wordDictSet := make(map[string]bool) for _, w := range wordDict { wordDictSet[w] = true } dp := make([]bool, len(s)+1) dp[0] = true for i := 0; i <= len(s); i++ { for j := 0; j < i; j++ { if dp[j] && wordDictSet[s[j:i]] { dp[i] = true break } } } return dp[len(s)] } \"]},\"247\":{\"h\":\"打家劫舍\"},\"248\":{\"h\":\"198. 打家劫舍\",\"t\":[\"dp[i]：考虑下标i（包括i）以内的房屋，最多可以偷窃的金额为dp[i]。\",\"决定dp[i]的因素就是第i房间偷还是不偷。决定dp[i]的因素就是第i房间偷还是不偷。\",\"如果偷第i房间，那么dp[i] = dp[i - 2] + nums[i] ，即：第i-1房一定是不考虑的，找出 下标i-2（包括i-2）以内的房屋，最多可以偷窃的金额为dp[i-2] 加上第i房间偷到的钱。\",\"如果不偷第i房间，那么dp[i] = dp[i - 1]，即考虑i-1房，（注意这里是考虑，并不是一定要偷i-1房，这是很多同学容易混淆的点）\",\"然后dp[i]取最大值，即dp[i] = max(dp[i - 2] + nums[i], dp[i - 1]);\",\"dp数组如何初始化\",\"从递推公式dp[i] = max(dp[i - 2] + nums[i], dp[i - 1]);可以看出，递推公式的基础就是dp[0] 和 dp[1]\",\"从dp[i]的定义上来讲，dp[0] 一定是 nums[0]，dp[1]就是nums[0]和nums[1]的最大值即：dp[1] = max(nums[0], nums[1]);\",\"dp[0] = nums[0] dp[1] = max(nums[0], nums[1]) \"]},\"249\":{\"h\":\"213. 打家劫舍II\",\"t\":[\"你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都 围成一圈 ，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警 。\",\"给定一个代表每个房屋存放金额的非负整数数组，计算你 在不触动警报装置的情况下 ，今晚能够偷窃到的最高金额。\",\"func rob(nums []int) int { if len(nums) == 1 { return nums[0] } if len(nums) == 2 { return max(nums[0], nums[1]) } nums1 := robRange(nums, 0) nums2 := robRange(nums, 1) return max(nums1, nums2) } func robRange(nums []int, start int) int { dp := make([]int, len(nums)) dp[1] = nums[start] for i := 2; i < len(nums); i++ { dp[i] = max(dp[i-2]+nums[i-1+start], dp[i-1]) } return dp[len(nums)-1] } func max(a, b int) int { if a < b { return b } return a } \"]},\"250\":{\"h\":\"337.打家劫舍 III\",\"t\":[\"func rob(root *TreeNode) int { dp := traversal(root) return max(dp[0], dp[1]) } func traversal(root *TreeNode) []int { if root == nil { return []int{0, 0} } dpL := traversal(root.Left) dpR := traversal(root.Right) val1 := root.Val + dpL[0] + dpR[0] val2 := max(dpL[0], dpL[1]) + max(dpR[0], dpR[1]) return []int{val2, val1} } func max(a, b int) int { if a > b { return a } return b } \"]},\"251\":{\"h\":\"股票问题\"},\"252\":{\"h\":\"121. 买卖股票的最佳时机\",\"t\":[\"给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。\",\"你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。\",\"返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。\",\"示例 1： 输入：[7,1,5,3,6,4] 输出：5 解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。 示例 2： 输入：prices = [7,6,4,3,1] 输出：0 解释：在这种情况下, 没有交易完成, 所以最大利润为 0。 \",\"贪心, 向左取最小值, 向右边取最大利润\",\"func maxProfit(prices []int) int { low := math.MaxInt32 rlt := 0 for i := range prices{ low = min(low, prices[i]) rlt = max(rlt, prices[i]-low) } return rlt } func min(a, b int) int { if a < b{ return a } return b } func max(a, b int) int { if a > b{ return a } return b } \",\"动态规划\",\"确定dp数组\",\"dp[i][0] 表示第i天持有股票所得最多现金 ，这里可能有同学疑惑，本题中只能买卖一次，持有股票之后哪还有现金呢？\",\"其实一开始现金是0，那么加入第i天买入股票现金就是 -prices[i]， 这是一个负数。\",\"dp[i][1] 表示第i天不持有股票所得最多现金\",\"注意这里说的是“持有”，“持有”不代表就是当天“买入”！也有可能是昨天就买入了，今天保持持有的状态\",\"确定递推公式\",\"如果第i天持有股票即dp[i][0], 可以由两个状态推出来 第i-1天就持有股票，那么就保持现状，所得现金就是昨天持有股票的所得现金 即：dp[i - 1][0] 第i天买入股票，所得现金就是买入今天的股票后所得现金即：-prices[i] 那么dp[i][0]应该选所得现金最大的，所以dp[i][0] = max(dp[i - 1][0], -prices[i])\",\"如果第i天不持有股票即dp[i][1]， 也可以由两个状态推出来 第i-1天就不持有股票，那么就保持现状，所得现金就是昨天不持有股票的所得现金 即：dp[i - 1][1] 第i天卖出股票，所得现金就是按照今天股票佳价格卖出后所得现金即：prices[i] + dp[i - 1][0] 同样dp[i][1]取最大的，dp[i][1] = max(dp[i - 1][1], prices[i] + dp[i - 1][0])\",\"dp数组如何初始化\",\"由递推公式 dp[i][0] = max(dp[i - 1][0], -prices[i]); 和 dp[i][1] = max(dp[i - 1][1], prices[i] + dp[i - 1][0]);可以看出\",\"需要初始化dp[0][0], dp[0][1]\",\"那么dp[0][0]表示第0天持有股票，此时的持有股票就一定是买入股票了，因为不可能有前一天推出来，所以dp[0][0] -= prices[0];\",\"dp[0][1]表示第0天不持有股票，不持有股票那么现金就是0，所以dp[0][1] = 0;\",\"代码:\",\"func maxProfit(prices []int) int { length:=len(prices) if length==0{return 0} dp:=make([][]int,length) for i:=0;i<length;i++{ dp[i]=make([]int,2) } dp[0][0]=-prices[0] dp[0][1]=0 for i:=1;i<length;i++{ dp[i][0]=max(dp[i-1][0],-prices[i]) dp[i][1]=max(dp[i-1][1],dp[i-1][0]+prices[i]) } return dp[length-1][1] } \"]},\"253\":{\"h\":\"122.买卖股票的最佳时机II\",\"t\":[\"给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。\",\"设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。\",\"注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\",\" 示例 1: 输入: [7,1,5,3,6,4] 输出: 7 解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4。随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。 示例 2: 输入: [1,2,3,4,5] 输出: 4 解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。 示例 3: 输入: [7,6,4,3,1] 输出: 0 解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。 \",\"和上一题是一样的dp[i][0]持有股票的最大现金, dp[i][1]是不持有股票的最大现金\",\"func maxProfit(prices []int) int { dp := make([][]int, len(prices)) status := make([]int, len(prices) * 2) for i := range dp { dp[i] = status[:2] status = status[2:] } dp[0][0] = -prices[0] for i := 1; i < len(prices); i++ { dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] - prices[i]) // 唯一不同的一点 dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i]) } return dp[len(prices) - 1][1] } \"]},\"254\":{\"h\":\"123.买卖股票的最佳时机III\",\"t\":[\"给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。\",\"设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。\",\"注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\",\"示例 1: 输入：prices = [3,3,5,0,0,3,1,4] 输出：6 解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3。\",\"关键在于至多买卖两次，这意味着可以买卖一次，可以买卖两次，也可以不买卖。\",\"确定dp数组以及下标的含义 \",\"一天一共就有五个状态，\",\"没有操作\",\"第一次买入\",\"第一次卖出\",\"第二次买入\",\"第二次卖出\",\"dp[i][j]中 i表示第i天，j为 [0 - 4] 五个状态，dp[i][j]表示第i天状态j所剩最大现金。\",\"确定递推公式\",\"需要注意：dp[i][1]，表示的是第i天，买入股票的状态，并不是说一定要第i天买入股票，这是很多同学容易陷入的误区。\",\"达到dp[i][1]状态，有两个具体操作：\",\"操作一：第i天买入股票了，那么dp[i][1] = dp[i-1][0] - prices[i]\",\"操作二：第i天没有操作，而是沿用前一天买入的状态，即：dp[i][1] = dp[i - 1][1]\",\"那么dp[i][1]究竟选 dp[i-1][0] - prices[i]，还是dp[i - 1][1]呢？\",\"一定是选最大的，所以 dp[i][1] = max(dp[i-1][0] - prices[i], dp[i - 1][1]);\",\"同理dp[i][2]也有两个操作：\",\"操作一：第i天卖出股票了，那么dp[i][2] = dp[i - 1][1] + prices[i]\",\"操作二：第i天没有操作，沿用前一天卖出股票的状态，即：dp[i][2] = dp[i - 1][2]\",\"所以dp[i][2] = max(dp[i - 1][1] + prices[i], dp[i - 1][2])\",\"同理可推出剩下状态部分：\",\"dp[i][3] = max(dp[i - 1][3], dp[i - 1][2] - prices[i]);\",\"dp[i][4] = max(dp[i - 1][4], dp[i - 1][3] + prices[i]);\",\"第0天做第一次买入的操作，dp[0][1] = -prices[0], dp[0][3] = -prices[0];\",\"func maxProfit(prices []int) int { dp:=make([][]int,len(prices)) for i:=0;i<len(prices);i++{ dp[i]=make([]int,5) } dp[0][0]=0 dp[0][1]=-prices[0] dp[0][2]=0 dp[0][3]=-prices[0] dp[0][4]=0 for i:=1;i<len(prices);i++{ dp[i][0]=dp[i-1][0] dp[i][1]=max(dp[i-1][1],dp[i-1][0]-prices[i]) dp[i][2]=max(dp[i-1][2],dp[i-1][1]+prices[i]) dp[i][3]=max(dp[i-1][3],dp[i-1][2]-prices[i]) dp[i][4]=max(dp[i-1][4],dp[i-1][3]+prices[i]) } return dp[len(prices)-1][4] } \"]},\"255\":{\"h\":\"188.买卖股票的最佳时机IV\",\"t\":[\"给定一个整数数组 prices ，它的第 i 个元素 prices[i] 是一支给定的股票在第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你最多可以完成 k 笔交易。 注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\",\"func maxProfit(k int, prices []int) int { if k == 0 || len(prices) == 0 { return 0 } dp := make([][]int, len(prices)) for i := range dp { dp[i] = make([]int, 2*k+1) } for j := 1; j < 2 * k; j += 2 { dp[0][j] = -prices[0] } for i := 1; i < len(prices); i++ { for j := 0; j < 2 * k; j += 2 { dp[i][j + 1] = max(dp[i - 1][j + 1], dp[i - 1][j] - prices[i]) dp[i][j + 2] = max(dp[i - 1][j + 2], dp[i - 1][j + 1] + prices[i]) } } return dp[len(prices) - 1][2 * k] } \"]},\"256\":{\"h\":\"309.最佳买卖股票时机含冷冻期\",\"t\":[\"给定一个整数数组，其中第 i 个元素代表了第 i 天的股票价格 。\",\"设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:\",\"你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。 卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。 \",\"示例: 输入: [1,2,3,0,2] 输出: 3 解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]\"]},\"257\":{\"h\":\"300.最长递增子序列\",\"t\":[\"给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。\",\"子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。\",\"输入：nums = [10,9,2,5,3,7,101,18] 输出：4 解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。 \",\"思路:\",\"最长上升子序列是动规的经典题目，这里dp[i]是可以根据dp[j] （j < i）推导出来的，那么依然用动规五部曲来分析详细一波：\",\"dp[i]的定义 dp[i]表示i之前包括i的以nums[i]结尾最长上升子序列的长度.\",\"状态转移方程 位置i的最长上升子序列的长度等于j从0到i-1各个位置的最长升序子序列 + 1 的最大值。\",\"所以表达式是这样的if nums[j] < nums[i] {dp[i] = max(dp[i], dp[j]+1)}, 这里的j是dp数组索引从0到i-1的各个值,所以dp[i]就是j从0到i-1各个位置的最长升序子序列 + 1 的最大值.\",\"注意这里不是要dp[i] 与 dp[j] + 1进行比较，而是我们要取dp[j] + 1的最大值。\",\"dp[i]的初始化\",\"对于每一个dp[i],起始大小都必须是1\",\"确定遍历顺序\",\"dp[i] 是有0到i-1各个位置的最长升序子序列 推导而来，那么遍历i一定是从前向后遍历。\",\"所以代码如下\",\"func lengthOfLIS(nums []int) int { dp := make([]int, len(nums)) for i := range dp { dp[i] = 1 } res := 1 for i := 1; i < len(nums); i++ { // 要dp[i]与dp[0]...dp[i-1]比较, dp[i]是dp[j]的最大值+1 for j := 0; j < i; j++ { if nums[j] < nums[i] { dp[i] = max(dp[i], dp[j]+1) } res = max(res, dp[i]) } } return res } func max(a ...int) int { b := a[0] if len(a) == 1 { return b } for i := 1; i < len(a); i++ { if a[i] > b { b = a[i] } } return b } \"]},\"258\":{\"h\":\"674. 最长连续递增序列\",\"t\":[\"给定一个未经排序的整数数组，找到最长且 连续递增的子序列，并返回该序列的长度。\",\"连续递增的子序列 可以由两个下标 l 和 r（l < r）确定，如果对于每个 l <= i < r，都有 nums[i] < nums[i + 1] ，那么子序列 [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] 就是连续递增子序列。\",\"输出：3 解释：最长连续递增序列是 [1,3,5], 长度为3。 尽管 [1,3,5,7] 也是升序的子序列, 但它不是连续的，因为 5 和 7 在原数组里被 4 隔开。 \",\"这个题有一个不一样的地方,就是它要求连续的递增序列\",\"我们继续:\",\"确定dp数组的下标含义 dp[i]是以dp[i]为结尾的数组的连续递增的子序列的长度\",\"确定递推公式 如果nums[i]>nums[i-1],那么dp[i]=dp[i-1]+1\",\"dp数组如何初始化 其实和上一题一样都初始化为1就可以了\",\"那么代码其实是这样的\",\"func findLengthOfLCIS(nums []int) int { if len(nums) == 0 { return 0 } result := 1 dp := make([]int, len(nums)) for i := 0; i < len(dp); i++ { dp[i] = 1 } for i := 1; i < len(nums); i++ { if nums[i] > nums[i-1] { dp[i] = dp[i-1]+1 } if dp[i] > result { result = dp[i] } } return result } \"]},\"259\":{\"h\":\"718. 最长重复子数组\",\"t\":[\"给两个整数数组 nums1 和 nums2 ，返回 两个数组中 公共的 、长度最长的子数组的长度 。\",\"输入：nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7] 输出：3 解释：长度最长的公共子数组是 [3,2,1] 。\",\"这个题有两个数组所以需要二维dp数组了\",\"确定dp数组下标含义 dp[i][j]是以下标i-1为结尾的nums1,和以j-1为结尾的nums2,最长重复子数组的长度为dp[i][j]\",\"那么dp[0][0]的含义是什么呢?总不能是以下标-1吧\",\"所以这样的定义也就意味着我们需要从1开始遍历\",\"确定递推公式\",\"根据dp[i][j]的定义，dp[i][j]的状态只能由dp[i - 1][j - 1]推导出来。\",\"如果nums[i-1] == nums2[j-1],那么dp[i][j] = dp[i-1][j-1]+1根据递推公式可以看出，遍历i 和 j 要从1开始！\",\"dp数组如何初始化?\",\"根据dp[i][j]的定义，dp[i][0] 和dp[0][j]其实都是没有意义的！\",\"但dp[i][0] 和dp[0][j]要初始值，因为 为了方便递归公式dp[i][j] = dp[i - 1][j - 1] + 1;所以dp[i][0] 和dp[0][j]初始化为0。举个例子A[0]如果和B[0]相同的话，dp[1][1] = dp[0][0] + 1，只有dp[0][0]初始为0，正好符合递推公式逐步累加起来。\",\"确定遍历顺序\",\"外层for循环遍历A，内层for循环遍历B。\",\"那又有同学问了，外层for循环遍历B，内层for循环遍历A。不行么？\",\"也行，一样的，我这里就用外层for循环遍历A，内层for循环遍历B了。\",\"同时题目要求长度最长的子数组的长度。所以在遍历的时候顺便把dp[i][j]的最大值记录下来。\",\"所以代码是这样的\",\"for (int i = 1; i <= A.size(); i++) { for (int j = 1; j <= B.size(); j++) { if (A[i - 1] == B[j - 1]) { dp[i][j] = dp[i - 1][j - 1] + 1; } if (dp[i][j] > result) result = dp[i][j]; } } \",\"func findLength(nums1 []int, nums2 []int) int { dp := make([][]int, len(nums1)+1) for i := range dp { dp[i] = make([]int, len(nums2)+1) } res := 0 for i := 1; i <= len(nums1); i++ { for j := 1; j <= len(nums2); j++ { if nums1[i-1] == nums[j-1] { dp[i][j] = dp[i-1][j-1]+1 } res = max(res, dp[i][j]) } } return res } \"]},\"260\":{\"h\":\"1143. 最长公共子序列\",\"t\":[\"给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。\",\"一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。\",\"例如，\\\"ace\\\" 是 \\\"abcde\\\" 的子序列，但 \\\"aec\\\" 不是 \\\"abcde\\\" 的子序列。 \",\"两个字符串的 公共子序列 是这两个字符串所共同拥有的子序列。\",\"输入：text1 = \\\"abcde\\\", text2 = \\\"ace\\\" 输出：3 解释：最长公共子序列是 \\\"ace\\\" ，它的长度为 3 。 本题和动态规划：718. 最长重复子数组 (opens new window)区别在于这里不要求是连续的了，但要有相对顺序，即：\\\"ace\\\" 是 \\\"abcde\\\" 的子序列，但 \\\"aec\\\" 不是 \\\"abcde\\\" 的子序列。\",\"确定dp数组（dp table）以及下标的含义 dp[i][j]：长度为[0, i - 1]的字符串text1与长度为[0, j - 1]的字符串text2的最长公共子序列为dp[i][j]\",\"确定递推公式 主要就是两大情况： text1[i - 1] 与 text2[j - 1]相同，text1[i - 1] 与 text2[j - 1]不相同 如果text1[i - 1] 与 text2[j - 1]相同，那么找到了一个公共元素，所以dp[i][j] = dp[i - 1][j - 1] + 1;\",\"如果text1[i - 1] 与 text2[j - 1]不相同，那就看看text1[0, i - 2]与text2[0, j - 1]的最长公共子序列 和 text1[0, i - 1]与text2[0, j - 2]的最长公共子序列，取最大的。\",\"即：dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\",\"if (text1[i - 1] == text2[j - 1]) { dp[i][j] = dp[i - 1][j - 1] + 1; } else { dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]); } \",\"dp数组如何初始化 \",\"先看看dp[i][0]应该是多少呢？\",\"test1[0, i-1]和空串的最长公共子序列自然是0，所以dp[i][0] = 0;\",\"同理dp[0][j]也是0。\",\"其他下标都是随着递推公式逐步覆盖，初始为多少都可以，那么就统一初始为0。\",\"所以最后的代码是这样的\",\"func longestCommonSubsequence(text1 string, text2 string) int { dp := make([][]int, len(text1)+1) for i := range dp { dp[i] = make([]int, len(text2)+1) } for i := 1; i <= len(text1); i++ { for j := 1; j <= len(text2); j++ { if text1[i-1] == text2[j-1] { dp[i][j] = dp[i-1][j-1]+1 } else { dp[i][j] = max(dp[i-1][j], dp[i][j-1]) } } } return dp[len(text1)][len(text2)] } \"]},\"261\":{\"h\":\"1035. 不相交的线\",\"t\":[\"这道题本质上和上一道题是一样的,甚至代码都一样...\",\"func longestCommonSubsequence(text1 string, text2 string) int { t1 := len(text1) t2 := len(text2) dp:=make([][]int,t1+1) for i:=range dp{ dp[i]=make([]int,t2+1) } for i := 1; i <= t1; i++ { for j := 1; j <=t2; j++ { if text1[i-1]==text2[j-1]{ dp[i][j]=dp[i-1][j-1]+1 }else{ dp[i][j]=max(dp[i-1][j],dp[i][j-1]) } } } return dp[t1][t2] } \"]},\"262\":{\"h\":\"53. 最大子数组和\",\"t\":[\"给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。\",\"子数组 是数组中的一个连续部分。\",\"输入：nums = [-2,1,-3,4,-1,2,1,-5,4] 输出：6 解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。 \",\"确定dp数组（dp table）以及下标的含义 \",\"dp[i]：包括下标i之前的最大连续子序列和为dp[i]。 2. 确定递推公式 dp[i]只有两个方向可以推出来：\",\"dp[i - 1] + nums[i]，即：nums[i]加入当前连续子序列和 nums[i]，即：从头开始计算当前连续子序列和 \",\"一定是取最大的，所以dp[i] = max(dp[i - 1] + nums[i], nums[i]);\",\"dp数组如何初始化\",\"从递推公式可以看出来dp[i]是依赖于dp[i - 1]的状态，dp[0]就是递推公式的基础。\",\"dp[0]应该是多少呢?\",\"根据dp[i]的定义，很明显dp[0]应为nums[0]即dp[0] = nums[0]。\",\"所以代码应该是这样的\",\"func maxSubArray(nums []int) int { dp := make([]int, len(nums)) dp[0] = nums[0] res := nums[0] for i := 1; i < len(nums); i++ { dp[i] = max(nums[i], dp[i-1]+nums[i]) res = max(res, dp[i]) } return res } \"]},\"263\":{\"h\":\"392. 判断子序列\",\"t\":[\"给定字符串 s 和 t ，判断 s 是否为 t 的子序列。\",\"字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，\\\"ace\\\"是\\\"abcde\\\"的一个子序列，而\\\"aec\\\"不是）。\",\"输入：s = \\\"abc\\\", t = \\\"ahbgdc\\\" 输出：true \",\"确定dp数组（dp table）以及下标的含义 \",\"dp[i][j] 表示以下标i-1为结尾的字符串s，和以下标j-1为结尾的字符串t，相同子序列的长度为dp[i][j]。\",\"确定递推公式 \",\"在确定递推公式的时候，首先要考虑如下两种操作，整理如下：\",\"if (s[i - 1] == t[j - 1]) t中找到了一个字符在s中也出现了 if (s[i - 1] != t[j - 1]) 相当于t要删除元素，继续匹配 \",\"if (s[i - 1] == t[j - 1])，那么dp[i][j] = dp[i - 1][j - 1] + 1;，因为找到了一个相同的字符，相同子序列长度自然要在dp[i-1][j-1]的基础上加1（如果不理解，在回看一下dp[i][j]的定义）\",\"if (s[i - 1] != t[j - 1])，此时相当于t要删除元素，t如果把当前元素t[j - 1]删除，那么dp[i][j] 的数值就是 看s[i - 1]与 t[j - 2]的比较结果了，即：dp[i][j] = dp[i][j - 1];\",\"dp数组如何初始化 \",\"从递推公式可以看出dp[i][j]都是依赖于dp[i - 1][j - 1] 和 dp[i][j - 1]，所以dp[0][0]和dp[i][0]是一定要初始化的。\",\"这里大家已经可以发现，在定义dp[i][j]含义的时候为什么要表示以下标i-1为结尾的字符串s，和以下标j-1为结尾的字符串t，相同子序列的长度为dp[i][j]。\",\"所以代码是这样的\",\"func isSubsequence(s string, t string) bool { dp := make([][]int, len(s)+1) for i := range dp { dp[i] = make([]int, len(t)+1) } for i := 1; i <= len(s); i++ { for j := 1; j <= len(t); j++ { if s[i-1] == t[j-1] { dp[i][j] = dp[i-1][j-1]+1 } else { dp[i][j] = dp[i][j-1] } } } return dp[len(s)][len(t)] == len(s) } \"]},\"264\":{\"h\":\"115. 不同的子序列\",\"t\":[\"给定一个字符串 s 和一个字符串 t ，计算在 s 的子序列中 t 出现的个数。\",\"字符串的一个 子序列 是指，通过删除一些（也可以不删除）字符且不干扰剩余字符相对位置所组成的新字符串。（例如，\\\"ACE\\\" 是 \\\"ABCDE\\\" 的一个子序列，而 \\\"AEC\\\" 不是）\",\"题目数据保证答案符合 32 位带符号整数范围。\",\"输入：s = \\\"rabbbit\\\", t = \\\"rabbit\\\" 输出：3 解释： 如下图所示, 有 3 种可以从 s 中得到 \\\"rabbit\\\" 的方案。 rabbbit rabbbit rabbbit \",\"确定dp数组（dp table）以及下标的含义 \",\"这一类问题，基本是要分析两种情况\",\"s[i - 1] 与 t[j - 1]相等 s[i - 1] 与 t[j - 1] 不相等 \",\"当s[i - 1] 与 t[j - 1]相等时，dp[i][j]可以有两部分组成。\",\"一部分是用s[i - 1]来匹配，那么个数为dp[i - 1][j - 1]。\",\"一部分是不用s[i - 1]来匹配，个数为dp[i - 1][j]。\",\"这里可能有同学不明白了，为什么还要考虑 不用s[i - 1]来匹配，都相同了指定要匹配啊。\",\"例如： s：bagg 和 t：bag ，s[3] 和 t[2]是相同的，但是字符串s也可以不用s[3]来匹配，即用s[0]s[1]s[2]组成的bag。\",\"当然也可以用s[3]来匹配，即：s[0]s[1]s[3]组成的bag。\",\"所以当s[i - 1] 与 t[j - 1]相等时，dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j];\",\"当s[i - 1] 与 t[j - 1]不相等时，dp[i][j]只有一部分组成，不用s[i - 1]来匹配，即：dp[i - 1][j]\",\"所以递推公式为：dp[i][j] = dp[i - 1][j];\",\"确定递推公式 \",\"从递推公式dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j]; 和 dp[i][j] = dp[i - 1][j]; 中可以看出dp[i][0] 和dp[0][j]是一定要初始化的。\",\"每次当初始化的时候，都要回顾一下dp[i][j]的定义，不要凭感觉初始化。\",\"dp[i][0]表示什么呢？\",\"dp[i][0] 表示：以i-1为结尾的s可以随便删除元素，出现空字符串的个数。\",\"那么dp[i][0]一定都是1，因为也就是把以i-1为结尾的s，删除所有元素，出现空字符串的个数就是1。\",\"再来看dp[0][j]，dp[0][j]：空字符串s可以随便删除元素，出现以j-1为结尾的字符串t的个数。\",\"那么dp[0][j]一定都是0，s如论如何也变成不了t。\",\"最后就要看一个特殊位置了，即：dp[0][0] 应该是多少。\",\"dp[0][0]应该是1，空字符串s，可以删除0个元素，变成空字符串t。\",\"初始化分析完毕，代码如下：\",\"vector<vector<long long>> dp(s.size() + 1, vector<long long>(t.size() + 1)); for (int i = 0; i <= s.size(); i++) dp[i][0] = 1; for (int j = 1; j <= t.size(); j++) dp[0][j] = 0; // 其实这行代码可以和dp数组初始化的时候放在一起，但我为了凸显初始化的逻辑，所以还是加上了。 \",\"确定遍历顺序\",\"从递推公式dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j]; 和 dp[i][j] = dp[i - 1][j]; 中可以看出dp[i][j]都是根据左上方和正上方推出来的。\",\"所以遍历的时候一定是从上到下，从左到右，这样保证dp[i][j]可以根据之前计算出来的数值进行计算。\",\"所以代码应该是这样\",\"func numDistinct(s string, t string) int { m, n := len(s), len(t) // dp 一当[i-1]结尾s序列 t[j-1]结尾t出现的次数 dp := make([][]int, m+1) for i := range dp { dp[i] = make([]int, n+1) } for i := 0; i <= m; i++ { dp[i][0] = 1 } for j := 1; j <= n; j++ { dp[0][j] = 0 } for i := 1; i <= m; i++ { for j := 1; j<= n; j++ { if s[i-1] == t[j-1] { dp[i][j] = dp[i-1][j-1] + dp[i-1][j] } else { dp[i][j] = dp[i-1][j] } } } return dp[m][n] } \"]},\"265\":{\"h\":\"583. 两个字符串的删除操作\",\"t\":[\"给定两个单词 word1 和 word2 ，返回使得 word1 和 word2 相同所需的最小步数。\",\"每步 可以删除任意一个字符串中的一个字符。\",\"输入: word1 = \\\"sea\\\", word2 = \\\"eat\\\" 输出: 2 解释: 第一步将 \\\"sea\\\" 变为 \\\"ea\\\" ，第二步将 \\\"eat \\\"变为 \\\"ea\\\" \",\"确定dp数组（dp table）以及下标的含义 \",\"dp[i][j]：以i-1为结尾的字符串word1，和以j-1位结尾的字符串word2，想要达到相等，所需要删除元素的最少次数。\",\"这里dp数组的定义有点点绕，大家要撸清思路。 2. 确定递推公式\",\"当word1[i - 1] 与 word2[j - 1]相同的时候 当word1[i - 1] 与 word2[j - 1]不相同的时候 \",\"当word1[i - 1] 与 word2[j - 1]相同的时候，dp[i][j] = dp[i - 1][j - 1];\",\"当word1[i - 1] 与 word2[j - 1]不相同的时候，有三种情况：\",\"情况一：删word1[i - 1]，最少操作次数为dp[i - 1][j] + 1\",\"情况二：删word2[j - 1]，最少操作次数为dp[i][j - 1] + 1\",\"情况三：同时删word1[i - 1]和word2[j - 1]，操作的最少次数为dp[i - 1][j - 1] + 2\",\"那最后当然是取最小值，所以当word1[i - 1] 与 word2[j - 1]不相同的时候，递推公式：dp[i][j] = min({dp[i - 1][j - 1] + 2, dp[i - 1][j] + 1, dp[i][j - 1] + 1});\",\"因为dp[i - 1][j - 1] + 1等于 dp[i - 1][j] 或 dp[i][j - 1]，所以递推公式可简化为：dp[i][j] = min(dp[i - 1][j] + 1, dp[i][j - 1] + 1);\",\"dp数组如何初始化 \",\"从递推公式中，可以看出来，dp[i][0] 和 dp[0][j]是一定要初始化的。\",\"dp[i][0]：word2为空字符串，以i-1为结尾的字符串word1要删除多少个元素，才能和word2相同呢，很明显dp[i][0] = i。\",\"dp[0][j]的话同理，所以代码如下：\",\"vector<vector<int>> dp(word1.size() + 1, vector<int>(word2.size() + 1)); for (int i = 0; i <= word1.size(); i++) dp[i][0] = i; for (int j = 0; j <= word2.size(); j++) dp[0][j] = j; \",\"所以代码是这样的\",\"func minDistance(word1 string, word2 string) int { m, n := len(word1), len(word2) dp := make([][]int, m+1) for i := range dp { dp[i] = make([]int, n+1) } for i := 0; i <= len(word1); i++ { dp[i][0] = i } for i := 0; i <= len(word2); i++ { dp[0][i] = i } for i := 1; i <= m; i++ { for j := 1; j <= n; j++ { if word1[i-1] == word2[j-1] { dp[i][j] = dp[i-1][j-1] } else { dp[i][j] = min(dp[i][j-1]+1, dp[i-1][j]+1, dp[i-1][j-1]+2) } } } return dp[m][n] } \",\"当然这个题也可以求出最长公共子序列,然后最后再减一下长度也可以求出来\",\"// 求最长公共自序列 m, n := len(text1), len(text2) dp := make([][]int, m+1) for i := range dp { dp[i] = make([]int, n+1) } for i := 1; i <= m; i++ { for j := 1; j <= n; j++ { if text1[i-1] == text2[j-1] { dp[i][j] = dp[i-1][j-1]+1 } else { dp[i][j] = max(dp[i][j-1], dp[i-1][j]) } } } return m+n-2*dp[m][n] \"]},\"266\":{\"h\":\"72. 编辑距离\",\"t\":[\"给你两个单词 word1 和 word2， 请返回将 word1 转换成 word2 所使用的最少操作数 。\",\"你可以对一个单词进行如下三种操作：\",\"插入一个字符 删除一个字符 替换一个字符 \",\"输入：word1 = \\\"horse\\\", word2 = \\\"ros\\\" 输出：3 解释： horse -> rorse (将 'h' 替换为 'r') rorse -> rose (删除 'r') rose -> ros (删除 'e') \",\"确定dp数组（dp table）以及下标的含义\",\"dp[i][j] 表示以下标i-1为结尾的字符串word1，和以下标j-1为结尾的字符串word2，最近编辑距离为dp[i][j]。\",\"确定递推公式\",\"if (word1[i - 1] == word2[j - 1]) 不操作 if (word1[i - 1] != word2[j - 1]) 增 删 换 \",\"也就是如上4种情况。\",\"if (word1[i - 1] == word2[j - 1]) 那么说明不用任何编辑，dp[i][j] 就应该是 dp[i - 1][j - 1]，即dp[i][j] = dp[i - 1][j - 1];\",\"此时可能有同学有点不明白，为啥要即dp[i][j] = dp[i - 1][j - 1]呢？\",\"那么就在回顾上面讲过的dp[i][j]的定义，word1[i - 1] 与 word2[j - 1]相等了，那么就不用编辑了，以下标i-2为结尾的字符串word1和以下标j-2为结尾的字符串word2的最近编辑距离dp[i - 1][j - 1]就是 dp[i][j]了。\",\"在下面的讲解中，如果哪里看不懂，就回想一下dp[i][j]的定义，就明白了。\",\"在整个动规的过程中，最为关键就是正确理解dp[i][j]的定义！\",\"if (word1[i - 1] != word2[j - 1])，此时就需要编辑了，如何编辑呢？\",\"操作一：word1删除一个元素，那么就是以下标i - 2为结尾的word1 与 j-1为结尾的word2的最近编辑距离 再加上一个操作。 \",\"即 dp[i][j] = dp[i - 1][j] + 1;\",\"操作二：word2删除一个元素，那么就是以下标i - 1为结尾的word1 与 j-2为结尾的word2的最近编辑距离 再加上一个操作。 \",\"即 dp[i][j] = dp[i][j - 1] + 1;\",\"这里有同学发现了，怎么都是删除元素，添加元素去哪了。\",\"word2添加一个元素，相当于word1删除一个元素，例如 word1 = \\\"ad\\\" ，word2 = \\\"a\\\"，word1删除元素'd' 和 word2添加一个元素'd'，变成word1=\\\"a\\\", word2=\\\"ad\\\"， 最终的操作数是一样！ dp数组如下图所示意的：\",\"操作三：替换元素，word1替换word1[i - 1]，使其与word2[j - 1]相同，此时不用增加元素，那么以下标i-2为结尾的word1 与 j-2为结尾的word2的最近编辑距离 加上一个替换元素的操作。\",\"即 dp[i][j] = dp[i - 1][j - 1] + 1;\",\"综上，当 if (word1[i - 1] != word2[j - 1]) 时取最小的，即：dp[i][j] = min({dp[i - 1][j - 1], dp[i - 1][j], dp[i][j - 1]}) + 1;\",\"递归公式代码如下：\",\"if (word1[i - 1] == word2[j - 1]) { dp[i][j] = dp[i - 1][j - 1]; } else { dp[i][j] = min({dp[i - 1][j - 1], dp[i - 1][j], dp[i][j - 1]}) + 1; } \",\"dp数组如何初始化 再回顾一下dp[i][j]的定义：\",\"dp[i][j] 表示以下标i-1为结尾的字符串word1，和以下标j-1为结尾的字符串word2，最近编辑距离为dp[i][j]。\",\"那么dp[i][0] 和 dp[0][j] 表示什么呢？\",\"dp[i][0] ：以下标i-1为结尾的字符串word1，和空字符串word2，最近编辑距离为dp[i][0]。\",\"那么dp[i][0]就应该是i，对word1里的元素全部做删除操作，即：dp[i][0] = i;\",\"同理dp[0][j] = j;\",\"所以C++代码如下：\",\"for (int i = 0; i <= word1.size(); i++) dp[i][0] = i; for (int j = 0; j <= word2.size(); j++) dp[0][j] = j; \",\"所以最后的代码是这样的\",\"m, n := len(word1), len(word2) dp := make([][]int, m+1) for i := range dp { dp[i] = make([]int, n+1) } for i := 0; i <= m; i++ { dp[i][0] = i } for j := 0; j <= n; j++ { dp[0][j] = j } for i := 1; i <= m; i++ { for j := 1; j <= n; j++ { if word1[i-1] == word2[j-1] { dp[i][j] = dp[i-1][j-1] } else { dp[i][j] = min(dp[i-1][j-1]+1, dp[i-1][j]+1, dp[i][j-1]+1) } } } return dp[m][n] \"]},\"267\":{\"h\":\"647. 回文子串\",\"t\":[\"给你一个字符串 s ，请你统计并返回这个字符串中 回文子串 的数目。\",\"回文字符串 是正着读和倒过来读一样的字符串。\",\"子字符串 是字符串中的由连续字符组成的一个序列。\",\"具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被视作不同的子串。\",\"确定dp数组（dp table）以及下标的含义\",\"布尔类型的dp[i][j]：表示区间范围[i,j] （注意是左闭右闭）的子串是否是回文子串，如果是dp[i][j]为true，否则为false。\",\"确定递推公式 \",\"在确定递推公式时，就要分析如下几种情况。\",\"整体上是两种，就是s[i]与s[j]相等，s[i]与s[j]不相等这两种。\",\"当s[i]与s[j]不相等，那没啥好说的了，dp[i][j]一定是false。\",\"当s[i]与s[j]相等时，这就复杂一些了，有如下三种情况\",\"情况一：下标i 与 j相同，同一个字符例如a，当然是回文子串 情况二：下标i 与 j相差为1，例如aa，也是回文子串 情况三：下标：i 与 j相差大于1的时候，例如cabac，此时s[i]与s[j]已经相同了，我们看i到j区间是不是回文子串就看aba是不是回文就可以了，那么aba的区间就是 i+1 与 j-1区间，这个区间是不是回文就看dp[i + 1][j - 1]是否为true。 \",\"if (s[i] == s[j]) { if (j - i <= 1) { // 情况一 和 情况二 result++; dp[i][j] = true; } else if (dp[i + 1][j - 1]) { // 情况三 result++; dp[i][j] = true; } } \",\"result就是统计回文子串的数量。\",\"注意这里我没有列出当s[i]与s[j]不相等的时候，因为在下面dp[i][j]初始化的时候，就初始为false。\",\"dp数组如何初始化 \",\"dp[i][j]可以初始化为true么？ 当然不行，怎能刚开始就全都匹配上了。\",\"所以dp[i][j]初始化为false。\",\"所以代码是像这样的\",\"func countSubstrings(s string) int { dp := make([][]bool, len(s)) for i := range dp { dp[i] = make([]bool, len(s)) } res := 0 for i := len(s); i >= 0; i-- { for j := i; j < len(s); j++ { if s[i] == s[j] { if j - i <= 1 { res++ dp[i][j] = true } else if dp[i+1][j-1] { res++ dp[i+1][j-1] = true } } } } return res } \"]},\"268\":{\"h\":\"516. 最长回文子序列\",\"t\":[\"给你一个字符串 s ，找出其中最长的回文子序列，并返回该序列的长度。\",\"子序列定义为：不改变剩余字符顺序的情况下，删除某些字符或者不删除任何字符形成的一个序列。\",\"输入：s = \\\"bbbab\\\" 输出：4 解释：一个可能的最长回文子序列为 \\\"bbbb\\\" \",\"我们刚刚做过了 动态规划：回文子串，求的是回文子串，而本题要求的是回文子序列， 要搞清楚这两者之间的区别。\",\"回文子串是要连续的，回文子序列可不是连续的！ 回文子串，回文子序列都是动态规划经典题目。\",\"回文子串，可以做这两题：\",\"647.回文子串 5.最长回文子串 思路其实是差不多的，但本题要比求回文子串简单一点，因为情况少了一点。 \",\"动规五部曲分析如下：\",\"确定dp数组（dp table）以及下标的含义 dp[i][j]：字符串s在[i, j]范围内最长的回文子序列的长度为dp[i][j]。\",\"确定递推公式 \",\"在判断回文子串的题目中，关键逻辑就是看s[i]与s[j]是否相同。\",\"如果s[i]与s[j]相同，那么dp[i][j] = dp[i + 1][j - 1] + 2;\",\"如果s[i]与s[j]不相同，说明s[i]和s[j]的同时加入 并不能增加[i,j]区间回文子串的长度，那么分别加入s[i]、s[j]看看哪一个可以组成最长的回文子序列。\",\"加入s[j]的回文子序列长度为dp[i + 1][j]。\",\"加入s[i]的回文子序列长度为dp[i][j - 1]。\",\"那么dp[i][j]一定是取最大的，即：dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);\",\"if (s[i] == s[j]) { dp[i][j] = dp[i + 1][j - 1] + 2; } else { dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]); } \",\"代码就像这样\",\"func longestPalindromeSubseq(s string) int { size := len(s) max := func(a, b int) int { if a > b { return a } return b } dp := make([][]int, size) for i := 0; i < size; i++ { dp[i] = make([]int, size) dp[i][i] = 1 } for i := size - 1; i >= 0; i-- { for j := i + 1; j < size; j++ { if s[i] == s[j] { dp[i][j] = dp[i+1][j-1] + 2 } else { dp[i][j] = max(dp[i][j-1], dp[i+1][j]) } } } return dp[0][size-1] } \"]},\"269\":{\"c\":[\"tutorial\"]},\"270\":{\"c\":[\"leetcode\",\"dynamic-programming\"]},\"271\":{\"h\":\"图论算法\",\"t\":[\"相当长时间以来我都没有深入学习过图论算法,原因之一就是这个在日常工作中用不到,但最近看到同事提交的代码里涉及到了图论知识,用到了迪杰斯特拉算法,具体的场景是 CDN 调度类型的,觉得有必要把这部分知识补充一下所以特此准备深度研究一下图的知识.\"]},\"272\":{\"c\":[\"tutorial\"]},\"273\":{\"c\":[\"leetcode\",\"graph\"]},\"274\":{\"h\":\"剑指offer 刷题笔记\",\"t\":[\"关于剑指offer,其实今年前半年刷过一次,但许久未做题就遗忘了许多,这次边做题边记录一下做题过程,一方面可以让自己忘了的时候有可以复习的地方,再者也可以让读者查看作者的写题思路,供他人参考.\",\"03. 数组中重复的数字\",\"04. 二维数组中的查找\",\"05. 替换空格\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"]},\"275\":{\"h\":\"[03. 数组中重复的数字]\",\"t\":[\"找出数组中重复的数字。\",\"在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。\",\"输入： [2, 3, 1, 0, 2, 5, 3] 输出：2 或 3 \",\"本题可以直接用map做, 遍历的时候直接把数字放进map里如果出现过,直接返回\",\"func findRepeatNumber(nums []int) int { m := make(map[int]int) for i := 0; i < len(nums); i++ { if _, ok := m[nums[i]]; ok { return nums[i] } m[nums[i]] = nums[i] } return 1 } \",\"本题还可以用原地交换去做,原地交换就是不断交换元素,直到nums[i]的位置到了i, 各部就班,如果有重复的直接返回这个题解写的不错\",\" func findRepeatNumber(nums []int) int { for i:=0;i<len(nums);i++{ for nums[i]!=i{ //注意这里一定不能将for改为if if nums[nums[i]]==nums[i]{ return nums[i] //返回重复元素 } nums[i],nums[nums[i]]=nums[nums[i]],nums[i] //不等就交换 } } return 1 } \"]},\"276\":{\"h\":\"[04. 二维数组中的查找]\",\"t\":[\"在一个 n * m 的二维数组中，每一行都按照从左到右 非递减 的顺序排序，每一列都按照从上到下 非递减 的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\",\"示例: 现有矩阵 matrix 如下： [ [1, 4, 7, 11, 15], [2, 5, 8, 12, 19], [3, 6, 9, 16, 22], [10, 13, 14, 17, 24], [18, 21, 23, 26, 30] ] 给定 target = 5，返回 true。 给定 target = 20，返回 false。 \",\"本题可以直接俩for循环暴力去解题, 但如果真这样做就只能回去等通知了, 所以为了不避免回家等通知,我们得学会用一次for循环去解题\",\"通过观察可以发现, 本题的二维数组是有规律排列的, 即每一行都按照从左到右 非递减 的顺序排序,这样我们可以通过一个for循环去控制遍历方向,所以遍历的起始位置也有讲究,即必须一个方向比自己大,另一个方向比自己小,这样才可以控制. 比如选择左下角的18为起始位置, target为5 , 那么18比5大,则往上走, 再继续10 比5大 则继续向上......\",\"所以代码是这样的:\",\"func findNumberIn2DArray(matrix [][]int, target int) bool { m, n := len(matrix), len(matrix[0]) x, y := 0, n-1 for x < m && y >= 0 { if matrix[x][y] == target { return true } if matrix[x][y] > target { y-- } else { x++ } } return false } \",\"没什么好讲的了, 代码已经没法再简单了哈哈哈\"]},\"277\":{\"h\":\"[05. 替换空格]\",\"t\":[\"请实现一个函数，把字符串 s 中的每个空格替换成\\\"%20\\\"。\",\"输入：s = \\\"We are happy.\\\" 输出：\\\"We%20are%20happy.\\\" \",\"本题可以直接创建一个slice去做, 一个for循环当遇到空格就加入'%20', 若不是空格就加入s[i]\",\"当然如果这样本题就太简单了, 其实可以通过遍历一次计算空格的个数spaceCount, 创建一个slice空间大小是spaceCount*2+len(s), 接着从后往前遍历s去解题, 看了代码就知道了\",\"为什么用字节数组做? 因为字节数组比较方便比较\",\"func replaceSpace(s string) string { b := []byte(s) spaceCount := 0 for _, v := range b { if v == ' ' { spaceCount++ } } tmp := make([]byte, spaceCount*2+len(s)) i, j := len(b)-1, len(tmp)-1 for i >= 0 { if b[i] != ' ' { tmp[j] = b[i] i-- j-- } else { tmp[j] = '0' tmp[j-1] = '2' tmp[j-2] = '%' i-- j-=3 } } return string(tmp) } \"]},\"278\":{\"h\":\"[06. 从尾到头打印链表]\",\"t\":[\"输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。\",\"输入：head = [1,3,2] 输出：[2,3,1] \",\"这道题其实有俩思路,但其实差不多,一个是直接遍历链表从头到尾,放入数组里,然后反转数组.\",\"还有一个是反转链表, 然后...装入数组...你看其实差不多吧?\",\"func reversePrint(head *ListNode) []int { rhead := reverseList(head) res := make([]int, 0) for rhead != nil { res = append(res, rhead.Val) rhead = rhead.Next } return res } func reverseList(head *ListNode) *ListNode { var pre *ListNode cur := head for cur != nil { next := cur.Next cur.Next = pre pre = cur cur = next } return pre } \"]},\"279\":{\"h\":\"[07. 重建二叉树]\",\"t\":[\"输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。\",\"假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\",\"示例 1: Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7] Output: [3,9,20,null,null,15,7] 示例 2: Input: preorder = [-1], inorder = [-1] Output: [-1] \",\"本题要注意,前序遍历,第一个元素就是根节点元素,知道这个做题就好做了,其实就是递归过程\",\"func buildTree(preorder []int, inorder []int) *TreeNode { if len(preorder) < 1 || len(inorder) < 1 { return nil } nodeValue := preorder[0] left := findIndex(nodeValue, inorder) root := &TreeNode{ Val: nodeValue, Left: buildTree(preorder[1:left+1], inorder[:left+1]), Right: buildTree(preorder[left+1:], inorder[left+1:]), } return root } func findIndex(target int, inorder []int) int { for i, v := range inorder { if v == target { return i } } return -1 } \"]},\"280\":{\"h\":\"09. 用两个栈实现队列\",\"t\":[\"用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )\",\"输入： [\\\"CQueue\\\",\\\"appendTail\\\",\\\"deleteHead\\\",\\\"deleteHead\\\",\\\"deleteHead\\\"] [[],[3],[],[],[]] 输出：[null,null,3,-1,-1] \",\"其实需要做的事情, 不过是用俩栈, 搞成队列...\",\"type CQueue struct { stIn []int stOut []int } func Constructor() CQueue { return CQueue{ stIn: make([]int, 0), stOut: make([]int, 0), } } func (this *CQueue) AppendTail(value int) { this.stIn = append(this.stIn, value) } func (this *CQueue) DeleteHead() int { if len(this.stOut) == 0 { if len(this.stIn) == 0 { return -1 } for len(this.stIn) != 0 { this.stOut = append(this.stOut, this.stIn[len(this.stIn)-1]) this.stIn = this.stIn[:len(this.stIn)-1] } } value := this.stOut[len(this.stOut)-1] this.stOut = this.stOut[:len(this.stOut)-1] return value } \"]},\"281\":{\"h\":\"10- I. 斐波那契数列\",\"t\":[\"最简单的动态规划题了\",\"func fib(n int) int { if n < 2 { return n } mod := 1000000007 dp := make([]int, n+1) dp[0] = 0 dp[1] = 1 for i := 2; i <= n; i++ { dp[i] = (dp[i-1]+dp[i-2])%mod } return dp[n] } \"]},\"282\":{\"h\":\"10- II. 青蛙跳台阶问题\",\"t\":[\"其实和上一个题差不多\",\"func numWays(n int) int { if n == 1 || n == 2 { return n } dp := make([]int, n+1) dp[1] = 1 dp[2] = 2 for i := 3; i <= n; i++ { dp[i] = dp[i-1] + dp[i-2] } return dp[n] } \"]},\"283\":{\"h\":\"11. 旋转数组的最小数字\",\"t\":[\"旋转数字最小数字\",\"首先，创建两个指针 leftleft, rightright 分别指向 numbersnumbers 首尾数字，然后计算出两指针之间的中间索引值 middlemiddle，然后我们会遇到以下三种情况：\",\"middlemiddle > rightright ：代表最小值一定在 middlemiddle 右侧，所以 leftleft 移到 middle+1middle+1 的位置。\",\"middlemiddle < rightright ：代表最小值一定在 middlemiddle 左侧或者就是 middlemiddle，所以 rightright 移到 middlemiddle 的位置。\",\"middlemiddle 既不大于 leftleft 指针的值，也不小于 rightright 指针的值，代表着 middlemiddle 可能等于 leftleft 指针的值，或者 rightright 指针的值，我们这时候只能让 rightright 指针递减，来一个一个找最小值了。\",\"func minArray(numbers []int) int { low := 0 high := len(numbers)-1 for low < high { mid := low + (high-low)/2 if numbers[mid] < numbers[high] { high = mid } else if numbers[mid] > numbers[high] { low = mid } else { high-- } } return numbers[low] } \"]},\"284\":{\"h\":\"12. 矩阵中的路径\",\"t\":[\"给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。\",\"单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。\",\"例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。\",\"输入：board = [[\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"E\\\"],[\\\"S\\\",\\\"F\\\",\\\"C\\\",\\\"S\\\"],[\\\"A\\\",\\\"D\\\",\\\"E\\\",\\\"E\\\"]], word = \\\"ABCCED\\\" 输出：true \",\"这应该是一个比较典型的回溯算法的题目\",\"func exist(board [][]byte, word string) bool { m, n := len(board), len(board[0]) used := make([][]bool, m) for i := range used { used[i] = make([]bool, n) } var canFind func(r, c, i int) bool canFind = func(r, c, i int) bool { if i == len(word) { return true } if r >= m || r < 0 || c >= n || c < 0 { return false } // used[r][c]是为了避免回溯到自己或者之前的 if board[r][c] != word[i] || used[r][c] { return false } used[r][c] = true if canFind(r-1, c, i+1) || canFind(r+1, c, i+1) || canFind(r, c+1, i+1) || canFind(r, c-1, i+1) { return true } else { used[r][c] = false return false } } for i := 0; i < m; i++ { for j := 0; j < n; j++ { if board[i][j] == word[0] && canFind(i, j, 0) { return true } } } return false } \",\"定义一个canFind函数,\"]},\"285\":{\"h\":\"14- I. 剪绳子\",\"t\":[\"给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m-1] 。请问 k[0]k[1]...*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\",\"示例 1： 输入: 2 输出: 1 解释: 2 = 1 + 1, 1 × 1 = 1 示例 2: 输入: 10 输出: 36 解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36 \",\"这是一道很明显的动态规划题目\",\"func cuttingRope(n int) int { dp := make([]int, n+1) dp[1] = 1 dp[2] = 1 for i := 3; i <= n; i++ { for j := 1; j < i; j++ { dp[i] = max(dp[i], max(j*(i-j), j*dp[i-j])) } } return dp[n] } func max(a, b int) int { if a < b { return b } return a } \"]},\"286\":{\"h\":\"14- II. 剪绳子 II\",\"t\":[\"给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] 。请问 k[0]k[1]...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\",\"答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\",\"和上一题差不多...\",\"func cuttingRope(n int) int { if n==2 { return 1 }else if n==3{ return 2 } var re int64 re = 1 for n>4 { n=n-3 re = re*3 re =re % 1000000007 } return int(int64(n) * re % 1000000007) } \"]},\"287\":{\"h\":\"15. 二进制中1的个数\",\"t\":[\"编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为 汉明重量).）。\",\"这道题设计位运算, 根据 与运算 定义，设二进制数字 n，则有：\",\"若 n&1=0n&1=0 ，则 nn 二进制 最右一位 为 00 ；\",\"若 n&1=1n&1=1 ，则 nn 二进制 最右一位 为 11 。\",\"根据以上特点，考虑以下 循环判断 ： 判断 n 最右一位是否为 1 ，根据结果计数。 将 n 右移一位（本题要求把数字 n 看作无符号数，因此使用 无符号右移 操作）。 初始化数量统计变量 res= 。 循环逐位判断： 当 n=0 时跳出。\",\"res += n & 1 ： 若 n&1=1，则统计数 res 加一。 n >>= 1 ： 将二进制数字 n 无符号右移一位 。 \",\"返回统计数量 res。\",\"func hammingWeight(n uint32) int { res := 0 for n > 0 { if n & 1 == 1 { res++ } n >>= 1 } return res } \"]},\"288\":{\"h\":\"16. 数值的整数次方\",\"t\":[\"实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。\",\"示例 1： 输入：x = 2.00000, n = 10 输出：1024.00000 示例 2： 输入：x = 2.10000, n = 3 输出：9.26100 示例 3： 输入：x = 2.00000, n = -2 输出：0.25000 解释：2-2 = 1/22 = 1/4 = 0.25 \",\"这道题需要考虑n为负数的情况, 按位运算的问题\",\"func myPow(x float64, n int) float64 { if x == 0 { return 0 } var res float64 = 1 if n < 0 { x, n = 1/x, -n } for n > 0 { if n&1 == 1 { res *= x } x *= x n >>= 1 } return res } \"]},\"289\":{\"h\":\"17. 打印从1到最大的n位数\",\"t\":[\"输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。\",\"输入: n = 1 输出: [1,2,3,4,5,6,7,8,9] \"]},\"290\":{\"h\":\"18. 删除链表的节点\",\"t\":[\"给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。\",\"返回删除后的链表的头节点。\",\"示例 1: 输入: head = [4,5,1,9], val = 5 输出: [4,1,9] 解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9. 示例 2: 输入: head = [4,5,1,9], val = 1 输出: [4,5,9] 解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9. \",\"和链表的常规操作一样需要定义虚拟头节点.\",\"func deleteNode(head *ListNode, val int) *ListNode { dummyHead := new(ListNode) dummyHead.Next = head cur := dummyHead for cur.Next != nil { if cur.Next == val { cur.Next = cur.Next.Next } else { cur = cur.Next } } return dummyHead.Next } \"]},\"291\":{\"h\":\"19. 正则表达式匹配\",\"t\":[\"请实现一个函数用来匹配包含'. '和''的正则表达式。模式中的字符'.'表示任意一个字符，而''表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串\\\"aaa\\\"与模式\\\"a.a\\\"和\\\"abaca\\\"匹配，但与\\\"aa.a\\\"和\\\"ab*a\\\"均不匹配。\",\"输入: s = \\\"aa\\\" p = \\\"a\\\" 输出: false 解释: \\\"a\\\" 无法匹配 \\\"aa\\\" 整个字符串。 输入: s = \\\"aab\\\" p = \\\"c*a*b\\\" 输出: true 解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 \\\"aab\\\"。 \",\"func isMatch(s string, p string) bool { m, n := len(s), len(p) dp := make([][]bool, m+1) for i := range dp { dp[i] = make([]bool, n+1) } dp[0][0] = true for j := 1; j <= n; j++ { if p[j-1] == '*' && dp[0][j-2] { dp[0][j] = true } } for i := 1; i <= m; i++ { for j := 1; j <= n; j++ { if s[i-1] == p[j-1] || p[j-1] == '.' { dp[i][j] = dp[i-1][j-1] } else { // if p[j-1] == '*' && j >= 2 { if p[j-2] == '.' || p[j-2] == s[i-1] { dp[i][j] = dp[i-1][j] || dp[i-1][j-2] || dp[i][j-2] }else { dp[i][j] = dp[i][j-2] } } } } } return dp[m][n] } \",\"TODO\"]},\"292\":{\"h\":\"20. 表示数值的字符串\",\"t\":[\"请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。 数值（按顺序）可以分成以下几个部分： 若干空格 一个 小数 或者 整数 （可选）一个 'e' 或 'E' ，后面跟着一个 整数 若干空格 小数（按顺序）可以分成以下几个部分： （可选）一个符号字符（'+' 或 '-'） 下述格式之一： 至少一位数字，后面跟着一个点 '.' 至少一位数字，后面跟着一个点 '.' ，后面再跟着至少一位数字 一个点 '.' ，后面跟着至少一位数字 整数（按顺序）可以分成以下几个部分： （可选）一个符号字符（'+' 或 '-'） 至少一位数字 部分数值列举如下： [\\\"+100\\\", \\\"5e2\\\", \\\"-123\\\", \\\"3.1416\\\", \\\"-1E-16\\\", \\\"0123\\\"] 部分非数值列举如下： [\\\"12e\\\", \\\"1a3.14\\\", \\\"1.2.3\\\", \\\"+-5\\\", \\\"12e+5.4\\\"] \"]},\"293\":{\"h\":\"21. 调整数组顺序使奇数位于偶数前面\",\"t\":[\"输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数在数组的前半部分，所有偶数在数组的后半部分。\",\"输入：nums = [1,2,3,4] 输出：[1,3,2,4] 注：[3,1,2,4] 也是正确的答案之一。 \",\"二分法, i, j双指针, 分别指向0, len(nums)-1, 同时当nums[i]为偶数, nums[j] 为奇数时, 交换, 并且当nums[i]为奇数 i++, num[j]为偶数, j--\",\"func exchange(nums []int) []int { i,j:=0,len(nums)-1 for i<j { //循环条件 if nums[i]%2==0 && nums[j]%2!=0{ //满足则发生交换 nums[i],nums[j]=nums[j],nums[i] } if nums[i]%2!=0{ //i往后走 i++ } if nums[j]%2==0{ //j往前走 j-- } } return nums } \"]},\"294\":{\"h\":\"22. 链表中倒数第k个节点\",\"t\":[\"输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。\",\"例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。\",\"给定一个链表: 1->2->3->4->5, 和 k = 2. 返回链表 4->5. \",\"链表的常规题, 定义一个虚拟头节点, 通过虚拟节点搞事情\",\"func getKthFromEnd(head *ListNode, k int) *ListNode { dummy := &ListNode{} dummy.Next = head pre, cur := dummy, head for k>0 { cur = cur.Next k-- } for cur != nil { cur = cur.Next pre = pre.Next } return pre.Next } \",\"当然也可以\",\"func getKthFromEnd(head *ListNode, k int) *ListNode { cur := head for k > 0 { cur = cur.Next k-- } for cur != nil { cur = cur.Next head = head.Next } return head } \"]},\"295\":{\"h\":\"24. 反转链表\",\"t\":[\"定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。\",\"输入: 1->2->3->4->5->NULL 输出: 5->4->3->2->1->NULL \",\"好像没什么解释的, pre相当与虚拟头节点, 但充当一个缓冲的作用\",\"func reverseList(head *ListNode) *ListNode { var pre *ListNode cur := head for cur != nil { next := cur.Next cur.Next = pre pre = cur cur = next } return pre } func reverseList(head *ListNode) *ListNode { if head == nil || head.Next == nil { return head } node := reverseList(head>Next) head.Next.Next = head head.Next = nil return node } \"]},\"296\":{\"h\":\"25. 合并两个排序的链表\",\"t\":[\"输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。\",\"示例1： 输入：1->2->4, 1->3->4 输出：1->1->2->3->4->4 \",\"可以声明一个虚拟头节点, 然后迭代法不断迭代\",\"func mergeTwoLists(l1 *ListNode, l2 *ListNode) *ListNode { head := &ListNode{} cur := head for l1 != nil && l2 != nil { if l1.Val >= l2.Val { cur.Next = l2 l2 = l2.Next } else { cur.Next = l1 l1 = l1.Next } cur = cur.Next } if l1 == nil { cur.Next = l2 } if l2 == nil { cur.Next = l1 } return head.Next } \",\"也可以使用递归法\",\"func mergeTwoLists(l1 *ListNode, l2 *ListNode) *ListNode { if l1==nil{ //递归终止条件 return l2 } if l2==nil{ //递归终止条件 return l1 } if l1.Val>l2.Val{ //交换两节点 l1,l2=l2,l1 } l1.Next=mergeTwoLists(l1.Next,l2) //递归 return l1 } \"]},\"297\":{\"h\":\"26. 树的子结构\",\"t\":[\"输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)\",\"B是A的子结构， 即 A中有出现和B相同的结构和节点值。\",\"例如: 给定的树 A:\",\" 3 / \\\\ \",\"4 5 / 1 2 给定的树 B：\",\"4 / 1 返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。\",\"示例 1： 输入：A = [1,2,3], B = [3,1] 输出：false 示例 2： 输入：A = [3,4,5,1,2], B = [4,1] 输出：true \",\" func isSubStructure(A *TreeNode, B *TreeNode) bool { // 特例处理： 当 树 AA 为空 或 树 BB 为空 时，直接返回 falsefalse ； // 返回值： 若树 BB 是树 AA 的子结构，则必满足以下三种情况之一，因此用或 || 连接； // 以 节点 AA 为根节点的子树 包含树 BB ，对应 recur(A, B)； // 树 BB 是 树 AA 左子树 的子结构，对应 isSubStructure(A.left, B)； // 树 BB 是 树 AA 右子树 的子结构，对应 isSubStructure(A.right, B)； if A == nil && B == nil { return false } var recue func(A, B *TreeNode) bool recue = func(A, B *TreeNode) bool { // 1. 递归参数 俩节点 // 2. 递归判断 当B为nil, 说明递归到了子节点的子节点完成匹配 return true // 当 A为nil || A.Val == B.Val 说明匹配失败 返回 return false // 3. 递归逻辑 // 判断 AA 和 BB 的左子节点是否相等，即 recur(A.left, B.left) ； // 判断 AA 和 BB 的右子节点是否相等，即 recur(A.right, B.right) ； if B == nil { return true } if A == nil || A.Val != B.Val { return false } return recue(A.Left, B.Left) && recue(A.Right, B.Right) } return recue(A, B) || isSubStructure(A.Left, B), isSubStructure(A.Right, B) } \"]},\"298\":{\"h\":\"27. 二叉树的镜像\",\"t\":[\"请完成一个函数，输入一个二叉树，该函数输出它的镜像。\",\"例如输入：\",\" 4 \",\"/ 2 7 / \\\\ / 1 3 6 9 镜像输出：\",\" 4 \",\"/ 7 2 / \\\\ / 9 6 3 1\",\"示例 1： 输入：root = [4,2,7,1,3,6,9] 输出：[4,7,2,9,6,3,1] \",\"func mirrorTree(root *TreeNode) *TreeNode { var traverse func(node *TreeNode) // 1. 递归参数 node traverse = func(node *TreeNode) { // 2. 递归终止逻辑 node == nil if node == nil { return } // 3. 单层执行逻辑 node.Left, node.Right = node.Right, node.Left traverse(node.Left) traverse(node.Right) } traverse(root) return root } \"]},\"299\":{\"h\":\"28. 对称的二叉树\",\"t\":[\"请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。\",\"例如，二叉树 [1,2,2,3,4,4,3] 是对称的。\",\"1 \",\"/ 2 2 / \\\\ / 3 4 4 3 但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:\",\"1 \",\"/ 2 2 \\\\ 3 3\",\"示例 1： 输入：root = [1,2,2,3,4,4,3] 输出：true 示例 2： 输入：root = [1,2,2,null,3,null,3] 输出：false \",\"func isSymmetric(root *TreeNode) bool { if root == nil { return true } // 1. 递归参数, 俩节点 var traverse func(left, right *TreeNode) bool traverse = func(left, right *TreeNode) bool { // 2. 递归终止逻辑 left == nil && right == nil true if left == nil && right == nil { return true } // 2. 递归终止逻辑 left == nil || right == nil false if left == nil || right == nil { return false } if left.Val != right.Val { return false } // 3. 单层逻辑 return traverse(left.Left, right.Right) && traverse(left.Right, right.Left) } return traverse(root.Left, root.Right) } \"]},\"300\":{\"h\":\"29. 顺时针打印矩阵\",\"t\":[\"输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。\",\"示例 1： 输入：matrix = [[1,2,3],[4,5,6],[7,8,9]] 输出：[1,2,3,6,9,8,7,4,5] 示例 2： 输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]] 输出：[1,2,3,4,8,12,11,10,9,5,6,7] \",\"func spiralOrder(matrix [][]int) []int { if len(matrix)==0{ return nil } res:=[]int{} top,bottom,left,right :=0,len(matrix)-1,0,len(matrix[0])-1 //初始边界 for bottom>=top && right>=left{ //循环条件，下大于等于上，右大于等于左 for i:=left;i<=right;i++{ //top行的从左到右遍历 res=append(res,matrix[top][i]) } top++ //top行遍历完了，top往下移动 for i:=top;i<=bottom;i++{ //right列的从上到下遍历 res=append(res,matrix[i][right]) } right-- //right列遍历完了，right向左移动 if left>right || top>bottom{ //这里一定要做一个判断，因为如果只剩下一个元素就会出错 break } for i:=right;i>=left;i--{ //bottom行的从右往左遍历 res=append(res,matrix[bottom][i]) } bottom-- //bottom往上移动 for i:=bottom;i>=top;i--{ //left列的从下到上遍历 res=append(res,matrix[i][left]) } left++ //left向右移动 } return res } \"]},\"301\":{\"h\":\"30. 包含min函数的栈\",\"t\":[\"定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。\",\"示例: MinStack minStack = new MinStack(); minStack.push(-2); minStack.push(0); minStack.push(-3); minStack.min(); --> 返回 -3. minStack.pop(); minStack.top(); --> 返回 0. minStack.min(); --> 返回 -2. \",\"定义一个minArr, 放的是最小的数字\",\"type MinStack struct { stack []int minArr []int } /** initialize your data structure here. */ func Constructor() MinStack { return MinStack{} } func (this *MinStack) Push(x int) { if len(this.minArr)==0 || x < this.minArr[len(this.minArr)-1] { this.minArr = append(this.minArr, x) } else { this.minArr = append(this.minArr, this.minArr[len(this.minArr)-1]) } this.stack = append(this.stack, x) } func (this *MinStack) Pop() { this.stack = this.stack[:len(this.stack)-1] this.minArr = this.minArr[:len(this.minArr)-1] } func (this *MinStack) Top() int { return this.stack[len(this.stack)-1] } func (this *MinStack) Min() int { return this.minArr[len(this.minArr)-1] } \"]},\"302\":{\"h\":\"31. 栈的压入、弹出序列\",\"t\":[\"输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列 {1,2,3,4,5} 是某栈的压栈序列，序列 {4,5,3,2,1} 是该压栈序列对应的一个弹出序列，但 {4,3,5,1,2} 就不可能是该压栈序列的弹出序列。\",\"示例 1： 输入：pushed = [1,2,3,4,5], popped = [4,5,3,2,1] 输出：true 解释：我们可以按以下顺序执行： push(1), push(2), push(3), push(4), pop() -> 4, push(5), pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1 示例 2： 输入：pushed = [1,2,3,4,5], popped = [4,3,5,1,2] 输出：false 解释：1 不能在 2 之前弹出。 \",\"可以通过辅助stack做\",\"func validateStackSequences(pushed []int, popped []int) bool { stack := make([]int, 0) i := 0 for _, v := range pushed { stack = append(stack, v) for len(stack) > 0 && stack[len(stack)-1] == popped[i] { stack = stack[:len(stack)-1] i++ } } return !(len(stack) > 0) } \"]},\"303\":{\"h\":\"32 - I. 从上到下打印二叉树\",\"t\":[\"从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。\",\"例如: 给定二叉树: [3,9,20,null,null,15,7], 3 / \\\\ 9 20 / \\\\ 15 7 返回： [3,9,20,15,7] \",\"层序遍历没啥好解释的\",\"func levelOrder(root *TreeNode) []int { res := make([]int, 0) stack := make([]*TreeNode, 0) stack = append(stack, root) for len(stack) > 0 { length := len(stack) for i := 0; i < length; i++ { node := stack[0] stack = stack[1:] res = append(res, node.Val) if node.Left != nil { stack = append(stack, node.Left) } if node.Right != nil { stack = append(stack, node.Right) } } } return res } \"]},\"304\":{\"h\":\"32 - II. 从上到下打印二叉树 II\",\"t\":[\"请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。\",\" 例如: 给定二叉树: [3,9,20,null,null,15,7], 3 / \\\\ 9 20 / \\\\ 15 7 返回其层次遍历结果： [ [3], [20,9], [15,7] ] \",\"func levelOrder(root *TreeNode) [][]int { res:=[][]int{} if root==nil{//防止为空 return res } queue := make([]*TreeNode, 0) queue = append(queue, root) for len(queue) > 0 { length := len(queue) tmpArr := make([]int, 0) for i := 0; i < length; i++ { node := queue[0] queue = queue[1:] if node.Left != nil { queue = append(queue, node.Left) } if node.Right != nil { queue = append(queue, node.Right) } tmpArr = append(tmpArr, node.Val) } res = append(res, tmpArr) tmpArr = []int{} } return res } \"]},\"305\":{\"h\":\"32 - III. 从上到下打印二叉树 III\",\"t\":[\"请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。\",\"例如: 给定二叉树: [3,9,20,null,null,15,7], 3 / \\\\ 9 20 / \\\\ 15 7 返回其层次遍历结果： [ [3], [20,9], [15,7] ] \",\"func levelOrder(root *TreeNode) [][]int { res:=[][]int{} if root==nil{//防止为空 return res } queue := make([]*TreeNode, 0) queue = append(queue, root) for len(queue) > 0 { length := len(queue) tmpArr := make([]int, 0) for i := 0; i < length; i++ { node := queue[0] queue = queue[1:] if node.Left != nil { queue = append(queue, node.Left) } if node.Right != nil { queue = append(queue, node.Right) } tmpArr = append(tmpArr, node.Val) } res = append(res, tmpArr) tmpArr = []int{} } for i := 0; i < len(res); i++ { if i % 2 == 1 { reverse(res[i]) } } return res } func reverse(nums []int) { l, r := 0, len(nums)-1 for l < r { nums[l], nums[r] = nums[r], nums[l] l++ r-- } } \"]},\"306\":{\"h\":\"33. 二叉搜索树的后序遍历序列\",\"t\":[\"输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回 true，否则返回 false。假设输入的数组的任意两个数字都互不相同。\",\"参考以下这颗二叉搜索树： 5 / \\\\ 2 6 / \\\\ 1 3 示例 1： 输入: [1,6,3,2,5] 输出: false 示例 2： 输入: [1,3,2,6,5] 输出: true \"]},\"307\":{\"h\":\"34. 二叉树中和为某一值的路径\",\"t\":[\"给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。\",\"叶子节点 是指没有子节点的节点。\",\"输入：root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22 输出：[[5,4,11,2],[5,8,4,5]] \",\"func pathSum(root *TreeNode, targetSum int) [][]int { res := [][]int{} path := []int{} if root == nil { return res } path = append(path, root.Val) traverse(root, targetSum-root.Val, path, &res) return res } func traverse(node *TreeNode, count int, path []int, res *[][]int) { if node.Left == nil && node.Right == nil && count == 0 { tmp := make([]int, len(path)) copy(tmp, path) *res = append(*res, tmp) return } if node.Left == nil && node.Right == nil { return } if node.Left != nil { path = append(path, node.Left.Val) count -= node.Left.Val traverse(node.Left, count, path, res) count += node.Left.Val path = path[:len(path)-1] } if node.Right != nil { path = append(path, node.Right.Val) count -= node.Right.Val traverse(node.Right, count, path, res) count += node.Right.Val path = path[:len(path)-1] } return } \"]},\"308\":{\"h\":\"35. 复杂链表的复制\",\"t\":[\"请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。\",\"func copyRandomList(head *Node) *Node { if head == nil { return nil } // map中存的是（原节点->新节点）的映射关系，此时新节点只有val，指针并没有安排上 m := make(map[*Node]*Node) for cur := head; cur != nil; cur = cur.Next { m[cur] = &Node{Val: cur.Val} } // 将新节点串起来，组成新链表 for cur := head; cur != nil; cur = cur.Next { m[cur].Next = m[cur.Next] m[cur].Random = m[cur.Random] } return m[head] } \"]},\"309\":{\"h\":\"36. 二叉搜索树与双向链表\",\"t\":[\"TODO\"]},\"310\":{\"h\":\"37. 序列化二叉树\",\"t\":[\"TODO\"]},\"311\":{\"h\":\"38. 字符串的排列\",\"t\":[\"输入一个字符串，打印出该字符串中字符的所有排列。 你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。\",\"示例: 输入：s = \\\"abc\\\" 输出：[\\\"abc\\\",\\\"acb\\\",\\\"bac\\\",\\\"bca\\\",\\\"cab\\\",\\\"cba\\\"] \",\"这个版本不正确,后面有时间再改\",\"func permutation(s string) []string { b := []byte(s) used := make([]bool, len(s)) res := []string{} backtracking(b, 0, []byte{}, &res, used) return res } func backtracking(b []byte, n int, path []byte, res *[]string, used []bool) { if n == len(b) { temp := make([]byte, n) copy(temp, path) *res = append(*res, string(temp)) return } for i := 0; i < len(b); i++ { if used[i] { continue } used[i] = true path = append(path, b[i]) backtracking(b, n+1, path, res, used) path = path[:len(path)-1] used[i] = false } } \"]},\"312\":{\"h\":\"39. 数组中出现次数超过一半的数字\",\"t\":[\"数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。 你可以假设数组是非空的，并且给定的数组总是存在多数元素。 示例 1: 输入: [1, 2, 3, 2, 2, 2, 5, 4, 2] 输出: 2 \",\"这是一个用map就可以解决的问题\",\"func majorityElement(nums []int) int { m := make(map[int]int) for i := 0; i < len(nums); i++ { m[nums[i]]++ } for k, v := range m { if v > len(nums)/2 { return k } } return 0 } \"]},\"313\":{\"h\":\"40. 最小的k个数\",\"t\":[\"输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。 示例 1： 输入：arr = [3,2,1], k = 2 输出：[1,2] 或者 [2,1] 示例 2： 输入：arr = [0,1,2,1], k = 1 输出：[0] \",\"堆排序\",\"func getLeastNumbers(arr []int, k int) []int { heap_sort(arr, len(arr)) return arr[:k] } // n 数组长度 i待维持下标 func heapify(arr []int, len, i int) { largest := i lson := i*2 + 1; rson := i*2 + 2; if lson < len && arr[largest] < arr[lson] { largest = lson } if rson < len && arr[largest] < arr[rson] { largest = rson } if largest != i { arr[largest], arr[i] = arr[i], arr[largest] heapify(arr, len, largest) } } func heap_sort(arr []int, n int) { // 建堆 for i := n/2-1; i >= 0; i-- { heapify(arr, n, i) } // 排序 for i := n-1; i > 0; i-- { arr[i], arr[0] = arr[0], arr[i] heapify(arr, i, 0) } } \"]},\"314\":{\"h\":\"41. 数据流中的中位数\",\"t\":[\"TODO\"]},\"315\":{\"h\":\"42. 连续子数组的最大和\",\"t\":[\"输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。 要求时间复杂度为O(n)。 示例1: 输入: nums = [-2,1,-3,4,-1,2,1,-5,4] 输出: 6 解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。 \",\"动态规划\",\"func maxSubArray(nums []int) int { max := nums[0] for i :=1;i<len(nums);i++ { if nums[i]+nums[i-1] > nums[i] { nums[i] +=nums[i-1] } if nums[i] > max { max = nums[i] } } return max } \"]},\"316\":{\"h\":\"43. 1～n 整数中 1 出现的次数\",\"t\":[\"输入一个整数 n ，求1～n这n个整数的十进制表示中1出现的次数。 例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。 示例 1： 输入：n = 12 输出：5 示例 2： 输入：n = 13 输出：6 \",\"TODO\"]},\"317\":{\"h\":\"44. 数字序列中某一位的数字\",\"t\":[\"数字以0123456789101112131415…的格式序列化到一个字符序列中。在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。 请写一个函数，求任意第n位对应的数字。 示例 1： 输入：n = 3 输出：3 示例 2： 输入：n = 11 输出：0 \",\"func findNthDigit(n int) int { // digit 是有几位树 // digitNum 是 几位树的总个数 比如 10 180 2700 // count 是减去的树 digit,digitNum,count := 1,1,9 for n>count{ n -= count digit++ digitNum *= 10 count = 9*digit*digitNum } // 求出num是多少 num := digitNum + (n-1)/digit // 求出 n-1是多少 index := (n-1)%digit numStr := strconv.Itoa(num) return int(numStr[index]-'0') } \"]},\"318\":{\"h\":\"Offer 46. 把数字翻译成字符串\",\"t\":[\"给定一个数字，我们按照如下规则把它翻译为字符串：0 翻译成 “a” ，1 翻译成 “b”，……，11 翻译成 “l”，……，25 翻译成 “z”。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。 示例 1: 输入: 12258 输出: 5 解释: 12258有5种不同的翻译，分别是\\\"bccfi\\\", \\\"bwfi\\\", \\\"bczi\\\", \\\"mcfi\\\"和\\\"mzi\\\" \",\"这道题和青蛙上台阶一样\",\"func translateNum(num int) int { if num < 10 { return 1 } str := strconv.Itoa(num) N := len(str) dp := make([]int, N+1) dp[0] = 1 dp[1] = 1 for i := 2; i < N+1; i++ { temp := string(str[i-2])+string(str[i-1]) if temp >= \\\"10\\\" && temp <= \\\"25\\\" { dp[i] = dp[i-1] + dp[i-2] } else { dp[i] = dp[i-1] } } fmt.Println(dp) return dp[N] } \"]},\"319\":{\"h\":\"47. 礼物的最大价值\",\"t\":[\"在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？\",\"示例 1: 输入: [ [1,3,1], [1,5,1], [4,2,1] ] 输出: 12 解释: 路径 1→3→5→2→1 可以拿到最多价值的礼物 \",\"这个题挺简单的, 思路只能向右向下\",\"func maxValue(grid [][]int) int { if len(grid) == 0 || len(grid[0]) == 0 { return 0 } m,n:= len(grid),len(grid[0]) for i:=1;i<m;i++ { grid[i][0] += grid[i-1][0] } for j:=1;j<n;j++ { grid[0][j] += grid[0][j-1] } for i:=1;i<m;i++ { for j:=1;j<n;j++ { grid[i][j] += max(grid[i-1][j],grid[i][j-1]) } } return grid[m-1][n-1] } func max(a,b int) int { if a > b { return a } return b } \"]},\"320\":{\"h\":\"48. 最长不含重复字符的子字符串\",\"t\":[\"请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。\",\"示例 1: 输入: \\\"abcabcbb\\\" 输出: 3 解释: 因为无重复字符的最长子串是 \\\"abc\\\"，所以其长度为 3。 示例 2: 输入: \\\"bbbbb\\\" 输出: 1 解释: 因为无重复字符的最长子串是 \\\"b\\\"，所以其长度为 1。 \",\"滑动窗口做\",\"func lengthOfLongestSubstring(s string) int { m := make(map[byte]int) n := len(s) rk, ans := -1, 0 for i := 0; i < n; i++ { if i != 0 { delete(m, s[i-1]) } for rk+1 < n && m[s[rk+1]] == 0 { m[s[rk+1]]++ rk++ } ans = max(ans, rk-i+1) } return ans } func max(x, y int) int { if x < y { return y } return x } \"]},\"321\":{\"h\":\"49. 丑数\",\"t\":[\"思路\",\"我们把只包含质因子 2、3 和 5 的数称作丑数（Ugly Number）。求按从小到大的顺序的第 n 个丑数。 示例: 输入: n = 10 输出: 12 解释: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 是前 10 个丑数。 \",\"func nthUglyNumber(n int) int { a, b, c := 0, 0, 0 dp := make([]int, n) dp[0] = 1 for i := 1; i < n; i++ { n2, n3, n5 := dp[a]*2, dp[b]*3, dp[c]*5 dp[i] = min(n2, min(n3, n5)) if dp[i] == n2 { a++ } if dp[i] == n3 { b++ } if dp[i] == n5 { c++ } } return dp[n-1] } func min(a, b int) int { if a > b { return b } return a } \"]},\"322\":{\"h\":\"50. 第一个只出现一次的字符\",\"t\":[\"在字符串 s 中找出第一个只出现一次的字符。如果没有，返回一个单空格。 s 只包含小写字母。 示例 1: 输入：s = \\\"abaccdeff\\\" 输出：'b' 示例 2: 输入：s = \\\"\\\" 输出：' ' \",\"func firstUniqChar(s string) byte { var res [26]int for i:=0;i<len(s);i++{ res[s[i]-'a']++ } for i:=0;i<len(s);i++{ if res[s[i]-'a']==1{ //这里千万不能写成res[i]==1，因为res前面的元素顺序对应为abcd，他们的值可能为1但是不一定是在s中第一个出现一次的字符 return s[i] } } return ' ' } \"]},\"323\":{\"h\":\"51. 数组中的逆序对\",\"t\":[\"在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组，求出这个数组中的逆序对的总数。 示例 1: 输入: [7,5,6,4] 输出: 5 \",\"TODO\",\"func reversePairs(nums []int) int { return mergeSort(nums, 0, len(nums)-1) } func mergeSort(nums []int, start, end int) int { if start >= end { return 0 } mid := start + (end - start)/2 cnt := mergeSort(nums, start, mid) + mergeSort(nums, mid + 1, end) tmp := []int{} i, j := start, mid + 1 for i <= mid && j <= end { if nums[i] <= nums[j] { tmp = append(tmp, nums[i]) cnt += j - (mid + 1) i++ } else { tmp = append(tmp, nums[j]) j++ } } for ; i <= mid; i++ { tmp = append(tmp, nums[i]) cnt += end - (mid + 1) + 1 } for ; j <= end; j++ { tmp = append(tmp, nums[j]) } for i := start; i <= end; i++ { nums[i] = tmp[i - start] } return cnt } \"]},\"324\":{\"h\":\"52. 两个链表的第一个公共节点\",\"t\":[\"func getIntersectionNode(headA, headB *ListNode) *ListNode { curA := headA curB := headB lenA, lenB := 0, 0 // 求A，B的长度 for curA != nil { curA = curA.Next lenA++ } for curB != nil { curB = curB.Next lenB++ } var step int var fast, slow *ListNode // 请求长度差，并且让更长的链表先走相差的长度 if lenA > lenB { step = lenA - lenB fast, slow = headA, headB } else { step = lenB - lenA fast, slow = headB, headA } for i:=0; i < step; i++ { fast = fast.Next } // 遍历两个链表遇到相同则跳出遍历 for fast != slow { fast = fast.Next slow = slow.Next } return fast } \"]},\"325\":{\"h\":\"53 - I. 在排序数组中查找数字 I\",\"t\":[\"统计一个数字在排序数组中出现的次数。 示例 1: 输入: nums = [5,7,7,8,8,10], target = 8 输出: 2 示例 2: 输入: nums = [5,7,7,8,8,10], target = 6 输出: 0 \",\"func search(nums []int, target int) int { m := make(map[int]int) for i := 0; i < len(nums); i++ { m[nums[i]]++ } return m[target] } \",\"或者用二分法做\",\"func search(nums []int, target int) int { if len(nums) == 0 { return 0 } if len(nums) ==1 && target == nums[0] { return 1 } lo,hi := 0, len(nums)-1 index :=-1 for lo <= hi { i := (lo+hi) >> 1 if nums[i] == target { index = i break } else if nums[i] > target { hi = i-1 } else { lo = i+1 } } if index == -1 { return 0 } // 分别向两边扩展 cnt :=0 for i:=index;i>=0 && nums[i]== target;i-- { cnt++ } for i:= index;i<len(nums) && nums[i]== target;i++ { cnt++ } return cnt-1 } \"]},\"326\":{\"h\":\"53 - II. 0～n-1中缺失的数字\",\"t\":[\"一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。 示例 1: 输入: [0,1,3] 输出: 2 示例 2: 输入: [0,1,2,3,4,5,6,7,9] 输出: 8 \",\"初始化： 左边界 left = 0 ，右边界 right = len(nums)−1 ；代表闭区间 [left, right] 。 循环二分： 当 left ≤ right 时循环 （即当闭区间 [left, j] 为空时跳出） ；\",\"计算中点 mid = (left + right)//2 ，其中 \\\"//\\\" 为向下取整除法； 若 nums[mid] = mid ，说明mid前面的元素肯定都是完整的不少元素所以只需要继续二分右边的数组即可，则 “右子数组的首位元素” 一定在闭区间 [mid+1, right] 中，因此执行 left = mid+1； 若 nums[mid] != mid ，说明mid前面的元素就有少的所以只要继续二分左边的数组即可，则 “左子数组的末位元素” 一定在闭区间 [left, mid−1] 中，因此执行 right = mid−1； \",\"返回值： 跳出时，变量 i 和 j 分别指向 “右子数组的首元素” 和 “左子数组的末元素” 。因此返回 i 即可。\",\"func missingNumber(nums []int) int { l, r := 0, len(nums)-1 for l <= r { mid := l + (r-l)/2 if nums[mid] == mid { l = mid+1 } else { r = mid-1 } fmt.Println(l) } return l } \"]},\"327\":{\"h\":\"54. 二叉搜索树的第k大节点\",\"t\":[\"给定一棵二叉搜索树，请找出其中第 k 大的节点的值。 示例 1: 输入: root = [3,1,4,null,2], k = 1 3 / \\\\ 1 4 \\\\ 2 输出: 4 示例 2: 输入: root = [5,3,6,2,4,null,null,1], k = 3 5 / \\\\ 3 6 / \\\\ 2 4 / 1 输出: 4 \",\"逆中序\",\"func kthLargest(root *TreeNode, k int) int { var dfs func(*TreeNode) var res = -1 dfs = func(node *TreeNode){ if node == nil{ return } dfs(node.Right) k-- if k == 0 { res = node.Val return } dfs(node.Left) } dfs(root) return res } \"]},\"328\":{\"h\":\"55 - I. 二叉树的深度\",\"t\":[\"输入一棵二叉树的根节点，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长度为树的深度。 例如： 给定二叉树 [3,9,20,null,null,15,7]， 3 / \\\\ 9 20 / \\\\ 15 7 返回它的最大深度 3 。 \",\"func maxDepth(root *TreeNode) int { if root == nil { return 0 } leftH := maxDepth(root.Left) rightH := maxDepth(root.Right) return 1 + max(leftH, rightH) } func max(a, b int) int { if a < b { return b } return a } \"]},\"329\":{\"h\":\"55 - II. 平衡二叉树\",\"t\":[\"输入一棵二叉树的根节点，判断该树是不是平衡二叉树。如果某二叉树中任意节点的左右子树的深度相差不超过1，那么它就是一棵平衡二叉树。 示例 1: 给定二叉树 [3,9,20,null,null,15,7] 3 / \\\\ 9 20 / \\\\ 15 7 返回 true 。 示例 2: 给定二叉树 [1,2,2,3,3,null,null,4,4] 1 / \\\\ 2 2 / \\\\ 3 3 / \\\\ 4 4 \",\"func isBalanced(root *TreeNode) bool { if root == nil { return true } // 还需要查看是否平衡 if !isBalanced(root.Left) || !isBalanced(root.Right){ return false } lH := getHigh(root.Left) rH := getHigh(root.Right) if abs(rH - lH) <= 1 { return true } return false } func max(a, b int) int { if a < b { return b } return a } func abs(a int) int { if a < 0 { return -a } return a } func getHigh(root *TreeNode) int { if root == nil { return 0 } return max(getHigh(root.Left), getHigh(root.Right)) + 1 } \"]},\"330\":{\"h\":\"56 - I. 数组中数字出现的次数\",\"t\":[\"一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。 示例 1： 输入：nums = [4,1,4,6] 输出：[1,6] 或 [6,1] 示例 2： 输入：nums = [1,2,10,4,1,4,3,3] 输出：[2,10] 或 [10,2] \",\"TODO\",\"func singleNumbers(nums []int) []int { var xor int for _, num := range nums{ xor ^= num } var flag = 1 for xor & 1 == 0 { flag <<= 1 xor >>=1 } var x, y int for _, num := range nums{ if num & flag != 0{ x ^= num }else{ y ^= num } } return []int{x, y} } \"]},\"331\":{\"h\":\"56 - II. 数组中数字出现的次数 II\",\"t\":[\"在一个数组 nums 中除一个数字只出现一次之外，其他数字都出现了三次。请找出那个只出现一次的数字。 示例 1： 输入：nums = [3,4,3,3] 输出：4 示例 2： 输入：nums = [9,1,7,9,7,9,7] 输出：1 \",\"func singleNumber(nums []int) int { var bits = make([]int, 32) for _, num := range nums{ for i := 0; i < 32; i++{ bits[i] += num & 1 num >>= 1 } } var res = 0 for j := 31; j >= 0; j--{ res <<= 1 res |= bits[j] % 3 } return res } \"]},\"332\":{\"h\":\"57. 和为s的两个数字\",\"t\":[\"输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得它们的和正好是s。如果有多对数字的和等于s，则输出任意一对即可。\",\"示例 1： 输入：nums = [2,7,11,15], target = 9 输出：[2,7] 或者 [7,2] 示例 2： 输入：nums = [10,26,30,31,47,60], target = 40 输出：[10,30] 或者 [30,10] \",\"双指针\",\"func twoSum(nums []int, target int) []int { lo, hi := 0, len(nums)-1 for lo < hi { s := nums[lo] + nums[hi] if s > target { hi-- } else if s < target { lo++ } else { return []int{nums[lo],nums[hi]} } } return nil } \"]},\"333\":{\"h\":\"58 - I. 翻转单词顺序\",\"t\":[\"输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串\\\"I am a student. \\\"，则输出\\\"student. a am I\\\"。 示例 1： 输入: \\\"the sky is blue\\\" 输出: \\\"blue is sky the\\\" 示例 2： 输入: \\\" hello world! \\\" 输出: \\\"world! hello\\\" 解释: 输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。 示例 3： 输入: \\\"a good example\\\" 输出: \\\"example good a\\\" 解释: 如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个。 \"]},\"334\":{\"h\":\"58 - I. 翻转单词顺序\",\"t\":[\"输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串\\\"I am a student. \\\"，则输出\\\"student. a am I\\\"。 示例 1： 输入: \\\"the sky is blue\\\" 输出: \\\"blue is sky the\\\" 示例 2： 输入: \\\" hello world! \\\" 输出: \\\"world! hello\\\" 解释: 输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。 \",\"func reverseWords(s string) string { var res string i, j := len(s)-1, len(s)-1 for i >= 0 { for i >= 0 && s[i] == ' ' { i-- } j = i for i >= 0 && s[i] != ' ' { i-- } res += s[i+1:j+1] + \\\" \\\" } return strings.TrimRight(res, \\\" \\\") } \"]},\"335\":{\"h\":\"58 - II. 左旋转字符串\",\"t\":[\"字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串\\\"abcdefg\\\"和数字2，该函数将返回左旋转两位得到的结果\\\"cdefgab\\\"。 示例 1： 输入: s = \\\"abcdefg\\\", k = 2 输出: \\\"cdefgab\\\" 示例 2： 输入: s = \\\"lrloseumgh\\\", k = 6 输出: \\\"umghlrlose\\\" \",\"选转前面的, 再转后面的, 最后全转\",\"func reverseLeftWords(s string, n int) string { b := []byte(s) reverse(b, 0, n-1) reverse(b, n, len(b)-1) reverse(b, 0, len(b)-1) return string(b) } func reverse(b []byte, l, r int) { for l < r { b[l], b[r] = b[r], b[l] l++ r-- } } \"]},\"336\":{\"h\":\"59 - I. 滑动窗口的最大值\",\"t\":[\"给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。 示例: 输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3 输出: [3,3,5,5,6,7] 解释: 滑动窗口的位置 最大值 --------------- ----- [1 3 -1] -3 5 3 6 7 3 1 [3 -1 -3] 5 3 6 7 3 1 3 [-1 -3 5] 3 6 7 5 1 3 -1 [-3 5 3] 6 7 5 1 3 -1 -3 [5 3 6] 7 6 1 3 -1 -3 5 [3 6 7] 7 \",\"关键是要自己封装一个优先级队列\",\"// 封装单调队列的方式解题 type MyQueue struct { queue []int } func NewMyQueue() *MyQueue { return &MyQueue{ queue: make([]int, 0), } } func (m *MyQueue) Front() int { return m.queue[0] } func (m *MyQueue) Back() int { return m.queue[len(m.queue)-1] } func (m *MyQueue) Empty() bool { return len(m.queue) == 0 } func (m *MyQueue) Push(val int) { for !m.Empty() && val > m.Back() { m.queue = m.queue[:len(m.queue)-1] } m.queue = append(m.queue, val) } func (m *MyQueue) Pop(val int) { if !m.Empty() && val == m.Front() { m.queue = m.queue[1:] } } func maxSlidingWindow(nums []int, k int) []int { queue := NewMyQueue() length := len(nums) res := make([]int, 0) // 先将前k个元素放入队列 for i := 0; i < k; i++ { queue.Push(nums[i]) } // 记录前k个元素的最大值 res = append(res, queue.Front()) for i := k; i < length; i++ { // 滑动窗口移除最前面的元素 queue.Pop(nums[i-k]) // 滑动窗口添加最后面的元素 queue.Push(nums[i]) // 记录最大值 res = append(res, queue.Front()) } return res } \"]},\"337\":{\"h\":\"60. n个骰子的点数\",\"t\":[\"把n个骰子扔在地上，所有骰子朝上一面的点数之和为s。输入n，打印出s的所有可能的值出现的概率。 你需要用一个浮点数数组返回答案，其中第 i 个元素代表这 n 个骰子所能掷出的点数集合中第 i 小的那个的概率。 示例 1: 输入: 1 输出: [0.16667,0.16667,0.16667,0.16667,0.16667,0.16667] 示例 2: 输入: 2 输出: [0.02778,0.05556,0.08333,0.11111,0.13889,0.16667,0.13889,0.11111,0.08333,0.05556,0.02778] \"]},\"338\":{\"c\":[\"tutorial\"]},\"339\":{\"c\":[\"leetcode\",\"offer\"]},\"340\":{\"h\":\"MySQL 学习笔记\",\"t\":[\"执行一条 SQL 查询语句，期间发生了什么？\",\"索引\",\"内存\",\"日志\",\"事务\",\"锁\",\"说清楚Buffer Pool是啥\"]},\"341\":{\"h\":\"执行一条SQL查询语句，期间发生了什么\",\"t\":[\"当MySQL执行一条查询语句时,中间发生了什么?\",\"带着这个问题，我们可以很好的了解 MySQL 内部的架构，所以这次小林就带大家拆解一下 MySQL 内部的结构，看看内部里的每一个“零件”具体是负责做什么的。\",\"执行图\",\"可以看到MySQL的架构总共分为两层, Server层和引擎层.\",\"Server负责建立连接,查询缓存,解析,预处理,优化和执行,这其中也包括所有的内置函数（如日期、时间、数学和加密函数等）和所有跨存储引擎的功能（如存储过程、触发器、视图等。）都在 Server 层实现。\",\"引擎层是负责数据的存储和提取. 支持InnoDB, MyISAM, Memory等多个存储引擎,我们常说的索引数据结构，就是由存储引擎层实现的，不同的存储引擎支持的索引类型也不相同，比如 InnoDB 支持索引类型是 B+树 ，且是默认使用，也就是说在数据表中创建的主键索引和二级索引默认使用的是 B+ 树索引。\"]},\"342\":{\"h\":\"连接器\",\"t\":[\"连接器负责的工作有:\",\"与客户端进行 TCP 三次握手建立连接；\",\"校验客户端的用户名和密码，如果用户名或密码不对，则会报错；\",\"如果用户名和密码都对了，会读取该用户的权限，然后后面的权限逻辑判断都基于此时读取到的权限；\"]},\"343\":{\"h\":\"查询缓存\",\"t\":[\"查询缓存在MySQL8.0版本之后就已经去除了(可能是确实效率低)\",\"连接器得工作完成后，客户端就可以向 MySQL 服务发送 SQL 语句了，MySQL 服务收到 SQL 语句后，就会解析出 SQL 语句的第一个字段，看看是什么类型的语句。\",\"如果 SQL 是查询语句（select 语句），MySQL 就会先去查询缓存（ Query Cache ）里查找缓存数据，看看之前有没有执行过这一条命令，这个查询缓存是以 key-value 形式保存在内存中的，key 为 SQL 查询语句，value 为 SQL 语句查询的结果。\",\"如果查询的语句命中查询缓存，那么就会直接返回 value 给客户端。如果查询的语句没有命中查询缓存中，那么就要往下继续执行，等执行完后，查询的结果就会被存入查询缓存中。\"]},\"344\":{\"h\":\"解析 SQL\"},\"345\":{\"h\":\"解析器\",\"t\":[\"解析器会做如下两件事情。\",\"第一件事情，词法分析。MySQL 会根据你输入的字符串识别出关键字出来，构建出 SQL 语法树，这样方便后面模块获取 SQL 类型、表名、字段名、 where 条件等等。\",\"第二件事情，语法分析。根据词法分析的结果，语法解析器会根据语法规则，判断你输入的这个 SQL 语句是否满足 MySQL 语法。\",\"如果我们输入的 SQL 语句语法不对，就会在解析器这个阶段报错。比如，我下面这条查询语句，把 from 写成了 form，这时 MySQL 解析器就会给报错。\"]},\"346\":{\"h\":\"执行 SQL\"},\"347\":{\"h\":\"预处理器\",\"t\":[\"我们先来说说预处理阶段做了什么事情。\",\"检查 SQL 查询语句中的表或者字段是否存在；\",\"将 select * 中的 * 符号，扩展为表上的所有列；\"]},\"348\":{\"h\":\"优化器\",\"t\":[\"经过预处理阶段后，还需要为 SQL 查询语句先制定一个执行计划，这个工作交由「优化器」来完成的。\",\"优化器主要负责将 SQL 查询语句的执行方案确定下来，比如在表里面有多个索引的时候，优化器会基于查询成本的考虑，来决定选择使用哪个索引。\"]},\"349\":{\"h\":\"执行器\",\"t\":[\"主键索引查询\",\"全表扫描\",\"索引下推\",\"总结\",\"执行一条 SQL 查询语句，期间发生了什么？\",\"连接器：建立连接，管理连接、校验用户身份； 查询缓存：查询语句如果命中查询缓存则直接返回，否则继续往下执行。MySQL 8.0 已删除该模块； 解析 SQL，通过解析器对 SQL 查询语句进行词法分析、语法分析，然后构建语法树，方便后续模块读取表名、字段、语句类型； 执行 SQL：执行 SQL 共有三个阶段： 预处理阶段：检查表或字段是否存在；将 select * 中的 * 符号扩展为表上的所有列。 优化阶段：基于查询成本的考虑， 选择查询成本最小的执行计划； 执行阶段：根据执行计划执行 SQL 查询语句，从存储引擎读取记录，返回给客户端； \"]},\"350\":{\"h\":\"索引常见问题\",\"t\":[\"当你想查阅书中某个知识的内容，你会选择一页一页的找呢？还是在书的目录去找呢？\",\"傻瓜都知道时间是宝贵的，当然是选择在书的目录去找，找到后再翻到对应的页。书中的目录，就是充当索引的角色，方便我们快速查找书中的内容，所以索引是以空间换时间的设计思想。\",\"那换到数据库中，索引的定义就是帮助存储引擎快速获取数据的一种数据结构，形象的说就是索引是数据的目录。\",\"所谓的存储引擎，说白了就是如何存储数据、如何为存储的数据建立索引和如何更新、查询数据等技术的实现方法。MySQL 存储引擎有 MyISAM 、InnoDB、Memory，其中 InnoDB 是在 MySQL 5.5 之后成为默认的存储引擎。\",\"索引最大的好处就是可以提高查询速度, 但也是有问题的, 比如\",\"需要占用物理空间，数量越大，占用空间越大；\",\"创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增大；\",\"会降低表的增删改的效率，因为每次增删改索引，B+ 树为了维护索引有序性，都需要进行动态维护。\"]},\"351\":{\"h\":\"什么时候需要创建索引\",\"t\":[\"字段有唯一性限制的，比如商品编码；\",\"经常用于 WHERE 查询条件的字段，这样能够提高整个表的查询速度，如果查询条件不是一个字段，可以建立联合索引。\",\"经常用于 GROUP BY 和 ORDER BY 的字段，这样在查询的时候就不需要再去做一次排序了，因为我们都已经知道了建立索引之后在 B+Tree 中的记录都是排序好的。\"]},\"352\":{\"h\":\"什么时候不需要创建索引\",\"t\":[\"WHERE 条件，GROUP BY，ORDER BY 里用不到的字段，索引的价值是快速定位，如果起不到定位的字段通常是不需要创建索引的，因为索引是会占用物理空间的。 字段中存在大量重复数据，不需要创建索引，比如性别字段，只有男女，如果数据库表中，男女的记录分布均匀，那么无论搜索哪个值都可能得到一半的数据。在这些情况下，还不如不要索引，因为 MySQL 还有一个查询优化器，查询优化器发现某个值出现在表的数据行中的百分比很高的时候，它一般会忽略索引，进行全表扫描。\",\"表数据太少的时候，不需要创建索引；\",\"经常更新的字段不用创建索引，比如不要对电商项目的用户余额建立索引，因为索引字段频繁修改，由于要维护 B+Tree的有序性，那么就需要频繁的重建索引，这个过程是会影响数据库性能的。\"]},\"353\":{\"h\":\"有什么优化索引的方法？\",\"t\":[\"这里说一下几种常见优化索引的方法：\",\"前缀索引优化；\",\"覆盖索引优化；\",\"主键索引最好是自增的；\",\"防止索引失效；\",\"前缀索引优化； 前缀索引顾名思义就是使用某个字段中字符串的前几个字符建立索引，那我们为什么需要使用前缀来建立索引呢？\",\"使用前缀索引是为了减小索引字段大小，可以增加一个索引页中存储的索引值，有效提高索引的查询速度。在一些大字符串的字段作为索引时，使用前缀索引可以帮助我们减小索引项的大小。\",\"不过，前缀索引有一定的局限性，例如：\",\"order by 就无法使用前缀索引； 无法把前缀索引用作覆盖索引； \",\"覆盖索引优化；\",\"覆盖索引是指 SQL 中 query 的所有字段，在索引 B+Tree 的叶子节点上都能找得到的那些索引，从二级索引中查询得到记录，而不需要通过聚簇索引查询获得，可以避免回表的操作。\",\"假设我们只需要查询商品的名称、价格，有什么方式可以避免回表呢？\",\"我们可以建立一个联合索引，即「商品ID、名称、价格」作为一个联合索引。如果索引中存在这些数据，查询将不会再次检索主键索引，从而避免回表。\",\"所以，使用覆盖索引的好处就是，不需要查询出包含整行记录的所有信息，也就减少了大量的 I/O 操作。\",\"主键索引最好是自增的\",\"如果我们使用自增主键，那么每次插入的新数据就会按顺序添加到当前索引节点的位置，不需要移动已有的数据，当页面写满，就会自动开辟一个新页面。因为每次插入一条新记录，都是追加操作，不需要重新移动数据，因此这种插入数据的方法效率非常高。\",\"如果我们使用非自增主键，由于每次插入主键的索引值都是随机的，因此每次插入新的数据时，就可能会插入到现有数据页中间的某个位置，这将不得不移动其它数据来满足新数据的插入，甚至需要从一个页面复制数据到另外一个页面，我们通常将这种情况称为页分裂。页分裂还有可能会造成大量的内存碎片，导致索引结构不紧凑，从而影响查询效率。\",\"防止索引失效\",\"这里简单说一下，发生索引失效的情况：\",\"当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；\",\"当我们在查询条件中对索引列做了计算、函数、类型转换操作，这些情况下都会造成索引失效；\",\"联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。\",\"在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。\",\"innodb-是如何存储数据的\",\"为什么 MySQL 采用 B+ 树作为索引？\",\"索引失效有哪些？\"]},\"354\":{\"h\":\"内存 揭开 Buffer Pool 的面纱\",\"t\":[\"Buffer Pool\"]},\"355\":{\"h\":\"日志\",\"t\":[\"undo log（回滚日志）：是 Innodb 存储引擎层生成的日志，实现了事务中的原子性，主要用于事务回滚和 MVCC。\",\"redo log（重做日志）：是 Innodb 存储引擎层生成的日志，实现了事务中的持久性，主要用于掉电等故障恢复；\",\"binlog （归档日志）：是 Server 层生成的日志，主要用于数据备份和主从复制；\",\"日志\",\"当执行一条update的时候,发生了什么?\",\"首先,客户端通过连接器建立连接,连接器会判断用户身份,因为这是一条update语句,以不需要经过查询缓存，但是表上有更新语句，是会把整个表的查询缓存清空的，所以说查询缓存很鸡肋,所以MySQL8.0就被移除了,之后会经过词法分析和语法分析,词法分析的主要作用是识别出关键词update,表名等等,语法分析是判断是否符合MySQL语法. 之后会经过预处理器,预处理器会判断表名和字段是否存在,优化器确定执行计划，因为 where 条件中的 id 是主键索引，所以决定要使用 id 这个索引；执行器负责具体执行,找到这一行,然后更新.\",\"不过更新语句还涉及到undo log(回滚日志),redo log(重做日志),binlog(归档日志)这三种日志:\",\"undo log(回滚日志): 是InnoDB存储引擎层生成的日志,实现了日志的原子性,主要用于事务的回滚.\",\"redo log,是InnoDB存储引擎层生成的日志,实现了事务中的持久性,主要用于掉电等故障恢复\",\"bin log,是Server生成的日志,主要用于数据恢复和主从复制.\",\"这一小节的问题包括:\",\"为什么需要undo log\",\"为什么需要Buffer Pool\",\"为什么需要redo log\",\"为什么需要bin log\",\"为什么需要两阶段提交\",\"两阶段提交有什么问题\",\"MySQL磁盘I/O很高有什么优化点\"]},\"356\":{\"h\":\"为什么需要undo log\",\"t\":[\"我们在MySQL中实现增删改语句的时候,MySQL会判断autocommit参数来决定是否默认开启事务,如果默认开启,执行一条 update 语句也是会使用事务的。在事务执行过程中,都会记录下回滚所需要的信息到一个日志里,那么事务发生过程中MySQL崩溃了,或者事务执行失败,我们就可以通过这个日志回到事务发生之前的数据,这就叫Undo log,并且它保证了事务的ACID中的原子性.\",\"一条记录的每一次更新操作产生的undo log格式都有一个roll_potiner指针和一个trx_id事务id:\",\"trx_id指针可以知道该记录是被哪一个事务修改的\",\"roll_potiner指针可以将这些 undo log 串成一个链表，这个链表就被称为版本链\",\"另外，undo log 还有一个作用，通过 ReadView + undo log 实现 MVCC（多版本并发控制）\",\"对于读提交隔离级别的事务而言,每次在事务执行中的select都会生成一个新的ReadView,这意味着事务期间多次读取同一条数据,前后两次读取的数据可能不一致可能会发生不可重复读.对于可重复读隔离级别的事务是启动事务时生成一个 Read View,然后整个事务期间都在用这个 Read View，这样就保证了在事务期间读到的数据都是事务启动前的记录。\",\"这两种隔离级别的实现是通过事务的Read View里的字段和记录中的两个隐藏列(trx_id和roll_pointer)的对比如果不满足可见行,就会顺着undolog版本链里面找到可见性的记录,从而控制并发事务访问同一个记录时的行为，这就叫 MVCC（多版本并发控制）。\",\"undo log 两大作用：\",\"实现事务回滚，保障事务的原子性。事务处理过程中，如果出现了错误或者用户执 行了 ROLLBACK 语句，MySQL 可以利用 undo log 中的历史数据将数据恢复到事务开始之前的状态。\",\"实现 MVCC（多版本并发控制）关键因素之一。MVCC 是通过 ReadView + undo log 实现的。undo log 为每条记录保存多份历史数据，MySQL 在执行快照读（普通 select 语句）的时候，会根据事务的 Read View 里的信息，顺着 undo log 的版本链找到满足其可见性的记录.\",\"Undo log是如何刷盘的?undo log 和数据页的刷盘策略是一样的，都需要通过 redo log 保证持久化。buffer pool 中有 undo 页，对 undo 页的修改也都会记录到 redo log。redo log 会每秒刷盘，提交事务时也会刷盘，数据页和 undo 页都是靠这个机制保证持久化的。\"]},\"357\":{\"h\":\"为什么需要 redo log ？\",\"t\":[\"redo log是在数据被修改后,或者事物执行后将数据被修改后的数据记录到log里,记录的是某个数据页面做了的修改,比如对 XXX 表空间中的 YYY 数据页 ZZZ 偏移量的地方做了AAA 更新，每当执行一个事务就会产生这样的一条或者多条物理日志。\",\"为了防止断电后导致的数据丢失问题,当需要有一条记录需要更新时,InnoDB就会先更新内存,（同时标记为脏页），然后将本次对这个页的修改以 redo log 的形式记录下来，这个时候更新就算完成了。后续InnoDB会进行更新,由后台线程将缓存在Buffer Pool里的脏页刷新到磁盘里,这就是WAL技术.WAL技术是指MySQL的写操作并不是立即写到磁盘上,而是先写日志,然后在之后合适的时间再写到磁盘上.\",\"这样即使后面系统崩溃了,也可以通过redo log来恢复数据.\",\"被修改 Undo 页面，需要记录对应 redo log 吗？\",\"需要的。开启事务后，InnoDB 层更新记录前，首先要记录相应的 undo log，如果是更新操作，需要把被更新的列的旧值记下来，也就是要生成一条 undo log，undo log 会写入 Buffer Pool 中的 Undo 页面。不过，在内存修改该 Undo 页面后，需要记录对应的 redo log。\",\"redo log 和 undo log 区别在哪？ \",\"redo log 记录了此次事务「完成后」的数据状态，记录的是更新之后的值； undo log 记录了此次事务「开始前」的数据状态，记录的是更新之前的值；\",\"事务提交之前发生了崩溃，重启后会通过 undo log 回滚事务，事务提交之后发生了崩溃，重启后会通过 redo log 恢复事务\",\"所以有了 redo log，再通过 WAL 技术，InnoDB 就可以保证即使数据库发生异常重启，之前已提交的记录都不会丢失，这个能力称为 crash-safe（崩溃恢复）。可以看出来， redo log 保证了事务四大特性中的持久性。\",\"redo log写到磁盘,数据也写到磁盘,会不会麻烦? 不麻烦,redo log在磁盘中是顺序写,而写入数据则是随机写,性能差别巨大,可以说这是WAL技术的另一个优点,MySQL 的写操作从磁盘的「随机写」变成了「顺序写」，提升语句的执行性能。\",\"所以为什么要有redo log?\",\"实现事务的持久性,让MySQL有了crash-safe 的能力，能够保证 MySQL 在任何时间段突然崩溃，重启后之前已提交的记录都不会丢失\",\"将写操作从「随机写」变成了「顺序写」，提升 MySQL 写入磁盘的性能。\",\"产生的 redo log 是直接写入磁盘的吗？\",\"其实也不是\",\"实际上在执行一个事务的过程中,产生的redo log也不是直接写入磁盘的,因为这样会产生大量的 I/O 操作，而且磁盘的运行速度远慢于内存。\",\"所以redo log也有自己的redo log buffer,每当产生一条redo log时会先写到redo log buffer中,后续会持久化.redo log buffer默认16MB,可以通过 innodb_log_Buffer_size 参数动态的调整大小，增大它的大小可以让 MySQL 处理「大事务」是不必写入磁盘，进而提升写 IO 性能。\",\"redo log什么时候刷盘?\",\"缓存在 redo log buffer 里的 redo log 还是在内存中，它什么时候刷新到磁盘？\",\"MySQL正常关机\",\"InnoDB后台线程每秒刷新一次\",\"当redo log buffer记录的写入量大于redo log buffer内存空间的一半时.\",\"每次事务提交时都将缓存在 redo log buffer 里的 redo log 直接持久化到磁盘\",\"innodb_flush_log_at_trx_commit 参数控制的是什么？\",\"innodb_flush_log_at_trx_commit可以控制redo log buffer的持久策略. 参数为0.表示每次事务提交时,将redo log保留在redo log buffer中,这一模式事务提交不会主动刷盘,数据完整性较低,可能会发生丢失数据 参数为1.表示每次数据提交时候,都会将缓存在 redo log buffer 里的 redo log 直接持久化到磁盘,这样MySQL即使异常重启也不会丢失数据 参数为2.表示表示每次事务提交时，都只是缓存在 redo log buffer 里的 redo log 写到 redo log 文件，注意写入到「 redo log 文件」并不意味着写入到了磁盘,因为操作系统的文件系统中有个 Page Cache，Page Cache 是专门用来缓存文件数据的，所以写入「 redo log文件」意味着写入到了操作系统的文件缓存。\",\"这三个参数的数据安全性和写入性能的比较如下：\",\"数据安全性：参数 1 > 参数 2 > 参数 0 写入性能：参数 0 > 参数 2> 参数 1 \",\"redo log 文件写满了怎么办？\",\"默认情况下， InnoDB 存储引擎有 1 个重做日志文件组( redo log Group），「重做日志文件组」由有 2 个 redo log 文件组成，这两个 redo 日志的文件名叫 ：ib_logfile0 和 ib_logfile1 。\",\"在重做日志组中，每个 redo log File 的大小是固定且一致的，假设每个 redo log File 设置的上限是 1 GB，那么总共就可以记录 2GB 的操作。重做日志文件组是以循环写的方式工作的，从头开始写，写到末尾就又回到开头，相当于一个环形。redo log 是循环写的方式，相当于一个环形，InnoDB 用 write pos 表示 redo log 当前记录写到的位置，用 checkpoint 表示当前要擦除的位置，如下图：\",\"图中的：\",\"write pos 和 checkpoint 的移动都是顺时针方向；\",\"write pos ～ checkpoint 之间的部分（图中的红色部分），用来记录新的更新操作；\",\"check point ～ write pos 之间的部分（图中蓝色部分）：待落盘的脏数据页记录；\",\"如果 write pos 追上了 checkpoint，就意味着 redo log 文件满了，这时 MySQL 不能再执行新的更新操作，也就是说 MySQL 会被阻塞（因此所以针对并发量大的系统，适当设置 redo log 的文件大小非常重要），此时会停下来将 Buffer Pool 中的脏页刷新到磁盘中，然后标记 redo log 哪些记录可以被擦除，接着对旧的 redo log 记录进行擦除，等擦除完旧记录腾出了空间，checkpoint 就会往后移动（图中顺时针），然后 MySQL 恢复正常运行，继续执行新的更新操作。\",\"所以，一次 checkpoint 的过程就是脏页刷新到磁盘中变成干净页，然后标记 redo log 哪些记录可以被覆盖的过程。\"]},\"358\":{\"h\":\"为什么需要 binlog ？\",\"t\":[\"MySQL 在完成一条更新操作后，Server 层还会生成一条 binlog，等之后事务提交的时候，会将该事物执行过程中产生的所有 binlog 统一写 入 binlog 文件。binlog 文件是记录了所有数据库表结构变更和表数据修改的日志，不会记录查询类的操作，比如 SELECT 和 SHOW 操作。\",\"为什么有了 binlog， 还要有 redo log？ \",\"这个问题跟 MySQL 的时间线有关系。最开始 MySQL 里并没有 InnoDB 引擎，MySQL 自带的引擎是 MyISAM，但是 MyISAM 没有 crash-safe 的能力，binlog 日志只能用于归档。而 InnoDB 是另一个公司以插件形式引入 MySQL 的，既然只依靠 binlog 是没有 crash-safe 能力的，所以 InnoDB 使用 redo log 来实现 crash-safe 能力。\",\"redo log 和 binlog 有什么区别？\",\"这两个日志有四个区别。\",\"适用对象不同： \",\"binlog 是 MySQL 的 Server 层实现的日志，所有存储引擎都可以使用；\",\"redo log 是 Innodb 存储引擎实现的日志；\",\"文件格式不同： \",\"binlog 有 3 种格式类型，分别是 STATEMENT（默认格式）、ROW、 MIXED，区别如下： \",\"STATEMENT：每一条修改数据的 SQL 都会被记录到 binlog 中（相当于记录了逻辑操作，所以针对这种格式， binlog 可以称为逻辑日志），主从复制中 slave 端再根据 SQL 语句重现。但 STATEMENT 有动态函数的问题，比如你用了 uuid 或者 now 这些函数，你在主库上执行的结果并不是你在从库执行的结果，这种随时在变的函数会导致复制的数据不一致；\",\"ROW：记录行数据最终被修改成什么样了（这种格式的日志，就不能称为逻辑日志了），不会出现 STATEMENT 下动态函数的问题。但 ROW 的缺点是每行数据的变化结果都会被记录，比如执行批量 update 语句，更新多少行数据就会产生多少条记录，使 binlog 文件过大，而在 STATEMENT 格式下只会记录一个 update 语句而已；\",\"MIXED：包含了 STATEMENT 和 ROW 模式，它会根据不同的情况自动使用 ROW 模式和 STATEMENT 模式；\",\"redo log 是物理日志，记录的是在某个数据页做了什么修改，比如对 XXX 表空间中的 YYY 数据页 ZZZ 偏移量的地方做了AAA 更新；\",\"写入方式不同 \",\"binlog 是追加写，写满一个文件，就创建一个新的文件继续写，不会覆盖以前的日志，保存的是全量的日志。\",\"redo log 是循环写，日志空间大小是固定，全部写满就从头开始，保存未被刷入磁盘的脏页日志。\",\"用途不同： \",\"binlog 用于备份恢复、主从复制；\",\"redo log 用于掉电等故障恢复。\",\"如果不小心整个数据库的数据被删除了，能使用 redo log 文件恢复数据吗？\",\"不可以使用 redo log 文件恢复，只能使用 binlog 文件恢复。\",\"因为 redo log 文件是循环写，是会边写边擦除日志的，只记录未被刷入磁盘的数据的物理日志，已经刷入磁盘的数据都会从 redo log 文件里擦除。\",\"binlog 文件保存的是全量的日志，也就是保存了所有数据变更的情况，理论上只要记录在 binlog 上的数据，都可以恢复，所以如果不小心整个数据库的数据被删除了，得用 binlog 文件恢复数据。\",\"binlog 什么时候刷盘？\",\"事务执行过程中，先把日志写到 binlog cache（Server 层的 cache），事务提交的时候，再把 binlog cache 写到 binlog 文件中。个事务的 binlog 是不能被拆开的，因此无论这个事务有多大（比如有很多条语句），也要保证一次性写入。这是因为有一个线程只能同时有一个事务在执行的设定，所以每当执行一个 begin/start transaction 的时候，就会默认提交上一个事务，这样如果一个事务的 binlog 被拆开的时候，在备库执行就会被当做多个事务分段自行，这样破坏了原子性，是有问题的。MySQL 给每个线程分配了一片内存用于缓冲 binlog ，该内存叫 binlog cache，参数 binlog_cache_size 用于控制单个线程内 binlog cache 所占内存的大小。如果超过了这个参数规定的大小，就要暂存到磁盘。\",\"什么时候 binlog cache 会写到 binlog 文件？ \",\"在事务提交的时候，执行器把 binlog cache 里的完整事务写入到 binlog 文件中，并清空 binlog cache。虽然每个线程有自己 binlog cache，但是最终都写到同一个 binlog 文件：\",\"图中的 write，指的就是指把日志写入到 binlog 文件，但是并没有把数据持久化到磁盘，因为数据还缓存在文件系统的 page cache 里，write 的写入速度还是比较快的，因为不涉及磁盘 I/O。 图中的 fsync，才是将数据持久化到磁盘的操作，这里就会涉及磁盘 I/O，所以频繁的 fsync 会导致磁盘的 I/O 升高。\",\"MySQL提供一个 sync_binlog 参数来控制数据库的 binlog 刷到磁盘上的频率：\",\"sync_binlog = 0 的时候，表示每次提交事务都只 write，不 fsync，后续交由操作系统决定何时将数据持久化到磁盘；\",\"sync_binlog = 1 的时候，表示每次提交事务都会 write，然后马上执行 fsync；\",\"sync_binlog =N(N>1) 的时候，表示每次提交事务都 write，但累积 N 个事务后才 fsync。\",\"如果能容少量事务的 binlog 日志丢失的风险，为了提高写入的性能，一般会 sync_binlog 设置为 100~1000 中的某个数值。\"]},\"359\":{\"h\":\"主从复制是怎么实现？\",\"t\":[\"MySQL 的主从复制依赖于 binlog ，也就是记录 MySQL 上的所有变化并以二进制形式保存在磁盘上。复制的过程就是将 binlog 中的数据从主库传输到从库上。\",\"这个过程一般是异步的，也就是主库上执行事务操作的线程不会等待复制 binlog 的线程同步完成。\",\"MySQL 集群的主从复制过程梳理成 3 个阶段：\",\"写入 Binlog：主库写 binlog 日志，提交事务，并更新本地存储数据。\",\"同步 Binlog：把 binlog 复制到所有从库上，每个从库把 binlog 写到暂存日志中。\",\"回放 Binlog：回放 binlog，并更新存储引擎中的数据。\",\"MySQL 主从复制还有哪些模型？ \",\"主要有三种：\",\"同步复制：MySQL 主库提交事务的线程要等待所有从库的复制成功响应，才返回客户端结果。这种方式在实际项目中，基本上没法用，原因有两个：一是性能很差，因为要复制到所有节点才返回响应；二是可用性也很差，主库和所有从库任何一个数据库出问题，都会影响业务。\",\"异步复制（默认模型）：MySQL 主库提交事务的线程并不会等待 binlog 同步到各从库，就返回客户端结果。这种模式一旦主库宕机，数据就会发生丢失。\",\"半同步复制：MySQL 5.7 版本之后增加的一种复制方式，介于两者之间，事务线程不用等待所有的从库复制成功响应，只要一部分复制成功响应回来就行，比如一主二从的集群，只要数据成功复制到任意一个从库上，主库的事务线程就可以返回给客户端。这种半同步复制的方式，兼顾了异步复制和同步复制的优点，即使出现主库宕机，至少还有一个从库有最新的数据，不存在数据丢失的风险。\"]},\"360\":{\"h\":\"为什么需要两阶段提交？\",\"t\":[\"事务提交后，redo log 和 binlog 都要持久化到磁盘，但是这两个是独立的逻辑，可能出现半成功的状态，这样就造成两份日志之间的逻辑不一致。redo log 影响主库的数据，binlog 影响从库的数据，所以 redo log 和 binlog 必须保持一致才能保证主从数据一致。\",\"MySQL 为了避免出现两份日志之间的逻辑不一致的问题，使用了「两阶段提交」来解决，两阶段提交其实是分布式事务一致性协议，它可以保证多个逻辑操作要不全部成功，要不全部失败，不会出现半成功的状态。\",\"两阶段提交将单个事务提交拆分成了两个部分,分别是准备[Prepare]阶段和提交[Commit]阶段,每个阶段都由协调者和参与者组成,这里的提交(Commit)阶段和commit语句不同,commit 语句执行的时候，会包含提交（Commit）阶段。\",\"两阶段提交的过程是怎样的？\",\"在MySQL的InnoDB引擎下,开启binlog的情况下,MySQL内部会同时维护binlog日志与InnoDB的redo log,为了保证这两个日志的一致性,MySQL使用了内部XA事务,内部 XA 事务由 binlog 作为协调者，存储引擎是参与者。\",\"当客户端执行 commit 语句或者在自动提交的情况下，MySQL 内部开启一个 XA 事务，分两阶段来完成 XA 事务的提交，如下图：\",\"从图中可以看出,提交过程有两个阶段,就是将redo log 的写入拆成了两个步骤：prepare 和 commit，中间再穿插写入binlog，具体如下：\",\"prepare 阶段：将 XID（内部 XA 事务的 ID） 写入到 redo log，同时将 redo log 对应的事务状态设置为 prepare，然后将 redo log 持久化到磁盘（innodb_flush_log_at_trx_commit = 1 的作用）\",\"commit 阶段：把 XID 写入到 binlog，然后将 binlog 持久化到磁盘（sync_binlog = 1 的作用），接着调用引擎的提交事务接口，将 redo log 状态设置为 commit，此时该状态并不需要持久化到磁盘，只需要 write 到文件系统的 page cache 中就够了，因为只要 binlog 写磁盘成功，就算 redo log 的状态还是 prepare 也没有关系，一样会被认为事务已经执行成功\",\"异常重启会出现什么现象？\",\"我们来看看在两阶段提交的不同时刻，MySQL 异常重启会出现什么现象？下图中有时刻 A 和时刻 B 都有可能发生崩溃：\",\"不管是时刻 A（redo log 已经写入磁盘， binlog 还没写入磁盘），还是时刻 B （redo log 和 binlog 都已经写入磁盘，还没写入 commit 标识）崩溃，此时的 redo log 都处于 prepare 状态。\",\"在 MySQL 重启后会按顺序扫描 redo log 文件，碰到处于 prepare 状态的 redo log，就拿着 redo log 中的 XID 去 binlog 查看是否存在此 XID：\",\"如果 binlog 中没有当前内部 XA 事务的 XID，说明 redolog 完成刷盘，但是 binlog 还没有刷盘，则回滚事务。对应时刻 A 崩溃恢复的情况。\",\"如果 binlog 中有当前内部 XA 事务的 XID，说明 redolog 和 binlog 都已经完成了刷盘，则提交事务。对应时刻 B 崩溃恢复的情况。\",\"可以看到，对于处于 prepare 阶段的 redo log，即可以提交事务，也可以回滚事务，这取决于是否能在 binlog 中查找到与 redo log 相同的 XID，如果有就提交事务，如果没有就回滚事务。这样就可以保证 redo log 和 binlog 这两份日志的一致性了。\",\"所以说，两阶段提交是以 binlog 写成功为事务提交成功的标识，因为 binlog 写成功了，就意味着能在 binlog 中查找到与 redo log 相同的 XID。\",\"处于 prepare 阶段的 redo log 加上完整 binlog，重启就提交事务，MySQL 为什么要这么设计?\",\"binlog 已经写入了，之后就会被从库（或者用这个 binlog 恢复出来的库）使用。\",\"所以，在主库上也要提交这个事务。采用这个策略，主库和备库的数据就保证了一致性。\",\"事务没提交的时候，redo log 会被持久化到磁盘吗？\",\"会的。\",\"事务执行中间过程的 redo log 也是直接写在 redo log buffer 中的，这些缓存在 redo log buffer 里的 redo log 也会被「后台线程」每隔一秒一起持久化到磁盘。\",\"也就是说，事务没提交的时候，redo log 也是可能被持久化到磁盘的。\",\"有的同学可能会问，如果 mysql 崩溃了，还没提交事务的 redo log 已经被持久化磁盘了，mysql 重启后，数据不就不一致了？\",\"放心，这种情况 mysql 重启会进行回滚操作，因为事务没提交的时候，binlog 是还没持久化到磁盘的。\",\"所以， redo log 可以在事务没提交之前持久化到磁盘，但是 binlog 必须在事务提交之后，才可以持久化到磁盘。\",\"两阶段提交有什么问题？\",\"两阶段提交虽然保证了两个日志文件的数据一致性，但是性能很差，主要有两个方面的影响：\",\"磁盘 I/O 次数高：对于“双1”配置，每个事务提交都会进行两次 fsync（刷盘），一次是 redo log 刷盘，另一次是 binlog 刷盘。\",\"锁竞争激烈：两阶段提交虽然能够保证「单事务」两个日志的内容一致，但在「多事务」的情况下，却不能保证两者的提交顺序一致，因此，在两阶段提交的流程基础上，还需要加一个锁来保证提交的原子性，从而保证多事务的情况下，两个日志的提交顺序一致。\",\"为什么两阶段提交的磁盘 I/O 次数会很高？ \",\"可以看到，如果 sync_binlog 和 当 innodb_flush_log_at_trx_commit 都设置为 1，那么在每个事务提交过程中， 都会至少调用 2 次刷盘操作，一次是 redo log 刷盘，一次是 binlog 落盘，所以这会成为性能瓶颈。\",\"为什么锁竞争激烈？ \",\"在早期的 MySQL 版本中，通过使用 prepare_commit_mutex 锁来保证事务提交的顺序，在一个事务获取到锁时才能进入 prepare 阶段，一直到 commit 阶段结束才能释放锁，下个事务才可以继续进行 prepare 操作。\",\"通过加锁虽然完美地解决了顺序一致性的问题，但在并发量较大的时候，就会导致对锁的争用，性能不佳。\",\"组提交\",\"MySQL 引入了 binlog 组提交（group commit）机制，当有多个事务提交的时候，会将多个 binlog 刷盘操作合并成一个，从而减少磁盘 I/O 的次数，如果说 10 个事务依次排队刷盘的时间成本是 10，那么将这 10 个事务一次性一起刷盘的时间成本则近似于 1。\",\"引入了组提交机制后，prepare 阶段不变，只针对 commit 阶段，将 commit 阶段拆分为三个过程：\",\"flush 阶段：多个事务按进入的顺序将 binlog 从 cache 写入文件（不刷盘）；\",\"sync 阶段：对 binlog 文件做 fsync 操作（多个事务的 binlog 合并一次刷盘）；\",\"commit 阶段：各个事务按顺序做 InnoDB commit 操作；\",\"MySQL 磁盘 I/O 很高，有什么优化的方法？\",\"现在我们知道事务在提交的时候，需要将 binlog 和 redo log 持久化到磁盘，那么如果出现 MySQL 磁盘 I/O 很高的现象，我们可以通过控制以下参数，来 “延迟” binlog 和 redo log 刷盘的时机，从而降低磁盘 I/O 的频率：\",\"设置组提交的两个参数： binlog_group_commit_sync_delay 和 binlog_group_commit_sync_no_delay_count 参数，延迟 binlog 刷盘的时机，从而减少 binlog 的刷盘次数。这个方法是基于“额外的故意等待”来实现的，因此可能会增加语句的响应时间，但即使 MySQL 进程中途挂了，也没有丢失数据的风险，因为 binlog 早被写入到 page cache 了，只要系统没有宕机，缓存在 page cache 里的 binlog 就会被持久化到磁盘。\",\"将 sync_binlog 设置为大于 1 的值（比较常见是 100~1000），表示每次提交事务都 write，但累积 N 个事务后才 fsync，相当于延迟了 binlog 刷盘的时机。但是这样做的风险是，主机掉电时会丢 N 个事务的 binlog 日志。\",\"将 innodb_flush_log_at_trx_commit 设置为 2。表示每次事务提交时，都只是缓存在 redo log buffer 里的 redo log 写到 redo log 文件，注意写入到「 redo log 文件」并不意味着写入到了磁盘，因为操作系统的文件系统中有个 Page Cache，专门用来缓存文件数据的，所以写入「 redo log文件」意味着写入到了操作系统的文件缓存，然后交由操作系统控制持久化到磁盘的时机。但是这样做的风险是，主机掉电的时候会丢数据。\"]},\"361\":{\"h\":\"事务\",\"t\":[\"事务是由 MySQL 的引擎来实现的，我们常见的 InnoDB 引擎它是支持事务的。\",\"事务必须遵循ACID\",\"原子性（Atomicity）：一个事务中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节，而且事务在执行过程中发生错误，会被回滚到事务开始前的状态，就像这个事务从来没有执行过一样.\",\"一致性（Consistency）：是指事务操作前和操作后，数据满足完整性约束，数据库保持一致性状态。数据库在任何时候都保持一致性 —— 每一个的提交或回滚，包括事务进行的时候。如果多表更新相关数据，查询看到的结果要么全是旧值，要么全是新值，而不是旧值和新值的混合。\",\"隔离性（Isolation）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致，因为多个事务同时使用相同的数据时，不会相互干扰，每个事务都有一个完整的数据空间，对其他并发事务是隔离的。\",\"持久性（Durability）：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。\",\"InnoDB 引擎通过什么技术来保证事务的这四个特性的呢？\",\"持久性是通过 redo log （重做日志）来保证的；\",\"原子性是通过 undo log（回滚日志） 来保证的；\",\"隔离性是通过 MVCC（多版本并发控制） 或锁机制来保证的；\",\"一致性则是通过持久性+原子性+隔离性来保证；\",\"并行事务会引发什么问题？\",\"MySQL 服务端是允许多个客户端连接的，这意味着 MySQL 会出现同时处理多个事务的情况。\",\"那么在同时处理多个事务的时候，就可能出现脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）的问题。\",\"脏读: 如果一个事务「读到」了另一个「未提交事务修改过的数据」，就意味着发生了「脏读」现象。不可重复读: 在一个事务内多次读取同一个数据，如果出现前后两次读到的数据不一样的情况，就意味着发生了「不可重复读」现象。幻读: 在一个事务内多次查询某个符合查询条件的「记录数量」，如果出现前后两次查询到的记录数量不一样的情况，就意味着发生了「幻读」现象。\",\"事务的隔离级别有哪些?\",\"SQL 标准提出了四种隔离级别来规避这些现象，隔离级别越高，性能效率就越低，这四个隔离级别如下：\",\"读未提交（read uncommitted），指一个事务还没提交时，它做的变更就能被其他事务看到；\",\"读提交（read committed），指一个事务提交之后，它做的变更才能被其他事务看到；\",\"可重复读（repeatable read），指一个事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，MySQL InnoDB 引擎的默认隔离级别；\",\"串行化（serializable ）；会对记录加上读写锁，在多个事务对这条记录进行读写操作时，如果发生了读写冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行；\",\"针对不同的隔离级别，并发事务时可能发生的现象也会不同。\",\"MySQL 在「可重复读」隔离级别下，可以很大程度上避免幻读现象的发生（注意是很大程度避免，并不是彻底避免），所以 MySQL 并不会使用「串行化」隔离级别来避免幻读现象的发生，因为使用「串行化」隔离级别会影响性能。\",\"MySQL InnoDB 引擎的默认隔离级别虽然是「可重复读」，但是它很大程度上避免幻读现象，解决的方案有两种：\",\"针对快照读（普通 select 语句），是通过 MVCC 方式解决了幻读，因为可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，是查询不出来这条数据的，所以就很好了避免幻读问题。\",\"针对当前读（select ... for update 等语句），是通过 next-key lock（记录锁+间隙锁）方式解决了幻读，因为当执行 select ... for update 语句的时候，会加上 next-key lock，如果有其他事务在 next-key lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入，所以就很好了避免幻读问题。\"]},\"362\":{\"h\":\"事务的隔离级别是怎么实现的\",\"t\":[\"对于「读未提交」隔离级别的事务来说，因为可以读到未提交事务修改的数据，所以直接读取最新的数据就好了；\",\"对于「串行化」隔离级别的事务来说，通过加读写锁的方式来避免并行访问；\",\"对于「读提交」和「可重复读」隔离级别的事务来说，它们是通过 Read View 来实现的，它们的区别在于创建 Read View 的时机不同，大家可以把 Read View 理解成一个数据快照，就像相机拍照那样，定格某一时刻的风景。「读提交」隔离级别是在「每个语句执行前」都会重新生成一个 Read View，而「可重复读」隔离级别是「启动事务时」生成一个 Read View，然后整个事务期间都在用这个 Read View。\",\"注意，执行「开始事务」命令，并不意味着启动了事务。在 MySQL 有两种开启事务的命令，分别是：\",\"第一种：begin/start transaction 命令；\",\"第二种：start transaction with consistent snapshot 命令；\",\"这两种开启事务的命令，事务的启动时机是不同的：\",\"执行了 begin/start transaction 命令后，并不代表事务启动了。只有在执行这个命令后，执行了增删查改操作的 SQL 语句，才是事务真正启动的时机；\",\"执行了 start transaction with consistent snapshot 命令，就会马上启动事务。\",\"接下来详细说下，Read View 在 MVCC 里如何工作的？\",\"Read View 在 MVCC 里如何工作的？\",\"我们需要了解两个知识：\",\"Read View 中四个字段作用；\",\"聚簇索引记录中两个跟事务有关的隐藏列；\",\"那 Read View 到底是个什么东西？\",\"Read View里有四个重要字段:\",\"m_ids:指的是在创建Read View时,当前数据库中「活跃事务」的事务 id 列表，注意是一个列表，“活跃事务”指的就是，启动了但还没提交的事务。\",\"min_trx_id ：指的是在创建 Read View 时，当前数据库中「活跃事务」中事务 id 最小的事务，也就是 m_ids 的最小值。\",\"max_trx_id ：这个并不是 m_ids 的最大值，而是创建 Read View 时当前数据库中应该给下一个事务的 id 值，也就是全局事务中最大的事务 id 值 + 1；\",\"creator_trx_id ：指的是创建该 Read View 的事务的事务 id。\",\"知道了 Read View 的字段，我们还需要了解聚簇索引记录中的两个隐藏列。\",\"假设在账户余额表插入一条小林余额为 100 万的记录，然后我把这两个隐藏列也画出来，该记录的整个示意图如下：\",\"对于使用 InnoDB 存储引擎的数据库表，它的聚簇索引记录中都包含下面两个隐藏列：\",\"trx_id，当一个事务对某条聚簇索引记录进行改动时，就会把该事务的事务 id 记录在 trx_id 隐藏列里；\",\"roll_pointer，每次对某条聚簇索引记录进行改动时，都会把旧版本的记录写入到 undo 日志中，然后这个隐藏列是个指针，指向每一个旧版本记录，于是就可以通过它找到修改前的记录。\",\"在创建 Read View 后，我们可以将记录中的 trx_id 划分这三种情况：\",\"如果记录的 trx_id 值小于 Read View 中的 min_trx_id 值，表示这个版本的记录是在创建 Read View 前已经提交的事务生成的，所以该版本的记录对当前事务可见。\",\"如果记录的 trx_id 值大于等于 Read View 中的 max_trx_id 值，表示这个版本的记录是在创建 Read View 后才启动的事务生成的，所以该版本的记录对当前事务不可见。\",\"如果记录的 trx_id 值在 Read View 的 min_trx_id 和 max_trx_id 之间，需要判断 trx_id 是否在 m_ids 列表中： \",\"如果记录的 trx_id 在 m_ids 列表中，表示生成该版本记录的活跃事务依然活跃着（还没提交事务），所以该版本的记录对当前事务不可见。\",\"如果记录的 trx_id 不在 m_ids列表中，表示生成该版本记录的活跃事务已经被提交，所以该版本的记录对当前事务可见。\",\"这种通过「版本链」来控制并发事务访问同一个记录时的行为就叫 MVCC（多版本并发控制）。\",\"可重复读是如何工作的？\",\"可重复读隔离级别是启动事务时生成一个 Read View，然后整个事务期间都在用这个 Read View。\",\"读提交是如何工作的？\",\"读提交隔离级别是在每次读取数据时，都会生成一个新的 Read View。也意味着，事务期间的多次读取同一条数据，前后两次读的数据可能会出现不一致，因为可能这期间另外一个事务修改了该记录，并提交了事务。\",\"MySQL 可重复读隔离级别，完全解决幻读了吗？\",\"什么是幻读？当同一个查询在不同的时间产生不同的结果集时，事务中就会出现所谓的幻象问题。例如，如果 SELECT 执行了两次，但第二次返回了第一次没有返回的行，则该行是“幻像”行。\",\"MySQL InnoDB 引擎的默认隔离级别虽然是「可重复读」，但是它很大程度上避免幻读现象（并不是完全解决了），解决的方案有两种：\",\"针对快照读（普通 select 语句），是通过 MVCC 方式解决了幻读，因为可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，是查询不出来这条数据的，所以就很好了避免幻读问题。\",\"针对当前读（select ... for update 等语句），是通过 next-key lock（记录锁+间隙锁）方式解决了幻读，因为当执行 select ... for update 语句的时候，会加上 next-key lock，如果有其他事务在 next-key lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入，所以就很好了避免幻读问题。\",\"这两个解决方案是很大程度上解决了幻读现象，但是还是有个别的情况造成的幻读现象是无法解决的。\",\"当前读是如何避免幻读的？\",\"MySQL 里除了普通查询是快照读，其他都是当前读，比如 update、insert、delete，这些语句执行前都会查询最新版本的数据，然后再做进一步的操作。\",\"这很好理解，假设你要 update 一个记录，另一个事务已经 delete 这条记录并且提交事务了，这样不是会产生冲突吗，所以 update 的时候肯定要知道最新的数据。\",\"另外，select ... for update 这种查询语句是当前读，每次执行的时候都是读取最新的数据。\",\"幻读被完全解决了吗？\",\"可重复读隔离级别下虽然很大程度上避免了幻读，但是还是没有能完全解决幻读。\",\"第一个发生幻读现象的场景\",\"第一个例子：对于快照读， MVCC 并不能完全避免幻读现象。因为当事务 A 更新了一条事务 B 插入的记录，那么事务 A 前后两次查询的记录条目就不一样了，所以就发生幻读。\",\"第二个发生幻读现象的场景\",\"除了上面这一种场景会发生幻读现象之外，还有下面这个场景也会发生幻读现象。\",\"T1 时刻：事务 A 先执行「快照读语句」：select * from t_test where id > 100 得到了 3 条记录。\",\"T2 时刻：事务 B 往插入一个 id= 200 的记录并提交；\",\"T3 时刻：事务 A 再执行「当前读语句」 select * from t_test where id > 100 for update 就会得到 4 条记录，此时也发生了幻读现象。\",\"要避免这类特殊场景下发生幻读的现象的话，就是尽量在开启事务之后，马上执行 select ... for update 这类当前读的语句，因为它会对记录加 next-key lock，从而避免其他事务插入一条新记录。\"]},\"363\":{\"h\":\"锁\",\"t\":[\"MySQL有哪些锁?\"]},\"364\":{\"h\":\"全局锁\",\"t\":[\"要使用全局锁flush tables with read lock,整个数据库就处于只读状态了,这时候其他线程执行对数据的增删改操作，比如 insert、delete、update等语句,对表结构的更改操作，比如 alter table、drop table 等语句,都会被阻塞。\",\"如果要释放全局锁，则要执行这条命令：unlock tables\",\"当然，当会话断开了，全局锁会被自动释放。\",\"全局锁主要应用于做全库逻辑备份，这样在备份数据库期间，不会因为数据或表结构的更新，而出现备份文件的数据与预期的不一样。\",\"既然备份数据库数据的时候，使用全局锁会影响业务，那有什么其他方式可以避免？ 如果数据库的引擎支持的事务支持可重复读的隔离级别，那么在备份数据库之前先开启事务，会先创建 Read View，然后整个事务执行期间都在用这个 Read View，而且由于 MVCC 的支持，备份期间业务依然可以对数据进行更新操作。因为在可重复读的隔离级别下，即使其他事务更新了表的数据，也不会影响备份数据库时的 Read View，这就是事务四大特性中的隔离性，这样备份期间备份的数据一直是在开启事务时的数据。\"]},\"365\":{\"h\":\"表级锁\",\"t\":[\"MySQL 里面表级别的锁有这几种：\",\"表锁；\",\"元数据锁（MDL）;\",\"意向锁；\",\"AUTO-INC 锁；\"]},\"366\":{\"h\":\"表锁\",\"t\":[\"如果我们想对学生表（t_student）加表锁，可以使用下面的命令：\",\"//表级别的共享锁，也就是读锁； lock tables t_student read; //表级别的独占锁，也就是写锁； lock tables t_stuent write; \",\"需要注意的是，表锁除了会限制别的线程的读写外，也会限制本线程接下来的读写操作。\",\"也就是说如果本线程对学生表加了「共享表锁」，那么本线程接下来如果要对学生表执行写操作的语句，是会被阻塞的，当然其他线程对学生表进行写操作时也会被阻塞，直到锁被释放。\",\"要释放表锁，可以使用下面这条命令，会释放当前会话的所有表锁：unlock tables 另外，当会话退出后，也会释放所有表锁。\",\"不过尽量避免在使用 InnoDB 引擎的表使用表锁，因为表锁的颗粒度太大，会影响并发性能，InnoDB 牛逼的地方在于实现了颗粒度更细的行级锁。\"]},\"367\":{\"h\":\"元数据锁\",\"t\":[\"元数据锁(MDL)不需要我们显式去加,它在我们对数据表进行操作时会自动加,对一张表进行 CRUD 操作时，加的是 MDL 读锁,对一张表做结构变更操作的时候，加的是 MDL 写锁；MDL 是为了保证当用户对表执行 CRUD 操作时，防止其他线程对这个表结构做了变更。\",\"当有线程在执行 select 语句（ 加 MDL 读锁）的期间，如果有其他线程要更改该表的结构（ 申请 MDL 写锁），那么将会被阻塞，直到执行完 select 语句（ 释放 MDL 读锁）。反之，当有线程对表结构进行变更（ 加 MDL 写锁）的期间，如果有其他线程执行了 CRUD 操作（ 申请 MDL 读锁），那么就会被阻塞，直到表结构变更完成（ 释放 MDL 写锁）。\",\"MDL 不需要显示调用，那它是在什么时候释放的? \",\"MDL 是在事务提交后才会释放，这意味着事务执行期间，MDL 是一直持有的。\"]},\"368\":{\"h\":\"意向锁\",\"t\":[\"在使用 InnoDB 引擎的表里对某些记录加上「共享锁」之前，需要先在表级别加上一个「意向共享锁」；\",\"在使用 InnoDB 引擎的表里对某些纪录加上「独占锁」之前，需要先在表级别加上一个「意向独占锁」；\",\"也就是，当执行插入、更新、删除操作，需要先对表加上「意向独占锁」，然后对该记录加独占锁。\",\"而普通的 select 是不会加行级锁的，普通的 select 语句是利用 MVCC 实现一致性读，是无锁的。\",\"不过，select 也是可以对记录加共享锁和独占锁的，具体方式如下：select ... lock in share mode;, select ... for update;\",\"意向共享锁和意向独占锁是表级锁，不会和行级的共享锁和独占锁发生冲突，而且意向锁之间也不会发生冲突，只会和共享表锁（lock tables ... read）和独占表锁（lock tables ... write）发生冲突。\",\"表锁和行锁是满足读读共享、读写互斥、写写互斥的。\",\"如果没有「意向锁」，那么加「独占表锁」时，就需要遍历表里所有记录，查看是否有记录存在独占锁，这样效率会很慢。\",\"那么有了「意向锁」，由于在对记录加独占锁前，先会加上表级别的意向独占锁，那么在加「独占表锁」时，直接查该表是否有意向独占锁，如果有就意味着表里已经有记录被加了独占锁，这样就不用去遍历表里的记录。\",\"所以，意向锁的目的是为了快速判断表里是否有记录被加锁。\"]},\"369\":{\"h\":\"AUTO-INC 锁\",\"t\":[\"表里的主键通常都会设置成自增的，这是通过对主键字段声明 AUTO_INCREMENT 属性实现的。\",\"之后可以在插入数据时，可以不指定主键的值，数据库会自动给主键赋值递增的值，这主要是通过 AUTO-INC 锁实现的。AUTO-INC 锁是特殊的表锁机制，锁不是再一个事务提交后才释放，而是再执行完插入语句后就会立即释放。在插入数据时，会加一个表级别的 AUTO-INC 锁，然后为被 AUTO_INCREMENT 修饰的字段赋值递增的值，等插入语句执行完成后，才会把 AUTO-INC 锁释放掉。那么，一个事务在持有 AUTO-INC 锁的过程中，其他事务的如果要向该表插入语句都会被阻塞，从而保证插入数据时，被 AUTO_INCREMENT 修饰的字段的值是连续递增的。但是， AUTO-INC 锁再对大量数据进行插入的时候，会影响插入性能，因为另一个事务中的插入会被阻塞。\",\"所以InnoDB 存储引擎提供了一种轻量级的锁来实现自增。一样也是在插入数据的时候，会为被 AUTO_INCREMENT 修饰的字段加上轻量级锁，然后给该字段赋值一个自增的值，就把这个轻量级锁释放了，而不需要等待整个插入语句执行完后才释放锁。\",\"InnoDB 存储引擎提供了个 innodb_autoinc_lock_mode 的系统变量，是用来控制选择用 AUTO-INC 锁，还是轻量级的锁。\",\"当 innodb_autoinc_lock_mode = 0，就采用 AUTO-INC 锁，语句执行结束后才释放锁；\",\"当 innodb_autoinc_lock_mode = 2，就采用轻量级锁，申请自增主键后就释放锁，并不需要等语句执行后才释放。\",\"当 innodb_autoinc_lock_mode = 1： \",\"普通 insert 语句，自增锁在申请之后就马上释放；\",\"类似 insert … select 这样的批量插入数据的语句，自增锁还是要等语句结束后才被释放；\"]},\"370\":{\"h\":\"行级锁\",\"t\":[\"InnoDB 引擎是支持行级锁的，而 MyISAM 引擎并不支持行级锁。\",\"前面也提到，普通的 select 语句是不会对记录加锁的，因为它属于快照读。如果要在查询时对记录加行锁，可以使用下面这两个方式，这种查询会加锁的语句称为锁定读。\",\"//对读取的记录加共享锁 select ... lock in share mode; //对读取的记录加独占锁 select ... for update; \",\"上面这两条语句必须在一个事务中，因为当事务提交了，锁就会被释放，所以在使用这两条语句的时候，要加上 begin、start transaction 或者 set autocommit = 0。\",\"共享锁（S锁）满足读读共享，读写互斥。独占锁（X锁）满足写写互斥、读写互斥。\",\"行级锁的类型主要有三类：\",\"Record Lock，记录锁，也就是仅仅把一条记录锁上；\",\"Gap Lock，间隙锁，锁定一个范围，但是不包含记录本身；\",\"Next-Key Lock：Record Lock + Gap Lock 的组合，锁定一个范围，并且锁定记录本身。\"]},\"371\":{\"h\":\"Record Lock\",\"t\":[\"Record Lock 称为记录锁，锁住的是一条记录。而且记录锁是有 S 锁和 X 锁之分的：\",\"当一个事务对一条记录加了 S 型记录锁后，其他事务也可以继续对该记录加 S 型记录锁（S 型与 S 锁兼容），但是不可以对该记录加 X 型记录锁（S 型与 X 锁不兼容）;\",\"当一个事务对一条记录加了 X 型记录锁后，其他事务既不可以对该记录加 S 型记录锁（S 型与 X 锁不兼容），也不可以对该记录加 X 型记录锁（X 型与 X 锁不兼容）。\",\"举个例子，当一个事务执行了下面这条语句：\",\"mysql > begin; mysql > select * from t_test where id = 1 for update; \",\"就是对 t_test 表中主键 id 为 1 的这条记录加上 X 型的记录锁，这样其他事务就无法对这条记录进行修改了。当事务执行 commit 后，事务过程中生成的锁都会被释放。\"]},\"372\":{\"h\":\"Gap Lock\",\"t\":[\"Gap Lock 称为间隙锁，只存在于可重复读隔离级别，目的是为了解决可重复读隔离级别下幻读的现象。\",\"假设，表中有一个范围 id 为（3，5）间隙锁，那么其他事务就无法插入 id = 4 这条记录了，这样就有效的防止幻读现象的发生。间隙锁虽然存在 X 型间隙锁和 S 型间隙锁，但是并没有什么区别，间隙锁之间是兼容的，即两个事务可以同时持有包含共同间隙范围的间隙锁，并不存在互斥关系，因为间隙锁的目的是防止插入幻影记录而提出的。\"]},\"373\":{\"h\":\"Next-Key Lock\",\"t\":[\"Next-Key Lock 称为临键锁，是 Record Lock + Gap Lock 的组合，锁定一个范围，并且锁定记录本身。\",\"假设，表中有一个范围 id 为（3，5] 的 next-key lock，那么其他事务即不能插入 id = 4 记录，也不能修改 id = 5 这条记录。\",\"所以，next-key lock 即能保护该记录，又能阻止其他事务将新纪录插入到被保护记录前面的间隙中。\",\"next-key lock 是包含间隙锁+记录锁的，如果一个事务获取了 X 型的 next-key lock，那么另外一个事务在获取相同范围的 X 型的 next-key lock 时，是会被阻塞的。\",\"比如，一个事务持有了范围为 (1, 10] 的 X 型的 next-key lock，那么另外一个事务在获取相同范围的 X 型的 next-key lock 时，就会被阻塞。\",\"虽然相同范围的间隙锁是多个事务相互兼容的，但对于记录锁，我们是要考虑 X 型与 S 型关系，X 型的记录锁与 X 型的记录锁是冲突的。\"]},\"374\":{\"h\":\"插入意向锁\",\"t\":[\"一个事务在插入一条记录的时候，需要判断插入位置是否已被其他事务加了间隙锁（next-key lock 也包含间隙锁）。\",\"如果有的话，插入操作就会发生阻塞，直到拥有间隙锁的那个事务提交为止（释放间隙锁的时刻），在此期间会生成一个插入意向锁，表明有事务想在某个区间插入新记录，但是现在处于等待状态。\",\"举个例子，假设事务 A 已经对表加了一个范围 id 为（3，5）间隙锁。\",\"当事务 A 还没提交的时候，事务 B 向该表插入一条 id = 4 的新记录，这时会判断到插入的位置已经被事务 A 加了间隙锁，于是事物 B 会生成一个插入意向锁，然后将锁的状态设置为等待状态（PS：MySQL 加锁时，是先生成锁结构，然后设置锁的状态，如果锁状态是等待状态，并不是意味着事务成功获取到了锁，只有当锁状态为正常状态时，才代表事务成功获取到了锁），此时事务 B 就会发生阻塞，直到事务 A 提交了事务。\",\"插入意向锁名字虽然有意向锁，但是它并不是意向锁，它是一种特殊的间隙锁，属于行级别锁。\",\"如果说间隙锁锁住的是一个区间，那么「插入意向锁」锁住的就是一个点。因而从这个角度来说，插入意向锁确实是一种特殊的间隙锁。\",\"插入意向锁与间隙锁的另一个非常重要的差别是：尽管「插入意向锁」也属于间隙锁，但两个事务却不能在同一时间内，一个拥有间隙锁，另一个拥有该间隙区间内的插入意向锁（当然，插入意向锁如果不在间隙锁区间内则是可以的）。\"]},\"375\":{\"h\":\"Buffer Pool\"},\"376\":{\"h\":\"为什么要有Buffer Pool?\",\"t\":[\"虽然说MySQL的数据是存储在磁盘里的,但是也不能每次都从磁盘里读取数据,这样做的性能是极差的.想要提升查询性能,加一个缓存就行了.所以当数据从磁盘中取出来后,缓存内存,下次查询同样的数据的时候,直接从内存中读取.为此,Innodb存储引擎设计了一个缓冲池(buffer pool),来提高数据库的读写性能.\",\"所以MySQL在存储引擎层面有Buffer Pool可以提升性能.\",\"有了缓冲池之后:\",\"当读取数据的时候,如果数据直接存在Buffer Pool,就直接去Buffer Pool读取\",\"当修改数据时,首先修改Buffer Pool中所存在的页,然后将其设置为脏页,最后由后台线程将脏页写入到磁盘\",\"Buffer Pool默认128MB,也可以通过innodb_buffer_pool_size参数调整大小.\",\"InnoDB会把存储中的数据划分为若干页,数据引擎读取是以页为单位进行的,一个页的大小是16KB,在MySQL启动时,InnoDB会向Buffer Pool申请一片连续的内存空间,然后按照默认的16KB的大小划分出一个个的页， Buffer Pool 中的页就叫做缓存页。此时这些缓存页都是空闲的(Free List),之后程序不断去运行,才会有磁盘中的页面加载入Buffer Pool中.\",\"Buffer Pool中除了缓存索引页和数据页,还缓存undo页,插入缓存,自适应哈希索引、锁信息等等。\",\"为了更好管理这些在Buffer Pool中的缓存页,InnoDB为每一个缓存页面都创建了控制块,控制块信息包括(缓存页的表空间,页号,缓存页地址,链表节点)等.控制块也是有占有空间的,它是放在Buffer Pool的最前面,接着才是缓存页.\",\"中间的部分叫碎片空间,为什么会有碎片空间呢?因为可能控制块分配到最后剩下的最后一点点分配不到了,就产生碎片了.\",\"我们查询一条记录的时候,InnoDB会把整个页的数据都加载到Buffer Pool中,因为索引只能定位到磁盘中的页,不能定位到页中的具体记录,将页加载到 Buffer Pool 后，再通过页里的页目录去定位到某条具体的记录。\"]},\"377\":{\"h\":\"如何管理Buffer Pool?\",\"t\":[\"如何管理空闲页?\",\"Buffer Pool是一片连续的内存空间,还记得我们刚刚说过的MySQL刚开始运行时会加载一些空闲的缓冲页吗?当MySQL运行了一段时间后,这些页面中既有空闲的也还有被使用过的.当我们从磁盘中读取数据时,不会遍历这一片连续的内存空间去找到空闲的缓冲页面换掉,这样效率太低.\",\"所以设计MySQL的人为了尽快找到空闲的缓冲页面,可以直接用链表结构将空闲的缓冲页作为链表节点,这个链表就叫Free 链表.\",\"Free链表上也有控制块,还有一个头节点,该头节点包含链表的头节点地址，尾节点地址，以及当前链表中节点的数量等信息。\",\"Free链表节点是一个个控制块,而每个控制块包含着对应的缓冲页地址,每当需要从磁盘缓存页面时,就从Free链表中取一个空闲的缓存页,并且把该缓存页对应的控制块的信息填上,然后把该缓存页对应的控制块从Free链表中移除.\",\"如何管理脏页?\",\"设计Buffer pool除了能提高读性能,还能提高写性能,当我们需要修改数据时,并不是每次都直接改磁盘数据,而是将Buffer Pool中将该被修改的页面标记为脏页,然后后台线程将脏页写入到磁盘中.那为了能够快速知道哪些缓存页是脏的,于是设计出了Flush链表,它跟Free链表类似,链表的节点也是控制块,区别在于Flush链表都是脏页.\",\"有了 Flush 链表后，后台线程就可以遍历 Flush 链表，将脏页写入到磁盘。\",\"如何提高缓冲命中率?\",\"Buffer Pool大小是有限的,对于频繁访问的数据,我们希望它一直留在Buffer Pool中,而另一些访问很少的数据,也希望淘汰掉,所以LRU算法是最合适的.思路是链表头节点是最近使用的,而链表尾节点是最久最没被使用的.那么当空间不够了就淘汰最久最没被使用的.\",\"简单的 LRU 算法的实现思路是这样的：\",\"当访问的页面不再Buffer Pool中时,就直接把该页面对应的LRU链表节点移动到链表头部,当访问页不在Buffer Pool中时,除了除了要把页放入到 LRU 链表的头部，还要淘汰 LRU 链表末尾的节点。\",\"到这里我们可以知道，Buffer Pool 里有三种页和链表来管理数据。\",\"Free Page（空闲页），表示此页未被使用，位于 Free 链表；\",\"Clean Page（干净页），表示此页已被使用，但是页面未发生修改，位于LRU 链表。\",\"Dirty Page（脏页），表示此页「已被使用」且「已经被修改」，其数据和磁盘上的数据已经不一致。当脏页上的数据写入磁盘后，内存数据和磁盘数据一致，那么该页就变成了干净页。脏页同时存在于 LRU 链表和 Flush 链表。\",\"简单的 LRU 算法并没有被 MySQL 使用，因为简单的 LRU 算法无法避免下面这两个问题：\",\"预读失效；\",\"Buffer Pool 污染；\",\"什么是预读失败?\",\"MySQL 在加载数据页时，会提前把它相邻的数据页一并加载进来，目的是为了减少磁盘 IO。但是可能这些被提前加载进来的数据页，并没有被访问，相当于这个预读是白做了，这个就是预读失效。如果使用简单的 LRU 算法，就会把预读页放到 LRU 链表头部，而当 Buffer Pool空间不够的时候，还需要把末尾的页淘汰掉。\",\"如果这些预读页如果一直不会被访问到，就会出现一个很奇怪的问题，不会被访问的预读页却占用了 LRU 链表前排的位置，而末尾淘汰的页，可能是频繁访问的页，这样就大大降低了缓存命中率。\",\"那怎么解决预读失败而导致的缓存命中率较低的问题呢?\",\"我们不能因为害怕预读失效，而将预读机制去掉，大部分情况下，局部性原理还是成立的。\",\"要避免预读失效带来影响，最好就是让预读的页停留在 Buffer Pool 里的时间要尽可能的短，让真正被访问的页才移动到 LRU 链表的头部，从而保证真正被读取的热数据留在 Buffer Pool 里的时间尽可能长。\",\"那到底怎么才能避免呢？\",\"MySQL 是这样做的，它改进了 LRU 算法，将 LRU 划分了 2 个区域：old 区域 和 young 区域。\",\"young 区域在 LRU 链表的前半部分，old 区域则是在后半部分，如下图：\",\"old 区域占整个 LRU 链表长度的比例可以通过 innodb_old_blocks_pc 参数来设置，默认是 37，代表整个 LRU 链表中 young 区域与 old 区域比例是 63:37。\",\"划分这两个区域后，预读的页就只需要加入到 old 区域的头部，当页被真正访问的时候，才将页插入 young 区域的头部。如果预读的页一直没有被访问，就会从 old 区域移除，这样就不会影响 young 区域中的热点数据。\",\"什么是 Buffer Pool 污染？\",\"当某一个 SQL 语句扫描了大量的数据时，在 Buffer Pool 空间比较有限的情况下，可能会将 Buffer Pool 里的所有页都替换出去，导致大量热数据被淘汰了，等这些热数据又被再次访问的时候，由于缓存未命中，就会产生大量的磁盘 IO，MySQL 性能就会急剧下降，这个过程被称为 Buffer Pool 污染。\",\"注意， Buffer Pool 污染并不只是查询语句查询出了大量的数据才出现的问题，即使查询出来的结果集很小，也会造成 Buffer Pool 污染。\",\"怎么解决出现 Buffer Pool 污染而导致缓存命中率下降的问题？\",\"像前面这种全表扫描的查询，很多缓冲页其实只会被访问一次，但是它却只因为被访问了一次而进入到 young 区域，从而导致热点数据被替换了。\",\"LRU 链表中 young 区域就是热点数据，只要我们提高进入到 young 区域的门槛，就能有效地保证 young 区域里的热点数据不会被替换掉。\",\"MySQL 是这样做的，进入到 young 区域条件增加了一个停留在 old 区域的时间判断。\",\"具体是这样做的，在对某个处在 old 区域的缓存页进行第一次访问时，就在它对应的控制块中记录下来这个访问时间：\",\"如果后续的访问时间与第一次访问的时间在某个时间间隔内，那么该缓存页就不会被从 old 区域移动到 young 区域的头部； 如果后续的访问时间与第一次访问的时间不在某个时间间隔内，那么该缓存页移动到 young 区域的头部； \",\"这个间隔时间是由 innodb_old_blocks_time 控制的，默认是 1000 ms。\",\"也就说，只有同时满足「被访问」与「在 old 区域停留时间超过 1 秒」两个条件，才会被插入到 young 区域头部，这样就解决了 Buffer Pool 污染的问题 。\",\"另外，MySQL 针对 young 区域其实做了一个优化，为了防止 young 区域节点频繁移动到头部。young 区域前面 1/4 被访问不会移动到链表头部，只有后面的 3/4被访问了才会。\",\"脏页什么时候会被刷入磁盘?\",\"引入了 Buffer Pool 后，当修改数据时，首先是修改 Buffer Pool 中数据所在的页，然后将其页设置为脏页，但是磁盘中还是原数据。\",\"因此，脏页需要被刷入磁盘，保证缓存和磁盘数据一致，但是若每次修改数据都刷入磁盘，则性能会很差，因此一般都会在一定时机进行批量刷盘。\",\"可能大家担心，如果在脏页还没有来得及刷入到磁盘时，MySQL 宕机了，不就丢失数据了吗？\",\"这个不用担心，InnoDB 的更新操作采用的是 Write Ahead Log 策略，即先写日志，再写入磁盘，通过 redo log 日志让 MySQL 拥有了崩溃恢复能力。\",\"下面几种情况会触发脏页的刷新：\",\"当 redo log 日志满了的情况下，会主动触发脏页刷新到磁盘；\",\"Buffer Pool 空间不足时，需要将一部分数据页淘汰掉，如果淘汰的是脏页，需要先将脏页同步到磁盘；\",\"MySQL 认为空闲时，后台线程回定期将适量的脏页刷入到磁盘；\",\"MySQL 正常关闭之前，会把所有的脏页刷入到磁盘；\",\"在我们开启了慢 SQL 监控后，如果你发现**「偶尔」会出现一些用时稍长的 SQL**，这可能是因为脏页在刷新到磁盘时可能会给数据库带来性能开销，导致数据库操作抖动。\",\"如果间断出现这种现象，就需要调大 Buffer Pool 空间或 redo log 日志的大小。\"]},\"378\":{\"c\":[\"tutorial\"]},\"379\":{\"c\":[\"mysql\"]},\"380\":{\"h\":\"缓存一致性目录\",\"t\":[\"缓存一致性目录\",\"引入缓存提高性能\",\"缓存利用率与一致性问题\",\"并发引入的一致性问题\",\"删除缓存可以保证一致性吗\",\"如何保证两步都执行成功?\",\"主从库延迟和延迟双删问题\",\"可以做到强一致吗?\",\"总结\"]},\"381\":{\"h\":\"引入缓存提高性能\",\"t\":[\"业务起步节点直接开始操作数据库就好\",\"但随着业务量的增长，你的项目请求量越来越大，这时如果每次都从数据库中读数据，那肯定会有性能问题。\",\"这个阶段通常的做法是，引入「缓存」来提高读性能\",\"最简单直接的方案是数据直接放到到缓存：\",\"数据库的数据，全量刷入缓存（不设置失效时间）\",\"写请求只更新数据库，不更新缓存\",\"启动一个定时任务，定时把数据库的数据，更新到缓存中\",\"但这样会导致一些一致性的问题, 数据库与reids的数据不一致, 有些数据的利用率低也会占用缓存\"]},\"382\":{\"h\":\"缓存利用率与一致性问题\",\"t\":[\"想要缓存利用率「最大化」，我们很容易想到的方案是，缓存中只保留最近访问的「热数据」。但具体要怎么做呢？\",\"我们可以让写操作只写数据库\",\"读请求先读取缓存, 如果缓存不存在, 则去数据库里重建缓存, 同时写入缓存的数据都要设置失效的时间\",\"再来看数据一致性问题\",\"这个时候不能用定时任务去更新缓存了, 我们要修改一条数据时，不仅要更新数据库，也要连带缓存一起更新。\",\"但数据库和缓存都更新，又存在先后问题，那对应的方案就有 2 个：\",\"先更新缓存，后更新数据库\",\"先更新数据库，后更新缓存\",\"先不考虑并发问题，正常情况下，无论谁先谁后，都可以让两者保持一致，但现在我们需要重点考虑「异常」情况。\",\"但不论如何在这两种方案的第二步出问题的情况下都会有数据不一致的问题.\",\"但其实还有一个并发问题也会影响数据一致性\"]},\"383\":{\"h\":\"并发引入的一致性问题\",\"t\":[\"假设我们采用「先更新数据库，再更新缓存」的方案，并且两步都可以「成功执行」的前提下，如果存在并发，情况会是怎样的呢？\",\"有线程 A 和线程 B 两个线程，需要更新「同一条」数据，会发生这样的场景：\",\"相关信息\",\"线程 A 更新数据库（X = 1） 线程 B 更新数据库（X = 2） 线程 B 更新缓存（X = 2） 线程 A 更新缓存（X = 1） \",\"最终 X 的值在缓存中是 1，在数据库中是 2，发生不一致。\",\"也就是说，A 虽然先于 B 发生，但 B 操作数据库和缓存的时间，却要比 A 的时间短，执行时序发生「错乱」，最终这条数据结果是不符合预期的。\",\"相关信息\",\"同样地，采用「先更新缓存，再更新数据库」的方案，也会有类似问题，这里不再详述。 \",\"那怎么解决这个问题呢？这里通常的解决方案是，加「分布式锁」。\",\"两个线程要修改「同一条」数据，每个线程在改之前，先去申请分布式锁，拿到锁的线程才允许更新数据库和缓存，拿不到锁的线程，返回失败，等待下次重试。\",\"这么做的目的，就是为了只允许一个线程去操作数据和缓存，避免并发问题。\",\"除此之外，我们从「缓存利用率」的角度来评估这个方案，也是不太推荐的。\",\"这是因为每次数据发生变更，都「无脑」更新缓存，但是缓存中的数据不一定会被「马上读取」，这就会导致缓存中可能存放了很多不常访问的数据，浪费缓存资源。\",\"而且很多情况下，写到缓存中的值，并不是与数据库中的值一一对应的，很有可能是先查询数据库，再经过一系列「计算」得出一个值，才把这个值才写到缓存中。\",\"由此可见，这种「更新数据库 + 更新缓存」的方案，不仅缓存利用率不高，还会造成机器性能的浪费。\",\"所以此时我们需要考虑另外一种方案：删除缓存。\"]},\"384\":{\"h\":\"删除缓存可以保证一致性吗\",\"t\":[\"删除缓存对应的方案也有 2 种：\",\"先删除缓存，后更新数据库 先更新数据库，后删除缓存 \",\"同样地，先来看「第二步」操作失败的情况。\",\"先删除缓存，后更新数据库，第二步操作失败，数据库没有更新成功，那下次读缓存发现不存在，则从数据库中读取，并重建缓存，此时数据库和缓存依旧保持一致。\",\"但如果是先更新数据库，后删除缓存，第二步操作失败，数据库是最新值，缓存中是旧值，发生不一致。所以，这个方案依旧存在问题。\",\"总之，和前面提到的问题类似，第二步失败依旧有不一致的风险。\",\"好，我们再来看「并发」问题，这个问题是我们需要关注的「重点」。\",\"先删除缓存，后更新数据库\",\"如果有 2 个线程要并发「读写」数据，可能会发生以下场景：\",\"线程 A 要更新 X = 2（原值 X = 1） 线程 A 先删除缓存 线程 B 读缓存，发现不存在，从数据库中读取到旧值（X = 1） 线程 A 将新值写入数据库（X = 2） 线程 B 将旧值写入缓存（X = 1） \",\"最终 X 的值在缓存中是 1（旧值），在数据库中是 2（新值），发生不一致。\",\"可见，先删除缓存，后更新数据库，当发生「读+写」并发时，还是存在数据不一致的情况。\",\"先更新数据库，后删除缓存\",\"依旧是 2 个线程并发「读写」数据：\",\"缓存中 X 不存在（数据库 X = 1） 线程 A 读取数据库，得到旧值（X = 1） 线程 B 更新数据库（X = 2) 线程 B 删除缓存 线程 A 将旧值写入缓存（X = 1） \",\"最终 X 的值在缓存中是 1（旧值），在数据库中是 2（新值），也发生不一致。\",\"这种情况「理论」来说是可能发生的，但实际真的有可能发生吗？\",\"其实概率「很低」，这是因为它必须满足 3 个条件：\",\"缓存刚好已失效 读请求 + 写请求并发 更新数据库 + 删除缓存的时间（步骤 3-4），要比读数据库 + 写缓存时间短（步骤 2 和 5） \",\"仔细想一下，条件 3 发生的概率其实是非常低的。\",\"因为写数据库一般会先「加锁」，所以写数据库，通常是要比读数据库的时间更长的。\",\"这么来看，「先更新数据库 + 再删除缓存」的方案，是可以保证数据一致性的。\",\"所以，我们应该采用这种方案，来操作数据库和缓存。\",\"好，解决了并发问题，我们继续来看前面遗留的，第二步执行「失败」导致数据不一致的问题。\"]},\"385\":{\"h\":\"如何保证两步都执行成功?\",\"t\":[\"前面我们分析到，无论是更新缓存还是删除缓存，只要第二步发生失败，那么就会导致数据库和缓存不一致。\",\"保证第二步成功执行，就是解决问题的关键。\",\"想一下，程序在执行过程中发生异常，最简单的解决办法是什么？\",\"答案是：重试。\",\"是的，其实这里我们也可以这样做。\",\"无论是先操作缓存，还是先操作数据库，但凡后者执行失败了，我们就可以发起重试，尽可能地去做「补偿」。\",\"那这是不是意味着，只要执行失败，我们「无脑重试」就可以了呢？\",\"答案是否定的。现实情况往往没有想的这么简单，失败后立即重试的问题在于：\",\"立即重试很大概率「还会失败」 「重试次数」设置多少才合理？ 重试会一直「占用」这个线程资源，无法服务其它客户端请求 \",\"看到了么，虽然我们想通过重试的方式解决问题，但这种「同步」重试的方案依旧不严谨。\",\"那更好的方案应该怎么做？\",\"答案是：异步重试。什么是异步重试？\",\"其实就是把重试请求写到「消息队列」中，然后由专门的消费者来重试，直到成功。\",\"或者更直接的做法，为了避免第二步执行失败，我们可以把操作缓存这一步，直接放到消息队列中，由消费者来操作缓存。\",\"到这里你可能会问，写消息队列也有可能会失败啊？而且，引入消息队列，这又增加了更多的维护成本，这样做值得吗？\",\"这个问题很好，但我们思考这样一个问题：如果在执行失败的线程中一直重试，还没等执行成功，此时如果项目「重启」了，那这次重试请求也就「丢失」了，那这条数据就一直不一致了。\",\"所以，这里我们必须把重试消息或第二步操作放到另一个「服务」中，这个服务用「消息队列」最为合适。这是因为消息队列的特性，正好符合我们的需求：\",\"消息队列保证可靠性：写到队列中的消息，成功消费之前不会丢失（重启项目也不担心） 消息队列保证消息成功投递：下游从队列拉取消息，成功消费后才会删除消息，否则还会继续投递消息给消费者（符合我们重试的需求） \",\"至于写队列失败和消息队列的维护成本问题：\",\"写队列失败：操作缓存和写消息队列，「同时失败」的概率其实是很小的 维护成本：我们项目中一般都会用到消息队列，维护成本并没有新增很多 \",\"所以，引入消息队列来解决这个问题，是比较合适的。\",\"那如果你确实不想在应用中去写消息队列，是否有更简单的方案，同时又可以保证一致性呢？\",\"方案还是有的，这就是近几年比较流行的解决方案：订阅数据库变更日志，再操作缓存。\",\"具体来讲就是，我们的业务应用在修改数据时，「只需」修改数据库，无需操作缓存。\",\"那什么时候操作缓存呢？这就和数据库的「变更日志」有关了。\",\"拿 MySQL 举例，当一条数据发生修改时，MySQL 就会产生一条变更日志（Binlog），我们可以订阅这个日志，拿到具体操作的数据，然后再根据这条数据，去删除对应的缓存。\",\"订阅变更日志，目前也有了比较成熟的开源中间件，例如阿里的 canal，使用这种方案的优点在于：\",\"无需考虑写消息队列失败情况：只要写 MySQL 成功，Binlog 肯定会有 自动投递到下游队列：canal 自动把数据库变更日志「投递」给下游的消息队列 \",\"当然，与此同时，我们需要投入精力去维护 canal 的高可用和稳定性。\",\"如果你有留意观察很多数据库的特性，就会发现其实很多数据库都逐渐开始提供「订阅变更日志」的功能了，相信不远的将来，我们就不用通过中间件来拉取日志，自己写程序就可以订阅变更日志了，这样可以进一步简化流程。 \",\"至此，我们可以得出结论，想要保证数据库和缓存一致性，推荐采用「先更新数据库，再删除缓存」方案，并配合「消息队列」或「订阅变更日志」的方式来做。\"]},\"386\":{\"h\":\"主从库延迟和延迟双删问题\",\"t\":[\"到这里，还有 2 个问题，是我们没有重点分析过的。\",\"第一个问题，还记得前面讲到的「先删除缓存，再更新数据库」导致不一致的场景么？\",\"这里我再把例子拿过来让你复习一下：\",\"2 个线程要并发「读写」数据，可能会发生以下场景：\",\"线程 A 要更新 X = 2（原值 X = 1） 线程 A 先删除缓存 线程 B 读缓存，发现不存在，从数据库中读取到旧值（X = 1） 线程 A 将新值写入数据库（X = 2） 线程 B 将旧值写入缓存（X = 1） \",\"最终 X 的值在缓存中是 1（旧值），在数据库中是 2（新值），发生不一致。\",\"第二个问题：是关于「读写分离 + 主从复制延迟」情况下，缓存和数据库一致性的问题。\",\"如果使用「先更新数据库，再删除缓存」方案，其实也发生不一致：\",\"线程 A 更新主库 X = 2（原值 X = 1） 线程 A 删除缓存 线程 B 查询缓存，没有命中，查询「从库」得到旧值（从库 X = 1） 从库「同步」完成（主从库 X = 2） 线程 B 将「旧值」写入缓存（X = 1） \",\"最终 X 的值在缓存中是 1（旧值），在主从库中是 2（新值），也发生不一致。\",\"看到了么？这 2 个问题的核心在于：缓存都被回种了「旧值」。\",\"那怎么解决这类问题呢？\",\"最有效的办法就是，把缓存删掉。\",\"但是，不能立即删，而是需要「延迟删」，这就是业界给出的方案：缓存延迟双删策略。\",\"按照延时双删策略，这 2 个问题的解决方案是这样的：\",\"解决第一个问题：在线程 A 删除缓存、更新完数据库之后，先「休眠一会」，再「删除」一次缓存。\",\"解决第二个问题：线程 A 可以生成一条「延时消息」，写到消息队列中，消费者延时「删除」缓存。\",\"这两个方案的目的，都是为了把缓存清掉，这样一来，下次就可以从数据库读取到最新值，写入缓存。\",\"但问题来了，这个「延迟删除」缓存，延迟时间到底设置要多久呢？\",\"问题1：延迟时间要大于「主从复制」的延迟时间 问题2：延迟时间要大于线程 B 读取数据库 + 写入缓存的时间 \",\"但是，这个时间在分布式和高并发场景下，其实是很难评估的。\",\"很多时候，我们都是凭借经验大致估算这个延迟时间，例如延迟 1-5s，只能尽可能地降低不一致的概率。\",\"所以你看，采用这种方案，也只是尽可能保证一致性而已，极端情况下，还是有可能发生不一致。\",\"所以实际使用中，我还是建议你采用「先更新数据库，再删除缓存」的方案，同时，要尽可能地保证「主从复制」不要有太大延迟，降低出问题的概率。\"]},\"387\":{\"h\":\"可以做到强一致吗?\",\"t\":[\"看到这里你可能会想，这些方案还是不够完美，我就想让缓存和数据库「强一致」，到底能不能做到呢？\",\"其实很难。\",\"要想做到强一致，最常见的方案是 2PC、3PC、Paxos、Raft 这类一致性协议，但它们的性能往往比较差，而且这些方案也比较复杂，还要考虑各种容错问题。\",\"相反，这时我们换个角度思考一下，我们引入缓存的目的是什么？\",\"没错，性能。\",\"一旦我们决定使用缓存，那必然要面临一致性问题。性能和一致性就像天平的两端，无法做到都满足要求。\",\"而且，就拿我们前面讲到的方案来说，当操作数据库和缓存完成之前，只要有其它请求可以进来，都有可能查到「中间状态」的数据。\",\"所以如果非要追求强一致，那必须要求所有更新操作完成之前期间，不能有「任何请求」进来。\",\"虽然我们可以通过加「分布锁」的方式来实现，但我们也要付出相应的代价，甚至很可能会超过引入缓存带来的性能提升。\",\"所以，既然决定使用缓存，就必须容忍「一致性」问题，我们只能尽可能地去降低问题出现的概率。\",\"​同时我们也要知道，缓存都是有「失效时间」的，就算在这期间存在短期不一致，我们依旧有失效时间来兜底，这样也能达到最终一致。\"]},\"388\":{\"h\":\"总结\",\"t\":[\"好了，总结一下这篇文章的重点。\",\"1、想要提高应用的性能，可以引入「缓存」来解决\",\"2、引入缓存后，需要考虑缓存和数据库一致性问题，可选的方案有：「更新数据库 + 更新缓存」、「更新数据库 + 删除缓存」\",\"3、更新数据库 + 更新缓存方案，在「并发」场景下无法保证缓存和数据一致性，解决方案是加「分布锁」，但这种方案存在「缓存资源浪费」和「机器性能浪费」的情况\",\"4、采用「先删除缓存，再更新数据库」方案，在「并发」场景下依旧有不一致问题，解决方案是「延迟双删」，但这个延迟时间很难评估\",\"5、采用「先更新数据库，再删除缓存」方案，为了保证两步都成功执行，需配合「消息队列」或「订阅变更日志」的方案来做，本质是通过「重试」的方式保证数据最终一致\",\"6、采用「先更新数据库，再删除缓存」方案，「读写分离 + 主从库延迟」也会导致缓存和数据库不一致，缓解此问题的方案是「延迟双删」，凭借经验发送「延迟消息」到队列中，延迟删除缓存，同时也要控制主从库延迟，尽可能降低不一致发生的概率\",\"参考\"]},\"389\":{\"c\":[\"tutorial\"]},\"390\":{\"c\":[\"redis\",\"consistency\"]},\"391\":{\"h\":\"Redis 学习笔记\"},\"392\":{\"h\":\"数据结构与对象\"},\"393\":{\"h\":\"SDS(简单动态字符串)\",\"t\":[\"相关信息\",\"SDS(简单动态字符串), 是对C语言字符串封装了一层\",\"举个例子\",\"set msg \\\"hello world\\\" OK \",\"Redis会新增一个键值对, 其中: 键值对键是保存msg的SDS, 值也是一个字符串对象SDS\",\"struct sdshdr { //记录buf数组中已使用字节的数量 等于SDS所保存字符串的长度 int len; //记录buf数组中未使用字节的数量 int free; //字节数组，用于保存字符串 char buf[]; }; \",\"其中SDS保留了C字符串中最后一个字符是'\\\\0'的惯例, 目的是SDS可以直接重用C字符串函数库里的函数.\",\"好处:\",\"因为SDS内部有个len属性, 所以如果想获取字符串长度就直接返回len, 时间复杂度是O(1), 但如果用原生strlen函数 时间复杂度就是O(n)了\",\"SDS不会造成缓冲区溢出,因为 SDS 在拼接字符串之前会检查 SDS 空间是否满足要求，如果空间不够会自动扩容，所以不会导致缓冲区溢出的问题, 可以减少修改字符串带来的内存重分配次数,空间预分配:当append时当SDS长度小于1MB,则再多分配一倍的空间；若大于1MB, 则多分配1MB的空间；惰性空间释放, 当需要减少SDS的空间时, 不会立刻减少, 先更新free, 这样可以避免再次分配带来的性能损耗, 当然也有真正的释放内存空间的API.\",\"SDS 不仅可以保存文本数据，还可以保存二进制数据。因为 SDS 使用 len 属性的值而不是空字符来判断字符串是否结束，并且 SDS 的所有 API 都会以处理二进制的方式来处理 SDS 存放在 buf[] 数组里的数据。所以 SDS 不光能存放文本数据，而且能保存图片、音频、视频、压缩文件这样的二进制数据。\"]},\"394\":{\"h\":\"链表\",\"t\":[\"链表在Redis中的应用非常广泛，比如列表键的底层实现之一就是链表。当一个列表键包含了数量比较多的元素，又或者列表中包含的元素都是比较长的字符串时，Redis就会使用链表作为列表键的底层实现。\",\"每个链表节点是\",\"typedef struct listNode { struct listNode * prev; struct listNode * next; void * value; }listNode; \",\"多个listNode可以通过prev和next指针组成双端链表。\",\"typedef struct list { listNode * head; listNode * tail; // 链表所包含的节点数量 unsigned long len; // 节点值复制函数 void *(*dup)(void *ptr); // 节点值释放函数 void (*free)(void *ptr); // 节点值对比函数 int (*match)(void *ptr,void *key); } list; \",\"链表的特性: 双端, 无环, 带表头指针和表尾指针, 带链表长度计数器\",\"多态：链表节点使用void*指针来保存节点值，并且可以通过list结构的dup、free、match三个属性为节点值设置类型特定函数，所以链表可以用于保存各种不同类型的值。\"]},\"395\":{\"h\":\"字典\",\"t\":[\"Redis的字典用哈希表来实现, 一个哈希表里面有多个哈希表节点, 而每个哈希表节点就保存了字典中的多个键值对\",\"哈希表实现\",\"typedef struct dictht { //哈希表数组 dictEntry **table; //哈希表大小 unsigned long size; //哈希表大小掩码，用于计算索引值 //总是等于size-1 unsigned long sizemask; //该哈希表已有节点的数量 unsigned long used; } dictht; \",\"table属性是一个数组,数组每个元素指向的是dictEntry结构的指针, 每个dictEntry结构都保存着一个键值对. size属性保存哈希表的大小, 就是table数目的大小 used保存总共的键值对个数 sizemask属性的值总是等于size-1，这个属性和哈希值一起决定一个键应该被放到table数组的哪个索引上面。\",\"哈希节点\",\"typedef struct dictEntry { //键 void *key; //值 union{ void *val; uint64_tu64; int64_ts64; } v; //指向下个哈希表节点，形成链表 struct dictEntry *next; } dictEntry; \",\"next是一个指针,这个指针可以将哈希值相同的键值对连接在一起, 来解决哈系碰撞问题.\",\"字典实现\",\"typedef struct dict { //类型特定函数 dictType *type; //私有数据 void *privdata; //哈希表 dictht ht[2]; // rehash索引 //当rehash 不在进行时，值为-1 int rehashidx; /* rehashing not in progress if rehashidx == -1 */ } dict; \",\"type属性和privdata属性是针对不同类型的键值对，为创建多态字典而设置的： type属性是一个指向dictType结构的指针，每个dictType结构保存了一簇用于操作特定类型键值对的函数，Redis会为用途不同的字典设置不同的类型特定函数\",\"而privdata属性则保存了需要传给那些类型特定函数的可选参数\",\"typedef struct dictType { //计算哈希值的函数 unsigned int (*hashFunction)(const void *key); //复制键的函数 void *(*keyDup)(void *privdata, const void *key); //复制值的函数 void *(*valDup)(void *privdata, const void *obj); //对比键的函数 int (*keyCompare)(void *privdata, const void *key1, const void *key2); //销毁键的函数 void (*keyDestructor)(void *privdata, void *key); //销毁值的函数 void (*valDestructor)(void *privdata, void *obj); } dictType; \",\"ht 属 性 是 一 个 包 含 两 个 项 的 数 组 ， 数 组 中 的 每 个 项 都 是 一 个dictht哈希表，一般情况下，字典只使用ht[0]哈希表，ht[1]哈希表只会在对ht[0]哈希表进行rehash时使用。\",\"除了ht[1]之外，另一个和rehash有关的属性就是rehashidx，它记录了rehash目前的进度，如果目前没有在进行rehash，那么它的值为-1。\",\"rehash\",\"当哈希表的负载因子不断变大, 就需要rehash 1）为字典的ht[1]哈希表分配空间，这个哈希表的空间大小取决于 要 执 行 的 操 作 ， 以 及 ht[0] 当 前 包 含 的 键 值 对 数 量 （ 也 即 是ht[0].used属性的值）：\",\"如果执行的是扩展操作，那么ht[1]的大小为第一个大于等于ht[0].used*2的2^n（2的n次方幂）；\",\"如果执行的是收缩操作，那么ht[1]的大小为第一个大于等于ht[0].used的2^n。 2）将保存在ht[0]中的所有键值对rehash到ht[1]上面：rehash指的是重新计算键的哈希值和索引值，然后将键值对放置到ht[1]哈希表的指定位置上。\",\"哈希表的扩展与收缩\",\"当以下条件中的任意一个被满足时，程序会自动开始对哈希表执行扩展操作：\",\"1）服务器目前没有在执行BGSAVE命令或者BGREWRITEAOF命令，并且哈希表的负载因子大于等于1。 2）服务器目前正在执行BGSAVE命令或者BGREWRITEAOF命令，并且哈希表的负载因子大于等于5。\",\"负载因子=哈希表已保存节点数量/哈希表大小 load_factor = ht[0].used / ht[0].size\",\"当哈希表的负载因子小于0.1时，程序自动开始对哈希表执行收缩操作。\"]},\"396\":{\"h\":\"渐进式rehash\",\"t\":[\"当哈希表里的数据很多时, 一下子瞬间rehash可能导致性能问题, 所以redis采用渐进式rehash\",\"rehash 过程\",\"1）为ht[1]分配空间，让字典同时持有ht[0]和ht[1]两个哈希表。 2）在字典中维持一个索引计数器变量rehashidx，并将它的值设置为0，表示rehash工作正式开始。 3）在rehash进行期间，每次对字典执行添加、删除、查找或者更新操作时，程序除了执行指定的操作以外，还会顺带将ht[0]哈希表在rehashidx索引上的所有键值对rehash到ht[1]，当rehash工作完成之后，程序将rehashidx属性的值增一。 4）随着字典操作的不断执行，最终在某个时间点上，ht[0]的所有键值对都会被rehash至ht[1]，这时程序将rehashidx属性的值设为-1，表示rehash操作已完成。\",\"因为在进行渐进式rehash的过程中，字典会同时使用ht[0]和ht[1] 两 个 哈 希 表 ， 所 以 在 渐 进 式 rehash 进 行 期 间 ， 字 典 的 删 除（delete）、查找（find）、更新（update）等操作会在两个哈希表上进行。例如，要在字典里面查找一个键的话，程序会先在ht[0]里面进行查找，如果没找到的话，就会继续到ht[1]里面进行查找，诸如此类。\",\"另外，在渐进式rehash执行期间，新添加到字典的键值对一律会被保存到ht[1]里面，而ht[0]则不再进行任何添加操作，这一措施保证了ht[0]包含的键值对数量会只减不增，并随着rehash操作的执行而最终变成空表\"]},\"397\":{\"h\":\"跳表\",\"t\":[\"相关信息\",\"跳表是一个数据结构, 通过在每个节点内维持多个指向其他节点的指针, 从而达到快速访问节点的目的, 跳跃表支持平均O（logN）、最坏O（N）复杂度的节点查找，还可以通过顺序性操作来批量处理节点。\",\"Redis只在两个地方用到了跳跃表，一个是实现有序集合键，另一个是在集群节点中用作内部数据结构. 跳表节点的属性\",\"typedef struct zskiplistNode { //Zset 对象的元素值 sds ele; //元素权重值 double score; //后向指针 struct zskiplistNode *backward; //节点的level数组，保存每层上的前向指针和跨度 struct zskiplistLevel { struct zskiplistNode *forward; unsigned long span; } level[]; } zskiplistNode; \",\"level层, 指向多个元素, 每个元素都可以访问其他节点, 程序可以通过层快速定位元素每次创建一个新跳跃表节点的时候，程序都根据幂次定律随机生成一个介于1和32之间的值作为level数组的大小，这个大小就是层的“高度”。\",\"前进指针, 每个层之间都有一个指向表尾方向的前进指针, 用于从表头向表尾方向遍历节点, 层的跨度span属性记录了两个节点之间的距离\",\"跳表属性\",\"typedef struct zskiplist { struct zskiplistNode *header, *tail; unsigned long length; int level; } zskiplist; \"]},\"398\":{\"h\":\"整数集合\",\"t\":[\"整数集合是集合键的实现之一, 当一个集合只包含整数值元素，并且这个集合的元素数量不多时，Redis就会使用整数集合作为集合键的底层实现。\",\"typedef struct intset { //编码方式 uint32_t encoding; //集合包含的元素数量 uint32_t length; //保存元素的数组 int8_t contents[]; } intset; \",\"整数集合（intset）是Redis用于保存整数值的集合抽象数据结构，它可以保存类型为int16_t、int32_t或者int64_t的整数值，并且保证集合中不会出现重复元素。\",\"contents数组是整数集合的底层实现, 虽然intset结构将contents属性声明为int8_t类型的数组，但实际上contents数组并不保存任何int8_t类型的值，contents数组的真正类型取决于encoding属性的值：\",\"encoding的属性有INTSET_ENC_INT16, INTSET_ENC_INT32, INTSET_ENC_INT64, 分别将contents的属性设置为int16_t, int32_t, int64_t\",\"升级\",\"每当我们要将一个新元素添加到整数集合里面，并且新元素的类型比整数集合现有所有元素的类型都要长时，整数集合需要先进行升级（upgrade），然后才能将新元素添加到整数集合里面。\",\"因为引发升级的新元素的长度总是比整数集合现有所有元素的长度都大，所以这个新元素的值要么就大于所有现有元素，要么就小于所有现有元素：\",\"在新元素小于所有现有元素的情况下，新元素会被放置在底层数组的最开头（索引0）；\",\"在新元素大于所有现有元素的情况下，新元素会被放置在底层数组的最末尾（索引length-1）。\",\"升级的好处:提升灵活性, 节省内存\",\"不支持降级\"]},\"399\":{\"h\":\"压缩列表\",\"t\":[\"压缩列表是Redis为了节约内存而开发的，是由一系列特殊编码的连续内存块组成的顺序型（sequential）数据结构。一个压缩列表可以包含任意多个节点（entry），每个节点可以保存一个字节数组或者一个整数值。\",\"压缩列表的组成\",\"压缩列表在表头有三个字段： zlbytes，记录整个压缩列表占⽤对内存字节数； zltail，记录压缩列表「尾部」节点距离起始地址由多少字节，也就是列表尾的偏移量； zllen，记录压缩列表包含的节点数量； zlend，标记压缩列表的结束点，固定值 0xFF（⼗进制255）。 \",\"在压缩列表中，如果我们要查找定位第⼀个元素和最后⼀个元素，可以通过表头三个字段的⻓度直接定位，复杂度是 O(1)。⽽查找其他元素时，就没有这么⾼效了，只能逐个查找，此时的复杂度就是 O(N)了，因此压缩列表不适合保存过多的元素\",\"压缩列表节点包含三部分内容：prevlen，记录了「前⼀个节点」的⻓度；encoding，记录了当前节点实际数据的类型以及⻓度；data，记录了当前节点的实际数据；\",\"连锁更新\",\"压缩列表新增某个元素或修改某个元素时，如果空间不不够，压缩列表占⽤的内存空间就需要重新分配。⽽当新插⼊的元素较⼤时，可能会导致后续元素的 prevlen 占⽤空间都发⽣变化，从⽽引起「连锁更新」问题，导致每个元素的空间都要重新分配，造成访问压缩列表性能的下降。\"]},\"400\":{\"h\":\"对象\",\"t\":[\"Redis针对前面所说的类型建立了一个对象系统, 这个系列包括字符串对象、列表对象、哈希对象、集合对象和有序集合对象这五种类型的对象，每种对象都用到了至少一种我们前面所介绍的数据结构。\",\"Redis的总对象类型是\",\"typedef struct redisObject { //类型 unsigned type:4; //编码 unsigned encoding:4; //指向底层实现数据结构的指针 void *ptr; // ... } robj; \",\"type类型记录了对象的类型, 这个熟悉可以是REDIS_STRING, REDIS_LIST...\",\"encoding属性记录了对象底层所使用的编码, 比如list的底层对象是list或者quicklist, hash的底层对象是ziplist或hash...\"]},\"401\":{\"h\":\"5种常见的数据类型\"},\"402\":{\"h\":\"String内部实现\",\"t\":[\"String的内部实现是 SDS(简单动态字符串), 是对C语言字符串封装了一层\",\"举个例子\",\"set msg \\\"hello world\\\" OK \",\"字符串对象的编码可以是int、raw或者embstr。\",\"Redis会新增一个键值对, 其中: 键值对键是保存msg的SDS, 值也是一个字符串对象SDS\",\"struct sdshdr { //记录buf数组中已使用字节的数量 等于SDS所保存字符串的长度 int len; //记录buf数组中未使用字节的数量 int free; //字节数组，用于保存字符串 char buf[]; }; \",\"其中SDS保留了C字符串中最后一个字符是'\\\\0'的惯例, 目的是SDS可以直接重用C字符串函数库里的函数.\",\"好处:\",\"因为SDS内部有个len属性, 所以如果想获取字符串长度就直接返回len, 时间复杂度是O(1), 但如果用原生strlen函数 时间复杂度就是O(n)了\",\"SDS不会造成缓冲区溢出,因为 SDS 在拼接字符串之前会检查 SDS 空间是否满足要求，如果空间不够会自动扩容，所以不会导致缓冲区溢出的问题, 可以减少修改字符串带来的内存重分配次数,空间预分配:当append时当SDS长度小于1MB,则再多分配一倍的空间；若大于1MB, 则多分配1MB的空间；惰性空间释放, 当需要减少SDS的空间时, 不会立刻减少, 先更新free, 这样可以避免再次分配带来的性能损耗, 当然也有真正的释放内存空间的API.\",\"SDS 不仅可以保存文本数据，还可以保存二进制数据。因为 SDS 使用 len 属性的值而不是空字符来判断字符串是否结束，并且 SDS 的所有 API 都会以处理二进制的方式来处理 SDS 存放在 buf[] 数组里的数据。所以 SDS 不光能存放文本数据，而且能保存图片、音频、视频、压缩文件这样的二进制数据。\"]},\"403\":{\"h\":\"命令\",\"t\":[\"命令\",\"描述\",\"SET KEY VALUE\",\"设置指定 KEY 的值\",\"GET KEY\",\"获取指定 KEY 的值\",\"GETRANGE KEY start end\",\"返回 KEY 中字符串值的子字符\",\"GETSET KEY value\",\"将给定 KEY 的值设为 value ，并返回 KEY 的旧值\",\"GETBIT KEY offset\",\"对 KEY 所储存的字符串值，获取指定偏移量上的位\",\"MGET KEY1 [KEY2…]\",\"获取所有(一个或多个)给定 KEY 的值\",\"SETBIT KEY offset value\",\"对 KEY 所储存的字符串值，设置或清除指定偏移量上的位\",\"SETEX KEY seconds value\",\"将值 value 关联到 KEY ，并将 KEY 的过期时间设为 seconds (以秒为单位)\",\"SETNX KEY value\",\"只有在 KEY 不存在时设置 KEY 的值\",\"SETRANGE KEY offset value\",\"用 value 参数覆写给定 KEY 所储存的字符串值，从偏移量 offset 开始\",\"STRLEN KEY\",\"返回 KEY 所储存的字符串值的长度\",\"MSET KEY value KEY value …\",\"同时设置一个或多个 KEY-value 对\",\"MSETNX KEY value KEY value …\",\"同时设置一个或多个 KEY-value 对，当且仅当所有给定 KEY 都不存在\",\"PSETEX KEY milliseconds value\",\"这个命令和 SETEX 命令相似，但它以毫秒为单位设置 KEY 的生存时间\",\"INCR KEY\",\"将 KEY 中储存的数字值增一\",\"INCRBY KEY increment\",\"将 KEY 所储存的值加上给定的增量值 increment\",\"INCRBYFLOAT KEY increment\",\"将 KEY 所储存的值加上给定的浮点增量值 increment\",\"DECR KEY\",\"将 KEY 中储存的数字值减一\",\"DECRBY KEY decrement\",\"KEY 所储存的值减去给定的减量值 decrement\",\"APPEND KEY value\",\"如果 KEY 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 KEY 原来值的末尾\",\"BITCOUNT KEY START END\",\"计算给定字符串中，被设置为 1 的比特位的数量\",\"BITOP OPERATION DESTKEY KEY KEY …\",\"对二进制位进行操作\"]},\"404\":{\"h\":\"List 类型内部实现\",\"t\":[\"List的内部实现是双向链表或者压缩列表\",\"如果列表的元素个数小于 512 个（默认值，可由 list-max-ziplist-entries 配置），列表每个元素的值都小于 64 字节（默认值，可由 list-max-ziplist-value 配置），Redis 会使用压缩列表作为 List 类型的底层数据结构；\",\"如果列表的元素不满足上面的条件，Redis 会使用双向链表作为 List 类型的底层数据结构；\",\"但是在 Redis 3.2 版本之后，List 数据类型底层数据结构就只由 quicklist 实现了，替代了双向链表和压缩列表。\"]},\"405\":{\"h\":\"命令\",\"t\":[\"命令\",\"描述\",\"LPUSH KEY value1 value2\",\"将一个或多个值插入到列表头部。\",\"LPUSHX KEY value\",\"将一个值插入到已存在的列表头部。\",\"RPUSH KEY value1 value2\",\"将一个或多个值插入到列表尾部。\",\"RPUSHX KEY value\",\"将一个值插入到已存在的列表尾部。\",\"LSET KEY index value\",\"将列表索引 index 位置的值设置为 value。\",\"LINSERT KEY BEFORE AFTER pivot value\",\"将值 value 插入到列表 KEY 当中，位于值 pivot 之前或之后。\",\"LPOP KEY\",\"获取并移除列表的第一个元素。\",\"RPOP KEY\",\"获取并移除列表的最后一个元素。\",\"BLPOP KEY1 KEY2 timeout\",\"获取并移除列表的第一个元素， 如果列表没有元素会阻塞列表直到超时或有元素可弹出为止。\",\"BRPOP KEY1 KEY2 timeout\",\"获取并移除列表的最后一个元素， 如果列表没有元素会阻塞列表直到超时或有元素可弹出为止。\",\"RPOPLPUSH source destination\",\"移除 source 列表的最后一个元素，并将该元素添加到另一个列表 destination 的开头并返回。\",\"BRPOPLPUSH source destination timeout\",\"1. BRPOPLPUSH 是 RPOPLPUSH 的阻塞版本。2. 当 source 有数据时，BRPOPLPUSH 的表现与 RPOPLPUSH 完全一样。3. 当 source 是空时，会阻塞列表直到超时或有元素可弹出为止。\",\"LLEN KEY\",\"获取列表长度。\",\"LINDEX KEY index\",\"通过索引获取列表中的元素。\",\"LREM KEY count value\",\"从列表中移除 count 个值与 value 相等的元素。\",\"LTRIM KEY start stop\",\"对一个列表进行修剪(trim)，只保留列表中的 start 和 stop 之间的元素。\",\"LRANGE KEY start stop\",\"获取列表 start 和 stop 之间 的元素。\"]},\"406\":{\"h\":\"Hash 类型内部实现\",\"t\":[\"Hash 类型的底层数据结构是由压缩列表或哈希表实现的：\",\"如果哈希类型元素个数小于 512 个（默认值，可由 hash-max-ziplist-entries 配置），所有值小于 64 字节（默认值，可由 hash-max-ziplist-value 配置）的话，Redis 会使用压缩列表作为 Hash 类型的底层数据结构；\",\"如果哈希类型元素不满足上面条件，Redis 会使用哈希表作为 Hash 类型的底层数据结构\",\"在 Redis 7.0 中，压缩列表数据结构已经废弃了，交由 listpack 数据结构来实现了。\"]},\"407\":{\"h\":\"命令\",\"t\":[\"命令\",\"描述\",\"HSET KEY field value\",\"将哈希表 KEY 中的字段 field 的值设为 value 。\",\"HSETNX KEY field value\",\"只有在字段 field 不存在时，设置哈希表字段的值。\",\"HMSET KEY field1 value1 field2 value2\",\"同时将多个 field-value (域-值)对设置到哈希表 KEY 中。\",\"HGET KEY field\",\"获取存储在哈希表中指定字段的值。\",\"HGETALL KEY\",\"获取在哈希表中指定 KEY 的所有字段和值。\",\"HMGET KEY field1 field2\",\"获取所有给定字段的值。\",\"HKEYS KEY\",\"获取所有哈希表中的字段。\",\"HVALS KEY\",\"获取哈希表中所有值。\",\"HLEN KEY\",\"获取哈希表中字段的数量。\",\"HINCRBY KEY field increment\",\"为哈希表 KEY 中的指定字段的整数值加上增量 increment 。\",\"HINCRBYFLOAT KEY field increment\",\"为哈希表 KEY 中的指定字段的浮点数值加上增量 increment 。\",\"HDEL KEY field1 field2\",\"删除一个或多个哈希表字段。\",\"HEXISTS KEY field\",\"查看哈希表 KEY 中，指定的字段是否存在。\",\"HSCAN KEY cursor [MATCH pattern] [COUNT count]\",\"迭代哈希表中的键值对，类似 SCAN 命令。\"]},\"408\":{\"h\":\"Set 类型内部实现\",\"t\":[\"Set 类型的底层数据结构是由哈希表或整数集合实现的：\",\"如果集合中的元素都是整数且元素个数小于 512 （默认值，set-maxintset-entries配置）个，Redis 会使用整数集合作为 Set 类型的底层数据结构；\",\"如果集合中的元素不满足上面条件，则 Redis 使用哈希表作为 Set 类型的底层数据结构。\",\"当以哈希表存储时, 值为空, key就是所有的set的值\"]},\"409\":{\"h\":\"命令\",\"t\":[\"命令\",\"描述\",\"SADD key member1 member2\",\"向集合添加一个或多个成员。\",\"SCARD\",\"key\",\"SDIFF key1 key2\",\"返回给定所有集合的差集。\",\"SDIFFSTORE destination key1 key2\",\"返回给定所有集合的差集并存储在 destination 中。\",\"SINTER key1 key2\",\"返回给定所有集合的交集。\",\"SINTERSTORE destination key1 key2\",\"返回给定所有集合的交集并存储在 destination 中。\",\"SISMEMBER key member\",\"判断 member 元素是否是集合 key 的成员。\",\"SMEMBERS key\",\"返回集合中的所有成员。\",\"SMOVE source destination member\",\"将 member 元素从 source 集合移动到 destination 集合。\",\"SPOP key\",\"移除并返回集合中的一个随机元素。\",\"SRANDMEMBER key count\",\"返回集合中一个或多个随机数。\",\"SREM key member1 member2\",\"移除集合中一个或多个成员。\",\"SUNION key1 key2\",\"返回所有给定集合的并集。\",\"SUNIONSTORE destination key1 key2\",\"所有给定集合的并集存储在 destination 集合中。\",\"SSCAN key cursor MATCH pattern COUNT count\",\"迭代集合中的元素。\"]},\"410\":{\"h\":\"ZSet 类型内部实现\",\"t\":[\"Zset 类型的底层数据结构是由压缩列表或跳表实现的：\",\"如果有序集合的元素个数小于 128 个，并且每个元素的值小于 64 字节时，Redis 会使用压缩列表作为 Zset 类型的底层数据结构；\",\"如果有序集合的元素不满足上面的条件，Redis 会使用跳表作为 Zset 类型的底层数据结构；\",\"在 Redis 7.0 中，压缩列表数据结构已经废弃了，交由 listpack 数据结构来实现了。\",\"命令\",\"- 描述\",\"ZADD KEY score1 member1 [score2 member2]\",\"向有序集合添加一个或多个成员，或者更新已存在成员的分数。\",\"ZCARD KEY\",\"获取有序集合的成员数。\",\"ZCOUNT KEY min max\",\"计算在有序集合中指定区间分数的成员数。\",\"ZINCRBY KEY increment member\",\"有序集合中对指定成员的分数加上增量 increment 。\",\"ZINTERSTORE destination num KEY [KEY …]\",\"计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 KEY 中。\",\"ZLEXCOUNT KEY min max\",\"在有序集合中计算指定字典区间内成员数量。\",\"ZRANGE KEY start stop [WITHSCORES]\",\"通过索引区间返回有序集合成指定区间内的成员。\",\"ZRANGEBYLEX KEY min max [LIMIT offset count]\",\"通过字典区间返回有序集合的成员。\",\"ZRANGEBYSCORE KEY min max [WITHSCORES] [LIMIT]\",\"通过分数返回有序集合指定区间内的成员。\",\"ZRANK KEY member\",\"返回有序集合中指定成员的索引。\",\"ZREM KEY member [member …]\",\"移除有序集合中的一个或多个成员。\",\"ZREMRANGEBYLEX KEY min max\",\"移除有序集合中给定的字典区间的所有成员。\",\"ZREMRANGEBYRANK KEY start stop\",\"移除有序集合中给定的排名区间的所有成员。\",\"ZREMRANGEBYSCORE KEY min max\",\"移除有序集合中给定的分数区间的所有成员。\",\"ZREVRANGE KEY start stop [WITHSCORES]\",\"返回有序集中指定区间内的成员，通过索引，分数从高到底。\",\"ZREVRANGEBYSCORE KEY max min [WITHSCORES]\",\"返回有序集中指定分数区间内的成员，分数从高到低排序。\",\"ZREVRANK KEY member\",\"返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序。\",\"ZSCORE KEY member\",\"返回有序集中，成员的分数值。\",\"ZUNIONSTORE destination numKEYs KEY [KEY …]\",\"计算给定的一个或多个有序集的并集，并存储在新的 KEY 中。\",\"ZSCAN KEY cursor [MATCH pattern] [COUNT count]\",\"迭代有序集合中的元素（包括元素成员和元素分值）。\"]},\"411\":{\"h\":\"Redis线程模型\",\"t\":[\"Redis单线程指的是在接受客户端请求,解析请求,进行数据读写,发送给客户端这个过程是一个线程完成的\",\"但是，Redis 程序并不是单线程的，Redis 在启动的时候，是会启动后台线程（BIO）的\",\"Redis 在 2.6 版本，会启动 2 个后台线程，分别处理关闭文件、AOF 刷盘这两个任务；\",\"Redis 在 4.0 版本之后，新增了一个新的后台线程，用来异步释放 Redis 内存，也就是 lazyfree 线程。例如执行 unlink key / flushdb async / flushall async 等命令，会把这些删除操作交给后台线程来执行，好处是不会导致 Redis 主线程卡顿。因此，当我们要删除一个大 key 的时候，不要使用 del 命令删除，因为 del 是在主线程处理的，这样会导致 Redis 主线程卡顿，因此我们应该使用 unlink 命令来异步删除大key。\",\"之所以 Redis 为「关闭文件、AOF 刷盘、释放内存」这些任务创建单独的线程来处理，是因为这些任务的操作都是很耗时的，如果把这些任务都放在主线程来处理，那么 Redis 主线程就很容易发生阻塞，这样就无法处理后续的请求了。\",\"后台线程相当于一个消费者，生产者把耗时任务丢到任务队列中，消费者（BIO）不停轮询这个队列，拿出任务就去执行对应的方法即可。\"]},\"412\":{\"h\":\"Redis 采用单线程为什么还这么快？\",\"t\":[\"Redis 的大部分操作都在内存中完成，并且采用了高效的数据结构，因此 Redis 瓶颈可能是机器的内存或者网络带宽，而并非 CPU，既然 CPU 不是瓶颈，那么自然就采用单线程的解决方案了；\",\"Redis 采用单线程模型可以避免了多线程之间的竞争，省去了多线程切换带来的时间和性能上的开销，而且也不会导致死锁问题。\",\"Redis 采用了 I/O 多路复用机制处理大量的客户端 Socket 请求，IO 多路复用机制是指一个线程处理多个 IO 流，就是我们经常听到的 select/epoll 机制。简单来说，在 Redis 只运行单线程的情况下，该机制允许内核中，同时存在多个监听 Socket 和已连接 Socket。内核会一直监听这些 Socket 上的连接请求或数据请求。一旦有请求到达，就会交给 Redis 线程处理，这就实现了一个 Redis 线程处理多个 IO 流的效果。\",\"CPU 并不是制约 Redis 性能表现的瓶颈所在，更多情况下是受到内存大小和网络I/O的限制，所以 Redis 核心网络模型使用单线程并没有什么问题，如果你想要使用服务的多核CPU，可以在一台服务器上启动多个节点或者采用分片集群的方式。\",\"除了上面的官方回答，选择单线程的原因也有下面的考虑。\",\"使用了单线程后，可维护性高，多线程模型虽然在某些方面表现优异，但是它却引入了程序执行顺序的不确定性，带来了并发读写的一系列问题，增加了系统复杂度、同时可能存在线程切换、甚至加锁解锁、死锁造成的性能损耗。\",\"在 Redis 6.0 版本之后，也采用了多个 I/O 线程来处理网络请求，这是因为随着网络硬件的性能提升，Redis 的性能瓶颈有时会出现在网络 I/O 的处理上。\",\"所以为了提高网络 I/O 的并行度，Redis 6.0 对于网络 I/O 采用多线程来处理。但是对于命令的执行，Redis 仍然使用单线程来处理，所以大家不要误解 Redis 有多线程同时执行命令。\"]},\"413\":{\"h\":\"Redis持久化\",\"t\":[\"Redis 如何实现数据不丢失？\",\"AOF 日志：每执行一条写操作命令，就把该命令以追加的方式写入到一个文件里；\",\"RDB 快照：将某一时刻的内存数据，以二进制的方式写入磁盘；\",\"混合持久化方式：Redis 4.0 新增的方式，集成了 AOF 和 RBD 的优点；\",\"AOF 日志是如何实现的？\",\"Redis 在执行完一条写操作命令后，就会把该命令以追加的方式写入到一个文件里，然后 Redis 重启时，会读取该文件记录的命令，然后逐一执行命令的方式来进行数据恢复。\",\"为什么先执行命令，再把数据写入日志呢？\",\"避免额外的检查开销：因为如果先将写操作命令记录到 AOF 日志里，再执行该命令的话，如果当前的命令语法有问题，那么如果不进行命令语法检查，该错误的命令记录到 AOF 日志里后，Redis 在使用日志恢复数据时，就可能会出错。\",\"不会阻塞当前写操作命令的执行：因为当写操作命令执行成功后，才会将命令记录到 AOF 日志。\",\"当然，这样做也会带来风险：\",\"数据可能会丢失： 执行写操作命令和记录日志是两个过程，那当 Redis 在还没来得及将命令写入到硬盘时，服务器发生宕机了，这个数据就会有丢失的风险。\",\"可能阻塞其他操作： 由于写操作命令执行成功后才记录到 AOF 日志，所以不会阻塞当前命令的执行，但因为 AOF 日志也是在主线程中执行，所以当 Redis 把日志文件写入磁盘的时候，还是会阻塞后续的操作无法执行。\",\"AOF 写回策略有几种？\",\"Always，这个单词的意思是「总是」，所以它的意思是每次写操作命令执行完后，同步将 AOF 日志数据写回硬盘；\",\"Everysec，这个单词的意思是「每秒」，所以它的意思是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，然后每隔一秒将缓冲区里的内容写回到硬盘；\",\"No，意味着不由 Redis 控制写回硬盘的时机，转交给操作系统控制写回的时机，也就是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，再由操作系统决定何时将缓冲区内容写回硬盘。\",\"AOF 日志过大，会触发什么机制？\",\"Redis 为了避免 AOF 文件越写越大，提供了 AOF 重写机制，当 AOF 文件的大小超过所设定的阈值后，Redis 就会启用 AOF 重写机制，来压缩 AOF 文件。\",\"RDB 快照是如何实现的呢？\",\"因为 AOF 日志记录的是操作命令，不是实际的数据，所以用 AOF 方法做故障恢复时，需要全量把日志都执行一遍，一旦 AOF 日志非常多，势必会造成 Redis 的恢复操作缓慢。\",\"为了解决这个问题，Redis 增加了 RDB 快照。所谓的快照，就是记录某一个瞬间东西，比如当我们给风景拍照时，那一个瞬间的画面和信息就记录到了一张照片。\",\"所以，RDB 快照就是记录某一个瞬间的内存数据，记录的是实际数据，而 AOF 文件记录的是命令操作的日志，而不是实际的数据。\",\"因此在 Redis 恢复数据时， RDB 恢复数据的效率会比 AOF 高些，因为直接将 RDB 文件读入内存就可以，不需要像 AOF 那样还需要额外执行操作命令的步骤才能恢复数据。\",\"RDB 做快照时会阻塞线程吗？\",\"Redis 提供了两个命令来生成 RDB 文件，分别是 save 和 bgsave，他们的区别就在于是否在「主线程」里执行：\",\"执行了 save 命令，就会在主线程生成 RDB 文件，由于和执行操作命令在同一个线程，所以如果写入 RDB 文件的时间太长，会阻塞主线程；\",\"执行了 bgsave 命令，会创建一个子进程来生成 RDB 文件，这样可以避免主线程的阻塞；\",\"Redis 还可以通过配置文件的选项来实现每隔一段时间自动执行一次 bgsave 命令，默认会提供以下配置：\",\"这里提一点，Redis 的快照是全量快照，也就是说每次执行快照，都是把内存中的「所有数据」都记录到磁盘中。所以执行快照是一个比较重的操作，如果频率太频繁，可能会对 Redis 性能产生影响。如果频率太低，服务器故障时，丢失的数据会更多。\",\"为什么会有混合持久化\",\"混合持久化优点：\",\"混合持久化结合了 RDB 和 AOF 持久化的优点，开头为 RDB 的格式，使得 Redis 可以更快的启动 同时结合 AOF 的优点，有减低了大量数据丢失的风险。 \",\"混合持久化缺点：\",\"AOF 文件中添加了 RDB 格式的内容，使得 AOF 文件的可读性变得很差； 兼容性差，如果开启混合持久化，那么此混合持久化 AOF 文件，就不能用在 Redis 4.0 之前版本了。 \",\"Redis 如何实现服务高可用？\",\"要想设计一个高可用的 Redis 服务，一定要从 Redis 的多服务节点来考虑，比如 Redis 的主从复制、哨兵模式、切片集群。\",\"主从复制 主从复制是 Redis 高可用服务的最基础的保证，实现方案就是将从前的一台 Redis 服务器，同步数据到多台从 Redis 服务器上，即一主多从的模式，且主从服务器之间采用的是「读写分离」的方式。\",\"主服务器可以进行读写操作，当发生写操作时自动将写操作同步给从服务器，而从服务器一般是只读，并接受主服务器同步过来写操作命令，然后执行这条命令。\",\"也就是说，所有的数据修改只在主服务器上进行，然后将最新的数据同步给从服务器，这样就使得主从服务器的数据是一致的。\",\"注意，主从服务器之间的命令复制是异步进行的。\",\"具体来说，在主从服务器命令传播阶段，主服务器收到新的写命令后，会发送给从服务器。但是，主服务器并不会等到从服务器实际执行完命令后，再把结果返回给客户端，而是主服务器自己在本地执行完命令后，就会向客户端返回结果了。如果从服务器还没有执行主服务器同步过来的命令，主从服务器间的数据就不一致了。\",\"所以，无法实现强一致性保证（主从数据时时刻刻保持一致），数据不一致是难以避免的。\",\"哨兵模式\",\"在使用 Redis 主从服务的时候，会有一个问题，就是当 Redis 的主从服务器出现故障宕机时，需要手动进行恢复。\",\"为了解决这个问题，Redis 增加了哨兵模式（Redis Sentinel），因为哨兵模式做到了可以监控主从服务器，并且提供主从节点故障转移的功能。\",\"切片集群模式\",\"当 Redis 缓存数据量大到一台服务器无法缓存时，就需要使用 Redis 切片集群（Redis Cluster ）方案，它将数据分布在不同的服务器上，以此来降低系统对单主节点的依赖，从而提高 Redis 服务的读写性能。\",\"Redis Cluster 方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在 Redis Cluster 方案中，一个切片集群共有 16384 个哈希槽，这些哈希槽类似于数据分区，每个键值对都会根据它的 key，被映射到一个哈希槽中，具体执行过程分为两大步：\",\"根据键值对的 key，按照 CRC16 算法 \",\"计算一个 16 bit 的值。 再用 16bit 值对 16384 取模，得到 0~16383 范围内的模数，每个模数代表一个相应编号的哈希槽。\",\"接下来的问题就是，这些哈希槽怎么被映射到具体的 Redis 节点上的呢？有两种方案：\",\"平均分配： 在使用 cluster create 命令创建 Redis 集群时，Redis 会自动把所有哈希槽平均分布到集群节点上。比如集群中有 9 个节点，则每个节点上槽的个数为 16384/9 个。 手动分配： 可以使用 cluster meet 命令手动建立节点间的连接，组成集群，再使用 cluster addslots 命令，指定每个节点上的哈希槽个数。 \",\"为了方便你的理解，我通过一张图来解释数据、哈希槽，以及节点三者的映射分布关系。\",\"集群脑裂导致数据丢失怎么办？ 什么是脑裂？ 总结一句话就是：由于网络问题，集群节点之间失去联系。主从数据不同步；重新平衡选举，产生两个主服务。等网络恢复，旧主节点会降级为从节点，再与新主节点进行同步复制的时候，由于会从节点会清空自己的缓冲区，所以导致之前客户端写入的数据丢失了。\",\"解决方案\"]},\"414\":{\"h\":\"Redis 过期删除与内存淘汰\",\"t\":[\"Redis 是可以对 key 设置过期时间的，因此需要有相应的机制将已过期的键值对删除，而做这个工作的就是过期键值删除策略。\",\"每当我们对一个 key 设置了过期时间时，Redis 会把该 key 带上过期时间存储到一个过期字典（expires dict）中，也就是说「过期字典」保存了数据库中所有 key 的过期时间。\",\"当我们查询一个 key 时，Redis 首先检查该 key 是否存在于过期字典中：\",\"如果不在，则正常读取键值； 如果存在，则会获取该 key 的过期时间，然后与当前系统时间进行比对，如果比系统时间大，那就没有过期，否则判定该 key 已过期。 \",\"Redis 使用的过期删除策略是「惰性删除+定期删除」这两种策略配和使用。\",\"什么是惰性删除策略？\",\"惰性删除策略的做法是，不主动删除过期键，每次从数据库访问 key 时，都检测 key 是否过期，如果过期则删除该 key。\",\"惰性删除策略的优点：\",\"因为每次访问时，才会检查 key 是否过期，所以此策略只会使用很少的系统资源，因此，惰性删除策略对 CPU 时间最友好。 \",\"惰性删除策略的缺点：\",\"如果一个 key 已经过期，而这个 key 又仍然保留在数据库中，那么只要这个过期 key 一直没有被访问，它所占用的内存就不会释放，造成了一定的内存空间浪费。所以，惰性删除策略对内存不友好。 \",\"Redis 持久化时，对过期键会如何处理的？\",\"Redis 持久化文件有两种格式：RDB（Redis Database）和 AOF（Append Only File），下面我们分别来看过期键在这两种格式中的呈现状态。\",\"RDB 文件分为两个阶段，RDB 文件生成阶段和加载阶段。\",\"RDB 文件生成阶段：从内存状态持久化成 RDB（文件）的时候，会对 key 进行过期检查，过期的键「不会」被保存到新的 RDB 文件中，因此 Redis 中的过期键不会对生成新 RDB 文件产生任何影响。 RDB 加载阶段：RDB 加载阶段时，要看服务器是主服务器还是从服务器，分别对应以下两种情况： 如果 Redis 是「主服务器」运行模式的话，在载入 RDB 文件时，程序会对文件中保存的键进行检查，过期键「不会」被载入到数据库中。所以过期键不会对载入 RDB 文件的主服务器造成影响； 如果 Redis 是「从服务器」运行模式的话，在载入 RDB 文件时，不论键是否过期都会被载入到数据库中。但由于主从服务器在进行数据同步时，从服务器的数据会被清空。所以一般来说，过期键对载入 RDB 文件的从服务器也不会造成影响。 \",\"AOF 文件分为两个阶段，AOF 文件写入阶段和 AOF 重写阶段。\",\"AOF 文件写入阶段：当 Redis 以 AOF 模式持久化时，如果数据库某个过期键还没被删除，那么 AOF 文件会保留此过期键，当此过期键被删除后，Redis 会向 AOF 文件追加一条 DEL 命令来显式地删除该键值。 AOF 重写阶段：执行 AOF 重写时，会对 Redis 中的键值对进行检查，已过期的键不会被保存到重写后的 AOF 文件中，因此不会对 AOF 重写造成任何影响。 \",\"Redis 主从模式中，对过期键会如何处理？\",\"当 Redis 运行在主从模式下时，从库不会进行过期扫描，从库对过期的处理是被动的。也就是即使从库中的 key 过期了，如果有客户端访问从库时，依然可以得到 key 对应的值，像未过期的键值对一样返回。\",\"从库的过期键处理依靠主服务器控制，主库在 key 到期时，会在 AOF 文件里增加一条 del 指令，同步到所有的从库，从库通过执行这条 del 指令来删除过期的 key。\"]},\"415\":{\"h\":\"Redis的RDB持久化过程\"},\"416\":{\"h\":\"RDB文件的创建与载入\",\"t\":[\"Redis是内存型数据库, 这即意味着若服务器断电或关闭, 内存中加载的所有数据都会丢失, 所以Redis有RDB持久化过程,即可以将内存中的数据以固定格式保存在磁盘里,这样即使服务器断电...在重启服务器的时候也可以加载RDB文件来恢复数据,但RDB不是万能的,也就是若RDB文件生成一天后断了电,那么在这一天内产生的数据是没办法恢复的...当然这是另一个话题了\",\"我们先来说一说RDB持久化的过程\",\"生成RDB文件是用SAVE或BGSAVE来生成,SAVE命令会阻塞Redis的主进程也就是说若内存中的数据特别多,会导致Redis服务直接卡停, 导致Redis服务器无法处理别的请求.BGSAVE是在后台起一个进程来处理保存数据.\",\"如何加载RDB文件呢?\",\"Redis没有加载RDB文件的命令, 在Redis服务启动的时候会检查在config文件中配置文件下有没有文件,若有则自动加载RDB文件, 没有则不加载.\",\"另外, 因为AOF文件是持久化比RDB频繁,所以若AOF文件和RDB文件同时存在,则优先加载AOF文件.只有在AOF持久化功能处于关闭状态时，服务器才会使用RDB文件来还原数据库状态。\",\"这意味着若开启了AOF,但AOF文件为空,则加载的数据就为空\",\"BGSAVE命令的保存工作由主进程fork的子进程执行,所以在执行了BGSAVE的情况下Redis服务器还能够接受客户端的命令, 但是在BGSAVE命令执行期间,服务器处理BGSAVE, SAVE, BGREWRITEAOF三个命令和平时有所不同\",\"首先BGSAVE执行期间,客户端发送SAVE命令会被服务器直接拒绝, 服务器禁止SAVE和BGSAVE的目的是避免父子进程同时执行rdbSave防止有竞争条件, 其次BGSAVE命令执行期间客户端发送BGSAVE命令会被服务器直接拒绝, 因为同时执行两个BGSAVE也会产生竞争条件, 最后BGREWRITEAOF和BGSAVE两个命令不能同时执行, 如果BGSAVE同时执行, 那么客户端发送的BGREWRITEAOF命令会被延迟到BGSAVE命令执行完毕之后执行。如 果 BGREWRITEAOF命令正在执行，那么客户端发送的BGSAVE命令会被服务器拒绝。\",\"为什么BGREWRITEAOF和BGSAVE两个命令不能同时进行?\",\"因为BGREWRITEAOF和BGSAVE两个命令的实际工作都由子进程执行，所以这两个命令在操作方面并没有什么冲突的地方，不能同时执行它们只是一个性能方面的考虑——并发出两个子进程，并且这两个子进程都同时执行大量的磁盘写入操作，这怎么想都不会是一个好主意。\",\"RDB文件载入时服务器会一直阻塞直到载入完成为止.\"]},\"417\":{\"h\":\"自动间隔性保存\",\"t\":[\"因为BGSAVE可以创建一个新的子进程来保存数据,所以可以通过配置文件的save选项设置多个保存条件,只要有其中任意一个满足,后台就可以自动执行BGSAVE, 如果我们向服务器提供save 900 1, 则若服务器在900秒内对数据库有至少一次修改,则BGSAVE自动执行\",\"保存条件: 用户可以自己制定配置文件,若不配置则默认条件是\",\"save 900 1 save 300 10 save 60 10000 \",\"接着服务器会根据save选项去保存条件,设置服务器状态redisServer结构的saveparams属性:, saveparams属性是一个数组,数组中每个元素是一个saveparam结构,saveparam结构是所设置的保存条件.\",\"struct saveparam { //秒数 time_t seconds; //修改数 int changes; }; \",\"除了saveparams数组外,服务器状态还维持着一个dirty计数器和lastsave属性:\",\"dirty计数器记录距离上一次成功执行SAVE命令或者BGSAVE命令之后，服务器对数据库状态（服务器中的所有数据库）进行了多少次修改（包括写入、删除、更新等操作）。\",\"lastsave属性是一个UNIX时间戳,记录了上一次服务器的SAVE命令或BGSAVE命令的时间\",\"当服务器成功执行一个数据库修改命令之后，程序就会对dirty计数器进行更新：命令修改了多少次数据库，dirty计数器的值就增加多少。\",\"检查保存条件是否满足\",\"Redis服务器周期性操作函数serverCron默认每隔100毫秒就执行一次, 它的工作之一就是检查save选项所设置的保存条件是否已经满足,如果满足的话就执行BGSAVE命令\"]},\"418\":{\"h\":\"RDB文件的结构\",\"t\":[\"RDB的文件结构\",\"REDIS db_version databases EOF check_sum \",\"注意:为了区分变量常量数据,使用全大写单词标示常量,用全小写字母标识变量和数据\",\"RDB文件的最开头是REDIS部分，这个部分的长度为5字节，保存着“REDIS”五个字符。通过这五个字符，程序可以在载入文件时，快速检查所载入的文件是否RDB文件。又因为Redis保存的是二进制数据,不是C字符串所以开头的REDIS其实就是REDIS五个字符没有'\\\\0'结尾...\",\"db_version是长度为4字节,它的值是一个字符串表示的整数,这个整数记录了RDB文件的版本,比如\\\"0006\\\"代表是第六版,这里只介绍RDB的第六版文件\",\"databases部分包含着0或多个数据库以及其中的数据.如果数据库的数据库状态为空则这部位为空.否则就保存数据\",\"EOF常量为1字节,这个常量标志着RDB文件正文内容的结束,当读入程序遇到这个值的时候,它知道所有数据库的键值对都录入完毕.\",\"check_sum是一个8字节长的无符号整数,保存着一个校验和,它是REDIS、db_version、databases、EOF四个部分的内容进行计算得出的。服务器在载入RDB文件时，会将载入数据所计算出的校验和与check_sum所记录的校验和进行对比，以此来检查RDB文件是否有出错或者损坏的情况出现。\"]},\"419\":{\"h\":\"databases部分\",\"t\":[\"一个RDB文件的databases部分可以保存任意多个非空数据库。\",\"每 个 非 空 数 据 库 在 RDB 文 件 中 都 可 以 保 存 为 SELECTDB 、db_number、key_value_pairs三个部分.\",\"SELECTDB常量的长度为1字节，当读入程序遇到这个值的时候，它知道接下来要读入的将是一个数据库号码。\",\"db_number保存着一个数据库号码，根据号码的大小不同，这个部分的长度可以是1字节、2字节或者5字节。当程序读入db_number部分之后，服务器会调用SELECT命令，根据读入的数据库号码进行数 据库切换，使得之后读入的键值对可以载入到正确的数据库中。\",\"key_value_pairs部分保存了数据库中的所有键值对数据，如果键值对带有过期时间，那么过期时间也会和键值对保存在一起。根据键值对的数量、类型、内容以及是否有过期时间等条件的不同，key_value_pairs部分的长度也会有所不同。\"]},\"420\":{\"h\":\"key_value_pairs部分\",\"t\":[\"RDB文件中的每个key_value_pairs部分都保存了一个或以上数量的键值对，如果键值对带有过期时间的话，那么键值对的过期时间也会被保存在内。\",\"不带过期时间的键值对在RDB文件中由TYPE、key、value三部分组成\",\"TYPE记录了value的类型, 长度为1字节, 值可以是以下常量的其中一个\",\"REDIS_RDB_TYPE_STRING\",\"REDIS_RDB_TYPE_LIST\",\"REDIS_RDB_TYPE_SET\",\"REDIS_RDB_TYPE_ZSET\",\"REDIS_RDB_TYPE_HASH\",\"REDIS_RDB_TYPE_LIST_ZIPLIST\",\"REDIS_RDB_TYPE_SET_INTSET\",\"REDIS_RDB_TYPE_ZSET_ZIPLIST\",\"REDIS_RDB_TYPE_HASH_ZIPLIST\",\"带有过期的部分有新增的EXPIRETIME_MS和ms, 分别是以毫秒为单位的过期时间和UNIX时间戳记录的过期时间\",\"values 部分则是\",\"其他的值类型部分不赘述了\"]},\"421\":{\"h\":\"AOF文件结构\",\"t\":[\"除了RDB持久化功能外,Redis还提供AOF持久化.AOF持久化是通过保存Redis服务器所执行的写命令来记录数据库状态的\",\"被写入AOF文件的所有命令都是以Redis的命令请求协议格式保存的，因为Redis的命令请求协议是纯文本格式，所以我们可以直接打开一个AOF文件，观察里面的内容。\",\"服务器在启动时，可以通过载入和执行AOF文件中保存的命令来还原服务器关闭之前的数据库状态\"]},\"422\":{\"h\":\"AOF持久化的实现\",\"t\":[\"AOF持久化功能的实现可以分为命令追加（append）、文件写入、文件同步（sync）三个步骤。\",\"追加:当AOF持久化功能处于打开状态时,服务器执行完一个写命令后,会以协议格式命令将被写命令追加到服务器状态的aof_buf缓冲区末尾.\",\"AOF文件的写入\",\"Redis服务器进程其实就是一个事件循环,这个循环中的文件事件负责接收客户端的命令请求,以及向客户端发送命令回复,而时间事件则负责执行像serverCron函数这样需要定时运行的函数。因为服务器在处理文件事件时可能会执行写命令,使得一些内容被追加到aof_buf缓冲区中,所以服务器在每次循环结束时会调用flushAppendOnlyFile函数,考虑是否刷新aof_buf的内容.\",\"flushAppendOnlyFile函数的行为由服务器配置的appendfsync选项的值来决定. appendfsync选项有always everysec no意思分别为,总是,每秒,由操作系统决定...\",\"文件写入和同步为了提高文件的写入效率,现代计算机中为了提高文件的写入效率,当用户调用write函数，将一些数据写入到文件的时候，操作系统通常会将写入数据暂时保存在一个内存缓冲区里面，等到缓冲区的空间被填满、或者超过了指定的时限之后，才真正地将缓冲区中的数据写入到磁盘里面。这种做法虽然提高了效率，但也为写入数据带来了安全问题，因为如果计算机发生停机，那么保存在内存缓冲区里面的写入数据将会丢失。为此，系统提供了fsync和fdatasync两个同步函数，它们可以强制让操作系统立即将缓冲区中的数据写入到硬盘里面，从而确保写入数据的安全性。\",\"AOF的载入与数据还原\",\"AOF文件包含了重建数据库所需的所有写命令,所以服务器只需要读入并重新执行一遍AOF文件里面保存的写命令就好了.\",\"Redis读取AOF文件并还原数据库状态的详细步骤如下： 1）创建一个不带网络连接的伪客户端（fake client）：因为Redis的命令只能在客户端上下文中执行，而载入AOF文件时所使用的命令直接来源于AOF文件而不是网络连接，所以服务器使用了一个没有网络连接的伪客户端来执行AOF文件保存的写命令，伪客户端执行命令的效果和带网络连接的客户端执行命令的效果完全一样。 2）从AOF文件中分析并读取出一条写命令。 3）使用伪客户端执行被读出的写命令。 4）一直执行步骤2和步骤3，直到AOF文件中的所有写命令都被处理完毕为止。 当完成以上步骤之后，AOF文件所保存的数据库状态就会被完整地还原出来\",\"AOF重写\",\"因为AOF持久化是通过保存被执行的写命令来记录数据库状态的，所以随着服务器运行时间的流逝，AOF文件中的内容会越来越多，文件的体积也会越来越大，如果不加以控制的话，体积过大的AOF文件很可能对Redis服务器、甚至整个宿主计算机造成影响，并且AOF文件的体积越大，使用AOF文件来进行数据还原所需的时间就越多。\",\"为了解决AOF文件体积膨胀的问题，Redis提供了AOF文件重写（rewrite）功能。通过该功能，Redis服务器可以创建一个新的AOF文件来替代现有的AOF文件，新旧两个AOF文件所保存的数据库状态相同，但新AOF文件不会包含任何浪费空间的冗余命令，所以新AOF文件的体积通常会比旧AOF文件的体积要小得多\",\"在接下来的内容中，我们将介绍AOF文件重写的实现原理，以及BGREWEITEAOF命令的实现原理。\",\"虽然Redis将生成新AOF文件替换旧AOF文件的功能命名为“AOF文件重写”，但实际上，AOF文件重写并不需要对现有的AOF文件进行任何读取、分析或者写入操作，这个功能是通过读取服务器当前的数据库状态来实现的。\",\"即就是通过扫描服务器有的所有键值去重建AOF文件\"]},\"423\":{\"h\":\"发布与订阅\",\"t\":[\"Redis发布订阅功能是由PUBLISH,SUBSCRIBE,PSUBSCRIBE等命令组成.\",\"通过执行SUBSCRIBE命令，客户端可以订阅一个或多个频道，从而成为这些频道的订阅者（subscriber）：每当有其他客户端向被订阅的频道发送消息（message）时，频道的所有订阅者都会收到这条消息。\",\"除了订阅频道之外，客户端还可以通过执行PSUBSCRIBE命令订阅一个或多个模式，从而成为这些模式的订阅者：每当有其他客户端向某个频道发送消息时，消息不仅会被发送给这个频道的所有订阅者，它还会被发送给所有与这个频道相匹配的模式的订阅者。\",\"频道的订阅与退订\",\"当一个客户端执行SUBSCRIBE命令订阅某个或某些频道的时候，这个客户端与被订阅频道之间就建立起了一种订阅关系。Redis将所有的订阅关系都发那个到了RedisServer类下的pubsub_channels字典里面,这个字典的键是某个被订阅的频道,值是一个链表,链表里面记录的是这个频道的客户端.\",\"退订的话其实就是遍历链表删除操作,如果客户端为空,则频道键一并删除掉.\",\"模式的订阅与退订\",\"服务器也将所有模式的订阅关系都保存在服务器状态的pubsub_patterns属性里面,pubsub_patterns属性是一个链表，链表中的每个节点都包含着一个pubsub Pattern结构，这个结构的pattern属性记录了被订阅的模式，而client属性则记录了订阅模式的客户端\",\"退订模式频道的退订差不多\",\"发布消息\",\"当一个redis客户端执行PUBLISH,将消息message发送给频道channel时,服务器需要执行以下两个动作,将消息message发送给channel频道的所有订阅者.如果有一个或多个模式和频道匹配那么将消息message发送给pattern模式的订阅者.\",\"发送给模式的订阅者就是遍历所有模式,找出客户端发送...\",\"查看订阅消息\",\"PUBSUB客户端可以通过这个命令来查看频道或者模式的相关信息，比如某个频道目前有多少订阅者，又或者某个模式目前有多少订阅者，诸如此类。\",\"PUBSUB CHANNELS[pattern]子命令用于返回服务器当前被订阅的频道，其中pattern参数是可选的： ·如果不给定pattern参数，那么命令返回服务器当前被订阅的所有频道。 ·如果给定pattern参数，那么命令返回服务器当前被订阅的频道中那些与pattern模式相匹配的频道。\",\"PUBSUB NUMSUB[channel-1 channel-2...channel-n]子命令接受任意多个频道作为输入参数，并返回这些频道的订阅者数量。\",\"PUBSUB NUMPAT子命令用于返回服务器当前被订阅模式的数量。\"]},\"424\":{\"h\":\"事务\",\"t\":[\"Redis通过multi,exec,watch等命令实现事务(transaction),事务提供了一种将多个命令请求打包,然后一次性顺序执行多个命令的过程.并且在事务执行期间服务器不会中断事务而改去执行其他客户端的命令请求，它会将事务中的所有命令都执行完毕，然后才去处理其他客户端的命令请求。\",\"一个事务从开始到结束通常会经历以下三个阶段： 1）事务开始。 2）命令入队。 3）事务执行。\",\"包括的命令有MULTI,DISCARD,EXEC,WATCH\",\"multi事务开始,这一切换是通过在客户端状态的flags属性中打开REDIS_MULTI标识来完成的client.flags |= REDIS_MULTI.\",\"当一个客户端处于非事务状态时，这个客户端发送的命令会立即被服务器执行, 不同的是若处于事务状态,则根据这个客户端发来的不同命令执行不同的操作.如果客户端发送的命令为EXEC、DISCARD、WATCH、MULTI四个命令的其中一个，那么服务器立即执行这个命令。\",\"与 此 相 反 ， 如 果 客 户 端 发 送 的 命 令 是 EXEC 、 DISCARD 、WATCH、MULTI四个命令以外的其他命令，那么服务器并不立即执行这个命令，而是将这个命令放入一个事务队列里面，然后向客户端返回QUEUED回复\",\"事务队列\",\"每个Redis客户端都有自己的事务状态，这个事务状态保存在客户端状态的mstate属性里面, 事务状态属性包含一个事务队列，以及一个已入队命令的计数器（也可以说是事务队列的长度）：事务队列是一个multiCmd类型的数组，数组中的每个multiCmd结构都保存了一个已入队命令的相关信息，包括指向命令实现函数的指针、命令的参数，以及参数的数量.\",\"执行事务\",\"当一个处于事务状态的客户端向服务器发送EXEC命令时,，这个EXEC命令将立即被服务器执行。服务器会遍历这个客户端的事务队列，执行队列中保存的所有命令，最后将执行命令所得的结果全部返回给客户端。\",\"WATCH命令的实现\",\"WATCH命令是一个乐观锁（optimistic locking），它可以在EXEC命令执行之前，监视任意数量的数据库键，并在EXEC命令执行时，检查被监视的键是否至少有一个已经被修改过了，如果是的话，服务器将拒绝执行事务，并向客户端返回代表事务执行失败的空回复。\",\"若在WATCH监视其间的事务,有其他客户端修改了某个被WATCH监视的键,则事务会被服务器端拒绝执行,WATCH的原理是,每个Redis数据库都保存着一个watched_keys字典，这个字典的键是某个被WATCH命令监视的数据库键，而字典的值则是一个链表，链表中记录了所有监视相应数据库键的客户端\",\"通过watched_keys字典，服务器可以清楚地知道哪些数据库键正在被监视，以及哪些客户端正在监视这些数据库键\",\"比如·客户端c1和c2正在监视键\\\"name\\\"。 ·客户端c3正在监视键\\\"age\\\"。 ·客户端c2和c4正在监视键\\\"address\\\"。\",\"所有对数据库进行修改的命令，比如SET、LPUSH、SADD、ZREM 、 DEL 、 FLUSHDB 等 等 ， 在 执 行 之 后 都 会 调 用multi.c/touchWatchKey函数对watched_keys字典进行检查，查看是否有客户端正在监视刚刚被命令修改过的数据库键，如果有的话，那 么 touchWatchKey 函 数 会 将 监 视 被 修 改 键 的 客 户 端 的REDIS_DIRTY_CAS标识打开，表示该客户端的事务安全性已经被破坏。\",\"当服务器接收到一个客户端发来的EXEC命令时，服务器会根据这个客户端是否打开了REDIS_DIRTY_CAS标识来决定是否执行事务：\",\"如果客户端的REDIS_DIRTY_CAS标识已经被打开，那么说明客户端所监视的键当中，至少有一个键已经被修改过了，在这种情况下，客户端提交的事务已经不再安全，所以服务器会拒绝执行客户端提交的事务。\",\"如果客户端的REDIS_DIRTY_CAS标识没有被打开，那么说明客户端监视的所有键都没有被修改过（或者客户端没有监视任何键），事务仍然是安全的，服务器将执行客户端提交的这个事务。\",\"事务的ACID性质\",\"在传统的关系式数据库中，常常用ACID性质来检验事务功能的可靠性和安全性。在 Redis 中 ， 事 务 总 是 具 有 原 子 性 （ Atomicity ） 、 一 致 性（Consistency）和隔离性（Isolation），并且当Redis运行在某种特定的持久化模式下时，事务也具有耐久性\",\"事务具有原子性指的是，数据库将事务中的多个操作当作一个整体来执行，服务器要么就执行事务中的所有操作，要么就一个操作也不执行。对于Redis的事务功能来说，事务队列中的命令要么就全部都执行，要么就一个都不执行，因此，Redis的事务是具有原子性的\",\"Redis的事务和传统的关系型数据库事务的最大区别在于，Redis不支持事务回滚机制（rollback），即使事务队列中的某个命令在执行期间出现了错误，整个事务也会继续执行下去，直到将事务队列中的所有命令都执行完毕为止。\",\"Redis的作者在事务功能的文档中解释说，不支持事务回滚是因为这种复杂的功能和Redis追求简单高效的设计主旨不相符，并且他认为，Redis事务的执行时错误通常都是编程错误产生的，这种错误通常只会出现在开发环境中，而很少会在实际的生产环境中出现，所以他认为没有必要为Redis开发事务回滚功能。\",\"事务具有一致性指的是，如果数据库在执行事务之前是一致的，那么在事务执行之后，无论事务是否执行成功，数据库也应该仍然是一致的。“一致”指的是数据符合数据库本身的定义和要求，没有包含非法或者无效的错误数据。Redis通过谨慎的错误检测和简单的设计来保证事务的一致性，以下三个小节将分别介绍三个Redis事务可能出错的地方，并说明Redis是如何妥善地处理这些错误，从而确保事务的一致性的。\",\"1.入队错误: 如果命令在入队时发生了错误,比如命令不存在,或者命令格式不对,那么Redis将拒绝执行这个命令.\",\"2.执行错误: 执行过程中发生的错误都是一些不能在入队时被服务器发现的错误，这些错误只会在命令实际执行时被触发, 并且执行错后,继续执行下面剩余的队列值\",\"3.服务器停机:\",\"如果Redis服务器在执行事务的过程中停机，那么根据服务器所使用的持久化模式，可能有以下情况出现：如果服务器运行在无持久化的内存模式下，那么重启之后的数据库将是空白的，因此数据总是一致的。\",\"如果服务器运行在RDB模式下，那么在事务中途停机不会导致不一致性，因为服务器可以根据现有的RDB文件来恢复数据，从而将数据库还原到一个一致的状态。如果找不到可供使用的RDB文件，那么重启之后的数据库将是空白的，而空白数据库总是一致的。\",\"·如果服务器运行在AOF模式下，那么在事务中途停机不会导致不一致性，因为服务器可以根据现有的AOF文件来恢复数据，从而将数据库还原到一个一致的状态。如果找不到可供使用的AOF文件，那么重启之后的数据库将是空白的，而空白数据库总是一致的。综上所述，无论Redis服务器运行在哪种持久化模式下，事务执行中途发生的停机都不会影响数据库的一致性。\",\"隔离性\",\"事务的隔离性指的是，即使数据库中有多个事务并发地执行，各个事务之间也不会互相影响，并且在并发状态下执行的事务和串行执行的事务产生的结果完全相同。\",\"因为Redis使用单线程的方式来执行事务（以及事务队列中的命令），并且服务器保证，在执行事务期间不会对事务进行中断，因此，Redis的事务总是以串行的方式运行的，并且事务也总是具有隔离性的。\",\"耐久性\",\"事务的耐久性指的是，当一个事务执行完毕时，执行这个事务所得的结果已经被保存到永久性存储介质（比如硬盘）里面了，即使服务器在事务执行完毕之后停机，执行事务所得的结果也不会丢失。\",\"因为Redis的事务不过是简单地用队列包裹起了一组Redis命令，Redis并没有为事务提供任何额外的持久化功能，所以Redis事务的耐久性由Redis所使用的持久化模式决定\"]},\"425\":{\"h\":\"复制\",\"t\":[\"在Redis的主从复制中,用户使用slaveof命令或者设置slaveof选项,可以让一个服务器去复制另一个服务器,被复制的服务器叫主服务器,对主服务器进行复制的服务器叫从服务器\",\"进行复制中的服务器双方保存相同的数据,概念上将这种现象叫数据库状态一致.\",\"这里先介绍2.8版本以前使用的旧版复制功能的实现原理,并说明旧版复制功能在处理断线后重新连接的从服务器时，会遇上怎样的低效情况。接着，本章将介绍Redis从2.8版本开始使用的新版复制功能是如何通过部分重同步来解决旧版复制功能的低效问题的，并说明部分重同步的实现原理。在此之后，本章将列举SLAVEOF命令的具体实现步骤，并在本章最后，说明主从服务器心跳检测机制的实现原理，并对基于心跳检测实现的几个功能进行介绍。\",\"旧版复制功能的实现\",\"Redis的复制分为同步和命令传播两个操作:\",\"同步状态用作将从服务器的数据库状态更新至与主服务器当前所处的数据库状态.\",\"命令传播操作则用于主从服务器状态不一致,让主从服务器状态回到一致的状态.\",\"同步\",\"当客户端向从服务器发送salveof命令时,要求从服务器复制主服务器,从服务器首先需要执行同步操作,也就是将从服务器的数据库状态更新至主服务器当前所处的数据库状态.从服务器对主服务器的同步操作需要通过向主服务器发送SYNC命令来完成,以下是发送SYNC命令的步骤:\",\"从服务器向主服务器发送SYNC命令。\",\"收到SYNC命令的主服务器执行BGSAVE命令在后台生成一个RDB文件,并使用一个缓冲区记录从现在开始执行的所有写命令.\",\"当主服务器BGSAVE命令执行完成,主服务器将BGSAVE生成的RDB文件发送给从服务器,从服务器接收并载入这个RDB文件,将自己的数据库状态更新至主服务器执行BGSAVE命令时的数据库状态\",\"主服务器将记录在缓冲区里的所有写命令发送给从服务器,从服务器执行这些写命令,将自己的数据库状态更新至主服务器所处的状态.\",\"命令传播\",\"在同步操作完成后,主从服务器状态将达成一致,但如果主服务器的客户端发送写命令时,主从服务器的数据库状态可能被修改,并导致主从服务器状态不再一致,为了让主从服务器再次回到一致状态，主服务器需要对从服务器执行命令传播操作：主服务器会将自己执行的写命令，也即是造成主从服务器不一致的那条写命令，发送给从服务器执行，当从服务器执行了相同的写命令之后，主从服务器将再次回到一致状态。\",\"旧版复制功能的缺陷:Redis中从服务器对主服务器的复制可以分为以下两种情况：\",\"初次复制：从服务器以前没有复制过任何主服务器，或者从服务器当前要复制的主服务器和上一次复制的主服务器不同。\",\"断线后重复制：处于命令传播阶段的主从服务器因为网络原因而中断了复制，但从服务器通过自动重连接重新连上了主服务器，并继续复制主服务器。\",\"对于初次复制来说，旧版复制功能能够很好地完成任务，但对于断线后重复制来说，旧版复制功能虽然也能让主从服务器重新回到一致状态，但效率却非常低,需要主服务器再次发生RDB文件.\",\"新版Redis复制功能的实现:\",\"为了解决旧版复制功能在处理断线重复制情况时的低效问题，Redis从2.8版本开始，使用PSYNC命令代替SYNC命令来执行复制时的同步操作。\",\"PSYNC命令有完整重同步和部分重同步两种模式:\",\"其中完整重同步用于处理初次复制情况:完整重同步的执行步骤和SYNC命令的执行步骤基本一样,都是通过让主服务器创建并发送RDB文件，以及向从服务器发送保存在缓冲区里面的写命令来进行同步。\",\"部分重同步则用于处理断线后复制的情况,当从服务器在断线后重新连接主服务器时,如果条件允许,主服务器可以将主从服务器连接断开期间执行的写命令发送给从服务器，从服务器只要接收并执行这些写命令，就可以将数据库更新至主服务器当前所处的状态。PSYNC命令的部分重同步模式解决了旧版复制功能在处理断线后重复制时出现的低效情况.\",\"部分重同步的实现\",\"部分重同步功能由以下三个部分构成：\",\"主服务器的复制偏移量（replication offset）和从服务器的复制偏移量。\",\"主服务器的复制积压缓冲区（replication backlog）。\",\"服务器的运行ID（run ID）。\",\"复制偏移量\",\"执行复制的双方——主服务器和从服务器会分别维护一个复制偏移量：\",\"主服务器每次向从服务器传播N个字节的数据时，就将自己的复制偏移量的值加上N。\",\"从服务器每次收到主服务器传播来的N个字节的数据时，就将自己的复制偏移量的值加上N。\",\"通过对比主从服务器的复制偏移量，程序可以很容易地知道主从服务器是否处于一致状态：·如果主从服务器处于一致状态，那么主从服务器两者的偏移量总是相同的。相反，如果主从服务器两者的偏移量并不相同，那么说明主从服务器并未处于一致状态。\",\"复制积压缓冲区\",\"复制积压缓冲区是由主服务器维护的一个固定长度（fixed-size）先进先出（FIFO）队列，默认大小为1MB。主服务器的复制积压缓冲区里面会保存着一部分最近传播的写命令，并且复制积压缓冲区会为队列中的每个字节记录相应的复制偏移量\",\"当从服务器重新连上主服务器时，从服务器会通过PSYNC命令将自己的复制偏移量offset发送给主服务器，主服务器会根据这个复制偏移量来决定对从服务器执行何种同步操作：\",\"如果offset偏移量之后的数据（也即是偏移量offset+1开始的数据）仍然存在于复制积压缓冲区里面，那么主服务器将对从服务器执行部分重同步操作。\",\"相反，如果offset偏移量之后的数据已经不存在于复制积压缓冲区，那么主服务器将对从服务器执行完整重同步操作。\",\"服务器运行ID\",\"除了复制偏移量和复制积压缓冲区之外，实现部分重同步还需要用到服务器运行ID（run ID）： 每个Redis服务器，不论主服务器还是从服务，都会有自己的运行ID\",\"当从服务器对主服务器进行初次复制时，主服务器会将自己的运行ID传送给从服务器，而从服务器则会将这个运行ID保存起来。\",\"当从服务器断线并重新连上一个主服务器时，从服务器将向当前连接的主服务器发送之前保存的运行ID：如果从服务器保存的运行ID和当前连接的主服务器的运行ID相同，那么说明从服务器断线之前复制的就是当前连接的这个主服务器，主服务器可以继续尝试执行部分重同步操作。相反地，如果从服务器保存的运行ID和当前连接的主服务器的运行ID并不相同，那么说明从服务器断线之前复制的主服务器并不是当前连接的这个主服务器，主服务器将对从服务器执行完整重同步操作。\",\"PSYNC命令的实现\",\"到目前为止，本章在介绍PSYNC命令时一直没有说明PSYNC命令的参数以及返回值，因为那时我们还未了解服务器运行ID、复制偏移量、复制积压缓冲区这些东西，在学习了部分重同步的实现原理之后，我们现在可以来了解PSYNC命令的完整细节了。\",\"相关信息\",\"PSYNC命令的调用方法有两种：\",\"如果从服务器以前没有复制过任何主服务器，或者之前执行过SLAVEOF no one命令，那么从服务器在开始一次新的复制时将向主服务器发送PSYNC ? -1命令，主动请求主服务器进行完整重同步（因为这时不可能执行部分重同步）\",\"相反地，如果从服务器已经复制过某个主服务器，那么从服务器在开始一次新的复制时将向主服务器发送PSYNC <runid> ${offset}命令：其中runid是上一次复制的主服务器的运行ID，而offset则是从服务器当前的复制偏移量，接收到这个命令的主服务器会通过这两个参数来判断应该对从服务器执行哪种同步操作。\",\"根据情况，接收到PSYNC命令的主服务器会向从服务器返回以下三种回复的其中一种：\",\"如果主服务器返回+FULLRESYNC <runid> ${offset}回复，那么表示主服务器将与从服务器执行完整重同步操作：其中runid是这个主服务器的运行ID，从服务器会将这个ID保存起来，在下一次发送PSYNC命令时使用；而offset则是主服务器当前的复制偏移量，从服务器会将这个值作为自己的初始化偏移量。\",\"如果主服务器返回+CONTINUE回复，那么表示主服务器将与从服务器执行部分重同步操作，从服务器只要等着主服务器将自己缺少的那部分数据发送过来就可以了。\",\"如果主服务器返回-ERR回复，那么表示主服务器的版本低于Redis 2.8，它识别不了PSYNC命令，从服务器将向主服务器发送SYNC命令，并与主服务器执行完整同步操作。\",\"复制的实现\",\"通过向从服务器发送SLAVEOF命令，我们可以让一个从服务器去复制一个主服务器\",\"步骤1：设置主服务器的地址和端口\",\"当客户端向从服务器发送以下命令时：slaveof 127.0.0.1 6379, 从服务器首先要做的就是将客户端给定的服务器IP地址127.0.0.1以及端口6379保存到服务器状态的masterhost属性和masterport属性里面.\",\"SLAVEOF命令是一个异步命令，在完成masterhost属性和masterport属性的设置工作之后，从服务器将向发送SLAVEOF命令的客户端返回OK，表示复制指令已经被接收，而实际的复制工作将在OK返回之后才真正开始执行。\",\"步骤2：建立套接字连接\",\"在SLAVEOF命令执行之后，从服务器将根据命令所设置的IP地址和端口，创建连向主服务器的套接字连接。\",\"如果从服务器创建的套接字能成功连接（connect）到主服务器，那么从服务器将为这个套接字关联一个专门用于处理复制工作的文件事件处理器，这个处理器将负责执行后续的复制工作，比如接收RDB文件，以及接收主服务器传播来的写命令，诸如此类。 而主服务器在接受（accept）从服务器的套接字连接之后，将为该套接字创建相应的客户端状态，并将从服务器看作是一个连接到主服务器的客户端来对待，这时从服务器将同时具有服务器（server）和客户端（client）两个身份：从服务器可以向主服务器发送命令请求，而主服务器则会向从服务器返回命令回复\",\"因为复制工作接下来的几个步骤都会以从服务器向主服务器发送命令请求的形式来进行，所以理解“从服务器是主服务器的客户端”这一点非常重要。\",\"步骤3：发送PING命令\",\"从服务器成为主服务器的客户端之后，做的第一件事就是向主服务器发送一个PING命令\",\"虽然主从服务器成功建立起了套接字连接，但双方并未使用该套接字进行过任何通信，通过发送PING命令可以检查套接字的读写状态是否正常。\",\"因为复制工作接下来的几个步骤都必须在主服务器可以正常处理命令请求的状态下才能进行，通过发送PING命令可以检查主服务器能否正常处理命令请求。\",\"从服务器在发送PING命令之后将遇到以下三种情况的其中一种：\",\"如果主服务器向从服务器返回了一个命令回复，但从服务器却不能在规定的时限（timeout）内读取出命令回复的内容，那么表示主从服务器之间的网络连接状态不佳，不能继续执行复制工作的后续步骤。当出现这种情况时，从服务器断开并重新创建连向主服务器的套接字。\",\"如果主服务器向从服务器返回一个错误，那么表示主服务器暂时没办法处理从服务器的命令请求，不能继续执行复制工作的后续步骤。当出现这种情况时，从服务器断开并重新创建连向主服务器的套接字。比如说，如果主服务器正在处理一个超时运行的脚本，那么当从服务器向主服务器发送PING命令时，从服务器将收到主服务器返回的BUSY Redisis busy running a script.You can only call SCRIPTKILL or SHUTDOWN NOSAVE.错误。\",\"如果从服务器读取到\\\"PONG\\\"回复，那么表示主从服务器之间的网络连接状态正常，并且主服务器可以正常处理从服务器（客户端）发送的命令请求，在这种情况下，从服务器可以继续执行复制工作的下个步骤。\",\"步骤4：身份验证\",\"从服务器在收到主服务器返回的\\\"PONG\\\"回复之后，下一步要做的就是决定是否进行身份验证：\",\"如果从服务器设置了masterauth选项，那么进行身份验证。\",\"如果从服务器没有设置masterauth选项，那么不进行身份验证。\",\"在需要进行身份验证的情况下，从服务器将向主服务器发送一条AUTH命令，命令的参数为从服务器masterauth选项的值。\",\"举个例子，如果从服务器masterauth选项的值为10086，那么从服务器将向主服务器发送命令AUTH 10086，如图15-18所示。\",\"步骤5：发送端口信息\",\"在 身 份 验 证 步 骤 之 后 ， 从 服 务 器 将 执 行 命 令 REPLCONF listening-port <port-number>，向主服务器发送从服务器的监听端口号。\",\"步骤6：同步\",\"在这一步，从服务器将向主服务器发送PSYNC命令，执行同步操作，并将自己的数据库更新至主服务器数据库当前所处的状态。\",\"步骤7：命令传播\",\"当完成了同步之后，主从服务器就会进入命令传播阶段，这时主服务器只要一直将自己执行的写命令发送给从服务器，而从服务器只要一直接收并执行主服务器发来的写命令，就可以保证主从服务器一直保持一致了。\",\"心跳检测\",\"在命令传播阶段，从服务器默认会以每秒一次的频率，向主服务器发送命令：\",\"其中replication_offset是从服务器当前的复制偏移量。\",\"发送REPLCONF ACK命令对于主从服务器有三个作用：\",\"检测主从服务器的网络连接状态。\",\"辅助实现min-slaves选项。\",\"检测命令丢失。 以下将分别介绍这三个作用。\",\"检测主从服务器的网络连接状态:主从服务器可以通过发送和接收REPLCONF ACK命令来检查两者之间的网络连接是否正常：如果主服务器超过一秒钟没有收到从服务器发来的REPLCONF ACK命令，那么主服务器就知道主从服务器之间的连接出现问题了。\",\"通过向主服务器发送INFO replication命令，在列出的从服务器列表的lag一栏中，我们可以看到相应从服务器最后一次向主服务器发送REPLCONF ACK命令距离现在过了多少秒.在一般情况下，lag的值应该在0秒或者1之间跳动，如果超过1秒的话，那么说明主从服务器之间的连接出现了故障。\",\"辅助实现min-slaves配置选项\",\"Redis的min-slaves-to-write和min-slaves-max-lag两个选项可以防止主服务器在不安全的情况下执行写命令。\",\"举个例子，如果我们向主服务器提供以下设置：\",\"那么在从服务器的数量少于3个，或者三个从服务器的延迟（lag）值都大于或等于10秒时，主服务器将拒绝执行写命令，这里的延迟值就是上面提到的INFO replication命令的lag值。\",\"检测命令丢失\",\"如果因为网络故障，主服务器传播给从服务器的写命令在半路丢失，那么当从服务器向主服务器发送REPLCONF ACK命令时，主服务器将发觉从服务器当前的复制偏移量少于自己的复制偏移量，然后主服务器就会根据从服务器提交的复制偏移量，在复制积压缓冲区里面找到从服务器缺少的数据，并将这些数据重新发送给从服务器。\"]},\"426\":{\"h\":\"哨兵\",\"t\":[\"Sentinel(哨兵)系统是Redis高可用性解决方案,由一个或多个Sentinel实例组成的Sentineli系统可以监视任意多个服务器,以及这些主服务器下的所有从服务器,并在被监视的主服务器下线时,自动将这个下线主服务器属下的某个从服务器升级为新的主服务器,然后由新的主服务器代替已下线的主服务器处理请求.\",\"当server1的下线时长超过用户设定的下线时长上限时,Sentinel系统就会对server1执行故障转移操作.\",\"另外，Sentinel还会继续监视已下线的server1，并在它重新上线时，将它设置为新的主服务器的从服务器。\",\"当一个Sentinel启动时，它需要执行以下步骤： 1）初始化服务器。 2）将普通Redis服务器使用的代码替换成Sentinel专用代码。 3）初始化Sentinel状态。 4）根据给定的配置文件，初始化Sentinel的监视主服务器列表。 5）创建连向主服务器的网络连接。\",\"初始化服务器\",\"Sentinel的本质就是运行在特殊模式下的Redis服务器,所以第一步其实是先初始化一个普通redis服务器,不过，因为Sentinel执行的工作和普通Redis服务器执行的工作不同，所以Sentinel的初始化过程和普通Redis服务器的初始化过程并不完全相同。\",\"例如，普通服务器在初始化时会通过载入RDB文件或者AOF文件来还原数据库状态，但是因为Sentinel并不使用数据库，所以初始化Sentinel时就不会载入RDB文件或者AOF文件, sentinel内部是可以使用发布订阅功能的.\",\"使用Sentinel专用代码\",\"启动Sentinel的第二个步骤就是将一部分普通Redis服务器使用的代 码 替 换 成 Sentinel 专 用 代 码 。 比 如 说 ， 普 通 Redis 服 务 器 使 用redis.h/REDIS_SERVERPORT常量的值作为服务器端口\",\"初始化Sentinel状态\",\"在应用了Sentinel的专用代码之后，接下来，服务器会初始化一个sentinel.c/sentinelState结构（后面简称“Sentinel状态”），这个结构保存了服务器中所有和Sentinel功能有关的状态\",\"struct sentinelState { //当前纪元，用于实现故障转移 uint64_t current_epoch; //保存了所有被这个sentinel监视的主服务器 //字典的键是主服务器的名字 //字典的值则是一个指向sentinelRedisInstance结构的指针 dict *masters; //是否进入了TILT模式？ int tilt; //目前正在执行的脚本的数量 int running_scripts; //进入TILT模式的时间 mstime_t tilt_start_time; //最后一次执行时间处理器的时间 mstime_t previous_time; //一个FIFO队列，包含了所有需要执行的用户脚本 list *scripts_queue; } sentinel; \",\"字典的键是被监视主服务器的名字, 而 字 典 的 值 则 是 被 监 视 主 服 务 器 对 应 的sentinel.c/sentinelRedisInstance结构。\",\"typedef struct sentinelRedisInstance { //标识值，记录了实例的类型，以及该实例的当前状态 int flags; //实例的名字 //主服务器的名字由用户在配置文件中设置 //从服务器以及Sentinel的名字由Sentinel自动设置 //格式为ip:port，例如\\\"127.0.0.1:26379\\\" char *name; //实例的运行ID char *runid; //配置纪元，用于实现故障转移 uint64_t config_epoch; //实例的地址 sentinelAddr *addr; // SENTINEL down-after-milliseconds选项设定的值 //实例无响应多少毫秒之后才会被判断为主观下线（subjectively down） mstime_t down_after_period; // SENTINEL monitor <master-name> <IP> <port> <quorum>选项中的quorum参数 //判断这个实例为客观下线（objectively down）所需的支持投票数量 int quorum; // SENTINEL parallel-syncs <master-name> <number>选项的值 //在执行故障转移操作时，可以同时对新的主服务器进行同步的从服务器数量 int parallel_syncs; // SENTINEL failover-timeout <master-name> <ms>选项的值 //刷新故障迁移状态的最大时限 mstime_t failover_timeout; // ... } sentinelRedisInstance; // sentinelRedisInstance.addr 属 性 是 一 个 指 向sentinel.c/sentinelAddr结构的指针，这个结构保存着实例的IP地址和端口号 typedef struct sentinelAddr { char *ip; int port; } sentinelAddr; \",\"创建连向主服务器的网络连接\",\"初始化Sentinel的最后一步是创建连向被监视主服务器的网络连接，Sentinel将成为主服务器的客户端，它可以向主服务器发送命令，并从命令回复中获取相关的信息。\",\"对于每个被Sentinel监视的主服务器来说，Sentinel会创建两个连向主服务器的异步网络连接：\",\"一个是命令连接，这个连接专门用于向主服务器发送命令，并接收命令回复。\",\"另一个是订阅连接，这个连接专门用于订阅主服务器的__sentinel__:hello频道。\",\"为什么有两个连接？\",\"在Redis目前的发布与订阅功能中，被发送的信息都不会保存在Redis服务器里面，如果在信息发送时，想要接收信息的客户端不在线或者断线，那么这个客户端就会丢失这条信息。因此，为了不丢失__sentinel__:hello频道的任何信息，Sentinel必须专门用一个订阅连接来接收该频道的信息。另一方面，除了订阅频道之外，Sentinel还必须向主服务器发送命令，以此来与主服务器进行通信，所以Sentinel还必须向主服务器创建命令连接。 因为Sentinel需要与多个实例创建多个网络连接，所以Sentinel使用的是异步连接\",\"获取主服务器信息\",\"哨兵会默认以10秒一次的频率通过命令向被监视的主服务器发送INFO命令,并通过分析INFO命令的回复来获取主服务器的当前消息.\",\"通过分析主服务器返回的INFO命令回复，Sentinel可以获取以下两方面的信息：\",\"一方面是关于主服务器本身的信息，包括run_id域记录的服务器运行ID，以及role域记录的服务器角色； 另一方面是关于主服务器属下所有从服务器的信息.至于主服务器返回的从服务器信息，则会被用于更新主服务器实例结构的slaves字典，这个字典记录了主服务器属下从服务器的名单.\",\"获取从服务器信息\",\"当Sentinel发现主服务器有新的从服务器出现时，Sentinel除了会为这个新的从服务器创建相应的实例结构之外，Sentinel还会创建连接到从服务器的命令连接和订阅连接。\",\"在创建命令连接之后，Sentinel在默认情况下，会以每十秒一次的频率通过命令连接向从服务器发送INFO命令.\",\"根据INFO命令的回复，Sentinel会提取出以下信息： ·从服务器的运行ID run_id。 ·从服务器的角色role。 · 主 服 务 器 的 IP 地 址 master_host ， 以 及 主 服 务 器 的 端 口 号 master_port。 ·主从服务器的连接状态master_link_status。 ·从服务器的优先级slave_priority。 ·从服务器的复制偏移量slave_repl_offset。根据这些信息，Sentinel会对从服务器的实例结构进行更新.\",\"向主服务器和从服务器发送信息\",\"在默认情况下，Sentinel会以每两秒一次的频率，通过命令连接向所有被监视的主服务器和从服务器发送以下格式的命令\",\"PUBLISH __sentinel__:hello \\\"<s_ip>,<s_port>,<s_runid>,<s_epoch>,<m_name>,<m_ip>,<m_port>,<m_epoch>\\\" \",\"这条命令向服务器的__sentinel__:hello频道发送了一条信息，信息的内容由多个参数组成：\",\"·其中以s_开头的参数记录的是Sentinel本身的信息·而m_开头的参数记录的则是主服务器的信息\",\"接收来自主服务器和从服务器的频道信息\",\"当Sentinel与一个主服务器或者从服务器建立起订阅连接之后，Sentinel就会通过订阅连接，向服务器发送以下命令\",\"SUBSCRIBE __sentinel__:hello \",\"Sentinel对__sentinel__:hello频道的订阅会一直持续到Sentinel与服务器的连接断开为止。 这也就是说，对于每个与Sentinel连接的服务器，Sentinel既通过命令连接向服务器的__sentinel__:hello频道发送信息，又通过订阅连接从服务器的__sentinel__:hello频道接收信息\",\"对于监视同一个服务器的多个Sentinel来说，一个Sentinel发送的 信 息 会 被 其 他 Sentinel 接 收 到 ， 这 些 信 息 会 被 用 于 更 新 其 他Sentinel对发送信息Sentinel的认知，也会被用于更新其他Sentinel对被监视服务器的认知。\",\"当 一 个 Sentinel 从 sentinel:hello 频 道 收 到 一 条 信 息 时 ，Sentinel会对这条信息进行分析，提取出信息中的Sentinel IP地址、Sentinel端口号、Sentinel运行ID等八个参数，并进行以下检查:如果信息中记录的Sentinel运行ID和接收信息的Sentinel的运行ID相同，那么说明这条信息是Sentinel自己发送的，Sentinel将丢弃这条信息，不做进一步处理.相 反 地 ， 如 果 信 息 中 记 录 Sentinel 运 行 ID 和 接 收 信 息 的Sentinel的运行ID不相同，那么说明这条信息是监视同一个服务器的其他Sentinel发来的，接收信息的Sentinel将根据信息中的各个参数，对相应主服务器的实例结构进行更新。\",\"更新sentinels字典\",\"Sentinel为主服务器创建的实例结构中的sentinels字典保存了除Sentinel本身之外，所有同样监视这个主服务器的其他Sentinel的资料\",\"因为一个Sentinel可以通过分析接收到的频道信息来获知其他Sentinel的存在，并通过发送频道信息来让其他Sentinel知道自己的存在，所以用户在使用Sentinel的时候并不需要提供各个Sentinel的地址信息，监视同一个主服务器的多个Sentinel可以自动发现对方。\",\"创建连向其他Sentinel的命令连接\",\"当Sentinel通过频道信息发现一个新的Sentinel时，它不仅会为新Sentinel在sentinels字典中创建相应的实例结构，还会创建一个连向新Sentinel 的命令连接， 而 新 Sentinel 也 同 样 会 创 建 连 向 这 个 Sentinel的命令连接，最终监视同一主服务器的多个Sentinel将形成相 互 连 接 的 网 络 ： Sentinel A 有 连 向 Sentinel B 的 命 令 连 接 ， 而Sentinel B也有连向Sentinel A的命令连接。\",\"使用命令连接相连的各个Sentinel可以通过向其他Sentinel发送命令请求来进行信息交换，本章接下来将对Sentinel实现主观下线检测和客观下线检测的原理进行介绍，这两种检测都会使用Sentinel之间的命令连接来进行通信。\",\"Sentinel之间不会创建订阅连接\",\"检测主观下线状态\",\"在默认情况下，Sentinel会以每秒一次的频率向所有与它创建了命令连接的实例（包括主服务器、从服务器、其他Sentinel在内）发送PING命令，并通过实例返回的PING命令回复来判断实例是否在线。\",\"如果配置文件指定Sentinel1的down-after-milliseconds选项的值为50000毫秒，那么当主服务器master连续50000毫秒都向Sentinel1返回无效回复时，Sentinel1就会将master标记为主观下线，并在master所对应的实例结构的flags属性中打开SRI_S_DOWN标识\",\"主观下线时长选项的作用范围\",\"用户设置的down-after-milliseconds选项的值，不仅会被Sentinel用来判断主服务器的主观下线状态，还会被用于判断主服务器属下的所有从服务器，以及所有同样监视这个主服务器的其他Sentinel的主观下线状态。举个例子，如果用户向Sentinel设置了以下配置：\",\"sentinel monitor master 127.0.0.1 6379 2 sentinel down-after-milliseconds master 50000 \",\"那么50000毫秒不仅会成为Sentinel判断master进入主观下线的标准，还会成为Sentinel判断master属下所有从服务器，以及所有同样监视master的其他Sentinel进入主观下线的标准。\",\"多个Sentinel设置的主观下线时长可能不同\",\"down-after-milliseconds选项另一个需要注意的地方是，对于监视同一个主服务器的多个Sentinel来说，这些Sentinel所设置的down-after-milliseconds选项的值也可能不同，因此，当一个Sentinel将主服务器判断为主观下线时，其他Sentinel可能仍然会认为主服务器处于在线状态。举个例子，如果Sentinel1载入了以下配置：\",\"sentinel monitor master 127.0.0.1 6379 2 sentinel down-after-milliseconds master 50000 \",\"而Sentinel2则载入了以下配置：\",\"sentinel monitor master 127.0.0.1 6379 2 sentinel down-after-milliseconds master 10000 \",\"那么当master的断线时长超过10000毫秒之后，Sentinel2会将master判断为主观下线，而Sentinel1却认为master仍然在 线 。 只 有 当 master 的 断 线 时 长 超 过 50000 毫 秒 之 后 ， Sentinel1和Sentinel2才会都认为master进入了主观下线状态。\",\"检查客观下线状态\",\"当Sentinel将一个主服务器判断为主观下线之后，为了确认这个主服务器是否真的下线了，它会向同样监视这一主服务器的其他Sentinel进行询问，看它们是否也认为主服务器已经进入了下线状态（可以是主观下线或者客观下线）。当Sentinel从其他Sentinel那里接收到足够数量的已下线判断之后，Sentinel就会将从服务器判定为客观下线，并对主服务器执行故障转移操作。\",\"发送SENTINEL is-master-down-by-addr命令\",\"SENTINEL is-master-down-by-addr <ip> <port> <current_epoch> <runid> \",\"接收SENTINEL is-master-down-by-addr命令\",\"当一个Sentinel（目标Sentinel）接收到另一个Sentinel（源Sentinel ） 发 来 的 SENTINEL is-master-down-by 命 令 时 ， 目 标Sentinel会分析并取出命令请求中包含的各个参数，并根据其中的主服务器IP和端口号，检查主服务器是否已下线，然后向源Sentinel返回 一 条 包 含 三 个 参 数 的 Multi Bulk 回 复 作 为 SENTINEL is-master-down-by命令的回复：\",\"根据其他Sentinel发回的SENTINEL is-master-down-by-addr命令回复，Sentinel将统计其他Sentinel同意主服务器已下线的数量，当这一数量达到配置指定的判断客观下线所需的数量时，Sentinel会将主服务器实例结构flags属性的SRI_O_DOWN标识打开，表示主服务器已经进入客观下线状态.\",\"客观下线状态的判断条件\",\"当认为主服务器已经进入下线状态的Sentinel的数量，超过Sentinel配置中设置的quorum参数的值，那么该Sentinel就会认为主服务器已经进入客观下线状态。比如说，如果Sentinel在启动时载入了以下配置\",\"sentinel monitor master 127.0.0.1 6379 2 \",\"那么包括当前Sentinel在内，只要总共有两个Sentinel认为主服务器已经进入下线状态，那么当前Sentinel就将主服务器判断为客观下线\",\"不同Sentinel判断客观下线的条件可能不同\",\"同样以多的为主\",\"选举领头Sentinel\",\"当一个主服务器被判断为客观下线时，监视这个下线主服务器的各 个 Sentinel 会 进 行 协 商 ， 选 举 出 一 个 领 头 Sentinel ， 并 由 领 头Sentinel对下线主服务器执行故障转移操作。\",\"以下是Redis选举领头Sentinel的规则和方法：\",\"所有在线的Sentinel都有被选为领头Sentinel的资格，换句话说，监视同一个主服务器的多个在线Sentinel中的任意一个都有可能成为领头Sentinel。\",\"· 每 次 进 行 领 头 Sentinel 选 举 之 后 ， 不 论 选 举 是 否 成 功 ， 所 有Sentinel的配置纪元（configuration epoch）的值都会自增一次。配置纪元实际上就是一个计数器，并没有什么特别的。 ·在一个配置纪元里面，所有Sentinel都有一次将某个Sentinel设置为局部领头Sentinel的机会，并且局部领头一旦设置，在这个配置纪元里面就不能再更改。 · 每 个 发 现 主 服 务 器 进 入 客 观 下 线 的 Sentinel 都 会 要 求 其 他Sentinel将自己设置为局部领头Sentinel。 · 当 一 个 Sentinel （ 源 Sentinel ） 向 另 一 个 Sentinel （ 目 标Sentinel）发送SENTINEL is-master-down-by-addr命令，并且命令中的runid参数不是*符号而是源Sentinel的运行ID时，这表示源Sentinel要求目标Sentinel将前者设置为后者的局部领头Sentinel。 ·Sentinel设置局部领头Sentinel的规则是先到先得：最先向目标Sentinel发送设置要求的源Sentinel将成为目标Sentinel的局部领头Sentinel，而之后接收到的所有设置要求都会被目标Sentinel拒绝。 ·目标Sentinel在接收到SENTINEL is-master-down-by-addr命令之后，将向源Sentinel返回一条命令回复，回复中的leader_runid参 数 和 leader_epoch 参 数 分 别 记 录 了 目 标 Sentinel 的 局 部 领 头Sentinel的运行ID和配置纪元。 ·源Sentinel在接收到目标Sentinel返回的命令回复之后，会检查回复中leader_epoch参数的值和自己的配置纪元是否相同，如果相同的话，那么源Sentinel继续取出回复中的leader_runid参数，如果leader_runid参数的值和源Sentinel的运行ID一致，那么表示目标Sentinel将源Sentinel设置成了局部领头Sentinel。 ·如果有某个Sentinel被半数以上的Sentinel设置成了局部领头Sentinel，那么这个Sentinel成为领头Sentinel。举个例子，在一个由 10 个 Sentinel 组 成 的 Sentinel 系 统 里 面 ， 只 要 有 大 于等 于10/2+1=6个Sentinel将某个Sentinel设置为局部领头Sentinel，那么被设置的那个Sentinel就会成为领头Sentinel。 ·因为领头Sentinel的产生需要半数以上Sentinel的支持，并且每个Sentinel在每个配置纪元里面只能设置一次局部领头Sentinel，所以在一个配置纪元里面，只会出现一个领头Sentinel。 ·如果在给定时限内，没有一个Sentinel被选举为领头Sentinel，那么各个Sentinel将在一段时间之后再次进行选举，直到选出领头Sentinel为止。\",\"故障转移\",\"在选举产生出领头Sentinel之后，领头Sentinel将对已下线的主服务器执行故障转移操作，该操作包含以下三个步骤： 1）在已下线主服务器属下的所有从服务器里面，挑选出一个从服务器，并将其转换为主服务器。 2）让已下线主服务器属下的所有从服务器改为复制新的主服务器。 3）将已下线主服务器设置为新的主服务器的从服务器，当这个旧的主服务器重新上线时，它就会成为新的主服务器的从服务器。\",\"选出新的主服务器\",\"故障转移操作第一步要做的就是在已下线主服务器属下的所有从服务器中，挑选出一个状态良好、数据完整的从服务器，然后向这个从服务器发送SLAVEOF no one命令，将这个从服务器转换为主服务器。\",\"新的主服务器是怎样挑选出来的\",\"领头Sentinel会将已下线主服务器的所有从服务器保存到一个列表里面，然后按照以下规则，一项一项地对列表进行过滤：\",\"1）删除列表中所有处于下线或者断线状态的从服务器，这可以保证列表中剩余的从服务器都是正常在线的。 2）删除列表中所有最近五秒内没有回复过领头Sentinel的INFO命令的从服务器，这可以保证列表中剩余的从服务器都是最近成功进行过通信的。 3）删除所有与已下线主服务器连接断开超过down-after-milliseconds10毫秒的从服务器：down-after-milliseconds选项指定了判断主服务器下线所需的时间，而删除断开时长超过down-after-milliseconds10毫秒的从服务器，则可以保证列表中剩余的从服务器都没有过早地与主服务器断开连接，换句话说，列表中剩余的从服务器保存的数据都是比较新的。\",\"之后，领头Sentinel将根据从服务器的优先级，对列表中剩余的从服务器进行排序，并选出其中优先级最高的从服务器。\",\"如果有多个具有相同最高优先级的从服务器，那么领头Sentinel将按照从服务器的复制偏移量，对具有相同最高优先级的所有从服务器进行排序，并选出其中偏移量最大的从服务器（复制偏移量最大的从服务器就是保存着最新数据的从服务器）。 最后，如果有多个优先级最高、复制偏移量最大的从服务器，那么领头Sentinel将按照运行ID对这些从服务器进行排序，并选出其中运行ID最小的从服务器。\",\"修改从服务器的复制目标\",\"当新的主服务器出现之后，领头Sentinel下一步要做的就是，让已下线主服务器属下的所有从服务器去复制新的主服务器，这一动作可以通过向从服务器发送SLAVEOF命令来实现.\",\"将旧的主服务器变为从服务器\",\"故障转移操作最后要做的是，将已下线的主服务器设置为新的主服务器的从服务器因为旧的主服务器已经下线，所以这种设置是保存在server1对应的实例结构里面的，当server1重新上线时，Sentinel就会向它发送SLAVEOF命令，让它成为server2的从服务器。\"]},\"427\":{\"h\":\"集群\",\"t\":[\"Redis集群是Redis提供的分布式数据库方案，集群通过分片（sharding）来进行数据共享，并提供复制和故障转移功能。\",\"本节将对集群的节点、槽指派、命令执行、重新分片、转向、故障转移、消息等各个方面进行介绍。\",\"节点\",\"一个Redis集群通常由多个节点（node）组成，在刚开始的时候，每个节点都是相互独立的，它们都处于一个只包含自己的集群当中，要组建一个真正可工作的集群，我们必须将各个独立的节点连接起来，构成一个包含多个节点的集群。\",\"连接各个节点的工作可以使用CLUSER MEET <ip> <port>命令来完成\",\"跟一个节点发生CLUSER MEET命令可以让node节点与ip和port所指定的节点握手,当握手成功后node节点就会将ip和port所指定的节点添加到node节点所在的集群中.\",\"启动节点\",\"一个节点就是一个运行在集群模式下的Redis服务器，Redis服务器在启动时会根据cluster-enabled配置选项是否为yes来决定是否开启服务器的集群模式\",\"节点会继续使用所有在单机模式中使用的服务器组件, 比如说会继续使用文件事件处理器来处理命令请求和返回命令请求...\",\"集群数据结构\",\"clusterNode结构保存了一个节点的当前状态,比如节点创建的时间,节点的名字,节点当前的配置纪元,节点的IP地址和端口号等,每个节点都会使用clusterNode结构来记录自己的状态,并为集群中的所有其他节点都创建一个相应的clusterNode结构,以此来记录其他节点的状态.\",\"struct clusterNode { //创建节点的时间 mstime_t ctime; //节点的名字，由40个十六进制字符组成 //例如68eef66df23420a5862208ef5b1a7005b806f2ff char name[REDIS_CLUSTER_NAMELEN]; //节点标识 //使用各种不同的标识值记录节点的角色（比如主节点或者从节点）， //以及节点目前所处的状态（比如在线或者下线）。 int flags; //节点当前的配置纪元，用于实现故障转移 uint64_t configEpoch; //节点的IP地址 char ip[REDIS_IP_STR_LEN]; //节点的端口号 int port; //保存连接节点所需的有关信息 clusterLink *link; // ... }; \",\"link属性对应的是clusterLink结构,该结构保存的其实是连接节点所需要的有关信息,比如socket描述符,输入缓冲区和输出缓冲区:\",\"typedef struct clusterLink { //连接的创建时间 mstime_t ctime; // TCP套接字描述符 int fd; //输出缓冲区，保存着等待发送给其他节点的消息（message）。 sds sndbuf; //输入缓冲区，保存着从其他节点接收到的消息。 sds rcvbuf; //与这个连接相关联的节点，如果没有的话就为NULL struct clusterNode *node; } clusterLink; \",\"redisClient和clusterLink结构都有自己的socket描述符,输入输出缓冲区,区别在于,redisClient的socket是连接客户端的,clusterLink的socket是连接集群节点的.\",\"最后，每个节点都保存着一个clusterState结构，这个结构记录了在当前节点的视角下，集群目前所处的状态，例如集群是在线还是下线，集群包含多少个节点，集群当前的配置纪元，诸如此类\",\"typedef struct clusterState { //指向当前节点的指针 clusterNode *myself; //集群当前的配置纪元，用于实现故障转移 uint64_t currentEpoch; //集群当前的状态：是在线还是下线 int state; //集群中至少处理着一个槽的节点的数量 int size; //集群节点名单（包括myself节点） //字典的键为节点的名字，字典的值为节点对应的clusterNode结构 dict *nodes; // ... } clusterState; \",\"CLUSTER MEET命令的实现\",\"通过向节点A发送CLUSTER MEET命令，客户端可以让接收命令的节点A将另一个节点B添加到节点A当前所在的集群里面 1）节点A会为节点B创建一个clusterNode结构，并将该结构添加到自己的clusterState.nodes字典里面。 2）之后，节点A将根据CLUSTER MEET命令给定的IP地址和端口号，向节点B发送一条MEET消息（message）。 3）如果一切顺利，节点B将接收到节点A发送的MEET消息，节点B会为节点A创建一个clusterNode结构，并将该结构添加到自己的clusterState.nodes字典里面。 4）之后，节点B将向节点A返回一条PONG消息。 5）如果一切顺利，节点A将接收到节点B返回的PONG消息，通过这条PONG消息节点A可以知道节点B已经成功地接收到了自己发送的MEET消息。 6）之后，节点A将向节点B返回一条PING消息。 7）如果一切顺利，节点B将接收到节点A返回的PING消息，通过这条PING消息节点B可以知道节点A已经成功地接收到了自己返回的PONG消息，握手完成。\",\"之后，节点A会将节点B的信息通过Gossip协议传播给集群中的其他节点，让其他节点也与节点B进行握手，最终，经过一段时间之后，节点B会被集群中的所有节点认识。\"]},\"428\":{\"h\":\"槽指派\",\"t\":[\"Redis集群通过分片的形式来保存redis数据库中的键值对,集群中整个数据库被分成16384个槽,数据库中的每个键都数据这些槽中的一个,集群中的每个节点可以处理0-16384个槽.\",\"当数据库中的16384个槽都有节点处理时,集群处于上线状态,相反若有一个槽没有被处理,则整个集群是下线状态.\",\"通过向节点发送CLUSTER ADDSLOTS命令，我们可以将一个或多个槽指派（assign）给节点负责.\",\"CLUSTER ADDSLOTS <slot> [slot ...] 127.0.0.1:7000> CLUSTER ADDSLOTS 0 1 2 3 4 ... 5000 OK 127.0.0.1:7000> CLUSTER NODES 9dfb4c4e016e627d9769e4c9bb0d4fa208e65c26 127.0.0.1:7002 master - 0 1388316664849 0 connected 68eef66df23420a5862208ef5b1a7005b806f2ff 127.0.0.1:7001 master - 0 1388316665850 0 connected 51549e625cfda318ad27423a31e7476fe3cd2939 :0 myself,master - 0 0 0 connected 0-5000 // 为了让7000、7001、7002三个节点所在的集群进入上线状态，我们继续执行以下命令，将槽5001至槽10000指派给节点7001负责： 127.0.0.1:7001> CLUSTER ADDSLOTS 5001 5002 5003 5004 ... 10000 OK 127.0.0.1:7002> CLUSTER ADDSLOTS 10001 10002 10003 10004 ... 16383 OK \",\"数据库中的16384个槽都已经被指派给了相应的节点，集群进入上线状态\",\"记录节点的槽指派信息\",\"clusterNode结构的slots属性和numslot属性记录了节点负责处理哪些槽：\",\"struct clusterNode { // ... unsigned char slots[16384/8]; int numslots; }; \",\"如果slots数组在索引i上的二进制位的值为1，那么表示节点负责处理槽i。如果slots数组在索引i上的二进制位的值为0，那么表示节点不负责处理槽i。\",\"至于numslots属性则记 录 节 点 负 责 处 理 的 槽 的 数 量 ， 也 即 是slots数组中值为1的二进制位的数量\",\"传播节点的槽指派信息\",\"一个节点除了将自己负责处理的槽记录在clusterNode结构的slots属性和numslots,它还会将自己的slots数组通过消息发送给集群中的其他节点，以此来告知其他节点自己目前负责处理哪些槽。\",\"当节点A通过消息接收到了B的slots数组,节点A会从自己的clusterState.nodes字典中查找节点B对应的clusterNode结构,并对结构中的slots数组进行保存或更新.\",\"因为集群中的节点都会将自己的slots数组通过消息发送给集群中的其他节点,并且每个接收到slots数组的节点都会将数组保存到相应节点的clusterNode结构中,因此，集群中的每个节点都会知道数据库中的16384个槽分别被指派给了集群中的哪些节点。\",\"记录集群所有槽的指派信息\",\"clusterState结构中的slots数组记录了集群中所有16384个槽的指派信息：\",\"typedef struct clusterState { // ... clusterNode *slots[16384]; // ... } clusterState; \",\"slots 数 组 包 含 16384 个 项 ， 每 个 数 组 项 都 是 一 个 指 向clusterNode结构的指针：\",\"如果slots[i]指针指向NULL，那么表示槽i尚未指派给任何节点。\",\"如果slots[i]指针指向一个clusterNode结构，那么表示槽i已经指派给了clusterNode结构所代表的节点\",\"如果只将槽指派信息保存在各个节点的clusterNode.slots数组里，会出现一些无法高效地解决的问题，而clusterState.slots数组的存在解决了这些问题\",\"如果节点只使用clusterNode.slots数组来记录槽的指派信息，那么为了知道槽i是否已经被指派，或者槽i被指派给了哪个节点，程序需要遍历clusterState.nodes字典中的所有clusterNode结构，检查这些结构的slots数组，直到找到负责处理槽i的节点为止，这个过程的复 杂 度 为 O （ N ） ， 其 中 N 为 clusterState.nodes 字 典 保 存 的clusterNode结构的数量。\",\"而通过将所有槽的指派信息保存在clusterState.slots数组里面，程序要检查槽i是否已经被指派，又或者取得负责处理槽i的节点，只需要访问clusterState.slots[i]的值即可，这个操作的复杂度仅为O（1）。\",\"CLUSTER ADDSLOTS命令的实现\",\"CLUSTER ADDSLOTS命令接受一个或多个槽作为参数，并将所有输入的槽指派给接收该命令的节点负责,若输入的槽有任何一个槽有节点,那么返回错误.\",\"最后，在CLUSTER ADDSLOTS命令执行完毕之后，节点会通过发送消息告知集群中的其他节点，自己目前正在负责处理哪些槽。\"]},\"429\":{\"h\":\"在集群中执行命令\",\"t\":[\"在对数据库中的16384个槽都进行了指派之后，集群就会进入上线状态，这时客户端就可以向集群中的节点发送数据命令了。当客户端向节点发送与数据库键有关的命令时，接收命令的节点会计算出命令要处理的数据库键属于哪个槽，并检查这个槽是否指派给了自己：\",\"如果键所在的槽正好就指派给了当前节点，那么节点直接执行这个命令。\",\"如果键所在的槽并没有指派给当前节点，那么节点会向客户端返回一个MOVED错误，指引客户端转向（redirect）至正确的节点，并再次发送之前想要执行的命令。\",\"计算键属于哪个槽\",\"节点使用以下算法来计算给定键key属于哪个槽：\",\"def slot_number(key): return CRC16(key) & 16383 \",\"其中CRC16（key）语句用于计算键key的CRC-16校验和，而&16383语句则用于计算出一个介于0至16383之间的整数作为键key的槽号。\",\"使用CLUSTER KEYSLOT<key>命令可以查看一个给定键属于哪个槽：\",\"127.0.0.1:7000> CLUSTER KEYSLOT \\\"date\\\" (integer) 2022 127.0.0.1:7000> CLUSTER KEYSLOT \\\"msg\\\" (integer) 6257 \",\"判断槽是否由当前节点负责处理\",\"当节点计算出键所属的槽i之后，节点就会检查自己在clusterState.slots数组中的项i，判断键所在的槽是否由自己负责\",\"MOVED错误\",\"当节点发现键所在的槽并非由自己负责处理的时候，节点就会向客户端返回一个MOVED错误，指引客户端转向至正在负责槽的节点。\",\"MOVED <slot> <ip>:<port> \",\"一个客户端通常会与集群中多个节点建立socket连接,而所谓的节点转向实际上就是换一个socket来发送命令\",\"如果客户端还没有与想要转向的节点建立socket连接,那么客户端会先根据MOVED错误提供的IP地址和端口号来建立连接,再进行转向.\",\"集群模式的redis-cli客户端在接收到MOVED错误时，并不会打印出MOVED错误，而是根据MOVED错误自动进行节点转向，并打印出转向信息，所以我们是看不见节点返回的MOVED错误的.\"]},\"430\":{\"h\":\"节点数据库的实现\",\"t\":[\"集群节点保存键值对以及键值对的过期方式与Redis单机保存键值对过期时间的方式完全相同.\",\"不同的是,节点只能使用0号数据库\",\"另外，除了将键值对保存在数据库里面之外，节点还会用clusterState结构中的slots_to_keys跳跃表来保存槽和键之间的关系\"]},\"431\":{\"h\":\"重新分片\",\"t\":[\"Redis集群的重新分片操作可以将任意数量已经指派给某个节点的槽指派给另一个节点,并且相关槽所属的键值对也会从源节点被移动到目标节点.\",\"重新分片操作可以在线进行,在重新分片过程中,集群不需要下线,而且源节点和目标节点都可以继续处理命令请求.\",\"重新分片的实现原理\",\"Redis集群的重新分片操作其实是由edis的集群管理软件redis-trib负责执行的，Redis提供了进行重新分片所需的所有命令，而redis-trib则通过向源节点和目标节点发送命令来进行重新分片操作。\",\"redis-trib对集群的单个槽slot进行重新分片的步骤如下：\",\"对目标节点发送CLUSTER SETSLOT<slot>IMPORTING<source_id>命令让目标节点准备好从源节点导入属于槽的键值对\",\"redis-trib 对 源 节 点 发 送 CLUSTER SETSLOT<slot>MIGRATING<target_id>命令，让源节点准备好将属于槽slot的键值对迁移（migrate）至目标节点。\",\"redis-trib向源节点发送CLUSTER GETKEYSINSLOT<slot><count>命令，获得最多count个属于槽slot的键值对的键名（key name）。\",\"对于步骤3获得的每个键名，redis-trib都向源节点发送一个MIGRATE<target_ip><target_port><key_name>0<timeout>命令，将被选中的键原子地从源节点迁移至目标节点。\",\"重复3-4直到所有的键值对被迁移完毕\",\"redis-trib 向 集 群 中 的 任 意 一 个 节 点 发 送 CLUSTERSETSLOT<slot>NODE<target_id>命令，将槽slot指派给目标节点，这一指派信息会通过消息发送至整个集群，最终集群中的所有节点都会知槽slot已经指派给了目标节点。\"]},\"432\":{\"h\":\"ASK错误\",\"t\":[\"在进行重新分片期间，源节点向目标节点迁移一个槽的过程中，可能会出现这样一种情况：属于被迁移槽的一部分键值对保存在源节点里面，而另一部分键值对则保存在目标节点里面。\",\"当客户端向源节点发送一个与数据库键有关的命令，并且命令要处理的数据库键恰好就属于正在被迁移的槽时, 源节点会优先从自己的数据库里查找键,如果找到的话,直接执行客户端发送的命令,相反如果源节点没能在自己的数据库里找到,就可能已经迁移至目标节点,源节点就向客户端返回一个ASK错误,指引客户端转向正在导入槽的目标节点,并且再次发送之前想要发送的命令\",\"和接到MOVED错误时的情况类似，集群模式的redis-cli在接到ASK错误时也不会打印错误，而是自动根据错误提供的IP地址和端口进行转向动作。如果想看到节点发送的ASK错误的话，可以使用单机模式的redis-cli客户端\",\"CLUSTER SETSLOT IMPORTING命令的实现\",\"clusterState结构的importing_slots_from数组记录了当前节点正在从其他节点导入的槽：\",\"如 果 importing_slots_from[i] 的 值 不 为 NULL ， 而 是 指 向 一 个clusterNode结构，那么表示当前节点正在从clusterNode所代表的节点导入槽i。\",\"在对集群进行重新分片的时候，向目标节点发送命令：\",\"CLUSTER SETSLOT <i> IMPORTING <source_id> \",\"可以将目标节点clusterState.importing_slots_from[i]的值设置为source_id所代表节点的clusterNode结构。\",\"CLUSTER SETSLOT MIGRATING命令的实现\",\"clusterState结构的migrating_slots_to数组记录了当前节点正在迁移至其他节点的槽\",\"如 果 migrating_slots_to[i] 的 值 不 为 NULL ， 而 是 指 向 一 个clusterNode结构，那么表示当前节点正在将槽i迁移至clusterNode所代表的节点。在对集群进行重新分片的时候，向源节点发送命令\",\"CLUSTER SETSLOT <i> MIGRATING <target_id> \",\"ASK错误\",\"如果节点收到一个键key的命令请求,并且键key所属的槽i正好指派给了当前节点,那么就尝试从节点自己的数据库里查找key,如果找到了节点就直接执行客户端发送的命令.\",\"与此相反，如果节点没有在自己的数据库里找到键key，那么节点会检查自己的clusterState.migrating_slots_to[i]，看键key所属的槽i是否正在进行迁移，如果槽i的确在进行迁移的话，那么节点会向客户端发送一个ASK错误，引导客户端到正在导入槽i的节点去查找键key。\",\"ASKING命令\",\"在一般情况下，如果客户端向节点发送一个关于槽i的命令，而槽i又没有指派给这个节点的话，那么节点将向客户端返回一个MOVED错误；但是，如果节点的clusterState.importing_slots_from[i]显示节点正在导入槽i，并且发送命令的客户端带有REDIS_ASKING标识，那么节点将破例执行这个关于槽i的命令一次。\"]},\"433\":{\"h\":\"复制与故障转移\",\"t\":[\"Redis集群中的节点分为主节点（master）和从节点（slave），其中主节点用于处理槽，而从节点则用于复制某个主节点，并在被复制的主节点下线时，代替下线主节点继续处理命令请求。\",\"这时如果一个主节点下线,那么集群仍在正常工作的几个节点将从其从节点中选择选举出一个新节点作为新的主节点,这个新节点将接管原来节点处理的槽,并继续处理客户端的命令请求, 并且原主机的从主机也会改为复制新主机.\",\"此时如果原主节点重新上线,它也会成为新节点的从节点.\",\"设置从节点\",\"向一个节点发送命令：CLUSTER REPLICATE <node_id>\",\"可以让接收命令的节点成为node_id所指定节点的从节点，并开始对主节点进行复制\",\"接收到该命令的节点首先会在自己的clusterState.nodes字典中找到node_id 所 对 应 节 点 的 clusterNode 结 构 ， 并 将 自 己 的clusterState.myself.slaveof指针指向这个结构，以此来记录这个节点正在复制的主节点\",\"然后节点会修改自己在clusterState.myself.flags中的属性，关闭原本的REDIS_NODE_MASTER标识，打开REDIS_NODE_SLAVE标识，表示这个节点已经由原来的主节点变成了从节点。\",\"最后节点会调用复制代码,对指定节点进行复制.\",\"故障检测\",\"集群中每个节点会定期向集群中的其他节点发送PING消息,监测对方是否在线,如果接收PING的节点没有在规定时间内返回PONG,那么发送PING消息的节点就会将接收PING消息的节点标记为疑似下线（probablefail，PFAIL）.\",\"集群中的各个节点会通过相互发送消息来交换集群中各个节点的消息,例如某个节点是否处于在线状态,疑似下线状态（PFAIL），还是已下线状态（FAIL）。\",\"当一个主节点A通过消息得知主节点B认为主节点C进入了疑似下线状态时，主节点A会在自己的clusterState.nodes字典中找到主节点C所对应的clusterNode结构，并将主节点B的下线报告（failurereport）添加到clusterNode结构的fail_reports链表里面\",\"如果一个集群中半数以上负责槽的主节点都将节点x报告为疑似下线,那么这个主节点将x节点标记为下线,并且将x下线的消息向集群广播,所有收到这条FAIL消息的节点都会立即将主节点x标记为已下线。\",\"故障转移\",\"当一个从节点发现自己正在复制的主节点进入了已下线状态时，从节点将开始对下线主节点进行故障转移，以下是故障转移的执行步骤\",\"1）复制下线主节点的所有从节点里面，会有一个从节点被选中。点。 3）新的主节点会撤销所有对已下线主节点的槽指派，并将这些槽全部指派给自己。 4）新的主节点向集群广播一条PONG消息，这条PONG消息可以让集群中的其他节点立即知道这个节点已经由从节点变成了主节点，并且这个主节点已经接管了原本由已下线节点负责处理的槽。 5）新的主节点开始接收和自己负责处理的槽有关的命令请求，故障转移完成。\",\"选举新的主节点\",\"新的主节点是通过选举产生的。\",\"1）集群的配置纪元是一个自增计数器，它的初始值为0。 2）当集群里的某个节点开始一次故障转移操作时，集群配置纪元的值会被增一。 3）对于每个配置纪元，集群里每个负责处理槽的主节点都有一次投票的机会，而第一个向主节点要求投票的从节点将获得主节点的投票。 4）当从节点发现自己正在复制的主节点进入已下线状态时，从节点会向集群广播一条CLUSTERMSG_TYPE_FAILOVER_AUTH_REQUEST消息，要求所有收到这条消息、并且具有投票权的主节点向这个从节点投票。 5）如果一个主节点具有投票权（它正在负责处理槽），并且这个主节点尚未投票给其他从节点，那么主节点将向要求投票的从节点返回一条CLUSTERMSG_TYPE_FAILOVER_AUTH_ACK消息，表示这个主节点支持从节点成为新的主节点。 6 ） 每 个 参 与 选 举 的 从 节 点 都 会 接 收CLUSTERMSG_TYPE_FAILOVER_AUTH_ACK消息，并根据自己收到了多少条这种消息来统计自己获得了多少主节点的支持。 7）如果集群里有N个具有投票权的主节点，那么当一个从节点收集到大于等于N/2+1张支持票时，这个从节点就会当选为新的主节点。 8）因为在每一个配置纪元里面，每个具有投票权的主节点只能投一次票，所以如果有N个主节点进行投票，那么具有大于等于N/2+1张支持票的从节点只会有一个，这确保了新的主节点只会有一个。 9）如果在一个配置纪元里面没有从节点能收集到足够多的支持票，那么集群进入一个新的配置纪元，并再次进行选举，直到选出新的主节点为止。这个选举新主节点的方法和第16章介绍的选举领头Sentinel的方法非常相 似，因为两者都是基于Raft算法的领头选举leade relection）方法来实现的。\"]},\"434\":{\"h\":\"消息\",\"t\":[\"集群中的各个节点通过发送和接收消息（message）来进行通信，我们称发送消息的节点为发送者（sender），接收消息的节点为接收者（receiver）\",\"节点发送的消息主要有以下五种：\",\"MEET消息：当发送者接到客户端发送的CLUSTER MEET命令时，发送者会向接收者发送MEET消息，请求接收者加入到发送者当前所处的集群里面。\",\"PING消息：集群里的每个节点默认每隔一秒钟就会从已知节点列表中随机选出五个节点，然后对这五个节点中最长时间没有发送过PING消息的节点发送PING消息，以此来检测被选中的节点是否在线。\",\"PONG消息：当接收者收到发送者发来的MEET消息或者PING消息时，为了向发送者确认这条MEET消息或者PING消息已到达，接收者会向发送者返回一条PONG消息。\",\"FAIL消息：当一个主节点A判断另一个主节点B已经进入FAIL状态时，节点A会向集群广播一条关于节点B的FAIL消息，所有收到这条消息的节点都会立即将节点B标记为已下线。\",\"PUBLISH消息：当节点接收到一个PUBLISH命令时，节点会执行这 个 命 令 ， 并 向 集 群 广 播 一 条 PUBLISH 消 息 ， 所 有 接 收 到 这 条PUBLISH消息的节点都会执行相同的PUBLISH命令。\",\"一条消息由消息头（header）和消息正文（data）组成，接下来的内容将首先介绍消息头，然后再分别介绍上面提到的五种不同类型的消息正文。\"]},\"435\":{\"h\":\"消息头\",\"t\":[\"节点发送的所有消息都由一个消息头包裹，消息头除了包含消息正文之外，还记录了消息发送者自身的一些信息，因为这些信息也会被消息接收者用到，所以严格来讲，我们可以认为消息头本身也是消息的一部分。\",\"typedef struct { //消息的长度（包括这个消息头的长度和消息正文的长度） uint32_t totlen; //消息的类型 uint16_t type; //消息正文包含的节点信息数量 //只在发送MEET PING PONG 这三种Gossip 协议消息时使用 uint16_t count; //发送者所处的配置纪元 uint64_t currentEpoch; //如果发送者是一个主节点，那么这里记录的是发送者的配置纪元 // 如果发送者是一个从节点，那么这里记录的是发送者正在复制的主节点的配置纪元 uint64_t configEpoch; //发送者的名字（ID） char sender[REDIS_CLUSTER_NAMELEN]; //发送者目前的槽指派信息 unsigned char myslots[REDIS_CLUSTER_SLOTS/8]; //如果发送者是一个从节点，那么这里记录的是发送者正在复制的主节点的名字 //如果发送者是一个主节点，那么这里记录的是REDIS_NODE_NULL_NAME //（一个40字节长，值全为0的字节数组） char slaveof[REDIS_CLUSTER_NAMELEN]; //发送者的端口号 uint16_t port; //发送者的标识值 uint16_t flags; //发送者所处集群的状态 unsigned char state; //消息的正文（或者说，内容） union clusterMsgData data; } clusterMsg; \",\"clusterMsg.data属性指向联合cluster.h/clusterMsgData，这个联合就是消息的正文：\",\"union clusterMsgData { // MEET、PING、PONG消息的正文 struct { //每条MEET、PING、PONG消息都包含两个 // clusterMsgDataGossip结构 clusterMsgDataGossip gossip[1]; } ping; // FAIL消息的正文 struct { clusterMsgDataFail about; } fail; // PUBLISH消息的正文 struct { clusterMsgDataPublish msg; } publish; //其他消息的正文... }; \",\"MEET、PING、PONG消息的实现\",\"Redis集群中的各个节点通过Gossip协议来交换各自关于不同节点的状态信息，其中Gossip协议由MEET、PING、PONG三种消息实现，这三种消息的正文都由两个cluster.h/clusterMsgDataGossip结构组成：\",\"union clusterMsgData { // ... // MEET、PING和PONG消息的正文 struct { //每条MEET、PING、PONG消息都包含两个 // clusterMsgDataGossip结构 clusterMsgDataGossip gossip[1]; } ping; //其他消息的正文... }; \",\"当接收者收到MEET、PING、PONG消息时，接收者会访问消息正文中的两个clusterMsgDataGossip结构，并根据自己是否认识clusterMsgDataGossip结构中记录的被选中节点来选择进行哪种操作：\",\"如果被选中节点不存在于接收者的已知节点列表，那么说明接收者是第一次接触到被选中节点，接收者将根据结构中记录的IP地址和端口号等信息，与被选中节点进行握手。\",\"如果被选中节点已经存在于接收者的已知节点列表，那么说明接收者之前已经与被选中节点进行过接触，接收者将根据clusterMsgDataGossip结构记录的信息，对被选中节点所对应的clusterNode结构进行更新。\",\"举个发送PING消息和返回PONG消息的例子，假设在一个包含A、B、C、D、E、F六个节点的集群里： ·节点A向节点D发送PING消息，并且消息里面包含了节点B和节点C的信息，当节点D收到这条PING消息时，它将更新自己对节点B和节点C的认识。 ·之后，节点D将向节点A返回一条PONG消息，并且消息里面包含了节点E和节点F的消息，当节点A收到这条PONG消息时，它将更新自己对节点E和节点F的认识。\",\"FAIL消息的实现\",\"当集群里的主节点A将主节点B标记为已下线（FAIL）时，主节点A将向集群广播一条关于主节点B的FAIL消息，所有接收到这条FAIL消息的节点都会将主节点B标记为已下线。\",\"在集群的节点数量比较大的情况下，单纯使用Gossip协议来传播节点的已下线信息会给节点的信息更新带来一定延迟，因为Gossip协议消息通常需要一段时间才能传播至整个集群，而发送FAIL消息可以让集群里的所有节点立即知道某个主节点已下线，从而尽快判断是否需要将集群标记为下线，又或者对下线主节点进行故障转移。\",\"FAIL消息的正文由cluster.h/clusterMsgDataFail结构表示，这个结构只包含一个nodename属性，该属性记录了已下线节点的名字：\",\"typedef struct { char nodename[REDIS_CLUSTER_NAMELEN]; } clusterMsgDataFail; \",\"因为集群里的所有节点都有一个独一无二的名字，所以FAIL消息里面只需要保存下线节点的名字，接收到消息的节点就可以根据这个名字来判断是哪个节点下线了。\",\"PUBLISH消息的实现\",\"当客户端向集群中的某个节点发送命令：\",\"PUBLISH <channel> <message> \",\"的时候,接收到PUBLISH命令的节点不仅会向channel频道发送消息message，它还会向集群广播一条PUBLISH消息，所有接收到这条PUBLISH消息的节点都会向channel频道发送message消息, 将导致集群中的所有节点都向channel频道发送message消息。\",\"PUBLISH消息的正文由cluster.h/clusterMsgDataPublish结构表示：\",\"typedef struct { uint32_t channel_len; uint32_t message_len; //定义为8字节只是为了对齐其他消息结构 //实际的长度由保存的内容决定 unsigned char bulk_data[8]; } clusterMsgDataPublish; \",\"clusterMsgDataPublish 结 构 的 bulk_data 属 性 是 一 个 字 节 数组 ， 这 个 字 节 数 组 保 存 了 客 户 端 通 过 PUBLISH 命 令 发 送 给 节 点 的channel 参 数 和 message 参 数 ， 而结 构 的 channel_len 和message_len则分别保存了channel参数的长度和message参数的长度\"]},\"436\":{\"h\":\"Redis分布式锁问题\",\"t\":[\"Redis是如何实现分布式锁的?\",\"Redis本身可以被多个客户端访问,所以恰好是一个共享存储系统,可以来保存分布式锁,而且redis的读写性能很高,足够应付高并发场景了.\",\"Redis的SET命令有个NX参数可以实现在key不存在时插入,所以可以用它实现分布式锁:\",\"key不存在,则直接插入成功\",\"key存在则插入失败\",\"我们可以看到命令是这样的\",\"SET lock_key unique_value NX expire lock_key px 10000 SET lock_key unique_value NX PX 10000 \",\"选择下面一种,因为可能刚设置了锁,第二步的expire设置过期时间就失败了,所以必须合并到一步,采用第二种方式\",\"lock_key 就是 key 键；\",\"unique_value 是客户端生成的唯一的标识，区分来自不同客户端的锁操作；\",\"NX 代表只在 lock_key 不存在时，才对 lock_key 进行设置操作；\",\"PX 10000 表示设置 lock_key 的过期时间为 10s，这是为了避免客户端发生异常而无法释放锁。\",\"那么解锁呢?解锁需要1. 保证解锁的客户端是持有锁的客户端 2. 删除锁 所以需要LUA脚本支持\",\"// 释放锁时，先比较 unique_value 是否相等，避免锁的误释放 if redis.call(\\\"get\\\",KEYS[1]) == ARGV[1] then return redis.call(\\\"del\\\",KEYS[1]) else return 0 end \",\"基于 Redis 实现分布式锁有什么优缺点？ 基于 Redis 实现分布式锁的优点：\",\"性能高效（这是选择缓存实现分布式锁最核心的出发点）。 实现方便。很多研发工程师选择使用 Redis 来实现分布式锁，很大成分上是因为 Redis 提供了 setnx 方法，实现分布式锁很方便。 避免单点故障（因为 Redis 是跨集群部署的，自然就避免了单点故障）。 \",\"基于 Redis 实现分布式锁的缺点：\",\"超时时间不好设置。如果锁的超时时间设置过长，会影响性能，如果设置的超时时间过短会保护不到共享资源。比如在有些场景中，一个线程 A 获取到了锁之后，由于业务代码执行时间可能比较长，导致超过了锁的超时时间，自动失效，注意 A 线程没执行完，后续线程 B 又意外的持有了锁，意味着可以操作共享资源，那么两个线程之间的共享资源就没办法进行保护了。 那么如何合理设置超时时间呢？ 我们可以基于续约的方式设置超时时间：先给锁设置一个超时时间，然后启动一个守护线程，让守护线程在一段时间后，重新设置这个锁的超时时间。实现方式就是：写一个守护线程，然后去判断锁的情况，当锁快失效的时候，再次进行续约加锁，当主线程执行完成后，销毁续约锁即可，不过这种方式实现起来相对复杂。 Redis 主从复制模式中的数据是异步复制的，这样导致分布式锁的不可靠性。如果在 Redis 主节点获取到锁后，在没有同步到其他节点时，Redis 主节点宕机了，此时新的 Redis 主节点依然可以获取锁，所以多个应用服务就可以同时获取到锁。 \"]},\"437\":{\"h\":\"Redis 如何解决集群情况下分布式锁的可靠性？\",\"t\":[\"Redis 官方已经设计了一个分布式锁算法 Redlock（红锁）。\",\"它是基于多个 Redis 节点的分布式锁，即使有节点发生了故障，锁变量仍然是存在的，客户端还是可以完成锁操作。\",\"Redlock 算法的基本思路，是让客户端和多个独立的 Redis 节点依次请求申请加锁，如果客户端能够和半数以上的节点成功地完成加锁操作，那么我们就认为，客户端成功地获得分布式锁，否则加锁失败。\",\"Redlock 算法加锁三个过程：\",\"第一步是，客户端获取当前时间。 第二步是，客户端按顺序依次向 N 个 Redis 节点执行加锁操作： 加锁操作使用 SET 命令，带上 NX，EX/PX 选项，以及带上客户端的唯一标识。 如果某个 Redis 节点发生故障了，为了保证在这种情况下，Redlock 算法能够继续运行，我们需要给「加锁操作」设置一个超时时间（不是对「锁」设置超时时间，而是对「加锁操作」设置超时时间）。 第三步是，一旦客户端完成了和所有 Redis 节点的加锁操作，客户端就要计算整个加锁过程的总耗时（t1）。 \",\"加锁成功要同时满足两个条件（简述：如果有超过半数的 Redis 节点成功的获取到了锁，并且总耗时没有超过锁的有效时间，那么就是加锁成功）：\",\"条件一：客户端从超过半数（大于等于 N/2+1）的 Redis 节点上成功获取到了锁； 条件二：客户端获取锁的总耗时（t1）没有超过锁的有效时间。 \",\"加锁成功后，客户端需要重新计算这把锁的有效时间，计算的结果是「锁的最初有效时间」减去「客户端为获取锁的总耗时（t1）」。\",\"加锁失败后，客户端向所有 Redis 节点发起释放锁的操作，释放锁的操作和在单节点上释放锁的操作一样，只要执行释放锁的 Lua 脚本就可以了。\"]},\"438\":{\"c\":[\"record\"]},\"439\":{\"c\":[\"redis\"]},\"440\":{\"h\":\"Redis笔记\"},\"441\":{\"c\":[\"tutorial\"]},\"442\":{\"c\":[\"redis\"]},\"443\":{\"h\":\"Rust基础学习\"},\"444\":{\"c\":[\"rust\"]},\"445\":{\"c\":[\"rust\"]},\"446\":{\"h\":\"Rust错误处理\",\"t\":[\"每一门语言的错误处理都很重要，重要到可能成为被喷的点比如 Go 的 if err != nil ，比起 Go， Rust的错误处理可谓是集百家之长。\",\"任何语言的错误处理基本可以分为两大部分:\",\"可恢复的(recoverable)\",\"不可恢复的(unrecoverable)\",\"对于前者而言，我们可能只需要打印日志提醒用户——此处代码发生了错误而已。 可对于后者，这种错误很可能就是程序崩溃(BUG)的前兆,比如项目初始化失败、找不到配置文件、访问数组索引越界等等，我们要对这类错误立即处理。\",\"大多数语言对于这两者的处理是很模糊的，并经常采用统一的异常来处理。\",\"比如Go语言的错误处理一般就是:\",\"if err != nil { log.Error().(\\\"Error\\\",err).Msg(\\\"\\\") return err } \",\"而Rust没有异常，相反，它有Result<T, E>类型来处理可恢复的错误；使用panic!宏来处理程序遇到的不可恢复的错误。\",\"我们先讲解panic!这类处理不可恢复的错误，因为比较简单😜\",\"下面的示例借鉴(Copy)Rust Book，没办法...写的示例确实好👍\"]},\"447\":{\"h\":\"panic! 处理不可恢复的错误😱\",\"t\":[\"panic顾名思义就是直译就是恐慌的意思，会让程序直接退出。\",\"有两种情况会导致panic，一种是程序异常(比如访问数组索引越界)，另一种是自己手动panic。\",\"fn main() { panic!(\\\"main panic!!!\\\"); } \",\"这段程序会直接输出:\",\"$ cargo run Compiling panic v0.1.0 (file:///projects/panic) Finished dev [unoptimized + debuginfo] target(s) in 0.25s Running `target/debug/panic` thread 'main' panicked at 'main panic!!!', src/main.rs:2:5 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace \",\"最后两行是panic调用的错误信息，第一行显示了 panic 提供的信息并指明了源码中 panic 出现的位置：src/main.rs:2:5 表明这是 src/main.rs 文件的第二行第五个字符。也就是我们手动panic!(\\\"main panic!!!\\\");的这一行代码。\",\"我们还可以通过panic后的backtrace追踪出错信息。\",\"使用 panic! 的 backtrace\",\"让我们来看看另一个因为我们代码中的 bug 引起的别的库中 panic! 的例子，而不是直接的宏调用。\",\"fn main() { let v = vec![1, 2, 3]; v[99]; } \",\"这里尝试访问 vector 的第一百个元素（这里的索引是 99 因为索引从 0 开始），不过它只有三个元素。这种情况下 Rust 会 panic。[] 应当返回一个元素，不过如果传递了一个无效索引，就没有可供 Rust 返回的正确的元素。\",\"相关信息\",\"在C语言中，这样的尝试是未知的(不会直接报错)，所以会有潜在的安全漏洞。\",\"为了保护程序远离这类漏洞，如果尝试读取一个索引不存在的元素，Rust 程序会crash:\",\"cargo run Compiling panic v0.1.0 (file:///projects/panic) Finished dev [unoptimized + debuginfo] target(s) in 0.27s Running `target/debug/panic` thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 99', src/main.rs:4:5 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace \",\"错误指向 main.rs 的第 4 行，这里我们尝试访问索引 99。\",\"下面的说明（note）行提醒我们可以设置 RUST_BACKTRACE 环境变量来得到一个 backtrace。\",\"backtrace 是一个执行到目前位置所有被调用的函数的列表。Rust 的 backtrace 跟其他语言中的一样：阅读 backtrace 的关键是从头开始读直到发现你编写的文件。\",\"这就是问题的发源地。这一行往上是你的代码所调用的代码；往下则是调用你的代码的代码。这些行可能包含核心 Rust 代码，标准库代码或用到的 crate 代码。让我们将 RUST_BACKTRACE 环境变量设置为任何不是 0 的值来获取 backtrace 看看。示例展示了与你看到类似的输出：\",\"RUST_BACKTRACE=1 cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.00s Running `target/debug/ownership` thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 99', src/main.rs:4:5 stack backtrace: 0: rust_begin_unwind at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/std/src/panicking.rs:593:5 1: core::panicking::panic_fmt at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/core/src/panicking.rs:67:14 2: core::panicking::panic_bounds_check at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/core/src/panicking.rs:162:5 3: <usize as core::slice::index::SliceIndex<[T]>>::index at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/core/src/slice/index.rs:258:10 4: core::slice::index::<impl core::ops::index::Index<I> for [T]>::index at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/core/src/slice/index.rs:18:9 5: <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/alloc/src/vec/mod.rs:2690:9 6: ownership::main at ./src/main.rs:4:5 7: core::ops::function::FnOnce::call_once at /rustc/eb26296b556cef10fb713a38f3d16b9886080f26/library/core/src/ops/function.rs:250:5 note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace. \",\"你实际看到的输出可能因不同的操作系统和 Rust 版本而有所不同。\",\"我们的\",\"6: ownership::main at ./src/main.rs:4:5 \",\"可以看到具体出现问题的行数，其他的可能是rust标准库、crate的代码。\"]},\"448\":{\"h\":\"Result<T, E> 处理可恢复的错误 😕\",\"t\":[\"大部分错误其实没有严重到需要程序立即退出。比如一个函数可以打开某个文件夹里的文件，但此时这个文件不存在，那么就需要返回错误让调用方先创建这个文件再次执行。而不是让整个进程中止。\",\"我们先来回忆一下Result的枚举类型是什么:\",\"enum Result<T, E> { Ok(T), Err(E), } \",\"T 和 E 是泛型类型参数。具体来说Result是一个盲盒，如果结果没问题，那就是返回T类型的OK(T),如果结果有错误那就返回E类型的Err(E),二选一。\",\"让我们调用一个返回 Result 的函数，因为它打开一个文件，并且可能会失败：\",\"// src/main.rs use std::fs::File; fn main() { let greeting_file_result = File::open(\\\"hello.txt\\\"); } \",\"File::open返回的是Result<T, E>.如果调用成功，则泛型参数 T 会被 File::open 的实现放入成功返回值的类型 std::fs::File，这是一个文件句柄。\",\"错误返回值使用的 E 的类型是 std::io::Error。这些返回类型意味着 File::open 调用可能成功并返回一个可以读写的文件句柄。\",\"这个函数调用也可能会失败：例如，也许文件不存在，或者可能没有权限访问这个文件。File::open 函数需要一个方法在告诉我们成功与否的同时返回文件句柄或者错误信息。这些信息正好是 Result 枚举所代表的。\",\"当 File::open 成功时，greeting_file_result 变量将会是一个包含文件句柄的 Ok 实例。当失败时，greeting_file_result 变量将会是一个包含了更多关于发生了何种错误的信息的 Err 实例。\",\"use std::fs::File; fn main() { let greeting_file_result = File::open(\\\"hello.txt\\\"); let greeting_file = match greeting_file_result { Ok(file) => file, Err(error) => panic!(\\\"Problem opening the file: {:?}\\\", error), }; } \",\"注意与 Option 枚举一样，Result 枚举和其成员也被导入到了 prelude 中，所以就不需要在 match 分支中的 Ok 和 Err 之前指定 Result::。\",\"这里我们告诉 Rust 当结果是 Ok 时，返回 Ok 成员中的 file 值，然后将这个文件句柄赋值给变量 greeting_file。match 之后，我们可以利用这个文件句柄来进行读写。\",\"match 的另一个分支处理从 File::open 得到 Err 值的情况。在这种情况下，我们选择调用 panic! 宏。如果当前目录没有一个叫做 hello.txt 的文件，当运行这段代码时会看到如下来自 panic! 宏的输出：\",\"$ cargo run Compiling error-handling v0.1.0 (file:///projects/error-handling) Finished dev [unoptimized + debuginfo] target(s) in 0.73s Running `target/debug/error-handling` thread 'main' panicked at 'Problem opening the file: Os { code: 2, kind: NotFound, message: \\\"No such file or directory\\\" }', src/main.rs:8:23 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace \",\"实际上我们还可以对错误信息进行处理。\",\"不管 File::open 是因为什么原因失败都会 panic!。\",\"我们真正希望的是对不同的错误原因采取不同的行为：如果 File::open 因为文件不存在而失败，我们希望创建这个文件并返回新文件的句柄。如果 File::open 因为任何其他原因失败，例如没有打开文件的权限，我们仍然希望 panic!。让我们看看下面的代码示例，其中 match 增加了另一个分支：\",\"use std::fs::File; use std::io::ErrorKind; fn main() { let greeting_file_result = File::open(\\\"hello.txt\\\"); let greeting_file = match greeting_file_result { Ok(file) => file, Err(error) => match error.kind() { ErrorKind::NotFound => match File::create(\\\"hello.txt\\\") { Ok(fc) => fc, Err(e) => panic!(\\\"Problem creating the file: {:?}\\\", e), }, other_error => { panic!(\\\"Problem opening the file: {:?}\\\", other_error); } }, }; } \",\"是的...我们还可以通过匹配error的类型进一步match。。。\"]},\"449\":{\"h\":\"不处理Result\",\"t\":[\"如果针对这类Result不想处理，如果返回错误值接panic，那我们就可以用unwrap和expect。\",\"match 能够胜任它的工作，不过它可能有点冗长并且不总是能很好的表明其意图。Result<T, E> 类型定义了很多辅助方法来处理各种情况。其中之一叫做 unwrap，它的实现就类似于 match 语句。如果 Result 值是成员 Ok，unwrap 会返回 Ok 中的值。如果 Result 是成员 Err，unwrap 会为我们调用 panic!。这里是一个实践 unwrap 的例子：\",\"use std::fs::File; fn main() { let greeting_file = File::open(\\\"hello.txt\\\").unwrap(); } \",\"如果调用这段代码时不存在 hello.txt 文件，我们将会看到一个 unwrap 调用 panic! 时提供的错误信息：\",\"真男人的代码特别稳定，要么一直运行，要么直接panic...\",\"thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \\\"No such file or directory\\\" }', src/main.rs:4:49 \",\"expect 与 unwrap 的使用方式一样，不同之处是可以添加错误信息:\",\"use std::fs::File; fn main() { let greeting_file = File::open(\\\"hello.txt\\\") .expect(\\\"hello.txt should be included in this project\\\"); } \",\"thread 'main' panicked at 'hello.txt should be included in this project: Error { repr: Os { code: 2, message: \\\"No such file or directory\\\" } }', src/libcore/result.rs:906:4 \"]},\"450\":{\"h\":\"传播错误\",\"t\":[\"当编写一个其实先会调用一些可能会失败的操作的函数时，除了在这个函数中处理错误外，还可以选择让调用者知道这个错误并决定该如何处理。这被称为 传播（propagating）错误，这样能更好的控制代码调用，因为比起你代码所拥有的上下文，调用者可能拥有更多信息或逻辑来决定应该如何处理错误。\",\"展示了一个从文件中读取用户名的函数。如果文件不存在或不能读取，这个函数会将这些错误返回给调用它的代码：\",\"use std::fs::File; use std::io::{self, Read}; fn read_username_from_file() -> Result<String, io::Error> { let username_file_result = File::open(\\\"hello.txt\\\"); let mut username_file = match username_file_result { Ok(file) => file, Err(e) => return Err(e), }; let mut username = String::new(); match username_file.read_to_string(&mut username) { Ok(_) => Ok(username), Err(e) => Err(e), } } \",\"这个函数可以编写成更加简短的形式，不过我们以大量手动处理开始以便探索错误处理；在最后我们会展示更短的形式。让我们看看函数的返回值：Result<String, io::Error>。这意味着函数返回一个 Result<T, E> 类型的值，其中泛型参数 T 的具体类型是 String，而 E 的具体类型是 io::Error。\",\"如果这个函数没有出任何错误成功返回，函数的调用者会收到一个包含 String 的 Ok 值 —— 函数从文件中读取到的用户名。如果函数遇到任何错误，函数的调用者会收到一个 Err 值，它储存了一个包含更多这个问题相关信息的 io::Error 实例。这里选择 io::Error 作为函数的返回值是因为它正好是函数体中那两个可能会失败的操作的错误返回值：File::open 函数和 read_to_string 方法。\",\"函数体以调用 File::open 函数开始。接着使用 match 处理返回值 Result如果 File::open 成功了，模式变量 file 中的文件句柄就变成了可变变量 username_file 中的值，接着函数继续执行。在 Err 的情况下，我们没有调用 panic!，而是使用 return 关键字提前结束整个函数，并将来自 File::open 的错误值（现在在模式变量 e 中）作为函数的错误值传回给调用者。\",\"所以如果 username_file 中有了一个文件句柄，该数接着在变量 username 中创建了一个新 String 并调用文件句柄 username_file 的 read_to_string 方法来将文件的内容读取到 username 中。read_to_string 方法也会返回一个 Result，因为它可能会失败，哪怕是 File::open 已经成功了。所以我们需要另一个 match 来处理这个 Result：如果 read_to_string 成功了，那么这个函数就成功了，并返回文件中的用户名，它现在位于被封装进 Ok 的 username 中。如果read_to_string 失败了，则像之前处理 File::open 的返回值的 match 那样返回错误值。不过并不需要显式地调用 return，因为这是函数的最后一个表达式。\",\"调用这个函数的代码最终会得到一个包含用户名的 Ok 值，或者一个包含 io::Error 的 Err 值。我们无从得知调用者会如何处理这些值。例如，如果他们得到了一个 Err 值，他们可能会选择 panic! 并使程序崩溃、使用一个默认的用户名或者从文件之外的地方寻找用户名。我们没有足够的信息知晓调用者具体会如何尝试，所以将所有的成功或失败信息向上传播，让他们选择合适的处理方法。\",\"这种传播错误的模式在 Rust 是如此的常见，以至于 Rust 提供了 ? 问号运算符来使其更易于处理。\"]},\"451\":{\"h\":\"传播错误的简写：? 运算符\",\"t\":[\"use std::fs::File; use std::io::{self, Read}; fn read_username_from_file() -> Result<String, io::Error> { let mut username_file = File::open(\\\"hello.txt\\\")?; let mut username = String::new(); username_file.read_to_string(&mut username)?; Ok(username) } \",\"简单吧，它实现了和上面代码相同的功能。\",\"? 运算符消除了大量样板代码并使得函数的实现更简单。我们甚至可以在 ? 之后直接使用链式方法调用来进一步缩短代码。\",\"use std::fs::File; use std::io::{self, Read}; fn read_username_from_file() -> Result<String, io::Error> { let mut username = String::new(); File::open(\\\"hello.txt\\\")?.read_to_string(&mut username)?; Ok(username) } \",\"下面展示了一个使用 fs::read_to_string 的更为简短的写法：\",\"use std::fs; use std::io; fn read_username_from_file() -> Result<String, io::Error> { fs::read_to_string(\\\"hello.txt\\\") } \",\"将文件读取到一个字符串是相当常见的操作，所以 Rust 提供了名为 fs::read_to_string 的函数，它会打开文件、新建一个 String、读取文件的内容，并将内容放入 String，接着返回它。当然，这样做就没有展示所有这些错误处理的机会了，所以我们最初就选择了艰苦的道路。\",\"Option也可以用?操作符号。\",\"? 运算符只能被用于返回值与 ? 作用的值相兼容的函数。因为 ? 运算符被定义为从函数中提早返回一个值，这与 match 表达式有着完全相同的工作方式。match 作用于一个 Result 值，提早返回的分支返回了一个 Err(e) 值。函数的返回值必须是 Result 才能与这个 return 相兼容。\"]},\"452\":{\"c\":[\"rust\"]},\"453\":{\"c\":[\"rust\"]},\"454\":{\"h\":\"Rust 全局变量\",\"t\":[\"声明一个全局变量在其他语言中看起来非常简单，但是在Rust中，由于生命周期特性，让这个本应该特别简单的概念使用起来无比复杂...\",\"相关信息\",\"当我们说一个变量是全局变量的时候，这意味着这是一个变量，并且作用域是全局，整个代码库都可以识别到。\",\"在某些场景下，我们需要一些全局变量来简化代码的设计，比如可以有一个静态的变量最大值、存储不断变大的ID等等。\",\"首先我们可以确定的是：全局变量的生命周期一定是'static,但是不代表它需要用static来声明，例如常量、字符串字面值就不需要static显式声明，原因是它们在编译时就直接进入二进制可执行文件中了。\",\"由此我们可以分类一下，有编译期就初始化的全局变量，也有运行时才初始化的全局变量...\"]},\"455\":{\"h\":\"编译期初始化\",\"t\":[\"我们大多数使用的全局变量都只需在编译时期初始化就可以了,比如\",\"针对某一类变量的最大值(比如Linux系统下最长文件名是255字节)\",\"任务状态值(创建、运行、失败、重试等...)\",\"...\"]},\"456\":{\"h\":\"静态常量\",\"t\":[\"全局常量可以在程序的任意部分使用，在其他模块中定义，则加上包名即可:\",\"const MAX_ID: usize = usize::MAX/3; fn main() { println!(\\\"最大ID: {}\\\", MAX_ID); } \",\"常量和普通变量的区别:\",\"关键字是const,不是let\",\"常量的类型不可以省略\",\"定义常量的命名规则类似C语言，规范是全部使用大写\",\"常量可以在任意作用域中使用，其生命周期可能会贯穿整个程序的生命周期，所以编译器可能会在别的地方使用常量时，直接将其==内联(直接将常量字段赋值)==到代码中\",\"常量的赋值不可以用变量(使用当前时间)\",\"常量不允许重复定义\"]},\"457\":{\"h\":\"静态变量\",\"t\":[\"静态变量允许声明一个全局的变量，用于全局数据的统计，例如用一个变量统计当前的请求次数等:\",\"static mut REQUEST_RECV: unsize = 0; fn main() { unsafe { REQUEST_RECV += 1; assert_eq!(REQUEST_RECV, 1); } } \",\"Rust要求必须使用unsafe的语法块才能访问和修改static变量，因为这种使用方式不安全。\",\"和常量相同，定义静态变量时，必须赋值为编译器就可以计算出的值(常量表达式/数学表达式)，不能时运行时才能计算出的值(当前时间)\",\"静态变量和常量的区别\",\"静态变量不会被内联，在程序中静态变量只有一个实例，所有引用都会指向同一个地址\",\"存储在静态变量中的值必须实现Sync trait\"]},\"458\":{\"h\":\"原子类型\",\"t\":[\"上面的静态变量其实不具备线程安全性\",\"但是原子类型可以\",\"use std::sync::atomic::{AtomicUsize, Ordering}; static REQUEST_RECV: AtomicUsize = AtomicUsize::new(0); fn main() { for _ in 0..100 { REQUEST_RECV.fetch_add(1, Ordering::Relaxed); } println!(\\\"current request recv: {}\\\", REQUEST_RECV.load(Ordering::Relaxed)); } \",\"实现一个简单的全局ID:\",\"use std::sync::atomic::{Ordering, AtomicUsize}; struct Factory{ factory_id: usize, } static GLOBAL_ID_COUNTER: AtomicUsize = AtomicUsize::new(0); const MAX_ID: usize = usize::MAX / 2; fn generate_id()->usize{ // 检查两次溢出，否则直接加一可能导致溢出 let current_val = GLOBAL_ID_COUNTER.load(Ordering::Relaxed); if current_val > MAX_ID{ panic!(\\\"Factory ids overflowed\\\"); } let next_id = GLOBAL_ID_COUNTER.fetch_add(1, Ordering::Relaxed); if next_id > MAX_ID{ panic!(\\\"Factory ids overflowed\\\"); } next_id } impl Factory{ fn new()->Self{ Self{ factory_id: generate_id() } } } \"]},\"459\":{\"h\":\"运行期初始化\",\"t\":[\"以上的静态初始化有一个致命问题:无法使用函数进行静态初始化，例如你想声明一个全局的Mutex锁：\",\"use std::sync::Mutex; static NAMES: Mutex<String> = Mutex::new(String::from(\\\"Rust\\\")); fn main() { let v = NAMES.lock().unwrap(); println!(\\\"{}\\\", v); } \",\"运行后报错:\",\"calls in statics are limited to constant functions, tuple structs and tuple variants = note: consider wrapping this expression in `Lazy::new(|| ...)` from the `once_cell` crate: https://crates.io/crates/once_cell \",\"但是又必须声明时就对NAMES进行初始化，此时我们就可以用lazy_static包来解决这个问题。\"]},\"460\":{\"h\":\"lazy_static\",\"t\":[\"lazy_static时社区提供的用于懒加载静态变量的宏，一句话：可以让我们在运行期再初始化静态变量。\",\"use std::sync::Mutex; use lazy_static::lazy_static; lazy_static! { static ref NAMES: Mutex<String> = Mutex::new(String::from(\\\"Rust\\\")); } fn main() { let mut v = NAMES.lock().unwrap(); v.push_str(\\\", Myth\\\"); println!(\\\"{}\\\", v); } \",\"当然使用lazy_static访问静态变量时，会有一定的性能损失，因为其内部实现了一个底层的sync::Once,每次访问变量时，都执行一次原子指令确认静态变量的初始化是否完成。\",\"lazy_static宏，匹配的是static ref,所以定义的静态变量都是不可变的引用。\",\"use lazy_static::lazy_static; use std::collections::HashMap; lazy_static! { static ref HASHMAP: HashMap<u32, &'static str> = { let mut m = HashMap::new(); m.insert(0, \\\"foo\\\"); m.insert(1, \\\"bar\\\"); m.insert(2, \\\"baz\\\"); m }; } fn main() { // 首次访问`HASHMAP`的同时对其进行初始化 println!(\\\"The entry for `0` is \\\\\\\"{}\\\\\\\".\\\", HASHMAP.get(&0).unwrap()); // 后续的访问仅仅获取值，再不会进行任何初始化操作 println!(\\\"The entry for `1` is \\\\\\\"{}\\\\\\\".\\\", HASHMAP.get(&1).unwrap()); } \",\"lazy_static直到运行到main中的第一行代码时，才进行懒加载。\"]},\"461\":{\"h\":\"Box::leak\",\"t\":[\"Box::leak可以用于全局变量，可以用于在运行期初始化，将变量改变为全局静态分配。\",\"比如上面的例子，我们可以通过Box::leak将局部变量分配道堆上，来将其全局化。\",\"我们先来看一个不使用懒加载，也不使用Box::leak的例子:\",\"#[derive(Debug)] struct Config { a: String, b: String, } static mut CONFIG: Option<&mut Config> = None; fn main() { unsafe { CONFIG = Some(&mut Config { a: \\\"A\\\".to_string(), b: \\\"B\\\".to_string(), }); println!(\\\"{:?}\\\", CONFIG) } } \",\"以上的代码我们声明了一个全局动态配置的CONFIG，并且其值初始化为None,然后在程序运行后，给这个全局静态变量赋值，结果当然是报错了，怎么可以将一个局部变量赋值给全局变量....\",\"所以贴心的Rust给我们提供了Box::leak方法，主动将一个变量从内存中泄漏到堆上，然后将其生命周期改变为'static...\",\"#[derive(Debug)] struct Config { a: String, b: String } static mut CONFIG: Option<&mut Config> = None; fn main() { let c = Box::new(Config { a: \\\"A\\\".to_string(), b: \\\"B\\\".to_string(), }); unsafe { // 将`c`从内存中泄漏，变成`'static`生命周期 CONFIG = Some(Box::leak(c)); println!(\\\"{:?}\\\", CONFIG); } } \"]},\"462\":{\"h\":\"从函数中返回全局变量？\",\"t\":[\"问题又来了，如果我们需要在运行期，从一个函数返回一个全局变量该如何做？例如：\",\"#[derive(Debug)] struct Config { a: String, b: String, } static mut CONFIG: Option<&mut Config> = None; fn init() -> Option<&'static mut Config> { Some(&mut Config { a: \\\"A\\\".to_string(), b: \\\"B\\\".to_string(), }) } fn main() { unsafe { CONFIG = init(); println!(\\\"{:?}\\\", CONFIG) } } \",\"报错跟之前大同小异，还是生命周期引起的，依然可以用Box::leak来解决:\",\"#[derive(Debug)] struct Config { a: String, b: String, } static mut CONFIG: Option<&mut Config> = None; fn init() -> Option<&'static mut Config> { let c = Box::new(Config { a: \\\"A\\\".to_string(), b: \\\"B\\\".to_string(), }); Some(Box::leak(c)) } fn main() { unsafe { CONFIG = init(); println!(\\\"{:?}\\\", CONFIG) } } \"]},\"463\":{\"h\":\"标准库中的 OnceCell\",\"t\":[\"在 Rust 标准库中提供 lazy::OnceCell 和 lazy::SyncOnceCell 两种 Cell，前者用于单线程，后者用于多线程，它们用来存储堆上的信息，并且具有最多只能赋值一次的特性。 如实现一个多线程的日志组件 Logger:\",\"#![feature(once_cell)] use std::{lazy::SyncOnceCell, thread}; fn main() { // 子线程中调用 let handle = thread::spawn(|| { let logger = Logger::global(); logger.log(\\\"thread message\\\".to_string()); }); // 主线程调用 let logger = Logger::global(); logger.log(\\\"some message\\\".to_string()); let logger2 = Logger::global(); logger2.log(\\\"other message\\\".to_string()); handle.join().unwrap(); } #[derive(Debug)] struct Logger; static LOGGER: SyncOnceCell<Logger> = SyncOnceCell::new(); impl Logger { fn global() -> &'static Logger { // 获取或初始化 Logger LOGGER.get_or_init(|| { println!(\\\"Logger is being created...\\\"); // 初始化打印 Logger }) } fn log(&self, message: String) { println!(\\\"{}\\\", message) } } \",\"以上代码我们声明了一个 global() 关联函数，并在其内部调用 get_or_init 进行初始化 Logger，之后在不同线程上多次调用 Logger::global() 获取其实例：\",\"Logger is being created... some message other message thread message \",\"可以看到，Logger is being created... 在多个线程中使用也只被打印了一次。\"]},\"464\":{\"h\":\"总结\",\"t\":[\"Rust有很多方式创建一个全局变量，由于Rust的语言特性，导致声明全局变量的时候某些地方会有些坑，更多的需要我们在实战中不断积累。\",\"[参考]\",\"https://course.rs/advance/global-variable.html\"]},\"465\":{\"c\":[\"rust\"]},\"466\":{\"c\":[\"rust\"]},\"467\":{\"h\":\"Rust 字符串\",\"t\":[\"一个语言中字符串的地位可以类比英语中动词的地位(想想动词有多少种变体就知道了)\",\"Rust语言中字符串相当于新手练级中相当大的一个Boss了，因为其内容涵盖很广泛，而且会涉及许多前置引用，涉及许多你之后才会了解到的概念，比如生命周期、链式编程...\",\"但是，首先，我们先来一道开胃菜:****\",\"fn main() { let my_name = \\\"Pascal\\\"; greet(my_name); } fn greet(name: String) { println!(\\\"Hello, {}!\\\", name); } \",\"你猜猜这能不能通过编译呢？\",\"当然不可以了-.-\",\"编译器会报错，说明我们需要一个String类型的字符串而不是&str类型的字符串：\",\"greet(my_name); | ----- ^^^^^^^- help: try using a conversion method: `.to_string()` | | | | | expected `String`, found `&str` | arguments to this function are incorrect \",\"所以这里就遇到了一个典型的前置引用-------啥是切片？？？\"]},\"468\":{\"h\":\"切片(Slice)\",\"t\":[\"切片在Go语言中非常流行，切片允许你引用集合中部分连续的元素序列，而不用饮用整个集合。\",\"对于字符串而言，切片就是对String类型中某一部分的饮用而已，看起来像这样:\",\"let s = String::from(\\\"hello world\\\"); let hello = &s[0..5]; let world = &s[6..11]; \",\"hello没有引用整个String s,而是引用了s的一部分，通过[0..5]的方式来指定的。\",\"这就是创建切片的语法，使用[]包括序列，和其他语言一样，左闭右开,即[0..5]是元素中0 1 2 3 4的集合。\",\"在Rust中使用.. range序列语法时，如果想从0开始，可以用如下方式:\",\"let s = String::from(\\\"hello\\\"); let slice = &s[0..2]; let slice = &s[..2]; \",\"同样的，如果你的切片想要包含String的最后一个字节，就可以这样使用:\",\"let s = String::from(\\\"hello\\\"); let len = s.len(); let slice = &s[4..len]; let slice = &s[4..]; \",\"你也可以截取完整的 String 切片：\",\"let s = String::from(\\\"hello\\\"); let len = s.len(); let slice = &s[0..len]; let slice = &s[..]; \",\"相关信息\",\"在对字符串使用切片语法时需要格外小心，切片的索引必须落在字符之间的边界位置，也就是 UTF-8 字符的边界，例如中文在 UTF-8 中占用三个字节，下面的代码就会崩溃：\",\"let s = \\\"中国人\\\"; let a = &s[0..2]; println!(\\\"{}\\\",a); \",\"因为我们只取 s 字符串的前两个字节，但是本例中每个汉字占用三个字节，因此没有落在边界处，也就是连 中 字都取不完整，此时程序会直接崩溃退出，如果改成 &s[0..3]，则可以正常通过编译。 因此，当你需要对字符串做切片索引操作时，需要格外小心这一点。\",\"字符串切片的类型标识是&str,因此我们可以这样声明一个函数，输入String类型，返回它的切片：fn first_word(s: &String) -> &str。\",\"有了切片就可以这样写:\",\"fn main() { let mut s = String::from(\\\"hello world\\\"); let word = first_word(&s); s.clear(); // error! println!(\\\"the first word is: {}\\\", word); } fn first_word(s: &String) -> &str { &s[..1] } \",\"编译器报错如下：\",\"error[E0502]: cannot borrow `s` as mutable because it is also borrowed as immutable --> src/main.rs:18:5 | 16 | let word = first_word(&s); | -- immutable borrow occurs here 17 | 18 | s.clear(); // error! | ^^^^^^^^^ mutable borrow occurs here 19 | 20 | println!(\\\"the first word is: {}\\\", word); | ---- immutable borrow later used here \",\"借用的规则:当我们已经有了一个可变借用时，无法再拥有一个不可变借用。因为clear需要清空String,所以它需要一个可变借用，而之后的println!又需要一个不可变借用，所以编译无法通过。\"]},\"469\":{\"h\":\"其他切片\",\"t\":[\"不仅仅字符串可以有切片，数组等其他类型也有:\",\" let a = [1, 2, 3, 4, 5]; let slice = &a[1..3]; assert_eq!(slice, &[2, 3]); \",\"该数组切片的类型是 &[i32]，数组切片和字符串切片的工作方式是一样的，例如持有一个引用指向原始数组的某个元素和长度。\"]},\"470\":{\"h\":\"字符串的字面量是切片\",\"t\":[\"之前提到过字符串字面量，但是没有提到它的类型:\",\"let s = \\\"Helllo,world!\\\"; \",\"实际上s的类型是&str,因此实际上可以这样声明:\",\"let s: &str = \\\"Hello,world\\\"; \",\"该切片指向了程序可执行文件中的某个点，这也是为什么字符串字面量是不可变的，因为 &str 是一个不可变引用。\",\"了解完切片，可以进入本节的正题了。\"]},\"471\":{\"h\":\"什么是字符串？\",\"t\":[\"顾名思义，字符串是由字符组成的连续集合，但是在上一节中我们提到过，Rust 中的字符是 Unicode 类型，因此每个字符占据 4 个字节内存空间，但是在字符串中不一样，字符串是 UTF-8 编码，也就是字符串中的字符所占的字节数是变化的(1 - 4)，这样有助于大幅降低字符串所占用的内存空间。\",\"Rust 在语言级别，只有一种字符串类型： str，它通常是以引用类型出现 &str，也就是上文提到的字符串切片。虽然语言级别只有上述的 str 类型，但是在标准库里，还有多种不同用途的字符串类型，其中使用最广的即是 String 类型。\",\"str 类型是硬编码进可执行文件，也无法被修改，但是 String 则是一个可增长、可改变且具有所有权的 UTF-8 编码字符串，当 Rust 用户提到字符串时，往往指的就是 String 类型和 &str 字符串切片类型，这两个类型都是 UTF-8 编码。\",\"除了 String 类型的字符串，Rust 的标准库还提供了其他类型的字符串，例如 OsString， OsStr， CsString 和 CsStr 等，注意到这些名字都以 String 或者 Str 结尾了吗？它们分别对应的是具有所有权和被借用的变量。\"]},\"472\":{\"h\":\"String与&str的转换\",\"t\":[\"在之前的代码中，已经见到好几种从 &str 类型生成 String 类型的操作：\",\"String::from(\\\"hello,world\\\") \\\"hello,world\\\".to_string() 那么如何将 String 类型转为 &str 类型呢？答案很简单，取引用即可：\",\"fn main() { let s = String::from(\\\"hello,world!\\\"); say_hello(&s); say_hello(&s[..]); say_hello(s.as_str()); }\",\"fn say_hello(s: &str) { println!(\\\"{}\\\",s); } 实际上这种灵活用法是因为 deref 隐式强制转换。\"]},\"473\":{\"h\":\"字符串索引\",\"t\":[\"在其它语言中，使用索引的方式访问字符串的某个字符或者子串是很正常的行为，但是在 Rust 中就会报错：\",\" let s1 = String::from(\\\"hello\\\"); let h = s1[0]; \",\"该代码会产生如下错误：\",\"3 | let h = s1[0]; | ^^^^^ `String` cannot be indexed by `{integer}` | = help: the trait `Index<{integer}>` is not implemented for `String` \",\"深入字符串内部 字符串的底层的数据存储格式实际上是[ u8 ]，一个字节数组。对于 let hello = String::from(\\\"Hola\\\"); 这行代码来说，Hola 的长度是 4 个字节，因为 \\\"Hola\\\" 中的每个字母在 UTF-8 编码中仅占用 1 个字节，但是对于下面的代码呢？\",\"let hello = String::from(\\\"中国人\\\"); \",\"如果问你该字符串多长，你可能会说 3，但是实际上是 9 个字节的长度，因为大部分常用汉字在 UTF-8 中的长度是 3 个字节，因此这种情况下对 hello 进行索引，访问 &hello[0] 没有任何意义，因为你取不到 中 这个字符，而是取到了这个字符三个字节中的第一个字节，这是一个非常奇怪而且难以理解的返回值。\"]},\"474\":{\"h\":\"字符串的不同表现形式\",\"t\":[\"现在看一下用梵文写的字符串 “नमस्ते”, 它底层的字节数组如下形式：\",\"[224, 164, 168, 224, 164, 174, 224, 164, 184, 224, 165, 141, 224, 164, 164, 224, 165, 135] 长度是 18 个字节，这也是计算机最终存储该字符串的形式。如果从字符的形式去看，则是：\",\"['न', 'म', 'स', '्', 'त', 'े'] 但是这种形式下，第四和六两个字母根本就不存在，没有任何意义，接着再从字母串的形式去看：\",\"[\\\"न\\\", \\\"म\\\", \\\"स्\\\", \\\"ते\\\"] 所以，可以看出来 Rust 提供了不同的字符串展现方式，这样程序可以挑选自己想要的方式去使用，而无需去管字符串从人类语言角度看长什么样。\",\"还有一个原因导致了 Rust 不允许去索引字符串：因为索引操作，我们总是期望它的性能表现是 O(1)，然而对于 String 类型来说，无法保证这一点，因为 Rust 可能需要从 0 开始去遍历字符串来定位合法的字符。\"]},\"475\":{\"h\":\"字符串切片\",\"t\":[\"前文提到过，字符串切片是非常危险的操作，因为切片的索引是通过字节来进行，但是字符串又是 UTF-8 编码，因此你无法保证索引的字节刚好落在字符的边界上，例如:\",\"let hello = \\\"中国人\\\"; let s = &hello[0..2]; \",\"运行上面的程序，会直接造成崩溃：\",\"thread 'main' panicked at 'byte index 2 is not a char boundary; it is inside '中' (bytes 0..3) of `中国人`', src/main.rs:4:14 note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace \",\"这里提示的很清楚，我们索引的字节落在了 中 字符的内部，这种返回没有任何意义。\",\"因此在通过索引区间来访问字符串时，需要格外的小心，一不注意，就会导致你程序的崩溃！\"]},\"476\":{\"h\":\"操作字符串\",\"t\":[\"由于String是可变的字符串，所以介绍一下对Rust字符串的修改、添加、删除等方法：\"]},\"477\":{\"h\":\"Push(追加)\",\"t\":[\"在字符串尾部可以使用push()方法追加字符char,也可以使用push_str()方法追加字符串字面量。这两个方法都是在原有的字符串追加的，并不会返回新的字符串。由于字符串追加操作要修改原来的字符串，则该字符串必须是可变的，即字符串变量必须由 mut 关键字修饰。\",\"fn main() { let mut s = String::from(\\\"Hello \\\"); s.push_str(\\\"rust\\\"); println!(\\\"追加字符串 push_str() -> {}\\\", s); s.push('!'); println!(\\\"追加字符 push() -> {}\\\", s); } \",\"代码运行结果:\",\"追加字符串 push_str() -> Hello rust 追加字符 push() -> Hello rust! \"]},\"478\":{\"h\":\"Insert(插入)\",\"t\":[\"可以使用insert()方法插入单个字符char,也可以使用insert_str()方法插入字符串字面量，与push方法不同，这俩方法需要两个参数(1.插入的索引、2.插入的字符（串))，索引从0开始计数，如果发生越界则会发生错误。由于字符串插入操作需要修改原来的字符串，所以字符串也必须是mut。\",\"fn main() { let mut s = String::from(\\\"Hello rust\\\"); s.insert(5, ','); println!(\\\"插入字符 insert() -> {}\\\", s); s.insert_str(6, \\\"I like\\\"); println!(\\\"插入字符串 insert_str() -> {}\\\", s); } \",\"结果:\",\"插入字符 insert() -> Hello, rust 插入字符串 insert_str() -> Hello,I like rust \"]},\"479\":{\"h\":\"Replace(替换)\",\"t\":[\"如果想要把字符串中的某个字符串替换成其他字符串，那可以使用replace()方法。与替换有关的方法有三个:\",\"replace\",\"replace方法可用于String和&str类型。replace()方法接受两个参数，第一个参数是要被替换的字符串，第二个参数是新的字符串。该方法会替换所有匹配到的字符串。该方法会返回一个新的字符串，不是操作原来的字符串。\",\" let string_replace = String::from(\\\"I like rust. Learning rust is my favorite!\\\"); let new_string_replace = string_replace.replace(\\\"rust\\\", \\\"RUST\\\"); dbg!(new_string_replace); \",\"结果:\",\"new_string_replace = \\\"I like RUST. Learning RUST is my favorite!\\\" \",\"replacen\",\"replacen方法接受三个参数，前两个和replace一样，第三个参数则表示替换的个数，该方法仍然是返回新的字符串，而不是操作原来的字符串。\",\" let string_replace = \\\"I like rust. Learning rust is my favorite!\\\"; let new_string_replacen = string_replace.replacen(\\\"rust\\\", \\\"RUST\\\", 1); dbg!(new_string_replacen); \",\"结果：\",\"new_string_replacen = \\\"I like RUST. Learning rust is my favorite!\\\" \",\"replace_range\",\"该方法仅适用于String类型，接受两个参数，第一个是替换的字符串的范围，第二个是新的字符串，该方法是直接操作原有的字符串，不会返回新的字符串，需要用mut关键字修饰。\",\" let mut string_replace_range = String::from(\\\"I like rust!\\\"); string_replace_range.replace_range(7..8, \\\"R\\\"); dbg!(string_replace_range); \",\"结果:\",\"string_replace_range = \\\"I like Rust!\\\" \"]},\"480\":{\"h\":\"Delete(删除)\",\"t\":[\"与字符串删除相关的方法有4个，分别是pop、remove、truncate、clear,这四个方法仅适用于String类型。\",\"pop -- 删除并返回字符串中最后一个字符\",\"该方法直接操作原有字符串。但返回值是一个Option类型，如果字符串为空，则返回None：\",\"fn main() { let mut string_pop = String::from(\\\"rust pop 中文!\\\"); let p1 = string_pop.pop(); let p2 = string_pop.pop(); dbg!(p1); dbg!(p2); dbg!(string_pop); } \",\"结果：\",\"p1 = Some( '!', ) p2 = Some( '文', ) string_pop = \\\"rust pop 中\\\" \",\"remove --- 删除并返回字符串中指定位置的字符\",\"该方法是直接操作原来的字符串。但是存在返回值，其返回值是删除位置的字符串，只接受一个参数，表示该字符起始的索引位置。remove() 方法是按照字节来处理字符串的，如果参数所给的位置不是合法的字符边界，则会发生错误。\",\"fn main() { let mut string_remove = String::from(\\\"测试remove方法\\\"); println!( \\\"string_remove 占 {} 个字节\\\", std::mem::size_of_val(string_remove.as_str()) ); // 删除第一个汉字 string_remove.remove(0); // 下面代码会发生错误 // string_remove.remove(1); // 直接删除第二个汉字 // string_remove.remove(3); dbg!(string_remove); } \",\"结果\",\"string_remove 占 18 个字节 string_remove = \\\"试remove方法\\\" \",\"truncate —— 删除字符串中从指定位置开始到结尾的全部字符\",\"该方法是直接操作原来的字符串。无返回值。该方法 truncate() 方法是按照字节来处理字符串的，如果参数所给的位置不是合法的字符边界，则会发生错误。\",\"fn main() { let mut string_truncate = String::from(\\\"测试truncate\\\"); string_truncate.truncate(3); dbg!(string_truncate); } \",\"结果：\",\"string_truncate = \\\"测\\\" \",\"4、clear —— 清空字符串\",\"该方法是直接操作原来的字符串。调用后，删除字符串中的所有字符，相当于 truncate() 方法参数为 0 的时候。\",\"示例代码如下：\",\"fn main() { let mut string_clear = String::from(\\\"string clear\\\"); string_clear.clear(); dbg!(string_clear); } \",\"代码运行结果：\",\"string_clear = \\\"\\\" \"]},\"481\":{\"h\":\"Concatenate(连接)\",\"t\":[\"1、使用 + 或者 += 连接字符串\",\"使用 + 或者 += 连接字符串，要求右边的参数必须为字符串的切片引用（Slice）类型。其实当调用 + 的操作符时，相当于调用了 std::string 标准库中的 add() 方法，这里 add() 方法的第二个参数是一个引用的类型。因此我们在使用 +， 必须传递切片引用类型。不能直接传递 String 类型。+ 是返回一个新的字符串，所以变量声明可以不需要 mut 关键字修饰。\",\"fn main() { let string_append = String::from(\\\"hello \\\"); let string_rust = String::from(\\\"rust\\\"); // &string_rust会自动解引用为&str let result = string_append + &string_rust; let mut result = result + \\\"!\\\"; // `result + \\\"!\\\"` 中的 `result` 是不可变的 result += \\\"!!!\\\"; println!(\\\"连接字符串 + -> {}\\\", result); } \",\"代码运行结果：\",\"连接字符串 + -> hello rust!!!! \",\"add() 方法的定义：\",\"fn add(self, s: &str) -> String \",\"因为该方法涉及到更复杂的特征功能，因此我们这里简单说明下：\",\"fn main() { let s1 = String::from(\\\"hello,\\\"); let s2 = String::from(\\\"world!\\\"); // 在下句中，s1的所有权被转移走了，因此后面不能再使用s1 let s3 = s1 + &s2; assert_eq!(s3,\\\"hello,world!\\\"); // 下面的语句如果去掉注释，就会报错 // println!(\\\"{}\\\",s1); } \",\"self 是 String 类型的字符串 s1，该函数说明，只能将 &str 类型的字符串切片添加到 String 类型的 s1 上，然后返回一个新的 String 类型，所以 let s3 = s1 + &s2; 就很好解释了，将 String 类型的 s1 与 &str 类型的 s2 进行相加，最终得到 String 类型的 s3。\",\"由此可推，以下代码也是合法的：\",\"let s1 = String::from(\\\"tic\\\"); let s2 = String::from(\\\"tac\\\"); let s3 = String::from(\\\"toe\\\"); // String = String + &str + &str + &str + &str let s = s1 + \\\"-\\\" + &s2 + \\\"-\\\" + &s3; \"]},\"482\":{\"h\":\"使用 format! 连接字符串\",\"t\":[\"format! 这种方式适用于 String 和 &str 。format! 的用法与 print! 的用法类似。\",\"示例代码如下：\",\"fn main() { let s1 = \\\"hello\\\"; let s2 = String::from(\\\"rust\\\"); let s = format!(\\\"{} {}!\\\", s1, s2); println!(\\\"{}\\\", s); } \",\"代码运行结果：\",\"hello rust! \"]},\"483\":{\"h\":\"字符串转义\",\"t\":[\"我们可以通过转义的方式 \\\\ 输出 ASCII 和 Unicode 字符。\",\"fn main() { // 通过 \\\\ + 字符的十六进制表示，转义输出一个字符 let byte_escape = \\\"I'm writing \\\\x52\\\\x75\\\\x73\\\\x74!\\\"; println!(\\\"What are you doing\\\\x3F (\\\\\\\\x3F means ?) {}\\\", byte_escape); // \\\\u 可以输出一个 unicode 字符 let unicode_codepoint = \\\"\\\\u{211D}\\\"; let character_name = \\\"\\\\\\\"DOUBLE-STRUCK CAPITAL R\\\\\\\"\\\"; println!( \\\"Unicode character {} (U+211D) is called {}\\\", unicode_codepoint, character_name ); // 换行了也会保持之前的字符串格式 // 使用\\\\忽略换行符 let long_string = \\\"String literals can span multiple lines. The linebreak and indentation here ->\\\\ <- can be escaped too!\\\"; println!(\\\"{}\\\", long_string); } \",\"当然，在某些情况下，可能你会希望保持字符串的原样，不要转义：\",\"fn main() { println!(\\\"{}\\\", \\\"hello \\\\\\\\x52\\\\\\\\x75\\\\\\\\x73\\\\\\\\x74\\\"); let raw_str = r\\\"Escapes don't work here: \\\\x3F \\\\u{211D}\\\"; println!(\\\"{}\\\", raw_str); // 如果字符串包含双引号，可以在开头和结尾加 # let quotes = r#\\\"And then I said: \\\"There is no escape!\\\"\\\"#; println!(\\\"{}\\\", quotes); // 如果还是有歧义，可以继续增加，没有限制 let longer_delimiter = r###\\\"A string with \\\"# in it. And even \\\"##!\\\"###; println!(\\\"{}\\\", longer_delimiter); } \"]},\"484\":{\"h\":\"操作 UTF-8 字符串\",\"t\":[\"前文提到了几种使用 UTF-8 字符串的方式，下面来一一说明。\"]},\"485\":{\"h\":\"字符\",\"t\":[\"如果你想要以 Unicode 字符的方式遍历字符串，最好的办法是使用 chars 方法，例如：\",\"for c in \\\"中国人\\\".chars() { println!(\\\"{}\\\", c); } \",\"输出如下\",\"中 国 人 \"]},\"486\":{\"h\":\"字节\",\"t\":[\"这种方式是返回字符串的底层字节数组表现形式：\",\"for b in \\\"中国人\\\".bytes() { println!(\\\"{}\\\", b); } \",\"输出如下：\",\"228 184 173 229 155 189 228 186 186 \"]},\"487\":{\"h\":\"获取子串\",\"t\":[\"想要准确的从 UTF-8 字符串中获取子串是较为复杂的事情，例如想要从 holla中国人नमस्ते 这种变长的字符串中取出某一个子串，使用标准库你是做不到的。 你需要在 crates.io 上搜索 utf8 来寻找想要的功能。\",\"可以考虑尝试下这个库：utf8_slice。\"]},\"488\":{\"c\":[\"rust\"]},\"489\":{\"c\":[\"rust\"]},\"490\":{\"h\":\"Rust 元组\",\"t\":[\"元组，是由多种类型组合到一起形成的，因此它是复合类型，元组的长度是固定的，元组中元素的顺序也是固定的。\"]},\"491\":{\"c\":[\"rust\"]},\"492\":{\"c\":[\"rust\"]},\"493\":{\"h\":\"LocalSent推荐\",\"t\":[\"有一类工具给人的感觉是这样的————好像不用也可以\",\"LocalSent这个工具就是如此\",\"它的作用是什么呢？简单来说就是在局域网下可以自由传输文件、文件夹、文本等，而且不需要联网。\",\"换句话说，你可以通过这个工具在局域网下去传输几乎任意的的信息，无大小限制。\"]},\"494\":{\"h\":\"LocalSent 工具介绍\",\"t\":[\"LocalSent 跨平台支持(Linux、MacOS、Windows、Android、iOS)，技术是fluter跨平台Web框架，所有代码还是开源的，太良心了有木有。\",\"允许我们在不联网的情况下，自由在局域网下传输文件，简单来说就是只要我们相互连同一个Wifi，热点就附近的设备安全地共享文件和消息。\",\"在说这个工具的优点之前，我想先说说我为什么不想使用企业微信/微信文件传输了，最大的原因是这俩玩意太消耗磁盘容量，而且更关键的是大部分情况下还没办法完全删除，需要的东西，微信在传输的时候都会在本地备份一份，这就导致了你手机里微信占用的大小越来越大，反正我已经超过20G了:)\",\"于是找到一个替代Wechat的文件传输工具对我来说是刚需，在看到了LocalSent的好处后，就开始有脑使用了。\",\"优点功能:\",\"界面简洁无广告+深浅主题\",\"自定义设备名、端口号、加密开/关\",\"发送文件可以给多个接收者,已选择的文件在发送后不会取消选择。\",\"未安裝 LocalSend 的接收者可以在浏览器中打开链接以下载选中的文件。\",\"快速保存\",\"自动接受所有文件传输请求。请注意，这会让此网络中的所有人都可以向你发送文件。\",\"允许设备使用 REST API 相互通信。\",\"所有数据都通过 HTTPS 安全发送，并且 TLS/SSL 证书在每台设备上即时生成，确保最大程度的安全性。\",\"Github上还有各个语言的讨论区,又想吐槽的点也可以上去和开发者battle，或者干脆fork一份，自己研究研究。\",\"比起各个厂商,都在拼命维护自己家生态的花园，这种跨平台工具天然就给人一种很舒服的感觉。\",\"在我们熟练一个工具的时候，需要首先熟悉不那么舒服的感觉，在度过了不那么舒服的感觉之后，你就可以享受到使用这个工具的爽点了。\",\"打开APP界面工具就可以自动给你分配一个可自由修改的设备号，然后可以通过选择[文本、文件、文件夹]去给你的其他设备传输数据了\",\"相关信息\",\"有时在我们想熟悉一个更好用的工具时，需要先暂时放弃原先使用落后工具依然可以达到目的的方式，所以如果你也想快速熟悉起LocalSent，所以我觉得最好的方式是下一次你需要跨设备传输文件时，暂时放弃别的工具优先使用LocalSent，熟悉一段时间你就解放了。\"]},\"495\":{\"c\":[\"thinking\"]},\"496\":{\"c\":[\"工具\"]},\"497\":{\"h\":\"MongoDB 副本集环境在线部署\",\"t\":[\"通过本教程你可以在线上/本地搭建一个三节点的mongo复制集。\"]},\"498\":{\"c\":[\"program\"]},\"499\":{\"c\":[\"mongo\",\"replica-set\",\"deployment\"]},\"500\":{\"h\":\"我在2021年做了些什么？\",\"t\":[\"记录时间与我而言仅仅只是手段，重要的是明白自己的时间都花在了哪里，或许哪里又可以有所改进？或许，自己的效率又有哪里可以提升的空间？又或许自己在过去一年又有哪些未完成的学习和工作任务？等等\",\"这些问题相信每个人都遇到过，可能有相应的对应方法，又或许仅仅是使用鸵鸟策略对其相视不见。\",\"提出问题却不去想办法解决问题是耍流氓的行为。既然我能心安理得的提出这些问题，那么相应的我就有责任去回答这些问题的解决方案。\",\"当然时间又是一个不可再生资源，至少对于现在是，在可遇见的未来更是。这个不可再生资源又和外界认为的很不一样。煤、石油、天然气等等这些所谓的不可再生资源是有解决方案的。只要在以往的不可再生资源在未消耗完之前，寻找到新的可代替的资源就可以实现持续发展了。比如在煤炭用完之前找到了石油，在石油用完之前找到太阳能，在太阳能竭尽之前找到可以直接使用恒星能量的方法或者实现可控核聚变就没什么问题。\",\"但时间是另一种不可再生资源，它无法找到另一种代替资源。\",\"那么它既然不可再生，那我们作为时间长河中的个体，所能做的仅仅就只能是与它做朋友。\",\"人生没有白走的路，每一步都算数。这是过去的一年里与时间做朋友我体会最深刻的一句话，和这位朋友的关系，几乎就是我们与这个世界的关系。你若和这位朋友一起积累，那么你的世界就是因积累而大放异彩的。而你若与这位朋友一起虚度，那么你的世界就是虚度的，是无趣的，是日复一日，年复一年终将落入怀旧圈套的。最终你会发现，不论你怎么做，世界都会向你证明你是对的。\",\"其实过去的一年里，我都有记录时间这个习惯，但前9个月的记录本子竟然丢了......但值得庆幸的是我们处于网络时代，即使那九个月的记录不见了，但我所作的成果还在，比如翻译了一本英文书、写了一个解释器、还在Github上写了不少小东西。\",\"所以统计一下过去的一年里的数据可以近似地用之后的三个月的时间记录来显示，不是自欺欺人，而是这一年里每天的生活都差不多......而时间记录这个东西如果把每天的过程都写上，又会耗费太多精力，所以仅仅记录所作的每类事情花费的时间就好，至于每类事情具体所作了什么，我在后面会列出一个清单，即我究竟做了些什么，那么我们开始吧：\",\"过去一年里的时间消费（单位小时）：\",\"编程\",\"读书\",\"娱乐\",\"总计\",\"2021\",\"1278\",\"1092\",\"1723\",\"4093\",\"我所读过的书\"]},\"501\":{\"h\":\"书籍（50本）\"},\"502\":{\"h\":\"李笑来部曲（11）\",\"t\":[\"《把时间当作朋友》\",\"《财富自由之路》\",\"《七年就是一辈子》\",\"《韭菜的自我修养》\",\"《自学是门手艺》\",\"《定投改变命运——让时间陪你慢慢便富》\",\"《人人都能用英语》\",\"《人人都是工程师》\",\"《我也有话要说》\",\"《坐享其成》\",\"《微信互联网平民创业》\",\"《挤挤都会有的——写给女生的性高潮指南》\"]},\"503\":{\"h\":\"非虚构类书籍（27）\",\"t\":[\"《奇特的一生》\",\"《超越感觉——逻辑思考指南》\",\"《沟通的方法》\",\"《非对称风险》\",\"《反脆弱》\",\"《黑天鹅》\",\"《随机漫步的傻瓜》\",\"《成长的边界》\",\"《货币未来》\",\"《太傻十日谈》\",\"《动物农场》\",\"《思考快与慢》\",\"《异类——不一样的成功启示录》\",\"《稀缺——我们是如何陷入贫穷与忙碌的》\",\"《高手——精英的见识与我们的时代》\",\"《万万没想到——用理工科思维理解世界》\",\"《区块链投资笔记——老猫》\",\"《击败庄家》\",\"《上海交通大学学生生存指南》\",\"《东南大学学生生存指南》\",\"《本能——我们为什么管不住自己》\",\"《穷爸爸富爸爸》\",\"《投资最重要的事》\",\"《原则》\",\"《中县干部——冯军旗》\",\"《少有人走的路》\",\"《围城》\"]},\"504\":{\"h\":\"技术类书籍（11）\",\"t\":[\"有些技术类的书籍只是泛读，比如《代码大全》这本书简直是软件开发领域的圣经，三五年内根本无法完全消化。\",\"《Go Web编程实战派》\",\"《Go项目开发上手指南》\",\"《用Go写解释器》\",\"《Go语言深度剖析》\",\"《计算机网络自顶向下方法》\",\"《操作系统概念》\",\"《MySQL必知必会》\",\"《程序员的思维修炼》\",\"《快乐的Linux命令行》\",\"《代码大全》\",\"《雄辩的Javascript》\",\"还有一些不是书籍的，但对我也很有影响的教程\",\"MDN Web开发文档\",\"得到专栏万维钢精英日课4\",\"Github上的优秀代码仓库，它们指引着我的编程方向......\",\"还有一些工具的文档，这里就不一一说明了......\"]},\"505\":{\"h\":\"基本工作\",\"t\":[\"拿到了驾照\",\"翻译了一本英文技术类的书《Writing a Interpreter in Go》\",\"写了公开文章60篇（不论是否付费），未公开文章未统计\",\"用一个半月把一本四级单词背诵完了，充其量就是每天复习，再背诵新的单词......这样\",\"编程工作\",\"完成了一个区块链底层系统RUM(参考quorum)\",\"写了一个可多音乐播放的安卓APP深维\",\"用Vue写了Mixin深维机器人MixinId:7000103911\",\"写了一个底层论坛APIForum\",\"写了一些封装库\",\"写了一个命令行可以直接下载网易云音乐ncm-dl\",\"写了一个解释器Monkey\",\"还有一些小东西......\",\"娱乐：有很多东西其实不好统计，比如和亲人打电话、出去吃饭、看影视剧、陪朋友闲聊散步啊这些其实不应该混在一起的，姑且就先这么统计吧，反正都挺令人舒适的。\",\"电影：\",\"《肖申克的救赎》\",\"《特朗勃》——逆境生存指南\",\"《三傻大闹宝莱坞》\",\"《黑暗骑士》\",\"《黑暗骑士崛起》\",\"《熔炉》\",\"《小丑》\",\"《开发者》\",\"《星际穿越》\",\"《悬崖之上》\",\"《教父》1、2、3\",\"《我不是药神》\",\"影视：\",\"《隐蔽的角落》\",\"《回家的诱惑》\",\"《北京爱情故事》2012\",\"《TED部分演讲》\",\"《西部世界》1、2、3\",\"《老家门口唱大戏》\",\"OK，先这么告一段落，之后有记录会补上的。\",\"分享一首最近喜欢的李宗盛的一首歌：\",\"越过山丘 虽然已白了头 喋喋不休 时不我予的哀愁 还未如愿见着不朽 就把自己先搞丢 越过山丘 才发现无人等候 喋喋不休 再也唤不回温柔 为何记不得上一次是谁给的拥抱 在什么时候 喋喋不休 时不我予的哀愁 向情爱的挑逗 命运的左右 不自量力地还手 直至誓死方休 ——《山丘》 \"]},\"506\":{\"c\":[\"years\"]},\"507\":{\"c\":[\"redis\",\"consistency\"]},\"508\":{\"h\":\"我用160行代码写出了个区块链...\",\"t\":[\"完成本篇教程，你将会做出一条属于自己的区块链系统\",\"你可以在自己的浏览器中显示自己的区块链系统，类似于下图所示\"]},\"509\":{\"h\":\"总览\",\"t\":[\"很多人认识区块链是因为比特币，结实比特币也是缘于它攀升的价格，但作为技术人员，理应了解其本质。\",\"区块链不仅仅是计算机科学，还涉及了政治经济制度，社会分工协作等等很多方面，因此我的关注点不仅在于深度，更在于其广度，更多是站在研究的角度。区块链是21世纪最具革命性的技术之一，而且这项技术还尚在发展中，仍然有很多潜力未曾展现。\",\"在这篇文章通过160行代码使用Go语言编写自己的简单区块链，最后在web浏览器中可以打开来查看自己区块链。\",\"在这篇文章中你可以学到\",\"创建自己的区块\",\"为每个区块添加哈希码\",\"为区块链提供Web服务\",\"......\",\"为了使教程简便易懂，我们使用web服务替代P2P网络，因此我们可以在浏览器中查看新添加的block。\",\"首先，确保你下载了Go语言安装包。再下载下面的三个包：\",\"go get github.com/davecgh/go-spew/spew\",\"go get github.com/gorilla/mux\",\"go get github.com/joho/godotenv\",\"首先第一个包，spew，可以让我们在控制台查看struct和slices理论上log包和fmt包也可以查看这些信息，但spew可以使结构更加清晰化。\",\"第二个包，mux用于处理web服务的包，比起http包mux可以使web服务更加简便，最近也流行gin框架做web服务，大家也可以去试一试。\",\"第三个包godotenv，从包的名字就可以看出，go do env，可以读取同一个目录下的env文件，这样子我们就无需对HTTP端口之类的内容进行编码。\"]},\"510\":{\"h\":\"开始\",\"t\":[\"首先新建一个文件夹，在文件夹中创建一个main.go文件。根据第三个包godoenv，我们再创建一个.env文件。只需向此文件添加一行：\",\"PORT=8080\",\"意味着我们开启在main写入代码中的web服务监听8080端口。\",\"好了，接下来的代码我们都将在main.go文件中构建。\",\"首先的首先，我们先想一想我们想要构建一个区块链，我们到底需要一些什么？\",\"Block\",\"Blockchain\",\"Data\",\"test数据\",\"web服务\",\"在写代码之前进行一次构建对于整个编码过程都很重要！\",\"所以我为以上问题做了一个图示，展示我们整个区块链架构的核心过程。\"]},\"511\":{\"h\":\"总代码架构图示\",\"t\":[\"根据函数名称，应该可以大概了解函数的主要作用\",\"左侧的Block、Blockchain、Message就是我们所需要的定义组成区块链的每个块的结构。\",\"generateBlock的作用是初始化每一个区块，caculateHash的作用是为每一个区块计算hash码。isBlockValid去校验我们构建的区块链是否正确。\",\"makeMuxRouter启用Web服务，GET和POST我们的Data值。接下来run运行Web服务。\",\"首先我们需要导入所需要的包，很简单\",\"package main import ( \\\"crypto/sha256\\\" \\\"encoding/hex\\\" \\\"encoding/json\\\" \\\"io\\\" \\\"log\\\" \\\"net/http\\\" \\\"os\\\" \\\"strconv\\\" \\\"sync\\\" \\\"time\\\" \\\"github.com/davecgh/go-spew/spew\\\" \\\"github.com/gorilla/mux\\\" \\\"github.com/joho/godotenv\\\" ) \"]},\"512\":{\"h\":\"如何了解一个package\",\"t\":[\"介绍一下如何去了解一个包吧。\",\"很多人想要去了解一个包就先去别人的博客，自己在百度上随便找一个链接就以为自己吃透了包的内容。\",\"但实际上，了解一个包最应该查看的资料就是官方资料，而且推荐是英文版，因为别人翻译过的资料，很可能有信息缺失，信息传递过程中有些信息就不见了，就好像吃别人吃剩的饭一样，难受死人了。\",\"比如我们需要了解下面这个包的内容crypto/sha256我们首先应该去官网**了解，**首先打开Golang的官网，打开上方的packages你可以看到很多包，按ctrl + F去直接搜索sha256，你就找到了需要的包。\",\"每个包都有Overview,Index和Examples，这个包里的内容是： Package sha256 implements the SHA224 and SHA256 hash algorithms as defined in FIPS 180-4.\",\"翻译过来的意思是：\",\"sha256包实现了FIPS 180-4中定义的SHA224和sha256哈希算法。\",\"在Index内容中可以查看包内的函数，Examples中含有应用例子，比如果我们需要创建一个哈希码：\",\"点击New案例，你就会发现有一个Run按钮，直接运行，就会运行出现应有的哈希码。\",\"以上就是大概了解一个包的内容，如果你想真正学会本篇的区块链教程，请你一定要自己查看每个包内的具体内容，这样再结合具体的代码实战，会让你对包的理解和使用更加流畅。 然后，我们需要一个Block用来写我们的每一个区块。\",\"我们每一个区块中含有Index,Data,Timestamp,Hash,Prehhash。\",\"Index是指索引，从0开始递增。\",\"Data就是我们要传递的数据，\",\"Timestamp是时间戳，记录我们提交Data所用的时间，\",\"Hash是表示此数据记录的sha256标识符\",\"Prehash记录上个块所构建哈希码，用sha256包创建哈希码。\"]},\"513\":{\"h\":\"数据模型\",\"t\":[\"在main中Copy and paste以下代码\",\"type Block struct { Index int Timestamp string Data int Hash string PrevHash string } \",\"这样我们的每一个区块就构成了。\",\"这里你可能有一个疑惑：哈希是如何去识别区块和区块链呢？\",\"答案是：哈希使用散列来识别和保持块的正确顺序。通过确保它们PrevHash中的每个Block与Hash前面的相同，就像下图所示的一样。\",\"这样Block我们知道组成链的块的正确顺序。\",\"但我们每次直接使用Block会很麻烦，所以我们用变量Blockchain来构建我们的类型Block，这样在以后使用增加区块append时就很容易构建了。\",\"再声明一个变量互斥锁，调用时就不需要在函数体内部再进行重新声明了。\",\"还有需要定义一个类型是Message，用于提交Data时，便于解构代码。\",\"var Blockchain []Block var mutex = &sync.Mutex{} type Message struct { Data int } \"]},\"514\":{\"h\":\"生成哈希值和新区块\",\"t\":[\"下面让我们写一个函数来获取我们的Block数据并创建一个SHA256哈希值。\",\"//sha256 do a hash code for every Block func caculateHash(block Block) string { record_block := strconv.Itoa(block.Index) + block.Timestamp + strconv.Itoa(block.Data) + block.PrevHash h := sha256.New() h.Write([]byte(record_block)) return hex.EncodeToString(h.Sum(nil)) } \",\"这个calculateHash函数将我们提供的块作为参数的索引、时间戳、Data和PrevHash连接起来，并以字符串的形式返回SHA256散列。我们在此函数中使用了strconv包，这个包的作用是方便我们转换格式，比如Itoa函数的格式是将Int格式转换为String格式，虽然很简单，但还是建议去官网查看一下包的内容。\",\"很简单的代码，4-6行代码就是我们之前在官网中所看到的代码，也就是上面图片中的代码。\",\"现在，我们可以用一个新的generateBlock函数生成一个新的Block，其中包含我们需要的所有元素。\",\"func generateBlock(oldBlock Block, Data int) Block { var newBlock Block nowtime := time.Now() newBlock.Index = oldBlock.Index + 1 newBlock.Timestamp = nowtime.String() newBlock.Data = Data newBlock.PrevHash = oldBlock.Hash newBlock.Hash = caculateHash(newBlock) return newBlock } \",\"我们使用time包中的Now函数来表示创建newBlock的时间。还要注意，调用了先前的calculateHash函数。PrevHash是从前一个块的hash复制过来的。Index从前一个块的索引中递增。\",\"到此为止我们已经成功声明了一个区块，并且为它计算hash值。\"]},\"515\":{\"h\":\"数据核实\",\"t\":[\"现在我们需要编写一些函数来确保块没有被篡改。我们通过检查Index来确保它们像预期的那样递增。我们还检查以确保我们的Prehash确实与前一个块的Hash相同。最后，我们希望通过在当前块上再次运行calculateHash函数来再次检查当前块的散列。让我们写一个isBlockValid函数来做所有这些事情并返回一个bool值,如果它通过了我们所有的检查，它将返回true。\",\"func isBlockValid(newBlock, oldBlock Block) bool { if oldBlock.Index+1 != newBlock.Index { return false } else if oldBlock.Hash != newBlock.PrevHash { return false } else if caculateHash(newBlock) != newBlock.Hash { return false } else { return true } } \",\"现在，我们已经完成了构建区块链的大部分工作，现在我们想要一种方便的方式来查看我们的区块链并写入它，最好是在一个web浏览器中，这样我们就可以直观的展示我们的每一个区块的内容。\"]},\"516\":{\"h\":\"Web服务\",\"t\":[\"如果你还不了解Go语言是如何启用Web服务，你可以先去Go语言的net/http包的官网去先了解一下，如果不了解也没关系，我会用很直白的话讲明白。\",\"我们使用mux包来帮助我们构建Web服务，去mux的github官网，可以看到一下信息，帮助我们简单地构建一下web服务。\",\"所以我们很简单调用一下函数（之后添加），来方便我们构建GET和POST方法。\",\"//create web service func makeMuxRouter() http.Handler { muxRouter := mux.NewRouter() muxRouter.HandleFunc(\\\"/\\\", handleGetBlockchain).Methods(\\\"GET\\\") muxRouter.HandleFunc(\\\"/\\\", handleWriteBlockchain).Methods(\\\"POST\\\") return muxRouter } \",\"这是我们的GET函数\",\"//when receive Http request we write blockchain func handleGetBlockchain(w http.ResponseWriter, r *http.Request) { json, err := json.MarshalIndent(Blockchain, \\\"\\\", \\\" \\\") if err != nil { log.Fatal() } io.WriteString(w, string(json)) } \",\"我们去json包的官网可以看到\",\"MarshalIndent函数可以应用缩进来格式化输出。输出中的每个JSON元素将以新行开始，以前缀开头，然后根据缩进嵌套，后跟一个或多个缩进副本。\",\"当然还有io包内的函数，需要你自己去官网中查看。\",\"这是我们的POST函数\",\"func handleWriteBlockchain(w http.ResponseWriter, r *http.Request) { w.Header().Set(\\\"Content-Type\\\", \\\"application/json\\\") var msg Message decoder := json.NewDecoder(r.Body) if err := decoder.Decode(&msg); err != nil { respondWithJSON(w, r, http.StatusBadRequest, r.Body) return } defer r.Body.Close() mutex.Lock() prevBlock := Blockchain[len(Blockchain)-1] newBlock := generateBlock(prevBlock, msg.Data) if isBlockValid(newBlock, prevBlock) { Blockchain = append(Blockchain, newBlock) spew.Dump(Blockchain) } mutex.Unlock() respondWithJSON(w, r, http.StatusCreated, newBlock)} \",\"现在你明白为什么要将Message单独作为一个结构了吗？我们使用单独的msg结构的原因是为了接收JSON POST请求的请求体，我们将使用该请求体来编写新的块。这允许我们简单地发送一个带有以下主体的POST请求，我们的处理程序将为我们填充块的其余部分。\",\"在将请求体重新解码为var msg消息结构之后，我们通过将之前的块和新的Data传递给前面编写的generateBlock函数来创建一个新的块。这就是函数创建新块所需要的一切。我们使用前面创建的isBlockValid函数进行快速检查，以确保新块是符合要求的。\",\"你还会发现我们使用了mutex的互斥锁内容，因为当添加新块时，是不允许其他函数进行访问的。\",\"spew.Dump方便我们打印结构体到调试窗口\",\"POST请求可以使用curl和postman工具进行调试\",\"当我们的POST请求成功或失败时，我们希望得到相应的通知。我们使用一个小小的包装器函数respondWithJSON来让我们知道发生了什么。\",\"func respondWithJSON(w http.ResponseWriter, r *http.Request, code int, payload interface{}) { response, err := json.MarshalIndent(payload, \\\"\\\", \\\" \\\") if err != nil { w.WriteHeader(http.StatusInternalServerError) w.Write([]byte(\\\"HTTP 500: Internal Server Error\\\")) return } w.WriteHeader(code) w.Write(response)} \",\"最后运行服务\",\"//run Http servefunc run() error { myHandler := makeMuxRouter() httpPort := os.Getenv(\\\"PORT\\\") log.Println(\\\"HTTP Server Listening on port :\\\", httpPort) s := &http.Server{ Addr: \\\":8080\\\", Handler: myHandler, ReadTimeout: 10 * time.Second, WriteTimeout: 10 * time.Second, MaxHeaderBytes: 1 << 20, } log.Fatal(s.ListenAndServe()) return nil} \",\"在run函数中，也有我们需要了解的一下新知识比如http包的内容\",\"大家可以根据之前我带大家去了解新包的方式去了解os包的内容\"]},\"517\":{\"h\":\"差不多完事了\",\"t\":[\"最后是我们的main函数\",\"让我们把所有这些不同的区块链函数、web处理程序和web服务器连接在一个简短的main函数中\",\"//main funcfunc main() { err := godotenv.Load() if err != nil { log.Fatal(err) } go func() { t := time.Now() genesisBlock := Block{} genesisBlock = Block{0, t.String(), 0, caculateHash(genesisBlock), \\\"\\\"} spew.Dump(genesisBlock) mutex.Lock() Blockchain = append(Blockchain, genesisBlock) mutex.Unlock() }() log.Fatal(run())} \",\"看看main函数做了什么。\",\"还记得我们的.env文件吗？2-6行，就是编码.env文件，方便我们监听8080端口。\",\"7-16行，同时我们用并行方式运行匿名函数，genesisBlock是最重要的主要功能部分。我们需要给区块链提供一个初始的块，否则一个新的块将无法与它之前的哈希值进行比较，因为之前的哈希值不存在。\",\"18行，最后运行web服务。\",\"最后我们的区块链就构建完成了，我数了数也就159行。\",\"但足够你用好几天时间去消化内部的知识了。\",\"我们来运行一下试试看:-)\",\"在终端启用go run main.go\",\"我们看到web服务器已经启动并运行\",\"打开浏览器访问localhost:8080我们看到了相同的创世区块。\",\"接下来我通过postman工具进行POST{\\\"Data\\\":150}请求\",\"多试几个看看？\",\"在浏览器中访问\",\"你已经完成本篇文章的全部内容了，可能你已经看完了整篇文章不知云里雾里，但我还是希望你能够亲手将上述所有的代码全部自我实现一遍。\",\"欢迎点赞，关注哦！\"]},\"518\":{\"c\":[\"blockchain\"]},\"519\":{\"h\":\"我写了个APP可以帮助我入定\",\"t\":[\"In the past few years, Tide has always been a good App for people who like to meditate. But with the development of time, the tide has become bloated, contrary to its original intention. So three days ago, I decided to develop a new App to replace the Tide at least for me.\",\"First, it needs to be concise enough, have enough music, and can play multiple music at the same time.\",\"Second, it needs enough simple for people to use. And to occupy the user's mind.\",\"Third, wait for me ane let me think about it...\",\"All right, let's go.\",\"click it to download apk\",\"Deep\",\"Let us continue. What's this? Deep that could help me in immersed.\",\"Advantages:\",\"Minimal interface, focus on APP experience\",\"Have hand maybe ok...\",\"Gameplay planning, interface design, promotional materials, APP all codes. All of the above are completed by me independently.\",\"If you have any questions during use, please feel free to give me feedback.\"]},\"520\":{\"h\":\"Enjoy!\"},\"521\":{\"h\":\"中文版本\",\"t\":[\"过去几年，Tide 一直是喜欢冥想的人的不错 App。 但随着时间的发展，潮汐已经变得臃肿，有悖于它的初衷。 所以三天前，我决定开发一个新的 App 来代替 Tide，至少对我来说是这样。\",\"首先，它需要足够简洁，有足够的音乐，并且可以同时播放多音乐。\",\"其次，它需要足够简单以供人们使用。 并占领用户的心智。\",\"第三，等我，让我想想……\",\"好吧，我们继续。\",\"Deep\",\"点击下载\",\"让我们继续。 这是什么？ Deep可以帮助我沉浸其中。\",\"优势：\",\"极简界面，专注APP体验\",\"有手就行...\",\"玩法策划、界面设计、宣传资料、APP全部代码。 以上均由本人独立完成。\",\"玩的开心！\",\"如果你在使用过程中有任何问题，欢迎对我反馈。\"]},\"522\":{\"c\":[\"white-noise\",\"music\"]},\"523\":{\"h\":\"宇宙起源\",\"t\":[\"The past universe was in a state of infinitely high density and temperature before a finite time. This state is called a singularity. This high-temperature and high-density phase in the very early stage of the universe is called the \\\"Big Bang\\\", which is regarded as the birth period of our universe. So far, this period of the Big Bang has a history of 13.7 billion years.\",\"In the early days of the universe, it was composed of homogeneous and isotropic high-density, high-temperature and high-pressure matter. And very fast expansion and cooling occurred very early.\",\"In less than one second, the density of the universe changed rapidly, various forces (strong interaction, weak interaction, electromagnetic interaction) began to peel off, atomic trinos began to freely travel through space, and the temperature dropped rapidly, neutrinos Escaping outward, the electron annihilation reaction appears, [nuclear force](https://baike.baidu.com/item/nuclear force) is not enough to restrain [neutron](https://baike.baidu.com/item /Neutron) and proton.\",\"The Milky Way is a lonely little spot in the universe, and the Milky Way is its body. It rubs its eyes from time to time, and then produces the black hole in the center of its eye—its pupil. It doesn’t know where it came from or where it came from. Looking at its body, every planet is like its cell. Thousands of spherical planets make up its body. Sometimes it’s lucky. The astral body will produce some parasites that it considers to be life, but it doesn't care. Life that uses the law of blocking entropy increase as a carrier may survive for a period of time, but it is meaningless.\",\"Sometimes, it will notice the nebula far away from itself, who is not living alone in the universe?\",\"Most of the nebulae in the universe are made of gas. If you try to enter, you will go straight through and never return. The glamorous face is the product of extreme rage,\",\"**Anything in the universe that cannot be seen is full of horrors and traps. **\",\"Andromeda is very close to herself, and has inadvertently been getting closer and closer to herself. Four billion years later, she will be in contact with herself, and it even thinks of the name after they come into contact and is called \\\"[Milkomeda]( https://zh.wikipedia.org/wiki/Andromeda Galaxy-Collision of the Milky Way)\\\", maybe it’s good to fall in love?\",\"In Coma, the galaxy has a striking dark dust band, lying in front of the bright galaxy core, this nebula seems to be very cold, with bright black dust bands around the eyes.\",\"The wheel galaxy, which looks like a wheel, 200 million years ago, a smaller galaxy crashed into the center of a larger galaxy. As the gravity at the center of a larger galaxy is distorted by a small galaxy, a shock wave is generated that rushes from the center to the outside, compressing the outer nebula and forming new stars.\",\"The cigar galaxy is 12 million light-years away. Its brightness is about 5 times that of the entire Milky Way, and its center is 100 brighter than the center of the Milky Way. Times.\",\"Thousands of stars are born every second in the universe, and inexplicable things like the Milky Way are formed hundreds of billions of times.\",\"**Sometimes a star explodes in space before halfway through the Milky Way. We can live here. At this moment, this is a miracle in itself. **\",\"It accidentally discovered a dazzling golden yellow planet. During its billion years of helium nuclear fusion, it continuously emitted various particles around itself. Because of the huge mass of this planet, its gravity can accumulate to extremely high temperatures. The higher the temperature, the faster the movement of the nuclei. When it reaches one million degrees Celsius, the electromagnetic force of the nucleus will not be able to stop the high-speed running atomic nuclei from each other. The power of collision. So the strong force of the atomic nucleus finally combines in an instant and makes the matter release huge energy.\",\"This is how Taiyuan was born, the way the sun and all stars in the universe were born.\",\"**Stars are born, grow up, and... Then what happens? **\",\"** Will they die? Did they die silently or vigorously? **\",\"The answer lies somewhere on the edge of the universe.\",\"Luminous clouds, hanging in the sky, surround stars that once resembled our sun—the only thing they have left is these colorful gas. ** Various elements formed by nuclear fusion reactions deep inside the star are released into space when the star dies. **\",\"**The green and purple ones are hydrogen and helium, which are the original raw materials of the universe. The red and blue ones are nitrogen and oxygen, which are the materials that make up life on earth. **\",\"**For our survival, such stars must die. **\",\"**Every atom in our body is produced by nuclear fusion of these dead stars. We are all stellar materials, and our family tree goes back to this point. **\",\"The energy of the sun is produced by the elements deep within itself during transmutation, and this energy is released in the form of strong radiation. These \\\"light particles\\\", or light quanta, move from the center of the sun to the surface. The speed of light is 300,000 kilometers per second, and the radius of the sun is 700,000 kilometers. Therefore, if the light quantum walks in a straight line, it only takes 2 seconds to reach the surface from the center.\",\"But this is definitely not the case. As the light quanta advances outward, they will collide with countless atoms and electrons inside the sun. The free path of light quanta in the sun is about 1 cm, and the radius of the sun is 70 billion.\",\"In this way, the time spent on the entire journey is 150,000,000,000 seconds, which is 5,000 years!\",\"Every photon shining on us was produced fifty centuries ago. When primitive humans wandered through the grasslands of Africa, this light quantum had already been produced from the sun, and reached us until today. Or maybe in the far depths of the universe, our kind is walking and evolving.\",\"When the star is dying, its atoms fuse and squeeze together, and the density becomes extremely high. A teaspoon of white dwarf star's material weighs a ton.\",\"The sun is also such a frightening end, 6 billion years later, the sun will become a white dwarf, and its death will announce the end of life on our planet.\",\"This will make you wonder how many outside worlds exist and disappear like this.\",\"How many unknown cosmic stories are forever missing.\",\"Fortunately, we are the known story of the universe.\",\"We are lonely again,\",\"It discovered that viruses can appear on its own cells. This is amazing. It is as if amino acids can be randomly combined into proteins. Various purines and pyrimidines can be arranged and combined into RNA molecules, but it does not violate the agreement. Patiently observe this own cell, blue, a light blue blue dot, relying on the residual heat emitted by the central star, and its location is exactly the necessary place for the cradle of life-water.\",\"The location of this dim blue dot is so cute, there are three forms of water, and water happens to be the cradle of life, oh my God, it doesn’t know what will happen, it knows that one day it will fall apart, like I don't know where I came from, and I don't know where I am going to lead.\",\"Perhaps we should be grateful to this universe for creating a unique living environment for us, and giving us an environment full of unknowns. Everything that seems beautiful is like poppies-the surface is bright and beautiful, but in fact, the undercurrent is surging.\",\"Occasionally, a comet slammed into this dark blue spot, bringing life primitive matter and organic matter to this primitive planet, and even sowed the seeds of life.\",\"Slowly, the water in this cell gradually increased, completely turning into a water-filled planet. Waiting and waiting silently, finally one day, a magical thing happened. This is a process full of randomness and uncertainty. Various amino acids make up proteins, and they happen to combine with other substances to become a passable Life evolved from the environment. In the process of forming life, these substances automatically condense to form aggregates. This feature of automatically gathering surrounding materials, once formed into life, will also absorb surrounding materials, remove waste, and improve oneself.\",\"The cold second law of thermodynamics says that all isolated systems evolve in the direction of entropy increase. But the magic of life evolution is that it can exchange matter and energy with the environment, creating negative entropy for itself, so as to maintain itself strong and tough, and maintain upward vitality.\",\"The second law of thermodynamics began a scene of rebellion, and was born as a face that continued to cause negative entropy to survive. This gadget continuously increases entropy to the environment to maintain its continuous vitality. Life actually started with this, and opened a new prologue.\",\"Slowly, this dim blue dot began to produce new things, and the species slowly increased, as if a virus was produced in its own cells. It smiled and wanted to re-evolve, so it rubbed its eyes again. Everything started with early.\",\"This time it was a coincidence that led to this dim blue dot evolving into organisms called humans. They stood out in the evolution of species, became the masters of this planet, survived and multiplied, and became the basic human potential.\",\"The evolution of life is not easy. If the period from the birth of Earth is regarded as a year, although there may be microorganisms in March, it will not be until November. The simplest fish appears in the third week of the month. Early humans appeared around New Year's Eve, but the time of civilized humans only occupied the last minute.\",\"Human beings have been groping in the dark for a long time. Primitive humans use clumsy hands to depict everything they think on the rock. They fantasize that giving themselves life must be in the unknown outside their known realm. From simply depicting It took millions of years for life to create a glorious civilization, finally traverse the darkness of religion, and finally usher in the dawn of modern science.\",\"The most incredible thing in the universe is that a purely material world can create intelligence. Since humans have discovered this kind of structure called genes, they can believe that even dust can be created through a particularly delicate arrangement. A high-level state of matter like life emerges, and as long as it is given enough time and space, it can evolve intelligence.\",\"I was born on this planet, an ordinary person. Be born, go to school, fall in love, and get married just like most ordinary people.\",\"I gave my lover a necklace with Sisi embellishment. She looked at me and said three words to me.\",\"I told her that this was the product of the beginning of the explosion of the universe and the crystallization of love between you and me.\",\"From the perspective of material abundance, large stars are the finest products in the universe. They can not only produce all the elements, but also because the larger the star, the shorter the life span, and therefore the cycle is also short.\",\"Therefore, Stellar's Big Mac is the most efficient factory for manufacturing elements in the universe. However, the mass limit of the largest star in the universe is one hundred suns. If it is larger, it will disintegrate due to its own nuclear reaction too violently.\",\"Gravity creates elements, but it also binds elements. Small stars can produce about ten kinds of elements, but these elements cannot flow in the universe in the end.\",\"Large stars can produce more elements. Generally, stars that are more than 8 times the mass of the sun can make fusion unparalleled. The high temperature of its core reaches billions of degrees to continuously create incredible fusion, and the energy produced by each fusion makes the star. Expand more. So it is like an onion to form an amazing multi-layer nuclear fusion space, this space can reach 10 billion kilometers, containing the entire solar system.\",\"As the fusion progresses, stars become more and more dangerous. Because the heavier the element, the less energy provided by fusion, and the huge star must be supported by the continuous release of nuclear energy. However, when the fusion reaches the 26th iron element, the crumbling star suffers the most lethal damage—— Because the structure of iron is extremely stable, it does not release energy during fusion.\",\"As a result, the huge and expanding star will collapse because the core loses support.\",\"Therefore, the smashing explosion of stars, the hurricane of energy sweeping the heavens, this is the supernova explosion. At this moment, its energy is equivalent to 10 billion times that of a normal star. At this super-energy moment, all the elements in the universe were fused.\",\"Heavy elements like gold and silver jewelry were born in the explosion of supernovae.\",\"When we wear them, we must remember that it is indeed very expensive for the universe to make high-end products. It needs to scrap a star that is at least 8 times larger than the sun in order to make us wear gold and silver.\",\"I finished typing the code and went out, looking at the sky. First, a shiny red dot appeared in the blue sky, and the red dots began to appear ripples like water patterns. Some golden light dots appeared quietly, and they moved quickly. Brilliant rays of light were drawn in the air until the golden network that enveloped the entire world quietly appeared.\",\"The ubiquitous golden network is like a cobweb encountering flames. It began to collapse a little bit in the huge turbulence, shaking with huge tremors, more and more golden threads began to break, and the network gradually disappeared.\",\"The whole world began to slide towards the edge of collapse.\",\"Time and space became chaotic, everything no longer had order, everything began to become chaotic and complicated.\",\"A small grass was growing rapidly in the desert, growing into a big tree at a speed visible to the naked eye, and quickly developing a wild jungle, then disappeared, as if it had never existed.\",\"Outside the cloudless sky, the meteors became more brilliant. A large meteor shower passed across the sky. There was no flame, but a large frost was falling. The flames under the ground were still burning, and the frost and snow fell on it, but it did not melt. Walls of ice were piled up in the flames.\",\"Another sun rose slowly, but did not bring the slightest light and heat.\",\"Everything is intertwined between the illusion and the reality, and it is impossible to distinguish what is true and what is false. Even using the most weird imagination in the world, it is impossible to describe this moment.\",\"All things in the universe, life states, all are alternately staged, the sun, the moon and the stars, the sudden birth and the fall, the desert, the sea, the waves rise and disappear, the world changes, the vicissitudes of life, can not feel time, can not feel space, as if passing through a moment century……\",\"Heaven and earth began to overlap.\",\"What happens after overlap?\",\"Through the boundless nothingness, it was a deep and gloomy world, where there was a faint bright spot that stretched endlessly towards the distance.\",\"With a wave of my hand, my body gradually became transparent, and the entity turned into an image, becoming thinner and thinner until it disappeared.\",\"I said this to whom I seemed to say to, but I didn’t seem to say it again. From the bottom of my heart, I silently said to the atoms and molecules that make up my body. Goodbye, my body, the particles that were born at the beginning of the universe, are going to return. Original place, then, is all this nothingness?\",\"My soul quickly fills the entire universe at an unknown speed. When my body is filled with the universe, I become the universe itself. I seem to be everyone, but it seems that no one is. I am Hitler and I am Mohammed. Germany, I am Newton, I am Genghis Khan, I am Napoleon, but I seem to be no one. All atoms and molecules come from me, and I belong to the whole world itself.\",\"All our intertwined joys, angers, sorrows and joys, thousands of conclusive religions, Ideology and economics, all hunters and robbers, all heroes and cowards, all creators and destroyers of civilization, all kings and farmers, all young people in love, all parents whose blood is thicker than water, are full of hope for the world All the children, inventors and explorers, all the spiritual teachers and corrupt politicians, \\\"superstars\\\" and \\\"supreme leaders\\\", all the saints and sinners, are there.\",\"When the universe rapidly explored and became a singularity, I became that singularity. It seems that everyone has become a singularity. But when the universe began, we gathered here, but we seemed to sleep elsewhere. Since the beginning of the universe, we have all known it. The embellishments that make up our bodies seem to be very cordial. From the beginning, they are the most basic elements that make up us.\",\"Now, humans can prove that the universe began with a big bang. However, what mankind is more convinced is that a universe with a special preference for universal gravitation must start with a big bang before everything can be in order.\"]},\"524\":{\"c\":[\"imagine\"]},\"525\":{\"h\":\"学习学习再学习\",\"t\":[\"这篇文章的标题选用李笑来以前的公众号名，看起来有点抄袭的意思了。但其实不是一个意思，根据李笑来的说法，这里的学习学习再学习，三个学习中第二个是名词，其他两个是动词。有点绕口，具体的解释是这样子的：先去学习正确学习的方法，再去学习，这样的学习就比较高效了。\",\"但本文的学习学习再学习对待的是特定领域，比如你要学Javascript，那么你就先去学一学基础语法，确保大概能看懂别人的程序代码，注意：这里是第一个学习。接下来直接上手去做一点自己感兴趣的东西，或者直接去看别人的代码都可以，然后自己写一写，然后发现还是由很多东西没有掌握明白，于是逢山开路，遇河搭桥，这样子，此谓第二个学习，具体是有目的地去解决一些现实问题。到然后再去全然巩固一遍Javascript的全部概念，甚至底层的垃圾回收算法，词法分析，编译器等等问题，这就是第三个学习，全面。\",\"到这里我大概总结一下：\",\"照猫画虎，学皮毛\",\"逢山开路，解决问题\",\"全面\",\"不用多说，你自然就知道很多人的境界了，绝大多数人的境界是停留在第二个学习里面的，因为第二个遇到问题解决问题其实是一种解决现实问题的思路，因为曾经的基础大概会了，看很多东西也都看得懂，想去做也可以做得出来。所以不用多说，第二个境界对于解决实际问题的确很有帮助，但问题是，相较于第三个学习，到底有什么不同点呢？在我看来主要的不同点就在于全面。\",\"在李笑来的《自学是门手艺》里有一句话其实全然解释明白了这个问题：高手之所以为高手，就是因为他们已然达到了全面的境界，所以对于绝大多数问题都能够解决，但又由于他们都曾身处于第二个阶段，所以他们也知道遇到的问题去如何解决，所以他们的特点就是全面。\",\"当然全面还有另一个隐性优点： 全面可以节省很多不必要浪费的时间。\",\"其实学习是有成本的，虽然学习的复利效应巨大，但不可否认学习是有时间成本的。即你学习一个东西如若不全面，日后再若遇到同样的问题，又得重新学一遍，但全面不一样，全面的境界是只需要重新在大脑里扫描需要的知识去用就可以了，因为已然达到了全面的境界。\",\"在这里就得提到Shell语言，这已经是一个极简化的语言，只拥有很少的特性，但长期以来我都是写一次查一次，没有正儿八经地拿它当一个完整的语言，Code by example，其实更浪费时间，这里有一个因果论观点，意思是\",\"学习某个东西，本来的想法是节省时间，但长期来看用一次查一次，其实更浪费时间。\",\"一些工具更是如此，从Vscode快捷键，Windows系统快捷键，Ubuntu shell命令行，到我们日常工具的使用，比如git，github等等，push到远程仓库，甚至Notion的应用这些工具完整地学习长期来看更节省时间，因为这也更能达到全面的境界，也就是高手的境界。\",\"以上，论证系统学习的必要性。\"]},\"526\":{\"c\":[\"learn\"]},\"527\":{\"c\":[\"learn\",\"thinging\"]},\"528\":{\"h\":\"绝对的正确\",\"t\":[\"绝对的正确存不存在？这对绝大多数人来讲是一个无须讨论的问题。因为对于他们来讲我们的时代就是毫无疑问的正确，所有的事物都是正确的，科学技术，艺术文化。\",\"当我们回头往过去看，往往一切都是那么地失败，仿佛过去的都是错误的，甚至当我们看向我们自己也往往是同样的想法：过去犯的错误太多，如果...就好了，或者要是...，我就...连我们自身都会常常会有这样的想法。\",\"但我们这个时代有什么不同呢？事实上是...没什么不同。这意味着我们的时代往往在当下看确实是前所未有的正确，但不用多久甚至五到十年事情往往就会发生变化，又因为信息革命让我们每个人的链接比以往放大了无数倍，所以未来的列车事实上也是加速度向我们驶来的。\",\"我举一个很简单的例子，1998年有一个很著名的福州IP电话案件，简单的来讲就是在当时的电话大多数都是传统电话，后来福州的陈氏兄弟通过提供互联网IP电话服务，但98年一月份这俩兄弟就被公安局给逮捕了，并且家庭住址被搜查，并且没收作案工具。后来这俩兄弟不服，上诉，直到98年年底重新开审，在新的判决下，推翻了一审的判决结果,互联网是有记忆的，sina上还可以找到当时的案件。\",\"那我们放到现在再来看这个案件，在我们已有的视角之下，我们平时打的语音电话，甚至视频电话也是很普通寻常的事情在当时竟然是个案件。IP电话是先进技术，比起以往的传统拨号电话有着更低的成本，使用起来也更方便。但大众的思维往往跟不上科技的进步。\",\"那为什么拿这件事情举例呢？因为这就是一个典型的因为发展而得到正确的事件，那我们现在的时代有什么不同吗？很显然没什么不同，都是熟悉的味道。当下来看很多技术创新的遭遇与当时的IP电话是类似的，比如设计基因，转基因食品，数字货币。\",\"许多人都声称自己开放，但很多人的意思其实是...只允许讨论自己认同的观点，而不是不同的，如果有人反对自己的观点，那一定是他错了。那我们的大众正确吗？很显然时代是发展的，所以若以未来的视角来看，大众的看法不会是正确的。\",\"为什么历史很重要，因为不了解历史，我们就不知道从何处而来，也不知道将通往何方。\",\"历史上有个伟人直接以哲学的视角描述了上述的论证, 发展是硬道理。因为绝对的正确不存在，所以以发展的眼光看待事物，因为发展对应的就是未来，即不断向未来那个正确发展，但又永远存在未来，所以只需要发展。\",\"关于预测未来方面，在有个人叫做托夫勒，此人在上世纪九十年代在一本书中这样说过像唐纳的特朗普，或许早已被安排为美利坚合众国总统。，此人也是创造信息革命的人，并且预言未来会出现一种纯数字化的货币。\",\"当然更多预测未来方面的人都出自投资领域，为什么？因为投资是一项当下埋进去的种子，未来收获的事业。即投资人需要以当下的视角去思考将自己的金钱放到何处才可以获取收益。这需要顶级的投资人时时刻刻去思考。\",\"关于预测未来方面，桥水基金的老大瑞达里奥去年年末写的《原则》借助了计算机去预测未来。值得一提的是瑞达里奥还给出了普通人最简单的投资观念是：70%投入股票，30%买入国债，和普通人想的30%股票。70国债恰恰相反，大师就是大师，给出的简单建议都与普通人的想法完全相反。\",\"关于未来，普通人什么都不需要做，但如果你想做产品，那么仔细思考这件事情，既然当下毫无疑问不会是正确的，那么以未来的视角来看究竟什么又是正确的？很显然如果在这件事情上与大众认为是正确的想法相反，那就有可能是未来那个正确方向。\",\"自古以来总有毫无疑问是正确的事情，有个聪明人叫塔勒布，这个人大概是这个世界上最聪明几十个人之一(在概率上来看应该是亿分之一)。黑天鹅原本只是个形容天鹅的词，但他的书《黑天鹅》描述了黑天鹅事件，此后黑天鹅就被形容为带来巨大影响的小概率事件。他的书《反脆弱》中有讲过时间其实是检验正确的良药，与其听新鲜词，不如去听祖母的话。这与发展是硬道理又不谋而合。\",\"以上。\"]},\"529\":{\"c\":[\"thinking\"]},\"530\":{\"c\":[\"thinking\"]},\"531\":{\"h\":\"个体的反击\",\"t\":[\"有时候你不得不承认这个世界发展的速度已经超过了我们的想象，有时候在一个领域里一个新蹦出来的知识还没怎么理解透彻，回头一看，又新蹦出来一堆新发明的名词。这不仅仅是对我们考验着我们对资讯的理解和处理能力，也不单单挑战对技术的理解，更挑战着我们对这个世界的认知方式。\",\"在这里还需要熟知的一点是，我们中的绝大多数人都生活在已经熟知的领域之内，因为自己在熟悉的领域中更清楚自己所处的位置以及知晓如何继续下去。你是学生，那么考试成绩就是证明自己的学有所成的有效方式，那么继续做个学生其实是生活在自己熟知领域里的最佳方式，虽然明白未来会呼啸而来，而随之而来的现实世界并没有最优解。在自己熟知的领域里知晓一切，而自己熟知的领域却不过是整个世界的一瞥。\",\"然而，目前即使我们在互联网上，我们依然生活自己熟知的领域内，B站有一些描述信息茧房的视频其实就描述了这些现象，有个纪录片《监视资本主义》其实也描述了这种现象，有兴趣可以看一看，即使是在互联网上，我们也被困在自己熟知的领域之内。不信你看一看自己手机中的APP就知道了，其实经常用的就那么几个。\",\"但这一切其实只是这5000天以来发生的事情，智能手机，人工智能翻译，家用物联网设备这些都是5000天以来发生的事情，别惊讶，我们这篇文章是想结合过去的互联网再恰当的去讨论关于未来的互联网究竟会是一个怎样的世界。\"]},\"532\":{\"h\":\"传统互联网\",\"t\":[\"注意我这里的一个名词传统互联网，其实是相对于现在而言的，或许当我们身处未来，再回头来看，我们现在的垄断互联网阶段也可能会被看成是传统互联网的另一个分支。\",\"在1990年左右，创作者的个人网站往往是以创造性的方式去表达个性，这也是当时互联网的基础。虽然这些网站的表达方式其实一直以来都没怎么变过，hacknews其实就是这些网站中的代表，虽然这些早期论坛随着移动互联网分走的流量，也在持续衰落。但有迹象表明许多互联网用户对我们当今垄断互联网越来越失望，传统互联网的规模貌似有提升趋势。\",\"90年代早期，互联网的精神就是追求知识，探索，创新，兴趣。随着互联网的广泛传播后，广泛地涌现出一些喜欢研究新事物的人所创建的网站，那个时候的服务器成本也很低，自己建站的目的也是为了兴趣。可以这么说，早期互联网的大部分站点其实都是个人网站，并且这些个人网站也有很多成为了当时的门面。当时的企业，政府也没有在互联网上建立自己的网站，大多数人甚至不相信自己应该在虚拟世界里建立自己的平台，相当多数企业高管，政府领导也不知道互联网究竟是什么。\",\"在那最初的几年里，个人可以自由地在互联网上以任何方式去表达自己，不受公司和政府的干预。很多时候，一根网线加上一台电脑就可以去互联网的任何地方，没有跟踪监视和算法分发。没有搜索引擎，没有点击诱饵，没有广告。当时的社交媒体也与现在截然不同，甚至没有法律去监管黑客，因为政府甚至意识不到这些是问题，因为对于当时的政府而言，整个互联网的虚拟世界完全不可见。\",\"这也是我们现在这个互联网世界所面临的挑战，当垄断互联网已经日薄西山，绝大多数人不知道未来的互联网要去往何方，但有一点是已经确定的，未来互联网是由每个对垄断互联网感到厌倦个体去参与的。\",\"我一开始接触互联网的时候已经是这种传统互联网的末期阶段，但当时确实只是靠网页就相当于是拥有了整个互联网了，现在的程序员编码也是依靠网页去编码，即使是手机已经很方便的今天，用手机去编程也不是一个理想的方式。\"]},\"533\":{\"h\":\"如今互联网\",\"t\":[\"近些年，越来越多的人已经认同一个观点：现在的互联网或许是一个错误。\",\"对于绝大多数人而言，怎样解决其实不是问题，因为即使知道了这个问题，也没有能力和动力去解决这个问题。所以，对于绝大多数人而言，正确的提问应该是这个互联网究竟哪里出了问题？\",\"我相信绝大多数人其实是没有考虑过这个问题的，现实中一个人在网上使用的APP数量其实很少，美国人就是Twitter，Facebook，Google等，在中国就是微信，美团，淘宝，拼多多。对于全世界而言，互联网的中心化几年前就完成了。\",\"对于用户而言，因为中心化的互联网，这个互联网里的中心化厂商也尽可能地让用户花费更多的时间停留在自己的领域内，好让用户产生更多的数据，以获得更集中的发展。\",\"但互联网的中心化带来了另一个更严重更多问题，即用户的利益不断被侵犯，或者换句话讲叫中心化的互联网厂商没有中立的义务，他们其实有自己的考虑。当然这也不是他们的问题，这是处于竞争状态下，每个中心化互联网企业都尽可能让自己的利益最大化必然情况，如果可能发生让自己利益受损的情况，最好的方式就是让它在自己的领域内消失。\",\"其实这种情况已经很普遍了，经常性的会有微博的博主账号被封掉，豆瓣也一样，知乎里面的某些回答也是一样会被审查，在这当中当然有自己利益的考量。\",\"这或许正应了《动物农场》里面的一句令人惊悚的话：所有动物都是平等的，但有些动物更加平等。\",\"现在的互联网本身已经被看作是一个巨大的广告工具，就像你在街头巷尾看到满墙的广告一样，而且即便是网速已经不是问题的今天，大部分网站的加载速度也不理想。\",\"而这些广告其实是基于用户数据产生的分发，每个人的数据不同，看到的广告也不同，你去看看这些科技公司这些年的股票价格已经翻了几十倍，这在传统实业来看几乎是不可能的，但基于虚拟世界的数据就是这么值钱，但这一切似乎都来源于我们中的绝大多数人主动放弃了自己的数据拥有权。\",\"如今的互联网一直要求我们以在线的状态，但真实的原因却是让我们去看他们的广告，各种在线的支付场景，有墙的花园，并且实时监控我们的电话接听系统，查看是否有可疑电话，并且如果进入的网页里没有办法的certs证书，那么就会被认作是危险的。他们不断发明新的方法让互联网中的人圈养在各种围栏里。\",\"在这个时间点上，用户几乎放弃了自己所有的隐私，而大公司也在尽可能地多获得用户所创造的数据，只为多卖点广告。不信你去看看微信朋友圈里分发的广告，你去京东的搜索框里随便一搜某件物品，回到微信朋友圈赫然出现那个物品的广告，这早已不是秘密了，许多人甚至都习以为常了，甚至不觉得这是个问题。\",\"但说另一个现象你就会注意到这其实是一个很严重的问题了，你可以拿到自己曾经在互联网中生产过的数据吗？抖音，微信，QQ，知乎你可以吗？比如可以拿到自己在知乎上发表过的所有的文章，可以吗？这里面其实有一个很现实的问题：数据是自己生产的，平台只是提供分发，那么我竟然拿不到我自己生产过的数据？可预见的未来是在这种互联网上是不可能拿到属于自己的数据的，这也是我已经相当长时间没有存在于这种围栏互联网的原因。\",\"自己生产数据，却没有数据的所有权其实是很扯淡的，在中国尤其是如此，如果你是一个合法公民，那你一定听说过国家反诈骗APP，前段时间甚至有警察说如果你没有干违法的事情，那么你就应该相信国家，把所有隐私交给国家是没有问题的。这样的说法还有很多人去点赞，并且不觉得这是一个问题。《雪崩》其实有描述过数据垄断下的企业成为了最庞大的机构，而那之下政府几乎荡然无存，但放在今天来看，企业拥有庞大的数据确实是真实的，但这一切其实都来源于政府的默许，政府已然是数据时代最大的赢家。\",\"当然不仅仅是中国，许多所谓民主国家的政府也普遍反对在互联网上实行任何形式的自由。前两年俄罗斯通过了一些法律条规，旨在使俄罗斯于其他互联网断开连接，这样子倒不如学朝鲜，让整个国家没有互联网或许是更加省事的做法。中国正在开发一种全新的互联网协议，竟然有个匪夷所思的名字叫“New Internet Protocol”，翻译过来叫新互联网协议，目的是使政府更有效地监控公民并禁止公民去参与有关网络自由的事，这个协议称互联网必须赶得上未来，并赋予政府对其国家互联网有可访问性的最终权力。这种“自上而下”的互联网协议将会有普遍的互联网审查，其实这种情况已经很普遍了，但互联网最终的权力交给政府手里真的是最优的做法吗？\",\"这种做法我是持有怀疑态度的，这样的做法会让整个社会失去活力与创新性。是的，隐私与创新高度相关，如果一个人处于高度透明的世界，那么一切都是可以通过算法去模拟未来的，当一切都处于这样一种算法控制一切的情况下，整个社会其实已经没有多少进步的动力了。\",\"但目前而言，我们最终失去了自由的互联网。\"]},\"534\":{\"h\":\"未来互联网\",\"t\":[\"尼采有一句话很有意思：杀不死我的会是我更强大。《黑暗骑士》里的小丑也重复过。无独有偶《反脆弱》里也有一句话：杀不死我的，会杀死其他人。顺便提一句，《反脆弱》是一本很严肃的书籍，里面有许多人生哲理。\",\"尽管政府，企业这些新秀已经尽了自己最大的努力，但旧世界的互联网并未完全消失，甚至有卷土重来的迹象。它们所作的仍然是探索，仍然是创新，仍然是好奇等等，这个旧世界回来其实指示了上一个问题的答案，政府和企业根本没有能力彻底消灭自由互联网。他们所做的不是去打压，而是假装它们不存在。这也正是它们所作的，你不会在微信，知乎等平台上看到它们，一个人如果要进入传统互联网必须主动去寻找，在传统互联网上仍然可以畅所欲言，不受任何监管。\",\"企业、政府尽管控制着主流的互联网，但其实正是因为它们，传统互联网也慢慢地在回来，而且比以前更好地回来，现在它拥有比以前更好的技术和前所未有的明确目的。\",\"曾经的传统互联网只是一小撮极客分子的尝试，那是好奇心趋势的自然对新生事物的尝试、探索、创新，但卷土重来的传统互联网有着明确的目的：拿到属于自己的权力。\",\"越来越多的人对当下企业控制的互联网感到反感，而那些创造了旧互联网网站的人也正在行动，越来越多的人通过建立自己的平台去绕过监管，在那里他们的声音前所未有的洪亮。这似乎也是一种远离主流互联网的一种方式。\",\"有一些人已经将个人网站成为独立网络、小型互联网，Gemini Network网络规模去年几乎翻了两倍，但几乎没人注意到这一切都曾是旧时代互联网的一部分，是由个人去经营的网站。当下，人们用Web3.0去指代去中心化的区块链网络，没有考虑到个人网站其实本身就是去中心化的网络。\",\"个人在互联网上发表意见和对权力的争取其实是沉默的斗争。这些索取数据的企业背后站着的其实是主权政府，这些政府正在索要更多的数据。企业和大型社交媒体正在用他们所有的手段包括满足原始杏仁核的上瘾算法，让用户停留在围栏内，这些企业也可能在默默查看你相册里的内容，或者默认监听用户的聊天内容，或者干脆默认开启摄像头去直白侵犯隐私。他们的广告却铺天盖地，并且告诉用户，非公司网站和其他网络充满着黑客，木马病毒，色情等来阻止用户探索围墙之外的更大的互联网，所有的一切都在欺瞒着用户。但他们没有想到的是反脆弱，人是有逆反情绪的，特别是发现自己在被欺骗之后，于是这些发现自己被欺骗的人，其实更有理由去更大的互联网世界去探索，这也是2022年的今天，也是Web3.0时代迅速发展时代。\",\"在与垄断互联网的斗争中，所有迹象表明，这场斗争可能会持续很多年，但人们对时代的发展总会有莫名的兴奋感，似乎觉得未来就在眼前，其实这是幻觉，一切都发生在潜移默化的过程中，这场斗争可能会有5-10年？现在来看还是一个巨大的未知数。因为这似乎是人为了人最基本的权力所作出的斗争，而历史上这样的斗争都旷日持久，直到人们意识到自己的权力不容侵犯。\",\"传统互联网与Web3.0有一点核心不同，Web3.0已经有了经济模型的基础即去中心化的金融体系，这好像是一个巨大的不同。在过去的十多年里，比特币作为社会性实验一直以反脆弱的形势不断获得大众的认可，到今天很多人都不以为这是实验了，这是资产数字化的发生的事实，如果你对这一切还有辩解，那不妨站在下一代的视角考虑问题。\",\"现在的05后，10后面对未来的世界时还会认为黄金是等价物吗？他们从小面对的是数字的屏幕，从小就面对着不断贬值的主权货币，从小就是数字化的忠实用户，他们还会对实体经济有什么天马行空想法吗？\",\"所以2022年的今天，已经没有人怀疑比特币的价值了，他们的问题是比特币的价值究竟有多少？这里面有一个角度就是，不相信数字资产的人可以转变为相信数字资产的人，但一个人如果选择相信数字资产，那么他无论如何都不会退化为前者了。\",\"到了今天Web3.0拥有的加密货币的数字资产模型已经显现，这里面最关键的经济模型似乎是与垄断互联网对抗的关键。垄断互联网控制着人们使用货币最基本的方法，即花掉主权法币人民币或美元，但Web3.0却是以加密货币为经济基础。\",\"从这样的角度看待问题，未来的互联网似乎更可能两极化，拥有数字资产的Web3.0用户与使用主权货币的垄断互联网用户，前者是不可能转变为后者的，后者却有机会转变为前者，这似乎是Web3.0可能取胜的关键。\",\"站在2022年的今天去看，这一切似乎正在发生，但也正发生在其他国家，我在中文世界里没有看不到这些变化，国外有关Web3.0开发者的社区已如雨后春笋般浮现，但当下我们国家的人却仍在不断进入垄断互联网企业。或许我们可能又回到过去贫穷落后的状态？\",\"但有一点是值得思考的，那就是全球化是一直是趋势，即使近年来逆全球化进程不断发展，但全球一体化依然是趋势，这样的趋势不可抵挡。当下国外发生的有关Web3.0的一切如果是未来的话，那我们国家也早晚会加入这一历史进程，这一切都会慢慢发生。\",\"关于Web3.0会以怎样的形式演变，其实只需要一句话总结：发展是硬道理。中心化与去中心化的对抗也是一场旷日持久的斗争，需要每个个体去去思考未来。\",\"参考链接：\",\"https://jhuo.ca/post/internet_free_privacy/\",\"http://techrights.org/2022/01/13/gemini-capsules-almost-2000/\",\"https://reclaimthenet.org/china-proposes-a-new-internet-protocol/\",\"https://jhuo.ca/post/the_old_internet_is_end/\",\"https://jhuo.ca/post/facebook_privacy/\"]},\"535\":{\"c\":[\"thinking\"]},\"536\":{\"c\":[\"network\",\"blockchain\",\"thinging\"]},\"537\":{\"h\":\"你所做的比线性代数更有价值\",\"t\":[\"This morning, as usual, the entire linear algebra class is used by me for reading Taleb's books THE BLACK SWAN. But, one little thing is different from before. When 2 hours later, course is coming to an end. My linear algebra teacher liu ,he accidentally walked to my side, ask me : Why don't you play games like them?Really like reading? He watched the title of my book, and keep asking me what have you learnt from this book?\",\"I thought for a while and spoke slowly, the black swan refers to the unpredictable major events, Unpredictable refer the reason for this incident is always summed up after the fact, and here is the problem. The black swan is always impossible to predict. Later, I gave a lot of interesting examples, some in this book, some in real world. And yesterday I read the whole skin in the game which is the other book published with Taleb. Thanks Taleb. I persuaded the teacher. And then he say : \\\"What you do is more valuable than linear algebra\\\".\",\"Although the books of Taleb are very hard to understand. It requires extraordinary comprehension and strong reading ability. Even a few days before I finished buying the book, I didn’t have the courage to open the book.\",\"Courage is the only virtue that cannot be forged. -Taleb\",\"But if you can understand his methods. You will be moved to tears. Rare wise man in the world.\",\"This week, I have wasted at least 10 hours, my phone is broken, so I decide to buy a new phone for rest of my college time.Most of the time, I want to buy IPhone12 that price is 4999RMB in Pinduoduo. But I can't, because of I don't have enough cash.Although I am rich, but the most of my wealth is Cryptocurrency. In the next three months, BTC will be a new high, so I can't sell my btc to buy a phone.\",\"Yes, this is where I struggle, I don't have enough money, but I want to buy a good phone...In desperation, spent at least ten hours.\",\"In the end, at this night, I went out and repaired my old phone and it only cost me 10 dollars. Although I reconnected with the world, but who can make up for the ten hours I wasted?\",\"Ten hours,I can reread Taleb's book,or learn deep architecture.I am very regretful for the ten hours spent in anxiety and helplessness. Although this problem can be solved with money, a total of similar problems in the world that cannot be solved with money, choose.Choice anxiety.\",\"What I can do is to choose what meets my values as much as possible, instead of thinking about the problem with entanglement, thanks for reading.\"]},\"538\":{\"c\":[\"value\"]},\"539\":{\"c\":[\"secure\",\"value\"]},\"540\":{\"h\":\"保护自己\",\"t\":[\"My mother said to me: \\\"Don't show off, it will bring danger.\\\" On the other hand,xiaolai's book《The Road to Freedom of Wealth》,end , say that the best way is to grow alone.\",\"Since November last year, I have earned income from the cryptocurrency market. What I don’t belong to my age should be income. The rate of return is about 200%. I have countless times to share the idea of profitability, but I have curbed it.\",\"I have to contain it.\",\"Although showing my profitability on social media should help some people, in this anxious world.But the world is no longer saved. If you watch the news every day, you will see all kinds of tragedies every day. Politics, medical care, economics and so on...\",\"What I mean is that for now, the opposition is no longer adjustable. Nowadays, there is a popular term called \\\"neijuan\\\". You can call it \\\"Inside roll\\\". Why?\",\"The upper class dominates the channels of ascent, so there are only a few resources that make people only get in \\\"neijuan\\\".\",\"The World is very unstable.\",\"So showing the rate of return will not help some people, but will attract some people’s hatred, which sometimes endangers your personal safety, and even your family’s personal safety.\",\"A man who doesn’t spend time taking care of his family is not a real man\\n—— GodFather\"]},\"541\":{\"c\":[\"privacy\"]},\"542\":{\"c\":[\"secure\",\"privacy\"]},\"543\":{\"h\":\"你可以比其他人多活十年？\",\"t\":[\"Believe it or not, each of us has a chance to live ten years longer than everyone else. Realizing this, you seem to have a life cheating device. Compared with other people, you have won at the starting point.\",\"First of all, you have to accept a concept: each of us’s time is valuable. If you don't have this concept, then even if you have more than ten years, more than a hundred years than other people, it is just a silly living, turning yourself into a walking dead, worthless.\",\"To truly recognize the value of time, you have to know an important characteristic of time-irreversibility.\",\"If you do something, you cannot do another. If you choose to spend your time playing games, watching movies, and reading novels, you cannot spend your time reading, studying, or sitting and enjoying. Of course you can choose the parallel operation. For example, you can play games while listening to music; you can choose to exercise while listening to lessons. But as far as current research is concerned, parallel operations are more likely to be a way to shift your brain's attention in time.\",\"You can try to do something like this: raise your left arm, make a fist and then face yourself with the palm of your hand, try to rotate with your arm. Of course, this operation is not difficult for normal people. Now raise your right arm, with the same palm facing you, and do a rotation different from the direction of movement of your left arm. This is very difficult for anyone who has not been trained.\",\"So I may realize that any person you have encountered who can handle multiple things at the same time is what the computer field says is parallel operation. It is likely that his attention can be drifted at the same time. Concentrate instantly. For example, if you have music in your room, you can occasionally put down your pen to listen to the melody of the music while writing your homework, then put away your idea of ​​being a musician, and return to your homework.\",\"Time is like this, so and so can not be like that.\",\"There is a saying that the cells of the human body will be metabolized and replaced every three months. With the death of old cells, new cells are born gorgeously. Due to the difference in the time and interval of the metabolism of different cells, all cells in the body are replaced. It takes seven years, that is to say, physiologically, we are another person every seven years. You are you, but you are not you anymore.\",\"**This also explains why the value of time is very important to each of us. It is so important that the width and depth of time constitute your life. **\",\"I often re-read the things I have experienced in my life in my mind. The result is that doing so often gives me a new experience. After so many times, I have a new experience, and then I experience the joy of expanding the width of my life. .\",\"When I was in the second grade of elementary school, I learned a text \\\"A race against time\\\". There are some words in this book that were not important when I first saw them. After so many years, I have some new experiences. .\",\"-Everything in all time will never come back. Your yesterday has passed, it will always become yesterday, and you can never go back to yesterday. -One day when I came home from school, I saw that the sun was about to set, so I made up my mind and said: \\\"I will go home faster than the sun.\\\" I rushed back, and when I was standing in the courtyard panting, I saw that the sun was still out. Half of my face, I jumped up happily. I outperformed the sun that day. In the future, I would often do such games, sometimes racing against the sun, sometimes against the northwest wind, and sometimes a summer homework, I finished it in ten days. At that time, I used to do my brother's 5th grade homework in the third grade.\",\"This is also a necessary stage for the person in the song to go through if you don't know the meaning of the song when you first hear it.\",\"Note: This is not the addictive behavior of secreting dopamine, it may be more similar to the pleasure brought by amine polyphenols. Can bring calmness and comfort.\",\"The width of life can be broadened, and the depth can be self-discovered. I'm slowly trying the subject of depth, so I don't make much judgment. Of course, this is not something that can be written in just one or two articles, so I will only discuss how to broaden the width of life.\",\"Li Xiao said that if we calculate the average life span of each of us as 78 years,\",\"-The total sleeping time is about 28.3 years; -Work occupies 10.5 years of our lives; -9 years spent on various social media; -The time spent on housework is 6 years; -The time spent on eating and drinking is 4 years; -The time spent in real education is really not long, only 3.5 years; -3 years spent on makeup; -The time spent on shopping is 2.5 years; -1.5 years spent caring for children; -1.3 years spent on the road;\",\"……\",\"img\",\"Counting this way, the time at our disposal is only 9 years left...\",\"In this era, each of us has more or less time as shown in the above picture, with only 9 years of self-control. Think about your every day. 9 years, which corresponds to 78 years of your life, is about 11%.\",\"Is your day like the picture above? Sleeping for most of the time, working and studying for most of the time, some socializing, doing housework... Then what can be done to make you live ten years longer than others?\",\"I thought about this problem seriously, so I started to count the number of national statutory holidays in 2021. I was surprised to find that statutory holidays account for about one-third of the total time of a year...\",\"11+11+8+8+12+9+9+9+8+14+8+8=115\",\"So you probably understand that if you work hard and you work hard enough, you can concentrate about one-third of the time each year to do what you want to do. In the long river of time, one day you will Ten years longer than others to do something you want to do.\",\"-You can learn musical instruments, play the guitar, try to learn music theory, and think that the songs on the market are a bit old-fashioned, you can try to make some otherworldly songs; you can also be a cover singer and study something A pop singer’s creative habits and beats make him a cover queen. -You can learn programming and try to make an application you like. You think that many somatosensory interactive websites on the market are not in your eyes. You can try to do what you like, but no one has done it yet Things that have been there. -You can be a chef and try to cook some dark dishes. Maybe you will discover something new? Maybe you became the first person to eat crabs?\",\"Former US President Carter said: \\\"Ordinary leaders take people where they want to go. Great leaders take people where they don't necessarily want to go, but should go.\\\"\",\"You can be the leader of your time and start slowly with ordinary leaders. To a certain extent, the unpredictability of the future often makes us wonder what kind of person we will become.\",\"And who we are in the future depends on how we are now the leaders of our time.\",\"Rebirth\"]},\"544\":{\"c\":[\"time\"]},\"545\":{\"c\":[\"time\"]},\"546\":{\"h\":\"我离开微信的三天\"},\"547\":{\"h\":\"English version\",\"t\":[\"I changed my phone three days ago and saw a few friends in the Mixin group chatting about the privacy issues of WeChat and the data monopoly of large companies. I have been thinking about this issue. Obviously, the backend of WeChat can monitor everyone's chat data, whether it is a transfer function or a normal chat. So how serious is this problem? I think there may be the following:\",\"Violation of human rights\",\"Annihilation of innovation\",\"Let me talk about the first point of human rights. In Wikipedia, natural human rights refer to inalienable rights, which are universally inherent powers of creatures in nature. What does that mean?\",\"That is, a person is born with a mouth, which means that he is free to eat and talk with his mouth. But the current society is self-evident. There are some things that can’t be said, even if the correct opinion is accused of unnecessarily, it is hard to escape the blame.\",\"So let’s talk about the second point, annihilating innovation. The privacy problem actually rises to a certain extent and it becomes the overall problem of society. But how does this social problem involve innovation?\",\"You might as well imagine this. When you turn on your phone and open the green WeChat, you want to see the current life of your friends in your Moments, but there are countless advertisements when you flip through it, but by coincidence, these advertisements happen to be there. The things you want, these things you can block once or twice, and you can ignore them once or twice, but every time you feel violated.\",\"Of course, as an adult, you may ignore these annoying advertisements, but the question is, can the younger generation escape?\",\"A person has been living in such an environment when he was a teenager, so data can only guide his values, because I live in the virtual world of the Internet every day almost more than in the real world . In addition, teenagers do not have complete thinking skills. I still remember that when I was in my second grade, I could use my mobile phone to log in to Taobao and use the operation of refreshing products every day.....so\",\"**Maybe everyone think about it, what determines that some people have reached the top of the pyramid, and some people can only live a life beyond making ends meet with a salary day after day. **\",\"The answer to this question is really that 99% of successful people are diligent and 1% of genius?\",\"Even in the best schools, most people still live their lives in mediocrity.\",\"My thinking is that in this era, computers can replace most of human work, and as time grows, this proportion will increase. Computers can read past data. From this point of view, whether it is mental work or a craftsman, it is not as sophisticated as a machine. So what is the remaining value that makes people human?\",\"**Those unknown secrets, the roads you have traveled, the people you have met, and the things you have experienced constitute a person's core value in this era. **\",\"People who value privacy are more likely to have independent thinking skills.\",\"But most people will not think about this anymore. When privacy is uploaded, it means that creativity and reflection are deprived in the data age. Of course, the most important thing is that if you pay attention to privacy protection for a long time, then you are most likely to have independent thinking ability to reflect on whether these things are right or wrong now? Is it a long-term or a bubble?\",\"So here comes the problem. Although I use WeChat for less than half an hour a day, its user base is too large, as large as in China. You don’t need WeChat, you can’t even go out because you need a health code.\",\"There are also some passive reasons. Because everyone around us uses WeChat, there is another reason why we have to use it: **It's not that you can't use **.\",\"Later, Dong Ge's words in the group awakened the dreamer:\",\"Do not always think selfishly about what you are doing. The efforts of a few people protect others. Most people just want to see the inconvenience when doing things, without considering the long-term consequences. But the progress of mankind, and even the protection of basic human rights, always requires someone to think about the appropriateness of things. Many people don’t realize that if you lose your privacy, you lose freedom. Without freedom, you are a slave. The progress of society is reflected in the change in the ideology of slaves, but the constant is that if you don’t fight, it’s possible. Become a slave. There are always excuses. For example, they are not unusable. When future generations begin to be enslaved and controlled by these big companies, I hope that this process does not have your contribution \",\"Ever since, I started my escape from WeChat.\",\"First reflect on my environment and background: sophomore, um...no, there is still a member of a family.\",\"Things to consider:\",\"Means of payment\",\"Chat software\",\"First of all, the payment method. In fact, you can choose Alipay for this matter, but when I choose to delete WeChat, I also choose to delete Alipay. Although Tencent is not a good fruit, Alibaba is not much better (of course, you can't blame them, this problem May wish to discuss it here). So I found the cloud flash payment software, the payment method can still survive on campus-------\",\"Chat software, this can actually choose a freshman university, but QQ cannot be uninstalled, because the notifications in the school are notified through QQ. Fill out a form and ask for a leave. You must use QQ. This is a problem that cannot be solved. .....\",\"So far, the most critical issue has been resolved. Of course, the most critical issue is how my family can contact me. Next time I go home, I may need to teach them how to use the freshman university software, or directly build one in Quorum. Groups, but for the time being, when talking with mother, you can only choose manual call.\",\"Delete...\"]},\"548\":{\"h\":\"Results after leaving\",\"t\":[\"Things are simpler than I thought, but just press and hold the APP, and then click Uninstall and it's over. So within a few days, I picked up the phone and remembered that there was no WeChat in the phone. What's so interesting? So save a lot of time to do more meaningful things. For example, it took five hours to re-read \\\"Silly Decameron\\\" and \\\"Shanghai Jiaotong University Survival Manual\\\". Technical books include most of the contents of \\\"MySQL Must Know and Know\\\" and \\\"Go Programming Practice\\\", which is more every day. A lot of time to write code.\",\"Although I have been studying in the library and writing code almost every day during the year of college, my feelings are always different these days. Perhaps I declare to the world in my heart: I am not a slave, I have to struggle.\",\"Many people in the system have to read about the youth study about patriotism and love for the party. For school students, it is the \\\"Youth Study\\\", which must be handed in every week, whether it is at school or on vacation, which is beyond my understanding. ** After all, this is not North Korea.\",\"If the people behind it have read \\\"Anti-fragility\\\", they will know the anti-fragility of information. Those who can't kill me will make me stronger. But I am still patriotic, I still have someone I love, and the things I love live on the land, my ancestors for generations...\",\"The result is that I don’t need to watch \\\"Youth Learning\\\" because how can I watch it without WeChat? Am I right?\"]},\"549\":{\"h\":\"But in the end I returned to WeChat\",\"t\":[\"Although it is not a necessary option, I still have to return to WeChat, because almost everyone is using WeChat and people are social creatures.\",\"You still have to pay for the Youth University Study. Although you haven't done it for a few days, someone is always urging you-it's not unavailable.\",\"I saw a girl on campus and wanted a contact information, almost only through WeChat\",\"If I want to go out of school and go shopping in the mall, it seems that the health code can only be used on WeChat\",\"Geek time, the courses that are subscribed inside, seem to be WeChat\",\"WeChat has become the entire Internet...\",\"Forced to return\",\"I hope it will last more than three days next time\"]},\"550\":{\"h\":\"A few suggestions for friends who want to leave the WeChat circle\",\"t\":[\"Means of payment\",\"Social issues\",\"Passive issues\",\"......\",\"Each of these problems is different for everyone, and because I am only a student, my solution is also different from that of many people. Everyone needs their own way of solving this problem, and this matter can almost only be solved by oneself.\",\"No way, who makes us not want to be slaves?\",\"Who are we?\"]},\"551\":{\"h\":\"Chinese version\",\"t\":[\"三天前换了新手机，看到Mixin群里有几位朋友聊天，聊到了微信的隐私问题和大企业的数据垄断问题。我其实也一直在想这个问题，很明显微信的后台是可以监视每个人的聊天数据，不论是转账功能，还是普通的聊天，那么这件事情的问题有多么严重呢？我想可能有以下几点：\",\"践踏人权\",\"湮灭创新\",\"先说说第一点人权，天赋人权在维基百科上指不可剥夺的权利，是自然界生物普遍固有的权力。什么意思呢？\",\"即一个人生出来就有嘴，就意味着他是可以自由用嘴去吃饭，用嘴去说话的。但当下的社会却不言而喻了。有些话是不能说的，即使是正确的意见被冠上莫须有的罪名，也是难逃其咎的。\",\"那么说说第二点，湮灭创新，隐私问题其实上升到一定程度上就到了社会的整体问题，但这个社会问题又怎样涉及到创新呢？\",\"不妨这样假象一下，当你打开手机，打开绿色的微信，想看一看朋友圈里朋友的生活近况，但翻着翻着就有了无数的广告，但好巧不巧，这些广告就正好有你想要的东西，这些东西你可以屏蔽一次两次，可以置之不理一次两次，但每次都感觉收到了侵犯。\",\"当然作为成年人，你可能会忽略掉这些烦人的广告，但问题就在于年轻的下一代能逃过去吗？\",\"一个人在十几岁时就一直生活在这样的环境氛围中，那么引导他价值观的就只能是数据了，因为每天活在网络虚拟世界里的时间几乎比现实世界里更多。而又，十几岁的人其实是不具备完整的思考能力的，我还记得我初二时，可以用手机登录淘宝时，每天日度一日地刷商品这样的操作.....所以\",\"不妨大家想一想，究竟是什么决定了有的人走到了金字塔的顶端，有的人只能日复一日领着薪水过着入不敷出的生活。\",\"这个问题的答案真的是成功的人有百分之九十九的勤奋，和百分之一的天才？\",\"即使是在最好的学校里，仍然有绝大部分人庸庸碌碌过完一生。\",\"我的思考是，在这个时代里，计算机能替代人的绝大部分人类的工作，而且随着时间的增长，这个比例会越来越大。计算机可以读取以往数据，以此来看，不论是脑力工作，还是手工匠人，都不及机器来的精巧。那么人之所以为人所剩下的价值究竟是什么呢？\",\"那些不为人知的秘密，曾经走过的路，遇到的人，经历过的事构成了一个人在这个时代里最核心的价值。\",\"注重隐私的人，更有有可能具备独立思考能力。\",\"但绝大部分人不会去思考这些了，隐私被上传，就意味着在数据时代被剥夺了创造性和反思能力。当然最关键的是，如果你长期注重于隐私保护，那么你就极有可能拥有独立思考能力，去反思这些事情放到现在而言究竟是对还是错？究竟是长期还是泡沫？\",\"那么问题来了，虽然我每天使用微信的时间不及半个小时，但它的用户基础太过于庞大，庞大到在中国。你不用微信，你连出门都出不得——因为要健康码。\",\"还有一些被动原因，因为身边所有人都用微信，所以不得不使用的原因还有一个就是：又不是不能用。\",\"后来东哥在群里的几句话，点醒了梦中人啊：\",\"做事情不要总自私的想自己怎样怎么样，少数人的努力保护了其他人。 大部分人做事时只想看方不方便，不考虑长期后果。但人类的进步，甚至人类基本权利的保障，总需要有人做事情时想想合不合适。 很多人没有意识到，你失去了隐私，就失去了自由，没有自由就是奴隶，社会的进步就体现在，奴隶的意识形态也发生了变化，但不变的地方是如果你不抗争，就可能变成奴隶。 借口总是有的 比如 又不是不能用 当子孙后代开始被这些大公司奴役控制的时候，希望这个过程没有你们的贡献 \",\"于是乎，我就开启了我的逃离微信之旅。\",\"首先反省自己所处的环境，背景：大二学生，嗯......没有了，还有就是一个家庭中的一份子。\",\"需要考虑的事情：\",\"支付手段\",\"聊天软件\",\"首先支付手段，这件事情其实可以选用支付宝，但选择删除微信的同时，我也选择了删除支付宝，虽然腾讯不是什么好果子，但阿里巴巴也好不到哪里去（当然也不能怪它们，这个问题就不妨在这里讨论了）。于是找到了云闪付这个软件，支付手段在校园内还是可以存活下去的-------\",\"聊天软件，这个其实可以选择新生大学，但QQ没办法卸载，因为学校里面通知的事情都是通过QQ来通知的，填个表格，请个假都要用QQ,这个是没办法解决的问题......\",\"至此已经解决了最关键的问题，当然还有最关键的问题是，我的家人如何联系到我，下次回家时可能需要手把手教他们怎么用新生大学这个软件，或者直接在Quorum里建一个群组，但目前而言，和母亲通话，就只能选择手动电话了。\",\"Delete......\"]},\"552\":{\"h\":\"离开后的结果\",\"t\":[\"事情比我想象的简单，不过就是长按APP，然后点击Uninstall就结束了。于是在几天内，拿起手机，想起来手机里都没有微信了，有什么好看的呢？于是省出来很多时间去做更有意义的事情。比如用五个小时重新读了一遍《太傻十日谈》和《上海交通大学生存手册》，技术类书籍有《MySQL必知必会》《Go编程实战》的绝大部分内容，每天多了不少时间去写代码。\",\"虽然上大学的一年里，几乎每天都在图书馆读书，写代码，但这几天的感觉总是不一样，或许在心底里向世界宣告：我不是奴隶，我要挣扎。\",\"很多体制内的人都得看关于爱国爱党的青年学习，针对在校生就是《青年大学习》了，每周都要交，不论是在校，还是放假，这也是我无法理解的，毕竟这里不是朝鲜。\",\"如果背后的人读过《反脆弱》的话，一定就会知道信息的反脆弱性，杀不死我的会让我更强大。但我仍然爱国，我仍然有爱的人，爱的物生存在土地上，我的祖祖辈辈.....不深说了\",\"结果就是《青年大学习》不用我看了，因为没有微信怎么看呢？你说是吧？\"]},\"553\":{\"h\":\"但最终我还是回归了微信\",\"t\":[\"虽然不是必选项，但我还是得回归微信，因为几乎所有人都在使用微信，人是社交化生物。\",\"青年大学习还是得交，虽然有几天没有交，但总是有人在催促你——又不是不能用。\",\"看到了个校园内的女孩，想要个联系方式，几乎只能通过微信\",\"想出校门去商城逛一圈，健康码好像也只能用微信\",\"极客时间、得到内订阅的课程，好像也是微信\",\"微信已然成为了整个互联网......\",\"被迫回归\",\"下一次希望不止三天\"]},\"554\":{\"h\":\"给想离开微信圈朋友的几条建议\",\"t\":[\"支付手段\",\"社交问题\",\"被动问题\",\"......\",\"这些问题每个人的问题都不同，又由于我只是个学生，所以我的解决方案也与很多人不同，每个人都需要自己的解决方式，这件事也几乎只能通过自己来解决\",\"没办法，谁让咱不想成为奴隶呢？\",\"咱是谁啊？\"]},\"555\":{\"c\":[\"privacy\"]},\"556\":{\"c\":[\"privacy\",\"wechat\"]},\"557\":{\"h\":\"对开发保持耐心、对一切保持耐心\",\"t\":[\"I lost my time book which recorded all my time spent in this year. But at this moment,I feel quiet. Although my time book lost, I got the most valuable stuff which is the perception of time.Time is fair to everyon. You can play games a whole year,or you can learn knowledge for several months.Now I choose the later.\",\"Only three months left this year, in the past nine months, I spent most of my time in the library, enjoy the pleasure that books bring me. I love programming, which give me a feeling that I can make things.For example, I'm developing a vscode extension which will display most of cryptocurrency price now. Although I have encountered many difficulties in the past few days. But my progress is very obvious. Now it's time to go dormitory to rest.But my programming abilityis improving, that is, the ablity to solve real-world problems.\",\"Information is not knowledge.\",\"Today I publish my first charged article in PRSDigg-A explain for Mixin White Paper.I believe the Mixin's value. My action for that is hold my XIN token.\",\"I recently released my first mixin robot,MixinID 7000103911 which is a pure-music for rest.\",\"Enjoy!\",\"Today will end. Tomorrow will start.\",\"LLAP for me,LLAP for you.\"]},\"558\":{\"c\":[\"develop\"]},\"559\":{\"c\":[\"develop\"]},\"560\":{\"h\":\"长期主义\",\"t\":[\"This morning, I ran a kilometer and used 4 minutes. Okay, so did the results a year ago. But the important thing I want to say is FOR THE LONG RUN. In the past year, I often started running at 6 o'clock in the morning, and occasionally took a walk. The fresh air in the morning always made me happy. My school playground always great, yes, at least now.\",\"Usually,this time is all Chinese college students to exercise, So did I.When I finished the challenge, its feel was amazing. Accompanied by severe physical pain, my respiratory tract was very painful. The cold air ravaged my body. But I still recovered very quickly, and had breakfast. The coffee after breakfast gave me a little comfort and made me feel that the world is still very beautiful.\",\"-----------I am a dividing line------------ Haha,it is now three days later, 2021.10.18.\",\"Today I wrote a whole day of code. I was lazy two days ago which my RedmiK30 phone was broken, and I decided to change to a better phone such as IPHONE at 11.11.2021 Singles Day.\",\"Saving money on tools is destined to be a dick ——Seven years is a lifetime\",\"Happy for you.\"]},\"561\":{\"c\":[\"run\"]},\"562\":{\"c\":[\"run\",\"long_termism\"]},\"563\":{\"h\":\"互联网的未来\",\"t\":[\"Well know, electronic identities have become popular in recently years,which make our personal information public in internet. Worse,internet company collect our personal privacy information sell to information vendors to make money,which make us become transparent in the world.\",\"These days now, every morning, I have to hang up Ads's call from my phone,with they alway recommended to me some meaningless things,as house,cars,loan...But I have told them many times that I don't need these.Oh shit,they persevere.I thought,if they have this feature apply to other places,which could make them success.😦\",\"One day,my Zhihu personal communication receive me a message to the effect that the masses of people need apps that can chat normally without ads and information collection. Yes,I spot this.Our current needs are the future of security and privacy.\",\"Human revolutionize successfully and totally from bottom to high only when their basic living conditions are destroyed and their lives are threatened seriously.At most time,people fix things,they fix things for higher profit and stronger monopoly.\",\"Only when our own tangible interests are harmed can we be unilted.\",\"When I was taking a marketing course, my teacher told me that in past few yeaes, the advertising time has become so lang that members who do not not recharge can not watch the video.\",\"I very much agree.\",\"Although,I have not the habit of watching movies and TV shows. But when I want watch TV,I have to waiting a mintue-long shit ad.Very poor user experience.\",\"Another thing I meet in recent is that I want to resgiter a public account to use foreign product, when I got the SMS code, the pervasive advertising send me a waring.\",\"I did nothing, I got a waring.How nosense.\",\"After this incident, the most fearful place is that my phone has been monitored. Actually,I am a person who abide by the law,don't need to be nonitored,but they do. Wait a moment. They? Who? Policymakers.\",\"I want to buy a coffee that can make me pleasure. But the first thing when the idea appear in my brain is pick up my phone that can help me to order a coffee from wechat,Meituan,Eleme and so on.So I give up , I want to go downstairs to continue my journey, but my way is halfway , I think I have to open my transaction code to submit orders. This journey is back to beginning. When I submit my orders I reveal my IP address and my personal information that included my ID , phone number, even my height weight and health information and so on.\",\"I want to logout my taobao account since all my express delivery from business to cainiao a App recorded everyone's safe and private information. Surprisely, I found I have delivery on the way. I must wait for all the stuff on my hand. But I find the most funny thing that I have to buy the new things to enrich my life , it is so funny that I can't solve this problem. Even though I know all my information will be collect to enterprise database. But I can not leave it.\",\"The three most harmful addictions are heroin, carbohydrates, and a monthly salary. ― Nassim Nicholas Taleb\",\"I very much agree.But one thing should be add noew, I think that is device.It make us become stupid. Artificial intelligence is learning, humans are addicted to entertainment. That's right.\",\"Where are our furture?\",\"Please give me your opinion.\"]},\"564\":{\"c\":[\"develop\"]},\"565\":{\"c\":[\"internet\",\"future\"]},\"566\":{\"h\":\"过去十天的传奇经历\",\"t\":[\"我相信有每个人的一生中总有一些时间点,时间段有特殊意义,但若不记录下来就总会随着时间流逝,直到十年后被他人问起只能说出一句---就那么回事. 其实不是这样的,造成这么回事的不是事件,而是时间.如果这个事件是值得记录的,那就应当记录下来而不是到头来换得一句这么回事.\",\"我尝试从时间角度从始至终全方面说一说这个封校到全面开放的全经过.\",\"初始 - 2022-11-28 起初没人觉得这是\"]},\"567\":{\"c\":[\"thinking\"]},\"568\":{\"c\":[\"thinking\"]},\"569\":{\"h\":\"如何选择真正适合你的职业？\",\"t\":[\"本文翻译自 https://waitbutwhy.com/2018/04/picking-career.html\",\"由ChatGPT3.5+DeepL翻译，waitbutwhy网站上有许多值得推荐的文章，还有另一篇文章我特别喜欢https://waitbutwhy.com/2015/01/artificial-intelligence-revolution-1.html.\",\"中文翻译:https://zhuanlan.zhihu.com/p/33780456\",\"April 11, 2018 By Tim Urban\",\"如何选择真正适合你的职业？\",\"读者朋友们好 在我们开始之前，先做个简单的说明：\",\"这是一篇关于我一直想写的东西的文章：职业。社会告诉了我们很多关于我们应该追求的职业以及职业的可能性--这很奇怪，因为我很确定社会对这些知之甚少。说到职业，社会就像你的大伯，他在节假日把你困住，然后开始长达 15 分钟语无伦次的建议独白，而你几乎从头到尾都听不进去，因为很明显他根本不知道自己在说什么，而且他说的每一句话都已经过时 45 年了。社会就像那个大叔，传统智慧就像他的咆哮。只不过，在这种情况下，我们并没有置之不理，而是全神贯注地聆听他的每一句话，然后根据他说的话做出重大的职业决定。我们这样做有点奇怪。\",\"其实，这篇文章并不是我在给你提供职业建议--这只是一个框架，我认为它可以帮助你做出职业决定，从而真正反映出你是谁，你想要什么，以及我们今天瞬息万变的职业环境是什么样的。你不是这方面的专家，但你肯定比我们这个缺乏自我意识的大叔更有资格找出最适合你的职业。对于那些还没有开始职业生涯、不确定自己这辈子要做什么的人，或者那些目前正处于职业生涯中期、不确定自己是否走在正确道路上的人，我希望这篇文章能帮助你们按下思维过程的重启键，并获得一些清晰的认识。\",\"最后，写这篇文章的感觉非常好。已经太久太久了。过去的一年对我和所有喜欢《Wait But Why》的人来说都是相当令人沮丧的一年--我积累了很多想法，却没有在博客上发布这些令人满意的想法（我去年的大部分时间都在写另一篇更长的文章）。我希望 WBW 的 \\\"黑暗时代 \\\"即将结束，因为我很怀念在这里的日子。一如既往地感谢那些慷慨大方、耐心十足的赞助人，是他们陪伴我们度过了这段缓慢的时期。\"]},\"570\":{\"h\":\"你迄今为止的人生道路\",\"t\":[\"对我们大多数人来说，童年就像一条河流，而我们就像蝌蚪。\",\"我们没有选择河流。我们只是突然醒来，发现自己走上了父母、社会和环境为我们设定的道路。我们被告知河流的规则、我们应该游泳的方式以及我们的目标。我们的工作不是思考自己的道路--而是根据为我们定义的成功方式，在我们被安排的道路上取得成功。\",\"对我们中的许多人来说--我想对大部分《等着看好戏》的读者来说--童年的河流汇入了一个名为大学的池塘。\",\"在池塘里，我们有了更多的喘息空间，也有了更多的余地去发展更具体的兴趣。我们开始思索，眺望池塘边--那里是现实世界的起点，也是我们度过余生的地方。这通常会让人百感交集。\",\"然后，在汹涌的河流中醒来 22 年后，我们被踢出池塘，被世界告知要去创造我们的生活。\",\"这里有几个问题。一是在那一刻，你既没有技能，也没有知识，还有很多其他的东西：\",\"但在你解决自己的普遍无用性之前，还有一个更大的问题--你预设的道路已经结束了。学校里的孩子就像公司里的员工，别人才是首席执行官。但在现实生活中，没有人是你人生的首席执行官，也没有人是你职业道路的首席执行官--除了你自己。而你一生都在做一名职业学生，没有任何担任首席执行官的经验。到目前为止，你只负责微观决策--\\\"作为一名学生，我怎样才能在工作中取得成功？\\\"而现在，你突然也掌握了宏观驾驶舱的钥匙，负责回答诸如 \\\"我是谁？\\\"、\\\"生命中重要的事情是什么？\\\"、\\\"我的道路有哪些选择，我应该选择哪一条，我甚至怎样才能确定一条道路？\\\"等压力重重的宏观问题。当我们最后一次离开学校时，我们已经习以为常的宏观指导突然从我们身边消失了，只剩下我们站在那里，握着各自的小弟弟，不知如何是好。\",\"然后，时间发生了。我们最终走上了一条道路。这条路就是我们一生的故事\",\"在生命的最后时刻，当我们回首往事时，我们可以从空中俯瞰我们的人生轨迹。\",\"科学家在研究临终的人对自己一生的感受时，通常会发现很多人都会感到非常遗憾。我认为这些遗憾很大程度上源于这样一个事实，即我们大多数人在童年时代并没有真正接受过关于路径规划的教育，而我们大多数人在成年后也并没有在路径规划方面取得多大进步，这让很多人在回顾自己的人生道路时发现，根据他们的身份和所处的世界，他们的人生道路其实并不合理。\",\"因此，这是一篇关于路径选择的文章。让我们在临终前暂停 30 分钟，低头看看我们正在走的路，再向前看看这条路似乎要去哪里，并确保它是有意义的。\"]},\"571\":{\"h\":\"重新审视厨师与主厨\",\"t\":[\"在过去,我写过有关“从第一原理推理”和“通过类比推理”—即所谓的“主厨”与“厨师”之间的关键区别。从写完那篇文章开始,我注意到这个区别无处不在,在自己的生活中也大概思考过这件事两百万次。\",\"主厨的推理方式类似于科学家。他们以核心事实和观察结果为基础,通过思考拼凑出结论,就像主厨玩弄原材料创造出新菜谱一样。通过这个过程,主厨最终能创造出新的食谱。另一种推理方式——通过类比推理,就是看别人已经完成的工作,然后照搬,或者做一些细微的个人改动,就像厨师按照已有食谱来烹饪一样。\",\"纯粹照搬已有食谱的厨师和完全独立创新的主厨,当然是一个光谱的两个极端。但我们生活中的每个决定环节,不论处在哪个位置,其本质上都可以分为主厨式或厨师式的推理模式。一个注重创新,一个重重复。\",\"主厨需要投入巨量时间和精力——因为他们不是在改进轮子,而是要从零开始创造轮子。通过不断尝试错误来求解问题,就像在黑暗中脱离束缚走到未知的森林一样,过程永远充满失败。相比之下,厨师工作简单直接得多,并不那么令人不快。大多数情况下,主厨思考模式是极其浪费时间的,因为生命中时间是极其宝贵的。\",\"而选择职业路径,则确实属于我们最深层次的重要决定之一:\",\"时间。对大多数人来说,职业生涯(包括通勤等等)将占用五万到十五万小时。一般人类寿命约为75万小时。扣除儿童时期(约17.5万小时)以及成年生活中的睡眠,进食,运动等日常(约32.5万小时),我们的“有意识成年时间”大约是25万小时。所以一个典型职业生涯将占据我们20-60%的重要成年时光——这绝不是可以草率决定的事情。\",\"生活质量 您的职业不仅影响您职业时间外的生活,也会深深影响非工作时光的质量。对我们这样非过去收入、婚姻或继承来源就已富裕的人来说,职业就是我们生存的来源。您职业的细节也常常决定您生活的地点、时间的灵活性、业余时间能做什么事,有时甚至影响您结婚对象的选择。\",\"影响力 除了职业占据您很多时间和支撑其他时间外,职业同时也是您主要创造影响的方式。每个人的生活都会以成千上万种方式影响他人,而他人再以相同方式影响更多人。我们无法实验,但我相信如果将80年前任何80岁老人的婴儿丢弃,回到当时,到现在会见证无数事物变化。每个人的生活都会产生深远影响,但影响的方向和类型很大程度取决于您的价值观和选择的方向。无论您的职业轨迹朝什么方向展开,都会带来影响。\",\"身份认同 在成长过程中,人们问我们未来想成为什么,就是问什么职业。成长后,我们介绍自己时,就是告诉别人我们的职业。我们不说“我从事律师工作”,而是“我是律师”。这可能不是健康的思考方式,但当前社会,个人的职业认同往往是形成主要身份的重要组成部分。这确实很重要。\",\"总之,您的职业选择不仅仅象购买的衣服一样简单。它关系的太深远了,必须用主厨思维认真考虑。\"]},\"572\":{\"h\":\"您的职业规划\",\"t\":[\"现在我们来谈谈您。我不了解您具体情况,但可以预计您可能处于以下几种状态中的一个:\",\"————这意味着您的职业道路还在前进中。\",\"无论是否已经开始职业生涯或处于中途,“职业规划”一直存在您头脑深处(或者正摆在头脑前面)的地图。\",\"我们可以根据地图持有者的特征将他们归为三类:\",\"一类人查看地图会视其为一个大大的让人焦虑的问号。\",\"这类人对于职业道路感觉很犹豫不定。别人告诉他们要追随热情,但他们没有明确的热情偏好。别人告诉他们要发挥优势,但他们不确定自己最擅长什么。他们过去可能有了解答,但随着时间变化,他们不再确定自己是谁,要去往何处。\",\"另一类人会看见地图上清晰指示着他们自信正确的方向——但事实上他们行动的方向却不尽相同。他们正承受人生最常见也最让人痛苦的状况之一:心知肚明选择了错误的职业道路但还在其中挣扎。\",\"第三类人就是幸运的一群。他们明确知道自己想去的方向,相信正朝着那个方向前进。\",\"但即使这些人,也应该停下来问自己:\\\"这指示箭头是谁画的?是否真的是由我自己决定的?\\\"答案不断变得混沌不清。\",\"我相信不论哪一类人,都应该抽时间反思自己的职业道路选型。\",\"相关信息\",\"好吧，但你为什么认为你能帮我解决职业问题？\",\"非常中肯的问题。我在挑选写作主题时总是问自己：\\\"我有资格写这个话题吗？以下是我决定写这个话题的原因：\",\"在过去的 20 年里，我大部分时间都在分析自己的职业道路。\",\"2）我的职业道路经历了很多转折--从 7 岁时想当电影明星到 17 岁时想当总统，从 22 岁时想写电影配乐到 24 岁时想当企业家，从 29 岁时想写音乐剧到最近想当一个作家。\",\"在我大半生的职业道路上，我一直都很迷茫，但现在我真的爱上了我的工作。这种情况随时都有可能发生变化，但能够把那些让我感到困惑或沮丧的决策过程，与那些让我感到更充实的决策过程并列起来看，就能让我明白人们往往会在哪些方面出错。\",\"除了我自己的故事之外，我还能看到我十几个最亲密的朋友的故事。我的朋友们似乎都和我一样，对职业道路非常痴迷，因此，在观察他们的职业道路并与他们反复讨论这些道路的过程中，我拓宽了对这个话题的看法，这有助于我区分哪些是我生活中特有的经验教训，哪些是更普遍的经验教训。\",\"5）最后，这并不是一篇关于哪些职业比其他职业更好或更差，或者哪些职业价值更有意义或更无意义的文章--有很多社会科学家和自助作家在这方面有很好的数据，而我并不是其中之一。相反，我认为这是一个框架，可以帮助职业道路反思者更好地看到自己的情况，以及什么对他们真正重要，清晰而诚实。这个框架对我来说非常有效，所以我认为它也可能对其他人有所帮助。\",\"现在，你已经重新审视了你的职业规划图，以及上面可能有或可能没有的箭头，把它放下，不要让人看到。我们会在文章的最后再来看它。现在是深入思考的时候了--让我们从头开始思考。从第一原则出发。\",\"您在厨师vs主厨一文中,设计了一个框架来描述主厨如何作出重大职业决定。其核心是一个简单的重叠图式。\",\"图式的第一部分是“想要”框,包含所有你认为吸引的职业。\",\"图式的第二部分是\\\"现实\\\"框。\\\"现实\\\"框包含所有从现实可能性来看你可能实现的职业—根据每个职业领域你的潜力水平与该领域实现成功的一般难易程度进行比对后得出。\",\"两框重合区域包含你最佳的职业选择—你在职业规划图上应考虑绘制的方向箭头集合。我们可以称它为“选择池”。\",\"框架本身看起来很简单明了。但准确填充这些框其实远比表面上难得多。为使图式发挥作用,它必须尽可能接近真实,为此我们必须揭开潜意识质的面纱,深入思考。我们从“想要”框开始。\"]},\"573\":{\"h\":\"深入分析第一部分:您的“想要”框\",\"t\":[\"“想要”框的难点在于,您想要很多不同的东西——或者更准确地说,您内心有许多不同面的需求,每个面都想要并担心不同的事情。而某些动机与其他动机存在冲突,定义上来说,您不能同时拥有所有的需求。采取其中一件需求往往意味着不去考虑其他需求,有时甚至直接与其他需求相悖。“想要”框需要权衡各种因素权衡取舍。\",\"需求章鱼\",\"要做一个完整的“想要”框审查,需要思考在职业生涯中各方面期盼什么,然后将其拆解得清清楚楚。很幸运,我们这里有一个助手可以帮助我们——需求章鱼。\",\"在我们每个人头脑里,都有一个属于我们自己的“需求章鱼”。每个人需求章鱼的细节不同,但从本质上来说,人与人没有区别很大。我预测我们许多人的需求与恐惧点都很相似(特别是鉴于大家阅读这篇文章的利基点都有很多共同点)。\",\"首先要认识到,需求章鱼的每个触须上都生活着一个完全不同的需求世界。这些需求世界之间经常会发生矛盾。\",\"事情变得更复杂了。每个触须上都包含许多不同的个别需求以及相应的恐惧——这些需求和恐惧之间也经常发生重大冲突。\",\"让我们从每个触须着手,仔细分析其中的情况。\",\"个人需求触须可能是这里最难下定义的一个 - 它取决于每个人的个性和价值视及。它承载着人类最复杂也最重要的需求-实现自我的需要。它不仅涵盖当前的我们,还包含许多过去的我们。7岁时的梦想,12岁时理想化的自我认同,17岁时的隐秘期望,以及当前你不断发展的情感,都附着在这个触须上,每个年龄段都在争夺自己的需求,如果失败都会让你感到很难受。此外,对死亡的恐惧也可能出现在这个触须,渴望自己留下名字和成就更大的事业。个人触须令成功人士总难以平心静气地选择海边享酒度日-它非常渴求满足。\",\"但个人触须往往是较易被忽略的一个。因为追求它往往令人觉得难以面对;因为它带来的恐惧不是立即的,而是随时间积聚;因为个人触须容易在职业早期被其他触须强烈的动物性情绪压下。此忽视可能导致后悔。许多看似成功但其实不快乐的人,可能正是因为个人需求触须未能实现所致—他们或许选择了错误的领域。\",\"社交需求触须可能是我们最原始的动物性趋势,来源于我们祖先部落时代的进化历史。在这个触须上,有几个古怪的生物。\",\"如我们之前在博客中讨论过的,我们脑海中都住着一个极度执着于他人目光的“社交生存猛象”。它渴求被接受和包容,也被喜欢,同时也惧怕尴尬、被批评和不被认同。它真的非常非常想成为内群,也非常不想成为外群。它相当可爱。\",\"然后是你的自尊心,是一个类似但更需要满足的角色。它不仅想被接受,更想被人钦佩、被人漠视――理想情况下,是大规模的。比被不喜欢更令它难以接受的是被忽视。它渴求被视为重要和广为人知。\",\"触须上还有其他小生物。例如有一个永远会因为认为别人评价不公而耿耿于怀的“小法官”,它认为人人都应该清楚它自认为多聪明多有才华。法官也善于记仇――这也是很多人最大动机就是想证明曾不相信自己的人是错的。\",\"最后,有些人触须上可能有一条忠实温顺的小狗,它最大的心愿就是取悦主人,最不能接受就是让他失望。唯一问题是,这个可爱生物的主人不是你,而是一个对你有巨大心理影响力的人,如果不小心,你可能会致力于取悦和让它自豪。(通常是父母。)\",\"生活方式触须主要就是想要周二过得愉快。但更具体地说,它想要一天充满惬意、轻松和享受—有足够的空闲时间,照顾自我,放松休闲,享受奢侈品。\",\"它也希望整体来看,人生能够取得最大幸福感。从生活方式触须看,你应该能在生活中随心所欲,按自己的节奏和喜好做自己喜欢的事,同心爱的人在一起。生活应充满乐趣与丰富体验,但同时也应该平稳顺畅,工作不需过劳,路上尽量少障碍。\",\"问题在于,即使把生活方式需求置于重要地位,也难全面满足。如渴望坐着放松的那部分,会阻止你努力打拼建立长期灵活的事业和足以享乐的财富;只在未来可预测时感到舒服的那一面,会拒绝可能带来长远自由的道路;渴望无忧生活的你,与具破坏欲望的你同在一触须,两者不太协调。\",\"道义需求触须认为,您内在其他触须都很自私自利。它看到这个需要大力改革的世界;看到无数同样值得幸福生活的人,仅因生存环境较差就没那么走运;也看到未来悬而未决,这个星球的命运可能抉择于乌托邦或反乌托邦之间――只要我们能摆脱自我,就有可能指向正面的未来。而其他触须都在设想如果有十亿资产后自己会怎么浪,道义触须设想如果有十亿资金能为社会带来什么影响。\",\"其他触须自然无法理解精神上的慈善――“他人与我无关,我何以浪费时间帮助他人”。但它们能理解为自己目的服务的慈善。道义触须与生活方式触相悖,但其他触须有时可能找到共同语言――社交触会因慈善获得某社群赞赏而乐于参与;个人触也可能通过此寻找意义满足。\",\"所以,当您慈善或利他行为时,内心会有几种不同想法。想要更好地获取公众赞誉的那部分在社交触,自我感觉良好的那部分在个人触,真正爱见受助者受益的那部分在道义触。同样,不为他人考虑也可能伤害几个触,让道义触感到内疚多愁善感,让社交触担心被评为自私,让个人触自尊心下降。\",\"您的实用需求触须认为,以上观点都很好――但它想提醒一下,现在是3月31日,明天房租交期,但检查了银行帐户,余额比房东要求的金额还少很多。它知道周四存了支票,明天该过账,但以前也曾经存了款一个月后结算失败。它也不能不注意,您 Social 触上周六请朋友吃饭消费了钱,生活方式触租了看起来很高级的公寓,而实际上每个月拮据;道义触投资2500美元在朋友开的面包店也没有结果;个人触同时在两份基层职位挥余无比,总收入不如之前伪装成埃及魅力女神兼职。\",\"实用触本质上就是希望确保您能吃饭、有衣穿、得到医疗、不流浪。它不关心手段,只想确保基本需求。但其他触都给它添很多麻烦――每次收入增长,生活标准就提高,实用触难为继;个人触各种需求又不一定赚钱;社交触说不能向亲友借钱,影响“形象”,个人触附和“我们比那好”。\",\"总之,您脑中有几只需求章鱼、每个触都有自己目标,往往相互冲突;同一个触内各需求也互相冲突;甚至一个需求内也有矛盾。\",\"当你渴望被尊重而努力时，你会意识到社会中某一部分人对你的职业给予了永恒的尊重，但其他人却对此不屑一顾，甚至表示蔑视。\",\"当你决定满足自己帮助他人的欲望时，你会发现那部分希望将自己的一生奉献于减轻人类最重大存在风险的一面对你有着明显的鄙视，而你更希望对当地社区产生切实的积极影响的一面则被那部分对今天数以百万计没有清洁水可用的人们感到冷漠和无情。\",\"所以，是的，你内心的渴望是复杂的。历史上没有任何一个人能满足他们内心所有的渴望，这就是为什么你永远无法完全满足。人类的渴望是一个选择、牺牲和妥协的游戏。\"]},\"574\":{\"h\":\"解剖欲望章鱼\",\"t\":[\"在这个基础上，让我们回到你的“欲望盒子”（Want Box）。当我们思考自己的职业目标、恐惧、希望和梦想时，我们的意识只是在接触到“渴望章鱼”的最终输出结果，通常是由它最强烈的声音组成的。只有通过深入挖掘我们的潜意识，我们才能看清楚实际情况。\",\"有趣的是，我们都有这种能力。潜意识中的东西就像房子的地下室里的物品一样。它对我们来说并不是禁区，只是在地下室里。我们随时可以去看看，只需：A）记得房子有个地下室，和B）真正花时间和精力去那里，尽管去那里可能不那么愉快。\",\"所以，让我们去大脑的地下室找到那个章鱼。除非你是那些擅长分析潜意识的人之一，否则地下室可能很暗，很难看清楚你的章鱼。开灯的方法是首先确定你的意识思维对于你的渴望和恐惧的了解，然后进行深入剖析。\",\"比如，如果有一条职业道路听起来对你很棒，那就仔细分析一下。章鱼中的哪些触角渴望这个职业，以及这些触角的具体哪些部分？\",\"如果你目前没有朝着你所渴望的职业发展，试着弄清楚为什么。如果你认为这是因为害怕失败，剖析一下这个想法。对失败的恐惧可能来自于章鱼的任何一根触角，所以这并不是一个具体的分析。你要找到恐惧的具体来源。是社交触角害怕尴尬或被别人认为不够聪明，或者担心在你的恋爱对象眼中显得不够成功？是个人触角害怕损害自我形象，或者确认心中困扰你的怀疑？是生活方式触角害怕降低生活水平，或者担心带来压力和不稳定性，而现在的生活却相对稳定？或许这种对生活水平下降的恐惧实际上并不来自于你的生活方式触角，而更多来自于你的社交触角，换句话说，你可能对公寓的变化本身并不在意，但非常关注生活方式下降对你的朋友和家人传递的信息？或者你目前有一些无法放弃的财务承诺，你的实际触角对于职业转变需要更长的时间才能成功或根本不成功感到真正的恐慌？或者其中几个因素结合在一起，导致你对跳槽的恐惧？\",\"也许你并不认为阻止你的是对失败的恐惧，而是其他原因。也许是对身份变化的恐惧，无论是内在的还是外在的，这种变化伴随着职业转变。也许是惯性的沉重负担——一种对改变的强烈抵抗，似乎存在于自身，并凌驾于你的其他渴望之上。在任何一种情况下，你都需要对这种感觉进行剖析，并问自己到底哪些触角对于身份转变感到反对，或者哪些触角受到惯性的驱使。\",\"也许你渴望致富。你幻想着每年赚120万美元，你感到强烈的驱动力想要实现这个目标。在特定的情况下，每根触角都可能出现对财富的渴望，每个触角都有其独特的原因。剖析一下。\",\"当你剖析对赚钱的内在驱动力时，也许你会发现，在其核心，这种驱动力更多是出于对安全感的渴望，而不仅仅是对巨额财富的追求。安全感的渴望最简单来说只是你实用触角做它本来的事情。但也许你真正想要的并不仅仅是基本的安全感，而是对应你的生活方式触角或社交触角所要求的一定水平的奢华的保证。或许你真正想要的是一种过度安全的程度，以至于不能再称之为安全感的渴望——相反，这可能是你的生活方式触角中的情感福祉部分为了减轻你一直以来感到的强迫性财务压力而产生的冲动，这种压力几乎不受你实际财务状况的影响。\",\"所有这些问题的答案都在你的渴望章鱼的各个触角上。通过提出这样的问题，深入挖掘并确定各种渴望的真正根源，你开始打开地下室的灯光，了解到你的章鱼的复杂性。\",\"你还将了解到在你的思维中哪些内在渴望似乎发出最响亮的声音，在你的决策过程中具有最大的影响力。很快，一个渴望的层次结构将开始显现。你将确定那些发言声音高亢并得到实现的渴望；那些大声哭泣但不断被章鱼的更高优先级部分挤开的渴望；那些似乎接受低地位在层次结构中的渴望。\"]},\"575\":{\"h\":\"寻找冒充者\",\"t\":[\"我们取得了良好的进展，但我们刚刚开始。一旦你对自己的渴望章鱼有了相对清晰的画面，你就可以开始真正的工作——这种工作发生在你的潜意识的更深层次，在地下室的地下室。在这里，你可以设立一个小型审讯室，逐一将每个渴望带入其中进行交叉审讯。\",\"你将首先问每个渴望：你是如何来到这里的，为什么你会成为现在的样子？欲望、信念、价值观和恐惧并非无中生有。它们要么是我们内在意识随着观察和生活经验的积累逐渐形成的，要么是外部的某人植入给我们的。换句话说，它们要么是你这位主厨创造的，要么是你这位厨师制造的。\",\"因此，你在这个令人毛骨悚然的审讯室里的目标是拽下每个渴望的面具，看看它是真正的你，还是别人伪装成你。\",\"你可以通过玩“为什么游戏”来拽下一个渴望的面具。你会提出最初的为什么——为什么我想要这个？——然后得到某种原因。然后你会继续追问。为什么这个具体的原因导致你想要你现在想要的东西？那个特定的原因在什么时候在你心中获得如此重要的地位？你会找到一个更深层次的原因在这个原因的背后。如果你继续下去，通常会发现以下三种情况之一：\",\"1）你会追溯这个为什么的起源，并揭示一个通过深入独立思考逐渐发展的真实演变链条。你会拽下它们的面具，确认这是真实的皮肤。\",\"2）你会追溯这个为什么的起源，发现它是别人植入给你的一个最初的原因——我猜我之所以有这个价值观，只是因为我妈妈有点强迫我——你意识到你从未真正考虑过是否独立地同意它。你从未停下来问自己，你自己积累的智慧是否真正证明了你对那个核心信念的坚定程度。在这种情况下，这个渴望被揭示为伪装成你真实渴望的冒名顶替者。你拽下它的面具，露出了面具下面的原始安装者。\",\"3）你会追溯这个为什么，追溯下去，陷入“我猜我知道这是真的！”的迷雾之中。这可能是真实的你的特点，或者只是第2种情况的另一种表现，即你无法回忆起这种感觉是何时被植入给你的。在你内心的某个地方，你会对其中哪种情况有一种直觉。\",\"在第1种情况下，你可以为自己像一位主厨一样发展了那部分自己而感到自豪。这是一种真实而艰难获得的感觉或价值观。\",\"在第2种或可能是第3种情况下，你发现自己被欺骗了。当你没有留意时，你让别人偷偷进入了你的渴望章鱼。对于你的那个特定信念来说，你是一个按照别人的配方来做菜的厨师——一个顺从的机器人，背诵着别人大脑中的欲望和恐惧。\",\"有可能你是一个异常聪明的人，你的审讯揭示了一个大部分是由你个人发展并且时刻更新的章鱼。更有可能的是，你和我以及我身边的大多数朋友一样——你的审讯室揭示了一些明显的冒名顶替者，或者至少有很多模糊不清的地方。比如，在一个面具下面，你会发现你的妈妈。\",\"你会从其他人身上揭示出更广泛的传统智慧的价值观和判断，或你更直接的社区的观点，或你这一代的主流文化或你最亲密的朋友圈子中的直接文化认为什么是酷的。\",\"有时，你可能会沿着“为什么-因为”路径走到尽头，只发现哲学思想来源于一部著名小说，或者是你心目中的名人英雄在一次采访中说过的话，或者是你的一位教授反复强调的强烈观点。\",\"你甚至可能会发现，你的一些渴望和恐惧是由你自己在七岁时写下的。就像一场童年梦境，深深刻在你的意识中，成为你真正想要的东西，当你真诚地坦白时。\",\"确实，审讯室可能不会是一个有趣的时光。但这是值得花时间的，因为你不是你七岁时的自己，就像你不是你的父母、朋友、同一代人、社会、英雄、过去的决定或最近的环境。你是现在的你——唯一一个有资格想要和不想要你所追求的东西的人，也是唯一一个你自己的版本。\",\"明确地说，并不是说依靠智慧的父母、著名哲学家、你尊敬的朋友或你年轻时的信念是错的。谦卑的人注定会受到影响——影响是我们每个人不可避免的重要组成部分。关键的区别在于：\",\"你是否将外界影响的话语视为信息，由一个真实的内心你所持有和考虑，并经过仔细决定要接受？还是这些影响实际上就在你的大脑中，伪装成你的内在你？\",\"你是否想要和你认识的其他人想要的东西一样，因为你听他们谈论过，你将其与你自己的生活经验联系起来，最终决定，暂时而言，你同意？还是因为你听别人谈论他们想要或害怕的东西，然后你想：“我什么都不懂，而那个人懂，所以如果他们说X是正确的，我肯定他们是对的”——然后你将这些想法铭刻在脑海中，再也没有质疑的需要？\",\"前者是主厨所做的。后者是当你成为一个顺从的机器人时所做的。当你在某个时刻觉得其他人比你更有资格成为你时，你就成为了一个机器人。\",\"好消息是，所有人都会犯这个错误，而你可以纠正它。就像你的潜意识可以供你观察一样，它也可以用来改变、更新和重写。这是你的头脑，你可以按照自己的意愿处理它。\",\"所以现在是时候进行一些驱逐了。那些戴着面具的冒名顶替者必须离开。甚至连妈妈和爸爸也一样。\",\"在这一切结束时，你的章鱼可能会看起来有点荒凉，让你感觉自己甚至不知道自己到底是谁。我们通常认为这是一种糟糕的感觉，甚至是存在危机，但实际上这意味着你比大多数人做得更好。\",\"从天真的过度自信到明智、现实的谦逊的跌落并不让人感觉好，但是在过山车还停在第一个悬崖上时暂停，避免那种痛苦——这是很多人的选择——并不是一个好策略。智慧与知识无关，它与与现实接触有关——它不是你在图表上的位置有多靠右，而是你离橙色线有多近。智慧一开始可能会让人感到痛苦，但它是唯一真正成长发生的地方。讽刺的是，那些停在悬崖边的人喜欢让更明智、更勇敢的山谷居民或持续攀登者感到糟糕——因为他们根本不明白了解自己是如何运作的。他们还没有达到那个阶段。\",\"了解真实的自我非常困难，而且永远不会完全完成。但如果你已经从悬崖上跌落，那么你已经经历了一个关键的成人礼，进步现在是可能的。当你沿着橙色线爬升时，你将慢慢但确定地开始重新填充你的渴望章鱼，与你真实的自我重新连接。\",\"此刻，你可能不清楚你那些缺失的渴望具体是什么——因为它们位于你潜意识更深的层面。它们位于地下室的地下室的地下室——一个叫做否认监狱的地方。\"]},\"576\":{\"h\":\"拒绝牢狱\",\"t\":[\"我们大多数人甚至不知道我们大脑中的否认监狱的存在——那是我们压抑和否认的部分所在的地方。\",\"我们能够与之联系的真实渴望——也就是在审问过程中被证明是真实的那些——是我们真实自我的一部分，它们容易在我们的潜意识中找到，就在我们意识表面的正下方。即使我们的意识也很熟悉这些渴望，因为它们经常出现在我们的思维中。这些是我们与之保持健康关系的部分。\",\"但是，你也会发现有些你应该有的部分并没有在你的章鱼身上生活在它们应该生活的地方，而是被冒名顶替者取代了。这些失落的部分往往很难被访问，因为它们生活在你的潜意识深处的一个几乎不存在的低层。几乎如此。\",\"有些部分被放逐在地下室的第三层，因为我们极度痛苦地承认或思考它们。有时，我们新生成的部分只是立即被关进监狱，作为我们自身进化的否认的一部分——也就是固执的表现。但有时，我们的某个部分被关进否认监狱是因为别人将其锁在那里。在你的渴望中，一些渴望可能是被那个冒名顶替者放在那里的。如果父亲成功地让你相信你非常关心拥有声望的职业，他可能也让你相信你内心深处真正想成为一名木匠的那部分不是真正的你，也不是你真正想要的。在你的童年某个时刻，他把你对木工的热情扔进了一个黑暗潮湿的否认监狱。\",\"所以，让我们鼓起勇气，走到你的心灵的地下室的地下室的地下室，看看我们会发现什么。\",\"你可能会遇到一些不愉快的角色。\",\"留下那些不愉快的角色，现在专注于寻找被锁藏的与职业相关的渴望。也许你会发现一种被压抑的教学热情，或者一种渴望成名但被你所属的群体所耻笑的欲望。或者是对于长时间的自由开放休闲的深深热爱，而你更加贪婪、性欲旺盛的青少年自己为了强烈的抱负而将其推到楼下。\",\"在否认监狱中，你可能无法完全揭示出你真实自我的某些部分——那里相当黑暗。但要有耐心——现在你已经进行了审查，并为它们在你的章鱼上腾出了空间，它们可能会开始浮现出来。\"]},\"577\":{\"h\":\"优先排名\",\"t\":[\"我们的 \\\"渴望八爪鱼 \\\"审视的另一部分将涉及你的渴望的层次结构。与渴望本身同样重要的是它们的优先级。层次结构很容易看出来，因为它体现在你的行动中。你可能会认为做一些大胆事情的愿望在你的层次结构中处于很高的位置，但如果你目前没有在做一些大胆的事情，这就表明无论大胆对你来说有多重要，其他的事情--你内心的恐惧或惰性--目前的优先级高于它。\",\"重要的是要记住，渴望的排序也是恐惧的排序。章鱼中包含了任何可能让你想或不想从事某项职业的因素，而每种渴望的反面都伴随着对相反事物的恐惧。你渴望被人钦佩的反面是对尴尬的恐惧。如果翻开你对自我实现的渴望，你会看到对成绩不佳的恐惧。你渴望自尊的另一面是害怕感到羞耻。如果你的行动似乎与你认为的内心渴望层次不符，通常是因为你忘记了思考你的恐惧所扮演的角色。例如，看似坚定的成功动力，实际上可能是一个人在逃避消极的自我形象，或者试图逃避嫉妒或不被欣赏等情绪。如果你的行为似乎受制于渴望，而你并不认为自己真的那么在乎这些渴望，那么你可能没有足够仔细地审视自己的恐惧。\",\"同时考虑到渴望和恐惧，想想你的内部层次结构可能是什么样的，然后再回到那个同样重要的问题： \\\"谁下的命令？真的是我吗？\",\"例如，我们经常被告知要 \\\"追随我们的激情\\\"--这就是社会在说 \\\"把你对激情的渴望放在你的层次结构的顶端\\\"。这是一个非常具体的指示。也许这对你来说是正确的，但也很可能不是。这需要你独立评估。\",\"为了正确对待这个问题，让我们尝试从第一原则出发，根据我们的真实身份、我们随着时间的推移是如何演变的，以及现在对我们最重要的是什么，重新进行一次排名。\",\"这并不是说哪种渴望或恐惧的声音最大，或者哪种恐惧最明显--如果是这样的话，你就会让你的冲动主导你的生活。做排名的人是你--阅读这篇文章的小意识中心，他可以观察你的章鱼，客观地看待它。这涉及到另一种妥协。一方面，你会尝试利用你一生积累的所有智慧，积极做出关于价值观的决定--关于你真正认为重要的东西。另一方面，则是自我接纳和自我同情。有时，你会有一些强烈的、不可否认的渴望，但你并不引以为豪--无论你喜欢与否，这些渴望都是你的一部分，当你忽视它们时，它们可能会持续发酵，让你痛苦不堪。创建你的渴望层次结构，是重要的东西和你自己的东西之间的取舍。把更高尚的品质放在首位可能是一个不错的目标，但也可以给你的一些不那么高尚的方面一些好处--这取决于你决定在哪里划线。知道何时接受自己不那么高尚的一面，何时完全拒绝它，是一种智慧。\",\"为了让所有这些都井然有序，我们需要一个好的系统。你可以尝试适合自己的方法，我喜欢架子的想法：\",\"这就把事情分成了五类。优先级最高的内心驱动力会被放在特别的 \\\"无条件 \\\"碗里。NN碗是为那些对你来说非常重要的渴望准备的，以至于你想从根本上保证它们的实现--必要时不惜牺牲所有其他渴望。这就是为什么历史上许多传奇人物都是著名的一意孤行者--他们对 NN 碗有着非常强烈的渴望，这种渴望让他们名扬四海，但往往以牺牲人际关系、平衡和健康为代价。这只碗很小，因为它应该很少使用--如果有的话。比如，也许只有一件事能得到它。或者两三件。在 NN 碗里放太多东西会抵消它的力量，就等于碗里什么都没有。\",\"你的那群 \\\"顶层渴望 \\\"是你职业选择的主要驱动力--但顶层也要有节制地分配（这就是为什么它不是一个很大的架子）。货架摆放既是去优先化，也是优先化。你不仅仅是在选择哪些部分对你来说是最重要的，能让你快乐，你还在选择哪些部分是你故意不想要的，甚至是直接反对的。无论你的层次结构是怎样的，有些渴望都会让你感觉非常不快乐，有些恐惧会让你感觉不断受到攻击。这是不可避免的。\",\"这就是为什么大多数渴望应该放在中间架子、底层架子或垃圾桶里。中间的架子适合那些你决定接受的并不高尚的品质。它们值得你关注。它们通常会要求你给予关注--你的核心部分不会默默无闻地消失，如果被忽视，它们有时真的会毁了你的生活。\",\"其余的大部分都会被束之高阁。把你的一部分放在最底层就是告诉它：\\\"我知道你想要这些东西，但现在，我决定其他事情更重要。我保证过段时间，在我得到更多信息后，再重新审视你，如果我改变了主意，到时候你的架子就会升级\\\"。对底层架子最好的理解是：你能说服越多的渴望者接受底层架子的评级，你的顶层架子和 NN 碗渴望者得到他们想要的东西的机会就越大。同样，你放在顶层的渴望越少，顶层的渴望就越有可能茁壮成长。你的时间和精力都非常有限，所以这是一个零和妥协。业余爱好者的错误在于，对 NN 碗和顶层架子过于宽容，而对底层架子过于吝啬。\",\"然后是垃圾桶，用来装你完全拒绝的驱动力和恐惧--那些从根本上违背了你最明智的自我意愿的部分。很多内心冲突都来自于人们的垃圾桶，而控制垃圾桶是正直和内心力量的重要组成部分。但是，就像你的其他等级决定一样，你对垃圾的标准应该来自于你自己的深思熟虑，而不是别人告诉你什么是垃圾，什么不是垃圾。\",\"当你经历这个艰难的优先排序过程时--有时难免会遭到被取消优先排序的渴望的强烈抗议--请记住，你是房间里唯一明智的人。渴望和恐惧是没有耐心的，也不善于从大局出发。即使是那些看似高高在上的渴望，比如那些道德触角上的渴望，也无法像你一样理解全局。许多创造奇迹、让世界变得更美好的人，他们的出发点都是自私的动机，比如财富或个人成就感--他们的道德触角可能一开始就讨厌这些动机。章鱼不会成为房间里明智的成年人，那是你的工作。\",\"最后，正如我们稍后将讨论的那样，这不是一个永久性的决定。相反，它是一份用浅色铅笔写成的初稿。这是一个假设，你将能够根据实际生活中这种层次结构的感受进行测试和修订。\",\"你的渴望盒已经准备好了。现在让我们转向你的现实盒子。\"]},\"578\":{\"h\":\"深度剖析，第二部分:你的现实盒子\",\"t\":[\"想要盒子 \\\"处理的是你认为可取的东西。而 \\\"现实盒子 \\\"则是指什么是可能的。\",\"但是，当我们研究 \\\"想要盒子 \\\"时，发现它并不一定是基于你实际想要的东西，而是基于你认为你想要的东西--你习惯于想要的东西。\",\"现实盒子也是一样。它并不是向你展示现实，而是展示你对现实的最佳理解--你对现实的看法。\",\"自我反省的目的是让这两个盒子都尽可能接近准确。我们希望我们感知到的渴望能够真实地反映我们的内心世界，我们也希望我们对可能实现的事情的信念能够接近实际可能实现的事情。在对 \\\"愿望盒 \\\"进行审核时，我们会查看 \\\"愿望盒 \\\"的引擎盖，找到它的设置--你的渴望和恐惧。当我们打开你的 \\\"现实盒子 \\\"时，我们会看到一组信念。\",\"说到职业的可能性，你要面对两组信念：对世界的信念和对自身潜力的信念。要想在你的 \\\"现实之箱 \\\"中找到符合条件的职业选择，你在该职业领域的潜力必须达到在该领域取得成功的客观难度。\",\"我们就是我们，我们可能很不擅长准确评估这种比较的任何一方。\",\"我不知道你是如何看待职业道路的难度的，但根据我的经验，人们通常是这样看的：\",\"有一些传统的职业--比如医学、法律、教师或企业阶梯等--这些职业有可预测的、固定的路径。如果你足够聪明并努力工作，你最终会在一个成功、稳定的环境中安身立命。\",\"还有一些不那么传统的职业--艺术、创业、非营利性工作、政治等--这些都是未知数。成功和稳定都无法保证，要想达到很高的高度，要么是运气的彩票游戏，要么是先天天赋的基因彩票游戏，要么是两者的某种结合。\",\"这些都是完全合理的假设--如果你生活在 1952 年的话。你对职业世界和成功要素的看法，和你的渴望一样需要彻底揭开面具--我猜想，在大多数看法的背后，你会发现巨大的、肥胖的传统智慧。你可能会首先揭开你的某个信念的面具，然后找到你的父母、你的朋友或你的大学职业指导教师--但如果你继续揭开他们的面具，你通常会发现这也是一个面具，传统智慧就隐藏在它的背后。一个普遍的概念、一个常见的观点、一个经常被引用的统计数据7--这些都没有经过你的实际验证，但都被社会视为福音。\",\"当今世界每十年都会发生巨大的变化，这通常会让传统智慧变得非常过时。但是，我们的思维模式是更古老的世界，那里几乎没有什么变化，所以我们都像厨师一样推理，把传统智慧等同于真理。\",\"这些问题进而延伸到我们如何看待自身的潜力。当你高估了先天天赋对职业生涯的影响--你还混淆了天赋和技能水平--你就不会对自己在很多道路上的机会感到乐观。因为我们更了解传统职业的发展轨迹，所以我们不容易在传统职业上这样做。医学专业的一年级学生看到经验丰富的外科医生工作时会想：\\\"我也有一天能成为那样的医生--只需要努力工作 20 年。但是，当一个年轻的艺术家、企业家或软件工程师看到与自己领域中经验丰富的外科医生相当的人时，他们更可能会想：\\\"哇，看看他们多么有才华，我还远远达不到他们的水平。\\\"然后就绝望了。还有另一种常见的观念，即在非传统职业中茁壮成长的人都曾在某个时刻获得过 \\\"重大突破\\\"，就像中了幸运刮刮卡大奖一样--我不知道有多少人愿意拿自己的职业生涯去赌刮刮卡。\",\"这些只是我们对伟大事业是如何发生的一系列错觉和误解中的几个例子。因此，让我们集思广益，看看它究竟是如何运作的：\"]},\"579\":{\"h\":\"职业前景\",\"t\":[\"主要是我不知道。我想大多数人也不知道。事情变化得太快了。\",\"但这正是关键所在。如果你能搞清楚如何合理准确地了解真实的职业前景，你就会比其他人拥有巨大的优势，因为他们中的大多数人都会把传统智慧当作他们的指导手册。\",\"首先是广阔的职业前景--当今社会中一个人可能从事的所有工作的集合。我目前的工作描述是：\\\"撰写 8000 到 40000 字的文章，内容涉及各种不同的主题，并配以咒骂和棍棒图，工作时间非常零散\\\"。你觉得传统智慧会给我这样的职位描述吗？今天的世界由数以千计的选择组成--有的已有 40 年历史，有的三个月前才因为新技术的出现而成为可能--按照现在的工作方式，如果你想要的选择还没有出现，你很可能可以自己创造出来。压力很大，但也令人无比兴奋。\",\"然后是每条具体的职业道路。职业道路就像一个游戏棋盘。在传统智慧的书架上，只有一小部分当今可用的游戏棋盘的说明手册--而那些书架上的说明手册通常会告诉你过去的游戏是怎么玩的，尽管现在的游戏棋盘已经发生了很大的变化，有了新的机会、不同的规则和漏洞。今天，当你考虑一条职业道路时，要想准确评估这条道路是什么样的，以及它倾向于哪种强弱特征，你就必须了解该职业当前的棋盘是什么样的。否则，就好比试图根据你的身高和力量来评估你成为职业篮球运动员的机会，却没有意识到，比如说，篮球运动已经发展到了现在的超大型球场，里面有 10 个不同的 7 英尺篮球架，而现在的比赛更偏重速度而不是身高和力量。\",\"这是一个充满希望的消息。很可能有几十种很棒的职业道路与你的天赋优势完美契合，而大多数试图在这些道路上取得成功的人可能都在用过时的规则手册和策略指南玩游戏。如果你仅仅了解游戏棋盘的真实面貌，并按照现代规则进行游戏，你就会拥有巨大的优势。\"]},\"580\":{\"h\":\"你的潜力\",\"t\":[\"这就引出了你和你的特殊优势。我们不仅会根据错误的游戏板块来评估自己的优势（比如我们的篮球例子），即使我们心中有正确的游戏板块，我们也往往不善于识别该游戏所需要的真正优势。\",\"在评估自己在某条职业道路上的机会时，关键问题是：\",\"如果有足够的时间，你能否在这个游戏中获得足够的优势，从而达到你对该职业成功的定义？\",\"我喜欢把通往 \\\"足够擅长这项运动以取得成功 \\\"的旅程看作是一段距离。这段距离的起点是你现在所在的位置--A 点，终点是你达到成功的定义，我们可以用一颗星来表示。\",\"这个距离的长度取决于A点的位置（你当前的进展程度）和星星的位置（你对成功的高度定义）。\",\"因此，如果你是一名计算机科学专业的大学毕业生，你的职业目标是成为谷歌的中层工程师，那么你的距离可能如下所示：\",\"但如果你以前从未接触过任何计算机科学，并且你的职业目标是成为谷歌的顶级工程师，那么你面临着更漫长的道路：\",\"如果你的目标是创建新的谷歌，那么这条道路会变得更加漫长。\",\"此时，传统观念可能会在你脑海中浮现，并指出仅仅变得足够擅长某种技能并不能保证成功——你可能达到了职业道路上的星星，但仍然发现自己还没有真正“成功”。\",\"这种观念大部分是错误的，因为它误解了星星的含义。星星并不仅仅是关于特定的技能水平，比如编码能力、演技或商业敏锐度，它涉及整个游戏。在传统职业中，游戏往往更直接——如果你想成为一名顶级外科医生，并且在外科手术方面非常出色，那么你可能已经达到了你的星星，你将拥有你的职业。但在非传统职业中，游戏板上涉及更多因素。达到“我想成为一名著名演员”的星星并不仅意味着在演技方面变得像摩根·弗里曼一样优秀，而是意味着在整个演员游戏中变得像大多数电影明星在他们获得突破时变得优秀。演技只是这个谜题的一部分——你还需要擅长让自己出现在有权势的人面前，善于个人品牌推广，需要极高的乐观主义态度，需要荒谬的奋斗和毅力等等。如果你在整个游戏中变得足够出色——每个组成部分都如此——你成为一名一线电影明星的机会实际上是相当高的。这就是达到星星的意思。\",\"但是传统观念并不理解非传统职业的工作方式——它只从成功的狭义方面来考虑：才华和努力。当职业道路上的游戏板涉及更多因素时，传统观念只会举手投降，并称之为“运气”。对于传统观念来说，成为一名电影明星需要一些才华，但主要是需要中彩票的幸运。\",\"那么，如何判断你达到任何特定星星的机会？这完全取决于一个简单的公式：\",\"距离 = 速度 x 时间。\",\"在我们的情况下，更合适的措辞可能是：\",\"进展 = 速度 x 坚持。\",\"你对任何职业追求的前景取决于：\",\"A）你在提高玩这个职业“游戏”能力的速度，和 B）你愿意坚持追逐那颗星星的时间。让我们来讨论这两个方面：\"]},\"581\":{\"h\":\"速度\",\"t\":[\"是什么因素导致一个人在职业游戏中提高速度变慢或变快？我认为这归结为三个因素：\",\"你的“大厨水平”。正如我们之前讨论过的，大厨以全新的眼光看待世界，根据他们观察到的和自己经历过的事情得出结论。而厨师则通过按照别人的食谱来得出结论——在职业的情况下，这个食谱通常是传统观念。职业是一个复杂的游戏，几乎每个人一开始都表现糟糕——然后大厨们通过不断循环迅速提高...\",\"...而厨师们通过不断循环迅速提高，而厨师们的进步速度非常缓慢，因为他们的策略只是按照食谱进行操作，而这个食谱本身几乎没有变化。此外，在一个职业游戏不断演变和变形的世界中，大厨的策略可以实时演进并跟得上变化。与此同时，厨师的食谱变得越来越过时，而他们却对此毫不知情。这就是为什么我坚信，至少对于较不传统的职业来说，你的大厨水平是决定你提高速度的最重要因素。\",\"你的工作态度。这一点很明显。一个每周工作60小时，一年工作50周的人，进步速度将几乎是一个每周工作20小时，一年工作40周的人的四倍。一个选择平衡生活方式的人会比一个专心工作的工作狂进展较慢。一个倾向于懒惰或拖延的人会比一个善于保持持续工作的人失去很多进展。一个经常中断工作做白日梦或拿起手机的人，在每个工作小时内完成的工作量会比一个专注工作的人少。\",\"你的天赋。天赋确实很重要。聪明、有才华的人会以更快的速度提高在某个领域的能力，而不太天赋的人则进步较慢。但智力和才华只是在这里发挥作用的两种天赋类型。聪明和机智也很重要，而这些品质并不总是与纯粹的智力相关。根据不同类型的职业，社交技巧也可能至关重要。在许多职业中，招人喜欢（或微妙地操纵他人）的人比不招人喜欢的人有更大的优势，而喜欢社交的人会随着时间的推移投入更多的社交时间，建立更深入的人际关系，相比之下，不喜欢社交的人则会做更少的人际交往。\",\"当然，现有的人际关系、资源和技能等其他因素也很重要，但它们不是进步速度的组成部分，而是点A的位置的一部分。\"]},\"582\":{\"h\":\"坚持不懈\",\"t\":[\"当我提到坚持不懈时，我指的是长期的坚持不懈（与日常工作态度相对）。坚持不懈比速度更简单。你愿意花多少年时间追逐一个目标，你就能走得更远。一辆以30英里/小时的速度行驶，但在15分钟后停下来的汽车，比一辆以10英里/小时的速度行驶两个小时的汽车走得更远。\",\"这就是为什么坚持不懈如此重要。有人决定只愿意在追求梦想职业的过程中投入三年时间，然后再考虑备用计划，实质上就失去了实现梦想的机会。无论你有多棒，如果你在经过两三年的努力后就放弃了，你很难成功。几年时间根本不足以跨越通常需要走过的漫长距离，以达到最酷的成功之星，无论你的速度有多快。\"]},\"583\":{\"h\":\"你真正的优势和劣势\",\"t\":[\"在考虑到我们的速度-时间-坚持方程之后，让我们重新审视一下实力和弱点的概念。并不是说\\\"实力和弱点\\\"这个概念本身有问题，而是我们对待它的方式存在问题。当列举我们的实力时，我们往往更多地列举我们已经具备的技能领域。然而，实力应该更多地与速度和坚持的品质有关。原创性或缺乏原创性应该是讨论的一个重要组成部分，使得灵活性和谦逊（大厨的典型品质）成为显著的实力，而顽固或智力懒散（传统厨师的特点）则成为重要的弱点。工作态度的微妙之处，如对深度专注的嗅觉或拖延倾向，也应该是讨论的重要部分，自然能力超越才华，如机智和受欢迎程度，也应该是重要的考虑因素。与坚持相关的品质，如韧性、决心和耐心，应该被视为有希望的实力，而急于迅速显露成功的社交触手则应该被视为明显的警示信号。\",\"最重要的是，这些项目不应该被视为现在的状态的一瞥，而是要考虑到你在每个项目上的改进潜力。如果你把篮球交给25岁的迈克尔·乔丹，他可能表现得很差。但是把篮球称为他的\\\"弱点\\\"将是非常错误的。相反，你应该观察他在接下来的六个星期里的练习，并评估他的进步趋势。这个教训同样适用于具体的技能领域，但如果你专注于这些领域，大多数一般的速度和坚持品质也可以通过努力和改进来提高。\"]},\"584\":{\"h\":\"填充现实盒子\",\"t\":[\"你真正的现实范围实际上包括了你认为在一生的努力中，经过大幅改进后的自己能够达到的最低成功标准的所有职业道路。这将是一个无比庞大的清单，只有那些显然对你来说太过漫长、无法以最快速度完成的职业道路（比如我追求成为一名奥运花样滑冰运动员）才会被排除在外。但是停下来反思你完整的现实范围的广度是很有用的，只是意识到有多少选择实际上对你敞开，就能让你进入正确的心态。\",\"因此，为了更高效一些，让我们关注可能最终出现在你的选择池中的现实范围部分（即想要和现实范围重叠的温迪图表的中间部分）。为了完成我们带有这个条件的现实范围审查，我们需要评估以下几个方面：\",\"总体形势。尽力评估当前世界职业形势，即可选择（或可创造）的全部范围。\",\"具体的职业板块。对于任何听起来稍微有趣的职业，思考一下该职业的当前职业板块情况——涉及的各方，成功似乎最近是如何实现的，游戏规则的最新情况，正在被利用的最新漏洞等等。\",\"起点。对于这些道路，根据你目前与该领域相关的技能、资源和人脉，评估你的起点。\",\"成功点。考虑终点，在每条线上确定你的成功标记应该放在哪里。问问自己，你需要达到何种程度的成功才能对选择这个职业道路感到满意。\",\"你的速度。根据你当前与速度相关的优势以及你认为自己在每个领域能够提高多少（也就是你的速度可能能够加快多少），对这些不同职业板块上的进步速度做出初步估计。\",\"你的坚持程度。评估你认为自己愿意在每个职业道路上投入的时间。\",\"接下来就是数学问题了。你将职业板块转化为一条线，标出起点和成功标记，这样就能得出你面前各种距离，然后将你的速度乘以你的坚持程度。如果你觉得对于某个职业道路来说，速度乘以坚持程度的乘积可能能够达到该道路的总长度，那么这个职业就属于你的现实范围。当然，很难得到上述因素的确切值，但至少了解你正在使用的公式是很好的。\",\"从首要原理的角度审查现实范围可能会让一些过于乐观的人回到现实，但我怀疑对于大多数人来说，这样的审查会让他们意识到自己有比他们意识到的更多的选择，从而使他们能够朝更大胆的方向设定目标。\",\"对现实范围进行良好的反思将引发对想要的范围的另一次反思。在你的心中重新构建一系列职业道路将影响你对其中一些道路的渴望程度。在提醒自己某个职业将需要数千个小时的社交网络或数十年的成功前的奋斗后，可能会觉得某个职业不那么吸引人。而在改变你对运气实际上涉及多少的看法后，某个职业可能会显得不那么艰巨。还会有其他你之前没有考虑过的职业道路，因为你没有将它们视为真正的选择，但一些深入的反思开启了你的思维。\",\"这就将我们带到我们漫长的两部分深入探讨的结尾。经过相当繁琐的盒子审查过程，我们可以回到我们的温迪图表。\",\"假设一些事情已经改变，你现在有一个新的选择池，一个新的在桌面上看起来既符合你的高优先级评估又可能实现的选项清单。我们现在准备回到我们开始分析之前的地方：当前时刻。有了这些选项，我们准备抬起头，摆脱分析，展望未来。\"]},\"585\":{\"h\":\"将点连接成线，展望未来\",\"t\":[\"现在是时候拿出你在文章开头时我让你画下的职业规划地图了——带有箭头或问号的那个。如果在你进行审查之前，地图上有一个明确的箭头，请看看你的新选择池。根据你所反思的一切，你目前的职业计划是否仍然合格？如果是的话，恭喜你——你比我们大多数人都要领先。\",\"如果不是的话，那么这是个不好的消息，但也是个好消息。请记住，在生活中，从一个错误的箭头变成一个问号总是重大进步。\",\"实际上，一个新的问号意味着你已经在两个过山车上进行了关键的悬崖跳跃：了解自己和了解世界。这是朝着正确方向迈出的重要一步。划掉箭头，加入问号的行列。\",\"现在，问号群体面临着一个艰难的选择。你必须从选择池中选择一个职业道路。\",\"这是一个艰难的选择，但实际上应该没有你想象的那么艰难。原因如下：\",\"职业曾经有点像一个为期40年的隧道。你选择了你的隧道，一旦进入，就是这样了。你在这个职业中工作了大约40年，然后隧道把你吐出来，进入退休生活。\",\"事实上，职业从来都不像40年的隧道那样运作，只是看起来是那样。最多，过去的传统职业就像隧道一样发展。\",\"如今的职业，尤其是那些不太传统的职业，真的真的不像隧道。但是陈腐的传统智慧让我们中的许多人仍然以那种方式看待事物，这使得做出重大职业选择的本来就困难的任务变得更加困难。\",\"当你把职业看作是一条隧道时，这会给任何不确定自己是谁以及几十年后会成为什么样的人的人造成身份危机——这是大多数理智的人。它加剧了这样一种错觉，即我们所做的工作就等同于我们是谁，使得你地图上的一个问号似乎成了一个存在主义灾难。\",\"当你把职业看作是一条隧道时，做出正确选择的风险似乎如此之高，以至于爆发出选择的暴政感觉。对于完美主义者来说，这可能是极具瘫痪作用的。\",\"当你把职业看作是一条隧道时，你失去了转行的勇气，即使你的内心渴望如此。它让转行感觉非常冒险和尴尬，并暗示这样做的人是失败者。它还让各种多才多艺、充满活力、中途职业的人感觉自己太老了，无法大胆转行或开始全新的道路。\",\"但是传统智慧仍然告诉我们许多人，职业就是隧道。作为其糟糕经历的点缀——除了让我们渴望我们实际上不想要的事物，否认我们内心深处的渴望，对并非危险的事物感到恐惧，相信关于世界和我们潜力的不准确观念——传统智慧告诉我们，职业是一条隧道，帮助我们无谓地恐惧自己。\",\"如今的职业环境不是一排排的隧道，而是一个庞大、无比复杂、快速变化的科学实验室。如今的人不等同于他们所做的事情——他们是无比复杂、快速变化的科学家。如今的职业不是一条隧道、一个盒子或一个身份标签，而是一系列长期的科学实验。\",\"史蒂夫·乔布斯将生活比作连接点，指出虽然回顾过去，我们可以看到点是如何连接起来带领我们到达现在的，但在生活中，基本上无法预测点如何连接。\",\"如果你看一下你的英雄们的传记，你会发现他们的职业道路看起来更像是一系列相互连接的点，而不是一条直线和可预测的隧道。如果你看看自己和你的朋友，你可能会看到同样的趋势——根据数据，年轻人在特定工作上停留的平均时间仅为3年（年长的人在每个点上花费的时间更长，但也不会太长——平均为10.4年）。\",\"因此，将你的职业视为一系列点并不是为了帮助你做出决策的心理技巧，而是对实际情况的准确描述。将你的职业视为一条隧道不仅没有生产力，而且是一种错觉。\",\"同样地，你只能集中精力关注你职业道路上的下一个点——因为那是你唯一能够弄清楚的点。你不必担心第四个点，因为你现在无法做到这一点——从资格上来说，你实际上无法预测。\",\"当第四个点到来时，你将会了解一些你现在不知道的关于自己的东西。你也会从现在的自己变化，并且你的渴望章鱼将反映这些变化。你将会比现在更了解职业环境和你感兴趣的特定游戏板块，并且你会成为一个更好的游戏玩家。当然，那个环境和游戏板块本身也会发展变化。\",\"出色的网站80,000 Hours（旨在帮助年轻有才华的人解决职业选择问题）已经收集了大量数据来支持这一观点：关于你会发生变化，世界会发生变化，你只有随着时间学会你真正擅长什么的事实。知名心理学家丹·吉尔伯特也曾优雅地描述了我们在预测未来什么会让我们快乐方面的糟糕能力。\",\"假装你现在就可以弄清楚第二个、第四个或第八个点是什么，那是可笑的。未来的点是未来的你在未来世界中担心的事情。所以让我们专注于第一个点。\",\"如果我们把自己看作是科学家，把社会看作是科学实验室，我们应该把你当前经过重新修订的欲望-现实交集图仅仅看作是一个早期、粗略的假设。第一个点是你测试它的机会。\",\"在约会世界中，假设测试是直观的。如果一个朋友在烦恼自己想和什么样的人结婚，却从不和任何人约会，你会告诉她：“你不能坐在沙发上就能弄清楚这个问题——你必须开始约会，那样才能教你你需要在伴侣中学到什么。”如果这个朋友接下来进行了一次不错的第一次约会，然后回到家里花费几个小时思考这个新人是否是她的真命天子，你也必须纠正她。你会说：“你无法仅从一次约会中就知道那个人是否是你的真命天子！你必须和这个人约会一段时间，才能学到你需要学到的东西，做出决定。”\",\"我们都可以认同，这个假设的朋友相当疯狂，她缺乏对如何找到幸福关系的基本理解。所以在选择职业时我们不要像她那样。第一个点是一个轻松的情况——就像第一次约会一样。\",\"这真是个好消息--因为如果你在地图上画的箭头只是指向你未来的1号点，那么在地图上画箭头就不会那么可怕了。造成选择暴政的真正原因是，你一方面准确地看到了当今世界拥有的大量选择，另一方面却妄想把这些职业看作是昨日世界的40年隧道。这是一个致命的组合。将你的下一个重大职业抉择重塑为一个风险小得多的选择，会让你对选择的数量感到兴奋，而不是压力。\",\"从理论上讲，这一切都很好。但现在困难的部分来了。\"]},\"586\":{\"h\":\"开始行动\",\"t\":[\"你已经反思、反思、反思，权衡、衡量、预测和考虑。你选择了一个点，画了一个箭头。现在你必须真正采取行动。\",\"我们在这方面非常糟糕。我们是胆怯的人。我们不喜欢令人讨厌的事情，而采取大胆、实际的步骤就是令人讨厌的。如果我们内心有丝毫的拖延倾向，那么这里就会显露出来。\",\"渴望的章鱼可以帮助你。正如我们之前讨论过的，你在任何给定时刻的行为只是显示了你的章鱼的配置。如果你已经决定迈出人生的一步，但却不能完全采取行动，那是因为你内心深处不想采取行动的那些部分排名高于你希望采取行动的部分。你的意识可能已经试图给倾向于惰性的章鱼的部分降低评级，但你的渴望却反叛了。你是一个无法控制自己员工的CEO。\",\"要解决这个问题，像一个幼儿园教师一样思考。在你的班级里，有一群5岁的孩子反抗你的意愿。你会怎么做？\",\"去和那些惹麻烦的5岁孩子交谈。他们可能不好相处，固执而愚蠢，但你仍然可以和他们进行理性的交流。告诉他们为什么你在章鱼的等级体系中把他们排在较低的位置。向他们描述你从反思中获得的见解。提醒他们关于如何连接点以及点＃1的冷静性质。你是老师-解决问题吧。\",\"随着年龄的增长，我越来越清楚，我们作为大脑幼儿园教师的内部斗争占据了生活中大约97%的斗争。世界很简单-你很难。如果你发现自己在生活中持续不执行计划和对自己的承诺，那么你已经发现了你的新的头等大事-成为一个更好的幼儿园教师。在你做到这一点之前，你的生活将由一群原始、目光短浅的5岁孩子来管理，你的整个生活都会糟糕透顶。相信我，我知道。\",\"如果你内心的分析确实要求你在职业上迈向新的方向，我希望在某个时刻你能够跳跃起来。\"]},\"587\":{\"h\":\"行动之后\",\"t\":[\"跳到一个新的点是一种解放的感觉，通常会伴随着一些内部的混乱。\",\"首先，至少在一段时间内，你可能会在新的领域做得很糟糕。尽管你明智的自己会知道这正是应该的，但你不太明智的自己会完全进入存在危机的崩溃模式。你之前在章鱼等级中深思熟虑地降低优先级的所有恐惧会认为有人在谋杀它们，开始试图拨打911。而你优先考虑的渴望可能不会感到太多满足，它们会想知道自己对自己想要的东西是否一直都错了。而你没有优先考虑的渴望会拿出吉他，为你剥夺它们的那块看起来更绿的草唱情歌。这并不好玩。\",\"即使事情进展顺利，你也会很快意识到渴望的章鱼通常是一个不开心的生物。章鱼的核心部分会感到被忽视甚至受到攻击，而每一天过去，你都会承受你曾经考虑过但选择不走的道路的机会成本-在平行宇宙中，你做出了其他选择的自己。你会思考他们在世界上的假设进展，并担心自己可能错过了什么。\",\"随着你变得更加智慧，你会学会接受一个大部分不开心的章鱼。你会让它抱怨，擅长将其屏蔽掉，知道它抱怨的方式正是你计划中的方式。\",\"抱怨的章鱼提醒你，纯粹而欢乐的幸福从来不是一个合理的目标。你感到纯粹幸福的时刻是短暂的、药物引起的错觉，就像新恋情或新工作的蜜月期，或是长期等待成功后的喜悦。这些时刻就像平庸的高尔夫球手出去打高尔夫时的完美击球一样-它们令人敬畏，你应该充分享受它们-但它们不是新的常态，永远都不会是。\",\"一个更好的目标是满足感：一种令人满意的感觉，即你目前正在尽力选择一条良好的生活道路；你正在努力的事情可能会成为你最终引以为傲的拼图的一部分。追逐幸福是业余水平的行为。在那些时刻感受到满足感，当你的选择和环境结合在一起时，你知道你拥有了你所能期望的一切，这是智者的选择。\",\"人们谈论在当下的时刻保持存在感，但也有更广泛的宏观存在感的概念：在自己的生活中感到广泛存在。如果你在职业生涯的某个点上，当你真正坦诚地面对自己时，感觉对了，你可以停止思考和计划一段时间，专心投入其中。你以后可以回到宏观的视野-现在，你可以将宏观的画面放在一边，低头专注于当下，将所有的精力都投入其中。一段时间内，你可以只是生活。\",\"这些时刻并不总是那么长久，所以抓住机会。将你所拥有的一切投入到你选择的点上。就你所知，你可能是迈克尔·乔丹拿着他的第一只篮球，所以开始行动吧。\"]},\"588\":{\"h\":\"下一个点呢?\",\"t\":[\"在某个时刻，你对宏观图景的良好感觉可能会变得糟糕。当出现这种情况时，你需要重新进入分析模式，弄清楚是什么特别的原因导致了内心的不安。\",\"有时候，宏观使命本身并不是问题所在。可能是你内心的厨师决定，使命本身需要一个战略性的跳跃点。在这些情况下，跳跃并不是为了解脱坚持，而是坚持的一部分。这是增强使命的跳跃点。\",\"其他时候，你可能会感到一种更加深沉的不安，怀疑自己可能需要改变宏观使命。当这种情况发生时，你需要弄清楚这种感觉是来自你内心的明智部分，还是仅仅来自于你不安和优先级降低的渴望。可能需要进行使命性的跳跃，但具体是否需要取决于你内心的哪些部分在提出这样的要求，它也可能是错误的选择。\",\"在这些时刻，重要的是考虑你在这个范围中的倾向：\",\"在这个谱系的左侧，是那些对跳跃持谨慎态度的人，他们脚踏实地。他们的缺点是在错误的事物上停留的时间太长。而在谱系的右侧，则是那些喜欢跳跃的人，他们敏捷如翼，他们的缺点则相反：他们很容易放弃。(你应该格外警惕那些脚踏实地的人——心理学家认为，人们在生命的尽头最有可能后悔的是惯性生活：一个经常表达的后悔是“我希望我早点放弃”，而老年人最常给出的建议是“不要留在你不喜欢的工作中\",\"这就是为什么这些内在框架很重要。它们使你能够分析冲动的来源。在我们的例子中，问题是你跳跃使命的冲动是真正的进化结果，还是过于急于放弃的偏见。所以请思考一下你的图表。你的不安只是一个章鱼仍然正确配置的预期不断抱怨吗？还是在你仍然走在正确道路上的漫长跋涉中感到疲惫？或者在这段跋涉中，你是否学到了关于自己或世界的新信息，纠正了一些最初的错误假设？或者也许有一些根本性的进化——一些蓝色或黄色的循环活动：\",\"如果你觉得情况真正发生了变化，你可以决定进一步放大视角，考虑到与根本性使命改变有关的大红色循环：\",\"如果职业就像连接各个点一样，那么我们应该将“对于跳跃点的智慧化”排在我们的任务清单上的相当高的位置。开始的最佳方式是回顾自己的过去。用回顾和积累的智慧之光来研究自己过去的决策，就像一名运动员研究比赛录像一样。\",\"回顾我的过去，我可以看到许多跳跃点（或者在我还在学校时的职业规划调整），有些在回顾中看起来相当不明智。但是，我对过去错误决策的清晰认知，以及构建这些决策的思维模式和行为习惯，将使我在未来更不可能重蹈覆辙。\",\"记住自己有点傻也是一种至关重要的谦卑练习。谦卑的不安全感并不令人愉快，而持续不断地为自己创造人生地图的负担也从未轻松。但是，不安全感和困难感正是自主驾驶船只的感觉。当我们感觉良好时，我们就有可能变得过于自信、智力自满并固步自封。正是当我们认为自己已经完全搞清楚人生时，我们最终迷失了方向。\",\"在你的一生中，你的良好和糟糕的决策将共同铸就你独特的人生道路。在这个博客中，我经常写到我们的恐惧是多么的不理性，以及它们如何严重地束缚我们。但我们可能应该拥抱对临终遗憾的恐惧。\",\"幸运的是，我从未经历过任何像临终那样的事情，但似乎临终时有一种能让人以清醒的眼光看待事物的东西。似乎面对死亡会让你头脑中那些并非你自己的声音渐渐消失，只留下你那个小小的真实自我，在沉思中独自站在那里。我认为临终遗憾可能只是你真实的自我在思考你从未能够实现的人生部分，那些被别人踢进你潜意识的部分。\",\"我的心理似乎支持这一点——回顾我迄今为止的道路，最让我困扰的错误是因为别人掌控了我的思维，并否决了我那安静、不安全的真实自我的声音。那些错误我当时心底深处就知道是错误的。我未来的目标不是避免犯错，而是让我犯的错误成为我自己的错误。\",\"这就是为什么我在这篇文章中进行了如此痛苦而严谨的分析。我认为这是生活中值得的少数几个主题之一。其他声音永远不会停止激烈地试图替你过活——你应该为意识的中心那个脆弱的角色做对，给予他正确的选择。\"]},\"589\":{\"c\":[\"thinking\",\"careers\"]},\"590\":{\"c\":[\"thinking\",\"translate\"]},\"591\":{\"h\":\"我所了解的 Mixin\",\"t\":[\"最近两天，加密领域讨论最多的就是 Mixin 被黑客窃取两亿的事件了，很不幸我也是其中受损失的 Mixin 用户之一，而且几乎损失了我所有的比特币和以太坊...，所以相比在此事件之外在过去七年间没怎么用过Mixin的人来说，我还是很有资格对这次事件说说自己所了解的事实以及看法。\",\"提示\",\"这篇文章可能后面几年我还会拿出来多看几次，所以加个具体的时间会比较好\",\"事实: 2023年9月25日，多个区块链媒体报道Mixin云服务提供商数据库被黑客攻破盗取加密货币价值两亿美元 事实: 此次事件出现后，团队尽可能弥补损失，冯晓东本人在2023.9.25直播中说明: 拿出公司几乎所有钱来弥补大家的损失，剩余部分以债券形式发放，愿意用Mixin的后续利润弥补 事实: 在Mixin生态中被盗的大多数加密资产都是主流加密资产BTC、ETH、USDT，XIN和BOX没有丢(BOX中的大部分BTC是丢了) 事实: 我在这次事件中损失也巨大，几乎损失了我在大学前三年不断增持的大部分资产(主要是BTC)\",\"针对以上事实，很多人依然不是很了解细节，比如很多人认为只是钱只是丢了一半，当然钱丢了一半只是结果。事实是Mixin网络几乎丢了全部的BTC、ETH...团队尽自己最大的能力愿意赔付一半的损失。\",\"这次事件最大的影响是什么？冯晓东在直播中表示影响最大的是过去积累下来的信誉。\",\"我也认为此次事件对整个Mixin生态影响最大的是信心问题，即 Mixin也会被盗。\"]},\"592\":{\"h\":\"一些看法\",\"t\":[\"Twitter上CZ对此事件发表评论，他不理解为什么去中心化的服务要用中心化的数据库。\",\"但实际上Mixin上的Mixin Messenger本质上就是一个E2EE端对端加密的聊天软件，需要存入一些用户资料例如头像、名称等信息，这些信息可以用去中心化手段来做，但没必要。\",\"原因就是针对这些已经成熟的业务原有技术可以解决的很好，我们用的微信、QQ和市面上几乎所有的软件都会使用到中心化的数据库来做这些事情，所以这些事情没必要使用去中心化技术来实现。\",\"用过Mixin的都知道在Mixin内部转账是不需要gas费用的，而且很多Mixin用户完全不了解底层的Mixin Network，只知道使用的Mixin，所以实际上这也是在Mixin Network受攻击后，Mixin Messenger各个社群还能够正常聊天的原因————只是整个底层交易网络受到了影响，大家聊天不受影响。\",\"Mixin是我用过最好用的区块链产品没有之一，极致的隐私、极致的交易速度。\",\"出了这样的事情我也损失很大，但出乎意料，我竟然出奇的淡定…我仔细想想了大概有三个原因:\",\"资产数额不大，虽然过去几年一直在Mixin上买BTC，但由于我还是学生丢的钱在未来来看也是小钱\",\"心态变化，虽然丢了几年间不断投入的钱，但实际上我自身没有超前消费的习惯，所以在坚决不背负债务的理念下，自己的日常生活不受任何影响，这也是心态平稳的条件之一\",\"为自己的决策负责，负责只有一种就是100%的负责，坚决不抱怨，自己当初的决策如此，那就应该为自己的决策负责，为自己的投资决策100%负责。\",\"我学到的：\",\"新型交易市场法律虽然已经日趋成熟，但风险依然很大，鸡蛋不能放在一个篮子里\",\"做一个负责的人，官方公告是所有资产损失50%… 但事实上是Mixin网络损失了全部的BTC、ETH…Mixin团队拿自己的钱弥补了一些损失，在这个圈子里能做项目能做到不跑路已经很少了，能拿出自己所有的钱来赔付我头次见…\",\"针对这次事件我没有任何抱怨，投资的决策是自己做出的，虽然自己的钱是切切实实损失了，但只要生态还在后面还有继续做下去的可能，毕竟自己的未来还长，因为这么点小事成为一个抱怨的键盘侠实在得不偿失。\",\"Mixin 团队在这次事件中我认为做的没有任何问题。没有逃避责任，直播正常说明情况，作为最主要负责人愿意还钱，暂时没有详细说明任何技术问题，等查清账款的来龙去脉损失大小再做决策。\",\"在这个世界想做出一些事情真的比想象中要难得多，做过事情的人都知道想做一件事情的困难度和复杂度远比想象中要高许多，相比之下抱怨真的是一切的良药,当灾难性事件发生后，抱怨总是最简单的。\",\"只要一开始抱怨，一切烦心事儿都可以通过抱怨来解决，然后将情绪宣泄一空后，发现没什么用接着继续抱怨...很显然这不是一个成熟的人应该做的事情\",\"我个人感触最深的还是冯晓东在直播中没有任何抱怨情绪，自己是主要责任人损失也最大(冯晓东的BTC不仅被盗，还要将自己拿了近十年的BTC拿出来还钱)，我看到不仅仅是一个项目创始人的道歉，还有一种超越大多数人的责任...\",\"很多人觉得拿出所有钱来赔付理所应当，虽然确实理所应当，但实际上大多数项目在这种情况下跑路的绝不在少数，有大多数的区块链项目在遇到这类事件时都是创始人跑路项目关停...\"]},\"593\":{\"c\":[\"thinking\"]},\"594\":{\"c\":[\"thinking\",\"mixin\",\"crypto\"]},\"595\":{\"h\":\"我的财务观点\",\"t\":[\"我发现我在金钱的使用上与这个世界上99.9%的人都有所不同，在二十岁出头的年纪也没有足够的时间来验证我的观点是否正确。\",\"但我已经践行我的观点两年多了至于观点是否正确只能留给时间去证明，但有一点是确定的，不论怎么做十年都会过去。\",\"通常一些观点如果与大众的观点截然不同，那么大概两种可能，要么这个观点错的离谱，大众都懒得讨论了。\",\"另一种情况则让人难以接受，就是这个观点是正确的，但大众很难接受真相如此。\",\"我不确定我的观点和想法在未来长达十年二十年的维度上依然正确，但我只是认为不这样做的踏空成本很大。\",\"我如果不按照我的想法去做那么十年后我一定会懊悔不已，责怪自己如此浪费十年。我们开始：\"]},\"596\":{\"h\":\"常识\",\"t\":[\"在谈论金钱的始终之前，我们首先要明白一个关键点就是现金永远都在贬值，这是一个显而易见的道理，因为每次经济危机时，印钱都是很简单的度过危机的方式，所以金钱在使用层面只用现金是绝对不应该考虑的。\",\"第二个观点是:\"]},\"597\":{\"h\":\"判断依据\"},\"598\":{\"h\":\"观点\",\"t\":[\"可以有一定的现金量，但不应该超过总资产的30%\",\"个人大部分金钱应该存储在流动性强、长期增长的资产内\",\"可以考虑长期持有垄断企业的股票债权(尤其是虚拟世界的垄断企业)\",\"资产通过可以放贷/抵押获得高利息以抵抗现实世界的高通胀\",\"绝对不要借贷消费\",\"社交账号也是虚拟可增长资产\",\"保证自己的生产率超过收入增长速度(否则会失去竞争力)\",\"当下经济危机时更应该少消费以便买更多优质资产(静待经济回暖时)\",\"投资获得的资产最终目的不是未来的高消费，而是传承\"]},\"599\":{\"h\":\"总结\",\"t\":[\"至于里面的内容正确与否只能十年后再回头看了...\"]},\"600\":{\"c\":[\"thinking\"]},\"601\":{\"c\":[\"thinking\",\"mixin\",\"crypto\"]},\"602\":{\"h\":\"个人项目与mixin\",\"t\":[\"我的betxin.one域名到期了，最近打算将betxin重做一遍，并且用到自己最近一段时间学习到的开发知识。\",\"其实重写自己曾经的项目是意识到自己进步最明显的方式，因为曾经的自己对xx方面不太熟悉，所以经过了一段时间的努力在这一方面有所积累，于是对照曾经的代码会明显感觉到自己的进步.\"]},\"603\":{\"c\":[\"thinking\"]},\"604\":{\"c\":[\"thinking\",\"mixin\",\"crypto\"]},\"605\":{\"h\":\"长期写作\",\"t\":[\"关于为什么今天我决定开始长期写作，这个问题其实我早就有想过，并且早就想这样去做，但其实今天才开始决定实施，一方面由于过去想的多做的少，第二个就是过去长期一厢情愿地以为写作能力其实不重要…\",\"但最近一段时间以来看到了写作的价值以及写作的生产力有多高，所以到今天2023.5.23 在上海我决定长期写作，长期的意思是大概是5到10年。\",\"相关信息\",\"首先关于为什么写作，我想说一个最近在一本书《后资本世界》中学到的知识的概念：知识是一个记录在媒介中，随着时间能够进步的东西。\",\"这有两个方面：\",\"记录在媒介中\",\"随着时间可以进步\",\"记录在媒介中很重要，因为这样可以让我们人类的知识可以跨越时间和空间传承下来，比如我们现在可以读到2000年前的古诗《离骚》，现在仍然可以通过史书去查看过去一两千年的历史，这是其他动物所没有的，这也是为什么人类能够成为这个地球上的超级物种的原因，人类可以通过阅读文字的能力快速获得过去几千年的知识，达到人类知识的顶峰。\",\"相关信息\",\"现实中就是一个人仅仅通过20年的教育就可以到达博士学历的层次，也就是人类过去在某方面积累知识的巅峰，从而开始探索新的知识，达到科技创新的目的。\",\"所以记录在媒介中很重要，记录在媒介中的作用不仅仅是指记录下来，重要的还有随时间可以进步。\",\"比如遥远的时代，我们是不知道空气中有氧气的，所以我们天真的以为空气可以点火是因为空气中有一个燃素的概念，但后面随着化学实验，人们逐渐发现了空气中有助燃物质的其实是氧气，所以“燃素”的这个概念就应该被抛弃掉了，这就是知识进步的例子。\",\"两方面缺一不可：记录在媒介中，随着时间可以进步。\",\"这也是为什么决定写作的目的之一，就是写作可以产生知识，一是因为记录在媒介中，二是如果有人对我写的东西产生质疑，那么我就可以思考通过修改我的文字，记录下来达到进步的目的。\",\"接下来如果我可以通过写作来积累知识，那么我的生产效率就会提高紧接着我的思考质量也会提高，这件事情是AI所不能替代的。山姆奥特曼(Open AI)的创始人说AI可以让劳动力成本降低为0。他或许是对的，但目前而言，AI能够从事的写作仅仅只能写出让人认为很普遍的文字。所以网上目前有很多人写的prompt教程，让人们通过与AI对话就能得到自己想要的东西，这一点也是对的，如果你只是想写出人云亦云的东西，那AI确实可以让人云亦云的劳动力成本降低为零，但是如果你想写出不一样的，想特立独行且正确，写出真正有思考力的，证明自己的思考的，那AI目前而言还不能替代，这也是为什么AI到目前为止是无法替代真正有生产力的作者。\",\"以我程序员的职业告诉我，AI并不是万能的，仅仅只能写出很普遍的代码，换句话说，如果你想写出很优美的代码，最起码比90%的程序员强，那么仅仅依靠AI是绝对不够的，你需要曾经积累，读过的代码足够多，而不是对AI说 请你写代码优美一点 这样。我经常和AI对话，很了解AI的短板，就是如果是一个很个性化的程序，而且表述不完备，那么AI在这方面是无法奏效的。又或者你遇到的问题，其他人并没有遇到，那么AI由于缺少相关数据的输入，所以也会对你的问题答非所问。\",\"大语言模型会给你答案，但答案需要自己去分辨。就像程序员一样，如果AI给你的代码你看都不看就直接使用了，或者更可怕你看不懂就直接使用了，那就证明你的技术是最容易被替代的那一个…\",\"上面这些论述了我为什么不想用AI工具来证明我的思想，而是通过原始的写作方式来证明自己思想，思考过程以及我是如何进步的，以及记录知识的。\",\"由于我的职业是程序员，所以可能有时我会写一些编程文章，有时候也会写写思考文章，用文字来表述自己的思想，记录知识是在AI易碎时代能证明自己的东西，最后我期望从区块链中获得能证明我自己的文字的确存在。\",\"最近半年AI可谓风头正盛，很多人不法分子甚至用来犯罪了，昨天看到一个新闻：一个人通过AI换头像去向熟人诈骗，诈骗数额是二十五分之一个小目标。这件事情足以让人们意识到AI时代的虚拟感，以及我最近看短视频，逐渐意识到很多信息都是压根没用的——可能与我两个月之前的判断一样是由AI生成的。AI时代的信息一定比过去的产生速度快很多，甚至是指数函数的那个J型图的勾勾尾，未来十年能产生的信息一定比过去十年能产生信息的很多倍，所以分辨有用信息以及保护好自己的大脑，控制自己的大脑的输入信息源会变得比过去十年重要得多。李笑来有个类比大意是这样：你天天刷牙洗漱对自己的身体卫生那么在意，但是对脑子也要好点啊，天天输入垃圾信息源，一点都不珍惜自己的脑子…\",\"还有一个论点就是未来二十年，我的判断应该是人类迈向知识时代的关键二十年，就像人类从农业社会迈向工业社会一样，发生关键性转折…所以通过文字来积累知识是一项不错的自我投资，也是对自己思想的提炼以及research。\",\"另一个论点是由于写作思考，我需要对读过的信息加以整理，而想让读过的信息整理成有用的知识需要反向地塑造我成为一个可以只字不差地阅读的人，这种塑造对我的意义是巨大的，因为只字不差地阅读对人的思考质量是巨大的，这一点后面有空还会详细说一说。\",\"最后总结一下我为什么决定开始长期写作：\",\"总结\",\"写作可以创造知识。\",\"AI时代的自我思想变得尤其重要。\",\"写作是迈向未来知识时代的通道。\",\"让我可以只字不差地阅读\",\"最后一点，我后面会写文章详细说明。\"]},\"606\":{\"c\":[\"thinking\"]},\"607\":{\"c\":[\"thinking\",\"write\"]},\"608\":{\"h\":\"气候危机与集体注意力的缺失🎑\"},\"609\":{\"h\":\"气候难民\",\"t\":[\"大概2022年前后，有一篇广为流传的文章，里面说了一个词叫气候难民，因为2020年后，整个世界好像都开始了一次大混沌时代，曾经有的秩序都不存在了，曾经有过的秩序都被推翻从来，我们只能重新去尝试先过好当下，再去尝试建立新的秩序，气候也是一样。\",\"气候危机这个词说起来非常严重，因为气候危机对于我们每个人都很重要，甚至不局限于人类，整个地球上的生态都受气候危机的影响，由于人类是整个地球上的超级物种，我们拥有可以被传承下来的知识，让我们可以踏着先人留下来的东西继续前行，所以我们似乎应该不止为人类否则，我认为应该对其他物种也应该重视起气候，这也是我认为的人道主义。\",\"说起来为什么写这篇文章呢，因为这段时间气候很奇怪，时冷时热，朋友圈的欢欢发了个动态说今年的天气很奇怪。我今天早上打开窗帘，也被吓了一跳，以为回到了3月底的时期，天气很灰尘…但昨天阳光很明媚，前天和今天的天气差不多，如果后面一段时间的天气也这样奇怪，应该也能引起大众的注意了。\",\"说道气候难民，这个词的定义是，由于气候危机导致的一些地区以及不适合人类居住，那么在那一片地区仍然居住的人就是气候难民。\",\"这个气候难民的定义多多少少有所含糊其辞了。长江中下游，有一片地区，几乎年年发大水，可谓是世世代代被水淹，那世世代代被水淹的那一批人其实不是气候难民，只是不愿迁徙的人群。\",\"如果一个人由于气候原因原先所在的地区已经不适合生存了，但是仍然只能生活在那片地区，那就可以称之为气候难民了。\",\"有一个2022年有一个报道：https://www.cdmfund.org/30840.html。\",\"里面的数字看起来很恐怖，2020年全球产生了3070万气候难民，这个数字其实远比我想象中的要多，但人们似乎对整个气候的变化都嗤之以鼻，每个人的心中对气候危机的看法大抵都是不是不重要，而是有更重要的事情要做。这种看法就导致了，除非气候出现让整个人类都意识到不可不解决的时候，否则气候就只能不断被破坏下去……事情在变好之前，只能一步步变坏下去。\"]},\"610\":{\"h\":\"集体注意力的缺失\",\"t\":[\"首先说明注意力在我这里的定义：注意力是时间加上意向性，二者缺一不可。所以在说注意力有多强的时候，说明自己的意向性加上时间才是精确的。\",\"下面说说集体注意力的缺失，我认为在当今的互联网的影响下，我们每个人都似乎又了注意力缺失的情况，大意是我们失去了本应关心的东西。\",\"每个人的意向性都或多或少被虚拟世界的一切所吸引，原因也或许是当下产品设计就是这个样子，通过吸引用户的注意力来卖广告商业模式就只能导致这种情况的发生。\",\"于是造就了整个社会失去了本应该关心的目标，比如或多或少可能再次发生的大疫情、或者未来可能让这个人类族群灭绝的小行星撞击，又或者是与我们每个人当下都能感受到的气候危机。\",\"集体注意力的缺失导致的危害可能是十年后才会展现的，而这种集体注意力的缺失导致的危害可能让整个人类群体都遭受目前无法想象的灾难，如果小行星撞击地球，那我们所面临的就是灭种危机了。但这一现象是最近十年发生的，也就是数字技术快速膨胀的十年发生的，我们每个人都需要时间去适应数字技术对世界的改变。都应该仔细思考自己的注意力与数字技术的贴合度，否则自我感受只能是不幸。\"]},\"611\":{\"h\":\"数字技术的不幸\",\"t\":[\"数字技术让我们每个人可以看得见其他人的生活，于是就可以看到肉眼可见的其他人营造出的幸福生活。\",\"于是每个人的心理都出现一个比较的念头，当一个人开始有比较念头的时候，不幸就开始发生了。我过去的一个经验告诉我，只要一个人开始比较，那么总会有比自己弱的，也会有比自己强的，这个时候看到比自己强的人，心里升起的不爽怎么解决呢？最简单的就是造谣，不管别人信不信自己先信了，这是保护自己的方式，让自己的内心抵消比较所带来的落差感。\",\"但你仔细想想，大部分人其实是属于高不上低不就的，于是大量谎言就出现了，2018年的时候有一本书叫《后真相时代》，里面说明了当下互联网中，谎言比真相流传的更久，这是一种数字技术带来的不幸，但似乎又没有解决方法，毕竟没有数字技术的时代也依然有谎言，这就需要我们的人道主义精神去解决了。\",\"就解决气候危机而言，我们需要我们的集体注意力去解决，而集体注意力的缺失又是数字技术所带来的不幸，《后资本世界》提出了几个方法来应对注意力缺失：\",\"总结\",\"提高正念\",\"积极应对气候危机\",\"捍卫民主\",\"培育去中心化\",\"促进学习\",\"促进和践行人道主义\",\"这其中每个点都值得拿出来深说…，我后面都会拿出来说一说的。\"]},\"612\":{\"c\":[\"thinking\"]},\"613\":{\"c\":[\"thinking\",\"write\"]},\"614\":{\"h\":\"金钱是有生命力的\",\"t\":[\"提示\",\"通常，我们对于一些观点都有一些属于自己的看法，而大多数人类似的看法就组成了大众的看法，比如说金钱是有生命力的观点。\",\"首先我们需要对生命力这个形容词进行一个定义，我首先来说说我的定义，生命是有诞生，成长和衰老和死亡过程的，那么与之对应生命力这个形容词也是有对应的诞生、成长和消亡属性的。\",\"相关信息\",\"于是金钱有生命力的含义是，金钱也是有诞生、成长和消亡属性的。\",\"但你潜意识的看法其实是，金钱是一个东西呀，曾经是攥在手里的纸币，现在是微信、支付宝、Paypal、银行卡里的一串数字，怎么可能有生命力呢。但其实不是的，这件事情需要仔细审视，那就是金钱是在人的手里流通的。\",\"由于金钱是在人手里流通的，所以金钱就有了生命力的属性。每个人对金钱的看法、认知不同就导致了金钱的生命力在谁的手中的不同。然后所有的金钱在这个社会上所有的人的手中流转，于是金钱就体现出了茁壮的生命力——金钱最终在流动中会流向对金钱有认知有掌控力的人的手中，而会背离那些对金钱没有认真对待的人。\"]},\"615\":{\"h\":\"金钱是有生命力的\",\"t\":[\"这不是一个迷信的说法。而是因为金钱是在社会中流通的，所以金钱就有了生命力的属性，金钱的流通过程中集结了所有人对金钱的看法、金钱的认知，以及对金钱的决策行为，于是金钱就体现出了茁壮的生命力——于是乎金钱最终在流通中会流向对金钱有认知有掌控力的人的手中，而会背离那些对金钱没有认知、没有拼命思考的人。\"]},\"616\":{\"c\":[\"thinking\"]},\"617\":{\"c\":[\"thinking\",\"write\"]},\"618\":{\"h\":\"你是谁？\",\"t\":[\"今天重新读了下《超越感觉》的第一章，总结一下，下面的内容。\",\"想象一下有一个其他人问你是谁的时候，你的第一反应是什么？名字对吗？但是人们如果人们想进一步问你是谁的全部情况，那么你的回答得包含身高体重年龄、包括所有情感信息和未曾和他人分享过的秘密等…还包括你的态度。\",\"如果提问者接着问：==你是如何变成现在这个样子?==那么你可能会回答，这是我的个性，我成为这样是因为我想成为这样，这些都是我的风格和态度。这个答案看起来很自然，但是而且在某种程度上是对的，但从更大的意义上来说，这个回答是不正确的。这个世界对我们的影响比我们大多数人要大得多。\",\"总结起来至少有下面几种影响：\",\"总结\",\"时间地点的影响\",\"流行思想的影响\",\"大众文化的影响\",\"科学的操纵\",\"心理学的影响\"]},\"619\":{\"h\":\"时间和地点的影响：\",\"t\":[\"你不仅是一个人类，而且你还是一个处于特定时间特定地点的人类，这个时间和地点最起码不是由你自己决定的，因为你是被出生的…所以你所出生环境的文化习俗、信仰都限制了你的经历，影响了你的思维模式。如果你出生在19世纪，你可能就不会反对年幼的孩子去工厂里做体力工，你也不会考虑青少年的特殊需求（青春期这个概念是1904年才被提出来）。\",\"提示\",\"如果你在中东长大，那么显然你可能会离美国更近一点，如果你是80年代在中国出生，那么你可能也会离美国更近一点，但是如果你是10年代从中国出生，那么你可能对美国就没什么好感了。\",\"丹尼尔卡尼曼说不同地区的人都有不同的守时习惯：在美国，迟到5分钟中被允许的；但在阿拉伯国家迟到30分钟时正常的；在英国，迟到15分钟是正确的；一个意大利人可能会迟到两小时。\",\"总之生活在不同地区的时代和文化会让你成为一个完全不同的人，即使你是一个非常叛逆的人，不符合当地时间地点的价值观，但它们仍然代表了你的生活背景——换句话说，它们依然会影响你的反应模式。\"]},\"620\":{\"h\":\"流行思想的影响：\",\"t\":[\"如果我们能够意识到我们所遇到的观念的紧密联系和含义，我们很快就能从中区分出什么是正确的、什么是愚蠢的，但我们很少能够意识到这一点，我们从表面上接受想法，并接受它们，很少或根本没有考虑到它们的相关含义，随着时间推移，无论我们是否意识到，我们的行为都受这些含义的影响。\",\"考虑一下一个多世纪前在心理学中流行的思想所引发的一系列事件，这个思想一直持续到今天，这个思想就是：“智力是由基因决定的，无法增加”。\",\"由此观点促使研究人员设计出了智力测试，最著名的是测试确定：美国白人的平均心理年龄是13岁，而在移民中俄罗斯人的平均心理年龄是11.34岁，意大利人是11.01岁，波兰人是10.74岁，黑人是10.41岁。\",\"教育工作者读到考试结果后认为，试图提高学生智力是没有意义的，所以她们用职业课程取代了学术课程，并采取了一种教授学术事实而不是判断过程的方法；立法者了解了考试结果后决定采取一些措施来阻止智力低下的人进入这个国家，所以他们修改了移民法，歧视南欧人和中欧人。\",\"这些是遗传主义最明显的影响，但它们肯定不是唯一的影响。\",\"你所遇到无数想法会以类似的方式影响你的信仰和行为——有时影响很小，有时影响深远。即使你没有意识地接受这些想法，这种情况也会发生。\"]},\"621\":{\"h\":\"大众文化的影响：\",\"t\":[\"过去几个世纪里，家庭和教师是影响儿童最主要的因素，有时是唯一的因素。然而今天却是大众文化的影响更大。大众文化对我们有什么影响呢？我们只需要考虑现代广告中经常使用名人的推荐口号对公众的影响，这种方式让许多人养成了情绪化、冲动的习惯。他们也倾向于获得与家庭、学校所教授的价值观截然不同的价值观。广告常常把玩耍描绘得比工作更有成就感，把自我满足描绘得比自我控制更让人向往，把物质主义描绘得比理想主义更有意义。\",\"大众文化让许多人无法形成成熟的注意力持续时间，还记得我对注意力的定义吗——时间加上意向性，缺一不可。他们期望教室和工作场所能提供刷短视频所带来的刺激一样，这当然不可能，所以他们说工作很无聊没有成就感，它们也不会去读需要它们思考的书，因为他们已经被训练成没有耐心的人了，就像巴甫洛夫的狗一样…（没有贬义，只是论证大众文化对人对影响）\"]},\"622\":{\"h\":\"科学的操作：\",\"t\":[\"巴甫洛夫的狗最为著名，对条件反射的实验让操纵人的思想和行为成为一门科学…\",\"所罗门阿希的实验表明，简单的将一些积极的形容词放在前面，参与者给出了积极的评价。但是当嫉妒排在前面，而聪明排在后面，参与者却给出了负面评价。\",\"同样的实验表明：人类的记忆力是可以被操纵的，提问方式可以改变一个人记忆中的细节，甚至让一个人记住一些从未发生的事。\"]},\"623\":{\"h\":\"心理学的影响：\",\"t\":[\"曾经我们祖母那个时期的文化教导：人们要自律、自我批评、谦让，以自我为中心是一种恶习，努力工作可以带来成就感，成就感又会带来满足感和自信。我们祖母那一辈人已经将这些文化内化了。但今天完全反过来，以自我为中心已经从恶习变成美德，致力于帮助他人的人被认为有讨好型人格。不论是否同意，我们所有人的态度、价值观和信仰都或多或少收到心理学的影响。\",\"那我们该如何成为一个独立的个体呢？\",\"根据之前的论述，我们似乎不应该将个性看作是一种与生俱来的东西，而应该将其看作是一个后天获得的东西，个性源于认识到不可能逃避他人和环境的影响。个性的本质是警惕，我们需要做到下面来帮助我们：\",\"把对任何人、事、情况的第一反应当作试探性的。无论它多么吸引人，在你研究它之前不要接受它。\",\"决定为什么你会有那样的反应。考虑一下你的反应是否借鉴了别人的看法，如果可能确定一下设么经历让你产生了这样的反应。\",\"想想你对这个人、事情的其他可能反应。\",\"问问你自己是否其他的第一反应获取更合适？记住要抵制条件发射的影响。\",\"确保你真的是一个独立的人，而不是仅仅声称自己是一个独立的人，这些指导方针需要被仔细审视。\"]},\"624\":{\"c\":[\"thinking\"]},\"625\":{\"c\":[\"thinking\",\"write\"]},\"626\":{\"h\":\"什么是批判性思考？\",\"t\":[\"今天继续读《超越感觉》第二章——什么是批判性思考？\",\"你在上课时是否被老师教导说，给你们两分钟思考一下？回想一下你是如何思考的呢？无非是闭目养神，或者看着其他同学苦思冥想的样子，自己也紧锁眉头装装样子呢？然后脑海中一直想着要思考，但不知如何思考？\",\"大多数人的经历类似，许多人可能只是告诉你去思考，但是没有告诉你如何思考，以及思考是什么，也没有提及好的思考者具备什么品质。\",\"生活中最有趣和令人震惊的矛盾其实是，一方面所有人都在不断坚持逻辑、合理推理。另一方面他们却不能表现出这种能力，当别人表现出来时也不愿接受。\",\"相关信息\",\"我们大多数所谓的逻辑推理，只是为我们相信的东西寻找理由。\",\"清晰地思考是非常罕见的，我们大多数人大多数时间根本不思考，我们只是感觉着。\",\"让我们在思考和感觉之间做一个重要的区分：我感觉和我认为有时可以交换使用但很混乱。感觉是情感、情绪和欲望的主观反映；它通常是自发形成的，而不是借助有意识的精神活动产生的。我们不必运用我们的心智就可在被羞辱时感到愤怒，在受到威胁时感到恐惧，或者在看到一幅饥饿儿童图片时感到同情怜悯。这些感觉都是自发产生的。”\",\"感觉在引导我们注意到自己应当思考的问题上是非常有用的，但是它从不是思维的一个良好替代，因为它不可靠，我们经常觉得想做的事情对我们有害，比如说吸烟、把钱花在买彩票上。\",\"相反，思考是以解决问题、做出决定或取得理解而进行的有意识的精神过程。感觉除了表达自身外没有别的目的，而思考有助于超越自身而达成知识或采取行动的目标。这并不是说思考是不会错的，事实上，《超越感觉》大部分都来揭示思考的错误，以及如何避免他们。\",\"思考有两大类：创造性和批判性。本书关注的焦点是后者，批判性思考的本质是评价。因此我们可以将批判性思考用来检验各种理论和主张，判断其具备哪些优点、哪些不具备优点。换而言之批判性思考就是寻找答案，是一种探究。批判性思考所使用的最重要的技巧之一就是提出试探性问题，非批判性思考者会接受他们自己最初的想法和他人陈述的表面价值，而批判的思考着会有下面的方式质疑所有想法：\",\"想法：我的老师在我的作文成绩上故意给我打低分，他对一些主题的评分比其他的重要。\",\"问题：他对每个人采用了相同的评分标准吗？这种不同的权衡标准是正当的吗？\",\"等等。\",\"批判性思考者也通过提出问题来分析议题。例如，考虑价值观的议题。当讨论它时，一些人说“我们的国家已经丧失了它的传统价值观”和“如果父母和老师们都强调道德价值，就会出现较少犯罪，特别是暴力犯罪”。\",\"批判性思考可能促使我们提问：\",\"价值观和信仰之间的关系是什么？价值观和信念之间有怎样的关系？\",\"所有的价值观都是有价值的吗？\",\"一般人对自己价值观的意识如何？许多人有可能对他们真实的价值观是自欺欺人的吗？\",\"一个人的价值观来自何处？出自其个人自身还是外在的？来自思想还是感觉？\",\"教育改变一个人的价值观吗？如果是这样，那么这种变化总是变得更好吗？\",\"父母或老师们应该设法塑造孩子的价值观吗？”\"]},\"627\":{\"h\":\"对批判性思考有不少误解：\",\"t\":[\"一是认为，能通过推理来支持自己的信念，成为批判性思考者。实际上每个人都有自己的推理，不管推理有多么不充分。对批判性思考的检验是看这些推理是不是好的推理、是否充分。\",\"另一个误解是批判性思考者从不模仿他人的思想和行动。如果事实真的如此，那么每个批判性思考者的都是古怪的人。\",\"第三个误解是，批判性思考是一个人头脑中拥有许多正确答案的同义语。当然，有正确答案没有什么错。但是，当正确答案不易获得时，批判性思考还包括寻找答案的过程。\",\"还有一个误解是批判性思考不能通过学习来获得，人们要么“有”、要么没有批判性思考。恰恰相反，批判性思考是一个习惯问题。通过培养批判性思考者的特性，最疏忽、草率的思考者也能成为一名批判的思考者。这不是说所有人都有同等的思考潜力，而是说每个人都可以实现引人注目的改善。”\",\"批判性思考者的一个特征就是提出恰当问题的技巧，另一个控制人的心智活动。\",\"批判性思考者：\",\"提示\",\"“以诚待己，承认自己所不知道的事情，认识自己的局限性，能看到自己的缺点。”\",\"“把问题和有争议的议题视为令人兴奋的挑战。”\",\"“尽力领会复杂性，对其保持好奇心和耐心，并准备花时间去解决难题”\",\"“把判断建立在证据而不是个人喜好上，只要证据不充分就推迟判断。当新证据揭示出错误时，他们就修改判断。”\",\"“认识到极端的观点（无论是保守的还是自由派的）很少正确，所以他们避免它们，践行公正性并且寻求平衡的观点。”\",\"非批判性思考者：\",\"提示\",\"“假装自己知道的比做的还多，无视自己的局限性，并假设自己的观点无差错。”\",\"“把问题和有争议的议题视为对自我的损害或威胁”\",\"“对复杂性缺乏耐心，宁可困惑不解也不努力搞明白。”\",\"“把判断建立在第一印象和直觉反应上。他们不关心证据的数量和质量，并且顽固地坚持自己的观点。”\",\"“忽视平衡的必要性，优先考虑支持他们既成观点的看法。”\",\"批判性思考依靠的主要是心智约束，有效的思考者对自己的思维进行约束，引导自己的思维而不是受其控制，在他们检验并证实任何思想观念之前，拒绝对其认可。\",\"批判性思考的基本活动\",\"调查 发现证据——回答有关该议题关键问题的资料。 证据必须是相关和充分的。\",\"解释 判定证据的意义是什么。 这种解释必须比其他竞争的解释更合理。\",\"判断 就此议题得出结论。 这个结论必须通过逻辑检验。\",\"“正如我们先前注意到的，不负责任的思考者先选择他们的结论，然后找出根据来证明他们选择的正确性。他们没有认识到，唯一值得作出的结论是基于对问题或议题以及它们可能的解决方案或决议的透彻了解。推测、猜想并形成预感和假设，这是可以接受的吗？完全可以。这些活动为思考过程提供了一种有用的起点（而且，我们甚至在尝试过了以后也无法避免这样做）。关键在于不是让预感和假设操纵我们的思考，并预先规定我们的结论。”\",\"批判性思考与写作\",\"写作可以有两个广泛的目标：发现思想和交流思想。\",\"毫无疑问，你在学校进行的多数写作属于后者。但是，前者也可以是非常有用的，不仅用于整理你已产生的各种思想，而且激发新思想的流淌。由于某种原因，写下一种思想的行为本身看起来可产生其他的思想。”\",\"每当你写作以开发思想时，集中于你正考察的问题并记录下你所有的想法、疑问和断言。不要担心组织结构或正确性。如果想法产生得缓慢，那要保持耐心。如果一些想法突然地匆忙到来，那也不要试图减缓这个过程并把其中任何一个都开发出来；只需把它们全部记录下来（此后会有时间去详尽阐述和矫正）。直接面对你的心智劳动，但是，对意识边缘的想法保持敏感。它们往往也证明是宝贵的。 如果你已很好地记录下你的发现，并对你已产生的思想进行了批判性思考，那书面交流的工作就会比较容易，也比较值得享受。你将有更多有待开发和组织的思想——仔细评估了的思想。”\",\"批判性思考与讨论\",\"从最好的方面说，讨论加深理解并促进问题的解决和决策。从最坏的方面看，它使神经紧张，制造敌意，并留下重要的问题悬而未决。不幸的是，在当代文化中，最重要的讨论模式——收音机和电视的脱口秀——经常产生后一种效果。\",\"这里有一些简单的指导原则用以确保你参与的讨论（在课堂上、工作场所或在家里）比你从电视上看到的更加文明、有意义和富有成效。遵从下述指导原则，你将为周围的人树立一个好榜样。\",\"只要可能，就提前做准备。\",\"首先，考虑一下你对该话题已经了解的知识。然后决定如何扩展你的知识，并花一些时间这么做（在因特网上重点搜索15或20分钟就能把几乎所有主题上的大量信息找出来）。最后，尝试预测在讨论中有可能表达的不同观点，并考虑每一个观点的相对优点。在这个时候，让你的结论仍然保持相当的试探性，以便你对其他人将提出的事实和解释保持开放心态。”\",\"设定合理预期\",\"人们很少轻易改变自己的看法，特别是长期持有的信念上。而且，当遇到与自己不同的观点时，他们当然想知道有什么支持这些观点的根据。期望有人质疑你的观点，并且从善如流地、优雅地作出反应。\",\"抛弃自我中心和个人主义\",\"为了获得成效，讨论需要一种相互尊重和文明礼貌的氛围。自我中心显然产生对他人的无礼态度——特别是“我比其他人重要”、“我的观点比其他任何人的都好”以及“规则不适用于我”。个人议程，比如讨厌某个参与者或过于热衷一种观点，有可能导致人身攻击并且不愿倾听他人的观点。\",\"还有避免分散注意力的讲话习惯、积极倾听、负责任地判断思想、抵制打断的冲动。\"]},\"628\":{\"h\":\"避免抄袭：\",\"t\":[\"一旦把思想用语言表达出来并予以发表，它们就成了“智慧财产”，而且，作者对它们所拥有的权利跟他或她拥有如房子或汽车等实物的权利是一样的。唯一真正的差别在于，智慧产权是用心智努力而不是金钱来购得的。任何一个曾经绞尽脑汁试图解决问题或把思想用清晰和有意义的文字表达出来的人，都能体会到心智努力会是多么艰辛。 剽窃是把他人的思想和语言冒充成自己的。这是双重冒犯，因为它既盗窃又欺骗。在学术界，视剽窃为道德亵渎，并受到论文或课程不及格的惩罚，甚至被机构开除。在学界以外，如果思想或语言的所有人愿意起诉，那它就是可能被指控的罪行。”\",\"美国参议员约瑟夫·拜登（Joseph Biden）寻求1988年民主党总统候选人提名时，被揭露抄袭了英国政治人物尼尔·金诺克（Neil Kinnock）和罗伯特·肯尼迪（Robert Kennedy）的演讲片断，同时还获悉他在法学院读书时，抄袭了一篇”法律文章的许多内容。接连发生的丑闻导致拜登退出候选人竞争，并且继续玷污他的名誉”\",\"有些抄袭是故意的，有些是大意的。\",\"如果作者的思想激起了你心智中的反应——比如一个问题，这个思想与你读过的某件事之间的联系，或是你自己的一段支持或质疑作者所说内容的经验——把它写下来并用方括号（不是圆括号）括起来，以便你在复习笔记时能知道它是自己的。\"]},\"629\":{\"c\":[\"thinking\"]},\"630\":{\"c\":[\"thinking\",\"write\"]},\"631\":{\"h\":\"上滑学\",\"t\":[\"摘要\",\"我的手机里一直没有抖音这个应用，我也很少去使用这种能提供即时反馈的应用，只是曾经2018年时上高中时经常使用。今天突发奇想，如今的抖音经过5年的迭代，现在成了什么样子呢？\",\"于是就兴冲冲下载了个抖音，刷了半小时我总结出一个规律，几乎刷3个其他类的，一定会出一个广告类的视频。这个其他类可能是宠物、美女、电影、恋爱、校园、搞笑等分类…但终究会出现一个广告类视频。于是就出现了我的大脑让我加入了一个竞赛——猜猜看下一个视频是不是广告。\",\"于是我的手就开始了上滑的练习，人们通常说练习一项技能需要有足够的熟练度，像铁匠那样专注于打磨手中的铁器。于是上滑似乎也是一种类似的行为，当人们在近十年中的内容应用时，似乎早已经过了上滑练习，而且是完全不需要经过自己大脑的刻意训练的练习就让我们的手自动去习惯这样一个动作，没事的时候上滑一下，伸进口袋一摸手机正好在，那就再好不过了，开刷！\",\"相关信息\",\"说不清道不明是什么时期人们开始无意识联系上滑的动作，在古老的没有互联网的时代，信息似乎是以口口相传、书信以及书籍来传递的。当意识从一页结束时就自然跳转到另一页。似乎是从Web时代到来，网上的论坛开始兴起，于是就开始了下滑的动作练习。自从移动互联网时代到来，都不需要鼠标这个外设来下滑了，只用手就可以了诶？\",\"照这个趋势下去，等智能眼镜发明出来的时候，都不需要我们的手去滑来滑去了，只需要眼皮子动一下就可以实现下滑的练习。\",\"当然目前的上滑仍然是以手指上滑为主导，不过说了这么多，重复这种简单的上滑动作到底会出现什么影响呢？回答这个问题也很简单。重复上滑动作会让我们获取信息，即使这种信息是我们压根不需要的。\",\"在高中的生物课本上，有一个著名的巴甫洛夫的狗实验，就是每次给狗送食物以前打开红灯、响起铃声。于是呢？这样经过一段时间以后，铃声一响或红灯一亮，狗就开始分泌唾液。这个著名实验甚至开辟了一条通往认知行为学的道路。\",\"又？我为什么讲这个例子。通过反复练习上滑行为来获取信息与巴甫洛夫的狗实验有很多相似之处。当我们习惯了上滑动作，让我们的大脑以为通过不断的上滑动作就可以获取信息，让自己的大脑吃到东西。是的，人的大脑也会饿的，试着在空闲时间放下手机，然后什么都不做去free thinking。你的大脑会因为接触不到信息而饿的，于是就得不断去尝试获取信息，于是继续加固这个上滑动作。\",\"信息从未像近十年这样快速膨胀，而且有一个趋势，进入AI时代，这种趋势会越来越快，未来的学习能力和思考判断能力会比曾经以往任何时刻都变得更加重要，而又因为AI时代的到来，目前的大部分已经是”上滑“人其实是不具备思考判断能力的，于是呢？\",\"自己的判断其实只能是AI的判断，想象一下遇到抉择的时候，由于过去没有训练过判断能力，所以只能将问题的背景传给AI，于是AI的抉择就是自己的判断，AI的思考就是自己的思考，AI的回答就是自己的回答…\",\"而且更可怕的是这一切似乎是无解，由于每个人一开始的选择判断能力都是需要自己积累、自己试错、自己总结、自己反思提炼、自己进步的，所以如果一个人一开始的判断就是借助AI之手完成的，那么之后的判断抉择似乎只能是一次次求助于AI，从AI辅助到自己的命运完全由Ai接手——毕竟选择决定命运嘛。\",\"进一步如果AI也植入了广告系统呢…这里留个坑，后面或许会填上。\",\"这种想法似乎很悲观，但其实趋势已经显现出来了，从今年年初AI的兴起，每个人都对AI显现出极大的兴趣，结果好不容易到能够使用AI时(真的是好不容易)只能问：预测一下中美关系？你觉得周杰伦的歌怎么样？\",\"从问出这样的问题就能看出来，大多数人已经不具备选择判断能力了，因为问的问题压根就不是AI擅长的，AI擅长的是有逻辑的问题，比如你让他做一道微积分它很容易就可以做出来，但是你问他应不应该和男朋友分手…对不起，AI真的爱莫能助。\",\"像中美关系、某个人的歌怎么样这种主观性问题，AI真的一点点都不擅长…而反过来说，每个人遇到选择判断、需要抉择的时候也是每个人价值观发挥作用的地方，其实这些选择之间就没有对错，只是说需要判断哪个选择更好更加符合自己价值观。\",\"这样的问题如果去问AI，那大概率就像问对特朗普的喜好一样。每个人都有自己的看法，每个人的看法都不同。AI只能给个模糊的答案，于是自己就只能模糊的进行选择，而命运也从一次次的选择中决定。\",\"那我们究竟应该怎样去做呢？\",\"面对这样的世界怎样去做我也在一直思考，总结出了以下几个需要做的点：\"]},\"632\":{\"h\":\"1. 培养正念\",\"t\":[\"说起培养正念，说得简单点就是要给自己积极的心理暗示。给自己积极的心理暗示真的会影响一个人的行为，从而让自己处于一种积极的状态中，当一个人处于积极的状态中，做事、思考的效率和质量都会提升。\"]},\"633\":{\"h\":\"2. 锻炼身体\",\"t\":[\"锻炼身体这件事情，后面再拿起来说，因为一个人的身体状态会影响精神状态这个道理似乎不是几句话能说明白的，继续留坑…\"]},\"634\":{\"h\":\"3. 尽快找到可以让自己充满激情的事业\",\"t\":[\"其实我在上面论述上滑行为时有一个点没说，就是当人们开始上滑行为时，其实是说这个人没有正事去做，如果一个人有正事去做，就不会无聊去不断上滑了。不过似乎这个建议有点难以实现，一方面开始上滑行为就是因为没有可以让自己充满积极的事业，另一方面即使找到了可能也是打鸡血的事业，不是发自内心真的喜爱。这个继续留坑…后面应该会再写一篇文章详细说明如何找到让自己充满激情的事业。\",\"挖坑文章：\",\"锻炼身体的重要性\",\"如何找到让自己充满激情的事业\",\"AI广告学\",\"自媒体的终局——卖货、广告\"]},\"635\":{\"c\":[\"thinking\"]},\"636\":{\"c\":[\"thinking\",\"write\"]},\"637\":{\"h\":\"真理是被发现的，而不是被创造的\",\"t\":[\"近年来，我们被灌输每个人要有每个人的想法，这已然是一种时尚。俗语说每个人都在创造他的真理，你的真理或许不是我的。这句话的含义是这是个自由的世界，我可以相信我想要的，于是这个论断就变成了任何一个人认为是真理的任何事情，都是因为他或她认为它是真理。\",\"但事实上，任何人都有可能犯错\",\"真理是被发现的，不是被创造的。它原本是什么就是什么，真理既不依赖于我们对它的认可，也不因我们的无知而改变，更不因我们的一厢情愿而改变。\",\"相关信息\",\"抽烟不会因为我们喜欢抽烟而对健康无害。\",\"真的有外星人驾驶UFO吗？\",\"篮球运动员在跳投之前已经超时了吗？\",\"引力是如何起作用的？\",\"谁偷了你的汽车轮盖？\",\"这些都是有真理的，就是有确定被我们发现的真理，而不由我们的一厢情愿而改变，它原本是什么就是什么。\",\"真的有外星人驾驶UFO吗？虽然有很多人在讨论这个事情，并且作出肯定的断言以表达真相，但还没有充分的证据说我们知道关于UFO的真相。但是，这并不意味着没有关于它们的真理，或者说肯定其存在的人与否认其存在的人一样是正确的。这意味着无论真相是什么，我们还没有掌握它。”\"]},\"638\":{\"h\":\"为什么我们的想法有时往往不是真理？\"},\"639\":{\"h\":\"我们的想法来源于何处？\",\"t\":[\"我们在童年时期，我们在生理、情感和智力上都不得不依赖别人的告知。比如问父母某些事情，我们无意识地接受这些答案，并将其作为我们信念的基石。\",\"我们在观察世界之前，都是被告知这个世界是怎样的。在体验大多数事情的时候，先想象它们，除非有教育使我们察觉到这一点，否则我们的观念会深深地控制整个感知过程。你听到过一句老话：“所见即所信。反之也同样正确——所信即所见。在或多或少的程度上，我们视为自己独特视角的看法承受着他人思想和信念的印记\",\"或者换句话说，一个人相信什么，那么他的世界就是怎样的。\"]},\"640\":{\"h\":\"不完善的感知\",\"t\":[\"感知一定是有缺陷的，首先它受我们欲望、兴趣和期望的影响：感知从一开始就是有选择的，并且简化我们周围的世界。记忆加速了这个过程。\",\"当我们考试的时候，遇到一个考察我们一个知识点的题目，我们充满信心写满了答案，但是当结果出来发现我们的感知并不正确，这时候可能会发现曾经的感知可能完全错误。\"]},\"641\":{\"h\":\"不完善的记忆\",\"t\":[\"即使我们的感知最初可能正确无误，但是我们的记忆也经常会发生扭曲，我们经常会对曾经发生的事情忘记了细节，后来尝试回想发生了什么，我们就可能用想象来填充这些空白。虽然最初意识到这样是一种重新构建“自己以为的事实”，但后面我们就会心安理得接受这样的 我们以为的事实。\"]},\"642\":{\"h\":\"有缺陷的信息\",\"t\":[\"很大程度上，一个信息的质量高低依赖于支持它的信息质量。而现在我们所接受的信息，很大程度上都是被 阉割的产物，即可能仅仅只是将一些事实的一部分当作信息进行传输，于是我们就只是看到了事实的一部分，于是就开始让我们产生一些反应。但是等等，一方面这些信息不是整个事实的全部。另一方面，这个信息的来源也有可能不正确。\",\"这个世界上变化很快的，不论我们是否接受，我们每天所接受的信息总是有缺陷的。\"]},\"643\":{\"h\":\"聪明人也会犯错\",\"t\":[\"经常，最受人尊重的头脑在某日视为真理的事，在后来被证明是错误的。毫无疑问，你知道一些这样的例子。在17世纪早期，当伽利略（Galileo）认为太阳是我们太阳系的中心时，他被指控为异端，遭到监禁，并迫使其声明放弃自己的错误。那时被每个称得上伟大的科学家接受的“真理”：地球乃是太阳系的中心。\",\"电影权威们确信熟悉已故的查理·卓别林（Charlie Chaplin）出演的所有电影。而在1982年，一部此前不为人知的电影在英国电影档案馆被发现\",\"长期以来，外科医生在做手术时，把滑石粉涂在橡胶手套上。然后他们发现它可能有毒。于是，他们转向淀粉，只是发现它可能对病人也有毒性作用。\",\"让我们回顾一下：\",\"我们的思想和信念可能不可避免地受他人的影响。\",\"我们的感知和记忆是不完善的\",\"我们的信息可能不准确不完整。\",\"合理的真相是：\",\"一件事情原本是什么，它就是什么，不以人的意志为转移。\"]},\"644\":{\"c\":[\"thinking\"]},\"645\":{\"c\":[\"thinking\",\"write\"]},\"646\":{\"h\":\"融入知识阶级\",\"t\":[\"相关信息\",\"关于资产阶级，Wiki上的定义是：拥有生产资料的人。而生产资料是什么？生产资料是劳动者进行生产所需要的原材料。\",\"比如你要盖一栋房子吧？那你需要人力，物力，财力等等，这些就是生产资料。\",\"比如一座工厂：工厂是生产资料的重要组成部分，它包括建筑物、机器设备、生产线等。工厂提供了物质条件，使得商品能够被大规模生产和加工。\",\"又比如说农田：在农业社会中，农田是生产粮食和农产品的生产资料。农田提供了土壤和种植条件，农民使用农具和机械来进行耕种和收获。\",\"但是这些都缺少一个最关键因素就是时间，不论生产什么最重要的都是时间，大多数人都没有考虑到时间这个因素。\",\"时间对于每个人都是公平的,不论是你巴菲特，还是街边乞讨的艺人又或是送外卖的小哥，在时间维度上都是一样的，所以至少从时间作为生产资料的维度上，人人都是时间上的资产阶级，这句话的意思是，我们的一小时在巴菲特那里也是一小时，我们的一小时在马斯克那里也是一小时。我们是可以选择利用我们最重要的生产资料也就是时间的。\",\"但是过去时间是生产资料并不受重视，原因是时间的的确确是生产资料，但远远不是最重要的生产资料。\",\"在过去，想种粮食种庄稼，就得看老天爷的意思，一年收割麦子的时间就是哪个时候，能不能…\",\"但是现在是信息社会了，我们的时间可以用来生产信息时代的生产资料信息。而信息也分为有繁殖\",\"在遥远的时代在，人类的历史长河中，我们经历了狩猎文明、农耕文明和工业文明等不同的阶段。每个时代都有其特定的生产资料，而这些生产资料对于社会的发展和个人的财富创造起着至关重要的作用。\",\"首先，让我们回顾狩猎文明时代。在那个时期，人们的主要生产资料是体力。狩猎者依靠自身的力量，奔跑、追捕猎物，通过物理实力与野生动物的斗争来获取食物和资源。在这个阶段，体力是狩猎者最为重要的生产工具，直接影响他们的生存和生活水平。\",\"随着社会的发展，人类逐渐过渡到了农耕文明时代。土地成为了新的关键生产资料。农民利用土地进行耕种，种植农作物，为人类提供丰富的食物和原材料。农耕文明中，拥有肥沃土地的人们更容易获得丰收和财富，土地成为他们赖以生存的根基。统治者也是直接拥有土地的人。\",\"随着科技和社会的进步，我们进入了工业文明时代。在这个时代，资本成为了最重要的生产资料。工业化的生产需要大规模的资金投入，拥有资本的人们可以建立工厂、购买机器设备和雇佣工人，从而进行规模化的生产和商业运作。资本家通过掌握资本，可以积累财富并成为社会的统治者、或者可以间接对政治产生巨大的影响。\",\"从过去的这些时代来看，时间也的确重要，但却往往不是最重要的生产资料，我们的狩猎采集文明经历了几百万年，农耕文明经历了几千年，工业文明经历了几百年。可见随着时间的推移，人类生产力发生越迁的时间越来越短，到最后可能一两代人就可以经历生产力的跃迁。\",\"我这里使用了跃迁这个词，跃迁的本意是电子从原子的一个轨道跳跃到另一个轨道上的过程，大意是生产力水平巨大提高的巨变。\",\"现在我们已经踏入了信息时代，信息成为了新的生产资料的核心。信息时代的特点是信息的快速传播和广泛共享。随着互联网和数字技术的发展，人们可以迅速获取和交流信息。在这个时代，知识和技能成为了最宝贵的资源，拥有对信息的理解、应用和创造能力的人们成为了新时代的知识阶级。\",\"这里我用知识阶级来取代工业社会的资产阶级。\",\"知识和技能的传播不再受限于时间和空间的限制。通过互联网，人们可以通过在线教育平台、博客、社交媒体等途径分享自己的知识和经验。知识阶级通过生产和传播知识，可以影响更多的人，改变他们的思维和行为。而这种影响力和创造力也成为了他们获取经济回报和财富的来源。\",\"在信息时代，拥有知识和技能的人们可以通过多种方式实现财富创造。可以利用自己的专业知识开设在线课程，向他人传授知识并获得收入。可以创造有价值的内容，通过广告、赞助和销售等方式获得收益。可以利用技术和创新，开发出具有商业价值的软件、应用和服务，实现商业成功。\",\"与传统的生产资料相比，知识和技能具有更大的弹性和增值潜力。知识可以不断积累和更新，通过学习和实践不断提升自己的能力。而这种能力的提升将进一步增加他们在知识经济中的竞争力和市场价值。\",\"但是等等，我们先从这些宏大叙事中跳出来，再仔细想想，不论什么时代，有没有什么生产资料一直没有变，而且会变得越来越重要？对，就是时间。信息知识时代，最重要的依然是时间，积累知识更新知识都需要大量时间。\",\"时间是不变的生产资料。\",\"在信息时代，我们面临着大量的信息和知识资源，但如何高效地利用这些资源，取决于我们对时间的管理和运用。拥有知识和技能的人们需要花费大量的时间来学习、研究和实践，以不断积累和更新自己的知识。他们需要投入时间来生产有价值的内容，通过各种渠道传播自己的观点和经验。他们需要投入时间来建立和维护自己的品牌和影响力。\",\"同时，时间的管理也是财富创造的关键。在信息时代，我们面临着诸多选择和干扰，需要学会有效地管理时间，将注意力集中在最重要和有价值的事情上。通过高效地规划和安排时间，我们可以提高工作效率，增加学习成果，并在竞争激烈的市场中取得成功。\",\"正如李笑来所说：无论是过去、现在还是未来，时间都是关键的生产资料。\"]},\"647\":{\"h\":\"误解\",\"t\":[\"那既然时间是最重要的生产资料了，我们将时间用在哪些地方最合适呢？\",\"当下产生一种误解，是互联网中的无用信息才可以变现。\",\"在信息时代，信息可以分为两类：可以生产的信息和无法生产的信息。那些无法生产的信息被称为无用信息，而互联网上充斥着大量的无用信息。然而，如果没有收益，就没有人会不断尝试生产这些无用信息。这就产生了卖广告的商业模式，通过吸引大多数人的注意力来赚取广告费。即使是无用信息，只要有足够多的消费者，也可以实现信息的生产。\",\"另一方面，可以生产的信息是指知识。通过掌握基础知识，我们可以进一步掌握其他知识。例如，学会加减法后可以学习乘除法，学会简单的编程知识后可以开发出节省时间的工具。生产知识可以采用另一种商业模式，即销售知识，通过生产知识来卖课。\",\"从赚钱的角度来看，卖课和卖广告都可以获得收益。然而，深入思考后你会发现，卖广告面临明显的天花板，因为可收割的注意力是有限的。从长远来看，这是一个红海市场，尽管现在看起来仍然有很多人在这个领域。\",\"那么卖课的商业模式究竟有什么优势呢？首先，你必须明白一个关键点，那就是卖课就是卖知识。这是最关键的一点。卖课就意味着销售知识。因此，卖课的人首先需要能够生产知识或传授知识。通过传授知识，他们可以影响更多的人接受知识，同时通过教授知识的过程也可以进一步学习和创造更多的知识。\",\"进一步思考，是什么让我们能够坐在家里，享受空调，观看远在美国拍摄的影片？答案是知识。没有知识，我们可能还像野外的猴狲一样只能吃桃子。而且，知识也可以作为一种资产，并且这种资产是可增值的。\",\"目前，很少有人提到知识作为一种资产的论调，也很少有人注意到知识可以改变人的观念从而改变人的行为。然而，在信息时代，知识的重要性不容忽视。它不仅可以成为我们个人的财富，还可以推动社会的进步。\"]},\"648\":{\"h\":\"误区\",\"t\":[\"很多人对上述提到的不屑一顾，根本原因是当前我们的时代仍然是工业社会的末尾阶段，即知识是仍是成为重要生产资料的早期阶段，换句话说资本仍然还是我们社会的主导。我们当中90%的人仍然是处于工作循环中的。\",\"等等，工作循环是什么？\",\"虽然数字技术正在被用来吸引我们越来越多的注意力，但我们还在考虑当下大部分注意力集中在什么地方。毫不奇怪，由于我们刚开始摆脱它，因此人类的大部分注意力都在工业活动上，尤其是劳动和消费，也就是工作循环上。\",\"深入思考劳动是很困难的，因为过去几个世纪我们已经明确了就业对经济和个人尊严都是必不可少的。从生产角度出发，如果你想生产产品和服务，就需要一系列的投入，包括人力、机器、原材料。\",\"今天的世界上，大多数人出卖劳动力来获取工资获得回报，他们用于购买智能手机、书籍、工具，他们还会购买律师、医生等协助。\",\"出售这些商品的大多数人反过来被雇佣，这意味着他们也是出卖劳动获取回报。\",\"工作循环与竞争激烈的商品和服务市场相结合，效果非常好，企业要么使用债务要么使用股权来开办新企业并以通常超过老企业的工资雇佣员工从而提高员工的购买力从而进一步推动创新。就扩大经济生产和解决市场问题而言，这是一个良性循环。\",\"如今这种工作循环有很多问题，一个是吸引了大多数的注意力，其次当事物收缩时，两个相互增强的作用会作用于另一个方向。\",\"以一个小镇为例，当地商店提供一些就业机会。如果一家大型超市进城，零售业的总就业人数和工资都会下降。有收入的店员越来越少，有收入的人也越来越少。如果他们开始减少在理发和汽车维修上的花费，那么发型师和汽车修理工的收入就会减少，他们自己的之处也会减少，等等。\",\"今天大部分的消费都是花在广告上的巨额资金和媒体曝光驱动的，这回让人们进行位置消费例如，比邻居更大的汽车。这些较高的支出水平又会反过来将人们锁定在他们讨厌的工作上无法离开，这样解释了律师和银行家等收入较高的专业人士的沮丧情绪。\",\"换句话说，曾经的良性循环变为了恶性循环，吸引了很多人的注意力。这是一个紧迫的问题，因为一段时间以来，由于劳资关系的变化，工作循环变得更加恶性。\",\"《后资本时代》解释了原因，随着美国经济的增长，劳动力占国内生产总值的份额以同样的速度增长。然而，从二十世纪七十年代中期开始，GDP继续增长而家庭收入保持不变。这段停滞不前的时期，尤其是从20世纪80年代中期开始，GDP增长由消费者举债提供资金，直到我们到达了家庭债务可承受的极限。真正推动这一点的是美国房地产泡沫的破灭，有些这句表明由于COVID-19危机导致失业率急剧上升，我们现在正在触及另一个这样的点。\",\"资本主义是如此成功，以至于中国这种理论上的社会主义国家都接受了它，但是它无法解决注意力稀缺问题，更重要的东西总不会明码标价。\",\"我们现在拥有的一切没有知识，都将变得不可能，例如你现在正在使用的手机，电脑。知识让人类克服了看似无法逾越的进步障碍。想想未来，知识可以让我们做什么，我们可能会摆脱对化石燃料的依赖，治愈任何疾病，前往其他太阳系的行星，最终我们可能去星空旅行。\",\"最终我能想象到的可能是：知识循环会替代工作循环。\"]},\"649\":{\"h\":\"知识循环\",\"t\":[\"知识已经使一些非凡的事情成为可能：通过工业时代的创新，我们原则上可以满足每个人的需求。但是我们必须生产更多的知识来解决我们在此过程中遇到的问题，例如气候危机。\",\"新知识不会从真空中完全形成。相反它通过我们所说的知识循环中出现的，在这个循环中，有人学习了一些东西并创造了一些新东西，然后将其共享并反过来作为更多学习的基础。\",\"数字技术，它以零边际成本将全人类连接到知识循环中，并允许机器本身参与其中。人们很容易低估数字技术进一步加速和扩大知识循环访问方面的潜力。\",\"这也是OpenAI创始人山姆奥特曼说未来生产力成本降低为0，意思是信息的生产成本将大幅度减低。\",\"最后对这篇文章做一个总结：\",\"首先我们探讨了资产阶级和生产资料的概念，并关注了时间作为关键的生产资料。回顾了狩猎文明、农耕文明和工业文明等不同阶段的生产资料，指出时间在过去的时代中并不是最重要的生产资料，但随着时间推移，人类生产力的变革所需的时间越来越短。\",\"进入信息时代后，知识成为了新的核心生产资料。知识阶级作为新时代的统治者，通过生产和传播知识来影响和改变人们的思维和行为，并从中获取经济回报和财富。拥有知识和技能的人们可以通过多种方式实现财富创造，包括开设在线课程、创造有价值的内容以及开发商业化的软件和应用等。\",\"然后我们要正确理解信息时代的商业模式。虽然互联网上存在大量的无用信息，但这些信息依然可以通过卖广告的方式实现商业化。然而，卖课作为一种销售知识的商业模式更具优势，因为知识是最关键的一点。通过传授知识，影响更多的人，进一步学习和创造知识，而且知识可以作为一种资产并且具有增值潜力。\",\"时间作为不变的生产资料在信息时代依然至关重要，并且强调时间的管理和运用对于高效利用信息和知识资源以及财富创造的重要性。要在竞争激烈的市场中取得成功，需要学会有效地管理时间、提高工作效率和集中注意力在最重要和有价值的事情上。\",\"最后，指出当前仍然处于工业社会末尾阶段，知识作为重要生产资料的认知还不普遍。大多数人仍然处于工作循环中，将注意力集中在劳动和消费上。过渡到知识型社会对认知，会促使一个人的观念发生改变，从而促使一个人的行为发生改变。\"]},\"650\":{\"c\":[\"thinking\"]},\"651\":{\"c\":[\"thinking\",\"write\"]},\"652\":{\"h\":\"关于认知的一切\"},\"653\":{\"h\":\"认知意味着什么？\",\"t\":[\"首先认知和知道之间有什么区别吗？\",\"知道意味着明白了正确答案。但是认知意味着意识到自己已经拥有了它。\",\"可能需要了解许多细节、复杂的原则和过程中的各个步骤。\",\"认知也通常意味着其他事情——有能力表达知道什么和我们如何得到它。但是事情并非总是如此，有时候我们无法用文字表述我们所拥有的知识，我们最多只能说”我知道，仅此而已“。但是这种回答很软弱无力，这样很难检验我们的知识是否正确。\",\"有一些大众所认为的”共同的知识“，也就是大众认为的：\",\"女人比个男人更有抚育特质。\",\"发泄愤怒的效果是减弱它，并使我们的感觉好些。\",\"雇主从其他国家进口非熟练劳动力，为的是省钱。\",\"你是否也对这些大众习以为常的认识赞同？让我们仔细审视每一条\",\"芭芭拉·里斯曼（Barbara Risman）对这一看法感到好奇，决定进一步研究它。她的发现结果挑战了这个传统智慧。显然，承担照料孩子和年迈父母责任的男人显示出同样的抚育特质，而这个特质通常与女人联系在一起。她的结论是，这些特质与人的性别一样取决于人在生活中的角色。\",\"传统智慧再次出错。在重新考察了关于愤怒的证据后，卡罗尔·塔佛瑞斯（Carol Tavris）断定：“关于发泄愤怒的心理学原理经受不住实验的仔细考验。对证据的权衡清晰地表明了相反的情形：表达愤怒使你更加愤怒，强化了愤怒的态度，并形成一种敌视习惯。如果你对暂时的愤怒保持冷静，并以一种愉快的活动分散你的注意力，直到你的愤怒平息下来，那你很可能会比加入到大叫大嚷的争吵中感觉更好，并且更快地感觉好起来。\",\"事实是，在许多情况下，当把运送劳工的费用也计入时，进口劳工的成本就高于使用国内劳工。例如，挑选更多的印度人而不是本地非洲人去修建东非的铁路。同样，选择的中国工人也超过殖民地的马来西亚人。在这两个案例中，用于输入工人的总成本是巨大的，但每个单位的工作成本因进口劳工的更多产出而较低 。在这些和许多其他的例子中，选择国外而非本地的劳工的主要原因在于外国劳工“比较勤奋、可靠、有技能或仔细。\",\"当人们对揭穿自己已有想法时，第一个映入脑海的想法往往是抵制。\",\"但是长达几个世纪里，传统的认识都主张重的东西比轻的东西下落速度更快，以及人们的意识所在地是大脑而不是心脏。\"]},\"654\":{\"h\":\"我们是如何知道的？\",\"t\":[\"我们是通过主动、被动的方式获取知识，我们通知直接经验，通过检验和论证或者通过推理主动地获取知识。当借助推理时，我们分析问题，考虑所有事实和可能的解释，并得到结论。\",\"我们通过其他人地告知而被动地获得知识。在课堂上学习，从短视频中大部分都是被动学习。我们受被动学习所制约，问题是被动学习具有严重缺陷。它使我们易于非批判地接受被告知的事，甚至当告诉我们的只是些传闻和谣言的时候也是如此。\",\"你肯定听说过谣言游戏，一开始是某个人写下某个信息不让某人看到，然后另一个人将这个消息逐字逐句地表达给另一个人…最后一个人得到的信息往往与最开始的信息有巨大的改变。但这就是我们日常生活中的事情。甚至知识领域也不例外，一位作者陈述的观点可能被另外一名作者重新表述为一个事实，他又可能被另一位作者作为权威来引用；这个过程可能会无限地继续下去，除非有人怀疑最初作者作为其观点依据的事实或质疑他对这些事实所作的解释。”\"]},\"655\":{\"h\":\"为什么认知是困难的\",\"t\":[\"认知困难的原因之一在于未解决的老问题继续抵制解决。\",\"另一个原因是每天新发生的情况无先例可寻。\",\"认知困难还有另一个原因，在世代传承时，知识经常被遗忘或被不明智地拒绝。\",\"即使是拥有最复杂测试工具的权威也未能用这些工具达到认知的确定无疑\"]},\"656\":{\"h\":\"信仰是一种形式的知识吗\",\"t\":[\"知识和宗教信仰之间的关系非常微妙，宗教信仰的意思是对不能证明的事物的信仰。\",\"这不是说宗教信仰不是真实的，而是说真实性不能被确定。\"]},\"657\":{\"h\":\"知识的障碍\",\"t\":[\"妨碍知识的习惯：设定和猜想。\",\"设定扼杀了我们的好奇心，而猜想拒绝了证据的重要性，所以它们都不能通往知识。最可靠的方式就是直接说明自己对某事采取怀疑态度。说明态度的时候尽可能说在我看来、我认为而不是我知道。重要的是这样相当于向人们坦然自己的无知，承认自己不知道某事。这些不是缺点而是优点。承认无知是通往知识关键的第一步。\",\"当然承认自己的无知并不是\",\"这是否意味着你应当是无主见的，并对你说的每件事都加上也许和大概？这是否意味着要成为一名批判的思考者，你必须抛弃信念？对这两个问题的答案是加着重号的不！ 这仅仅意味着你应当恰如其分地评估有把握的、大胆的陈述，以便为证据允许时的情况留下余地。\",\"应当这样来高度评估你的信念，以至只在你有足够知识这样做时才接受这些信念，并在学术真诚需要时修改它们。\"]},\"658\":{\"c\":[\"thinking\"]},\"659\":{\"c\":[\"thinking\",\"write\"]},\"660\":{\"h\":\"迁移博客\",\"t\":[\"在这整理博客内容的时候，需要不断去整理之前的内容，我发现我的内容大部分是给我自己看的，其他人看了很难看懂，我仔细思考了这个问题，发现这个原因是我自己造成的。换句话说，我曾经写的文章其实不能够叫做文章，而应该叫做笔记——仅仅只给自己看的笔记。\",\"最近半个星期重新用vite的vuepress做了个博客，整理了一下之前的博客内容就放上去了。\",\"在这整理博客内容的时候，需要不断去整理之前的内容，我发现我的内容大部分是给我自己看的，其他人看了很难看懂，我仔细思考了这个问题，发现这个原因是我自己造成的。换句话说，我曾经写的文章其实不能够叫做文章，而应该叫做笔记——仅仅只给自己看的笔记。\",\"我们上学期间也一定自己亲手做笔记，自己亲手做的笔记很大程度上是为了之后自己复习的，而不是公开出去给其他人看的。这样就导致一个问题，通过自我欺骗将自己的笔记包装成文章，得不到读者的认可。这是一个关键，倘若自己记笔记，那干脆就自己写好了，如果要公开，就靠考虑读者读到文章所能获得的价值，如果一篇文章全是以自己的理解、自己的实践为主导，很容易劝退读者，所以我决定以后写文章而不是自己给自己写随笔或者笔记。就算要先记笔记，之后有空时也要将笔记整理为可公开的文章。\",\"第二个是，我发现我曾经写的文章很少，或许是曾经大部分时间都在自己探索，但不以输出为目的的探索，那这探索所需的时间终究会散落在各处。这段时间我几乎每天为了写文章都会有各种奇奇怪怪想要输出的内容，我写了go语言常见的包的使用、go的底层、grpc的使用，写了自己这段时间对时间、对自我的思考，提练了时间对每个人的意义。为了写这些内容，我每天需要绞尽脑汁去思考，明天我应该写一些什么。我需要思考，如何将输出的内容规模化、组织化起来。如何整理自己的思绪，让自己的思绪可以体系化、逻辑化，如何将自己读到的，学到的内容输出。人们常说养成一个习惯需要21天，我是从2023-5-23开始，今天是6-14，好像正好是21天。我还准备写一个打卡程序，将每日写文章变成一个我的必须项。每日思考自己的收获，分享出去是一种对人很有考验的做法，我希望将这个习惯延续下去。\",\"第三个是，搬迁博客的扯淡成本，我在2021年的时候搬迁了好几次博客，每次都不满意，我甚至想自己写一套博客程序出来，但是几次考虑到我写css的审美，就放弃了这个想法。搬迁好几次博客让我想到一件事情，就是博客只是记录自己想法、自己思考的地方，美观的博客固然重要，但有没有更重要的事情呢？当然有，那就是内容。有机会你可以去看看《黑客与画家》的作者的博客，说实话，已经不能用丑来解释了，完全就不应该当作一个网站…但是即使这么丑的网站，每天的人流量却很多，每篇文章的信息价值量比10000条推文加起来都多。所以最重要的其实是内容，所以换句话说，我不需要绞尽脑汁用一个完全符合我想法的博客系统，我应该以内容质量为导向，如果我的内容质量高，那么即使博客很丑也不影响我的读者。\",\"以上就是我完成搬迁博客的想法。\"]},\"661\":{\"c\":[\"thinking\"]},\"662\":{\"c\":[\"thinking\",\"write\"]},\"663\":{\"h\":\"极简主义创业者 第一章总结\",\"t\":[\"先成为创作者然后再是创业者，你需要找到自己理想的客户，然后不断地缩小范围，然后明确他们的痛点，明确他们愿意为此付出多少钱，接着设置一个严格的时间表，专心设计方案，然后收取费用，不断重复这个过程，然后围绕其扩大经营。\",\"如果你想建立一家公司，你的第一步还是想着如何去寻找风险投资，去竭尽全力先烧钱占领市场再创业吗？当然目前也是有很多创业是这样的。但是往往有别的生意不需要依靠这样的道路走下去，极简主义创业就是这样。极简主义创业的核心是以持续盈利为目的，最好一开始在投入一些早期成本就迅速盈利，接着可以让生意不断地做下去。这里的关键是通过盈利就可以持续发展。\",\"持续发展的力量与另一种创业完全不同，即使是目前很多公司也没有盈利，即使很出名比如Bilibili，滴滴等，这些已经在行业内几乎垄断的公司长期以来都没有盈利，所以它们的经营过程就像是在水里扑腾，直到有下一轮融资进来才得以舒缓。\",\"持续发展的首要目的就是在一开始获得盈利，即使很少，但只要可以经营下去，就可以获取不断的力量。不断经营下去的动力来自于社区，即你要经营你自己，你可以为你自己做背书，这样认识你的粉丝中就会有不少人相信你而愿意作为你的客户。\",\"通常情况下，创业公司成为独角兽的概率是非常低的，概率可能1%都不到，这也就意味着说，可能只有5%的创业公司能够持续盈利下去，极简主义创业者不会是这样，极简主义创业者不会这样做极小概率可以成功的事情，极简主义创业者首要考虑目标就是盈利。\",\"先成为创作者然后再是创业者，你需要找到自己理想的客户，然后不断地缩小范围，然后明确他们的痛点，明确他们愿意为此付出多少钱，接着设置一个严格的时间表，专心设计方案，然后收取费用，不断重复这个过程，然后围绕其扩大经营。\",\"这样的步骤本书后面的部分会详细说明。\",\"总结：\",\"你不应该先学习，再开始，而是应该先开始再学习。\",\"以盈利为首要目的而不是扩张\",\"学会做生意，为你所关心的人群提供解决问题的方式，然后你也可以因此赚钱\",\"先成为一个创作者然后再是创业者\"]},\"664\":{\"c\":[\"thinking\"]},\"665\":{\"c\":[\"thinking\",\"write\",\"book\"]},\"666\":{\"h\":\"被看法所影响\",\"t\":[\"有一句话被广为流传叫，选择决定命运。\",\"我总觉得这句话有点以偏概全，一方面选择确实可以决定命运，另一方面一些小选择对命运好像也影响不大，今天下午选择吃什么饭这种选择几乎对命运没什么影响。\",\"一个人的命运其实是由无数个重大选择决定的，那我们要看背后关键的一点是，究竟是什么决定了我们的选择。\",\"答案是价值观，一个人的价值观决定了一个人的选择质量，价值观决定了命运。我们总说每个人的价值观不一样，要尊重他人的价值观。但我们又对我们命运感到无奈，这一方面既然每个人都对自己的命运有高低上下的感受之分，那就说明每个人的价值观有高低上下之分。\"]},\"667\":{\"c\":[\"thinking\"]},\"668\":{\"c\":[\"thinking\",\"write\"]},\"669\":{\"h\":\"我的书单\",\"t\":[\"这里存放着我这一段时间以来推荐的书籍，不定期更新..\",\"《上海交通大学生存指南》《东南大学学生生存指南》了解后就明白这是大学生里罕见的生存指南指南书，《东南大学生存指南》\",\"《后资本时代》 IP课里面的第三场直播是从工业时代走向认知时代，这本书里面的核心论点就是资本时代的结束、认知时代的开始，并且认真分析了未来如何做才能赢，但是这本书还没有中文版，我是直接看的英文版的\",\"《繁荣与停滞》这本书是最近才读的，一定程度上中国目前的经济和日本1995年很像，这是日本经济失去的20年的开始….\",\"《黑客与画家》 这是一本由程序员写的书，但是非程序员也可以读，作者的认知和财富思维高度绝对是人类历史上罕见的，即使是20年后再读思维也丝毫不过时，作者也是全球著名的创业孵化机构YC的创始人\",\"《中县干部》这是北大博士冯军旗的论文，读完就对中国社会结构有了大致清晰的了解，同时你也意识到了冯博士上的才是北大\",\"《超越感觉——批判思考指南》独立思考指南\",\"首先是按照作者划分\",\"李笑来\",\"李笑来的所有书都值得认真去读，我之前在知乎上看到老王推荐过李笑来的书，我过去三年里不断读李笑来的书，里面孕育着生活的智慧，以及如何一步步财富自由，《定投改变命运》是一本书中给了你赚钱的方法，只要你愿意做就一定能赚钱，至少我赚到了属于时间的钱…\",\"《自学是门手艺》这本书读完，你不进学会了如何自学，你还顺带学会了Python编程….\",\"《重生——七年就是一辈子》\",\"《财富自由之路》\",\"《把时间当作朋友》\",\"《定投改变命运——大佬的自我修养》作为大佬，请学会像资产阶级一样思考问题\",\"《微信互联网平民创业》\",\"瑞达里奥\",\"第一本书是达里奥在过去40年走向成功的总结，达里奥出生是一个普通家庭，但是目前成长为一家全球最大的对冲基金的创始人，他的原则思维一定程度上概括了他的核心思维。\",\"《原则》\",\"《原则II》\",\"《债务危机》\",\"塔勒布 四部曲\",\"塔勒布是这个世界上极度聪明的人，我认为他的聪明程度是以亿分之一衡量的，他不仅仅是一个学者，而且他还通过他的知识财富自由。一个学者能够通过自己的知识财富自由是很难得的，而且他还有一座属于自己的图书馆…\",\"《随机漫步的傻瓜》\",\"《黑天鹅》\",\"《反脆弱》\",\"《非对称风险》\",\"自我成长类\",\"《财务自由之路 III卷》\",\"《穷爸爸富爸爸》\",\"《自控力》\",\"《纳瓦尔宝典》\",\"《成为黑马》\",\"《未来呼啸而来》未来十年出现的科技进步场景\",\"《奔跑吧程序员》这里面列举了程序员的入门、成长、创业等，很适合一开始就读\",\"《围城》\",\"《本能——我们为什么管不住自己》\",\"《投资最重要的事》\",\"《少有人走的路》\",\"《区块链投资笔记——老猫》\",\"《动物农场》\",\"《成长的边界》\",\"《奇特的一生》\"]},\"670\":{\"h\":\"计算机技术\",\"t\":[\"《计算机网络》\",\"《操作系统导论》\",\"《数据库原理》\",\"《代码随想录》\",\"《算法4》\",\"《Go语言程序设计》\",\"……\"]},\"671\":{\"c\":[\"thinking\"]},\"672\":{\"c\":[\"thinking\",\"write\",\"book\"]},\"673\":{\"h\":\"《不公平优势》总结\",\"t\":[\"有时候一个概念不清楚，很容易导致我们对这个世界的理解有所偏差，但如果这个世界上广为流传的词被大众理解偏差了，就会导致群体理解偏差，于是就会导致各种社会问题。\",\"相关信息\",\"有时候一个概念不清楚，很容易导致我们对这个世界的理解有所偏差，但如果这个世界上广为流传的词被大众理解偏差了，就会导致群体理解偏差，于是就会导致各种社会问题。\",\"比如说人人生而平等这个词。人人生而平等起初来自于《美国独立宣言》，并且做了详细的解释：人人在生命、自由和追求幸福的权利上平等。\",\"人家可没说在所有方面都平等，于是对这个断章取义的概念理解有所偏差就会导致各种心理不平衡。你看想清楚一个概念很重要吧？重要的是对这个概念有清楚明白的理解后就不会有由于这个概念所导致的心理不平衡，毕竟自己的感觉可是实实在在的。\",\"不过我们主要是总结《不公平优势》的，所以打住，说起不公平优势，绝大多数人的第一想法都是愤愤不平，凭什么不公平还可以当作优势了。\",\"不过本书主要谈论的是创业领域的不公平优势，拥有某些方面的优势却是可以让创业成功的概率显著提升，这个你应该不会反对了吧？本书就是对这里的某些方面做一些总结，说说为什么这些方面优势会让创业更加简单，以及如何在这些方面有所积累。\",\"提示\",\"说起比尔盖茨、扎克伯格、马化腾这些创业成功的人，你能举出哪些他们可以成功的理由？他们当然都很聪明，而且在计算机编程领域有着绝对的专长，并且在恰当的时间做着恰当的创业并且成功了。\",\"他们有的品质，有的资本，有的时间等等这些品质都被本书总结出一个框架叫做MILES框架（Money、Intelligence and Insight、Location and Lock、Education and Expertise、Status）\",\"金钱是你已经有的资本，或者可以轻易筹集到的资本，比如musk当时收购twitter，就可以通过抵押股票，公开募集资本来收购。\",\"智力和洞察力包括书本智力，社交情感智力和创造力。\",\"位置和运气，是指在正确的时间出现在正确的地点。\",\"教育和专长包括接收正规学校教育和自学得到的知识和技术。\",\"地位是指社会地位，包括社交网络，这是一个人的个人品牌。换句话说这代表了大家如何看你。\",\"这里需要提前说明的是，并不是要具备这些所有不公平优势才可以成功，最佳策略是选择合作伙伴的时候选择的对象拥有你没有的不公平优势，从而形成优势互补。所有这些不公平优势的基础都是思维模式，对于我们来说，思维模式更容易受我们自己掌控而去更容易受我们影响。\",\"大家谈论最多的不公平优势就是金钱，仿佛又了金钱就可以创业成功，但是显然金钱不是唯一的理由，不然怎么解释那么多富二代创业失败的呢？也有白手起家的世界首富musk。\",\"当然仅仅知道什么是不公平优势是绝对不够的，真正重要的是发现自己具备什么样的不公平优势以及自己如何培养起自己的不公平优势。MIELES会提供这方面的指导，当我们研究自己具备哪些不公平优势的时候，我们需要研究自己思维模式，因为思维模式是这些所有的基础。\"]},\"674\":{\"h\":\"成长型思维模式\",\"t\":[\"有两种思维模式我们需要事先了解，就是固守型和成长型，固守型的思维模式会认定自己只能是这样，自己在某些领域有与生俱来的天赋，可以顺利完成某些工作，而在其他领域则毫无天赋，于是在没有天赋的领域将一事无成，这种非黑即白的思维方式往往会阻碍他们的发展。对于固守型思维的人来说失败会让自己无法面对周围的人，他们会选择逃避。\",\"但是成长型思维的人相信生活总是在变化，相信人是可以通过花费时间和精力去提升自己某一方面的能力，成长型思维的人可以高度概括为六个字：“但是未来我能”。“我还不会写代码，但是未来我能”。“我还不会写商业规划书，但是未来我能”，“我还没有找到合伙人，但是未来我能”。这六个字可以将我们提示到全新的层次。\",\"但是有些目标是无法实现的，比如“我不是第一个去火星的，但是未来我能”，成长型思维的缺陷是它忽略了一些人已有的不公平优势。比如未来第一个去火星的可能现在正在接受宇航员的训练。\",\"“一切皆有可能“需要接受现实主义的元素，我们需要将过程为导向定义成功，那么我们就可以将注意力放在采取行动和享受生活上，这样我们就会关注内心的满足感而不是只注重可量化的金钱方面的成功。\",\"所以“现实-成长型思维”可能更适合我们，即有能力接受已有的硬性限制，同事相信凡事皆有可能。这两种对立的观点需要同时存在于我们的大脑中，我们需要在需要的时候用正确的角度看待问题，即我承认现在的我可能不行，但是如果不是不可逾越的障碍的话，那么我通过自己的努力付出时间和精力，是可以越过去的。我们需要脚踏实地并且专注梦想。\",\"强大的现实-成长型思维有的四个特征\",\"远见，远见是所有强大思维模式最重要的特征，远见可以翻译为，拥有穿透时间的力量，清晰地看到遥远的未来，这种能力是需要精确的构想和设定目标，虽然拉里佩奇在创业之初并没有远大的愿景，但是他们看到了自己事业的潜力，。一个有远见的人如同一个先知，说出未知事物并将其实现，有远见的人可以看到自己想创造的未来。\",\"足智多谋，企业家是能够纵深跳下悬崖并在下坠过程中组装成一架飞机的人。当我们投身创业时经常会踏入前人未曾涉足的领域，这里需要打破过去的惯例，并且在打破惯例时需要以全新的视角审视自己的公司，关键要对于自己提出的解决方案有信心。\",\"终身学习，我们这个时代是一个半年就有个小技术突破的时代，技术进步的曲线变得越来越陡峭，技术的发展在不断加快，人工智能、区块链、机器人、自动驾驶，这些都将彻底改变世界的面目，显而易见，世界属于那些能不断学习成长的人。\",\"勇气和毅力，勇气是唯一不可伪造的美德，一个人有勇气/没有勇气是无法装出来的，因为选择会决定一个人是否拥有真正的勇气。前进的道路会遇到各种陷阱，障碍，没有勇气和毅力创业公司几乎无法生存。\",\"之后是两种类型的创业公司，生活方式型创业公司，即一开始不需要投入大量资本就可以进行的公司，这类公司重要的一般是客户需求。投资人一般不会对生活方式型创业感兴趣，因为这意味着收获需要等许久之后。第二种是超高速增长型创业公司，这类公司需要一开始就占据市场，这方面可以说是投资人比较感兴趣的，因为在这里投资人可以收获丰厚。\",\"选择哪种公司没有对错，重要的是对自己的选择负责。\",\"在寻找合伙人时，尽可能选择和自己的优势互补的合伙人，尽可能满足MIELES，以便在各方面都可互补，木桶理论。\",\"后面就是业务，尽可能去做MVP，最小可行产品，尽可能去获得初始用户。\",\"融资，融资演讲需要创始人的电子以及演讲水平，这对于融资是非常重要的。\",\"这本书讲的是创业公司的不公平优势，以及如果我们要建立自己的创业公司，我们又该如何积累自己的不公平优势。让自己的创业公司尽可能可以活下去。不仅仅是创业，生活中的其他方面也可以进行不公平优势的积累，比如求职、寻找伴侣、甚至是自学都可以积累不公平优势。\"]},\"675\":{\"c\":[\"thinking\"]},\"676\":{\"c\":[\"thinking\",\"write\",\"book\"]},\"677\":{\"h\":\"人人都是时间上的资产阶级\",\"t\":[\"相关信息\",\"你有没有想过、什么是资产阶级？关于资产阶级，Wiki上的定义是：拥有生产资料的人。而生产资料是什么？生产资料是劳动者进行生产所需要的原材料。\",\"比如你要盖一栋房子吧？那你需要人力，物力，财力等等，这些就是生产资料。\",\"比如一座工厂：工厂的机器设备、生产线等就是生产资料，可以让商品能够被大规模生产和加工。\",\"又比如说农田：在农业社会中，土地是生产粮食和农产品的生产资料。农民可以在土地之上来进行耕种和收获。\",\"但是这些都缺少一个最关键因素就是时间，不论生产什么最重要的都是时间，比如你盖一栋房子是需要时间的，工厂想要生产商品也是需要时间的，农田就更不用说了，大多数人都没有考虑到时间这个因素。\",\"时间对于每个人都是公平的,不论是你巴菲特，还是街边卖唱的艺人又或是送外卖的小哥，在时间维度上都是一样的，至少从时间作为生产资料的维度上，人人都是时间上的资产阶级，这句话的意思是，我们的一小时在巴菲特那里也是一小时，我们的一小时在马斯克那里也是一小时。我们是可以选择利用我们最重要的生产资料时间的。\",\"但是在过去时间是生产资料并不受重视，原因是时间的的确确是生产资料，但远远不是最重要的生产资料。\",\"在过去，想种粮食种庄稼，一年里什么时候播种什么时候收麦子全得看老天爷的意思，老天爷发大水发大旱就只能接受。\",\"但是现在时代已经进步了，过去种庄稼的生产力已经被解放了，换句话说科技进步可以让更少的人在农业上的生产力更强，现在是信息社会了，我们的时间可以用来生产信息时代的生产资料信息。\",\"我们可以通过利用时间来获取、加工和传播信息，从而创造价值。比如，我们可以进行写文章、拍视频等，这些都是信息生产的过程。时间被用来进行研究、创作和交流，使得我们能够生产出各种形式的信息资料，满足人们在信息社会中的需求。\",\"当然有信息的生产者，自然也有信息的消费者。接下来，考虑一个问题：既然时间是我们最重要的生产资料，那么如何消费信息、如何消费有价值的信息，是不是也值得我们深思呢？\",\"有些信息可以引发我们的思考行动，让我们看待事物的方式发生改变，甚至还会帮助我们理解和吸收和运用更多有价值的信息，甚至可以让我们产生积累。\",\"而有些信息则是几乎没有衍生价值，比如某个明星又出什么事了，地球到底有多少水等等\",\"那么在同等的时间维度下选择消费信息，如何选择影响我们的信息就变的非常重要了，我有一个用了挺长时间的方法也推荐给你们。\",\"那就是尽量选择可以生产知识的信息去消费，消费信息的质量一定是可以选择的，一定是这样的，比如可以选择消费那些能够提升自己技能和知识的信息，这能够让我们更有价值地利用时间，扩展知识领域，也可以选择打磨一项技能，让自己更具备生产力，这就是我应对海量信息的一个方式。\"]},\"678\":{\"c\":[\"thinking\"]},\"679\":{\"c\":[\"thinking\",\"write\"]},\"680\":{\"h\":\"为什么要独立思考?\",\"t\":[\"独立思考不是来秀优越感的，让别人觉得你在秀优越感是让人最讨厌的特征，没有之一, 而我也并不想用独立思考能让人生更完善这种看起来比较虚的理由，相反，我关于为什么要独立思考的理由在现实生活当中是很功利的。\",\"现在你请先仔细思考一下这个社会上有多少的人根本不在乎未来，从来不思考未来的自己可能会是怎样的，他们只根据眼前的看到的信息来做一个仓促的、短期的结论，这也决定了说，当那个必然到来的未来一步一步逐渐展开的时候他们会对自己每一时刻的现状都感到不满，但是这个不满是谁造成的啊？\",\"肯定不是这个世界也不是这个社会，那是谁啊？是当时的自己不认真仔细考虑未来，缺乏独立思考能力造成的\",\"我就说说我认为最重要的理由，独立思考的对立面就是感觉。\",\"但是感觉往往并不靠谱，感觉是受当下看法的影响的，当下接受怎么样的信息，可能感觉就会偏向某一方面，比如看到一个主播在直播中使用过某样东西，那么你就会下意识认为这个东西可能会比较好，但真相其实可能不是这样的，他只是接了广告，当然我举这个例子并不是想说主播不应该接广告。\",\"而是说独立思考可以让你意识到这一点，在选择时尽量去抉择利弊，再做决策。\",\"相关信息\",\"这里的关键是未来的你可能因为现在错误的决策而后悔，那如果是高考志愿、工作选择、婚姻伴侣这种对人生都影响长远的选择呢？你需要站在未来去思考现在。\",\"换而言之独立思考可以在当下权衡各种利弊做出能让未来赢的决策，让你在未来不因为自己当时的错误认知而后悔，人生就是这样，做决策之前并不会有做决策之后的经验。\",\"就算在思考后做了各方面考虑做出了选择后悔了，那也是涨经验的后悔，也就是说下次思考做选择的时候可能会认真考虑更多的方面。\",\"所以如果想尽可能赢在未来，让未来的自己大概率不后悔，就要跳出当下自我感觉的局限，仔细去考虑当下所有的选择，判断当下能考虑的理由，拼命去思考如何做能让未来赢的决策。\",\"好了，以上我说服我自己一定要独立思考的理由，\",\"不过我想说一下上面的理由是以理服己的。也就是说我的理由是用来说服自己的，不是用来说服你们的，当然你可以质疑我的理由。\",\"《超越感觉》这本书中说独立思考的本质是评价，也就是检索各种主张和论据，判断哪些具有优缺点、不断去寻求答案去探究的过程。\",\"有多大比例的人压根不在乎未来，从来不思考未来可能会是怎样的\"]},\"681\":{\"c\":[\"thinking\"]},\"682\":{\"c\":[\"thinking\",\"write\"]},\"683\":{\"h\":\"正确比较\",\"t\":[\"提示\",\"比较是分主观的还是客观的。比如我今天穿的衣服比你的好看，因为这是主观比较，而每个人的审美不一样，所以也就没有好坏上下之分的，自然也就无法争辩了。\",\"但是客观思考则不同，客观思考是基于事实的比较。比如空气中氧气的是21%、氮气的占比是78%这就是无法辩驳的事实，这种比较是有意义的，基于事实的比较可以让我们分析出更多的信息。\",\"比如你需要比较几个选择哪个更好，那么就需要对选择的判断因素做权重分析。你正在选择购买一辆汽车，在你的选择中有两个品牌的一些车，那么你就需要先分析出你的判断因素，比如品牌，售后、充电桩分布、价格、最大车龄等等，然后对这些因素做一个权重大小的排序，比如价格占50%、售后占20%、售后服务占10%等等以此类推。然后接着你再分别为你目前的选择中的每辆车依据权重进行打分，再做出选择。那么这个选择就是根据事实进行比较，再进行客观分析进而进行选择。\",\"这样基于事实的比较信息就是有价值的。\",\"在独立思考中有一个谬误——主观上我的更好，\",\"我的鞋、衣服比你的好看，我的手机、电脑比你的好。你身边一定有出现过这种声音或者曾经出现过。心理学上专门有一个词叫乌比冈湖效应，指是一个人对自己的自我评价往往会高出自己的实际水平。\",\"这大概因为是每个人都无法坦然的面对自己处于平均水平线以下造成的。试着想一想如果你的身高在平均水平线以下，而且你每天都要面对这个事实，你有多痛苦你就明白了。所以大多数人对于这种自己可能处于平均水平以下的情况，往往是通过在记忆里扭曲事实来欺骗自己，让自己舒服一点的。\",\"但事实上每个人都肯定有一些方面处于平均水准以下，也有些处于平均水平线以上啊\",\"在主观上我的更好的这个思维谬误会扭曲我们的感知、让我们做出错误判断，我们在主观上越被扭曲我们的独立思考就更低效，虽然完美的客观我们可能做不到，但是我们可以尽量控制我们的思维进而尽量做到客观性，也就是说当我们意识到我们的思维里有（我的更好）的这个想法时，我们需要告诉自己可能自己与他人差不多，这样做就可以让我们尽量减少认知偏差，进而做出更合理的判断。\"]},\"684\":{\"c\":[\"thinking\"]},\"685\":{\"c\":[\"thinking\",\"write\"]},\"686\":{\"h\":\"我认为互联网最佳的商业模式\",\"t\":[\"时间是最重要的生产资料了，我们将时间用在哪些地方最合适呢？\",\"当下产生一种误解，是互联网中的无用信息才可以变现。\",\"在信息时代，信息可以分为两类：可以生产的信息和无法生产的信息。那些无法生产的信息被称为无用信息，而互联网上充斥着大量的无用信息。然而，如果没有收益，就没有人会不断尝试生产这些无用信息。这就产生了卖广告的商业模式，通过吸引大多数人的注意力来赚取广告费。即使是无用信息，只要有足够多的消费者，也可以实现信息的生产。\",\"另一方面，可以生产的信息是指知识。通过掌握基础知识，我们可以进一步掌握其他知识。例如，学会加减法后可以学习乘除法，学会简单的编程知识后可以开发出节省时间的工具。生产知识可以采用另一种商业模式，即销售知识，通过生产知识来卖课。\",\"从赚钱的角度来看，卖课和卖广告都可以获得收益。然而，深入思考后你会发现，卖广告面临明显的天花板，因为可收割的注意力是有限的。从长远来看，这是一个红海市场，尽管现在看起来仍然有很多人在这个领域。\",\"那么卖课的商业模式究竟有什么优势呢？首先，你必须明白一个关键点，那就是卖课就是卖知识。这是最关键的一点。卖课就意味着销售知识。因此，卖课的人首先需要能够生产知识或传授知识。通过传授知识，他们可以影响更多的人接受知识，同时通过教授知识的过程也可以进一步学习和创造更多的知识。\",\"进一步思考，是什么让我们能够坐在家里，享受空调，观看远在美国拍摄的影片？答案是知识。没有知识，我们可能还像野外的猴狲一样只能吃桃子。而且，知识也可以作为一种资产，并且这种资产是可增值的。\",\"目前，很少有人提到知识作为一种资产的论调，也很少有人注意到知识可以改变人的观念从而改变人的行为。然而，在信息时代，知识的重要性不容忽视。它不仅可以成为我们个人的财富，还可以推动社会的进步。\"]},\"687\":{\"c\":[\"thinking\"]},\"688\":{\"c\":[\"thinking\",\"write\"]},\"689\":{\"h\":\"点赞你认为对你有价值的视频\",\"t\":[\"人是很容易被反向塑造的，你平时跟什么样的人打交道，输入什么样的内容，那么你多多少少都会被影响的。同样是做销售，那卖奢饰品、卖豪车的和在街边摊的卖货的，反过来都会影响成不同的样子。\",\"所以你要一定要时刻要提醒自己不要被自己输入的内容、周遭的环境，反向影响成你本不应该成为的样子。出淤泥而不染的是莲花，不是人。\",\"很多人都认为是是短视频中影响自己让自己变得无法集中注意力的，这种说法也是对的，但其实你换个角度你就明白了， 算法推给你的短视频，一开始是你自己去影响算法的，换而言之是算法一开始可能并不会给人贴上标签，但是如果你喜欢看奶头乐，即使你不点赞不评论不转发，只要你在这类短视频上停留的时间足够长，那算法还是会认为你喜欢这类视频，于是就会源源不断推荐给你这样的内容。\",\"所以在对待会反向影响自己认知的事情上一定要重(chong)视。\",\"点赞给那些你认为有价值的视频上，其实就相当于告诉算法，我喜欢这些有价值有思想能可以让我成长的东西，把那些没营养没价值天天传播焦虑的视频都给我统统屏蔽掉。\",\"这样做的话，推荐给你的视频内容会开始慢慢变得有质量起来，这样即使你的时间是碎片时间，也有机会去通过短视频得到新的认知。\",\"最近几年，很多人都在讨论认知变现，其实认知这个东西你学到一点其实压根没什么用，你只是比别人强一点点，但是如果你的认知已经和其他人的差距拉的足够大，让这个差距足以形成一个认知差瀑布的时候，你的认知的价值才会真正体现出来。\"]},\"690\":{\"c\":[\"thinking\"]},\"691\":{\"c\":[\"thinking\",\"write\"]},\"692\":{\"h\":\"从另一个角度看AI的价值\",\"t\":[\"如果有一个人明目张胆站在你面前说你的回答错了，十有八九你的下意识反应一定是抵触。\",\"但是人工智能不一样，我在使用chatgpt的写代码、或者交流时候，几乎有一半的情况下它给出的都是错误答案，这还是我的对话有技巧的情况下。那么如果我发现了AI给出的代码是错误的，我怎么做呢？\",\"我会直接向他对话，你的回答的这里有问题，我认为可能的情况是...的。那么他会接着给出他的回答。\",\"这里先不讨论他给出的回答正确与否，我认为关键的是你可以直接向AI指出他的错误，并且他不会有任何人类的抵触情绪。试想一下当你的工作成果被人质疑，你能没有一点点抵触情绪还能接着继续寻找错误吗？我猜大概率是不能，至少我会有抵触情绪。\",\"至少目前而言，在直接交流沟通，直接表述问题上，人工智能不知道节省了多少沟通成本。\"]},\"693\":{\"c\":[\"thinking\"]},\"694\":{\"c\":[\"thinking\",\"write\"]},\"695\":{\"h\":\"节日应该做什么？\",\"t\":[\"这篇文章的题图是我在2022年10月4日时写的拍摄于山西工学院(原中北大学朔州校区)明学楼3楼18时的场景，当时我刚刚写完代码准备去学校的西餐厅吃饭。\",\"2021-10-03\",\"这是2021年10月3日时拍摄于山西工学院博学楼203。\",\"现在是2023年9月30日，已经是假期的第二天，我开始重新思考这个问题————节日到底应该做什么。\",\"过去两三年的不论长假还是小假期我基本都不会选择去某个地区玩一圈或者逛一圈，原因是我觉得不论玩得再开心，时间结束后依然要回到原先的生活轨迹，依然要保持曾经的状态，所以不如就像往常一样每天学习工作度过。\",\"现在我已经在七牛云实习了半年时间，不出意外节后的一段时间内就会转正。\",\"我现在重新思考这个问题，节日到底应该做什么？\",\"对于绝大多数人来说，节日就是来放假用来休息的。我却觉得休息如果只是躺在床上刷一天的手机，那还不如不放假，因为你真的躺在家里刷一天手机你就知道了...刷一天手机的感觉比认真工作一天还累，而且还会时不时觉得不应该这样堕落下去...\",\"那言归正传，节日究竟应该做什么呢？\",\"我有一个天然与绝大多数人不一样的看法。\",\"长远来看每个人都会死，但是有些人却依然存在。\",\"孔子、老子、牛顿这些人，他们其实并没有真正死去，他们留下来的东西一直在伴随着人类走下去，从这个角度来看他们的精神还活在我们每个记得他们的人的精神世界里。\",\"莫扎特其实并没有死去，他只是变成了音乐陪伴着这个世界。\",\"所以在我看来，节日应该是用来学习、工作提高自己生产率的。这也是为什么每周末、每次长假我都会选择认真学习一些知识...\"]},\"696\":{\"c\":[\"thinking\"]},\"697\":{\"c\":[\"thinking\",\"mixin\",\"crypto\"]},\"698\":{\"h\":\"闲逛的好处\",\"t\":[\"在我上大学期间，我经常会冒出各种项目想法，包括但不限于Betxin、Anyswap、Deep(深维)等，这些项目的出现给我带来了很多的收获，更多的是作为buidler的想法，思考如何做出用户愿意使用的产品是最为关键的。\",\"其中就不得不了闲逛的好处了，每当我在家乡小县城时，我经常会沿着小县城的环城公路骑行绕圈，更多的其实不是锻炼，而是放松身心。\",\"小县城的交通很便利，路上的汽车没有那么多，可以让我自由骑行，更多的是让心灵放松，我可以任何事情都不用思考，换句话说是让大脑随意思考。\",\"后来我了解到其实不止我一个人这样，像笑来经常也会在北京绕五环开车等等我认识的很多其他人也一样。\",\"大脑随意思考可以让两个毫无关系的神经元之间有可能自然交流，进而促进思想的碰撞，很多好玩的东西就是这么搞出来的。\",\"前提是知识储备足够，例如学习了CEX(中心化交易所)和DEX(去中心化交易所)的订单模型，以及区块链的概念，就可能基于此概念之上做出一些更加有趣的产品。\",\"例如Betxin就是这样做出来的，在此之上的话题构建中心化交易模型是非常有趣的，让话题订单可以作为一个交易对处于合约中运行可以很大程度保证交易的透明、公平性等等，这些都是自去中心化交易而来。\",\"Anyswap也是这样的想法，初步想法是综合所有平台的加密货币价格，进行套利，让用户可以用自己的加密货币进行套利交易，这样的套利模式可以让用户的加密货币价格更加合理，也更加有趣。\",\"Deep是部署在github pages上的应用，可以当做QiFM的替代品，让用户可以随时随地听到多个的轻音乐集合。\",\"神经不紧绷，让神经元自由连接可以让大脑中的想法越来越多。\",\"etc...\"]},\"699\":{\"c\":[\"thinking\"]},\"700\":{\"c\":[\"thinking\"]},\"701\":{\"h\":\"Not Your Keys, Not Your Coins\",\"t\":[\"本文翻译自Not Your Keys, Not Your Coins\",\"在区块链世界待久了，相信或多或少都听过这句话(Not Your Keys, Not Your Coins)，实际上的具体意思呢？\",\"“不是你的钥匙，不是你的硬币”基本上意味着如果你不把你的硬币放在你自己的钱包里，你知道助忆词（私钥），你就没有真正拥有你的coin。\",\"一般的想法是，您应该始终将加密货币提取到您自己控制的钱包中，而不是将它们留在交易所。\",\"当您将coin提取到钱包时，您拥有它们的私钥。一旦你的钱包里有coin，你就不必相信任何交易所。\",\"交易所被黑客攻击，rugpull/诈骗用户，以任何随机的理由将人们锁定在外，有时甚至在没有通知的情况下关闭。通过提取您的coin，您将所有这些与外汇相关的风险降至零。\"]},\"702\":{\"h\":\"为什么你应该提现你的coin\"},\"703\":{\"h\":\"1. 提现告诉你币确实存在\",\"t\":[\"假设您从某个交易所购买比特币。你怎么知道交易所实际上有比特币？\",\"交易所可能只是说您拥有一定数量的比特币，但实际上可能并没有这些比特币本身。该交易所可能只是为其所有用户进行模拟交易并收取佣金。\",\"事实上，一些经纪商和交易所被发现这样做了。当鲸鱼投资者“出售”他的代币并希望提取利润时，他会发现交易所实际上并没有他的钱。 （是的，有些人不知情，以至于他们通过股票经纪人“购买”加密货币——股票经纪人欺骗了他们。）\",\"有许多交易所因为这样或那样的原因走上了这条道路。例如，FTX 赌掉了自己的真币，然后在交易所向人们出售纸币（他们后来声称自己被“黑客攻击”，但事实证明这是一个谎言。）。\",\"真正知道你的比特币是否存在的唯一方法就是提取它。将其从交易所取出并放入您自己的钱包中。\",\"这就是你真正知道你的硬币存在的方式，而你不仅仅是网站上的一个数字。\",\"旁注：一些交易所将发布其加密货币余额的“审计”。这是一种洗眼和分散注意力的行为。如果交易所不允许您提取代币并告诉您他们将发布“储备证明” – 快跑。卖掉所有东西，提取你的钱，然后使用不同的交易所。如果交易所不允许您提取代币，请勿使用该交易所。\"]},\"704\":{\"h\":\"2. 交易所遭到黑客攻击\",\"t\":[\"不存在值得信赖的加密货币交易所\",\"持不同看法的人已经存在不久了。\",\"以下是遭受安全漏洞（又名“黑客攻击”和代币被盗）的一小部分交易所：\",\"Mt.Gox、BItcoin7、Bitcoinica、Picostocks、Flexcoin、Poloniex、Crypto RUsh、MintPal、Cryptsy、BItstamp、KipCoin、BTER、Bitfinex、ShapeShift、Yapizon、Coincheck、BitGrail、Coinrail、Bancor、Zaif、Coinbene、Bithumb、BITPoint、Upbit 、KuCoin、Liquid、BitMart、Deribit、GDAC、FTX……以及数百个。\",\"而且这个列表不包括与 DeFi 平台相关的黑客攻击（Fulcrum、bZx、Eminence、Harvest Finance、Pickle Finance、Paid Network 等——全部被黑客攻击）。\",\"当您将代币留在交易所时，您就相信该交易所不会被黑客攻击，其代币也不会被盗。\",\"他们一次又一次地遭到黑客攻击。\"]},\"705\":{\"h\":\"3. 创始人经常拉拢用户并窃取资金\",\"t\":[\"还有一些交易所虽然没有被黑客攻击，但其代币和资产却被创始人系统性地窃取。当然，他们后来声称自己遭到了黑客攻击，但通常他们只是自己偷钱（FTX 因这样做而很受欢迎）。\",\"有时，交易所会出于任何原因将您拒之门外。称其为等待 KYC，或“我们不再在您所在地区提供服务”或任何其他原因，或者只是开始要求您提供太多文件，例如您的出生证明。\",\"而你对此无能为力。\",\"当您将代币留在交易所时，您信任交易所的创始人和员工不会将您拒之门外或窃取您的代币。\",\"这是一个极大的风险，因为加密货币交易是不可逆转的——如果创始人窃取了你的代币，你将无能为力。你可以稍后起诉这些人，但你无法拿回硬币。\"]},\"706\":{\"h\":\"4. 交易所关闭、破产，然后消失——你的钱也随之消失\",\"t\":[\"==当您将硬币留在交易所时，您相信该交易所还在（持续经营假设）。==有时，交易所会在没有任何提示的情况下消失，并带走您的代币。\",\"这确实发生在我身上。我在一家名为 Trade Satoshi 的交易所拥有价值约 20 美元的山寨币。由于金额很小，所以我根本没有提现，也没有查看兑换情况。\",\"然后，当我打开它时——它不再存在了。它被关闭了，我失去了我持有的钱。\",\"永远永远永远不要这样做。\",\"如果交易所不允许您提取代币，这是一个巨大的危险信号，您根本不应该使用该交易所。\",\"以下是印度交易所 WazirX 遭到黑客攻击的故事：\",\"WazirX 是一个不允许提款的交易所，并且实际上强制您保留您的硬币。\",\"然后轰然——它被“黑客攻击”并损失了所有用户总资产的一半。没有人可以验证这是否真的是黑客行为还是内部人员所为。\",\"然后，交易所通过“社会化损失”策略迫使其用户为黑客行为付费，这实际上只是一堆废话。他们不是让交易所及其所有者承担失败的成本，而是强迫用户承担损失。\",\"即使是那些没有投资被盗代币的用户也被迫牺牲了大约 50% 的代币来投入“社会化损失”的胡言乱语中。\",\"交易所并没有损失任何东西——他们只是将所有损失推给了用户，并且仍然继续通过不允许加密货币提款来迫使他们保留代币。\",\"所有这些用户基本上没有真正的追索权，只能忍气吞声并承担损失。\",\"也就是说，将硬币保留在交易所上完全是用户的错（在这种情况下，使用的交易所甚至不允许取款）。\",\"永远不要犯这个错误。你被警告了。\"]},\"707\":{\"c\":[\"thinking\"]},\"708\":{\"c\":[\"coins\"]},\"709\":{\"h\":\"你真的有选择不用云吗？\",\"t\":[\"那不是云，那只是别人的计算机\",\"image.png\",\"与十五年前不同，现在云计算早已经融入大众的生活，你每天使用的微信、支付宝、淘宝、微博等应用都离不开云。\",\"流媒体提供商给你推送的短视频，文章等都是事先在云服务提供商的服务器上存储，通过大数据，CDN等服务经过精密的计算以目前能想到最快的速度传输到你的设备上。\",\"想象一下如果每次听歌都要事先下载音乐文件，每次刷视频都要事先经过网络下载好，相信没有多少人能够接受。\",\"是的，现在每个人都已经离不开云了，就像离开网络的手机已经没有多少人能够接受了一样；离开了云的网络设备也已经没有多少人能够接受了。\",\"这已经不是取舍的问题，而是是否有选择的问题。\",\"各大商业服务提供商，通过云+大数据的方式向大众提供各种方便的服务(音乐、视频、外卖、电商、社交、即时通信等)，并且分析人们使用自家应用的行为，通过数据挖掘，分析用户行为，说得好听美其名曰：\",\"提高用户体验\",\"事实上是抓取用户的每一分注意力...\",\"我无意去批判这样的行为，因为这是市场行为。\",\"我想谈论的的是你如果你真的是一名不想让自己所有数据都上云的人，你为不上云所付出的有什么？\"]},\"710\":{\"h\":\"不使用云，你需要付出什么\",\"t\":[\"我想通过一个我亲身的案例来说明不使用云，需要额外付出的代价。\",\"我之前使用的文档记录方案是Notion，后面陆陆续续也体验过AFFiNE、Obsidian、Anytype等，但当我想将我的数据都迁移到Anytype时，我遇到了一个需要做取舍的问题--即便利性与隐私性的取舍\",\"Anytype是一个主打local first、E2E Security、Open Code的产品，你的所有记录都优先在本地存储，免费用户默认有1GB的云加密空间存储。\",\"换句话说这个文档记录软件免费用户最多只能存储1GB的云端数据，超过了这个限制，你的数据就无法同步到远程的加密数据库了。\",\"给用户最明显的体验感就是，在电脑上可以看到的文档内容，在手机上却无法看到...这在Notion这些纯云端服务的产品是不可能出现的。\",\"所以你看，如果你是习惯了云服务的用户想迁移数据到非云，那么你需要付出额外的代价还非常昂贵，你想在Anytype上体验Notion近乎无限制的云功能，你需要像开发人员一样部署自己的云服务器...这代价就更大了，还需要你亲自维护自己的数据。\",\"所以，如果你真的是一名不想让自己所有数据都上云的人，你为不上云所付出的代价，远远超过你想象的。\",\"我们人生的每时每刻都会遇到选择，大到决定命运的抉择，小到中午吃饭吃什么，每一项选择都是个人价值观的体现。\",\"有的人宁愿牺牲自己全部的隐私，也要使用方便的服务；另外一些人哪怕额外付出许多，也要保证自己的隐私安全。\",\"这些都是个人价值观的选择，所以Anytype这样的产品不会死，只是用户群体会比Notion少许多，就像大多数人都会选择牺牲隐私换取便利的服务一样。\"]},\"711\":{\"h\":\"最后\",\"t\":[\"不管你是否真的有选择不用云，你都需要明白，云服务的发展已经成为社会的基础设施，个人可以非常方便地使用云服务；可如果你想保护自己的隐私，你还有别的选择，只是可能需要为隐私保护付出额外的staking。\"]},\"712\":{\"c\":[\"thinking\"]},\"713\":{\"c\":[\"thinking\"]},\"714\":{\"h\":\"为什么你应该购入腾讯股票\",\"t\":[\"垄断公司的股票都是值得购入的，特别是有持续稳定业务的垄断科技公司。\",\"事先声明：我目前没有任何腾讯股票，仅仅是认为当前是购入腾讯/阿里巴巴/美团等有在中国大陆地区有垄断优势互联网公司的好时机。\",\"原因：股价相对很低，远远低于实际为社会创造的实际价值。\",\"看看苹果在美国的市值有多高了。\",\"通常这些公司能够保持垄断地位并不是技术有很高优势(但他们有很多非常优秀的技术人才)，更多的其实是从累计资本层面保持垄断优势。如果你自己做过企业就知道了，如果你的企业小有成就，那么或多或少都会面临腾讯的一些各种事情，例如投资、收购、战略合作等，甚至包括收购你的竞争对手。\",\"这些都可以称之为腾讯保持垄断的优势，也是腾讯股票值得购买的原因之一。\",\"另外就是腾讯的价格远低于实际的价值，并且我认为长远来看腾讯股票应该涨十倍都不止。\",\"etc...\"]},\"715\":{\"c\":[\"thinking\"]},\"716\":{\"c\":[\"thinking\"]},\"717\":{\"h\":\"为什么2024年的当下，应该避免去考公？\",\"t\":[\"人们总是有一个幻想:\",\"做着与绝大多数人做相同的选择，却期望得到完全不同的结果\",\"考公这件事就绝对是这样的幻想。\",\"先说最终原因：你的选择不符合社会趋势，那么你很难获得自己想要的结果，所以十年、二十年之后你大概率会对自己的当前的选择失望。\",\"大众的选择大多数都是错误的，他们在很年轻的时候就决定一定要买房、买车(即使在10年前买房、买车在我看来也是错误的决策)，他们总是跟着社会热点走(热点总是稍纵即逝，追热点会错过最好的时机)。\",\"从长远趋势来看，政府的权力一直是被削弱的，并且在更加自由的社会中，政府的权力就应当更削弱。\",\"与此同时，科技公司不断发展前沿科技，人工智能、机器人等我们已经谈论了数十年的问题，在不远的将来都会出现在人们的日常行为中，想想ChatGPT吧...就那么横空出世就在一年之内完全改变了人们的生活。机器人的崛起会会呈现类似的现象，会在极短时间内改变社会的格局。\",\"所以正确的想法是：当前政府的大多数机构，大多数人员早就应该被机器人取代了，继续去考公是非常不明智的选择。\",\"而不是抱有这样的幻想：政府不会让大多数人失业，所以我去考公是比较安全的。\",\"这是绝对的幻想，而且从长远来看是自己的命运并不掌握在自己的手中，这是非常危险的。\"]},\"718\":{\"h\":\"政府机构的缺点\",\"t\":[\"机构臃肿，晋升渠道紧缩，入门门槛极高\",\"你要把自己最具生产力的二十年奉献给公共服务，这本身没有太大问题，特别是如果你为国家和社会奉献出自己的一份力而感到自豪的情况下。\",\"但如果你还要渴求一些其他事，例如你渴望考上公务员，收入有很大提升，或者特别稳定...那这个时候你非常可能若干年后回头看自己的选择大概率会失望。\",\"最终原因是趋势不站在你的一方，或者换句话说你的选择违背了人类发展的趋势，你最终不会得到你想要的结果。\",\"希望这篇文章对你有所启发。\"]},\"719\":{\"c\":[\"thinking\"]},\"720\":{\"c\":[\"thinking\"]},\"721\":{\"h\":\"为什么我们坚持使用 Ruby on Rails\",\"t\":[\"本文翻译自: 为什么我们坚持使用 Ruby on Rails\",\"GitLab 首席执行官兼联合创始人 Sid Sijbrandij 为 Ruby on Rails 提供了案例。\",\"当David Heinemeier Hansson创建Ruby on Rails（访谈）时，他受到了他在PHP和Java方面的经验的指导。一方面，他不喜欢 Java 的冗长和僵化使 Java Web 框架变得复杂且难以使用，但他欣赏它们的结构完整性。另一方面，他喜欢PHP最初的易接近性，但不太喜欢这样的项目往往会变成泥潭。\",\"似乎这些都是排他性的选择：你要么变得平易近人而凌乱，要么结构合理而难以使用，选择你的毒药。我们过去常常对服务器级操作系统（如Unix）和客户端操作系统（如Windows和MacOS）进行非常相似，但同样困难的区分，前者稳定但难以使用，后者易于理解，但经常崩溃。\",\"每个人都接受了这种二分法，认为这是上帝赐予的，直到 NeXT 在坚实的 Unix 基础之上放置了一个美丽、平易近人且黄油般流畅的 GUI。如今，“服务器级”Unix 不仅可以运行漂亮的 GUI 桌面，还可以运行大多数手机和智能手表。\",\"因此，事实证明，除了历史偶然性之外，可接近性和崩溃性实际上并没有联系，而 Web 框架中的可接近性和混乱性也是如此：它们是独立的轴。\",\"这些独立的轴在右下角开辟了一个非常理想的空旷点：一个平易近人、结构良好的 Web 框架。凭借其坚实的、可元可编程的 Smalltalk 传统和良好的 Unix 集成，Ruby 被证明是 DHH 用 Rails 填补表格右下角的理想工具：一个非常平易近人、高效且结构良好的 Web 框架。\",\"当 GitLab 联合创始人 Dmitriy Zaporozhets 决定开发用于运行他（和您的）版本控制服务器的软件时，他也具有 PHP 背景。但他没有坚持使用熟悉的东西，而是选择了 Rails。Dmitry 的选择可能是有先见之明的，也可能是偶然的，但它对 GitLab 非常有帮助，部分原因是 David 成功地实现了他对 Rails 的目标：平易近人和良好的架构。\"]},\"722\":{\"h\":\"为什么选择模块化？\",\"t\":[\"在上一节中，假设模块化是一个理想的属性，但正如我们也看到的，只是假设事物是危险的。那么，为什么，在什么情况下，模块化实际上是可取的呢？\",\"在他1971年的论文“关于将系统分解为模块时使用的标准”中，David L. Parnas给出了模块化系统的以下（期望的）好处：\",\"开发时间应该“缩短，因为每个模块上都有独立的团队工作，几乎不需要沟通。\",\"应该可以“在一个模块中进行剧烈的更改或改进，而不改变其他模块”。\",\"应该可以一次研究一个模块的系统。\",\"弗雷德·布鲁克斯（Fred Brooks）后来在《神话人物月》（The Mythical Man Month）一书中强调了减少沟通需求的重要性，额外的沟通开销是“在软件项目后期增加人员会使其更晚”这句老话的主要原因之一。\"]},\"723\":{\"h\":\"我们不需要微服务\",\"t\":[\"模块化通常既难以捉摸，又受到高度追捧，大多数系统的默认架构是“泥巴大球”。因此，设计师从可以说是现存最大的软件系统中汲取灵感是可以理解的：万维网，它必然是模块化的，它不能以任何其他方式运行。\",\"使用单独的进程组织本地软件系统，使用 REST 架构样式组合的微服务确实有助于通过操作系统强制实施模块边界，但成本很高。这是实现模块化的一种非常严厉的方法。\",\"运行现在的无偿分布式系统的困难和成本是巨大的，其中一些性能和可靠性问题记录在众所周知的分布式计算谬误中。简而言之，性能和可靠性成本是巨大的，因为需要纳秒且永远不会失败的函数调用被慢三到六个数量级的网络操作所取代，并且确实会失败。如果必须在几乎没有工具支持的情况下跨多个服务跟踪故障，那么故障的诊断就会变得更加困难。您需要一个相当复杂的 DevOps 组织才能成功运行微服务。如果你的规模无论如何都需要这种复杂性，这并没有真正的区别，但很可能你不是谷歌。\",\"但是，即使你认为自己可以管理所有这些，也要注意，所有这些意外的复杂性都建立在问题的原始基本复杂性之上，微服务并不能降低复杂性。而且，即使是人们所希望的模块化改进也没有得到丝毫保证，通常情况下，你会得到一个分布式的泥球。\"]},\"724\":{\"h\":\"单体架构\",\"t\":[\"通过使好的架构变得平易近人且富有成效，Rails 使 GitLab 能够开发一个模块化的单体架构。模块化单体与分布的泥球完全相反：一个结构良好、架构良好、高度模块化的程序，作为单个进程运行，并且尽可能无聊。\",\"尽管将 GitLab 构建为一个整体对我们来说非常有益，但我们对这种结构并不教条。建筑遵循需求，而不是相反。虽然 Rails 对于我们的目的来说是优秀的技术，但它确实有一些缺点，其中之一就是性能。幸运的是，大多数代码库中只有一小部分实际上对性能至关重要。我们使用自己用 Go 编写的 gitaly 守护进程来处理实际的 git 操作，并使用 PostgreSQL 来处理非仓库持久性。\"]},\"725\":{\"h\":\"开放核心\",\"t\":[\"最后但并非最不重要的一点是，我们的模块化单体将我们的 Open Core 商业模式从一个美好的理论变成了实际的现实。虽然 Rails 本身并不能做到这一点，但那将是我们出色的贡献者和工程师，它确实奠定了适当的基础。\",\"为了获得开源的真正好处，可用的源代码必须对贡献者来说是平易近人的。为了在面对来自各种来源的贡献时保持架构的完整性，并在开放和封闭组件之间保持清晰的分界线，代码必须结构良好。听起来很熟悉？\",\"有一个合适的插件接口不是更好吗？或者更好的是，一个以微服务为模型的服务接口？一句话：不。这些方法不仅带来了部署和集成障碍，远远超出了“我对源代码进行了小改动”的范畴，而且它们往往过于严格地执行架构约束。预测所有未来的扩展点是一件愚蠢的事情，幸运的是我们没有开始，也不必这样做。\",\"通过我们无聊的模块化单体，用户和其他第三方开发人员可以并且确实为核心产品做出了贡献，这为我们提供了巨大的杠杆作用，再加上无与伦比的创新速度和可扩展性。\"]},\"726\":{\"c\":[\"thinking\"]},\"727\":{\"c\":[\"thinking\"]},\"728\":{\"h\":\"中间税\"},\"729\":{\"c\":[\"thinking\"]},\"730\":{\"c\":[\"middle-taxation\"]},\"731\":{\"h\":\"Arc 浏览器与新事物\",\"t\":[\"每天我都会刷二十分钟的X(Twitter), 通常情况下我会关注一些科技媒体与一些技术类的KOL，归功于信息近乎零成本传输的今天，几乎每天他们都会发一些新事物，例如这两天我接触到的基于vscode的 AI 代码编辑器 Cursor,前端领域比较火的NextJS等等...\",\"在这其中，让我明显感受生产力提高的工具就是 Arc Browser\",\"Arc Browser 是基于 Chromium 内核的一款非常优秀的浏览器，它有着独特的设计理念，并且拥有着独特的功能。\",\"我感受到比较好的功能:\",\"多个Space，其中每个Space的color、font、background都可以单独设置\",\"针对特殊的界面设计，例如你想让你的 twitter 界面展示为红色....那使用arc可以轻松搞定\",\"AI处理，Arc浏览器内置AI助手，可以帮助你快速完成任务\",\"快速的搜索，CMD + T + TAB(可选) 可以快速在Google/任意AI搜索 任意搜索引擎搜索内容\",\"自动处理，如果你的界面过多，就可以在Space界面看到有Tidy的按钮(自动根据网页标签将网页逐个分类)\",\"CMD + F 既可以快速搜索界面内容，也可以问AI 当前页面的内容\",\"自动可以在一个界面屏中分出多个自页面，不需要安装额外插件 ...\",\"这些功能都是只用Chrome感受不到的，并且如果只用Chrome永远也不会体会到生产力会提高多少，这就是新事物带来的改变。\",\"这个世界每天都会产生一些新事物，关键点其实并不在于有没有给你带来新的生产力提高，关键在于总有人愿意挑战旧规则，尝试新事物，并且真的能够带来一些改变。\",\"这些新事物有很多都会死掉，随后又会有相当多的新事物出现，那么当新事物出现的时候，我们面对新事物的心态就尤为重要，是接受还是视若无睹。\",\"我的选择是，尽量多尝试，每天都会分1一个小时去尝试我愿意尝试的新事物，这里的关键点是最多一小时。\",\"如果小于一小时，那么可能感受不到任何变化就放弃了继续探索的机会；如果超过一小时就会影响正常的学习和工作，得不偿失。\",\"所以，我在尝试过长中选择了Arc Browser，并且在每天的使用中都会尝试新事物，希望它能够带来一些改变。\",\"etc...\"]},\"732\":{\"c\":[\"thinking\"]},\"733\":{\"c\":[\"thinking\"]},\"734\":{\"h\":\"避免热点\",\"t\":[\"以现在的眼光来看，你会觉得封面中图片中造型很酷吗？没错这就是二十年前年轻人群体之间最流行的造型。\",\"与封面图片类似，现在你在短视频中看到的各种炫酷的汽车，在五年后十年后也都会变得很土。\",\"现在的潮流，从长远来看也会变得杀马特。\",\"与热点类似，现在的热点在未来看都是类似，你还能想起来十年前的热点吗？\",\"大多数人连一个月/一年前的热点都记不起来，相反如果让他们回忆起十年前的热点，他们会感到非常惊讶。\",\"在过去没有互联网的时代里，闹市里哪里有热点可凑，哪里就会挤满了人群。\",\"image.png\",\"现在人们的注意力大多都在互联网上，大多数人的注意力也会被各种各样的热点所占据。\",\"Wikipedia上有一份中国大陆网络热点事件列表:\",\"中国大陆网络热点事件列表\",\"上面记载了从95年至今约30年时间里，互联网自普及以来所有的中国大陆的网络热点。想想这些热点你都有没有参与过。\",\"我猜大多数人都有，或者间接被周围的人带入过这些热点。\",\"热点总会出现\",\"现在想一想，如果你近十年的热点你都没有参与，也没有关心过所有这些热点，你的生活会变得更好吗？\",\"我猜哪怕没有变得更好，最起码不会变得比现在更差，因为你没有将宝贵的注意力置入终将毫无意义的热点中。\",\"热点总是被制造的，并且长远来看不会对自己有任何影响，反而会影响自己的注意力资产，那么主动避免热点就是一个非常重要的选择判断。\",\"与身边人闲聊时总会进入讨论热点中，最好的方式就是听他们对热点的看法，并保留自己的意见。\",\"通常我们的很多想法与思考都是由身边人灌输的，例如周末应该出去玩，年轻时假期应该经常出去旅游等等。\",\"这些很多时候并不是你本身的想法，如果你是个上进的人，通常不会经常去娱乐因为这并不是生产行为。\",\"所以当周围人谈论热点时，你也要注意回避谈论热点的行为，你要做的就是观察其他人对热点的反应以及记住这些反应，过一段时间再进行反思这些反应是否值当。\",\"但为了保护自己，你不应该说出你这样的想法，大多数情况下你应该保持沉默。\"]},\"735\":{\"h\":\"二十年前的年轻人\",\"t\":[\"杀马特，是二十年前年轻人群体最流行的造型。\",\"如果你想在此刻变得流行，那么二十年后你看自己的照片——会成为照片里的杀马特。这样很酷吗？\",\"正确选择与判断从来都不是学校课程考试范围内可衡量的，这些选择与判断充满不确定性，但往往是这种选择与判断决定人生质量，思考质量决定人生质量。\"]},\"736\":{\"c\":[\"thinking\"]},\"737\":{\"c\":[\"thinking\"]},\"738\":{\"h\":\"做个生产者\",\"t\":[\"之前和朋友聊天，我说出一句让朋友惊讶不已的结论：财富总会流向有能力掌控财富的人手中。\",\"通常我们的表达的语言总不是凭空冒出来的，这句话我也在思考过很久所以才会这样去说，这篇文章算是表达我是如何得出这样的结论的。\",\"消费者总是将自己的金钱付给生产者。\",\"生产者因此致富，消费者因此贫穷。\",\"这样的情况一直如此，并且在可预见的未来也将一直如此。\",\"如果想要致富，那么必须从消费者心态转为生产者心态。\",\"现在绝大多数人的注意力都在社交媒体上，以张雪峰为例，他的视频被许多人剪辑发布，并且他本人也是通过很多年的积累有了大量的粉丝群体，那么请问：他会每天晚上躺在床上刷着娱乐视频吗？\",\"NO\",\"他是生产者，而不是消费者。他是在生产内容，而不是在消费内容。\",\"结果群众的财富最终都落入了他的口袋中。\",\"是的，群众资金(社会资本)从消费者流入生产者。\"]},\"739\":{\"h\":\"生产者心态\",\"t\":[\"与其毫无目的地消费着这些，不如去思考如何生产一些东西。\",\"有一个简单的例子，例如你的朋友需要购入加密货币，但是不清楚哪里的加密货币最便宜，那么你可以写个脚本做这件事情。\",\"AnySwap就是做了这件事，即使它当前没有为我创造金钱收入，但仍然是我做了一些未来可能有收益的事情。\",\"如果我像绝大多数消费者一样思考，那么我会这样想：没有一个平台可以多个平台去比价，好吧我还是打开抖音去刷视频吧\",\"可如果是生产者呢：我会想我怎样才能build一些东西，或者怎样才能做自己的贡献，那么新的想法就会不断出现在大脑中。\",\"消费着心态永远不会致富。\",\"如果想成功，就必须成为生产者。\",\"相关信息\",\"也不必所有事情都生产，如果一些事情有益，那么消费一些也无妨，比如在小红书学习健康烹饪知识，锻炼身体...\",\"问一些简单的问题：\",\"花在写文章的时间 > 在屏幕上阅读文字的时间？\",\"花在制作视频的时间 > 在刷视频的时间？ ...\",\"类似的，如果这些的回答是否，那么你很可能就是消费者。\"]},\"740\":{\"h\":\"如何做一个生产者\",\"t\":[\"每天抽出1小时(实际上这个世界上绝大多数人都可以做到)，制作想制作的任何东西。\",\"抖音、小红书、B站、Youtube视频\",\"Twitter、微信公众号、博客文章\",\"新产品 etc.\",\"注意：必须发布它并且让全世界看到它。\",\"每天只需1小时。\",\"我建议是选择自己喜欢的事情，因为这样做才可以在一开始没有反馈的情况下坚持下去。\",\"如此，每天都会有越来越多的想法出现在大脑之中，从商业想法、销售产品想法...\"]},\"741\":{\"c\":[\"thinking\"]},\"742\":{\"c\":[\"producer\"]},\"743\":{\"h\":\"消费效率\",\"t\":[\"2023年夏，我买了Nike的一双跑鞋Nike Invincible run 3,这双鞋不论运动、休闲、日常使用都让我感觉非常舒适，不论是脚掌宽度还是鞋底的质感都非常好，所以我在2024年初又买了一双同色同配置的Nike Invincible run 3...是的我有了两双一模一样的跑鞋了。\",\"同样的做法我不仅仅做了一次，2022、2023、2024年每年夏天我基本都会买两三件同样的李宁黑色短袖短裤......\",\"通常情况下，人们在购买消费品时，都会购买不同的消费品，而且为了证明某个消费品比另一个哪方面更好下很足的功夫，这一点在网络上各种做评测的博主就可得知（当然也通常有足够的广告收益）。\",\"但最近我隐隐约约觉得大多数人的选择可能并不是一个理性的选择，而是陷入了大家这样那我这样也没错的误区。我觉得这种消费习惯可能不太符合我的消费习惯，所以选择适合自己的消费习惯才是最重要的。\",\"说到底还是自己不愿意在这方面花太多时间，身上的衣服只要干净整洁就行。\"]},\"744\":{\"c\":[\"thinking\"]},\"745\":{\"c\":[\"consumption\",\"efficiency\"]},\"746\":{\"h\":\"贫富差距不可避免，且会越来越大\",\"t\":[\"早些年我还没有认真读书的时候，我认为上面的话是非常令人绝望的(因为我并不属于富裕的那批人)，但现在我对上面的话有了新的理解。\",\"贫富差距是不可避免的，因为贫富差距是社会发展的必然结果，贫富差距逐步扩大也是社会发展的必然结果。\",\"在古老的年代里，生产力低下人们几乎只靠生存环境决定贫富差距，出生在热带雨林的人可以随意捡果子吃，出生在沙漠、寒带的人只能捕猎或者长途跋涉来获取食物。\",\"随着社会的发展，有了各种先进的生产知识，如果一个人会种田，而且还会各种商业知识，知道种什么可以卖更多钱，那么他就会逐步成为地主阶级。\",\"到了现代社会，知识在贫富差距上的作用几乎是决定性的，现在全球的富豪很少有靠出售资源获得大量财富的，像贝佐斯、马斯克这种顶级富豪，他们的财富几乎都来自于科技和商业。\",\"他们为整个人类创造了需要的东西，并且他们也获得了大量的财富。\",\"无一例外他们都是各自领域的专家，并且他们也为此投入了大量的时间。\",\"所以照此发展来看，掌握更多的知识，并且懂得如何利用知识变现的人更容易致富。\"]},\"747\":{\"h\":\"为什么贫富差距会越来越大\",\"t\":[\"移动互联网兴起以来，普通群众之间会有越来越世风日下的感受，这不是幻觉，实际上社交媒体放大了这种原本不应被看到的贫富差距。\",\"掌握生产知识并会变现的人越来越富有，同时有大多数消费者的注意力被掌握生产知识并会变现的人吸引，所以人群之间的贫富差距会越来越大。\"]},\"748\":{\"h\":\"如何应对\",\"t\":[\"首先要接受贫富差距是不可避免的，其次要接受贫富差距会越来越大，最后要接受贫富差距是社会发展的必然结果。\",\"最重要的是让自己变得富有，这件事情是才是重要的...\",\"etc...\"]},\"749\":{\"c\":[\"thinking\"]},\"750\":{\"c\":[\"thinking\"]},\"751\":{\"h\":\"雇主真的在乎你吗？\",\"t\":[\"本文翻译自: Do Employers Care About You?\",\"想象一下你雇了一个人来打扫房子。\",\"为了便于举例，假设你年收入 10 万美元，付给清洁工 3 万美元。（员工的全部成本 / 工资单通常占收入的 5% 到 65% 不等，具体取决于公司所处的行业。在这个例子中，我们取 30% 作为一个适中的数字。）\",\"这个清洁工已经为你工作了 30 年。\",\"你当初雇他的时候，他工资相当低，但随着时间推移，工资涨幅累计起来了。\",\"如果你在市场上重新雇一个清洁工，你只需花 1.5 万美元就能找到一个能为你做完全相同工作的人。\",\"而且，如果你决定从海外雇一个清洁工，你只需花 1 万美元就能找到一个高素质的人，而且他们会很感激能为你打扫房子。\",\"把这个人弄进国内会多费些周折（你得为他的文件手续提供担保），但一旦他来了，他就会受到严格约束。是的，这个海外来的人不能辞职，因为如果他辞职但短期内找不到另一份工作，他就会被驱逐出境。（在美国，如果持工作签证被解雇，你有 60 天时间找到一个新雇主为你的签证提供担保，否则就得准备回国。）\",\"更重要的是，你的这个老清洁工更喜欢用老的清洁方法，还没有完全采用现代清洁中使用的新型高效工具。\",\"如果你雇一个新的清洁工，他们会更年轻，熟悉新的清洁技术。他们会打扫得更快，遗漏的地方更少。\",\"如果是你，你会怎么做？你会留下你的老清洁工还是雇一个新的？\",\"说实话。\",\"你会每年多花 1.5 - 2 万美元（假设年收入 10 万美元）仅仅为了留下你现有的房屋清洁工，还是会毫不犹豫地换掉他们以节省开支？\",\"现在假设市场不景气，你遇到了一些经济困难。你被降职了，新的工资净额只有每年 7 万美元。你会以每年 3 万美元的价格留下你的老清洁工，还是会以每年 10 - 15 万美元的价格雇一个新的？\",\"记住，你所有的朋友都在解雇他们的老清洁工，雇新的来省钱。这在社会上是完全被接受的，没有人会因此而指责你。\",\"也许你可以用省下来的钱买一辆新车或者其他东西？或者每年多休几次假？钱很有用。\",\"嗯 —— 这就是你的雇主有多关心你的真实情况。\",\"当然，你们当中有一些人会出于善良留下老清洁工（世界上也有一些慷慨的雇主），但在大多数情况下 —— 这是不可行的。\",\"如果市场价格是 10 - 15 万美元，你不会花 30 万美元请人打扫你的房子。这是不可能发生的。\",\"企业也是如此。他们不讨厌你，但最终还是归结于钱。\",\"你被雇来做一份工作，如果有人能以更低的价格做同样的工作 —— 他们就会像你会换掉老清洁工一样进行替换。\",\"这就是世界的运行方式。\",\"当然，从清洁工 / 员工的角度来看，这是 不公平 的。\",\"他说：\\\"我连续 30 年尽我所能为你服务。在过去 30 年的服务中，你对我的工作没有任何抱怨。但现在我老了，这些该死的移民工作报酬这么低，我却要被替换掉。这是不公平的，我们需要劳动保护法。\\\"\",\"员工被告知，重要的是他工作有多努力。从他的角度来看，你是他的退休计划。\",\"只要他工作出色，他就不应该失业。这是他一生都被告知的。但尽管他 \\\"做对了所有事情\\\"，他还是被坑了。\",\"但那是他的错误和他的问题。作为雇主，你不负责员工的生活。\",\"毕竟，你雇他不是为了确保他的生计。你雇他是为了让他为你做一份工作，到目前为止，你在他身上看不到任何让他不可解雇的特质。你的动机和激励与他完全不同。\",\"你宁愿花 1 万美元请人打扫房子，然后把剩下的 2 万美元用来买一部新手机、电脑、鞋子、衣服、度假、股票、加密货币，或者其他任何东西。\",\"是的，你对解雇老清洁工感到难过，但是 —— 这是一个艰难的经济环境，每个人都在解雇和雇佣更便宜的工人，而且你不是一个慈善机构。\",\"这就是世界的运行方式，清洁工也在经济学上学到了宝贵的一课。\",\"希望这能清楚地说明你的雇主有多关心你，尤其是当他们告诉你你们都是一家人的时候。\"]},\"752\":{\"c\":[\"thinking\"]},\"753\":{\"c\":[\"thinking\"]},\"754\":{\"h\":\"专注于真正重要的事情\",\"t\":[\"这个世界上大多数人所关注的事情在我看来都是无关紧要的.\",\"买个更大的房子?买个帅气的车?买个好看的表?\",\"这些消费行为并不是真正重要的,这些只不过看起来重要,这是消费主义营造的假象.\",\"最近在刷 X 的时候,看到很多人热衷于办海外的信用卡,或者想买美股,这些事情在我看来都是无关紧要的.\",\"真正重要的是: 你有多少资产.\",\"在资产托管行业有一个指标叫: 合格投资人.\",\"净资产 50 万美元以上\\\\ 超过 300 万人民币的人才被称为合格投资人.\",\"只有合格投资人的钱才是被投资公司可管理的.\",\"事实上从这个角度看真正重要的事情不是你是否有了海外账户,真正重要的事情是你是否已经有自己可持续赚钱的业务.\",\"大多数人并不去思考真正重要的事情,根本原因是真正重要的事情做起来太难,以至于大多数人都不愿意去思考.\",\"事实上解决了这个最关键的问题--自己的长期持续赚钱的能力(打工并不算),其他事情都会变得简单.\",\"如果你有一百万美金,请问你会绞尽脑汁想着如何去投资美股吗?\",\"相信我,国内的投资经理会帮你打理好一切.\",\"将自己的注意力投入在自己的事业上,这些问题都会迎刃而解.\"]},\"755\":{\"c\":[\"thinking\"]},\"756\":{\"c\":[\"thinking\"]},\"757\":{\"h\":\"毕业感想\",\"t\":[\"过去一段时间以来,我对时间属性感受颇深的就是--从现在看过去,不论多么久远的过去,对人的感受都是瞬间而已.正如《把时间当作朋友》中提到的一样,时光如白驹过隙,瞬间而已.\",\"这样的想法不仅仅体现在对过去的记忆,更多的还是即使当前明白这样的道理,未来还是会不断重复\"]},\"758\":{\"h\":\"过去几年的收获\",\"t\":[\"过去几年我觉得最重要的事情就是我学习了编程和投资,学习编程使我的人生有了目标感(构建属于我自己的世界),学习投资让我有了对未来长远的判断(我需要判断未来相当长一段时间的趋势).另一个就是读书,不论是编程还是投资,都是需要读书去作为基础的,没有从书中学习到的编程知识和投资经验,我是不会在这两个方面有长足进步的.\",\"读书另一个优点就是让我的注意力得到自我掌控,很长时间以来我认为是这个世界都 sick 了,很大比例的人都完全无法掌控自己的注意力,以至于潜移默化造成了很多社会问题,当然这是另一个话题,在这里我就不过多概述了.\"]},\"759\":{\"h\":\"过去四年我的的几个重大决策\",\"t\":[\"首先是我在 2020 年做出的第一个重大决策,就是在高考成绩非常不尽人意的情况下如何做出决策,我可以在这里说出我选择当前大学的判断依据以及理由:\",\"我需要一个适合自学的地方(使我的编程学习成本够低)\",\"宿舍上下床(居住环境舒适)\",\"图书馆距离宿舍足够近(同样是方便我的自学)\",\"学校并不严格(理由同第 1 点)\",\"所以综合以上 4 点,我选择了当前的大学--一个让同校同学大多数人非常不满意的地方.甚至很多时候也包括我自己,但我感受更多的却是知足,因为这里完全满足我当初的判断,以及在我大三大四时拿到了令我比较满意的 offer.\",\"第二个重大决策还是在 2020 年加入了笑来的付费群,笑来在群里讲课的几年对我的投资观、人生观有很大的正面影响,但这属于收费课程再次不做过多描述.\",\"第三个重大决策就是在21年底决定为实习做准备，也就是从此刻开始正式的计算机科学领域内的学习，并在23年初先后在火线安全和七牛云两家公司实习，并在七牛云转正成功。\",\"从过去三个重大决策中我感受颇深的一点是人们所做的重大决策会对未来两三年的自己产生影响，这些影响在真正被自己感受时已然过去很久，于是复盘就成了做决策的关键因素。\",\"如果你只考虑最近两天，那么作出的决策就是只能当前感受到的；如果考虑两三年，那么决策质量显然更高，注意决策质量是未来自己的满意程度决定的无法由他人评价（每个人的价值观不同）。\"]},\"760\":{\"h\":\"毕业想法\",\"t\":[\"过去几年我收获最大的一点就是承担责任，真正的自由是完全为自己的决策负责，另一点就是不论当前的生活如何，很大程度都是自己选择的，由过去的自己所选择，所以提高自己的决策质量非常重要，我认为可以排到未来两三年最重要的事情。\"]},\"761\":{\"h\":\"未来规划\",\"t\":[\"一方面，继续投资计划；另一方面会在工作上继续精进，我的工作对技术有一定的要求，我在未来一段时间会继续在工作所需要的技能上持续发展。\",\"CONTINUE...\"]},\"762\":{\"c\":[\"thinking\"]},\"763\":{\"c\":[\"graduate\"]},\"764\":{\"h\":\"早些毕业会变得更好吗？\",\"t\":[\"最近和年长的几位朋友闲聊，偶然聊到了这个话题。\",\"10年毕业会不会更好？我在这个问题上保持了沉默。\",\"08年经济泡沫后的两年其实大家的生活并不好，但10年之后进入移动互联网时代以来，大家的生活发生了翻天覆地的变化，人们的生活已经完全虚拟化了，与此同时计算机方向毕业的学生也大受欢迎，这是趋势造就的。\",\"当前这个趋势已经消耗殆尽，大多数人的生活都已经完全处于数字空间了，现在的年轻人外卖、购物可以在平台上下单、打车、旅游也有对应的平台，云服务/AI的发展也彻底改变了人们的生活，人们的生活已经离不开互联网了，就此互联网的发展趋势已经放平。\",\"我固执地认为没必要纠结这件事情，经济是起伏发展的有起有落，早十年经历经济差的生活总比已经步入中年再经历经济危机好。\",\"而且当前的生产力远比十年前高，现在的程序员可以用Cursor和各种AI辅助编程，可以用各种AI辅助翻译，阅读所有语言的书籍，学习所有国家的文化，甚至可以和AI一起创作艺术作品。\",\"就此我认为没必要纠结早毕业十年吃到红利是否会更好，努力的人在任何时代都可以获得自己想要的生活。\"]},\"765\":{\"c\":[\"thinking\"]},\"766\":{\"c\":[\"thinking\"]},\"767\":{\"h\":\"初读《屯比特币》\",\"t\":[\"经常听过去的人评价读某些书有种相见恨晚的感觉，今天我也体会到了这种感受————《屯比特币》\",\"书籍地址\",\"有些道理就算你知道了明白了想通了，但这都和你真正做到毫无关联。\",\"甚至你知道了明白了，甚至可能做得不好呢。\",\"屯比特币就是币圈内大家都知道可以最后变得富有的路径，但是很少有人这样坚定地去做，并且大家还对这样的做法嗤之以鼻，反而纷纷去追热门币种。\",\"如果用一句话来概括这本书，我认为是：\",\"随着挖矿的递减市场上流通的比特币是越来越少的，而且所有交易所流通的币最终都会归屯币者所有，因为到了屯币者手中就不会售出了。\",\"仅仅通过这一句话你就可以判断出屯币的价值，甚至屯币的动作就可以被认定是中本聪了。\",\"根据一线城市财富自由的标准来看，1.6亿人民币就可以实现财富自由。\",\"本书有提到，根据指数递减/线性成长，比特币的价格将会在2038年左右到达1.6亿人民币，如果你把目标定的小一些例如只在二线城市财富自由，那么屯币的价值就更高并且时间也更短。\",\"知易行难，屯币的价值就在于你是否坚定地走上这条路。\"]},\"768\":{\"c\":[\"thinking\"]},\"769\":{\"c\":[\"thinking\"]},\"770\":{\"h\":\"如何不成为技术文盲\",\"t\":[\"本文翻译自: How Not To Be Technologically Illiterate\"]},\"771\":{\"h\":\"一、技术采用与年龄相关\",\"t\":[\"技术采用是基于年龄的。\",\"人们把自己出生时就存在的所有技术都视为理所当然。\",\"当他们非常年轻（比如 20 岁以下）时，他们会迅速而热情地采用新技术。\",\"新产品？让我们来看看并使用它。让我们看看它的所有设置。让我们弄清楚它能做的一切。\",\"随着年龄增长（比如到二十多岁后期），他们会采用新技术，但很不情愿。\",\"然后，情况发生了变化。 人们变得 墨守成规，不容易接受新事物。\",\"每一个小的变化都会遇到阻力，他们想维持现状。\",\"这不仅适用于技术，也适用于所有事物。有多少老年人会听新歌呢？\",\"“新歌很烂。”\",\"如果你问他们哪些歌实际上好听 —— 不出所料，他们会说出自己 25 岁或以下时流行的歌曲。\",\"基本上，过了 25 岁左右这个年龄段，人们就会慢慢在新技术和文化方面变得过时。\",\"起初他们没有意识到这一点，因为他们仍然可以使用自己习惯的工具应付，但随着时间的推移，他们实际上无法完成基本的技术任务，而且落后太多，很难轻易赶上。\",\"想想有多少老年人能正确使用电脑。\",\"大多数不能。\",\"大多数老年人把必应作为他们的搜索引擎，仅仅是因为它是 Windows 系统的默认搜索引擎。 积极的分数表明对搜索引擎的偏好，消极的分数表明厌恶。 这只是基本的人性。\",\"“如果东西还能用，就不要修理它。”\",\"你拒绝学习新技术，因为你认为现有的技术 “刚刚好”。\",\"我父亲仍然用支票支付一切费用，而不是使用网上银行。他的理由是 “支票很好用”，尽管支票转账需要 3 天时间，而网上转账是即时的。 他能用，但不如现代的方式好，对吧？\",\"如果你不想落后，你就必须接受新技术，并努力使用它。\",\"如果你想将来不成为技术文盲，你必须强迫自己在新技术出现时学习它。\",\"否则你将会成为明天的老年人，技术技能相当于今天的老年人。\",\"当所有的孩子都在进行相当于网上转账的操作时，你将会做相当于写支票的事情。\",\"技术不难，改变习惯很难。\",\"你得问问自己 —— 为什么今天的老一辈人不能使用电脑呢？\",\"电脑在他们年轻时就进入了市场。他们有钱买电脑。他们本可以成为早期采用者。但相反，他们是最后采用者。\",\"为什么会这样呢？\",\"因为恐惧、胁迫和对改变的抗拒。\",\"哦，这项新技术会毁灭世界，我最好不要使用它。\",\"它看起来太可怕，太难学了，我最好不要使用它。\",\"旧的东西很好用。我们为什么需要这项新技术呢？我不会使用它。\",\"然后，你瞧，他们就过时了。50 岁的人被一个 22 岁的人取代，这个人能以一半的成本完成他的工作。\",\"这个 50 岁的人应该为自己感到羞愧，不是吗？一个几乎没有经验的人能做他所做的事情，尽管他有 30 年的经验。\",\"当这个 50 岁的人一生都抗拒改变，拒绝学习新工具、技术和方法时，就会发生这种情况。\"]},\"772\":{\"h\":\"二、技术文盲的一些迹象\",\"t\":[\"以下是一些你已经开始变得技术文盲和过时的迹象：\",\"你从未进行过加密货币交易。你不知道比特币是如何运作的以及它为什么被创造。\",\"你不知道什么是智能合约。\",\"你从未从任何 AI 工具中生成过 AI 图像或视频。\",\"你主要使用传统搜索引擎如谷歌，而不是使用现代工具如 ChatGPT 或 Perplexity。\",\"你很少（如果有的话）在 Kindle 上阅读书籍。你几乎总是更喜欢纸质版。\",\"你从未使用过现代 VR 头戴设备。\",\"你没有家庭自动化电子设备（如智能灯、智能窗帘等）。你认为它们是 “一个坏主意”。\",\"你讨厌智能手表。如果你有智能手表，你很少用它做除了查看时间以外的任何事情。你认为健身追踪器 “过度了”。\",\"如果你的电脑坏了，你自己完全不知道如何修理。你每次都得叫别人。\",\"你完全不知道如何使用 AWS、GCP 或 Azure。\",\"你从未创建过一个网站。\",\"如果你是一名求职者，你没有简历的数字版本。\",\"你从未使用过数字签名。\",\"如果以上你符合超过 5 条，你的情况很糟糕，很有可能成为明天的技术文盲老年人。\"]},\"773\":{\"h\":\"三、面对技术进步的选择\",\"t\":[\"世界不会停下来迁就你。\",\"汽车取代了马。没有人在乎你 “更喜欢马” 或者认为 “马没有问题”。每个人都停止使用马，开始使用汽车。\",\"同样适用于蜡烛。你可能 “讨厌” 荧光灯，认为 “烛光更自然”，但世界还是转向了人造光。\",\"你的感受不重要。\",\"所以你有两个选择： A) 学习新技术并使用它，这样你就是一个早期采用者。即使它很难，或者打破了你习惯的工作流程，也要去做。 B) 慢慢成为一个不会使用技术的老人。选择轻松的方式，坚持使用你已经知道的东西。\",\"都是你的选择。\"]},\"774\":{\"c\":[\"thinking\"]},\"775\":{\"c\":[\"thinking\"]},\"776\":{\"h\":\"可惜只学习并不能致富\",\"t\":[\"经常会看到一些采访，内容大概是：想告诉过去的自己哪些建议。\",\"我想了想，如果我遇到这个问题，我可能会告诉刚上大学的自己——只学习并不能致富\",\"这里的关键点是学习的知识并不一定保证是可供销售的生产性知识。\",\"生产性知识是可以致富的\",\"生产性知识的作用是以做出可销售产品为主。\",\"例如你学习了计算机编程，那么你就可以销售自己的编程技能，通过去公司工作的方式获得收入。也可以制作市场上人们需要的产品来获取收入。\",\"你去新东方学习了烹饪，那么你可以选择做一个厨师做出大家需要的食品销售来获取收入。\",\"利用自己的生产性知识来销售的行为才可以致富=\",\"生产性知识可以致富，但学习并不一定。\",\"很多人研究学习的问题都不是生产性的，例如星座、情感等，这些知识完全不能用于生产，而且不能举一反三。\",\"如果学习的内容无法支持你做出可销售的产品，那么学习对你而言也就并不能销售。\",\"无法销售就无法致富。\",\"是的，一般情况下人们会为自己的需求来付费，如果你的学习内容无法帮助你做出可销售的产品，那么你也就无法获得足够的收入，也就不可能致富了。\",\"etc...\"]},\"777\":{\"c\":[\"thinking\"]},\"778\":{\"c\":[\"learning\"]},\"779\":{\"h\":\"2024 元旦游南京东路\",\"t\":[\"最近实习结束准备离开上海了，元旦的前两天假期都在出租屋内收拾回去的行李。\",\"假期最后一天在元旦当天和huliwei聊天提起来约饭的事儿，当天下午就一起出来去南京东路步行街压马路了，之前八月份来过一次新世界斜对面的大楼，这次来又多了很多的感慨。\",\"下午吃了一家在市中心的苍蝇小店——碰碰凉(上海人民广场旗舰店)，墙裂推荐这家店里的朗姆酒味冰激凌，huliwei本人推荐------\",\"接着压完马路就去了南京东路拐角处一家超级实惠的苍蝇小馆——玖玖小炒，很难相信我们两个人点了四盘硬菜才吃了80...这是当天我们两人感觉最值的了\",\"晚上吃完饭歇了一会就坐地铁去了豫园，感觉有点过度宣传了，我们两个人逛了20分钟就结束了:)\"]},\"780\":{\"c\":[\"value\"]},\"781\":{\"c\":[\"value\"]},\"782\":{\"h\":\"谈论政治是危险的\",\"t\":[\"当我们还是孩童时,我们通常会通过试错来了解这个世界.比如看着被火炉烫伤过才知道烧着的火炉不能碰等等.这些危险是可以被我们感知到的,人类的基因通过这种试错来让我们进化.\",\"这种试错方式非常原始,但确实有效.\",\"但政治却不一样.\"]},\"783\":{\"h\":\"了解历史\",\"t\":[\"科学家可以通过做实验试错来继续做研究,这些都是有限范围内,并且后果可承受的试错.\",\"但例外的是政治这一领域,政治自古以来都是涉及生死的,并且无错可试.\",\"如果你了解历史,你就会知道政治人物的言论和行为往往会对未来产生深远的影响.\",\"谈论政治也是非常危险的,并且现代社会给言论披上了自由的外衣,真正的危险在于言论自由的假象.\"]},\"784\":{\"h\":\"言论自由的假象\",\"t\":[\"言论自由是现代社会的产物,言论自由的假象在于言论自由是现代社会赋予个体的权利,但个体往往忽视了言论自由的代价.\",\"如果你的言论可能给你带来危险,甚至是生命危险,那么言论自由就变成了一个谎言.\",\"特别是在某些地区.\",\"尤其,即使是在 100 年前,谈论政治也是危险的,祸起萧墙一个言论让一整个家族在一夜之间倾覆也是常见的事情.\",\"提示\",\"如果你无法为言论负责,那么最终结果一定会让你无法接受,即使你认为你的言论是正确的.\"]},\"785\":{\"c\":[\"value\"]},\"786\":{\"c\":[\"value\"]},\"787\":{\"h\":\"你有多久没好好休息了\",\"t\":[\"很多人认为休息就是让身体休息，躺在沙发上玩游戏、看电视、刷短视频等等，就足矣让自己休息了。\",\"但这样的活动不会让自己的大脑休息，经过这些活动后大脑还是如往常一样运转，很多人玩游戏过后甚至更累了。\",\"我认为真正放松大脑的一定不是这种活动，而是彻底放松大脑的活动\"]},\"788\":{\"h\":\"现象\",\"t\":[\"有个说法是这样的：如果你不知道休息，那你就不知道如何工作\",\"休息是一门艺术，大多数人没有做好它。\",\"大多数人的休息方式如下：\",\"玩电子游戏\",\"刷短视频、看搞笑视频\",\"吃垃圾食品，持续肥皂剧\",\"睡眠时间不足6小时\",\"连续看几小时的色情片 ...\",\"这些方式除了度过了时间外，并没有任何有益的效用，并且实际上也并没有真正让大脑放松（除非你每天需要大量体力去工作，否则并不需要这样休息）。\",\"对于大多数人来说，他们很少真正筋疲力尽，特别是在写字楼内工作的人，对他们来说最大的体力活动应该就是从屋中到工作地点的活动。\",\"然而当他们回到屋内，他们躺在沙发上吃外卖、继续刷视频来刺激自己的大脑。\",\"他们会感受到现实世界的压力，他们开始将过错归咎于老板、工作等等。\",\"但实际上感受到压力的来源其实是他们自己。\",\"他们的大脑并没有在晚上真正休息好,因为他们会在睡前刷2小时的短视频不断刺激自己的大脑，他们的大脑并没有真正放松。\",\"实际上我认为真正的休息策略这些：\"]},\"789\":{\"h\":\"应对策略\",\"t\":[\"无意识散步\",\"去公园或者其他自然场所，穿跑步鞋运动半小时。\",\"选择自然的地方，只是因为植物，树木，山脉，沙子和海洋的景象和声音对人类大脑来说是放松的。\",\"如果你只能选择进入写字楼，那还是算了吧，这样做并不能真正放松。\",\"相关信息\",\"这次散步没有特定目的，只是为了放松大脑。你可以懒散对待任何事情，但不能听播客、流行音乐，但是可以听轻音乐。\",\"当然最好在熟悉的地方或者人多的地方散步，在陌生的地方人的潜意识会比较警惕。\",\"你会注意到这些散步会让你处于一种平静的，几乎恍惚的精神状态。你会有一个很好的，柔和的焦点。\",\"去健身房\",\"剧烈运动会使你的身体释放大量的内啡肽、多巴胺和血清素。\",\"这些化学物质让你感觉很好。它们是你大脑的“情绪”化学物质。\",\"当你完成某件事（比如俯卧撑）时，它们会在大脑中释放出来，它们是人体所能体验到的所有快乐的源泉。\",\"众所周知，运动会导致欣快感--一种运动后你几乎兴奋的状态。\",\"剧烈运动可能会让你的身体疲惫不堪，但它只会放松你的大脑。人体就是这样设计的。\",\"除了以上所述，运动会让你更强壮，无论是精神上还是身体上。它会缓解你身体的紧张和压力，它会提高你的睡眠质量。\",\"如果没有时间去健身房，那么可以用十五分钟做俯卧撑、仰卧起坐、深蹲等锻炼。\",\"冥想\",\"冥想可以放松大脑，并且让人对自己的掌控感更强，同样也可以放松大脑。\",\"每天做10-20分钟，每天都做如此可以显著提高你的生活质量。\",\"充足睡觉\",\"你需要7-9小时深度睡眠才能真正休息。\",\"大多数人只给自己5-6小时睡眠时间，并不是因为他们忙于生产，而是他们在互联网上浪费太多时间，睡前刷短视频已经成了现代人的通病。\",\"没有抖音你的生活会变得更好，除非你依赖抖音赚钱，即使是这样也不应该在睡前刷短视频。\",\"如果你的睡眠不足，那么本文的所有有效措施对你而言都没用。\",\"不要用人工手段刺激大脑\",\"电视剧、电影、视频、游戏、色情片的本质是人为刺激大脑。\",\"人类的大脑没有进化到能够处理高速互联网所提供的持续刺激和多样性。\",\"记住，你的大脑也是一块肌肉，它需要休息。如果你不断地用刺激轰炸它，它会把自己节流到一个较低的智力水平。\",\"给你的大脑足够的时间来保持最佳状态，它会给你很好的表现。不这样做，你只会得到平庸的表现。\",\"etc...\"]},\"790\":{\"c\":[\"value\"]},\"791\":{\"c\":[\"value\"]},\"792\":{\"h\":\"为公司工作最重要的事情\",\"t\":[\"通常我们做事都有个成本，不论是时间成本还是金钱成本...\",\"所以最近思考了一个问题，即雇佣你时间的公司雇佣你的最终目的是什么。\",\"公司雇佣你肯定不是为了让你学习的(像学校)。\",\"很多应聘者在面试时经常说我虽然不会，但我可以学。\",\"这样的说法本身是没什么问题，可问题在于公司作为一个商业机构必须能够活在竞争非常激烈的社会中，所以极致的产出，才是关键，有很多应聘者都会的技能可你不会，那么公司没有理由去招聘一个需要学习的人进来。\",\"这就是关键点，公司是商业机构而不是慈善机构，招一个人最终目的是为公司有产出，即使需要学一点点，但也会看在过去的经验判断这个人大概率可以为公司带来比其薪水更高的价值，所以才会雇佣此人。\",\"如果一家公司给你的薪水是20k,那么实际上你必须给公司带来50k左右的产出才可以弥补公司的成本(因为公司还有董事会、管理层等，而且相对来看管理者的重要性比底下的员工高得多，通过招聘可以招揽许多技术性人才，但是很难招来优秀的管理者)。\",\"从这个角度来看，为处于公司中最重要的就是让自己对公司的价值远超于薪水，这样对于公司来说是一笔划算的买卖，与此同时自己也会学到相应的知识，两全其美。\",\"继续延伸这个话题，通常在一般性的商业公司中有两个最重要的职位：生产者和销售者。\",\"公司的生产者职责为公司产出可销售产品。\",\"公司的销售者的职责是向市场销售公司产品。\",\"在我看来最重要的是生产者和销售者，这两者是公司得以长期生存下去的关键，其他的部分例如前台、hr、法务都是辅助性职务。\",\"这个话题后续还会继续深入探讨\",\"etc...\"]},\"793\":{\"c\":[\"value\"]},\"794\":{\"c\":[\"value\"]},\"795\":{\"h\":\"理解你所处的世界\",\"t\":[\"我们很少会主动去深刻理解当下世界正在发生的事情,以及针对已发生的事情做自己的判断,以及正确的决策.\",\"比如现在的巴以冲突,俄乌冲突,南朝鲜关系等等.你真的有思考这些现象吗?\",\"最近从新闻上看到,中国大陆很多地区发生一些恶性事件,经常会看到公民起了冲突,造成了严重的后果,甚至公民开车到体育场撞死了很多人.\",\"这种社会现象我认为单单归咎于经济下行是远远不够的,经济下行只是表象,其背后更深层次的原因是社会矛盾的激化--贫富差距.\",\"是的，贫富差距已经无法解决了\",\"你认为只有中国大陆是这样吗?\",\"俄罗斯\\\\乌克兰\\\\南朝鲜\\\\以色列\\\\巴勒斯坦\\\\美国人等等,他们的心情会好吗?\",\"这就是关键点,全世界所有国家的人们的生活都非常不如意,只是程度不同而已.\",\"所以,我们应该如何做呢?\",\"低调\",\"是的,如果你赚了钱,请不要显摆,因为这会给你带来危险.\",\"如果你没有钱,请不要抱怨,因为这会给国家和社会继续添乱,你也最终会被反噬.\",\"最好的做法是过好自己的生活,努力工作,努力赚钱,努力存钱,努力投资.\",\"如果这个世界在你的有生之年没有毁灭的话,长期来看开始会变得更好,到那时你的所有努力都会得到应有的回报.\",\"如果这个世界在你的有生之年最终毁灭的话，现在发泄并不会有任何作用。\"]},\"796\":{\"c\":[\"value\"]},\"797\":{\"c\":[\"value\"]},\"798\":{\"h\":\"为什么那些去中心化产品都死了？\",\"t\":[\"去中心化自从2009年比特币横空出世以来就吸引了了密码学社区、注重隐私的人并等不断发展至今。期间有无数的人做过无数的尝试都死了，而又为什么他们都死了？都有哪些原因呢？\"]},\"799\":{\"h\":\"1.尝试过早\",\"t\":[\"想一想你如果在2013年就尝试做去中心化金融，那么你会死的很惨，虽然比特币已经出现几年了，但这样的尝试一定会失败，原因之一就是技术不成熟，没有ETH提供的基础设施支持。\",\"在这种情况下，即使你非常努力，你依然会死的很惨，因为时间点不允许，相反如果你在2018年做这样一件事那么你大概率会获得成功，例如Uniswap等。\"]},\"800\":{\"h\":\"2.应用场景不正确\",\"t\":[\"很多人都在做去中心化社交、去中心化电商,这样的尝试会失败，原因之一就是这些场景已有的互联网应用都可以满足，而且使用区块链来做并不会使之前的效率更高，你不会想发一条消息，购买一件物品还要多余的gap fee吧？😃\",\"这样的产品从开始就会死，即使短暂获取了投资人的大笔投入，也会死。\",\"区块链不属于大量早期投入获得市场，后期可以收回成本大幅获利的市场，它有自己的成长属性，一件事情如果一开始不获利，那之后也不会获利了，有很多死了的产品可以证实这一点。\",\"所以从这个角度来讲，AI是需要区块链的，AI产生的内容可以使用区块链证明产权，这样是有价值的，通过链上转移产权也是有价值的，这样可以公开转账过程...\"]},\"801\":{\"h\":\"3.没有发展社区\",\"t\":[\"产品是为人服务的，没有人的产品就相当于产品不存在。\",\"发展产品一定要注重社区，而且在区块链领域尤其如此，区块链的所有代码都是开源的(如果一个区块链没有开放源代码，那么请远离)，这意味着天然就是具有开源社区属性的，这会吸引优秀的开发者加入社区，帮助产品不断迭代。\",\"如果一个产品没有社区，闭门造车一定不会竞争过开源产品，有很多开源事例证明了这一点，拥抱社区是产品活下去的关键之一。\",\"不用担心源代码被抄去让竞争对手更强，从这方面来讲，区块链产品从不担心抄袭因为自带的社区属性可以巩固其已有的社区成员。\",\"etc...\"]},\"802\":{\"c\":[\"web3\"]},\"803\":{\"c\":[\"web3\"]},\"804\":{\"h\":\"为什么我购买持有并将长期购买持有数字资产\",\"t\":[\"一个趋势从诞生到发展到泡沫,再到泡沫挤干再重新形成泡沫到最后价值终将体现需要相当长的时间,针对趋势的理解需要全方位清晰捕捉到才能深刻理解它,对趋势理解不深刻就是深刻不理解.不论是数字资产还是 AI 机器人异或是其他领域均是如此.\",\"我个人是从 2020 年 11 月底开始接触比特币,并在做了一系列 Research 之后决定持有比特币以及具有相关属性的数字资产.\",\"所以实际上 16k 64k 110k的比特币我都买过,并几乎没有卖出计划.\",\"核心理由只有一个:数字世界的发展是当今世界最快的领域没有之一.\",\"判断依据:\",\"数字经济远比实体经济发展要快 ---> 数字资产的涨幅会远比实体经济的涨幅要快 数字资产可以摆脱某一地区经济增长停滞的束缚 对于经济体而言,算法治理优于人员治理\",\"到最后如果以上逻辑判断没有发生错误,那么最终的人类社会的场景应该是全数字时代,在信息互联网之上还有一层更高的金融互联网.\",\"到最后普通人依然不会亲身使用Defi NFT 等(就像AI 智能体时代普通人有了 AI 也不会提高生产力),但是普通人信赖的公司会参与其中,所以相当于所有的普通人都参与到数字经济世界中.\"]},\"805\":{\"c\":[\"thinking\"]},\"806\":{\"h\":\"未来呼啸而来\",\"t\":[\"古话说得好 人无远虑, 必有近忧,这句话的潜在含义是,人如果想要有远虑则不能被永恒的当下所束缚.\",\"人的主观感受永远是在当下的,当下是永远的囚笼.只有思绪在遥远的未来才可能彻底解脱.\",\"2021年的时候读过一本书《未来——呼啸而来》,这都 2025 年了书中提到的一些事情至今还没有发生,但我很确定一点就是书中提到的事情会在 十年、二十年后逐步展开，于是能跟随趋势发展的人当前就在未来的这些可能会爆发的行业中。\",\"被时时刻刻的当下所束缚，那么是不可能踩着十年、二十年的趋势吹起来的。\",\"华为内部在二十世纪初有一个决策，当时是任正非老先生排版决定的，大概是这样：\",\"二十世纪初房地产发展很迅速，房产价炒的也很高，于是就有华为内部的高管想将公司的资金投资一些房地产，换句话说就是有人想将可投资资产放到房地产上，但任正非的态度是：谁再敢提房地产就直接走人。\",\"于是华为在整个房地产发展的过程中几乎没有任何参与，于是几乎在未来二十年内这个决策看起来是错误的——房地产赚钱就是比做研发快得多。\",\"但二十年后房地产泡沫破裂后，才有人真正看得出任正非当时决策深谋远虑的地方。\",\"或许有人提到这样的观点：\",\"相关信息\",\"可以在一开始投入啊，然后在高点抛售啊。\",\"这样的想法不可取原因是：\",\"如果你做了选择了这样，那么你仍然是一个只看当下的人，一次两次逃顶只是运气，在其后任意一次黑天鹅中就会万劫不复，而作出这样决策的人显然不会只冒险一次。\",\"对此我的想法倒是这样的：\",\"如果想在长期(十年、二十年)内取得不错的结果，则必须放弃一些短期有用长期无用的事情。\"]},\"807\":{\"c\":[\"thinking\"]},\"808\":{\"h\":\"MathLifeMan\",\"t\":[\"推荐一个网站 233333\",\"这是个记录贴,记录一下我浏览 MathLifeMan 网站获得的有价值的信息.\",\"what-i-would-do-if-i-was-a-broke-20-year-old\",\"how-to-attain-mastery-and-be-the-top-0-1\",\"what-the-fuck-is-a-funnel-breaking-down-a-business\"]},\"809\":{\"c\":[\"thinking\"]},\"810\":{\"h\":\"可现实不会瞬间改变\",\"t\":[\"当我们了解到一个信息差、认知、知识时，总是会有一种期望，希望我们所处的现实生活可以瞬间改变，变得更好，但就我四五年的观察来看这种情况并不会存在。\",\"当我们读一本书了解到新的认知时，我们总会期望现实可以一瞬间变得更好，或者可以直接应用起新认知，但现实并不会瞬间改变。\",\"这就必须认识到任何认知任、知识都必须经过长期实践才能被我们内化，成为我们的一部分。\",\"我们从小学加减乘除，可是用了快半年才把乘法口诀了然于心，并在其后的几十年中不断去应用。任何知识、认知必须要经过长期不断主动实践才可能被内化成为我们身体的一部分。\",\"另外一点是，比别人认知高一点并没有什么用，真正有用的是认知差，只有认知差才是有价值的，只有你的认知与其他人的认知差到一定程——如蜉蝣观天地般才能发挥出认知差真正的价值。\",\"可即便如此，现实仍然不会瞬间改变，我在2021年读了很多书，学习到了很多道理认知，可即便到今天我也无法发挥出全部了解到的知识。\",\"只不过曾经读过的书可以让我在日常生活中会变得更加平和，做起事情来更加有条不紊，让身边人都觉得情绪比较稳定(哪有什么情绪稳定，只不过是思考的结果)。\"]},\"811\":{\"c\":[\"thinking\"]},\"812\":{\"h\":\"责任链模式\",\"t\":[\"作为行为模式，责任链模式允许你将请求沿着处理链路不断进行处理，每个处理者收到请求后会根据情况将请求传递给下一个链路的处理者。\"]},\"813\":{\"h\":\"定义\",\"t\":[\"责任链模式使多个对象都有可能接收请求,对请求的发送者和接收者解耦,可以根据需要在链中增加或者删除处理器。\",\"降低耦合度,发送者和接收者不需要知道彼此\",\"增加接收对象的灵活性\",\"可以根据需要构造链,自由组合不同的处理器\"]},\"814\":{\"h\":\"示例\",\"t\":[\"例如你需要设计一个网关系统，这个网关系统需要对请求头，请求体进行鉴权，那么这样你就可以利用责任链形式对鉴权的过程进行封装包装:\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" \\\"strings\\\" ) type HandleRequest interface { HandleAuth() error } type Authorization struct { handlers []HandleRequest } func (a *Authorization) AddHandler(h HandleRequest) { a.handlers = append(a.handlers, h) } func (a *Authorization) Run() error { for _, h := range a.handlers { // 如果发现敏感直接返回结果 if err := h.HandleAuth(); err != nil { return err } } return nil } type HttpHeaderAuth struct { headers []string } func (h *HttpHeaderAuth) HandleAuth() error { if len(h.headers) == 0 { return errors.New(\\\"len(header) == 0\\\") } for _, header := range h.headers { if header != \\\"xid123\\\" { return errors.New(\\\"error for header\\\") } } return nil } type HttpBodyAuth struct { body string } func (h *HttpBodyAuth) HandleAuth() error { if strings.HasPrefix(h.body, \\\"body: \\\") { return errors.New(\\\"error for http body\\\") } return nil } func main() { reqChain := &Authorization{} reqChain.AddHandler(&HttpHeaderAuth{}) reqChain.AddHandler(&HttpBodyAuth{}) fmt.Println(reqChain.Run()) } \",\"我们平时在Go Web开发中的中间件大多也是利用责任链模式实现的，例如gin的engine.Use()方法。\"]},\"815\":{\"h\":\"总结\",\"t\":[\"责任链模式通过链式请求传递,实现请求的多重接收和灵活处理,降低了耦合,增强了系统的灵活性。\"]},\"816\":{\"c\":[\"tutorial\"]},\"817\":{\"c\":[\"golang\",\"design-patterns\"]},\"818\":{\"h\":\"命令模式\",\"t\":[\"命令模式（Command Pattern）是一种行为型设计模式，它将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。\"]},\"819\":{\"h\":\"定义\",\"t\":[\"命令模式通常用于以下场景：\",\"当你需要将发出请求的对象和执行请求的对象解耦时，你可以使用命令模式，让中间的命令对象充当他们之间的桥梁。\",\"当你需要在不同的时刻指定、排列和执行请求时，你可以使用命令模式，让命令对象充当请求的容器，而且可以对它们进行保存、传递和调用。\",\"当你需要支持撤销、恢复功能时，你可以使用命令模式，让命令对象负责在执行操作之前保存状态，并在撤销操作时恢复状态。\",\"当你需要支持事务功能时，你可以使用命令模式，让命令对象作为事务中的原子操作，并在出现错误时回滚操作。\"]},\"820\":{\"h\":\"示例\",\"t\":[\"// Command 接口定义了执行操作的方法 type Command interface { Execute() } // TVReceiver 结构体定义了电视机接收者 type TVReceiver struct { Channel int } // NewTVReceiver 构造函数创建一个电视机接收者 func NewTVReceiver() *TVReceiver { return &TVReceiver{Channel: 1} } // TurnOn 方法定义了打开电视机的操作 func (tv *TVReceiver) TurnOn() { fmt.Println(\\\"Turn on the TV\\\") } // TurnOff 方法定义了关闭电视机的操作 func (tv *TVReceiver) TurnOff() { fmt.Println(\\\"Turn off the TV\\\") } // SwitchChannel 方法定义了切换频道的操作 func (tv *TVReceiver) SwitchChannel(channel int) { tv.Channel = channel fmt.Printf(\\\"Switch the channel to %d\\\\n\\\", tv.Channel) } // OnCommand 结构体定义了打开电视机的命令 type OnCommand struct { Receiver *TVReceiver } // NewOnCommand 构造函数创建一个打开电视机的命令 func NewOnCommand(receiver *TVReceiver) *OnCommand { return &OnCommand{Receiver: receiver} } // Execute 方法实现了 Command 接口，调用接收者的 TurnOn 方法 func (c *OnCommand) Execute() { c.Receiver.TurnOn() } // OffCommand 结构体定义了关闭电视机的命令 type OffCommand struct { Receiver *TVReceiver } // NewOffCommand 构造函数创建一个关闭电视机的命令 func NewOffCommand(receiver *TVReceiver) *OffCommand { return &OffCommand{Receiver: receiver} } // Execute 方法实现了 Command 接口，调用接收者的 TurnOff 方法 func (c *OffCommand) Execute() { c.Receiver.TurnOff() } // ChannelCommand 结构体定义了切换频道的命令 type ChannelCommand struct { Receiver *TVReceiver Channel int } // NewChannelCommand 构造函数创建一个切换频道的命令 func NewChannelCommand(receiver *TVReceiver, channel int) *ChannelCommand { return &ChannelCommand{Receiver: receiver, Channel: channel} } // Execute 方法实现了 Command 接口，调用接收者的 SwitchChannel 方法 func (c *ChannelCommand) Execute() { c.Receiver.SwitchChannel(c.Channel) } // Invoker 结构体定义了命令的调用者 type Invoker struct { On Command Off Command Channel Command } // NewInvoker 构造函数创建一个命令的调用者 func NewInvoker(on, off, channel Command) *Invoker { return &Invoker{On: on, Off: off, Channel: channel} } // CallOn 方法定义了调用打开电视机的命令的操作 func (i *Invoker) CallOn() { i.On.Execute() } // CallOff 方法定义了调用关闭电视机的命令的操作 func (i *Invoker) CallOff() { i.Off.Execute() } // CallChannel 方法定义了调用切换频道的命令的操作 func (i *Invoker) CallChannel() { i.Channel.Execute() } func main() { // 创建一个电视机接收者 tv := NewTVReceiver() // 创建三个命令对象，分别对应打开、关闭和切换频道的操作 on := NewOnCommand(tv) off := NewOffCommand(tv) channel := NewChannelCommand(tv, 3) // 创建一个命令调用者，将命令对象传入 invoker := NewInvoker(on, off, channel) // 调用者执行各种操作 invoker.CallOn() invoker.CallChannel() invoker.CallOff() } \"]},\"821\":{\"h\":\"总结\",\"t\":[\"命令模式是一种将请求封装为对象的设计模式，它可以实现请求的参数化、排队、日志记录、撤销、恢复和事务等功能。命令模式可以降低系统的耦合度，增加系统的灵活性和可扩展性。go语言可以很容易地实现命令模式，只需要定义一个 Command 接口，然后为每个具体的请求创建一个实现了该接口的结构体，并在其 Execute 方法中调用接收者的相应方法。最后，创建一个 Invoker 结构体，将各个命令对象传入，并在其方法中调用命令对象的 Execute 方法。\"]},\"822\":{\"c\":[\"tutorial\"]},\"823\":{\"c\":[\"golang\",\"design-patterns\"]},\"824\":{\"h\":\"迭代器模式\",\"t\":[\"迭代器模式（Iterator Pattern）是一种行为型设计模式，它提供了一种顺序访问集合元素的方法，而不需要暴露集合的内部表示。\"]},\"825\":{\"h\":\"用法\",\"t\":[\"迭代器模式通常用于以下场景：\",\"当你需要对一个复杂的集合进行多种方式的遍历时，你可以使用迭代器模式，让每种遍历方式都有一个专门的迭代器，而不需要修改集合的代码。\",\"当你需要对一个集合进行多种操作时，你可以使用迭代器模式，让每种操作都有一个专门的迭代器，而不需要在集合中添加新的方法。\",\"当你需要对一个隐藏了内部结构的集合进行访问时，你可以使用迭代器模式，让迭代器作为一个中介，提供统一的访问接口。\"]},\"826\":{\"h\":\"优点\",\"t\":[\"迭代器模式有以下优点：\",\"迭代器模式可以实现集合和遍历的分离，降低了系统的耦合度。\",\"迭代器模式可以提供多种遍历方式和操作方式，增加了系统的灵活性。\",\"迭代器模式可以隐藏集合的内部结构，保证了集合的封装性。\",\"实际上如果你熟悉C++的STL的话，对于迭代器的用法就不会陌生，因为C++的标准库STL的设计模式几乎就是基于Iterator来的。\"]},\"827\":{\"h\":\"示例\",\"t\":[\"下面是一个使用go语言实现的迭代器模式的例子，它模拟了一个书架上的书籍集合和两种不同的遍历方式。\",\"// Book 结构体定义了书籍对象 type Book struct { Name string Author string } // NewBook 构造函数创建一个书籍对象 func NewBook(name, author string) *Book { return &Book{Name: name, Author: author} } // BookShelf 结构体定义了书架对象，它是一个包含书籍对象的切片 type BookShelf struct { Books []*Book } // NewBookShelf 构造函数创建一个书架对象 func NewBookShelf() *BookShelf { return &BookShelf{Books: make([]*Book, 0)} } // AddBook 方法定义了向书架中添加书籍的操作 func (bs *BookShelf) AddBook(book *Book) { bs.Books = append(bs.Books, book) } // GetSize 方法定义了获取书架中书籍数量的操作 func (bs *BookShelf) GetSize() int { return len(bs.Books) } // GetBook 方法定义了获取书架中指定位置的书籍的操作 func (bs *BookShelf) GetBook(index int) *Book { if index < 0 || index >= bs.GetSize() { return nil } return bs.Books[index] } // Iterator 接口定义了迭代器对象的行为 type Iterator interface { HasNext() bool Next() interface{} } // NameIterator 结构体定义了按照书名顺序遍历书架的迭代器 type NameIterator struct { bookShelf *BookShelf index int } // NewNameIterator 构造函数创建一个按照书名顺序遍历书架的迭代器 func NewNameIterator(bookShelf *BookShelf) *NameIterator { return &NameIterator{bookShelf: bookShelf, index: 0} } // HasNext 方法实现了 Iterator 接口，判断是否还有下一个元素 func (ni *NameIterator) HasNext() bool { return ni.index < ni.bookShelf.GetSize() } // Next 方法实现了 Iterator 接口，返回下一个元素，并将索引加一 func (ni *NameIterator) Next() interface{} { book := ni.bookShelf.GetBook(ni.index) ni.index++ return book } // AuthorIterator 结构体定义了按照作者顺序遍历书架的迭代器 type AuthorIterator struct { bookShelf *BookShelf index int } // NewAuthorIterator 构造函数创建一个按照作者顺序遍历书架的迭代器 func NewAuthorIterator(bookShelf *BookShelf) *AuthorIterator { return &AuthorIterator{bookShelf: bookShelf, index: 0} } // HasNext 方法实现了 Iterator 接口，判断是否还有下一个元素 func (ai *AuthorIterator) HasNext() bool { return ai.index < ai.bookShelf.GetSize() } // Next 方法实现了 Iterator 接口，返回下一个元素，并将索引加一 func (ai *AuthorIterator) Next() interface{} { book := ai.bookShelf.GetBook(ai.index) ai.index++ return book } func main() { // 创建一个书架对象，并向其中添加一些书籍对象 bookShelf := NewBookShelf() bookShelf.AddBook(NewBook(\\\"The Go Programming Language\\\", \\\"Alan A. A. Donovan and Brian W. Kernighan\\\")) bookShelf.AddBook(NewBook(\\\"The C Programming Language\\\", \\\"Brian W. Kernighan and Dennis M. Ritchie\\\")) bookShelf.AddBook(NewBook(\\\"Design Patterns\\\", \\\"Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides\\\")) bookShelf.AddBook(NewBook(\\\"Refactoring\\\", \\\"Martin Fowler\\\")) // 创建两个不同的迭代器对象，分别按照书名顺序和作者顺序遍历书架 nameIterator := NewNameIterator(bookShelf) authorIterator := NewAuthorIterator(bookShelf) // 使用迭代器对象进行遍历，并打印结果 fmt.Println(\\\"Iterate by name:\\\") for nameIterator.HasNext() { book := nameIterator.Next().(*Book) fmt.Printf(\\\"Name: %s, Author: %s\\\\n\\\", book.Name, book.Author) } fmt.Println(\\\"Iterate by author:\\\") for authorIterator.HasNext() { book := authorIterator.Next().(*Book) fmt.Printf(\\\"Author: %s, Name: %s\\\\n\\\", book.Author, book.Name) } } \",\"输出结果：\",\"Iterate by name: Name: The Go Programming Language, Author: Alan A. A. Donovan and Brian W. Kernighan Name: The C Programming Language, Author: Brian W. Kernighan and Dennis M. Ritchie Name: Design Patterns, Author: Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides Name: Refactoring, Author: Martin Fowler Iterate by author: Author: Alan A. A. Donovan and Brian W. Kernighan, Name: The Go Programming Language Author: Brian W. Kernighan and Dennis M. Ritchie, Name: The C Programming Language Author: Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides, Name: Design Patterns Author: Martin Fowler, Name: Refactoring \"]},\"828\":{\"h\":\"总结\",\"t\":[\"迭代器模式是一种提供顺序访问集合元素的方法的设计模式，它可以实现集合和遍历的分离，提供多种遍历方式和操作方式，隐藏集合的内部结构。go语言可以很容易地实现迭代器模式，只需要定义一个 Iterator 接口，然后为每种遍历方式创建一个实现了该接口的结构体，并在其 HasNext 和 Next 方法中实现逻辑。最后，创建一个集合对象，提供一个返回迭代器对象的方法。\",\"我希望这篇文章能对你有所帮助。如果你还有其他想要了解的话题，欢迎继续和我聊天。😊\"]},\"829\":{\"c\":[\"tutorial\"]},\"830\":{\"c\":[\"golang\",\"design-patterns\"]},\"831\":{\"h\":\"中介者模式\",\"t\":[\"中介者模式是一种行为型设计模式，它定义了一个对象，用于封装一组对象之间的交互。中介者模式使得各个对象不需要显式地相互引用，从而降低了它们之间的耦合度。\"]},\"832\":{\"h\":\"用法\",\"t\":[\"中介者模式的用法有以下几种：\",\"当一组对象之间的通信方式复杂且难以理解时，可以使用中介者模式来简化它们之间的交互。\",\"当一个对象需要与多个其他对象进行协作时，可以使用中介者模式来减少对象之间的依赖关系。\",\"当一个系统需要在运行时动态地改变对象之间的交互方式时，可以使用中介者模式来实现灵活的变化。\",\"中介者模式的优点有以下几种：\",\"中介者模式可以降低系统的复杂度，提高系统的可维护性和可扩展性。\",\"中介者模式可以实现对象之间的松耦合，增强对象的重用性和独立性。\",\"中介者模式可以实现对象之间的一致性和协调性，保证系统的整体性和一致性。\"]},\"833\":{\"h\":\"示例\",\"t\":[\"// 定义抽象同事类 type Colleague interface { SetMediator(mediator Mediator) // 设置中介者 Send(message string) // 发送消息 Receive(message string) // 接收消息 } // 定义抽象中介者类 type Mediator interface { Register(colleague Colleague) // 注册同事 Relay(colleague Colleague, message string) // 转发消息 } // 定义具体同事类A type ColleagueA struct { mediator Mediator // 持有中介者引用 } // 实现设置中介者方法 func (c *ColleagueA) SetMediator(mediator Mediator) { c.mediator = mediator } // 实现发送消息方法 func (c *ColleagueA) Send(message string) { c.mediator.Relay(c, message) // 通过中介者转发消息 } // 实现接收消息方法 func (c *ColleagueA) Receive(message string) { fmt.Println(\\\"ColleagueA received:\\\", message) } // 定义具体同事类B type ColleagueB struct { mediator Mediator // 持有中介者引用 } // 实现设置中介者方法 func (c *ColleagueB) SetMediator(mediator Mediator) { c.mediator = mediator } // 实现发送消息方法 func (c *ColleagueB) Send(message string) { c.mediator.Relay(c, message) // 通过中介者转发消息 } // 实现接收消息方法 func (c *ColleagueB) Receive(message string) { fmt.Println(\\\"ColleagueB received:\\\", message) } // 定义具体中介者类 type ConcreteMediator struct { colleagues []Colleague // 持有同事对象的集合 } // 实现注册同事方法 func (m *ConcreteMediator) Register(colleague Colleague) { m.colleagues = append(m.colleagues, colleague) colleague.SetMediator(m) // 设置同事的中介者为自己 } // 实现转发消息方法 func (m *ConcreteMediator) Relay(colleague Colleague, message string) { for _, c := range m.colleagues { if c != colleague { // 转发给除自己以外的所有同事 c.Receive(message) } } } // 测试代码 func main() { // 创建具体同事对象 a := &ColleagueA{} b := &ColleagueB{} // 创建具体中介者对象，并注册同事对象 m := &ConcreteMediator{} m.Register(a) m.Register(b) // 同事对象通过中介者进行通信 a.Send(\\\"Hello, I am A.\\\") b.Send(\\\"Hi, I am B.\\\") } \",\"输出:\",\"ColleagueB received: Hello, I am A. ColleagueA received: Hi, I am B. \"]},\"834\":{\"h\":\"总结\",\"t\":[\"中介者模式是一种将对象之间的交互封装到一个中心对象的设计模式，它可以简化对象之间的通信，降低系统的耦合度，提高系统的可维护性和可扩展性。中介者模式适用于对象之间的交互方式复杂且难以理解，或者需要在运行时动态地改变对象之间的交互方式的场景。\"]},\"835\":{\"c\":[\"tutorial\"]},\"836\":{\"c\":[\"golang\",\"design-patterns\"]},\"837\":{\"h\":\"备忘录模式\",\"t\":[\"备忘录模式是一种行为型设计模式，它可以在不破坏对象的封装性的前提下，保存和恢复对象的内部状态。备忘录模式可以实现对象的撤销、回滚、恢复等功能。\",\"备忘录模式的用法有以下几种：\",\"当需要保存对象的历史状态，以便在需要时恢复到某个状态时，可以使用备忘录模式。\",\"当需要提供对象的快照，以便在发生错误或异常时，可以恢复到之前的状态时，可以使用备忘录模式。\",\"当需要实现对象的撤销、重做、事务等功能时，可以使用备忘录模式。\",\"备忘录模式的优点有以下几种：\",\"备忘录模式可以保护对象的封装性，不暴露对象的内部结构和实现细节。\",\"备忘录模式可以实现对象状态的管理和控制，提高对象的可靠性和安全性。\",\"备忘录模式可以实现对象状态的历史记录和回溯，增加对象的功能性和灵活性。\"]},\"838\":{\"h\":\"示例\",\"t\":[\"package main import \\\"fmt\\\" // 定义发起者 type Originator struct { state string // 内部状态 } // 实现创建方法 func (o *Originator) CreateMemento() *Memento { return &Memento{state: o.state} // 返回一个包含当前状态的备忘录 } // 实现恢复备忘录方法 func (o *Originator) RestoreMemento(m *Memento) { o.state = m.state // 从备忘录中恢复状态 } // 实现显示状态方法 func (o *Originator) ShowState() { fmt.Println(\\\"Originator state:\\\", o.state) } // 定义备忘录类 type Memento struct { state string // 保存的状态 } // 定义管理者类 type Caretaker struct { mementos []*Memento // 持有备忘录对象的切片 } // 实现保存备忘录方法 func (c *Caretaker) SaveMemento(m *Memento) { c.mementos = append(c.mementos, m) // 将备忘录添加到切片中 } // 实现获取备忘录方法 func (c *Caretaker) GetMemento(index int) *Memento { if index >= 0 && index < len(c.mementos) { // 检查索引是否有效 return c.mementos[index] // 返回指定索引的备忘录 } return nil // 返回空值 } // 测试代码 func main() { // 创建发起人对象，并设置初始状态 o := &Originator{state: \\\"ON\\\"} o.ShowState() // 创建管理者对象，并保存发起人的状态 c := &Caretaker{} c.SaveMemento(o.CreateMemento()) // 改变发起人的状态，并继续保存 o.state = \\\"OFF\\\" o.ShowState() c.SaveMemento(o.CreateMemento()) // 再次改变发起人的状态，并继续保存 o.state = \\\"ON\\\" o.ShowState() c.SaveMemento(o.CreateMemento()) // 从管理者对象中获取备忘录，并恢复发起人的状态 o.RestoreMemento(c.GetMemento(0)) // 恢复到第一个状态 o.ShowState() o.RestoreMemento(c.GetMemento(1)) // 恢复到第二个状态 o.ShowState() } \"]},\"839\":{\"h\":\"总结\",\"t\":[\"备忘录模式是一种将对象状态保存到外部对象中，并在需要时从外部对象中恢复的设计模式，它可以实现对象状态的历史记录和回溯，实现对象的撤销、回滚、恢复等功能。备忘录模式适用于需要保存和恢复对象状态，或者需要提供对象的快照的场景。\"]},\"840\":{\"c\":[\"tutorial\"]},\"841\":{\"c\":[\"golang\",\"design-patterns\"]},\"842\":{\"h\":\"观察者模式\",\"t\":[\"观察者模式是一种行为型设计模式，它定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个主题对象，当主题对象的状态发生变化时，它会通知所有观察者对象，使它们能够自动更新自己。\"]},\"843\":{\"h\":\"用法\",\"t\":[\"观察者模式的用法有以下几种：\",\"当一个对象的状态需要被其他对象实时关注时，可以使用观察者模式。\",\"当一个对象需要通知其他对象，而又不想与其他对象产生紧密的耦合时，可以使用观察者模式。\",\"当一个抽象模型有两个方面，其中一个方面依赖于另一个方面，可以将这两个方面封装在独立的对象中，使它们可以各自独立地改变和复用时，可以使用观察者模式。\",\"观察者模式的优点有以下几种：\",\"观察者模式可以实现对象之间的动态联动，实现数据的实时更新和同步。\",\"观察者模式可以实现对象之间的松耦合，增强对象的重用性和独立性。\",\"观察者模式可以实现抽象层的封装，隐藏了主题对象和观察者对象之间的具体实现细节。\"]},\"844\":{\"h\":\"示例\",\"t\":[\"// 定义抽象主题类 type Subject interface { Attach(observer Observer) // 添加观察者 Detach(observer Observer) // 移除观察者 Notify() // 通知观察者 } // 定义抽象观察者类 type Observer interface { Update(subject Subject) // 更新状态 } // 定义具体主题类 type ConcreteSubject struct { state int // 内部状态 observers []Observer // 持有观察者对象的切片 } // 实现添加观察者方法 func (s *ConcreteSubject) Attach(observer Observer) { s.observers = append(s.observers, observer) // 将观察者添加到切片中 } // 实现移除观察者方法 func (s *ConcreteSubject) Detach(observer Observer) { for i, o := range s.observers { if o == observer { // 找到要移除的观察者 s.observers = append(s.observers[:i], s.observers[i+1:]...) // 从切片中移除该观察者 break } } } // 实现通知观察者方法 func (s *ConcreteSubject) Notify() { for _, o := range s.observers { // 遍历所有观察者 o.Update(s) // 调用观察者的更新方法 } } // 实现获取状态方法 func (s *ConcreteSubject) GetState() int { return s.state // 返回当前状态 } // 实现设置状态方法 func (s *ConcreteSubject) SetState(state int) { s.state = state // 设置新状态 s.Notify() // 通知所有观察者 } // 定义具体观察者类A type ConcreteObserverA struct { state int // 内部状态 } // 实现更新状态方法 func (o *ConcreteObserverA) Update(subject Subject) { o.state = subject.GetState() // 从主题对象中获取新状态 fmt.Println(\\\"ConcreteObserverA state:\\\", o.state) } // 定义具体观察者类B type ConcreteObserverB struct { state int // 内部状态 } // 实现更新状态方法 func (o *ConcreteObserverB) Update(subject Subject) { o.state = subject.GetState() // 从主题对象中获取新状态 fmt.Println(\\\"ConcreteObserverB state:\\\", o.state) } // 测试代码 func main() { // 创建具体主题对象，并设置初始状态 s := &ConcreteSubject{state: 0} fmt.Println(\\\"Subject state:\\\", s.state) // 创建具体观察者对象，并添加到主题对象中 a := &ConcreteObserverA{} b := &ConcreteObserverB{} s.Attach(a) s.Attach(b) // 改变主题对象的状态，并通知所有观察者 s.SetState(1) s.SetState(2) } \",\"输出:\",\"Subject state: 0 ConcreteObserverA state: 1 ConcreteObserverB state: 1 ConcreteObserverA state: 2 ConcreteObserverB state: 2 \"]},\"845\":{\"h\":\"总结\",\"t\":[\"观察者模式是一种将对象状态的变化通知给其他对象的设计模式，它可以实现对象之间的动态联动，实现数据的实时更新和同步。观察者模式适用于对象状态需要被其他对象实时关注，或者需要通知其他对象，而又不想与其他对象产生紧密的耦合的场景。\"]},\"846\":{\"c\":[\"tutorial\"]},\"847\":{\"c\":[\"golang\",\"design-patterns\"]},\"848\":{\"h\":\"状态模式\",\"t\":[\"状态模式是一种行为型设计模式，它允许一个对象在其内部状态改变时，改变其行为。状态模式将对象的状态和行为分离，使得对象可以在运行时切换不同的状态，从而实现不同的行为。\",\"你可以读一读有限状态机这篇文章更详细了解状态模式有限状态机\",\"状态模式的用法有以下几种：\",\"当一个对象的行为取决于其状态，并且它需要在运行时根据状态改变其行为时，可以使用状态模式。\",\"当一个对象有多个状态，而且这些状态之间的转换逻辑复杂时，可以使用状态模式来管理这些状态和转换逻辑。\",\"当一个对象的操作有多个分支，每个分支依赖于该对象的状态时，可以使用状态模式来消除冗余的条件分支语句。\",\"状态模式的优点有以下几种：\",\"状态模式可以实现对象状态和行为的封装，提高了代码的可读性和可维护性。\",\"状态模式可以实现对象状态和行为的动态切换，增加了对象的灵活性和扩展性。\",\"状态模式可以避免使用大量的条件分支语句，降低了代码的复杂度和出错率。\"]},\"849\":{\"h\":\"用法\",\"t\":[\"// 定义抽象状态类 type State interface { Handle(context *Context) // 处理状态逻辑 } // 定义具体状态类A type ConcreteStateA struct {} // 实现处理状态逻辑方法 func (s *ConcreteStateA) Handle(context *Context) { fmt.Println(\\\"Current state is A\\\") context.SetState(&ConcreteStateB{}) // 切换到下一个状态 } // 定义具体状态类B type ConcreteStateB struct {} // 实现处理状态逻辑方法 func (s *ConcreteStateB) Handle(context *Context) { fmt.Println(\\\"Current state is B\\\") context.SetState(&ConcreteStateA{}) // 切换到下一个状态 } // 定义上下文类 type Context struct { state State // 持有当前状态对象 } // 实现设置状态方法 func (c *Context) SetState(state State) { c.state = state // 设置新状态 } // 实现请求方法 func (c *Context) Request() { c.state.Handle(c) // 调用当前状态对象的处理方法 } // 测试代码 func main() { // 创建上下文对象，并设置初始状态 c := &Context{state: &ConcreteStateA{}} // 调用请求方法，观察不同状态下的行为 c.Request() c.Request() c.Request() } \",\"输出\",\"Current state is A Current state is B Current state is A \"]},\"850\":{\"h\":\"总结\",\"t\":[\"状态模式是一种将对象的行为与其内部状态关联的设计模式，它可以实现对象在运行时根据不同的状态切换不同的行为。状态模式适用于对象的行为取决于其状态，或者对象有多个状态，并且这些状态之间的转换逻辑复杂的场景。\"]},\"851\":{\"c\":[\"tutorial\"]},\"852\":{\"c\":[\"golang\",\"design-patterns\"]},\"853\":{\"h\":\"策略模式\",\"t\":[\"策略模式是一种行为型设计模式，它定义了一系列的算法，将它们封装在一个个的策略类中，并使它们可以互相替换。策略模式可以根据不同的情况，选择不同的算法来完成相同的功能。\"]},\"854\":{\"h\":\"用法\",\"t\":[\"策略模式的用法有以下几种：\",\"当一个对象有多种行为，而且这些行为可以根据不同的条件进行选择时，可以使用策略模式。\",\"当一个对象需要动态地改变其行为时，可以使用策略模式来避免多重条件分支语句。\",\"当一个算法需要在多个地方使用，或者有多种实现方式时，可以使用策略模式来封装和复用这些算法。\",\"策略模式的优点有以下几种：\",\"策略模式可以实现算法和对象的解耦，提高了代码的可维护性和可扩展性。\",\"策略模式可以实现算法的动态切换，增加了对象的灵活性和适应性。\",\"策略模式可以避免使用大量的条件分支语句，降低了代码的复杂度和出错率。\"]},\"855\":{\"h\":\"示例\",\"t\":[\"// 定义抽象策略类 type Strategy interface { DoOperation(num1, num2 int) int // 定义算法接口 } // 定义具体策略类A type AddOperation struct {} // 实现算法接口 func (s *AddOperation) DoOperation(num1, num2 int) int { return num1 + num2 // 返回两数之和 } // 定义具体策略类B type SubOperation struct {} // 实现算法接口 func (s *SubOperation) DoOperation(num1, num2 int) int { return num1 - num2 // 返回两数之差 } // 定义具体策略类C type MulOperation struct {} // 实现算法接口 func (s *MulOperation) DoOperation(num1, num2 int) int { return num1 * num2 // 返回两数之积 } // 定义上下文类 type Context struct { strategy Strategy // 持有当前策略对象 } // 实现设置策略方法 func (c *Context) SetStrategy(strategy Strategy) { c.strategy = strategy // 设置新策略 } // 实现执行策略方法 func (c *Context) ExecuteStrategy(num1, num2 int) int { return c.strategy.DoOperation(num1, num2) // 调用当前策略对象的算法方法 } // 测试代码 func main() { // 创建上下文对象，并设置初始策略 c := &Context{strategy: &AddOperation{}} // 调用执行策略方法，观察不同策略下的结果 fmt.Println(\\\"10 + 5 =\\\", c.ExecuteStrategy(10, 5)) // 改变上下文对象的策略，并继续执行 c.SetStrategy(&SubOperation{}) fmt.Println(\\\"10 - 5 =\\\", c.ExecuteStrategy(10, 5)) // 再次改变上下文对象的策略，并继续执行 c.SetStrategy(&MulOperation{}) fmt.Println(\\\"10 * 5 =\\\", c.ExecuteStrategy(10, 5)) } \",\"输出结果：\",\"10 + 5 = 15 10 - 5 = 5 10 * 5 = 50 \"]},\"856\":{\"h\":\"总结\",\"t\":[\"策略模式是一种将算法封装在不同的策略类中，并使它们可以互相替换的设计模式，它可以实现对象在运行时根据不同的条件选择不同的算法来完成相同的功能。策略模式适用于对象有多种行为，或者一个算法有多种实现方式的场景。\"]},\"857\":{\"c\":[\"tutorial\"]},\"858\":{\"c\":[\"golang\",\"design-patterns\"]},\"859\":{\"h\":\"模版模式\",\"t\":[\"模板方法模式是一种行为型设计模式，它定义了一个算法的骨架，将一些步骤延迟到子类中实现。模板方法模式可以让子类在不改变算法结构的情况下，重新定义算法的某些步骤。\",\"当你希望在某个算法中的特定点上提供挂钩，以便其他人可以扩展该算法而无需更改其结构时，可以使用模板方法模式。\"]},\"860\":{\"h\":\"用法\",\"t\":[\"代码复用：你可以将相同的代码放在超类的一个公共方法中。\",\"扩展性：子类可以通过重写部分算法来实现新的行为。\",\"控制：父类可以控制子类的执行顺序。\"]},\"861\":{\"h\":\"示例\",\"t\":[\"package main import \\\"fmt\\\" // Game 是一个抽象类 type Game interface { Start() End() Play() } // Chess 是 Game 的一个具体实现 type Chess struct{} func (c *Chess) Start() { fmt.Println(\\\"Chess game started!\\\") } func (c *Chess) End() { fmt.Println(\\\"Chess game ended!\\\") } func (c *Chess) Play() { c.Start() fmt.Println(\\\"Playing chess...\\\") c.End() } // Main func main() { var game Game = &Chess{} game.Play() } \"]},\"862\":{\"h\":\"总结\",\"t\":[\"模板方法模式是一种非常有用的设计模式，它提供了一种优雅的方式来处理某些需要高度灵活性和可扩展性的问题。在Go语言中，我们可以通过接口和结构体来实现这个模式。这种模式允许我们在不改变算法结构的情况下，通过子类改变算法中的某些步骤。这使得我们可以将变化的部分放在子类中，保持超类的稳定和一致。总的来说，这是一种非常强大且灵活的设计模式。\"]},\"863\":{\"c\":[\"tutorial\"]},\"864\":{\"c\":[\"golang\",\"design-patterns\"]},\"865\":{\"h\":\"访问者模式\",\"t\":[\"访问者模式是一种行为型设计模式，它定义了一个作用于某个对象结构中的各个元素的操作，可以在不改变各个元素的类的前提下，定义作用于这些元素的新操作。访问者模式可以将数据结构和数据操作分离，实现对复杂对象结构的扩展。\"]},\"866\":{\"h\":\"用法\",\"t\":[\"访问者模式的用法有以下几种：\",\"当一个对象结构包含多个类型的对象，而且需要对这些对象执行不同的操作时，可以使用访问者模式。\",\"当一个对象结构需要增加新的操作，而且这些操作不依赖于对象结构的具体类型时，可以使用访问者模式。\",\"当一个对象结构需要提供多种不同的遍历方式时，可以使用访问者模式来封装这些遍历方式。\",\"访问者模式的优点有以下几种：\",\"访问者模式可以实现对象结构和操作的解耦，提高了代码的可维护性和可扩展性。\",\"访问者模式可以实现对对象结构中各个元素的统一处理，增加了代码的复用性和一致性。\",\"访问者模式可以实现对对象结构中各个元素的动态访问，增加了代码的灵活性和适应性。\"]},\"867\":{\"h\":\"示例\",\"t\":[\"// 定义抽象元素类 type Element interface { Accept(visitor Visitor) // 接受访问者 } // 定义具体元素类A type ConcreteElementA struct { name string // 元素名称 } // 实现接受访问者方法 func (e *ConcreteElementA) Accept(visitor Visitor) { visitor.VisitConcreteElementA(e) // 调用访问者对自己的访问方法 } // 实现获取名称方法 func (e *ConcreteElementA) GetName() string { return e.name // 返回元素名称 } // 定义具体元素类B type ConcreteElementB struct { name string // 元素名称 } // 实现接受访问者方法 func (e *ConcreteElementB) Accept(visitor Visitor) { visitor.VisitConcreteElementB(e) // 调用访问者对自己的访问方法 } // 实现获取名称方法 func (e *ConcreteElementB) GetName() string { return e.name // 返回元素名称 } // 定义抽象访问者类 type Visitor interface { VisitConcreteElementA(element *ConcreteElementA) // 访问具体元素A VisitConcreteElementB(element *ConcreteElementB) // 访问具体元素B } // 定义具体访问者类A type ConcreteVisitorA struct {} // 实现访问具体元素A方法 func (v *ConcreteVisitorA) VisitConcreteElementA(element *ConcreteElementA) { fmt.Println(\\\"ConcreteVisitorA visits\\\", element.GetName()) } // 实现访问具体元素B方法 func (v *ConcreteVisitorA) VisitConcreteElementB(element *ConcreteElementB) { fmt.Println(\\\"ConcreteVisitorA visits\\\", element.GetName()) } // 定义具体访问者类B type ConcreteVisitorB struct {} // 实现访问具体元素A方法 func (v *ConcreteVisitorB) VisitConcreteElementA(element *ConcreteElementA) { fmt.Println(\\\"ConcreteVisitorB visits\\\", element.GetName()) } // 实现访问具体元素B方法 func (v *ConcreteVisitorB) VisitConcreteElementB(element *ConcreteElementB) { fmt.Println(\\\"ConcreteVisitorB visits\\\", element.GetName()) } // 定义对象结构类 type ObjectStructure struct { elements []Element // 持有元素对象的切片 } // 实现添加元素方法 func (o *ObjectStructure) Add(element Element) { o.elements = append(o.elements, element) // 将元素添加到切片中 } // 实现移除元素方法 func (o *ObjectStructure) Remove(element Element) { for i, e := range o.elements { if e == element { // 找到要移除的元素 o.elements = append(o.elements[:i], o.elements[i+1:]...) // 从切片中移除该元素 break } } } // 实现接受访问者方法 func (o *ObjectStructure) Accept(visitor Visitor) { for _, e := range o.elements { // 遍历所有元素 e.Accept(visitor) // 调用元素的接受访问者方法 } } // 测试代码 func main() { // 创建对象结构对象，并添加元素对象 o := &ObjectStructure{} o.Add(&ConcreteElementA{name: \\\"ElementA\\\"}) o.Add(&ConcreteElementB{name: \\\"ElementB\\\"}) // 创建访问者对象，并访问对象结构中的元素 a := &ConcreteVisitorA{} b := &ConcreteVisitorB{} o.Accept(a) o.Accept(b) } \",\"输出结果：\",\"ConcreteVisitorA visits ElementA ConcreteVisitorA visits ElementB ConcreteVisitorB visits ElementA ConcreteVisitorB visits ElementB \"]},\"868\":{\"h\":\"总结\",\"t\":[\"访问者模式是一种将对对象结构中各个元素的操作封装在不同的访问者类中，并使它们可以在不改变元素类的前提下，定义对这些元素的新操作的设计模式，它可以实现对象结构和操作的分离，实现对复杂对象结构的扩展。访问者模式适用于对象结构包含多个类型的对象，而且需要对这些对象执行不同的操作，或者需要增加新的操作，或者需要提供多种不同的遍历方式的场景。\"]},\"869\":{\"c\":[\"tutorial\"]},\"870\":{\"c\":[\"golang\",\"design-patterns\"]},\"871\":{\"h\":\"建造者模式\",\"t\":[\"建造者模式是一种创建型设计模式,它可以将一个复杂对象的构建与它的表示分离,使得同样的构建过程可以创建不同的表示。\"]},\"872\":{\"h\":\"定义\",\"t\":[\"建造者模式的主要作用有:\",\"封装一个复杂对象的创建过程。客户端不需要知道复杂对象的内部结构,只需要指定需要的属性就可以构建一个复杂对象。\",\"可以更精细地控制对象的创建过程。可以通过不同的建造者创建不同的产品对象。\",\"将复杂对象的创建代码与业务逻辑代码分离,提高复用性和灵活性。\"]},\"873\":{\"h\":\"用处\",\"t\":[\"Go语言中实现建造者模式的主要步骤:\",\"定义一个Builder接口,指定需要实现的方法,如BuildPartA()、BuildPartB()等。\",\"实现Builder接口,创建具体的建造者,实现接口中的方法以构建产品的各个部件。\",\"定义一个Director结构体,在其中定义一个方法,该方法会使用Builder接口构建完整的产品对象。\",\"Director通过Builder接口与不同的具体建造者交互,以构建完整的产品对象。\",\"建造者模式的主要优点是:\",\"封装复杂对象的创建过程\",\"分离复杂对象的创建和表示\",\"实现创建过程与表示分离\",\"建造者模式的主要缺点:\",\"建造者模式比直接创建复杂对象更加复杂\",\"建造者与Director之间存在紧密的依赖\",\"相比建造者模式,Go语言更推荐使用函数选项模式。因为函数选项模式可以实现类似的功能,但是语法更简单,不需要引入多余的接口和类型,更符合Go语言的简洁风格。函数选项模式可以通过闭包和高阶函数实现,语法轻量且易于使用。\",\"所以在Go语言中实现复杂对象的创建,更推荐使用函数选项模式,而不是较重且复杂的建造者模式。函数选项模式可以实现建造者模式的优点,同时代码更简洁。\"]},\"874\":{\"h\":\"实现\",\"t\":[\"package builder type Gender int const ( Men Gender = iota Women ) type Person struct { Name string Age int Gender Gender Phone int } type PersonConfig struct { Age int Gender Gender Phone int } const ( defaultAge = 20 defaultGender = Men defaultPhone = 12306 ) func NewPerson(name string, config *PersonConfig) *Person { p := &Person{ name, defaultAge, defaultGender, defaultPhone, } if config.Age != defaultAge { p.Age = config.Age } if config.Phone != defaultPhone { p.Phone = config.Phone } if config.Gender != defaultGender { p.Gender = config.Gender } return p } func (p *Person) SetAge(age int) { p.Age = age } func (p *Person) SetName(name string) { p.Name = name } func (p *Person) SetPhone(phone int) { p.Phone = phone } func (p *Person) SetGender(Gender Gender) { p.Gender = Gender } \"]},\"875\":{\"h\":\"另一种实现\",\"t\":[\"但其实Go语言中并不推荐传统的建造者模式，更推荐函数选项模式。\",\" type OptionFunc func(*Person) func WithPhone(phone int) OptionFunc { return func(p *Person) { p.Phone = phone } } func WithGender(gender Gender) OptionFunc { return func(p *Person) { p.Gender = gender } } func WithAge(age int) OptionFunc { return func(p *Person) { p.Age = age } } func NewPerson2(name string, optionFunc ...OptionFunc) *Person { p := &Person{ Name: name, } for _, o := range optionFunc { o(p) } return p } \"]},\"876\":{\"h\":\"总结\",\"t\":[\"使用工厂模式的一些优点是降低耦合度、可扩展性和灵活性。缺点是多了一层抽象层，导致代码增多，实现复杂。\",\"总的来说，当需要将对象创建代码与消费者代码分离，以及需要动态添加新的派生产品类时，工厂模式是非常有用的。它非常适合需要运行时配置灵活性和多态性的场景。\"]},\"877\":{\"c\":[\"tutorial\"]},\"878\":{\"c\":[\"golang\",\"design-patterns\"]},\"879\":{\"h\":\"工厂模式\",\"t\":[\"工厂模式是面向对象编程语言中常用的设计模式，用于抽象对象创建过程。\",\"代码不直接实例化对象，而是向工厂对象请求实例，工厂对象负责返回完全初始化的对象。\"]},\"880\":{\"h\":\"定义\",\"t\":[\"工厂模式定义了创建对象的接口，但让子类决定实例化哪个类。这种模式包括一个创建类，它知道要实例化哪些具体类。客户端代码调用工厂对象，而不是直接通过构造函数创建对象。\",\"工厂方法返回一个通用产品。它为在超类中创建对象提供了一个接口，但允许子类改变将要创建对象的类型。\"]},\"881\":{\"h\":\"用处\",\"t\":[\"使用工厂模式有几个主要好处：\",\"减少了复杂的对象创建代码，并通过将创建逻辑集中在一处来消除重复。\",\"减少对具体类型的依赖，促进松散耦合。客户端代码只需了解工厂接口，而无需关心对象是如何创建的。\",\"它遵循单一责任原则，将对象创建代码与其他业务逻辑分开。\",\"测试代码变得更容易，因为在测试过程中可以对具体类型进行模拟或存根测试，而无需更改客户端代码。\"]},\"882\":{\"h\":\"实现\"},\"883\":{\"h\":\"简单工厂\",\"t\":[\"在Go语言本身是没有构造函数一说，也没有父类字类一说。可以通过init函数在包被加载的时候创建对象，不过我们经常会定义一个NewXXX来创建对象。\",\"其关键在于定义一个工厂接口，通过一个具体的工厂来实现它，并在工厂后面抽象出对象的创建\",\"// Product is the interface for products type Product interface { Name() string } // Concrete product 1 type ConcreteProduct1 struct{} func (c *ConcreteProduct1) Name() string { return \\\"Product 1\\\" } // Concrete product 2 type ConcreteProduct2 struct{} func (c *ConcreteProduct2) Name() string { return \\\"Product 2\\\" } // Factory is the interface for the factory type Factory interface { CreateProduct(product string) Product } // Concrete factory type ConcreteFactory struct{} func (f *ConcreteFactory) CreateProduct(product string) Product { switch product { case \\\"1\\\": return &ConcreteProduct1{} case \\\"2\\\": return &ConcreteProduct2{} } return nil } func main() { factory := ConcreteFactory{} product := factory.CreateProduct(\\\"1\\\") fmt.Println(product.Name()) } \"]},\"884\":{\"h\":\"总结\",\"t\":[\"使用工厂模式的一些优点是降低耦合度、可扩展性和灵活性。缺点是多了一层抽象，导致代码增多，实现复杂。\",\"总的来说，当需要将对象创建代码与消费者代码分离，以及需要动态添加新的派生产品类时，工厂模式非常有用。它非常适合需要运行时配置灵活性和多态性的场景。\"]},\"885\":{\"c\":[\"tutorial\"]},\"886\":{\"c\":[\"golang\",\"design-patterns\"]},\"887\":{\"h\":\"原型模式\",\"t\":[\"原型模式是一种创建型设计模式,使我们可以基于已有对象复制一个又一个新对象，而又无需使代码依赖它们所属的类。\",\"最简单的方式就是在创建类的时候附加一个Clone的方法。\",\"原型模式的问题在于有些对象不是很容易复制的，如果仅仅是在赋值就没有意义了，有些对象比如说字符串可能是在堆上的类，这样的类通过直接赋值的方式是没办法直接复制的。\",\"另外对于类而言有些类内的内容是有私有内容并且不希望对外暴露的，所以有时候直接从外部复制并不可行，就需要类的方法帮助我们。\",\"原型模式就是将Clone的过程交给原有对象，这相当于让原有对象提供一个允许我们任意复制的接口。\"]},\"888\":{\"h\":\"定义\"},\"889\":{\"h\":\"用处\",\"t\":[\"原型模式的优点是:\",\"提高性能。使用原型模式实现对象的构造通常比直接调用构造函数更快一些。这是因为使用原型模式创建对象不需要额外信息,在某些场景下并不需要每次都重新创建一个完全新对象。\",\"简化对象创建过程。原型模式大大简化了创建新对象的工作,通过拷贝原型直接复制对象结构而不是通过单独的构造器来实现。\",\"在运行时可以增加和删除对象类型,实现灵活的生成对象的功能。\"]},\"890\":{\"h\":\"实现\",\"t\":[\"package prototype type Person struct { Name string Proto map[string]string } func (p *Person) Clone() *Person { pClone := &Person{Name: p.Name} pClone.Proto = make(map[string]string) for k, v := range p.Proto { pClone.Proto[k] = v } return pClone } func NewPerson(name string, Proto map[string]string) *Person { return &Person{ Name: name, Proto: Proto, } } \"]},\"891\":{\"h\":\"总结\",\"t\":[\"总结来说,原型模式通过对象复制的方式实现对象的创建和克隆操作。Go语言通过结构体的组合和方法来支持灵活的原型模式实现。这种模式能够简化对象的创建过程。\"]},\"892\":{\"c\":[\"tutorial\"]},\"893\":{\"c\":[\"golang\",\"design-patterns\"]},\"894\":{\"h\":\"单例模式\",\"t\":[\"在软件开发中，经常会遇到需要保证系统中只有一个对象的情况。这种情况下，可以使用单例模式来解决问题。本文将介绍单例模式的定义、用处、实现方法和区别，并通过一个示例程序来说明其应用。\"]},\"895\":{\"h\":\"定义\",\"t\":[\"单例模式是一种创建型设计模式，其目的是确保系统中只有一个对象，并提供了一个全局访问点来访问该对象。单例模式通常用于管理系统资源，如数据库连接池、日志记录器等。\",\"我们的实现可以采用饿汉和懒汉的方式来实现:\"]},\"896\":{\"h\":\"用处\",\"t\":[\"单例模式的主要用处包括：\",\"保证系统中只有一个对象，从而节省内存空间和提高性能。\",\"提供了一个全局访问点，使得系统中的其他对象可以访问该对象。\",\"可以方便地控制对象的生命周期，如初始化、销毁等。\"]},\"897\":{\"h\":\"实现\"},\"898\":{\"h\":\"饿汉式\",\"t\":[\"饿汉式单例模式是指在类加载时就立即创建对象，并将其存储在静态变量中。这种方式的好处是线程安全，但是缺点是不能够延迟对象的创建，可能会造成资源浪费。\",\"type Singleton struct{} var instance = &Singleton{} func GetInstance() *Singleton { return instance } \",\"var RespMap = map[int]string{ 200: \\\"OK\\\", 304: \\\"Move\\\", 305: \\\"Move\\\", } type Resp struct { Code int Msg string } func GetInstance(code int) Resp { return Resp{ Code: code, Msg: RespMap[code], } } \"]},\"899\":{\"h\":\"懒汉式\",\"t\":[\"懒汉式单例模式是指在第一次使用对象时才创建对象，并将其存储在静态变量中。这种方式的好处是可以延迟对象的创建，从而节省资源，但是缺点是线程不安全。\",\"type Singleton struct{} var ( instance *Singleton once sync.Once ) func GetInstanceOnce() *Singleton { once.Do(func() { instance = &Singleton{} }) return instance } \",\"测试:\",\"package singleton import ( \\\"testing\\\" ) func Benchmark_GetInstance(b *testing.B) { b.RunParallel(func(pb *testing.PB) { for pb.Next() { GetInstance() } }) } func Benchmark_GetInstanceOnce(b *testing.B) { b.RunParallel(func(pb *testing.PB) { for pb.Next() { GetInstanceOnce() } }) } \",\"压测:\",\"go test -benchmem -bench=\\\".\\\" -v goos: darwin goarch: arm64 pkg: demo_design/Singleton Benchmark_GetInstance Benchmark_GetInstance-10 1000000000 0.1801 ns/op 0 B/op 0 allocs/op Benchmark_GetInstanceOnce Benchmark_GetInstanceOnce-10 1000000000 0.2661 ns/op 0 B/op 0 allocs/op PASS ok demo_design/Singleton 0.591s \",\"然而，单例模式也存在一些缺点：\",\"难以测试：由于单例模式的全局性质，测试时可能会遇到困难，特别是在并发测试中。\",\"潜在的性能问题：单例模式可能成为系统的瓶颈，因为它限制了并发访问实例的能力。\",\"违反单一职责原则：单例模式将数据和控制逻辑耦合在一起，可能导致代码维护困难。\"]},\"900\":{\"h\":\"总结\",\"t\":[\"单例模式是一种常用的设计模式，可以保证系统中只有一个对象，从而节省内存空间和提高性能。在Go语言中，可以使用饿汉式或懒汉式单例模式来实现。饿汉式单例模式更加适合于对象创建后不会被修改的场景，而懒汉式单例模式更加适合于对象创建后可能会被修改的场景。\"]},\"901\":{\"c\":[\"tutorial\"]},\"902\":{\"c\":[\"golang\",\"design-patterns\"]},\"903\":{\"h\":\"适配器模式\",\"t\":[\"适配器是一种结构型设计模式，它能使不兼容的接口匹配和工作。\",\"例如我们知道美国、欧洲、中国的充电器接口和插座电源标准都不太一样，这时候如果我们去欧洲，那么我们可以通过一个适配器转换将我们在中国的插口转换为在欧洲电源上的充电。\",\"简单来说，适配器可以充当两个对象之间的中间封装层，用于接受一个对象的调用将其转换为另一个接口对象可以识别的接口。\"]},\"904\":{\"h\":\"用处\",\"t\":[\"当我们希望使用一个类时，但其接口与其他代码不兼容，我们这时候就可以使用适配器来解决:适配器允许我们创建一个中间层类，可以作为代码与遗留类、第三方类提供接口的转换器。\",\"但是代码会变得比较复杂，因为我们会多加一系列接口和类，有时候还得更改原服务类来解决。\"]},\"905\":{\"h\":\"实现\",\"t\":[\"例如我们目前有个解释器，只接受JSON格式的输入，但于此同时，我们有一些YAML格式的数据，想通过=适配器进行转换，我们就可以这样解决。\",\"我们这里有一个只接受JSON格式的客户端的代码，用于接收一个JSON对象来分析。\",\"但是某些情况下我们可能希望输入YAML格式的数据，这时候就可以通过适配器来解决。\",\"// client.go type Client struct { } func (c *Client) InputIntoJson(d DataFormat) { fmt.Println(\\\"Client input json format data.\\\") d.InputIntoJson() } \",\"// format.go type DataFormat interface { InputIntoJson() } \",\"// json.go type JSONFormat struct { } func (j *JSONFormat) InputIntoJson() { fmt.Println(\\\"JSONFormat input json\\\") } \",\"// yaml.go type YAMLFormat struct{} func (f *YAMLFormat) InputIntoYAML() { fmt.Println(\\\"input into yaml.\\\") } \",\"// yamlAdapter.go type YAMLFormatAdapter struct { yamlFormat *YAMLFormat } func (w *YAMLFormatAdapter) InputIntoJson() { w.yamlFormat.InputIntoYAML() fmt.Println(\\\"Adapter converts yaml to JSON.\\\") } \",\"// main.go func main() { c := Client{} json := &JSONFormat{} c.InputIntoJson(json) yaml := &YAMLFormat{} yamlFormatAdapter := &YAMLFormatAdapter{ yaml, } c.InputIntoJson(yamlFormatAdapter) } \",\"输出：\",\"Client input json format data. JSONFormat input json Client input json format data. input into yaml. Adapter converts yaml to JSON. \"]},\"906\":{\"h\":\"总结\",\"t\":[\"适配器模式是一种结构型设计模式,它能使不兼容的接口匹配和工作。适配器模式在接口不兼容的情况下,使用一个适配器作为中间件,来连接目标接口和适配的接口,从而使原本不匹配的接口可以一起工作。\",\"适配器模式的主要作用是:\",\"把一个类的接口转换成客户希望的另一个接口,使原本接口不兼容的类可以一起工作。\",\"通过适配器和适配接口,可以让原本不兼容的类工作在一起,提高了类的复用性。\",\"可以将目标类和适配者类解耦,提高程序的灵活性。\",\"符合开闭原则,在不修改原有代码的情况下,增加了新的接口适配功能。\"]},\"907\":{\"c\":[\"tutorial\"]},\"908\":{\"c\":[\"golang\",\"design-patterns\"]},\"909\":{\"h\":\"桥接模式\",\"t\":[\"桥接模式是一种结构型设计模式,它能将抽象部分与实现部分分离开来,使得两者可以独立变化。桥接模式建立一个桥接结构去搭起抽象部分和实现部分,从而可以保持各部分的独立性和优势。\",\"桥接模式的主要作用是:\",\"桥接模式能将抽象部分和实现部分分离,它们可以独立地变化。\",\"消除永久绑定关系,提高系统的可扩展性,客户端不需要重新编译代码就可以扩展新的实现类。\",\"桥接模式提高了抽象和实现的独立性,有利于系统的分层设计。\",\"桥接模式符合开闭原则,在抽象和实现中任意一方改变,都不影响另一方。\"]},\"910\":{\"h\":\"实现\",\"t\":[\"例如我们现在有两台电脑，一台Mac和一台Windows，另外还有两台打印机，任意电脑都可使用两台打印机，所以这四台机器的排列组合值是4个。\",\"抽象层是计算机，实施层是打印机。\",\"这两个层次可以通过桥接进行沟通，其中抽象层(计算机)包含对实施层(打印机)的引用。抽象层和实施层均可独立开发不受影响。\",\"// computer.go type Computer interface { Print() SetPrinter(Printer) } \",\"// mac.go type Mac struct { printer Printer } func (m *Mac) Print() { fmt.Println(\\\"Print request for mac\\\") m.printer.PrintFile() } func (m *Mac) SetPrinter(p Printer) { m.printer = p } \",\"// windows.go type Windows struct { printer Printer } func (w *Windows) Print() { fmt.Println(\\\"Print request for windows\\\") w.printer.PrintFile() } func (w *Windows) SetPrinter(p Printer) { w.printer = p } \",\"// printer.go type Printer interface { PrintFile() } \",\"// epson.go type Epson struct { } func (p *Epson) PrintFile() { fmt.Println(\\\"Printing by a EPSON Printer\\\") } \",\"// hp.go type Hp struct { } func (p *Hp) PrintFile() { fmt.Println(\\\"Printing by a HP Printer\\\") } \",\"// main.go package main import \\\"fmt\\\" func main() { hpPrinter := &Hp{} epsonPrinter := &Epson{} macComputer := &Mac{} macComputer.SetPrinter(hpPrinter) macComputer.Print() fmt.Println() macComputer.SetPrinter(epsonPrinter) macComputer.Print() fmt.Println() winComputer := &Windows{} winComputer.SetPrinter(hpPrinter) winComputer.Print() fmt.Println() winComputer.SetPrinter(epsonPrinter) winComputer.Print() fmt.Println() } \",\"结果:\",\"Print request for mac Printing by a HP Printer Print request for mac Printing by a EPSON Printer Print request for windows Printing by a HP Printer Print request for windows \"]},\"911\":{\"h\":\"总结\",\"t\":[\"桥接器作为结构型设计模式，可以将业务逻辑拆分为不同的结构层次，从而独立开发，抽象层一般可以将对自己的调用委派给实现的对象。所有的实现部分都有一个通用接口， 因此它们能在抽象部分内部相互替换。\"]},\"912\":{\"c\":[\"tutorial\"]},\"913\":{\"c\":[\"golang\",\"design-patterns\"]},\"914\":{\"h\":\"组合模式\",\"t\":[\"组合模式描述了对象的部分-整体层次结构,将对象组合成树状结构以表示“整体-部分”的层次关系。它使得用户对单个对象和组合对象的使用具有一致性。\",\"明确整体和部分对象,部分对象实现共同的接口,整体对象包含部分对象,提供实现整体业务的方法。\"]},\"915\":{\"h\":\"用法\",\"t\":[\"让我们试着用一个操作系统文件系统的例子来理解组合模式。 文件系统中有两种类型的对象： 文件和文件夹。 在某些情形中， 文件和文件夹应被视为相同的对象。 这就是组合模式发挥作用的时候了。\",\"想象一下， 你需要在文件系统中搜索特定的关键词。 这一搜索操作需要同时作用于文件和文件夹上。 对于文件而言， 其只会查看文件的内容； 对于文件夹则会在其内部的所有文件中查找关键词。\",\"// component.go type Component interface { search(string) } \",\"// folder.go type Folder struct { components []Component name string } func (f *Folder) search(keyword string) { fmt.Printf(\\\"Serching recursively for keyword %s in folder %s\\\\n\\\", keyword, f.name) for _, composite := range f.components { composite.search(keyword) } } func (f *Folder) add(c Component) { f.components = append(f.components, c) } \",\"// file.go type File struct { name string } func (f *File) search(keyword string) { fmt.Printf(\\\"Searching for keyword %s in file %s\\\\n\\\", keyword, f.name) } func (f *File) getName() string { return f.name } \",\"// main.go package main func main() { file1 := &File{name: \\\"File1\\\"} file2 := &File{name: \\\"File2\\\"} file3 := &File{name: \\\"File3\\\"} folder1 := &Folder{ name: \\\"Folder1\\\", } folder1.add(file1) folder2 := &Folder{ name: \\\"Folder2\\\", } folder2.add(file2) folder2.add(file3) folder2.add(folder1) folder2.search(\\\"rose\\\") } \",\"输出:\",\"Serching recursively for keyword rose in folder Folder2 Searching for keyword rose in file File2 Searching for keyword rose in file File3 Serching recursively for keyword rose in folder Folder1 Searching for keyword rose in file File1 \"]},\"916\":{\"h\":\"总结\",\"t\":[\"组合模式作为结构模式可以将对象组合成树状的结构，并可以将成员对象抽象成接口像独立对象一样使用它们。\"]},\"917\":{\"c\":[\"tutorial\"]},\"918\":{\"c\":[\"golang\",\"design-patterns\"]},\"919\":{\"h\":\"装饰模式\",\"t\":[\"装饰器模式(Decorator)是一种结构型设计模式,允许向一个现有的对象添加新的功能,同时又不改变其结构。这种类型的设计模式属于结构型模式,它创建了一个装饰类,用来包装原有的类,并在保持类方法完整性的前提下,提供了额外的功能。\"]},\"920\":{\"h\":\"用法\",\"t\":[\"装饰器模式在不改变原有对象的基础上,通过装饰类提供额外的功能。它提供了比继承更有弹性的替代方案。常用于一些复杂的扩展需求,通过装饰器可以在运行时扩展对象功能。\",\"使用起来很简单，就是在原来对象的基础上增加一些扩展，但又不像继承那样比较难以维护。\"]},\"921\":{\"h\":\"示例\",\"t\":[\"type Component interface { Operate() } // 具体构件角色 type ConcreteComponent struct {} func (c *ConcreteComponent) Operate() { // 原有功能 } // 具体装饰类A type ConcreteDecoratorA struct { Decorator } func (d *ConcreteDecoratorA) Operate() { // 调用原有功能 d.Component.Operate() // 添加额外功能 fmt.Println(\\\"ConcreteDecoratorA operate\\\") } \"]},\"922\":{\"h\":\"总结\",\"t\":[\"装饰器模式可以在不改变原有对象的情况下,通过组合类提供功能扩展,符合开闭原则,比继承更灵活,是一种常用的设计模式。\"]},\"923\":{\"c\":[\"tutorial\"]},\"924\":{\"c\":[\"golang\",\"design-patterns\"]},\"925\":{\"h\":\"外观模式\",\"t\":[\"外观模式(Facade)隐藏系统的复杂性,并向客户端提供了一个客户端可以访问系统的接口。这种类型的设计模式属于结构型模式,它向现有的系统添加一个接口,来隐藏系统的复杂性。\"]},\"926\":{\"h\":\"定义\",\"t\":[\"外观模式提供了一个高层次的接口,使子系统更易于使用。外观模式用于定义一个高层接口,这个接口使得这一子系统更加容易使用。\",\"简化了系统接口,外观模式提供了一个更高级、更抽象的接口,使得接口使用起来更容易。\",\"更好地划分访问层次,外观模式可以更清楚地定义访问系统不同层次的入口。\",\"符合迪米特法则,减少系统间的依赖。\",\"提高灵活性,可以在不影响其他模块的情况下增加或者修改系统。\"]},\"927\":{\"h\":\"用法\",\"t\":[\"人们很容易低估使用信用卡订购披萨时幕后工作的复杂程度。 在整个过程中会有不少的子系统发挥作用。 下面是其中的一部分：\",\"检查账户\",\"检查安全码\",\"借记/贷记余额\",\"账簿录入\",\"发送消息通知\",\"在如此复杂的系统中， 可以说是一步错步步错， 很容易就会引发大的问题。 这就是为什么我们需要外观模式， 让客户端可以使用一个简单的接口来处理众多组件。 客户端只需要输入卡片详情、 安全码、 支付金额以及操作类型即可。 外观模式会与多种组件进一步地进行沟通， 而又不会向客户端暴露其内部的复杂性。\",\" type WalletFacade struct { account *Account wallet *Wallet securityCode *SecurityCode notification *Notification ledger *Ledger } func newWalletFacade(accountID string, code int) *WalletFacade { fmt.Println(\\\"Starting create account\\\") walletFacacde := &WalletFacade{ account: newAccount(accountID), securityCode: newSecurityCode(code), wallet: newWallet(), notification: &Notification{}, ledger: &Ledger{}, } fmt.Println(\\\"Account created\\\") return walletFacacde } func (w *WalletFacade) addMoneyToWallet(accountID string, securityCode int, amount int) error { fmt.Println(\\\"Starting add money to wallet\\\") err := w.account.checkAccount(accountID) if err != nil { return err } err = w.securityCode.checkCode(securityCode) if err != nil { return err } w.wallet.creditBalance(amount) w.notification.sendWalletCreditNotification() w.ledger.makeEntry(accountID, \\\"credit\\\", amount) return nil } func (w *WalletFacade) deductMoneyFromWallet(accountID string, securityCode int, amount int) error { fmt.Println(\\\"Starting debit money from wallet\\\") err := w.account.checkAccount(accountID) if err != nil { return err } err = w.securityCode.checkCode(securityCode) if err != nil { return err } err = w.wallet.debitBalance(amount) if err != nil { return err } w.notification.sendWalletDebitNotification() w.ledger.makeEntry(accountID, \\\"debit\\\", amount) return nil } \"]},\"928\":{\"h\":\"总结\",\"t\":[\"外观模式通过提供一个简单的接口用来访问复杂系统,减少系统复杂性,提高灵活性,使客户端和子系统松耦合。是一种常用的结构型设计模式。\"]},\"929\":{\"c\":[\"tutorial\"]},\"930\":{\"c\":[\"golang\",\"design-patterns\"]},\"931\":{\"h\":\"享元模式\",\"t\":[\"享元模式(Flyweight)主要用于减少创建对象的数量,以减少内存占用和提高性能。这种类型的设计模式属于结构型模式,它提供了减少对象数量从而改善应用所需的对象结构的方式。\"]},\"932\":{\"h\":\"用法\",\"t\":[\"享元模式尝试重用现有的同类对象,如果未找到匹配的对象,则创建新对象。\",\"模式通过共享多个对象的部分状态来实现上述功能。 换句话来说， 享元会将不同对象的相同数据进行缓存以节省内存。\"]},\"933\":{\"h\":\"示例\",\"t\":[\"type Flyweight struct { // 公共状态 } type FlyweightFactory struct { pool map[string]*Flyweight } func (f *FlyweightFactory) GetFlyweight(key string) *Flyweight { if v, ok := f.pool[key]; ok { return v } // 共享实例 return &Flyweight{} } \"]},\"934\":{\"h\":\"总结\",\"t\":[\"享元模式通过与共享对象减少内存使用和对象创建,并可以细粒度地控制对象粒度,是一种常见和有效的优化设计模式。\"]},\"935\":{\"c\":[\"tutorial\"]},\"936\":{\"c\":[\"golang\",\"design-patterns\"]},\"937\":{\"h\":\"代理模式\",\"t\":[\"代理模式提供了一个其他对象的替身或占位符来控制对这个对象的访问。代理模式一般用于控制访问、扩展功能等目的。\"]},\"938\":{\"h\":\"用法\",\"t\":[\"第一步定义接口,原对象和代理对象都实现该接口。\",\"第二步代理对象持有原对象的引用。实现接口方法时可能会进行一些附加操作,然后再转交给原对象进行处理。\"]},\"939\":{\"h\":\"示例\",\"t\":[\"type Subject interface { Request() } type RealSubject struct{} func (r *RealSubject) Request() { // real request } type Proxy struct { subject Subject } func (p *Proxy) Request() { // proxy additional logic p.subject.Request() } \"]},\"940\":{\"h\":\"总结\",\"t\":[\"代理模式提供访问原对象的替代者,可以在不修改原对象的情况下对访问进行控制和扩展,是一种常见的设计模式。Go通过接口实现松耦合的代理关系。\"]},\"941\":{\"c\":[\"tutorial\"]},\"942\":{\"c\":[\"golang\",\"design-patterns\"]},\"943\":{\"h\":\"十大排序\"},\"944\":{\"h\":\"选择排序\",\"t\":[\"这是最简单也最没用的算法, 时间复杂度有O(n^2), 同时也不稳定\",\"选择排序的思路特别简单: 第一遍找到最小的值把它放在最前面, 再遍历一次找到第二小的数放到第二个位置......\",\"那么我们怎么开始写这个程序呢?\",\"首先第一步是要找到最小的那个数, 如果遍历到的arr[j]比最小位置还要小,那么就让minPosition = j, 所以\",\"minPosition := 0 arr := []int{1, 3, 2, 4, 6, 5} for j := 0; j < len(arr); j++ { if arr[j] < arr[minPosition] { minPosition = j } } \",\"这样我们就可以在一次for循环中找到最小的那个索引, 但我们不止需要找到,我们还需要一次遍历所有的数找到并且做交换怎么办?\",\"其实是需要这样做的.\",\"for i := 0; i < len(arr); i++ { minPosition = i for j := i+1; j < len(arr); j++ { if arr[j] < arr[minPos ition] { minPosition = j } } arr[minPosition], arr[i] = arr[i], arr[minPosition] } \",\"总结, 选择排序即, 选择一个最小的数并且把它放到正确的位置上,需要两个for循环.\"]},\"945\":{\"h\":\"冒泡排序\",\"t\":[\"冒泡排序其实就是冒泡一样, 每次for循环有一个冒泡比较, 即相邻的元素的做比较, 如果arr[j] > arr[j-1] 则两个做交换, 这样一次下来至少有一个元素到达正确的位置上\",\"那么第一次怎么让一个元素到它正确的位置上呢?\",\"// 为什么是 j < len(arr)-1 呢 // 因为最后一个比较j+1会越界 for j := 0; j < len(arr)-1; i++ { if arr[j] > arr[j+1] { // 做交换 arr[j], arr[j+1] = arr[j+1], arr[j] } } \",\"这样, 我们就可以把最大的一个数放到最后的一个位置上去\",\"那我们不只是需要将一个数放到最大的位置上, 我们事实上是需要将所有的数都排一遍, 怎么做呢?\",\"// 这里的i其实是比较的次数 for i := len(arr)-1; i > 0; i-- { for j := 0; j < i; j++ { if arr[j] > arr[j+1] { arr[j], arr[j+1] = arr[j+1], arr[j] } } } \"]},\"946\":{\"h\":\"插入排序\",\"t\":[\"简单来说, 就像是打扑克牌, 就像打斗地主, 从小到大拿着, 这时候手里又有一张牌_____ 就是一个数组当前面有序的情况下, 当遇到新元素, 插入到前面位置上去\",\"怎么插入到前面的位置去呢? 就是需要不断与前一个数做交换\",\" for i := 1; i < len(arr); i++ { // 与之前做比较 for j := i; j > 0; j-- { // 不断与之前的数做比较 if arr[j] < arr[j-1] { arr[j], arr[j-1] = arr[j-1], arr[j] } } } \",\"简单排序的总结\",\"冒泡: 基本不用, 因为效率太低\",\"选择: 基本不用, 不稳定\",\"插入: 样本小, 而且有序的时候效率比较高\"]},\"947\":{\"h\":\"希尔排序---- 改进的插入排序\",\"t\":[\"希尔排序 在排序的时候是需要一个间隔gap.\",\"希尔排序可以看作是插入排序的加强版, 即有间隔gap距离去插入排序, 但由于是跳着排, 所以不稳定\",\"那怎么写呢? 先把插入排序超过来, 因为希尔排序就是根据插入排序来的\",\"for i := 1; i < len(arr); i++ { // 与之前做比较 for j := i; j > 0; j-- { // 不断与之前的数做比较 if arr[j] < arr[j-1] { arr[j], arr[j-1] = arr[j-1], arr[j] } } } \",\"接着我们定义一个gap, 就是间隔的意思,\",\"gap := 4 // i 应该是gap, i++ 的意思是 i应该不断++ for i := gap; i < len(arr); i++ { // 与之前做比较 // 这里j变成j> gap-1了, 因为插入排序是连续比较到0, 而希尔则是比较gap-1次 for j := i; j > gap-1; j-=gap { // 不断与之前的数做比较 if arr[j] < arr[j-gap] { arr[j], arr[j-gap] = arr[j-gap], arr[j] } } } \",\"这样我们的希尔排序第一次就好了,按4比较一次, 那其实我们需要的不止是4, 我们需要可能是更多所以gap 也是不断减少的, 所以\",\" for gap := 4; gap > 0; gap /= 2 { for i := gap; i < len(arr); i++ { // 与之前做比较 for j := i; j > gap-1; j -= gap { // 不断与之前的数做比较 if arr[j] < arr[j-gap] { arr[j], arr[j-gap] = arr[j-gap], arr[j] } } } } \"]},\"948\":{\"h\":\"归并排序\",\"t\":[\"设计思想, 如果有两个有序数组,我们怎么对其进行排序? 思想是把它当作俩半截数组来排序\",\"首先分配另外一个空间与原数组等长, 分配一个指针指向第一个位置, 再分配两个数组分别指向另外两个子数组的第一个位置, 接着就可以开始做比较了\",\"通过比较两个半截数组的i和j 来不断放入到temp数组中\",\"遍历结束, 通过放入两个半截数组剩下的元素, 结束temp数组\",\"那么首先我们先这样做\",\"arr := []int{........} mid := len(arr)/2 // 新分配的数组空间 temp := make([]int, 0) // i, j 分别指向第一个数组, 第二个数组的地一个位置 // k是temp的第一个位置 i, j, k := 0, mid+1, 0; for i <= mid && j < len(arr) { // <= 是稳定的 if arr[i] <= arr[j] { temp[k] == arr[i] i++ } else { temp[k] == arr[j] j++ } k++ } // 放入剩下的元素 for i <= mid { temp[k] = arr[i] k++ i++ } for j < len(arr) { temp[k] = arr[j] j++ } \",\"这样就是分开两个小数组的情况, 接下来我们就要开始递归了, 也就是不断分割数组的过程\",\"我们首先改一下刚刚写过的函数, 应该更好用一点\",\"这里其实就是处理merge的过程, 并且有了start, mid, end更好用了\",\"func merge(arr []int, start, mid, end int) { temp := make([]int, end-start+1) i, j, k := start, mid+1, 0 for i <= mid && j <= end { if arr[i] <= arr[j] { temp[k] = arr[i] i++ } else { temp[k] = arr[j] j++ } k++ } for ; i <= mid; i++ { temp[k] = arr[i] k++ } for ; j <= end; j++ { temp[k] = arr[j] k++ } // copy(arr[start:end+1], temp) for m := 0; m < len(temp); m++ { arr[start+m] = temp[m] } } \",\"再接着需要一个mergesort的函数, 其实就是递归函数, 递归的结束条件是start == end\",\"func mergeSort(arr []int, start, end int) { if start == end { return } mid := start + (end-start)/2 mergeSort(arr, start, mid) mergeSort(arr, mid+1, end) merge(arr, start, mid, end) } \",\"分了n次, 每层有比较交换的次数有logn次 总结, 归并排序的时间复杂度是O(n*logn), 其实还是快了不少的, 空间复杂度是O(n), 并且是稳定的\"]},\"949\":{\"h\":\"快速排序\",\"t\":[\"如果我们要排序数组中从p到r的数据,我们选择任意一个数据为pivot, 并且遍历p到r1的数据, 将小于等于pivot的数据放到左边, 剩下的放到右边. 在接着递归就好了\",\"i, j 指向的位置是i其实是比pivot小的区域, j是比pivot大的区域\",\" func partition(arr []int, start, end int) int { pivot := arr[end] i := start j := start for ; j < end; j++ { if arr[j] < pivot { if arr[j] != arr[i] { arr[i], arr[i] = arr[i], arr[j] } i++ } } arr[end], arr[i] = arr[i], arr[end] return i } \"]},\"950\":{\"h\":\"堆排序\",\"t\":[\"大顶堆就是父节点比两个子孩子都大, 使用数组来存储heap\",\"下表为i的父节点下表是(i-1)/2 整数除法 下表为i的左子节点下表是i2 + 1 下表为i的右子节点下表是i2 + 2\",\"维护堆的性质, 怎么维护呢?\",\"如果有一个节点不符合大顶堆,即父元素比子元素小, 那么就把两个子孩子中大的那一个与父节点交换, 同时还要递归交换的子节点\",\"heapify时间复杂度O(logn)\",\"func heapify(arr []int, n, i int) { largest := i lson := i*2 + 1; rson := i*2 + 2; if lson < n && arr[largest] < arr[lson] { largest = lson } if rson < n && arr[largest] < arr[rson] { largest = rson } if largest != i { arr[largest], arr[i] = arr[i], arr[largest] heapify(arr, n, largest) } } \",\"建堆\",\"无序的数组怎么建堆呢?\",\"以大顶堆为例, 建堆就是要维护父节点的值比两个子节点的值大--其实就是从最后一个节点的父节点, 不断往前开始堆化\",\"for i := i/2-1; i >= 0; i-- { heapify(arr, n, i) } \",\"即通过这样一个for循环就可以实现建堆的过程\",\"建堆的时间复杂度是O(n)\",\"怎么实现堆排序?\",\"堆排序的过程就是,将最后一个子节点和堆顶的元素进行交换, 接着堆化堆顶的元素, 这样for循环结束就可以实现堆排序了\",\"for i := n-1; i > 0; i-- { arr[i], arr[0], arr[0], arr[i] heapify(arr, n, 0) } \",\"这样就实现了堆排序, 堆排序对N个数进行heapify, 不稳定\",\"总结:\",\"时间复杂度(NlogN) 一个n的heapify的复杂度是logn, 总共有n个元素\"]},\"951\":{\"c\":[\"tutorial\"]},\"952\":{\"c\":[\"golang\",\"top10-sort\"]},\"953\":{\"h\":\"GoMock 教程\",\"t\":[\"B站视频\"]},\"954\":{\"c\":[\"tutorial\"]},\"955\":{\"c\":[\"golang\",\"mock\",\"UT\"]},\"956\":{\"h\":\"Mockey 教程\",\"t\":[\"在单元测试中我们经常需要用到Mock功能，简单来说就是直接模拟我们需要测试方法中的一些接口、函数、方法的返回值，让我们更容易去写Unit Test。\",\"mock在单元测试中非常重要，mock可以理解为构建一个替换的功能，可以是完整接口的替换，又或者是某个类下方法的替换。\",\"本文介绍一下Go语言里字节开源的的Mockey框架。\",\"https://github.com/bytedance/mockey\",\"在github的README下有一个一句话值得注意:\",\"信息\",\"The bottom layer is monkey patch realized by rewriting function instructions at runtime.\",\"由此我们可以理解，mockey其实是通过在运行时重写函数指令实现的monkey patch。\",\"mockey支持的功能如下\",\"mock 函数和方法 \",\"基础功能 \",\"普通/可变参数函数\",\"普通/可变参数方法\",\"嵌套结构体方法\",\"私有类型的导出方法（不同包下）\",\"高级功能 \",\"mock 后执行原函数\",\"goroutine 条件过滤\",\"增量改变 mock 行为\",\"获取原函数执行次数\",\"获取 mock 函数执行次数\",\"mock 变量 \",\"普通变量\",\"函数变量\"]},\"957\":{\"h\":\"安装\",\"t\":[\"go get github.com/bytedance/mockey@latest \"]},\"958\":{\"h\":\"快速开始\",\"t\":[\"import ( \\\"fmt\\\" \\\"testing\\\" . \\\"github.com/bytedance/mockey\\\" . \\\"github.com/smartystreets/goconvey/convey\\\" ) func Foo(in string) string { return in } type A struct{} func (a A) Foo(in string) string { return in } var Bar = 0 func TestMockXXX(t *testing.T) { PatchConvey(\\\"TestMockXXX\\\", t, func() { Mock(Foo).Return(\\\"c\\\").Build() // mock函数 Mock(A.Foo).Return(\\\"c\\\").Build() // mock方法 MockValue(&Bar).To(1) // mock变量 So(Foo(\\\"a\\\"), ShouldEqual, \\\"c\\\") // 断言`Foo`成功mock So(new(A).Foo(\\\"b\\\"), ShouldEqual, \\\"c\\\") // 断言`A.Foo`成功mock So(Bar, ShouldEqual, 1) // 断言`Bar`成功mock }) // `PatchConvey`外自动释放mock fmt.Println(Foo(\\\"a\\\")) // a fmt.Println(new(A).Foo(\\\"b\\\")) // b fmt.Println(Bar) // 0 } \",\"本质上上面的代码最核心的就这三行MockXX函数:\",\" Mock(Foo).Return(\\\"c\\\").Build() // mock函数 Mock(A.Foo).Return(\\\"c\\\").Build() // mock方法 MockValue(&Bar).To(1) // mock变量 \",\"我们要做的就只有在Mock函数里填入希望Mock的函数、方法，然后填入我们希望返回的对应的Return值==(这里的Return类型需要与前面的Mock里的返回值相对应)==，最后我们调用Build就可以完成，非常简单。\",\"整个函数在PatchConvey局部函数作用域里，不需要defer来释放。\",\"由此你也发现了，Mockey不像Gomock一样会模拟整个接口来进行单测，反而是通过更精细化的函数或者某个类的方法来进行单测，针对开发人员提升单测速度非常友好。\"]},\"959\":{\"h\":\"Mock变量\",\"t\":[\"var Bar = 0 MockValue(&Bar).To(10).Build() // mock方法 \",\"MockValue()里是需要变量提供地址的\",\"注意\",\"注意：Go语言中常量会内联优化，所以你是不可以取到一个常量的地址的。比如这样..\",\"const MAX_INT = 1e10 println(&MAX_INT) \",\"所以事实上你也是不可以Mock来修改常量的,因为你取不到它的地址:)\",\"接下来就需要一个To来设置mock的新值:\",\"// main.go var MAX_INT = 2 << 10 func main() { fmt.Println(&MAX_INT) } \",\"package main import ( \\\"testing\\\" . \\\"github.com/bytedance/mockey\\\" . \\\"github.com/smartystreets/goconvey/convey\\\" \\\"github.com/stretchr/testify/assert\\\" ) //go:noinline func TestMockXXX(t *testing.T) { PatchConvey(\\\"TestOK1\\\", t, func() { MockValue(&MAX_INT).To(10) So(MAX_INT, ShouldEqual, 10) PatchConvey(\\\"TestOK2\\\", func() { MockValue(&MAX_INT).To(20) So(MAX_INT, ShouldEqual, 20) }) }) assert.Equal(t, MAX_INT, 2<<10) if MAX_INT != 2<<10 { t.Error(\\\"t != 2<<10\\\") } } \",\"运行 go test -gcflags=\\\"all=-l -N\\\" -v -run=TestMockXXX ,(实际上我们注释了//go:noinline)，也就不需要-gcflags=\\\"all=-l -N\\\"了\",\"➜ demo_ut_go go test -v -run=TestMockXXX === RUN TestMockXXX TestOK1 ✔ TestOK2 ✔ 2 total assertions --- PASS: TestMockXXX (0.00s) PASS ok main 0.351s \",\"取消mock能力？\",\"实际上不仅仅有Patch,还有UnPatch能力..\",\"PatchConvey(\\\"TestOK1\\\", t, func() { MockValue(&MAX_INT).To(10) So(MAX_INT, ShouldEqual, 10) PatchConvey(\\\"TestOK2\\\", func() { MockValue(&MAX_INT).UnPatch() // 错误 So(MAX_INT, ShouldEqual, 20) // 正确 So(MAX_INT, ShouldEqual, 10) }) }) \"]},\"960\":{\"h\":\"Mock函数 & 方法\",\"t\":[\"我们在Mock函数/方法时需要分三步进行：\",\"明确Mock的函数/方法\",\"明确返回值\",\"Build\",\"所以你在示例里看到Mock的函数/方法就可以这样表示:\",\"Mock(Foo).Return(\\\"c\\\").Build() // mock函数 Mock(A.Foo).Return(\\\"c\\\").Build() // mock方法 \",\"接下来我们来讲解每一个详细步骤的使用方式,针对Mock函数，我们需要传入我们需要mock的对象，比如对方法就是Foo,对类别函数就是A.Foo,对指针类型方法就是(*A).Bar。\",\"package main import ( \\\"fmt\\\" \\\"testing\\\" . \\\"github.com/bytedance/mockey\\\" . \\\"github.com/smartystreets/goconvey/convey\\\" ) //go:noinline func Foo(a string) string { fmt.Println(a) return a } type A struct{} func (a A) Foo(s string) string { fmt.Println(s) return s } func (a *A) Bar(s string) string { fmt.Println(s) return s } //go:noinline func Test_Mock(t *testing.T) { PatchConvey(\\\"testXXX\\\", t, func() { Mock(A.Foo).Return(\\\"11\\\").Build() Mock((*A).Bar).Return(\\\"22\\\").Build() Mock(Foo).Return(\\\"33\\\").Build() So(Foo(\\\"\\\"), ShouldEqual, \\\"33\\\") mockA := &A{} So(mockA.Foo(\\\"\\\"), ShouldEqual, \\\"11\\\") So(mockA.Bar(\\\"\\\"), ShouldEqual, \\\"22\\\") }) } \",\"// 测试 go test -gcflags=\\\"all=-l -N\\\" -v -run=Test_Mock \",\"我们还可以Mock函数和设置条件:\",\"当我们限定我们的mock只有达到一定条件才触发时，可以使用When()方法。\",\"而且我们还可以统计被Mock的函数/方法的调用次数MockTimes()，和原函数的调用次数Times()。\",\"如果我们没有对函数/方法指定When，那么二者被调用的次数应该是相同的。\",\" PatchConvey(\\\"Testxxx\\\", t, func() { m := Mock(Foo).When(func(a string) bool { return a == \\\"a\\\" }).Return(\\\"c\\\").Build() So(Foo(\\\"a\\\"), ShouldEqual, \\\"c\\\") So(m.Times(), ShouldEqual, 1) So(m.MockTimes(), ShouldEqual, 1) Foo(\\\"c\\\") So(m.Times(), ShouldEqual, 2) // 这里的Foo(\\\"c\\\") 没有触发上面的When(func(a string) bool { return a == \\\"a\\\" }) 所以MockTimes是 1 So(m.MockTimes(), ShouldEqual, 1) }) \",\"甚至我们还可以自己来关闭mock代理, 和之前的变量一样通过Patch和UnPatch来关闭Mocker。\"]},\"961\":{\"h\":\"禁用内联优化\",\"t\":[\"警告\",\"使用monkey、patch等库需要我们禁止内联，否则可能导致mock失败\",\"我们上面曾经用过\",\"go test -gcflags=\\\"all=-l -N\\\" -v -run=TestXXX \",\"但其实可以在单测的代码加注释//go:noinline告诉编译器自己取消内联优化.\"]},\"962\":{\"h\":\"重复Mock问题\",\"t\":[\"在同一个PatchConvey里重复mock一个函数会报错，所以需要的话可以重新开一个Patch去Mock。\"]},\"963\":{\"c\":[\"tutorial\"]},\"964\":{\"c\":[\"golang\",\"mockey\",\"UT\"]},\"965\":{\"h\":\"Go 单测总结\",\"t\":[\"这里总结了我到目前为止在go单测方面的所有姿势，等待补充.\"]},\"966\":{\"h\":\"单测\",\"t\":[\"Go 单测离不开go test 命令的，编写测试代码和普通的go代码过程语法是类似的。\",\"go test命令是按照一定约定和组织测试代码的驱动二进制程序。在包目录下，所有以_test.go的文件go test测试的部分，并且执行go build不会被编译到最终的二进制文件中去。\",\"在*_test.go文件中有三种类型的函数，单元测试函数、基准测试函数和示例函数。\",\"类型\",\"格式\",\"作用\",\"测试函数\",\"函数名前缀为Test\",\"测试程序的一些逻辑行为是否正确\",\"基准函数\",\"函数名前缀为Benchmark\",\"测试函数的性能\",\"示例函数\",\"函数名前缀为Example\",\"为文档提供示例文档\"]},\"967\":{\"h\":\"单测函数\",\"t\":[\"每个测试函数必须导入testing包，测试函数的基本格式（签名）如下：\",\"func Test_Name(t *testing.T) { ... } \",\"其中参数t是用于报告和附加日志信息的作用，比如：\",\"每个测试通过后需要通过t.Logf()/t.Errorf()/t.Fatal()等方法报告结果。\",\"系列方法来验证测试期望,如t.Equal()、t.NotEqual()等。\",\"当断言失败时,t.Fatal()/t.Error()会使当前测试直接失败并停止。\",\"t对象可以保存每个测试的详细信息,如名称、时间等。\",\"测试函数示例：\",\"通常我们在编写代码的时候，会有很多一个个的小函数、结构体、方法、接口，来组成最终代码依赖的东西，我们需要确保这些组件都是可以有保障地可以运行，单测（unit test）就是利用各种方法测试单元组件的程序，他将结果与预期输出进行比较。\",\"接下来，我们定义一个quicksort包，写入quickSort快排程序函数，实现如下：\",\"func quickSort(arr []int) []int { separateSort(arr,0,len(arr)-1) return arr } func separateSort(arr []int,start,end int) { if start >= end { return } i := partition(arr, start, end) separateSort(arr, start, i-1) separateSort(arr, i+1, end) } func partition(arr []int, start, end int) int { // 选取最后一位当对比数字 pivot := arr[end] var i = start for j := start; j < end; j++ { if arr[j] < pivot { if !(i == j) { // 交换位置 arr[i], arr[j] = arr[j], arr[i] } i++ } } arr[i], arr[end] = arr[end], arr[i] return i } \",\"接着在对应的包下创建一个quicksort_test.go测试文件，并定义一个测试函数：\",\"// quicksort_test.go package main import ( \\\"reflect\\\" \\\"testing\\\" ) func Test_QuickSort(t *testing.T) { got := quickSort([]int{8, 7, 6, 5, 4, 3, 2, 1}) // 程序输出的结果 want := []int{1, 2, 3, 4, 5, 6, 7, 8} // 期望的结果 if !reflect.DeepEqual(want, got) { // 因为slice不能比较直接，借助反射包中的方法比较 t.Errorf(\\\"expected:%v, got:%v\\\", want, got) // 测试失败输出错误提示 } } \",\"此时包下的文件:\",\"ls -l total 24 -rw-r--r-- 1 lixin staff 26 Aug 21 14:42 go.mod -rw-r--r-- 1 lixin staff 590 Aug 21 14:42 quicksort.go -rw-r--r-- 1 lixin staff 428 Aug 21 14:44 quicksort_test.go \",\"在quicksort包目录下执行go test 命令，结果:\",\"➜ demo_ut_go$ go test PASS ok quicksort 0.337s \",\"一个测试用例感觉不太够，我们再写一个:\",\"func Test_partition(t *testing.T) { got := partition([]int{8, 5, 4, 6, 7, 1, 2, 3}, 0, 7) // 程序输出的结果 want := 2 // 期望的结果 if !reflect.DeepEqual(want, got) { t.Errorf(\\\"expected:%v, got:%v\\\", want, got) // 测试失败输出错误提示 } } \",\"我们可以为go test命令添加-v参数，查看测试函数名称和运行时间：\",\"➜ demo_ut_go go test -v === RUN Test_QuickSort --- PASS: Test_QuickSort (0.00s) === RUN Test_partition quicksort_test.go:20: expected:0, got:2 --- FAIL: Test_partition (0.00s) FAIL exit status 1 FAIL quicksort 0.319s \",\"这次我们可以清楚看到 Test_partition 这个函数单测用例没有成功，还可以再 go test 后加run参数，它对应一个正则表达式，只有跟函数名对的上的才会被 go test 执行\",\"➜ demo_ut_go go test -v -run=Sort === RUN Test_QuickSort --- PASS: Test_QuickSort (0.00s) PASS ok quicksort 0.436s \"]},\"968\":{\"h\":\"测试组\",\"t\":[\"通常我们写单测用例不会只写一个，但是我们也不会一个一个去写单测用例，而是用ut group的形式去写, 比如这样:\",\"func Test_QuickSort(t *testing.T) { type args struct { input []int } tests := []struct { name string args args want []int }{ { name: \\\"success\\\", args: args{ input: []int{8, 7, 6, 5, 4, 3, 2, 1}, }, want: []int{1, 2, 3, 4, 5, 6, 7, 8}, }, { name: \\\"test success\\\", args: args{ input: []int{}, }, want: []int{}, }, } for _, tt := range tests { t.Run(tt.name, func(t *testing.T) { if got := quickSort(tt.args.input); !reflect.DeepEqual(got, tt.want) { t.Errorf(\\\"quickSort() = %v, want %v\\\", got, tt.want) } }) } } \"]},\"969\":{\"h\":\"测试覆盖率\",\"t\":[\"Go提供内置功能来检查你的代码覆盖率。我们可以使用go test -cover来查看测试覆盖率。例如：\",\"➜ demo_ut_go go test -cover PASS coverage: 100.0% of statements ok quicksort 0.331s \",\"Go还额外提供一个-coverprofile参数，可以将相关信息输入到一个文件中，然后执行go tool cover -html=c.out打开:\",\"➜ demo_ut_go go test -cover -coverprofile=c.out PASS coverage: 100.0% of statements ok quicksort 0.263s ➜ demo_ut_go go tool cover -html=c.out \",\"Untitled\",\"绿色表示语句被覆盖了，而红色表示没有\"]},\"970\":{\"h\":\"基准测试\",\"t\":[\"基准测试俗称压测：\",\"func Benchmark_Name(b *testing.B){ // ... } \",\"基准测试以Benchmark为前缀，需要一个*testing.B类型的参数b，基准测试必须要执行b.N次，这样的测试才有对照性，b.N的值是系统根据实际情况去调整的，从而保证测试的稳定性。\",\"我们为上述的quickSort包提供压测如下:\",\"func Benchmark_quickSort(b *testing.B) { for i := 0; i < b.N; i++ { quickSort([]int{8, 7, 6, 5, 4, 3, 2, 1}) } } \",\"基准测试不会默认执行，需要加-bench参数:\",\"➜ demo_ut_go go test -bench=quick goos: darwin goarch: arm64 pkg: quicksort Benchmark_quickSort-10 24164910 49.55 ns/op PASS ok quicksort 2.673s \",\"Benchmark_quickSort-10表示对quickSort函数进行基准测试，10表示GOMAXPROCS的值，这对兵法基准测试非常重要，24164910和49.55 ns/op表示24164910次调用耗时平均值为49.55 ns。\",\"我们还可以为基准测试添加-benchmem参数，来获得内存分配的统计数据。\",\"➜ demo_ut_go go test -bench=quick -benchmem goos: darwin goarch: arm64 pkg: quicksort Benchmark_quickSort-10 24359230 49.65 ns/op 0 B/op 0 allocs/op PASS ok quicksort 2.429s \",\"其中，0 B/op表示每次操作内存分配了0字节 ,0 allocs/op则表示每次操作进行了0次内存分配。\"]},\"971\":{\"h\":\"网络测试\",\"t\":[\"之前的篇幅，我们讲了单元测试和基础测试，但是在实际业务中场景会非常复杂，无论是server端对外提供服务还是我们依赖其他人的服务，我们通常都不想在测试过程中去真正建立网络连接，这一部分就来介绍两种方法来mock网络测试:\"]},\"972\":{\"h\":\"httptest\",\"t\":[\"在Web开发场景下的单元测试，如果涉及到HTTP请求推荐大家使用Go标库 net/http/httptest 进行测试，能够显著提高测试效率。\",\"在这一小节，我们以常见的gin框架为例，演示如何为http server编写单元测试。\",\"假设我们的业务逻辑是搭建一个http server端，对外提供HTTP服务。我们编写了一个helloHandler函数，用来处理用户请求。\",\"// gin.go package httptest_demo import ( \\\"fmt\\\" \\\"net/http\\\" \\\"github.com/gin-gonic/gin\\\" ) // Param 请求参数 type Param struct { Name string `json:\\\"name\\\"` } // helloHandler /hello请求处理函数 func helloHandler(c *gin.Context) { var p Param if err := c.ShouldBindJSON(&p); err != nil { c.JSON(http.StatusOK, gin.H{ \\\"msg\\\": \\\"we need a name\\\", }) return } c.JSON(http.StatusOK, gin.H{ \\\"msg\\\": fmt.Sprintf(\\\"hello %s\\\", p.Name), }) } // SetupRouter 路由 func SetupRouter() *gin.Engine { router := gin.Default() router.POST(\\\"/hello\\\", helloHandler) return router } func main() { ch := make(chan struct{}) r := SetupRouter() r.Run(\\\":8080\\\") <-ch } \",\"我们直接运行这个函数, 发生curl网络请求:\",\"➜ demo_ut_go curl -X POST 'http://127.0.0.1:8080/hello' -d '{\\\"name\\\":\\\"lixin\\\"}' {\\\"msg\\\":\\\"hello lixin\\\"} \",\"现在我们需要为helloHandler函数编写单元测试，这种情况下我们就可以使用httptest这个工具mock一个HTTP请求和响应记录器，让我们的server端接收并处理我们mock的HTTP请求，同时使用响应记录器来记录server端返回的响应内容。\",\"单元测试的示例代码如下：\",\"// gin_test.go package main import ( \\\"encoding/json\\\" \\\"net/http\\\" \\\"net/http/httptest\\\" \\\"strings\\\" \\\"testing\\\" \\\"github.com/stretchr/testify/assert\\\" ) func Test_helloHandler(t *testing.T) { // 定义两个测试用例 tests := []struct { name string param string expect string }{ {\\\"base case\\\", `{\\\"name\\\": \\\"yanglixin\\\"}`, \\\"hello yanglixin\\\"}, {\\\"bad case\\\", \\\"\\\", \\\"we need a name\\\"}, } r := SetupRouter() for _, tt := range tests { t.Run(tt.name, func(t *testing.T) { // mock一个HTTP请求 req := httptest.NewRequest( \\\"POST\\\", // 请求方法 \\\"/hello\\\", // 请求URL strings.NewReader(tt.param), // 请求参数 ) // mock一个响应记录器 w := httptest.NewRecorder() // 让server端处理mock请求并记录返回的响应内容 r.ServeHTTP(w, req) // 校验状态码是否符合预期 assert.Equal(t, http.StatusOK, w.Code) // 解析并检验响应内容是否复合预期 var resp map[string]string err := json.Unmarshal([]byte(w.Body.String()), &resp) assert.Nil(t, err) assert.Equal(t, tt.expect, resp[\\\"msg\\\"]) }) } } \",\"执行单元测试，查看测试结果。\",\"➜ demo_ut_go go test -v -run=Test_helloHandler === RUN Test_helloHandler [GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached. [GIN-debug] [WARNING] Running in \\\"debug\\\" mode. Switch to \\\"release\\\" mode in production. - using env: export GIN_MODE=release - using code: gin.SetMode(gin.ReleaseMode) [GIN-debug] POST /hello --> quicksort.helloHandler (3 handlers) === RUN Test_helloHandler/base_case [GIN] 2023/08/21 - 15:27:45 | 200 | 297.625µs | 192.0.2.1 | POST \\\"/hello\\\" === RUN Test_helloHandler/bad_case [GIN] 2023/08/21 - 15:27:45 | 200 | 4.291µs | 192.0.2.1 | POST \\\"/hello\\\" --- PASS: Test_helloHandler (0.00s) --- PASS: Test_helloHandler/base_case (0.00s) --- PASS: Test_helloHandler/bad_case (0.00s) PASS ok quicksort 0.651s \",\"这就是httptest在HTTP Server服务中为请求处理函数编写单元测试的用例了。\"]},\"973\":{\"h\":\"gock\",\"t\":[\"上面的示例介绍了如何在HTTP Server服务类场景下为请求处理函数编写单元测试，那么如果我们是在代码中请求外部API的场景（比如通过API调用其他服务获取返回值）又该怎么编写单元测试呢？\",\"例如，我们有以下业务逻辑代码，依赖外部API：http://qiniu.com/post提供的数据。\",\"package main import ( \\\"bytes\\\" \\\"encoding/json\\\" \\\"io/ioutil\\\" \\\"net/http\\\" ) // api.go // ReqParam API请求参数 type ReqParam struct { X int `json:\\\"x\\\"` } // Result API返回结果 type Result struct { Value int `json:\\\"value\\\"` } func GetResultByAPI(x, y int) int { p := &ReqParam{X: x} b, _ := json.Marshal(p) // 调用其他服务的API resp, err := http.Post( \\\"http://qiniu.com/post\\\", \\\"application/json\\\", bytes.NewBuffer(b), ) if err != nil { return -1 } body, _ := ioutil.ReadAll(resp.Body) var ret Result if err := json.Unmarshal(body, &ret); err != nil { return -1 } // 这里是对API返回的数据做一些逻辑处理 return ret.Value + y } \",\"在对类似上述这类业务代码编写单元测试的时候，如果不想在测试过程中真正去发送请求或者依赖的外部接口还没有开发完成时，我们可以在单元测试中对依赖的API进行mock。\",\"使用gock对外部API进行mock，即mock指定参数返回约定好的响应内容。 下面的代码中mock了两组数据，组成了两个测试用例。\",\"// api_test.go package main import ( \\\"testing\\\" \\\"github.com/stretchr/testify/assert\\\" \\\"gopkg.in/h2non/gock.v1\\\" ) func TestGetResultByAPI(t *testing.T) { defer gock.Off() // 测试执行后刷新挂起的mock // mock 请求外部api时传参x=1返回100 gock.New(\\\"http://qiniu.com\\\"). Post(\\\"/post\\\"). MatchType(\\\"json\\\"). JSON(map[string]int{\\\"x\\\": 1}). Reply(200). JSON(map[string]int{\\\"value\\\": 100}) // 调用我们的业务函数 res := GetResultByAPI(1, 1) // 校验返回结果是否符合预期 assert.Equal(t, res, 101) // mock 请求外部api时传参x=2返回200 gock.New(\\\"http://qiniu.com\\\"). Post(\\\"/post\\\"). MatchType(\\\"json\\\"). JSON(map[string]int{\\\"x\\\": 2}). Reply(200). JSON(map[string]int{\\\"value\\\": 200}) // 调用我们的业务函数 res = GetResultByAPI(2, 2) // 校验返回结果是否符合预期 assert.Equal(t, res, 202) assert.True(t, gock.IsDone()) // 断言mock被触发 } \",\"执行上面写好的单元测试，看一下测试结果。\",\"➜ demo_ut_go go test -v -run=TestGetResultByAPI === RUN TestGetResultByAPI --- PASS: TestGetResultByAPI (0.00s) PASS ok quicksort 0.582s \",\"测试结果和预期的完全一致。\"]},\"974\":{\"h\":\"MySQL和Redis单测\",\"t\":[\"我们在上一部分介绍了httptest和gock工具进行网络测试，除了网络依赖之外，我们在开发中也会经常用到各种数据库，比如常见的MySQL和Redis等。本部分就分别举例来演示如何在编写单元测试的时候对MySQL和Redis进行mock。\"]},\"975\":{\"h\":\"go-sqlmock\",\"t\":[\"sqlmock 是一个实现 sql/driver 的mock库。它不需要建立真正的数据库连接就可以在测试中模拟任何 sql 驱动程序的行为。使用它可以很方便的在编写单元测试的时候mock sql语句的执行结果。\",\"// 安装 go get github.com/DATA-DOG/go-sqlmock \",\"使用示例\",\"这里使用的是go-sqlmock官方文档中提供的基础示例代码。 在下面的代码中，我们实现了一个recordStats函数用来记录用户浏览商品时产生的相关数据。具体实现的功能是在一个事务中进行以下两次SQL操作：\",\"在products表中将当前商品的浏览次数+1\",\"在product_viewers表中记录浏览当前商品的用户id\",\"// app.go package main import \\\"database/sql\\\" // recordStats 记录用户浏览产品信息 func recordStats(db *sql.DB, userID, productID int64) (err error) { // 开启事务 // 操作views和product_viewers两张表 tx, err := db.Begin() if err != nil { return } defer func() { switch err { case nil: err = tx.Commit() default: tx.Rollback() } }() // 更新products表 if _, err = tx.Exec(\\\"UPDATE products SET views = views + 1\\\"); err != nil { return } // product_viewers表中插入一条数据 if _, err = tx.Exec( \\\"INSERT INTO product_viewers (user_id, product_id) VALUES (?, ?)\\\", userID, productID); err != nil { return } return } func main() { // 注意：测试的过程中并不需要真正的连接 db, err := sql.Open(\\\"mysql\\\", \\\"root@/blog\\\") if err != nil { panic(err) } defer db.Close() // userID为1的用户浏览了productID为5的产品 if err = recordStats(db, 1 /*some user id*/, 5 /*some product id*/); err != nil { panic(err) } } \",\"现在我们需要为代码中的recordStats函数编写单元测试，但是又不想在测试过程中连接真实的数据库进行测试。这个时候我们就可以像下面示例代码中那样使用sqlmock工具去mock数据库操作。\",\"package main import ( \\\"fmt\\\" \\\"testing\\\" \\\"github.com/DATA-DOG/go-sqlmock\\\" ) // TestShouldUpdateStats sql执行成功的测试用例 func TestShouldUpdateStats(t *testing.T) { // mock一个*sql.DB对象，不需要连接真实的数据库 db, mock, err := sqlmock.New() if err != nil { t.Fatalf(\\\"an error '%s' was not expected when opening a stub database connection\\\", err) } defer db.Close() // mock执行指定SQL语句时的返回结果 mock.ExpectBegin() mock.ExpectExec(\\\"UPDATE products\\\").WillReturnResult(sqlmock.NewResult(1, 1)) mock.ExpectExec(\\\"INSERT INTO product_viewers\\\").WithArgs(2, 3).WillReturnResult(sqlmock.NewResult(1, 1)) mock.ExpectCommit() // 将mock的DB对象传入我们的函数中 if err = recordStats(db, 2, 3); err != nil { t.Errorf(\\\"error was not expected while updating stats: %s\\\", err) } // 确保期望的结果都满足 if err := mock.ExpectationsWereMet(); err != nil { t.Errorf(\\\"there were unfulfilled expectations: %s\\\", err) } } // TestShouldRollbackStatUpdatesOnFailure sql执行失败回滚的测试用例 func TestShouldRollbackStatUpdatesOnFailure(t *testing.T) { db, mock, err := sqlmock.New() if err != nil { t.Fatalf(\\\"an error '%s' was not expected when opening a stub database connection\\\", err) } defer db.Close() mock.ExpectBegin() mock.ExpectExec(\\\"UPDATE products\\\").WillReturnResult(sqlmock.NewResult(1, 1)) mock.ExpectExec(\\\"INSERT INTO product_viewers\\\"). WithArgs(2, 3). WillReturnError(fmt.Errorf(\\\"some error\\\")) mock.ExpectRollback() // now we execute our method if err = recordStats(db, 2, 3); err == nil { t.Errorf(\\\"was expecting an error, but there was none\\\") } // we make sure that all expectations were met if err := mock.ExpectationsWereMet(); err != nil { t.Errorf(\\\"there were unfulfilled expectations: %s\\\", err) } } \",\"上面的代码中，定义了一个执行成功的测试用例和一个执行失败回滚的测试用例，确保我们代码中的每个逻辑分支都能被测试到，提高单元测试覆盖率的同时也保证了代码的健壮性。\",\"执行单元测试，看一下最终的测试结果。\",\"➜ demo_ut_go go test -v -run=TestShould === RUN TestShouldUpdateStats --- PASS: TestShouldUpdateStats (0.00s) === RUN TestShouldRollbackStatUpdatesOnFailure --- PASS: TestShouldRollbackStatUpdatesOnFailure (0.00s) PASS ok quicksort 0.624s \",\"可以看到两个测试用例的结果都符合预期，单元测试通过。\",\"在很多使用ORM工具的场景下，也可以使用go-sqlmock库mock数据库操作进行测试。\"]},\"976\":{\"h\":\"miniredis\",\"t\":[\"除了经常用到MySQL外，Redis在日常开发中也会经常用到。接下来的这一小节，我们将一起学习如何在单元测试中mock Redis的相关操作。\",\"miniredis是一个纯go实现的用于单元测试的redis server。它是一个简单易用的、基于内存的redis替代品，它具有真正的TCP接口，你可以把它当成是redis版本的net/http/httptest。\",\"当我们为一些包含Redis操作的代码编写单元测试时就可以使用它来mock Redis操作。\",\"// 安装. 这里以github.com/go-redis/redis库为例，编写了一个包含若干Redis操作的DoSomethingWithRedis函数。 go get github.com/alicebob/miniredis/v2 \",\"// redis_op.go package main import ( \\\"context\\\" \\\"strings\\\" \\\"time\\\" \\\"github.com/go-redis/redis/v8\\\" // 注意导入版本 ) const ( KeyValidWebsite = \\\"app:valid:website:list\\\" ) func DoSomethingWithRedis(rdb *redis.Client, key string) bool { // 这里可以是对redis操作的一些逻辑 ctx := context.TODO() if !rdb.SIsMember(ctx, KeyValidWebsite, key).Val() { return false } val, err := rdb.Get(ctx, key).Result() if err != nil { return false } if !strings.HasPrefix(val, \\\"https://\\\") { val = \\\"https://\\\" + val } // 设置 blog key 五秒过期 if err := rdb.Set(ctx, \\\"blog\\\", val, 5*time.Second).Err(); err != nil { return false } return true } \",\"下面的代码是我使用miniredis库为DoSomethingWithRedis函数编写的单元测试代码，其中miniredis不仅支持mock常用的Redis操作，还提供了很多实用的帮助函数，例如检查key的值是否与预期相等的s.CheckGet()和帮助检查key过期时间的s.FastForward()。\",\" // redis_op_test.go package main import ( \\\"testing\\\" \\\"time\\\" \\\"github.com/alicebob/miniredis/v2\\\" \\\"github.com/go-redis/redis/v8\\\" ) func TestDoSomethingWithRedis(t *testing.T) { // mock一个redis server s, err := miniredis.Run() if err != nil { panic(err) } defer s.Close() // 准备数据 s.Set(\\\"lixin\\\", \\\"yanglixin.com\\\") s.SAdd(KeyValidWebsite, \\\"lixin\\\") // 连接mock的redis server rdb := redis.NewClient(&redis.Options{ Addr: s.Addr(), // mock redis server的地址 }) // 调用函数 ok := DoSomethingWithRedis(rdb, \\\"lixin\\\") if !ok { t.Fatal() } // 可以手动检查redis中的值是否复合预期 if got, err := s.Get(\\\"blog\\\"); err != nil || got != \\\"https://yanglixin.com\\\" { t.Fatalf(\\\"'blog' has the wrong value\\\") } // 也可以使用帮助工具检查 s.CheckGet(t, \\\"blog\\\", \\\"https://yanglixin.com\\\") // 过期检查 s.FastForward(5 * time.Second) // 快进5秒 if s.Exists(\\\"blog\\\") { t.Fatal(\\\"'blog' should not have existed anymore\\\") } } \",\"执行执行测试，查看单元测试结果：\",\"➜ demo_ut_go go test -v -run=TestDoSomethingWithRedis === RUN TestDoSomethingWithRedis --- PASS: TestDoSomethingWithRedis (0.00s) PASS ok quicksort 0.597s \",\"miniredis基本上支持绝大多数的Redis命令，大家可以通过查看文档了解更多用法。\",\"当然除了使用miniredis搭建本地redis server这种方法外，还可以使用各种打桩工具对具体方法进行打桩。在编写单元测试时具体使用哪种mock方式还是要根据实际情况来决定。\"]},\"977\":{\"h\":\"GoMock 模拟接口行为\",\"t\":[\"这是我很久之前在bilibili录的视频GoMock 视频。\",\"https://www.bilibili.com/video/BV1Qs4y1m7ic/?spm_id_from=333.337.search-card.all.click\",\"GoMock是go官方提供的一款Mock工具，方便开发人员模拟接口行为做测试的工具。\",\"比如我们有一个Person接口下的Eat方法，我们就可以模拟这个接口\",\"ctrl := gomock.NewController(t) mockPerson := mocks.NewMockPerson(ctrl) mockPerson. EXPECT(). Eat().Return(\\\"lixin is sleep\\\") \",\"在这里我们就使用gomock创建一个mockPerson，去模拟person接口的行为 后续方便去做单测\",\"打开安装https://github.com/golang/mock\",\"go install github.com/golang/mock/mockgen@v1.6.0 \",\"输入mockgen查看是否下载在$GOPATH/bin 目录下基本用法步骤\",\"首先选定一个mock的demo目录\",\"比如说叫gomock-learn,然后在此目录下创建对应的mod，然后引入对应的gomock包\",\"go mod init gomock-learn go get github.com/golang/mock \",\"接下来创建两个目录person和student分别用来放对应的接口和代码。\",\"// person.go package person type Person interface { Eat(food string) string Sleep(name string) string } \",\"// student.go package student import \\\"gomock-learn/person\\\" type Student struct { p person.Person Name string } func (p *Student) Eat(food string) string { return p.p.Eat(food) } func (p *Student) Sleep() string { return p.p.Sleep(p.Name) } \",\"接着你要创建一个mocks目录，不然如果没有mock目录的话用mockgen命令行会失败\",\"使用方法，直接在相应的目录下执行以下命令\",\"mockgen -destination mocks/mock_person.go -package=mocks gomock-learn/person Person \",\"这里需要注意的是我们必须自己创建mocks目录因为GoMock不会自动帮我们创建，当它发现mocks目录不存在时会返回一个错误。以下是对mockgen命令参数的说明：\",\" -destination=mocks/mock_person.go：将自动生成的mock代码存储到文件mocks/mock_person.go中。- package=mocks：将生成的mock代码放置到mocks包中。 gomock-learn/person：为这个包生成mock代码。 Person：为这个接口生成mock代码。这个参数是个必填参数，我们需要显式地指定要生成mock代码的接口。如果需要指定多个接口，可以将接口通过逗号连接起来，比如：Person1,Person2。 \",\"结合go-generate使用GoMock, 在对应的接口前加入注释\",\"//go:generate mockgen -destination mocks/mock_person.go -package=mocks gomock-learn/person Person type Person interface { Eat(food string) string Sleep(name string) string } \",\"然后在对应的目录下输入\",\"go generate ./ \",\"可以发现就在对应的mocks目录下里有一个mock_xx.go函数，这个函数里面就是我们可以Mock的数据。\",\"此时的目录是这样的\",\"├── go.mod ├── go.sum ├── mocks │ └── mock_person.go ├── person │ └── person.go └── student ├── student.go └── student_test.go \",\"使用参数匹配, 有时候你可能不太确定调用mock时指定的参数，所以有一个对应的Matcher来代表一个mock方法可以接受的参数范围，比如gomock.Eq(x)指定传入值必须等于x。\",\"以下是GoMock中一些预定义的matcher：\",\" gomock.Any()：匹配任何类型的任何值 gomock.Eq(x)：匹配使用反射reflect.DeepEqual与x相等的值gomock.Nil()：匹配等于nil的值 gomock.Not(m)：（这里的m是一个Matcher）匹配同m不匹配的值 gomock.Not(x)：（这里的x不是Matcher）匹配使用反射reflect.DeepEqual与x不相等的值 \",\"如果我们希望第一个参数必须是x，那么我们就用\",\"mockDoer.EXPECT().DoSomething(gomock.Eq(x), \\\"Hello GoMock\\\") \",\"具体例子\",\"func Test_Eat(t *testing.T) { ctrl := gomock.NewController(t) mockPerson := mocks.NewMockPerson(ctrl) mockPerson. EXPECT(). Eat(\\\"Apple\\\").Times(1) testStudent := Student{Name: \\\"lixin\\\", p: mockPerson} testStudent.Eat(\\\"Apple\\\") } \",\"func Test_Sleep(t *testing.T) { ctrl := gomock.NewController(t) mockPerson := mocks.NewMockPerson(ctrl) testStudent := Student{Name: \\\"lixin\\\", p: mockPerson} mockPerson. EXPECT(). Sleep(\\\"lixin\\\").Return(\\\"lixin is sleep\\\").Do(func(name string) { fmt.Printf(\\\"%s is sleep!\\\\\\\\n\\\", name) }) if testStudent.Sleep() != \\\"lixin is sleep\\\" { t.Error(\\\"Error!!!!!\\\") } } \",\"断言调用顺序, 有时候我们期望控制一些mock流程的顺序，这里有一个例子调用After的方法\",\"func Test_Eat(t *testing.T) { ctrl := gomock.NewController(t) mockPerson := mocks.NewMockPerson(ctrl) first := mockPerson.EXPECT().Eat(\\\"xxx\\\") mockPerson. EXPECT(). Eat(\\\"Apple\\\"). After(first) testStudent := Student{Name: \\\"lixin\\\", p: mockPerson} testStudent.Eat(\\\"xxx\\\") testStudent.Eat(\\\"Apple\\\") } \",\"指定mock行为, 比如说可以在执行完毕后加一个Do函数去做一些事情。\"]},\"978\":{\"h\":\"使用monkey打桩\",\"t\":[\"在这一篇中我们将介绍一个更强大的打桩工具——monkey，它支持为任意函数及方法进行打桩。\",\"monkey是一个Go单元测试中十分常用的打桩工具，它在运行时通过汇编语言重写可执行文件，将目标函数或方法的实现跳转到桩实现，其原理类似于热补丁。\",\"monkey库很强大，但是使用时需注意以下事项：\",\"monkey不支持内联函数，在测试的时候需要通过命令行参数gcflags=-l关闭Go语言的内联优化。\",\"monkey不是线程安全的，所以不要把它用到并发的单元测试中。\",\"// 安装 go get bou.ke/monkey \",\"使用示例\",\"假设你们公司中台提供了一个用户中心的库varys，使用这个库可以很方便的根据uid获取用户相关信息。但是当你编写代码的时候这个库还没实现，或者这个库要经过内网请求但你现在没这能力，这个时候要为MyFunc编写单元测试，就需要做一些mock工作。\",\"// func.go func MyFunc(uid int64)string{ u, err := varys.GetInfoByUID(uid) if err != nil { return \\\"welcome\\\" } // 这里是一些逻辑代码... return fmt.Sprintf(\\\"hello %s\\\\n\\\", u.Name) } \",\"我们使用monkey库对varys.GetInfoByUID进行打桩。\",\"// func_test.go func TestMyFunc(t *testing.T) { // 对 varys.GetInfoByUID 进行打桩 // 无论传入的uid是多少，都返回 &varys.UserInfo{Name: \\\"lixin\\\"}, nil monkey.Patch(varys.GetInfoByUID, func(int64)(*varys.UserInfo, error) { return &varys.UserInfo{Name: \\\"lixin\\\"}, nil }) ret := MyFunc(123) if !strings.Contains(ret, \\\"lixin\\\"){ t.Fatal() } } \",\"执行单元测试：go test -run=TestMyFunc -v -gcflags=-l\",\"输出：\",\"=== RUN TestMyFunc --- PASS: TestMyFunc (0.00s) PASS ok monkey_demo 0.009s \",\"除了对函数进行mock外monkey也支持对方法进行mock。\",\"// method.go type User struct { Name string Birthday string } // CalcAge 计算用户年龄 func (u *User) CalcAge() int { t, err := time.Parse(\\\"2006-01-02\\\", u.Birthday) if err != nil { return -1 } return int(time.Now().Sub(t).Hours()/24.0)/365 } // GetInfo 获取用户相关信息 func (u *User) GetInfo()string{ age := u.CalcAge() if age <= 0 { return fmt.Sprintf(\\\"%s很神秘，我们还不了解ta。\\\", u.Name) } return fmt.Sprintf(\\\"%s今年%d岁了，ta是我们的朋友。\\\", u.Name, age) } \",\"如果我们为GetInfo编写单元测试的时候CalcAge方法的功能还未完成，这个时候我们可以使用monkey进行打桩。\",\"// method_test.go func TestUser_GetInfo(t *testing.T) { var u = &User{ Name: \\\"lixin\\\", Birthday: \\\"2002-12-20\\\", } // 为对象方法打桩 monkey.PatchInstanceMethod(reflect.TypeOf(u), \\\"CalcAge\\\", func(*User)int { return 18 }) ret := u.GetInfo() // 内部调用u.CalcAge方法时会返回18 if !strings.Contains(ret, \\\"朋友\\\"){ t.Fatal() } } \",\"执行单元测试：\",\"❯ go test -run=User -v === RUN TestUser_GetInfo --- PASS: TestUser_GetInfo (0.00s) PASS ok monkey_demo 0.012s \",\"monkey基本上能满足我们在单元测试中打桩的任何需求。\",\"社区中还有一个参考monkey库实现的gomonkey库，原理和使用过程基本相似，这里就不再啰嗦了。除此之外社区里还有一些其他打桩工具如GoStub等。\"]},\"979\":{\"h\":\"编写可测试的代码\",\"t\":[\"编写可测试的代码比写UT更重要，实际上编写可测试的代码需要我们在写代码的时候就注意。\",\"假设我们现在有一个根据时间判断报警信息发送速率的模块，白天工作时间允许大量发送报警信息，而晚上则减小发送速率，凌晨不允许发送报警短信。\",\"// judgeRate 报警速率决策函数 func judgeRate() int { now := time.Now() switch hour := now.Hour(); { case hour >= 8 && hour < 20: return 10 case hour >= 20 && hour <= 23: return 1 } return -1 } \",\"这个函数内部使用了time.Now()来获取系统的当前时间作为判断的依据，看起来很合理。\",\"但是这个函数现在隐式包含了一个不确定因素——时间。在不同的时刻我们调用这个函数都可能会得到不一样的结果。想象一下，我们该如何为这个函数编写单元测试呢？\",\"如果不修改系统时间，那么我们就无法为这个函数编写单元测试，这个函数成了“不可测试的代码”（当然可以使用打桩工具对time.Now进行打桩，但那不是本文要强调的重点）。\",\"接下来我们该如何改造它？\",\"我们通过为函数传参数的方式传入需要判断的时刻，具体实现如下。\",\"// judgeRateByTime 报警速率决策函数 func judgeRateByTime(now time.Time) int { switch hour := now.Hour(); { case hour >= 8 && hour < 20: return 10 case hour >= 20 && hour <= 23: return 1 } return -1 } \",\"这样我们不仅解决了函数与系统时间的紧耦合，而且还扩展了函数的功能，现在我们可以根据需要获取任意时刻的速率值。为改造后的judgeRateByTime编写单元测试也更方便了。\",\"func Test_judgeRateByTime(t *testing.T) { tests := []struct { name string arg time.Time want int }{ { name: \\\"工作时间\\\", arg: time.Date(2022, 2, 18, 11, 22, 33, 0, time.UTC), want: 10, }, { name: \\\"晚上\\\", arg: time.Date(2022, 2, 18, 22, 22, 33, 0, time.UTC), want: 1, }, { name: \\\"凌晨\\\", arg: time.Date(2022, 2, 18, 2, 22, 33, 0, time.UTC), want: -1, }, } for _, tt := range tests { t.Run(tt.name, func(t *testing.T) { if got := judgeRateByTime(tt.arg); got != tt.want { t.Errorf(\\\"judgeRateByTime() = %v, want %v\\\", got, tt.want) } }) } } \"]},\"980\":{\"h\":\"接口抽象进行解耦\",\"t\":[\"同样是函数中隐式依赖的问题，假设我们实现了一个获取店铺客单价的需求，它完成的功能就像下面的示例函数。\",\"// GetAveragePricePerStore 每家店的人均价 func GetAveragePricePerStore(storeName string) (int64, error) { res, err := http.Get(\\\"https://qiniu.com/api/orders?storeName=\\\" + storeName) if err != nil { return 0, err } defer res.Body.Close() var orders []Order if err := json.NewDecoder(res.Body).Decode(&orders); err != nil { return 0, err } if len(orders) == 0 { return 0, nil } var ( p int64 n int64 ) for _, order := range orders { p += order.Price n += order.Num } return p / n, nil } \",\"在之前的章节中我们介绍了如何为上面的代码编写单元测试，但是我们如何避免每次单元测试时都发起真实的HTTP请求呢？亦或者后续我们改变了获取数据的方式（直接读取缓存或改为RPC调用）这个函数该怎么兼容呢？\",\"我们将函数中获取数据的部分抽象为接口类型来优化我们的程序，使其支持模块化的数据源配置。\",\"// OrderInfoGetter 订单信息提供者 type OrderInfoGetter interface { GetOrders(string) ([]Order, error) } \",\"然后定义一个API类型，它拥有一个通过HTTP请求获取订单数据的GetOrders方法，正好实现OrderInfoGetter接口。\",\"// HttpApi HTTP API类型 type HttpApi struct{} // GetOrders 通过HTTP请求获取订单数据的方法 func (a HttpApi) GetOrders(storeName string) ([]Order, error) { res, err := http.Get(\\\"https://qiniu.com/api/orders?storeName=\\\" + storeName) if err != nil { return nil, err } defer res.Body.Close() var orders []Order if err := json.NewDecoder(res.Body).Decode(&orders); err != nil { return nil, err } return orders, nil } \",\"将原来的 GetAveragePricePerStore 函数修改为以下实现。\",\"// GetAveragePricePerStore 每家店的人均价 func GetAveragePricePerStore(getter OrderInfoGetter, storeName string) (int64, error) { orders, err := getter.GetOrders(storeName) if err != nil { return 0, err } if len(orders) == 0 { return 0, nil } var ( p int64 n int64 ) for _, order := range orders { p += order.Price n += order.Num } return p / n, nil } \",\"经过这番改动之后，我们的代码就能很容易地写出单元测试代码。例如，对于不方便直接请求的HTTP API, 我们就可以进行 mock 测试。\",\"// Mock 一个mock类型 type Mock struct{} // GetOrders mock获取订单数据的方法 func (m Mock) GetOrders(string) ([]Order, error) { return []Order{ { Price: 20300, Num: 2, }, { Price: 642, Num: 5, }, }, nil } func TestGetAveragePricePerStore(t *testing.T) { type args struct { getter OrderInfoGetter storeName string } tests := []struct { name string args args want int64 wantErr bool }{ { name: \\\"mock test\\\", args: args{ getter: Mock{}, storeName: \\\"mock\\\", }, want: 12062, wantErr: false, }, } for _, tt := range tests { t.Run(tt.name, func(t *testing.T) { got, err := GetAveragePricePerStore(tt.args.getter, tt.args.storeName) if (err != nil) != tt.wantErr { t.Errorf(\\\"GetAveragePricePerStore() error = %v, wantErr %v\\\", err, tt.wantErr) return } if got != tt.want { t.Errorf(\\\"GetAveragePricePerStore() got = %v, want %v\\\", got, tt.want) } }) } } \"]},\"981\":{\"h\":\"依赖注入代替隐式依赖\",\"t\":[\"我们可能经常会看到类似下面的代码，在应用程序中使用全局变量的方式引入日志库或数据库连接实例等。\",\"package main import ( \\\"github.com/sirupsen/logrus\\\" ) var log = logrus.New() type App struct{} func (a *App) Start() { log.Info(\\\"app start ...\\\") } func (a *app) Start() { a.Logger.Info(\\\"app start ...\\\") // ... } func main() { app := &App{} app.Start() } \",\"上面的代码中 App 中通过引用全局变量的方式将依赖项硬编码到代码中，这种情况下我们在编写单元测试时如何 mock log 变量呢？\",\"此外这样的代码还存在一个更严重的问题——它与具体的日志库程序强耦合。当我们后续因为某些原因需要更换另一个日志库时，我们该如何修改代码呢？\",\"我们应该将依赖项解耦出来，并且将依赖注入到我们的 App 实例中，而不是在其内部隐式调用全局变量。\",\"type App struct { Logger } func (a *App) Start() { a.Logger.Info(\\\"app start ...\\\") // ... } // NewApp 构造函数，将依赖项注入 func NewApp(lg Logger) *App { return &App{ Logger: lg, // 使用传入的依赖项完成初始化 } } \",\"上面的代码就很容易 mock log实例，完成单元测试。\",\"依赖注入就是指在创建组件（Go 中的 struct）的时候接收它的依赖项，而不是它的初始化代码中引用外部或自行创建依赖项。\",\"// Config 配置项结构体 type Config struct { // ... } // LoadConfFromFile 从配置文件中加载配置 func LoadConfFromFile(filename string) *Config { return &Config{} } // Server server 程序 type Server struct { Config *Config } // NewServer Server 构造函数 func NewServer() *Server { return &Server{ // 隐式创建依赖项 Config: LoadConfFromFile(\\\"./config.toml\\\"), } } \",\"上面的代码片段中就通过在构造函数中隐式创建依赖项，这样的代码强耦合、不易扩展，也不容易编写单元测试。我们完全可以通过使用依赖注入的方式，将构造函数中的依赖作为参数传递给构造函数。\",\"// NewServer Server 构造函数 func NewServer(conf *Config) *Server { return &Server{ // 隐式创建依赖项 Config: conf, } } \",\"不要隐式引用外部依赖（全局变量、隐式输入等），而是通过依赖注入的方式引入依赖。经过这样的修改之后，构造函数NewServer 的依赖项就很清晰，同时也方便我们编写 mock 测试代码。\",\"使用依赖注入的方式能够让我们的代码看起来更清晰，但是过多的构造函数也会让主函数的代码迅速膨胀，好在Go 语言提供了一些依赖注入工具（例如 wire ，可以帮助我们更好的管理依赖注入的代码。\"]},\"982\":{\"h\":\"SOLID原则\",\"t\":[\"最后补充一个程序设计的SOLID原则，我们在程序设计时践行以下几个原则会帮助我们写出可测试的代码。\",\"首字母\",\"指代\",\"概念\",\"S\",\"单一职责原则\",\"每个类都应该只有一个职责。\",\"O\",\"开闭原则\",\"一个软件实体，如类、模块和函数应该对扩展开放，对修改关闭。\",\"L\",\"里式替换原则\",\"认为“程序中的对象应该是可以在不改变程序正确性的前提下被它的子类所替换的”的概念。\",\"I\",\"接口隔离原则\",\"许多特定于客户端的接口优于一个通用接口。\",\"D\",\"依赖反转原则\",\"应该依赖抽象，而不是某个具体示例。\",\"有时候在写代码之前多考虑一下代码的设计是否符合上述原则。\"]},\"983\":{\"c\":[\"tutorial\"]},\"984\":{\"c\":[\"golang\",\"UT\"]},\"985\":{\"h\":\"Air重加载go程序\"},\"986\":{\"c\":[\"tutorial\"]},\"987\":{\"c\":[\"golang\",\"air\",\"gin\"]},\"988\":{\"h\":\"Cobra 系统化你的命令行程序\",\"t\":[\"你自己写代码经常会go run xxx.go,但是如果一个仓库下有一个cmd目录并且之下会有很多main函数，那么你每次启动都会go run cmd/xxx.go xxxx,这样做很ugly,有没有办法让启动程序更优雅美观一些呢？当然是有的，社区有很成熟的命令行库程序，例如今天我们来介绍的Cobra.\",\"Cobra是Go的一个Cli框架，为Go语言程序提供现代强大的命令行程序。\",\"提供一些特别强大的功能(官网的功能描述):\",\"基于子命令的简单 CLI：app server、app fetch 等\",\"完全符合 POSIX 标准的标志（包括短版本和长版本）\",\"嵌套子命令\",\"全局、局部和级联标志\",\"轻松生成应用程序和应用程序带有 cobra init appname & 的命令cobra add cmdname\",\"智能建议（app srver...您的意思是app server吗？）\",\"自动生成命令和标志的帮助\",\"自动帮助标记识别-h、--help等\",\"为您的应用程序自动生成 bash 自动完成功能\",\"为您的应用程序自动生成手册页\",\"命令别名，以便您可以在不破坏它们的情况下进行更改\",\"灵活定义您自己的帮助、用法等。\",\"实际上有很多成熟的项目在使用cobra，例如kubectl、hugo等等。\",\"下载也非常简单，在自己的项目中集成就可以了.\",\"go get -u github.com/spf13/cobra/cobra\",\"&\",\"import \\\"github.com/spf13/cobra\\\" \",\"其中我们只需要理解三个核心的概念就可以完全掌握cobra了:\",\"Commands 描述行为\",\"Args 命令行参数\",\"Flags 命令行选项\",\"一般的格式为:\",\"APPNAME COMMAND ARG --FLAG \",\"举一个大家都会用的命令:\",\"# 创建xxx分支 # git 是APPNAME # checkout 表示 COMMAND 表示行为 # ARG 是 xxx 表示checkout的参数是xxx # -b 是 flags 是命令行的选项 git checkout -b xxx \",\"其实这个概念理解了，就只需要按照文档跑一遍就会使用cobra了。\"]},\"989\":{\"h\":\"入门过程\",\"t\":[\"最近cobra的api发生了变化，之前文章的用法都失败了，但没关系我们只需要跟着文档跑就可以了。\",\"要使用cobra创建自定义命令行的程序，你首先需要在本地创建一个go.mod,接着就可以使用cobra命令行来创建程序了:\",\"提示\",\"对了，记得事先下载cobra-cli命令\",\"go install github.com/spf13/cobra-cli@latest \",\"go mod init cobra-test # 使用cobra cobra-cli init cobra_test \",\"下面你的程序应该长这个样子:\",\"├── cobra_test │ ├── LICENSE │ ├── cmd │ │ └── root.go │ └── main.go ├── go.mod └── go.sum \",\"理论上讲你可以在当前目录下创建很多可运行的main程序，但一般情况下只需要一个main程序，接着往主要的main程序添加命令启动各个服务就好。\",\"所以我们把cobra_test目录下的所有程序移动到当前目录下:\",\"mv ./cobra_test/* ./ \",\"下面你就可以开始go run main.go了\",\"➜ demo_cobra go run main.go A longer description that spans multiple lines and likely contains examples and usage of using your application. For example: Cobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application. \",\"如果你想添加不同的命令还可以继续做，比如要一个echo服务，cmd目录下就可以加一个echo文件，只需要在文件里编写逻辑就好:\",\"➜ demo_cobra cobra-cli add echo echo created at /Users/lixin/code/demo_code/demo_cobra ➜ demo_cobra tree . . ├── LICENSE ├── cmd │ ├── echo.go │ └── root.go ├── go.mod ├── go.sum └── main.go \"]},\"990\":{\"h\":\"为命令添加具体的功能\",\"t\":[\"到目前为止，我们一共为 cobra_demo 程序添加了两个 Command，分别是 rootCmd(cobra init 命令默认生成)echoCmd。\",\"打开文件 root.go ，找到变量 rootCmd 的初始化过程并修改 Run 方法：\",\"Run: func(cmd *cobra.Command, args []string) { fmt.Println(\\\"cobra demo program\\\") }, \",\"接着运行go run main.go就变化了\",\"go run main.go cobra demo program \"]},\"991\":{\"h\":\"为 Command 添加选项(flags)\",\"t\":[\"选项(flags)用来控制 Command 的具体行为。根据选项的作用范围，可以把选项分为两类：\",\"persistent\",\"local\",\"对于 persistent 类型的选项，既可以设置给该 Command，又可以设置给该 Command 的子 Command。对于一些全局性的选项，比较适合设置为 persistent 类型，比如控制输出的 verbose 选项：\",\"var Verbose bool rootCmd.PersistentFlags().BoolVarP(&Verbose, \\\"verbose\\\", \\\"v\\\", false, \\\"verbose output\\\") \",\"local 类型的选项只能设置给指定的 Command，比如下面定义的 source 选项：\",\"var Source string rootCmd.Flags().StringVarP(&Source, \\\"source\\\", \\\"s\\\", \\\"\\\", \\\"Source directory to read from\\\") var Name string rootCmd.Flags().StringVarP(&Name, \\\"name\\\", \\\"n\\\", \\\"\\\", \\\"user name (required)\\\") rootCmd.MarkFlagRequired(\\\"name\\\") \",\"命令行参数(arguments)\",\"首先我们来搞清楚命令行参数(arguments)与命令行选项的区别(flags/options)。以常见的 ls 命令来说，其命令行的格式为：\",\"ls [OPTION]... [FILE]… \",\"其中的 OPTION 对应本文中介绍的 flags，以 - 或 -- 开头；而 FILE 则被称为参数(arguments)或位置参数。一般的规则是参数在所有选项的后面，上面的 … 表示可以指定多个选项和多个参数。\",\"cobra 默认提供了一些验证方法：\",\"NoArgs - 如果存在任何位置参数，该命令将报错 ArbitraryArgs - 该命令会接受任何位置参数 OnlyValidArgs - 如果有任何位置参数不在命令的 ValidArgs 字段中，该命令将报错 MinimumNArgs(int) - 至少要有 N 个位置参数，否则报错 MaximumNArgs(int) - 如果位置参数超过 N 个将报错 ExactArgs(int) - 必须有 N 个位置参数，否则报错 ExactValidArgs(int) 必须有 N 个位置参数，且都在命令的 ValidArgs 字段中，否则报错 RangeArgs(min, max) - 如果位置参数的个数不在区间 min 和 max 之中，报错\",\"比如要让 Command echo 至少有一个位置参数，可以这样初始化它：\",\"var cmdTimes = &cobra.Command{ Use: … Short: … Long: … Args: cobra.MinimumNArgs(1), Run: … } \"]},\"992\":{\"h\":\"一个完整的 demo\",\"t\":[\"我们在前面创建的代码的基础上，为 image 命令添加行为(打印信息到控制台)，并为它添加一个子命令 cmdTimes，下面是更新后的 image.go 文件的内容(本文 demo 的完整代码请参考这里)：\",\"package cmd import ( \\\"fmt\\\" \\\"github.com/spf13/cobra\\\" \\\"strings\\\" ) // echoCmd represents the echo command var echoCmd = &cobra.Command{ Use: \\\"echo\\\", Short: \\\"Print echo information\\\", Long: \\\"Print all echo information\\\", Run: func(cmd *cobra.Command, args []string) { fmt.Println(\\\"echo one is ubuntu 16.04\\\") fmt.Println(\\\"echo two is ubuntu 18.04\\\") fmt.Println(\\\"echo args are : \\\" + strings.Join(args, \\\" \\\")) }, } var echoTimes int var cmdTimes = &cobra.Command{ Use: \\\"times [string to echo]\\\", Short: \\\"Echo anything to the screen more times\\\", Long: `echo things multiple times back to the user by providing a count and a string.`, Args: cobra.MinimumNArgs(1), Run: func(cmd *cobra.Command, args []string) { for i := 0; i < echoTimes; i++ { fmt.Println(\\\"Echo: \\\" + strings.Join(args, \\\" \\\")) } }, } func init() { rootCmd.AddCommand(echoCmd) cmdTimes.Flags().IntVarP(&echoTimes, \\\"times\\\", \\\"t\\\", 1, \\\"times to echo the input\\\") echoCmd.AddCommand(cmdTimes) } \",\"go run main.go $ ./cobrademo echo hello $ ./cobrademo echo times -t=3 world \",\"因为我们为 cmdTimes 命令设置了 Args: cobra.MinimumNArgs(1)，所以必须为 times 子命令传入一个参数，不然 times 子命令会报错：\"]},\"993\":{\"h\":\"在 Commnad 执行前后执行额外的操作\",\"t\":[\"Command 执行的操作是通过 Command.Run 方法实现的，为了支持我们在 Run 方法执行的前后执行一些其它的操作，Command 还提供了额外的几个方法，它们的执行顺序如下：\",\"PersistentPreRun\",\"PreRun\",\"Run\",\"PostRun\",\"PersistentPostRun\",\"修改 rootCmd 的初始化代码如下：\",\"var rootCmd = &cobra.Command{ Use: \\\"cobrademo\\\", Short: \\\"sparkdev's cobra demo\\\", Long: \\\"the demo show how to use cobra package\\\", PersistentPreRun: func(cmd *cobra.Command, args []string) { fmt.Printf(\\\"Inside rootCmd PersistentPreRun with args: %v\\\\n\\\", args) }, PreRun: func(cmd *cobra.Command, args []string) { fmt.Printf(\\\"Inside rootCmd PreRun with args: %v\\\\n\\\", args) }, Run: func(cmd *cobra.Command, args []string) { fmt.Printf(\\\"cobra demo program, with args: %v\\\\n\\\", args) }, PostRun: func(cmd *cobra.Command, args []string) { fmt.Printf(\\\"Inside rootCmd PostRun with args: %v\\\\n\\\", args) }, PersistentPostRun: func(cmd *cobra.Command, args []string) { fmt.Printf(\\\"Inside rootCmd PersistentPostRun with args: %v\\\\n\\\", args) }, } \"]},\"994\":{\"h\":\"总结\",\"t\":[\"cobra 是一个非常实用(流行)的包，很多优秀的开源应用都在使用它，包括 Docker 和 Kubernetes 等等。当我们熟悉了 cobra 包的基本用法后，再去看 Docker 等应用的命令行工具的格式，是不是就很容易理解了！\"]},\"995\":{\"c\":[\"tutorial\"]},\"996\":{\"c\":[\"golang\",\"cobra\"]},\"997\":{\"h\":\"cron定时任务\",\"t\":[\"定时任务是我们经常使用到的库，Linux crontab 是用来定期执行程序的命令。\",\"crontab是 Linux 下的一个定时任务调度工具，可以定时来处理我们的任务。\",\"我们也可以使用 go 语言来实现类似的定时管理。\",\"比如我想实现一个每天凌晨 1 点扫描某个数据库的所有任务执行。那我们就可以这样去实现:\",\"go func() { for { now := time.Now() var next time.Time if now.Hour() < 1 || now.Hour() == 1 { next = now } else { next = now.Add(time.Hour * 24) } // 每日凌晨 1 点执行任务 next = time.Date(next.Year(), next.Month(), next.Day(), 1, 0, 0, 0, next.Location()) if now.Unix() > next.Unix() { next = now.Add(time.Hour * 24) next = time.Date(next.Year(), next.Month(), next.Day(), 1, 0, 0, 0, next.Location()) } logger.Info(\\\"UpdateOndutys Now=%s Next=%s\\\", now, next) timer := time.NewTimer(next.Sub(now)) select { case ts := <-timer.C: logger.Info(\\\"Start UpdateOnduty_7day ts=%s\\\", ts.String()) timer.Stop() } } }() \"]},\"998\":{\"h\":\"定时任务\",\"t\":[\"可以看到当我们不想使用第三方库来实现cron的时候，往往就需要考虑很多方面，比如定时器执行时的时机，定时器的启动和取消，判断当前时间以及服务重启后的定时器失效问题。\",\"但是如果使用第三方库就可以将思绪放在如何构建定时任务具体的细节而不是考虑如何写定时任务上。\"]},\"999\":{\"h\":\"使用 robfig/cron 库\",\"t\":[\"robfig/cron/v3是Go目前社区最受欢迎的cron库\",\"我们下面会学习这个cron库的使用，以及熟悉常见的cron任务描述写法。\"]},\"1000\":{\"h\":\"安装\",\"t\":[\"go get -u github.com/robfig/cron/v3 \"]},\"1001\":{\"h\":\"使用\",\"t\":[\"package main import ( \\\"fmt\\\" \\\"time\\\" \\\"github.com/robfig/cron/v3\\\" ) func main() { c := cron.New() c.AddFunc(\\\"@every 1s\\\", func() { fmt.Println(\\\"tick every 1 second\\\") }) c.Start() select{} } \",\"cron库使用起来非常简单，创建 cron 对象，这个对象用于管理定时任务，调用 cron 对象的AddFunc来向管理器中添加定时任务，AddFunc 接收两个参数，第一个参数是我们cron触发时间的规则(比如每秒一次)，第二个参数是具体执行任务的参数。\",\"值得注意的是cron.New()函数可以添加一些可选项，比如我们可以像其传入时区等等。\",\"例如\",\" nyc, _ := time.LoadLocation(\\\"Asia/China\\\") c := cron.New(cron.WithLocation(nyc)) \"]},\"1002\":{\"h\":\"时间格式\",\"t\":[\"AddFunc 的第一个参数的时间格式与linux下的crontab非常相似，由一个有五个域的字符串组成,例如0 * * * *(每小时触发一次)。\",\"这 5 个域含义依次为：\",\"Minutes：分钟，取值范围[0-59]，支持特殊字符* / , -；\",\"Hours：小时，取值范围[0-23]，支持特殊字符* / , -；\",\"Day of month：每月的第几天，取值范围[1-31]，支持特殊字符* / , - ?；\",\"Month：月，取值范围[1-12]或者使用月份名字缩写[JAN-DEC]，支持特殊字符* / , -；\",\"Day of week：周历，取值范围[0-6]或名字缩写[JUN-SAT]，支持特殊字符* / , - ?。\",\"特殊字符的含义如下:\",\"：使用的域可以匹配任何值，例如将月份域（第 4 个）设置为*，表示每个月； /：用来指定范围的步长，例如将小时域（第 2 个）设置为3-59/15表示第 3 分钟触发，以后每隔 15 分钟触发一次，因此第 2 次触发为第 18 分钟，第 3 次为 33 分钟。。。直到分钟大于 59；\",\",：用来列举一些离散的值和多个范围，例如将周历的域（第 5 个）设置为MON,WED,FRI表示周一、三和五；\",\"-：用来表示范围，例如将小时的域（第 1 个）设置为9-17表示上午 9 点到下午 17 点（包括 9 和 17）；\",\"?：只能用在月历和周历的域中，用来代替*，表示每月/周的任意一天。\",\"了解规则之后，我们可以定义任意时间：\",\"30 * * * ：分钟域为 30，其他域都是表示任意。每小时的 30 分触发；\",\"30 3-6,20-23 * * *：分钟域为 30，小时域的3-6,20-23表示 3 点到 6 点和 20 点到 23 点。3,4,5,6,20,21,22,23 时的 30 分触发；\",\"0 0 1 1 *：1（第 4 个） 月 1（第 3 个） 号的 0（第 2 个） 时 0（第 1 个） 分触发。\"]},\"1003\":{\"h\":\"预定义规则\",\"t\":[\"以上规则和linux下的一模一样，但本库使用 go 语言定义了一些宏方便我们使用:\",\"@yearly：也可以写作@annually，表示每年第一天的 0 点。等价于0 0 1 1 *；\",\"@monthly：表示每月第一天的 0 点。等价于0 0 1 * *；\",\"@weekly：表示每周第一天的 0 点，注意第一天为周日，即周六结束，周日开始的那个 0 点。等价于0 0 * * 0；\",\"@daily：也可以写作@midnight，表示每天 0 点。等价于0 0 * * *；\",\"@hourly：表示每小时的开始。等价于0 * * * *。\"]},\"1004\":{\"h\":\"定时器\",\"t\":[\"@every <duration> \",\"含义为每隔duration触发一次会调用time.ParseDuration()函数解析，所以ParseDuration支持的格式都可以。例如1h30m10s，感觉这个和time.Timer类似。\"]},\"1005\":{\"h\":\"Job 接口\",\"t\":[\"除了 AddFunc之外，我们还还可以通过实现Job接口，来为我们的类实现定时任务逻辑\",\"// cron.go type Job interface { Run() } \",\"我们可以定义一个结构来实现Job接口：\",\"type Foo struct { Bar string } func (g *Foo) Run() { fmt.Println(\\\"Hello \\\", g.Bar) } func main() { c := cron.New() c.AddJob(\\\"@every 1s\\\", Foo{Bar:\\\"lixin\\\"}) c.Start() time.Sleep(5 * time.Second) } \",\"注意\",\"cron会创建一个新的 goroutine 来执行触发回调。如果这些回调需要并发访问一些资源、数据，我们需要显式地做同步，避免数据竞态问题。\",\"本文参考\",\"https://darjun.github.io/2020/06/25/godailylib/cron/\"]},\"1006\":{\"c\":[\"tutorial\"]},\"1007\":{\"c\":[\"golang\",\"air\",\"gin\"]},\"1008\":{\"h\":\"Go 实现有限状态机\",\"t\":[\"有限状态机简称FSM(finite state machine),属于一看很高大上的概念(有着很深的理论背景),但其实真的不难理解，而且学会了就爱不释手，因为它解决某些问题真是太好用了。\",\"简单来说，通过定义某个实例的一系列状态，当实例触发某些行为就可以在一系列状态中来回转换。\",\"参考\",\"本教程参考 欢迎进入编程世界——有限状态机教程，感谢作者\"]},\"1009\":{\"h\":\"什么是有限状态机\",\"t\":[\"其实我们身边到处都是有限状态机的例子，比如你现在看本文的显示器屏幕，就有两个状态:亮和熄。屏幕可以从两种状态之间自由转换:\",\"在这里我们的\\\"亮\\\"和\\\"熄\\\"就是\\\"状态(state)\\\"，箭头表示的就是状态之间可以发生\\\"转换(transition)\\\"，而剪头上标注的文字代表触发状态转换的\\\"输入(input)\\\"，这几本就是一个状态机的基本概念了。\",\"显示器只有两个状态,没什么意思，我们来看一个最常见的红绿灯：\",\"这里有:\",\"有三种状态：绿，黄，红；\",\"状态转换是受限的，绿只能转黄，黄只能转红，红只能转绿；诸如黄转绿这样的状态转换是不允许的；\",\"状态转换的输入条件很简单，接收到 1 就转换到下一个状态。\",\"简单来说，有限状态机就是一台预先定义好了各种状态的一组状态的机器，当机器接收到一个指令之后就根据指令内容查一张预先定义好的表:\",\"检查当前状态是否符合预期，即处于当前状态的机器是否接收具体指令\",\"如果不接受，比如红灯状态接受到了2，那么什么都不会发生\",\"如果接受，再检查表中“当前状态x该指令”对应的目标状态是什么，然后把机器状态转换为目标状态\",\"至于何时发送指令给状态机，那是由外部系统决定的，比如红绿灯的例子里，外部系统是几个定时器，时间到了就发信号给有限状态机切换状态。\",\"有了现实生活中的例子打底，我们现在可以来看看抽象的“有限状态机（FSM）”是怎么定义的了。\",\"fsm3.png\",\"上图所示, 每个FSM都包含五个要素:\",\"Q 包含了有限个状态(states)的集合\",\"∑ 包含了有限个、非空的有效输入(input)的集合\",\"q0 起始状态\",\"F 包含了所有“结束状态（final states）”的集合，这个名字容易误解，它的作用和有限状态机的具体类型及面对的问题有关，我们可以简单理解为“标记出来有特别含义的状态的集合”就可以了，注意这个集合可以是空的。\",\"δ 一系列转换函数（transition functions），定义了什么样的当前状态结合什么输入可以变成什么目标状态，通常可以定义为一张二维表\",\"在计算机编程领域FSM最广泛的应用之一就是流程与行为控制(flow and behavior control)，简单来说就是管理:\",\"某个状态下什么能做什么不能做\",\"做了什么会变成另一个状态\",\"现实世界中有许多应用FSM的地方，我们日常生活中最常用的就有电商系统的订单系统:\",\"我们用过淘宝天猫的都知道，一个订单从创建开始就要经历好几个状态，中间也有不同的操作可以进行，下面是一个比较典型的流程设计，经过简化，并以“状态”的视角来描述:\",\"order-fsm.png\",\"在这个状态机中包含着一系列状态和对应的状态转换行为，还有一系列操作没有展开，比如订单取消到订单退款的细节..\",\"流程说明:\",\"当买家点击下单时订单生成，处于“已创建”状态；\",\"这个状态下的正常操作是“支付”，如果输入“支付成功”会进入下一个状态“已支付”，“支付失败”或者没有任何操作则停在本状态；\",\"这个状态下其他可选操作包括“修改”、“取消”等，分别会去到订单修改和订单取消子流程（这里略去细节）；\",\"支付成功后进入处于“已支付”状态；\",\"这个状态下需要等待商家发货，商家输入“已发货”会进入下一个状态“配送中”；\",\"这个状态下不能修改订单了，但仍然可以取消订单；\",\"商家发货后进入“配送中”状态；\",\"当配送到货，买家签收成功输入则进入下一个状态“已签收”；如果配送失败（买家不在家之类的情况）则留在“配送中”状态（另外择时重新送货）；\",\"这个状态下已不能修改和取消订单，但是可以发起退货申请，进入退货子流程（这里略去细节）；\",\"买家签收后进入“已签收”状态；\",\"买家满意，确认订单完成则进入最后状态“已完成”，订单生命周期结束；\",\"否则买家可以发起退货进入退货子流程（略）。\",\"从这里我们可以看到，实际业务系统中状态和转换的规则相当复杂（我们这还是大大简化的版本），每个状态下允许的操作和可能转换的下一个状态都是严格受控的，现在我们思考一下，我们可以如何用程序来实现这样的流程呢？\"]},\"1010\":{\"h\":\"利用有限状态机编写易于维护的代码\",\"t\":[\"回忆我们之前提到的，流程和行为控制（flow and behavior control）的关键是管理：\",\"某个状态下什么能做什么不能做\",\"做了什么会变成另一个状态\",\"最简单的方式是写一堆if...else的判断规则：\",\"package main type OrderState int const ( CREATE OrderState = iota PAID DELIVERING RECEIVED DONE CANCELLING RETURNING CLOSED ) type Order struct { state OrderState } func NewOrder() *Order { return &Order{ state: CREATE, } } func (o *Order) can_pay() bool { return o.state == CREATE } func (o *Order) can_deliver() bool { return o.state == PAID } func (o *Order) can_cancel() bool { return o.state == CREATE || o.state == PAID } func (o *Order) can_receive() bool { return o.state == DELIVERING } func (o *Order) payment_service() bool { // 调用 RPC 接口完成支付 return false } func (o *Order) pay() bool { if o.can_pay() { ok := o.payment_service() if ok { o.state = PAID return true } else { return false } } else { return false } } func (o *Order) cancel() bool { if o.can_cancel() { o.state = CANCELLING // 取消订单，申请审批和清理数据，如果顺利成功再—— o.state = CLOSED } else { return false } return false } // 还有一大堆操作的函数，每一个里面都要判断状态是不是可以做想做操作 // 然后根据执行的情况修改 o.state 为对应的新状态 \",\"这样的代码非常冗长和重复，难以维护且难以修改，设想一下，假设在上面的基础上再增加一个状态，要连带修改不确定几处地方，做完这样的修改还需要相应修改所有的测试用例，累就不说了，关键是容易出错。\",\"有限状态机实际上是这些“八股”的通用实现，然后提供一个非常简洁的接口供我们使用。有兴趣的话可以自己尝试用 Golang 写一个 FSM 的实现出来，只做最基本功能的话也不是很难，但我们实际上没必要自己写, Golang也有不少FSM的第三方实现，比如 github.com/looplab/fsm 这个库，我们就可以用它来展示一下上面的流程如何用 FSM 来实现:\",\"package main import ( \\\"context\\\" \\\"fmt\\\" \\\"github.com/looplab/fsm\\\" ) func main() { order := fsm.NewFSM( \\\"created\\\", fsm.Events{ {Name: \\\"pay\\\", Src: []string{\\\"created\\\"}, Dst: \\\"paid\\\"}, {Name: \\\"deliver\\\", Src: []string{\\\"paid\\\"}, Dst: \\\"delivering\\\"}, {Name: \\\"receive\\\", Src: []string{\\\"delivering\\\"}, Dst: \\\"received\\\"}, {Name: \\\"confirm\\\", Src: []string{\\\"received\\\"}, Dst: \\\"done\\\"}, {Name: \\\"cancel\\\", Src: []string{\\\"received\\\", \\\"paid\\\"}, Dst: \\\"cancelling\\\"}, {Name: \\\"return\\\", Src: []string{\\\"delivering\\\", \\\"received\\\"}, Dst: \\\"returning\\\"}, {Name: \\\"close\\\", Src: []string{\\\"cancelling\\\", \\\"returning\\\"}, Dst: \\\"closed\\\"}, }, fsm.Callbacks{ \\\"before_pay\\\": func(_ context.Context, e *fsm.Event) { fmt.Println(\\\"支付服务申请中……\\\") // 发送 before_pay 服务 }, \\\"paid\\\": func(_ context.Context, e *fsm.Event) { fmt.Println(\\\"支付成功\\\") }, \\\"after_deliver\\\": func(_ context.Context, e *fsm.Event) { fmt.Println(\\\"已通知用户：商品配送中\\\") }, \\\"cancel\\\": func(ctx context.Context, e *fsm.Event) { fmt.Println(\\\"订单取消\\\") e.Cancel() }, \\\"return\\\": func(ctx context.Context, e *fsm.Event) { fmt.Println(\\\"订单返回\\\") e.Cancel() }, \\\"close\\\": func(ctx context.Context, e *fsm.Event) { fmt.Println(\\\"订单关闭\\\") e.Cancel() }, }, ) fmt.Println(order.Current()) err := order.Event(context.Background(), \\\"pay\\\") if err != nil { fmt.Println(err) } fmt.Println(order.Current()) err = order.Event(context.Background(), \\\"deliver\\\") if err != nil { fmt.Println(err) } fmt.Println(order.Current()) err = order.Event(context.Background(), \\\"receive\\\") if err != nil { fmt.Println(err) } fmt.Println(order.Current()) err = order.Event(context.Background(), \\\"confirm\\\") if err != nil { fmt.Println(err) } fmt.Println(order.Current()) } \",\"// 输出 go run main.go created 支付服务申请中…… 支付成功 paid 已通知用户：商品配送中 delivering received done \",\"除了具体业务执行的代码，上面基本上完整实现了流程控制的部分，值得注意的是，借助 FSM 的实现，不仅简洁易懂，而且易于维护，假定我们需要对流程规则进行修改，或者在某些状态转换的前后添加一些操作，我们通常都只需要修改一处代码，而不用到处找哪里还要改。\"]},\"1011\":{\"h\":\"小结\",\"t\":[\"以上介绍了重要的数据模型“有限状态机（FSM）”，需要理解其背后的现实世界模型、具体应用及其带来的好处。\",\"FSM 是对程序中一组的状态进行管理的工具； FSM 能够精简程序里的逻辑判断，我们只需要陈述规则，FSM 自动管理什么可以什么不可以； 尝试体会和理解 FSM 背后的抽象思维方式，如何从特定问题中抽象出可以普遍应用的通用工具。\",\"通过以上的讲解，你应该可以看清楚有限状态机的运行以及使用过程，那么我们接下来使用Go语言写一个最简单的FSM:\",\"这只是一个差不多50行的代码，所以很简陋，但是可以将状态机的最基础使用包含:\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) type Transition struct { from string to string event string } type StateMachine struct { state string transitions []Transition handleEvent func(fromState string, toState string, args []interface{}) error } func NewStateMachine(init string, transitions []Transition, handleEvent func(fromState string, toState string, args []interface{}) error) *StateMachine { return &StateMachine{ state: init, transitions: transitions, handleEvent: handleEvent, } } func (m *StateMachine) changeState(state string) { m.state = state } func (m *StateMachine) findTransMatching(fromState string, event string) *Transition { for _, v := range m.transitions { if v.from == fromState && v.event == event { return &v } } return nil } func (m *StateMachine) Trigger(event string, args ...interface{}) (err error) { trans := m.findTransMatching(m.state, event) if trans == nil { err = errors.New(\\\"转换状态失败: 未找到trans\\\") return } if trans.event == \\\"\\\" { err = errors.New(\\\"未找到具体的event\\\") return } err = m.handleEvent(m.state, trans.to, args) if err != nil { err = errors.New(\\\"转换状态失败: 未找到handleEvent\\\") return } m.changeState(trans.to) return } func main() { transitions := make([]Transition, 0) transitions = append(transitions, Transition{ from: \\\"create\\\", to: \\\"running\\\", event: \\\"start\\\", }) transitions = append(transitions, Transition{ from: \\\"running\\\", to: \\\"end\\\", event: \\\"work\\\", }) fsm := NewStateMachine(\\\"create\\\", transitions, func(fromState string, toState string, args []interface{}) error { switch toState { case \\\"end\\\": fmt.Println(\\\"工作结束\\\") } return nil }) fsm.Trigger(\\\"start\\\") fsm.Trigger(\\\"work\\\") fmt.Println(fsm.state) } \",\"代码仓库地址: https://github.com/LixvYang/bilibili-go-tutorial/tree/main/fsm\"]},\"1012\":{\"c\":[\"tutorial\"]},\"1013\":{\"c\":[\"golang\",\"FSM\"]},\"1014\":{\"h\":\"goreleaser 一套代码发布多个平台\",\"t\":[\"goreleaser 一套代码发布多个平台\"]},\"1015\":{\"c\":[\"tutorial\"]},\"1016\":{\"c\":[\"golang\",\"goreleaser\",\"tool\"]},\"1017\":{\"h\":\"samber/lo 包提升我们代码中的迭代质量\",\"t\":[\"github.com/samber/lo是基于go1.18版本之后的Lodash的工具库，Lodash则是一个一致性、模块化、高性能的JavaScript实用工具库，用于提升开发者效率，提高原生JavaScript方法的性能，在业界赫赫有名。\",\"lo 项目开始时作为一个有新泛型实现的实验，在某些方面可能看起来像Lodash。作者曾使用go-funk包进行编码，但go-funk使用反射（reflection），因此不是类型安全的，使用不当可能还会导致panic。\"]},\"1018\":{\"h\":\"下载\",\"t\":[\"通常情况下我们使用go的包都是通过go get xxx来获取:\",\"go get https://github.com/samber/lo@v1 \",\"注意\",\"lo@v2版本正在开发中...\",\"通常不涉及并发情况下使用一般是:\",\"github.com/samber/lo\",\"并发情况则是使用(并发会使用到锁，所以数据量很大会导致性能问题):\",\"github.com/samber/lo/parallel\"]},\"1019\":{\"h\":\"使用\",\"t\":[\"lo库本身支持的方法有许多，我们只需要记住当我们需要遍历map/slice时在绝大多数情况下都是可以使用到本库就可以,例如:\",\"如果我们想遍历一个切片则可以:\",\" type Person struct { Name string Age int64 } var matchPersons []Person lo.ForEach([]Person{{ Name: \\\"Lixv\\\", Age: 21, }, {}}, func(item Person, index int) { if item.Name == \\\"Lixv\\\" { matchPersons = append(matchPersons, item) } }) fmt.Println(matchPersons) }}) \",\"而ForEach在代码库中这是这样的形式:\",\"func ForEach[T any](collection []T, iteratee func(item T, index int)) { for i, item := range collection { iteratee(item, i) } } \",\"可以看到这样的实现及其优雅，如果我们想自己写各种遍历实现就会针对不同的类型写很多功能相同的函数。\",\"其实也可以通过parallel.ForEach进行,只不过会在遍历过程中有阻塞过程:\",\"func ForEach[T any](collection []T, iteratee func(item T, index int)) { var wg sync.WaitGroup wg.Add(len(collection)) for i, item := range collection { go func(_item T, _i int) { iteratee(_item, _i) wg.Done() }(item, i) } wg.Wait() } \",\"其实也有各种各样的功能，例如：\",\"import \\\"github.com/samber/lo\\\" lo.Times(3, func(i int) string { return strconv.FormatInt(int64(i), 10) }) \",\"可以实现这样的形式:\",\"res := lo.Times(3, func(index int) int { return index * 10 }) fmt.Println(res) # [0 10 20] \",\"代码的实现是这样的:\",\"// Times invokes the iteratee n times, returning an array of the results of each invocation. // The iteratee is invoked with index as argument. // Play: https://go.dev/play/p/vgQj3Glr6lT func Times[T any](count int, iteratee func(index int) T) []T { result := make([]T, count) for i := 0; i < count; i++ { result[i] = iteratee(i) } return result } \"]},\"1020\":{\"h\":\"总结\",\"t\":[\"学习工具可以提高我们的效率，这样的工具使用多了对我们的代码也会有质量上的提升，希望我们一起学习工具来提升我们的代码能力:)\"]},\"1021\":{\"c\":[\"tutorial\"]},\"1022\":{\"c\":[\"golang\",\"goreleaser\",\"tool\"]},\"1023\":{\"h\":\"Makefile在Go程序中的应用\",\"t\":[\"我们经常可以在C/C++项目中看到Makefie，Makefile是一个非常重要的项目自动化管理工具，它用于描述项目如何编译、安装、测试等任务。\",\"但是在Go的程序中却很少使用到，原因是Go的命令本身已经非常简单，CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main，就可以编译出任意平台可运行的程序，但在Go程序中使用Makefile本身就可以帮助我们不需要手动输入上述的语法，可以极大简化项目编译的过程。\"]},\"1024\":{\"h\":\"make简介\",\"t\":[\"make命令默认会查找名为Makefile或makefile的文件来获取构建规则然后执行对应的规则，一般来说主流的操作系统都会内置了make命令。\"]},\"1025\":{\"h\":\"Makefile简介\",\"t\":[\"Makefile定义一系列规则，让我们不必每次都输入相同的命令，例如你每次想运行go程序都需要输入go build -o main && ./main,那么你就可以将这个规则写入Makefile文件，然后每次执行make run:\",\"run: go build -o main && ./main \",\"通过这个简单的示例，你也看到了编写Makefile文件的规则:\",\"[target] ... : [prerequisites] ... <tab>[command] ... ... \",\"其中：\",\"targets：表示目标,即需要构建的产品,如可执行文件、文档等。 prerequisites：表示目标的依赖,通常是源代码文件等。只有在依赖更新后,目标才需要重建。 tab: 命令行必须使用tab缩进,不能使用空格。这是Makefile关键语法。 command: 命令行具体执行的命令\",\"所以这个简单的Makefile展示了Makefile的基本语法结构:\",\"目标:依赖 <tab>命令 \"]},\"1026\":{\"h\":\"Makefile 在Go程序中使用\",\"t\":[\"我发现Go程序里使用Makefile中写的最好的是李文周的博客,这里也借用他的实例代码来做演示吧:\",\".PHONY: all build run gotool clean help BINARY=\\\"bluebell\\\" all: gotool build build: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ${BINARY} run: @go run ./ gotool: go fmt ./ go vet ./ clean: @if [ -f ${BINARY} ] ; then rm ${BINARY} ; fi help: @echo \\\"make - 格式化 Go 代码, 并编译生成二进制文件\\\" @echo \\\"make build - 编译 Go 代码, 生成二进制文件\\\" @echo \\\"make run - 直接运行 Go 代码\\\" @echo \\\"make clean - 移除二进制文件和 vim swap files\\\" @echo \\\"make gotool - 运行 Go 工具 'fmt' and 'vet'\\\" \",\"其中：\",\"BINARY=\\\"bluebell\\\"是定义二进制文件名称。 .PHONY用来定义伪目标。不创建目标文件，而是去执行这个目标下面的命令。\"]},\"1027\":{\"h\":\"goreleaser 一键发布你的Go代码\",\"t\":[\"goreleaser 一键发布你的Go代码\",\"引用:李文周的博客\"]},\"1028\":{\"c\":[\"tutorial\"]},\"1029\":{\"c\":[\"golang\",\"makefile\"]},\"1030\":{\"h\":\"两万字长文带你入门 Prometheus\",\"t\":[\"最近在公司做监控方面的工作，接触到了Prometheus、Grafana等云服务产品，特地在此记录下来学习到的知识和使用过程\",\"本文章已录制B站视频\"]},\"1031\":{\"c\":[\"tutorial\"]},\"1032\":{\"c\":[\"golang\",\"prometheus\"]},\"1033\":{\"h\":\"time/rate的介绍和使用\",\"t\":[\"当我们写我们的后台服务时，使用限流器是非常有必要的，限流器可以帮助我们限制请求的速率，保护服务，避免服务过载等。\",\"Golang 标准库中就自带了限流算法的实现golang.org/x/time/rate。该限流器是基于 Token Bucket(令牌桶) 实现的。\",\"简单来说，令牌桶就是想象有一个固定大小的桶，系统会以恒定速率向桶中放 Token，桶满则暂时不放。\",\"而用户则从桶中取 Token，如果有剩余 Token 就可以一直取。如果没有剩余 Token，则需要等到系统中被放置了 Token 才行。\",\"本文则主要集中介绍下该组件的具体使用方法：\"]},\"1034\":{\"h\":\"构造一个限流器\",\"t\":[\"我们可以使用以下方法构造一个限流器对象：\",\"limiter := NewLimiter(10, 1); \",\"这里有两个参数：\",\"第一个参数是 r Limit。代表每秒可以向 Token 桶中产生多少 token。Limit 实际上是 float64 的别名。 第二个参数是 b int。b 代表 Token 桶的容量大小。 那么，对于以上例子来说，其构造出的限流器含义为，其令牌桶大小为 1, 以每秒 10 个 Token 的速率向桶中放置 Token。\",\"除了直接指定每秒产生的 Token 个数外，还可以用 Every 方法来指定向 Token 桶中放置 Token 的间隔，例如：\",\"limit := Every(100 * time.Millisecond); limiter := NewLimiter(limit, 1); \",\"以上就表示每 100ms 往桶中放一个 Token。本质上也就是一秒钟产生 10 个。\",\"Limiter 提供了三类方法供用户消费 Token，用户可以每次消费一个 Token，也可以一次性消费多个 Token。 而每种方法代表了当 Token 不足时，各自不同的对应手段。\"]},\"1035\":{\"h\":\"Wait/WaitN\",\"t\":[\"func (lim *Limiter) Wait(ctx context.Context) (err error) func (lim *Limiter) WaitN(ctx context.Context, n int) (err error) \",\"Wait 实际上就是 WaitN(ctx,1)。\",\"当使用 Wait 方法消费 Token 时，如果此时桶内 Token 数组不足 (小于 N)，那么 Wait 方法将会阻塞一段时间，直至 Token 满足条件。如果充足则直接返回。\",\"这里可以看到，Wait 方法有一个 context 参数。 我们可以设置 context 的 Deadline 或者 Timeout，来决定此次 Wait 的最长时间。\"]},\"1036\":{\"h\":\"Allow/AllowN\",\"t\":[\"func (lim *Limiter) Allow() bool func (lim *Limiter) AllowN(now time.Time, n int) bool \",\"Allow 实际上就是 AllowN(time.Now(),1)。\",\"AllowN 方法表示，截止到某一时刻，目前桶中数目是否至少为 n 个，满足则返回 true，同时从桶中消费 n 个 token。 反之返回不消费 Token，false。\",\"通常对应这样的线上场景，如果请求速率过快，就直接丢到某些请求。\"]},\"1037\":{\"h\":\"Reserve/ReserveN\",\"t\":[\"func (lim *Limiter) Reserve() *Reservation func (lim *Limiter) ReserveN(now time.Time, n int) *Reservation \",\"Reserve 相当于 ReserveN(time.Now(), 1)。\",\"ReserveN 的用法就相对来说复杂一些，当调用完成后，无论 Token 是否充足，都会返回一个 Reservation * 对象。\",\"你可以调用该对象的 Delay() 方法，该方法返回了需要等待的时间。如果等待时间为 0，则说明不用等待。 必须等到等待时间之后，才能进行接下来的工作。\",\"或者，如果不想等待，可以调用 Cancel() 方法，该方法会将 Token 归还。\",\"举一个简单的例子，我们可以这么使用 Reserve 方法。\",\"r := lim.Reserve() f !r.OK() { // Not allowed to act! Did you remember to set lim.burst to be > 0 ? return } time.Sleep(r.Delay()) Act() // 执行相关逻辑 \"]},\"1038\":{\"h\":\"动态调整速率\",\"t\":[\"Limiter 支持可以调整速率和桶大小：\",\"SetLimit(Limit) 改变放入 Token 的速率 SetBurst(int) 改变 Token 桶大小 有了这两个方法，可以根据现有环境和条件以及我们的需求，动态地改变 Token 桶大小和速率。\",\"本文参考:\",\"https://www.cyhone.com/articles/usage-of-golang-rate/\",\"https://www.cyhone.com/articles/analisys-of-golang-rate/\",\"https://www.cyhone.com/articles/analysis-of-uber-go-ratelimit/\"]},\"1039\":{\"c\":[\"tutorial\"]},\"1040\":{\"c\":[\"golang\",\"air\",\"gin\"]},\"1041\":{\"h\":\"雪花算法\"},\"1042\":{\"c\":[\"tutorial\"]},\"1043\":{\"c\":[\"golang\",\"snowflake\"]},\"1044\":{\"h\":\"Cookie & JWT 学习\",\"t\":[\"众所周知，HTTP协议是无状态协议，在一次请求过后，下一次服务器就不知道这个请求是谁发送过来的了，在Web应用中，用户的认证和鉴权是非常重要的一环，实践有多种可用方案，并且各有千秋。\"]},\"1045\":{\"h\":\"Cookie-Session 认证\",\"t\":[\"在Web应用发展初期至目前依然有很多网站采用Cookie-Session的方案来管理用户认证的逻辑：\",\"客户端通过用户名密码/第三方登录进行认证\",\"认证成功后，在服务器端生成对应的session，然后将sessionID通过HTTP响应头Cookie发送给客户端\",\"客户端访问需要认证的接口时，在Cookie中携带对应的SessionID\",\"服务端根据对应的SessionID查找Session并进行鉴权 返回给客户端需要的数据\",\"cookie-session.png\",\"Golang代码实现:\",\"package main import ( \\\"fmt\\\" \\\"net/http\\\" \\\"github.com/gorilla/sessions\\\" ) var store = sessions.NewCookieStore([]byte(\\\"secret-key\\\")) func main() { http.HandleFunc(\\\"/\\\", homeHandler) http.HandleFunc(\\\"/login\\\", loginHandler) http.HandleFunc(\\\"/logout\\\", logoutHandler) fmt.Println(\\\"Server started on http://localhost:8080\\\") http.ListenAndServe(\\\":8080\\\", nil) } func homeHandler(w http.ResponseWriter, r *http.Request) { session, _ := store.Get(r, \\\"session-name\\\") // Check if the user is authenticated if auth, ok := session.Values[\\\"authenticated\\\"].(bool); !ok || !auth { http.Redirect(w, r, \\\"/login\\\", http.StatusSeeOther) return } // Display the user's name name := session.Values[\\\"name\\\"].(string) fmt.Fprintf(w, \\\"Welcome, %s!\\\", name) } func loginHandler(w http.ResponseWriter, r *http.Request) { session, _ := store.Get(r, \\\"session-name\\\") // Set user authentication status and name in the session session.Values[\\\"authenticated\\\"] = true session.Values[\\\"name\\\"] = \\\"John Doe\\\" // Save the session session.Save(r, w) http.Redirect(w, r, \\\"/\\\", http.StatusSeeOther) } func logoutHandler(w http.ResponseWriter, r *http.Request) { session, _ := store.Get(r, \\\"session-name\\\") // Revoke user authentication status and clear session data session.Values[\\\"authenticated\\\"] = false session.Values[\\\"name\\\"] = \\\"\\\" // Save the session session.Save(r, w) http.Redirect(w, r, \\\"/login\\\", http.StatusSeeOther) } \",\"问题:\",\"服务器端需要存储大量的Session数据SessionID，而且需要存储在内存数据库中快速查找，在线用户很多时需要占用大量资源\",\"当服务器资源不够需要扩展时需要整体迁移，可能创建session服务和验证sesion不是同一个服务资源消耗大\",\"难以防范CSRF攻击\"]},\"1046\":{\"h\":\"Token 认证\",\"t\":[\"基于Session的会话管理模式有很多缺点，所以基于Session会话管理做进一步提升的Token无状态会话管理就诞生了，所谓无状态就是服务器端不再存储状态：\",\"客户端通过用户名密码/第三方登录进行认证\",\"认证成功后，在服务器端加密生成Token返还给客户端\",\"客户端保存Token，认证时接口通过HTTP请求头加入token请求服务器端\",\"服务端根据对应的Token进行鉴权 返回给客户端需要的数据\",\"token.png\"]},\"1047\":{\"h\":\"JWT 认证\",\"t\":[\"JSON Web Token (JWT) 是一种开放标准 (RFC 7519)，它定义了一种紧凑且独立的方式，用于在各方之间以 JSON 对象的形式安全地传输信息。该信息可以被验证和信任，因为它是经过数字签名的。JWT 可以使用密钥（使用HMAC算法）或使用RSA或ECDSA的公钥/私钥对进行签名。\",\"什么时候应该使用 JSON Web 令牌？\",\"授权：这是使用 JWT 最常见的场景。用户登录后，每个后续请求都将包含 JWT，从而允许用户访问该令牌允许的路由、服务和资源。单点登录是当今广泛使用 JWT 的一项功能，因为它的开销很小并且能够轻松地跨不同域使用。\",\"信息交换：JSON Web 令牌是在各方之间安全传输信息的好方法。因为 JWT 可以进行签名（例如，使用公钥/私钥对），所以您可以确定发送者就是他们所说的人。此外，由于签名是使用标头和有效负载计算的，因此您还可以验证内容是否未被篡改。\",\"jwt.io就是专门在线处理JWT的网站\",\"一个JWT Token就像这样:\",\"相关信息\",\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ. SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\"由两个 .分割成的三段部分组成，这三个部分分别是由Header头、Payload负载、Signature签名组成。\",\"因此，JWT 通常如下所示:\",\"xxxxx.yyyyy.zzzzz\",\"头和负载以JSON的格式存在，这就是JWT中的JSON，这三部分的内容都是经过了Base64编码组成。\",\"比如eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9是由编码组成:\",\"{ \\\"alg\\\": \\\"HS256\\\", \\\"typ\\\": \\\"JWT\\\" } \",\"Header存储了加密算法和Token类型。\",\"Payload表示一个(负载)，也是一个JSON对象，官方提供7个字段(不强制):\",\"iss (issuer)（发行人） sub (subject)（主题） aud (audienct) （受众） exp (expiration time)（到期时间） nbf (not before)（不早于 生效时间） iat (issued at)（发布于） jti (jwt id)（JWT ID） \",\"除了这几个，我们也可以自定义字段,比如：\",\"{ \\\"sub\\\": \\\"1234567890\\\", \\\"name\\\": \\\"John Doe\\\", \\\"admin\\\": true } \",\"然后对Payload进行 Base64Url 编码以形成 JWT 的第二部分。\",\"警告\",\"请注意，对于已签名的令牌来说，这些信息虽然可以防止篡改，但任何人都可以读取。除非经过加密，否则不要在 JWT 的payload或Header中加入用户隐私信息。\",\"最后一部分就是Signature,主要作用是对前面的部分进行加密防止数据篡改:\",\"要创建签名部分，您必须获取JWT的加密后的Header、加密后的payload、一个密钥、Header中指定的算法，然后对其进行签名。\",\"例如，如果要使用HMAC SHA256算法，则将通过以下方式创建签名：\",\"HMACSHA256( base64UrlEncode(header) + \\\".\\\" + base64UrlEncode(payload), secret) \",\"最后三部分合起来就组成了JWT.\",\"JWT 也缺点:\",\"由于有效期存储在Token中，一旦JWT Token签发后，在有效期内就是一直可用的，无法在服务器端废除，当用户取消登陆时，只能依赖客户端删除本地的JWT Token。\",\"基于JWT实现认证的实践:\",\"通常我们有两种token，一种是Access Token是用来访问接口资源的token。另一种是Refresh Token。通常情况下，Refresh Token存在的有效期时间会比较长，而Access Token的有效期会比较短，当Access Token由于过期而失效时，就可以使用Refresh Token来刷新获取到新的Access Token。如果Refresh Token也失效了，那用户就只能重新登录了。\",\"Go JWT代码逻辑实现:\",\"package main import ( \\\"fmt\\\" \\\"log\\\" \\\"net/http\\\" \\\"time\\\" \\\"github.com/dgrijalva/jwt-go\\\" ) var jwtKey = []byte(\\\"secret-key\\\") type Claims struct { Username string `json:\\\"username\\\"` jwt.StandardClaims } func main() { http.HandleFunc(\\\"/login\\\", loginHandler) http.HandleFunc(\\\"/home\\\", homeHandler) fmt.Println(\\\"Server started on http://localhost:8080\\\") log.Fatal(http.ListenAndServe(\\\":8080\\\", nil)) } func loginHandler(w http.ResponseWriter, r *http.Request) { if r.Method != \\\"POST\\\" { w.WriteHeader(http.StatusMethodNotAllowed) return } username := r.FormValue(\\\"username\\\") password := r.FormValue(\\\"password\\\") // Check username and password (dummy check) if username != \\\"admin\\\" || password != \\\"password\\\" { w.WriteHeader(http.StatusUnauthorized) return } // Create token expirationTime := time.Now().Add(5 * time.Minute) claims := &Claims{ Username: username, StandardClaims: jwt.StandardClaims{ ExpiresAt: expirationTime.Unix(), }, } token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims) tokenString, err := token.SignedString(jwtKey) if err != nil { w.WriteHeader(http.StatusInternalServerError) return } // Set token in response header http.SetCookie(w, &http.Cookie{ Name: \\\"token\\\", Value: tokenString, Expires: expirationTime, }) w.WriteHeader(http.StatusOK) } func homeHandler(w http.ResponseWriter, r *http.Request) { cookie, err := r.Cookie(\\\"token\\\") if err != nil { if err == http.ErrNoCookie { w.WriteHeader(http.StatusUnauthorized) return } w.WriteHeader(http.StatusBadRequest) return } tokenString := cookie.Value claims := &Claims{} token, err := jwt.ParseWithClaims(tokenString, claims, func(token *jwt.Token) (interface{}, error) { return jwtKey, nil }) if err != nil { if err == jwt.ErrSignatureInvalid { w.WriteHeader(http.StatusUnauthorized) return } w.WriteHeader(http.StatusBadRequest) return } if !token.Valid { w.WriteHeader(http.StatusUnauthorized) return } // Token is valid, proceed with authenticated user fmt.Fprintf(w, \\\"Welcome, %s!\\\", claims.Username) } \"]},\"1048\":{\"c\":[\"tutorial\"]},\"1049\":{\"c\":[\"golang\",\"web\"]},\"1050\":{\"h\":\"Gin 框架深度剖析\",\"t\":[\"Gin框架是一款高性能的Go Web框架,本文以一个小案例为例,从源码角度分析Gin的启动过程,请求与相应的技术原理.\",\"我们怎么开始Gin呢?很简单,以下代码就可以开始开启Gin的Web服务了\",\"func main() { // init gin with default configs r := gin.Default() r.GET('/hello', func(c *gin.Context) { c.JSON(http.StatusOK, \\\"Hello\\\") }) // run the engine r.Run() } \",\"首先是初始化Gin默认的初始化包含两个中间件， Logger 日志中间件将Gin的启动与响应日志输出到控制台和Recovery 将Gin遇到的无法处理的请求按HTTP 500状态码返回.\",\"其次我们给gin定义了一个GET请求方法,之后我们就可以请求这个方法中定义的路由.\",\"最后通过r.Run启动Gin Engine,开始监听请求并提供HTTP服务\",\"源码分析:\"]},\"1051\":{\"h\":\"gin的Default函数\",\"t\":[\"// Default returns an Engine instance with the Logger and Recovery middleware already attached. func Default() *Engine { debugPrintWARNINGDefault() engine := New() engine.Use(Logger(), Recovery()) return engine } \",\"这个Default函数主要是创建Engine和Recovery两个默认中间件.\"]},\"1052\":{\"h\":\"Engine.Use函数\",\"t\":[\"// Use attaches a global middleware to the router. i.e. the middleware attached through Use() will be // included in the handlers chain for every single request. Even 404, 405, static files... // For example, this is the right place for a logger or error management middleware. func (engine *Engine) Use(middleware ...HandlerFunc) IRoutes { engine.RouterGroup.Use(middleware...) engine.rebuild404Handlers() engine.rebuild405Handlers() return engine } \",\"engine.RouterGroup是当前的路由,Engine.Use函数用于将中间件添加到当前的路由上.\",\"最后其实是到了engine.RouterGroup.Use()这个函数这里\",\"// Use adds middleware to the group, see example code in GitHub. func (group *RouterGroup) Use(middleware ...HandlerFunc) IRoutes { group.Handlers = append(group.Handlers, middleware...) return group.returnObj() } \",\"这个函数其实就是将中间件完成实际的中间件注册工作.这个函数很简短,实际上就是把中间件添加到HandlersChain类型其实就是数组(type HandlersChain []HandlerFunc)的group.Handlers中,换句话说,实际上是以函数数组的方式存储了一个函数序列,然后在之后调用的时候会依次调用.\"]},\"1053\":{\"h\":\"注册事件处理\",\"t\":[\"我们可以通过如下代码给r添加GET方法事件,其实和我们刚刚的代码是一样的\",\"r.Handle(\\\"GET\\\", \\\"/hello\\\", \\\"Hello\\\") \",\"gin.Engine的r.Handle函数主要用于事件处理函数注册到指定的HTTP方法+相对路径上.\",\"RouterGroup.Handle函数, 这个函数就是注册事件的作用\",\"func (group *RouterGroup) Handle(httpMethod, relativePath string, handlers ...HandlerFunc) IRoutes { if matched := regEnLetter.MatchString(httpMethod); !matched { panic(\\\"http method \\\" + httpMethod + \\\" is not valid\\\") } return group.handle(httpMethod, relativePath, handlers) } \",\"到后面会到group.handle这个函数,这个函数的作用就是将handlers添加对应的HTTP方法到绝对路径上去:\",\"func (group *RouterGroup) handle(httpMethod, relativePath string, handlers HandlersChain) IRoutes { absolutePath := group.calculateAbsolutePath(relativePath) handlers = group.combineHandlers(handlers) group.engine.addRoute(httpMethod, absolutePath, handlers) return group.returnObj() } \",\"如果继续下去我们可以看到最后其实是到了group.engine.addRoute()函数里,这个函数最后的作用就是将handlers方法添加到当前的HTTP方法上:\",\"func (engine *Engine) addRoute(method, path string, handlers HandlersChain) { assert1(path[0] == '/', \\\"path must begin with '/'\\\") assert1(method != \\\"\\\", \\\"HTTP method can not be empty\\\") assert1(len(handlers) > 0, \\\"there must be at least one handler\\\") debugPrintRoute(method, path, handlers) root := engine.trees.get(method) if root == nil { root = new(node) root.fullPath = \\\"/\\\" engine.trees = append(engine.trees, methodTree{method: method, root: root}) } root.addRoute(path, handlers) // Update maxParams if paramsCount := countParams(path); paramsCount > engine.maxParams { engine.maxParams = paramsCount } if sectionsCount := countSections(path); sectionsCount > engine.maxSections { engine.maxSections = sectionsCount } } \",\"gin里面还有一颗路由树,其中每一种HTTP方法,分别有一颗树, 用来保存对应的路由节点(node),其中node里面有各种属性,里面就有我们上面提到的handlerFunc\",\"// 这里是最核心的添加方法 root := engine.trees.get(method) if root == nil { root = new(node) root.fullPath = \\\"/\\\" engine.trees = append(engine.trees, methodTree{method: method, root: root}) } root.addRoute(path, handlers) \"]},\"1054\":{\"h\":\"启动 r.Run\",\"t\":[\"r.Run函数里面是这样的:\",\"func (engine *Engine) Run(addr ...string) (err error) { defer func() { debugPrintError(err) }() if engine.isUnsafeTrustedProxies() { debugPrint(\\\"[WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.\\\\n\\\" + \\\"Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.\\\") } address := resolveAddress(addr) debugPrint(\\\"Listening and serving HTTP on %s\\\\n\\\", address) err = http.ListenAndServe(address, engine.Handler()) return } \",\"解析监听的地址(就是resolveAddress函数这个函数解析我们的addr地址,如果我们不传值,就是默认的8080端口)\",\"通过http.ListenAndServe服务监听我们的engine.Handler\",\"在这里我们先分析http.ListenAndServe方法, 因为我们只要知道http.ListenAndServe方法底层我们就知道了gin的核心的监听和服务.\"]},\"1055\":{\"h\":\"http.ListenAndServe方法\",\"t\":[\"Gin的最底层的监听服务其实是通过Go语言官方的net/http包来实现的, 我们先来看ListenAndServe函数.\",\"// net/http func ListenAndServe(addr string, handler Handler) error { server := &Server{Addr: addr, Handler: handler} return server.ListenAndServe() } \",\"该函数实例化Sever，并调用Server.ListenAndServe函数实现监听与服务功能。\",\"我们刚刚Gin里面的engine.Handler()其实就是实现了Handler接口方法,作为后续Serve对象处理网络请求时调用的函数.\",\"net/http的Handler接口\",\"net/http的Server结构体类型中有一个Handler接口类型的Handler。\",\"// A Server defines parameters for running an HTTP server. // The zero value for Server is a valid configuration. type Server struct { // Addr optionally specifies the TCP address for the server to listen on, // in the form \\\"host:port\\\". If empty, \\\":http\\\" (port 80) is used. // The service names are defined in RFC 6335 and assigned by IANA. // See net.Dial for details of the address format. Addr string Handler Handler // handler to invoke, http.DefaultServeMux if nil // ... } \",\"而Handler接口只有一个ServeHTTP方法,这就意味着,任何类型只要我们实现了ServeHTTP方法,我们就实现了Handler接口,并且就可以将此类型作为Server.Handler,供HTTP处理时调用.\",\"显然gin.Engine实现了net/http的Handler接口的ServeHTTP函数.\",\"我们继续深入net/http包, net/http的Server.ListenAndServe函数\",\"// ListenAndServe listens on the TCP network address srv.Addr and then // calls Serve to handle requests on incoming connections. // Accepted connections are configured to enable TCP keep-alives. // // If srv.Addr is blank, \\\":http\\\" is used. // // ListenAndServe always returns a non-nil error. After Shutdown or Close, // the returned error is ErrServerClosed. func (srv *Server) ListenAndServe() error { if srv.shuttingDown() { return ErrServerClosed } addr := srv.Addr if addr == \\\"\\\" { addr = \\\":http\\\" } ln, err := net.Listen(\\\"tcp\\\", addr) if err != nil { return err } return srv.Serve(ln) } \",\"我们可以看到Server.ListenAndServe其实就是完成了两个工作:\",\"设置监听,net.Listen(\\\"tcp\\\", addr)负责设置监听地址\",\"接受网络请求并处理:srv.Serve(ln), 负责在监听位置上接受网络请求并作出响应\",\"我们再来看srv.Serve(ln)函数:\",\"// Serve accepts incoming connections on the Listener l, creating a // new service goroutine for each. The service goroutines read requests and // then call srv.Handler to reply to them. // // HTTP/2 support is only enabled if the Listener returns *tls.Conn // connections and they were configured with \\\"h2\\\" in the TLS // Config.NextProtos. // // Serve always returns a non-nil error and closes l. // After Shutdown or Close, the returned error is ErrServerClosed. func (srv *Server) Serve(l net.Listener) error { if fn := testHookServerServe; fn != nil { fn(srv, l) // call hook with unwrapped listener } origListener := l l = &onceCloseListener{Listener: l} defer l.Close() if err := srv.setupHTTP2_Serve(); err != nil { return err } if !srv.trackListener(&l, true) { return ErrServerClosed } defer srv.trackListener(&l, false) baseCtx := context.Background() if srv.BaseContext != nil { baseCtx = srv.BaseContext(origListener) if baseCtx == nil { panic(\\\"BaseContext returned a nil context\\\") } } var tempDelay time.Duration // how long to sleep on accept failure ctx := context.WithValue(baseCtx, ServerContextKey, srv) for { rw, err := l.Accept() if err != nil { select { case <-srv.getDoneChan(): return ErrServerClosed default: } if ne, ok := err.(net.Error); ok && ne.Temporary() { if tempDelay == 0 { tempDelay = 5 * time.Millisecond } else { tempDelay *= 2 } if max := 1 * time.Second; tempDelay > max { tempDelay = max } srv.logf(\\\"http: Accept error: %v; retrying in %v\\\", err, tempDelay) time.Sleep(tempDelay) continue } return err } connCtx := ctx if cc := srv.ConnContext; cc != nil { connCtx = cc(connCtx, rw) if connCtx == nil { panic(\\\"ConnContext returned nil\\\") } } tempDelay = 0 c := srv.newConn(rw) c.setState(c.rwc, StateNew, runHooks) // before Serve can return go c.serve(connCtx) } } \",\"在Server.Serve函数的实现中，启动了一个无条件的for循环以便持续监听、接受和处理网络请求，主要流程为：\",\"接受请求：l.Accept()调用在无请求时保持阻塞，直到接收到请求时，接受请求并返回建立的连接\",\"处理请求：启动一个goroutine，使用conn的serve函数进行处理（go c.serve(connCtx)）\",\"而c.serve函数是什么呢?\",\"// Serve a new connection. func (c *conn) serve(ctx context.Context) { c.remoteAddr = c.rwc.RemoteAddr().String() ctx = context.WithValue(ctx, LocalAddrContextKey, c.rwc.LocalAddr()) defer func() { if err := recover(); err != nil && err != ErrAbortHandler { const size = 64 << 10 buf := make([]byte, size) buf = buf[:runtime.Stack(buf, false)] c.server.logf(\\\"http: panic serving %v: %v\\\\n%s\\\", c.remoteAddr, err, buf) } if !c.hijacked() { c.close() c.setState(c.rwc, StateClosed, runHooks) } }() if tlsConn, ok := c.rwc.(*tls.Conn); ok { if d := c.server.ReadTimeout; d > 0 { c.rwc.SetReadDeadline(time.Now().Add(d)) } if d := c.server.WriteTimeout; d > 0 { c.rwc.SetWriteDeadline(time.Now().Add(d)) } if err := tlsConn.HandshakeContext(ctx); err != nil { // If the handshake failed due to the client not speaking // TLS, assume they're speaking plaintext HTTP and write a // 400 response on the TLS conn's underlying net.Conn. if re, ok := err.(tls.RecordHeaderError); ok && re.Conn != nil && tlsRecordHeaderLooksLikeHTTP(re.RecordHeader) { io.WriteString(re.Conn, \\\"HTTP/1.0 400 Bad Request\\\\r\\\\n\\\\r\\\\nClient sent an HTTP request to an HTTPS server.\\\\n\\\") re.Conn.Close() return } c.server.logf(\\\"http: TLS handshake error from %s: %v\\\", c.rwc.RemoteAddr(), err) return } c.tlsState = new(tls.ConnectionState) *c.tlsState = tlsConn.ConnectionState() if proto := c.tlsState.NegotiatedProtocol; validNextProto(proto) { if fn := c.server.TLSNextProto[proto]; fn != nil { h := initALPNRequest{ctx, tlsConn, serverHandler{c.server}} // Mark freshly created HTTP/2 as active and prevent any server state hooks // from being run on these connections. This prevents closeIdleConns from // closing such connections. See issue https://golang.org/issue/39776. c.setState(c.rwc, StateActive, skipHooks) fn(c.server, tlsConn, h) } return } } // HTTP/1.x from here on. ctx, cancelCtx := context.WithCancel(ctx) c.cancelCtx = cancelCtx defer cancelCtx() c.r = &connReader{conn: c} c.bufr = newBufioReader(c.r) c.bufw = newBufioWriterSize(checkConnErrorWriter{c}, 4<<10) for { w, err := c.readRequest(ctx) if c.r.remain != c.server.initialReadLimitSize() { // If we read any bytes off the wire, we're active. c.setState(c.rwc, StateActive, runHooks) } if err != nil { const errorHeaders = \\\"\\\\r\\\\nContent-Type: text/plain; charset=utf-8\\\\r\\\\nConnection: close\\\\r\\\\n\\\\r\\\\n\\\" switch { case err == errTooLarge: // Their HTTP client may or may not be // able to read this if we're // responding to them and hanging up // while they're still writing their // request. Undefined behavior. const publicErr = \\\"431 Request Header Fields Too Large\\\" fmt.Fprintf(c.rwc, \\\"HTTP/1.1 \\\"+publicErr+errorHeaders+publicErr) c.closeWriteAndWait() return case isUnsupportedTEError(err): // Respond as per RFC 7230 Section 3.3.1 which says, // A server that receives a request message with a // transfer coding it does not understand SHOULD // respond with 501 (Unimplemented). code := StatusNotImplemented // We purposefully aren't echoing back the transfer-encoding's value, // so as to mitigate the risk of cross side scripting by an attacker. fmt.Fprintf(c.rwc, \\\"HTTP/1.1 %d %s%sUnsupported transfer encoding\\\", code, StatusText(code), errorHeaders) return case isCommonNetReadError(err): return // don't reply default: if v, ok := err.(statusError); ok { fmt.Fprintf(c.rwc, \\\"HTTP/1.1 %d %s: %s%s%d %s: %s\\\", v.code, StatusText(v.code), v.text, errorHeaders, v.code, StatusText(v.code), v.text) return } publicErr := \\\"400 Bad Request\\\" fmt.Fprintf(c.rwc, \\\"HTTP/1.1 \\\"+publicErr+errorHeaders+publicErr) return } } // Expect 100 Continue support req := w.req if req.expectsContinue() { if req.ProtoAtLeast(1, 1) && req.ContentLength != 0 { // Wrap the Body reader with one that replies on the connection req.Body = &expectContinueReader{readCloser: req.Body, resp: w} w.canWriteContinue.setTrue() } } else if req.Header.get(\\\"Expect\\\") != \\\"\\\" { w.sendExpectationFailed() return } c.curReq.Store(w) if requestBodyRemains(req.Body) { registerOnHitEOF(req.Body, w.conn.r.startBackgroundRead) } else { w.conn.r.startBackgroundRead() } // HTTP cannot have multiple simultaneous active requests.[*] // Until the server replies to this request, it can't read another, // so we might as well run the handler in this goroutine. // [*] Not strictly true: HTTP pipelining. We could let them all process // in parallel even if their responses need to be serialized. // But we're not going to implement HTTP pipelining because it // was never deployed in the wild and the answer is HTTP/2. serverHandler{c.server}.ServeHTTP(w, w.req) w.cancelCtx() if c.hijacked() { return } w.finishRequest() if !w.shouldReuseConnection() { if w.requestBodyLimitHit || w.closedRequestBodyEarly() { c.closeWriteAndWait() } return } c.setState(c.rwc, StateIdle, runHooks) c.curReq.Store((*response)(nil)) if !w.conn.server.doKeepAlives() { // We're in shutdown mode. We might've replied // to the user without \\\"Connection: close\\\" and // they might think they can send another // request, but such is life with HTTP/1.1. return } if d := c.server.idleTimeout(); d != 0 { c.rwc.SetReadDeadline(time.Now().Add(d)) if _, err := c.bufr.Peek(4); err != nil { return } } c.rwc.SetReadDeadline(time.Time{}) } } \",\"这个函数非常长,但其实最主要的逻辑是这里serverHandler{c.server}.ServeHTTP(w, w.req),发现了没有,其实就是我们刚刚Handler实现的ServeHTTP方法,这也就是为什么刚刚说任何类型实现了ServeHTTP方法,就可以处理http请求.\",\"这就是net/http包中的http的路径.\",\"gin在gin.go中实现了ServeHTTP函数，代码如下：\",\"// ServeHTTP conforms to the http.Handler interface. func (engine *Engine) ServeHTTP(w http.ResponseWriter, req *http.Request) { c := engine.pool.Get().(*Context) c.writermem.reset(w) c.Request = req c.reset() engine.handleHTTPRequest(c) engine.pool.Put(c) } \",\"主要步骤是: 从engine.pool中取出来一个上下文对象,填入当前的w和req,并且调用当前engine.handleHTTPRequest(c), 最后释放资源engine.pool(这个engine.pool对象其实就是sync.Pool,好处是可以作为goroutine池子用的时候拿,不用的时候放回去, 可以缓解资源分配和释放的代价)\",\"最主要的其实是gin的Engine.handleHTTPRequest函数\",\"func (engine *Engine) handleHTTPRequest(c *Context) { httpMethod := c.Request.Method rPath := c.Request.URL.Path unescape := false if engine.UseRawPath && len(c.Request.URL.RawPath) > 0 { rPath = c.Request.URL.RawPath unescape = engine.UnescapePathValues } if engine.RemoveExtraSlash { rPath = cleanPath(rPath) } // Find root of the tree for the given HTTP method t := engine.trees for i, tl := 0, len(t); i < tl; i++ { if t[i].method != httpMethod { continue } root := t[i].root // Find route in tree value := root.getValue(rPath, c.params, unescape) if value.params != nil { c.Params = *value.params } if value.handlers != nil { c.handlers = value.handlers c.fullPath = value.fullPath c.Next() c.writermem.WriteHeaderNow() return } if httpMethod != \\\"CONNECT\\\" && rPath != \\\"/\\\" { if value.tsr && engine.RedirectTrailingSlash { redirectTrailingSlash(c) return } if engine.RedirectFixedPath && redirectFixedPath(c, root, engine.RedirectFixedPath) { return } } break } if engine.HandleMethodNotAllowed { for _, tree := range engine.trees { if tree.method == httpMethod { continue } if value := tree.root.getValue(rPath, nil, unescape); value.handlers != nil { c.handlers = engine.allNoMethod serveError(c, http.StatusMethodNotAllowed, default405Body) return } } } c.handlers = engine.allNoRoute serveError(c, http.StatusNotFound, default404Body) } \",\"Engine.handleHTTPRequest函数的主要处理位于中间的for循环中，主要为：\",\"遍历查找engine.trees以找出当前请求的HTTP Method对应的处理树；\",\"从该处理树中，根据当前请求的路径与参数查询出对应的处理函数value；\",\"将查询出的处理函数链（gin.HandlerChain）写入当前连接上下文的c.handlers中；\",\"执行c.Next()，调用handlers链上的下一个函数（中间件/业务处理函数），开始形成LIFO的函数调用栈；\",\"待函数调用栈全部返回后，c.writermem.WriteHeaderNow()根据上下文信息，将HTTP状态码写入响应头。\"]},\"1056\":{\"h\":\"中间件与handler\",\"t\":[\"请求发来时，被中间件与业务逻辑的handler处理，Gin的中间件与业务逻辑函数实质上都是gin.HandlerFunc函数。\",\"例如为gin.Engine添加了两款中间件（MiddeWareA与MiddleWareB）并为GET方法的/hello路径注册了一个 Hello函数作为路由处理函数，那么执行过程为：\",\"上述handleHTTPRequest函数执行到c.Next()，调用MiddleWareA；\",\"MiddleWareA执行到c.Next()，调用MiddleWareB；\",\"MiddleWareB执行到c.Next()，调用Hello；\",\"Hello函数返回，MiddleWareB继续执行至函数返回；\",\"MiddleWareA函数继续执行至函数返回。\",\"gin的Context.Next函数\",\"中间件中屡屡调用的c.Next()函数时gin提供的中间件流程控制函数之一，位于gin/context.go中，代码如下：\",\"/************************************/ /*********** FLOW CONTROL ***********/ /************************************/ // Next should be used only inside middleware. // It executes the pending handlers in the chain inside the calling handler. // See example in GitHub. func (c *Context) Next() { c.index++ for c.index < int8(len(c.handlers)) { c.handlers[c.index](c) c.index++ } } \",\"不难理解，Next函数起到的作用是，在当前中间件函数中，调用下一个HandlerFunc。依序调用HandlerChain中的HandlerFunc的过程中，形成了一个函数调用栈，调用时函数依序入栈，至最后一个函数调用返回，此后按LIFO的顺序出栈，自然就形成了上述中间件的LIFO的执行顺序。\"]},\"1057\":{\"h\":\"总结\",\"t\":[\"结合对Gin框架主干代码以及其调用的部分Go源码的阅读，可以体会到：\",\"Gin框架实质上实现的网络通信层以上的框架搭建，而网络通信功能完全采用Go语言的net/http库实现；\",\"Gin通过实现Go语言提供的接口快捷地接入Go的内置库功能，使得上层应用与底层实现之间互不依赖，充分体现了SOLID中的依赖倒置原则；\",\"Gin在性能上针对HTTP Web框架常见的高并发问题进行了优化，例如：通过上下文对象的缓存池节省连接高并发时内存频繁申请与释放的代价；\",\"Gin在设计上将中间件与业务逻辑都抽象为gin.HandleFunc函数，中间件与业务逻辑的执行过程实际上就是函数序列依序调用形成的函数调用栈的执行过程。\",\"参考\"]},\"1058\":{\"c\":[\"tutorial\"]},\"1059\":{\"c\":[\"golang\",\"gin\"]},\"1060\":{\"h\":\"gin框架中使用zerolog日志库\",\"t\":[\"gin框架是是目前Go Web领域中最受欢迎的框架，凭借其简单易用性使我们可以迅速构建Web应用。\",\"但是gin框架内部的日志中间件不支持持久化日志，本文就来使用zerolog来写一个gin的中间件，来介绍在gin的项目中如何配置和使用zerolog并日志归档。\",\"Zerolog日志库介绍\",\"本文章已录制B站视频\"]},\"1061\":{\"c\":[\"tutorial\"]},\"1062\":{\"c\":[\"golang\",\"log\",\"gin\",\"zerolog\"]},\"1063\":{\"h\":\"GRPC教程 1- Go语言原生RPC原理\",\"t\":[\"相关信息\",\"本篇文章介绍一下RPC的概念以及在Go语言如何使用标准库中的RPC.\",\"RPC是全称叫Remote Procedure Call，远程过程调用，它允许像调用本地服务一样去调用远程服务，相对应的就是本地调用。\",\"本地调用的例子:\",\"package main import ( \\\"fmt\\\" \\\"os\\\" \\\"time\\\" ) type Args struct { A int B int } func Add(args *Args) int { return args.A + args.B } func main() { fmt.Println(os.Getpid()) fmt.Println(Add(&Args{10, 20})) time.Sleep(100 * time.Second) } \",\"可以看到结果是\",\"107088 30 \",\"那么与此相对应的RPC调用即，不是同一进程下的服务调用。\",\"// server.go package main import ( \\\"log\\\" \\\"net\\\" \\\"net/http\\\" \\\"net/rpc\\\" ) type Args struct { A int B int } type ServiceA struct{} func (s ServiceA) Add(a *Args, reply *int) error { *reply = a.A + a.B return nil } type ServiceB struct{} func (s ServiceB) Sub(a *Args, reply *int) error { *reply = a.A - a.B return nil } func main() { serviceA := new(ServiceA) serviceB := new(ServiceB) rpc.Register(serviceA) rpc.Register(serviceB) rpc.HandleHTTP() l, err := net.Listen(\\\"tcp\\\", \\\":7890\\\") if err != nil { log.Fatal(\\\"listen error:\\\", err) } http.Serve(l, nil) } \",\"// client.go package main import ( \\\"fmt\\\" \\\"log\\\" \\\"net/rpc\\\" ) type Args struct { A, B int } func main() { // 建立HTTP连接 client, err := rpc.DialHTTP(\\\"tcp\\\", \\\"127.0.0.1:7890\\\") if err != nil { log.Fatal(\\\"dialing:\\\", err) } defer client.Close() // 同步调用 args := &Args{10, 20} var reply int err = client.Call(\\\"ServiceA.Add\\\", args, &reply) if err != nil { log.Fatal(\\\"ServiceA.Add error:\\\", err) } fmt.Printf(\\\"ServiceA.Add: %d+%d=%d\\\\n\\\", args.A, args.B, reply) // 异步调用 var reply2 int divCall := client.Go(\\\"ServiceB.Sub\\\", args, &reply2, nil) replyCall := <-divCall.Done // 接收调用结果 fmt.Println(\\\"ServiceB.Sub error:\\\", replyCall.Error) fmt.Printf(\\\"ServiceB.Sub: %d+%d=%d\\\\n\\\", args.A, args.B, reply2) } \",\"在这里，client调用的是server下的服务，即不是同一个进程下的服务，这样的好处有很多，比如如果一个项目过大，那么维护起来会有很大的成本，可以将服务给分离成很多服务，来降低服务之间的耦合度，这也是我们常说的微服务。\"]},\"1064\":{\"c\":[\"tutorial\"]},\"1065\":{\"c\":[\"golang\",\"grpc\"]},\"1066\":{\"h\":\"GRPC教程 2- gRPC下载以及入门gRPC\",\"t\":[\"相关信息\",\"本篇文章我们开始学习gRPC，我们之前学到了RPC(远程过程调用)，那么gRPC是什么呢？gRPC是Google开源的现代高性能RPC框架，能够运行在任何环境中，使用HTTP2作为传输协议。\",\"gRPC与RPC一样，可以像调用本地方法一样去调用另一个进程上的服务，这可以帮助你很轻松的创建微服务程序。gRPC只是定义类型和远程服务带有的参数和返回类型，我们需要在gRPC服务端程序中定义服务的逻辑，在客户端调用和服务器端相同的方法。\"]},\"1067\":{\"h\":\"安装gRPC\",\"t\":[\"安装Protocol Buffers\",\"https://github.com/google/protobuf/releases \",\"下载\",\"protoc-22.2-linux-x86_64.zip \",\"解压缩文件\",\"unzip protoc-22.2-linux-x86_64.zip -d protoc \",\"将 protoc下的 bin目录下的 protoc文件加入到$GOPATH/bin目录下， 然后将include目录 放到$GOPATH 目录下，以便于我们编写proto文件时，可以找到对应的文件。\",\"下载protobuf go语言的插件 进入 https://grpc.io , 点击 go 进入https://grpc.io/docs/languages/go/quickstart/\",\"开始下载go的插件\",\"go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28 // 生成 .pb.go文件 go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2 // 生成 _grpc.pb.go 文件 $ export PATH=\\\"$PATH:$(go env GOPATH)/bin\\\" \",\"go语言下的protobuf 环境就下载好了\",\"开始编写代码\",\"// protobuf编程的几个步骤 1. 编写.proto文件 2. 使用.proto文件生成对应语言的文件 3. 编写业务逻辑 \",\"首先随便选个目录 创建两个文件夹，client和server,这两个文件夹将成为我们调用gRPC的客户端和服务端。\",\"我们在client和server两个文件夹中分别mod init一下，并且创建对应的调用函数文件\",\"// /server go mod int server // /client go mod int client \",\"接下来在这两个目录下都创建一个proto文件夹。 首先然后在server/proto文件夹下创建一个hello.proto,在client/proto文件夹下创建一个hello.proto文件。\",\"// server/proto/hello.proto syntax = \\\"proto3\\\"; option go_package = \\\"server/proto\\\"; package proto; // Hello Request message HelloReq { string name = 1; } // Hello Response message HelloResp { string msg = 1; } service Greetering { rpc Hello (HelloReq) returns (HelloResp); } // client/proto/hello.proto syntax = \\\"proto3\\\"; option go_package = \\\"client/proto\\\"; package proto; // Hello Request message HelloReq { string name = 1; } // Hello Response message HelloResp { string msg = 1; } service Greetering { rpc Hello (HelloReq) returns (HelloResp); } \",\"接着，你需要对这两个.proto 通过我们刚刚下载的的protoc工具和插件去生成相应的go代码。\",\"protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative --grpc-gateway_out=. --grpc-gateway_opt=paths=source_relative server/proto/hello.proto client/proto.hello.proto \",\"最后分别在两个目录下执行go mod tidy，然后目录的结构就如下所示\",\". ├── client │ ├── client.go │ ├── go.mod │ ├── go.sum │ └── proto │ ├── hello_grpc.pb.go │ ├── hello.pb.go │ └── hello.proto └── server ├── go.mod ├── go.sum ├── proto │ ├── hello_grpc.pb.go │ ├── hello.pb.go │ └── hello.proto └── server.go \",\"随后，我们开始写对应的逻辑\",\"// server/server.go package main import ( \\\"context\\\" \\\"fmt\\\" \\\"log\\\" \\\"net\\\" \\\"os\\\" \\\"server/proto\\\" \\\"google.golang.org/grpc\\\" ) type server struct { proto.UnimplementedGreeteringServer } func (s *server) Hello(ctx context.Context, req *proto.HelloReq) (*proto.HelloResp, error) { msg := fmt.Sprintf(\\\"Hello, %s\\\", req.GetName()) return &proto.HelloResp{ Msg: msg, }, nil } func main() { fmt.Println(\\\"os getpid: \\\", os.Getpid()) l, err := net.Listen(\\\"tcp\\\", \\\":7890\\\") if err != nil { log.Fatal(err) } defer l.Close() s := grpc.NewServer() proto.RegisterGreeteringServer(s, &server{}) err = s.Serve(l) if err != nil { log.Fatal(err) return } } \",\"// client/client.go package main import ( \\\"client/proto\\\" \\\"context\\\" \\\"fmt\\\" \\\"log\\\" \\\"os\\\" \\\"time\\\" \\\"google.golang.org/grpc\\\" \\\"google.golang.org/grpc/credentials/insecure\\\" ) func main() { fmt.Println(\\\"os getpid: \\\", os.Getpid()) conn, err := grpc.Dial(\\\"127.0.0.1:7890\\\", grpc.WithTransportCredentials(insecure.NewCredentials())) if err != nil { log.Fatal(err) } defer conn.Close() client := proto.NewGreeteringClient(conn) ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second) defer cancel() resp, err := client.Hello(ctx, &proto.HelloReq{Name: \\\"Cheng Long\\\"}) if err != nil { log.Fatal(err) } log.Println(resp.GetMsg()) } \",\"我们在server文件夹下执行go run server.go在client文件夹下执行go run client.go就可以输出\",\"Hello,Cheng Long \",\"然后我们就成功执行了gRPC代码。\"]},\"1068\":{\"h\":\"总结\",\"t\":[\"下载安装压缩gRPC的环境 开始编写gRPC的相关代码 \"]},\"1069\":{\"c\":[\"tutorial\"]},\"1070\":{\"c\":[\"golang\",\"grpc\"]},\"1071\":{\"h\":\"GRPC教程 3- 流式GRPC与错误处理\",\"t\":[\"相关信息\",\"解决vscode中，一个目录下多个mod文件的问题，怎么解决呢？ 如何 在一个目录下正常的有多个.mod 文件\",\"使用 go work init 命令\",\"本篇文章开始，我们将要开始学习流式GRPC与GRPC的错误处理\"]},\"1072\":{\"h\":\"流式GRPC\",\"t\":[\"什么是流式GRPC呢？\",\"和之前我们写的普通的RPC服务写入直接返回不同，流式GRPC允许我们在一个RPC请求中建立一个Stream(流)，客户端和服务器端都可以向这个流中写入数据，当客户端写入数据时，服务器端只需要不断监听这个流就可以不断获取客户端发送的消息，直到关闭。\",\"首先我们先说说HTTP/2,GRPC的底层就是HTTP/2协议，HTTP2支持服务器端主动向客户端去发送流数据。\",\"举例：\",\"// proto文件，在Greetering服务中加一行 rpc StreamHello (HelloReq) returns (stream HelloResp); \",\"然后proto文件就变成了\",\"// syntax = \\\"proto3\\\"; option go_package = \\\"server/proto\\\"; package proto; // Hello Request message HelloReq { string name = 1; } // Hello Response message HelloResp { string msg = 1; } service Greetering { rpc Hello (HelloReq) returns (HelloResp); rpc StreamHello (HelloReq) returns (stream HelloResp); } \",\"接下来用我们上一篇文章的方式，借助插件，自动生成go文件。\",\"protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative --grpc-gateway_out=. --grpc-gateway_opt=paths=source_relative \",\"然后我们在server/server.go中实现StreamHello函数\",\"func (s *server) StreamHello(in *proto.HelloReq, stream proto.Greetering_StreamHelloServer) error { for i := 10; i > 0; i-- { data := &proto.HelloResp{ Msg: fmt.Sprintf(\\\"This is %d Msg\\\", i), } if err := stream.Send(data); err != nil { return err } } return nil } \",\"在client/client.go中加入\",\"stream, err := client.StreamHello(context.Background(), &proto.HelloReq{Name: \\\"Lixin\\\"}) if err != nil { log.Fatal(err) } for { res, err := stream.Recv() if err == io.EOF { break } if err != nil { log.Fatal(err) } fmt.Println(res.GetMsg()) } \",\"运行server.go代码，client.go代码就可以得到以下结果，我们的返回结果就是这样\",\"os getpid: 330496 This is 10 Msg This is 9 Msg This is 8 Msg This is 7 Msg This is 6 Msg This is 5 Msg This is 4 Msg This is 3 Msg This is 2 Msg This is 1 Msg \",\"接下来我们来改一改代码，尝试去使用客户端的流式GRPC\",\"//proto文件 syntax = \\\"proto3\\\"; option go_package = \\\"server/proto\\\"; package proto; // Hello Request message HelloReq { string name = 1; } // Hello Response message HelloResp { string msg = 1; } service Greetering { rpc Hello (HelloReq) returns (HelloResp); rpc StreamHello (stream HelloReq) returns (HelloResp); } \",\"go的代码\",\"// server.go func (s *server) StreamHello(stream proto.Greetering_StreamHelloServer) error { for { res, err := stream.Recv() if err == io.EOF { stream.SendAndClose(&proto.HelloResp{ Msg: \\\"server end.\\\", }) fmt.Println(\\\"Message end.\\\") break } if err != nil { log.Fatal(err) } fmt.Println(res.GetName()) } return nil } \",\"client.go\",\"stream, err := client.StreamHello(context.Background()) if err != nil { log.Fatal(err) } for i := 0; i < 10; i++ { data := &proto.HelloReq{ Name: fmt.Sprintf(\\\"This is %d msg from client.\\\", i), } err = stream.Send(data) if err != nil { log.Fatal(err) } } res, err := stream.CloseAndRecv() if err != nil { log.Fatalf(\\\"c failed: %v\\\", err) } log.Printf(\\\"got reply: %v\\\", res.GetMsg()) \",\"双向流式GRPC\",\"修改proto文件加入 rpc StreamHello (stream HelloReq) returns (stream HelloResp); \",\"// server.go func (s *server) StreamHello(stream proto.Greetering_StreamHelloServer) error { signalch := make(chan os.Signal, 1) signal.Notify(signalch, os.Interrupt, syscall.SIGTERM) msg := \\\"\\\" go func() { for { fmt.Scanln(&msg) stream.Send(&proto.HelloResp{ Msg: fmt.Sprint(msg), }) msg = \\\"\\\" } }() go func() { for { // 接收流式请求 in, err := stream.Recv() if err == io.EOF { return } if err != nil { return } fmt.Println(\\\"client: \\\", in.GetName()) } }() signalType := <-signalch signal.Stop(signalch) fmt.Printf(\\\"Os Signal: <%s>\\\", signalType) fmt.Println(\\\"Exit....\\\") return nil } \",\"// client.go msg := \\\"\\\" go func() { for { fmt.Scanln(&msg) stream.Send(&proto.HelloReq{ Name: fmt.Sprint(msg), }) msg = \\\"\\\" } }() go func() { for { // 接收流式请求 in, err := stream.Recv() if err == io.EOF { return } if err != nil { return } fmt.Println(\\\"server: \\\", in.GetMsg()) } }() signalType := <-signalch signal.Stop(signalch) //cleanup before exit log.Printf(\\\"On Signal <%s>\\\", signalType) log.Println(\\\"Exit command received. Exiting...\\\") \"]},\"1073\":{\"h\":\"GRPC对比WebSocket\",\"t\":[\"WebSocket是HTML5新增的协议，它的目的是在浏览器和服务器之间建立一个不受限的双向通信的通道，比如说，服务器可以在任意时刻发送消息给浏览器。\",\"为什么传统的HTTP协议不能做到WebSocket实现的功能？这是因为HTTP协议是一个请求－响应协议，请求必须先由浏览器发给服务器，服务器才能响应这个请求，再把数据发送给浏览器。换句话说，浏览器不主动请求，服务器是没法主动发数据给浏览器的。\",\"这样一来，要在浏览器中搞一个实时聊天，在线炒股（不鼓励），或者在线多人游戏的话就没法实现了，只能借助Flash这些插件。\",\"也有人说，HTTP协议其实也能实现啊，比如用轮询或者Comet。轮询是指浏览器通过JavaScript启动一个定时器，然后以固定的间隔给服务器发请求，询问服务器有没有新消息。这个机制的缺点一是实时性不够，二是频繁的请求会给服务器带来极大的压力。\",\"Comet本质上也是轮询，但是在没有消息的情况下，服务器先拖一段时间，等到有消息了再回复。这个机制暂时地解决了实时性问题，但是它带来了新的问题：以多线程模式运行的服务器会让大部分线程大部分时间都处于挂起状态，极大地浪费服务器资源。另外，一个HTTP连接在长时间没有数据传输的情况下，链路上的任何一个网关都可能关闭这个连接，而网关是我们不可控的，这就要求Comet连接必须定期发一些ping数据表示连接“正常工作”。\",\"以上两种机制都治标不治本，所以，HTML5推出了WebSocket标准，让浏览器和服务器之间可以建立无限制的全双工通信，任何一方都可以主动发消息给对方。\",\"package main import ( \\\"fmt\\\" \\\"log\\\" \\\"net/http\\\" \\\"github.com/gorilla/websocket\\\" ) // We'll need to define an Upgrader // this will require a Read and Write buffer size var upgrader = websocket.Upgrader{ ReadBufferSize: 1024, WriteBufferSize: 1024, } func wsEndpoint(w http.ResponseWriter, r *http.Request) { upgrader.CheckOrigin = func(r *http.Request) bool { return true } // upgrade this connection to a WebSocket // connection ws, err := upgrader.Upgrade(w, r, nil) if err != nil { log.Println(err) } // helpful log statement to show connections log.Println(\\\"Client Connected\\\") reader(ws) } func homePage(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \\\"Home Page\\\") } // define a reader which will listen for // new messages being sent to our WebSocket // endpoint func reader(conn *websocket.Conn) { for { // read in a message messageType, p, err := conn.ReadMessage() if err != nil { log.Println(err) return } // print out that message for clarity reply := fmt.Sprintf(\\\"server reply: %s\\\", p) fmt.Println(reply) if err := conn.WriteMessage(messageType, []byte(reply)); err != nil { log.Println(err) return } } } func setupRoutes() { http.HandleFunc(\\\"/\\\", homePage) http.HandleFunc(\\\"/ws\\\", wsEndpoint) } func main() { fmt.Println(\\\"Hello World\\\") setupRoutes() log.Fatal(http.ListenAndServe(\\\":8080\\\", nil)) } \",\"流式 gRPC 和 WebSockets 都是用于实现客户端和服务器之间的双向通信，但它们有以下几个区别：\",\"协议：gRPC 是基于 HTTP/2 协议的，而 WebSocket 是一种独立的协议。HTTP/2 是一个二进制协议，可提供更好的性能和安全性。\",\"语言支持：gRPC 支持多种语言，包括 Java、Python、Go 等，而 WebSocket 主要支持 Web 技术栈，如 JavaScript。\",\"应用场景：gRPC 通常用于在微服务架构中进行服务间通信，而 WebSocket 更多地用于实时通信应用程序，如在线游戏或聊天应用程序。\",\"通信方式：在流式 gRPC 中，客户端和服务器之间的通信是通过流来完成的，客户端可以发送多个请求，服务器也可以发送多个响应。而在 WebSocket 中，客户端和服务器之间的通信是通过消息来完成的，消息可以是文本或二进制数据。\",\"总之，gRPC 和 WebSocket 都有其各自的优势和适用场景。选择哪种技术应该根据应用程序的需求和设计来决定。\"]},\"1074\":{\"h\":\"GRPC的错误处理\",\"t\":[\"我们再来学一下GRPC的错误处理\",\"GRPC自己定义了一些常见的错误码，和我们可以在codes找到。 需要使用时，需要引入codes包\",\"https://pkg.go.dev/google.golang.org/grpc/codes \",\"使用codes时，需要配合status使用\",\"import \\\"google.golang.org/grpc/status\\\" \",\"GRPC的方法，一般是返回err或者status类型的错误，然后调用GRPC的一方若err!=nil我们可以通过status.Convert方法读取对应的错误。\",\"if err != nil { s := status.Convert(err) // 将err转为status for _, d := range s.Details() { // 获取details switch info := d.(type) { case *errdetails.QuotaFailure: fmt.Printf(\\\"Quota failure: %s\\\\n\\\", info) default: fmt.Printf(\\\"Unexpected type: %s\\\\n\\\", info) } } \",\"// 代码中的例子 // server.go func (s *server) StreamHello(stream proto.Greetering_StreamHelloServer) error { st := status.New(codes.Aborted, \\\"error!!!!!!\\\") ds, err := st.WithDetails( &errdetails.BadRequest{ FieldViolations: []*errdetails.BadRequest_FieldViolation{ { Description: \\\"Bad Request\\\", Field: \\\"bad\\\", }, }, }, ) if err != nil { return st.Err() } return ds.Err() } \",\"// client.go for { // 接收流式请求 in, err := stream.Recv() if err == io.EOF { fmt.Println(\\\"braeak\\\") return } if err != nil { s := status.Convert(err) // 将err转为status for _, d := range s.Details() { // 获取details fmt.Println(d) switch info := d.(type) { case *errdetails.BadRequest: fmt.Printf(\\\"BadRequest failure: %s\\\\n\\\", info) default: fmt.Println(info) } } return } fmt.Println(\\\"server: \\\", in.GetMsg()) } \"]},\"1075\":{\"h\":\"总结\",\"t\":[\"在vscode下同一个目录下多个go.mod文件解决 服务端流式GRPC 客户端流式GRPC 双端流式GRPC GRPC对比WebSocket GRPC的错误处理 \"]},\"1076\":{\"c\":[\"tutorial\"]},\"1077\":{\"c\":[\"golang\",\"grpc\"]},\"1078\":{\"h\":\"GRPC教程 4 - GRPC-Gateway教程与Transcoding\",\"t\":[\"相关信息\",\"GRPC-Gateway是protoc的一个插件，类似protoc-gen-go和protoc-gen-go-grpc插件，前者是生成.pb.go后者是生成.grpc.pb.go文件。\",\"那么这两个插件是帮助proto文件生成go语言的插件，那么GRPC-Gateway呢，它是一个可以根据proto文件的定义生成一个反向代理器的，服务器可以将 RESTful JSON API 转换为 GRPC。\",\"这里你会有三个疑惑？什么是反向代理器？为什么要根据proto文件生成反向代理器？为什么要将RESTful JSON API转换成GRPC？\",\"其实这一个图就可以解释\"]},\"1079\":{\"h\":\"基本示例\",\"t\":[\"我们继续使用我们一开始的hello.proto文件来做示例\",\"├── client │ ├── go.mod │ ├── main.go │ └── pb │ ├── hello_grpc.pb.go │ ├── hello.pb.go │ └── hello.proto ├── go.work └── server ├── go.mod ├── go.sum ├── main.go └── pb ├── hello_grpc.pb.go ├── hello.pb.go └── hello.proto \",\"这次我们发现我们每次调用server进程下的服务，每次都需要重新定义一个客户端再去调用，那能不能说，就是像gin这种框架一样，使用简单的JSON body请求就可以请求GRPC呢，这就是grpc gateway的作用了，我们来演示一下怎么来用grpc-gateway。\",\"首先添加 gRPC-Gateway 注释，这些注释定义了我们GRPC服务如何映射为JSON的请求和响应。使用protobuf的时候，GRPC service必须用google.api.HTTP来定义。\",\"这里我用POST /v1/hello 来 映射到 Hello 的GRPC服务。\",\"修改后的service Greeter是这样\",\"import \\\"google/api/annotations.proto\\\"; service Greetering { rpc Hello (HelloReq) returns (HelloResp) { option (google.api.http) = { post: \\\"/api/v1/hello\\\" body: \\\"*\\\" }; }; } \",\"在这里 google/api/annotations.proto 却是在go/include/下，也就是我们下载proto时，解压下来的文件夹。和include 同一目录。所以我们需要去跟github上去下载。\",\"https://github.com/googleapis/googleapis/tree/master/google/api\",\"随后需要重新加上grpc-gateway插件器创建对应的pb.gw.go文件。\",\"在这里你需要下载grpc-gateway\",\"go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2 \",\"protoc --go_out=. --go_opt=paths=source_relative \\\\ --go-grpc_out=. --go-grpc_opt=paths=source_relative \\\\ --grpc-gateway_out=. --grpc-gateway_opt=paths=source_relative \\\\ pb/hello.proto \",\"现在我们开始编写main.go，我们加入gateway的方式就是新起一个goroutine 去开启gateway代理\",\"go func() { conn, err := grpc.DialContext( context.Background(), \\\"0.0.0.0:7890\\\", grpc.WithBlock(), grpc.WithTransportCredentials(insecure.NewCredentials()), ) if err != nil { log.Fatalln(\\\"Failed to dial server:\\\", err) } gwmux := runtime.NewServeMux() err = pb.RegisterGreeteringHandler(context.Background(), gwmux, conn) if err != nil { log.Fatalln(\\\"Failed to register gateway:\\\", err) } gwServer := &http.Server{ Addr: \\\":8090\\\", Handler: gwmux, } // 8090端口提供gRPC-Gateway服务 log.Println(\\\"Serving gRPC-Gateway on http://0.0.0.0:8090\\\") log.Fatalln(gwServer.ListenAndServe()) }() \",\"接着我们用curl脚本命令，或者电脑上可以下载下postman去测试一下。\",\"curl -X POST http://127.0.0.1:8090/api/v1/hello '{\\\"name\\\": \\\"Lixin\\\"}' \"]},\"1080\":{\"h\":\"Transcoding\",\"t\":[\"下面接着来讲一下更多的匹配规则，在上个例子中，我们并没有讲解更多的路径匹配，比如/api/:name或者传递query参数，我们来讲解一下这样的方式\",\"首先我们先修改一下对应之前的pb/hello.proto\",\"message HelloReq { string name = 1; int64 age = 2; string msg = 3; } message HelloResp { string msg = 1; } service Greetering { rpc Hello (HelloReq) returns (HelloResp) { option (google.api.http) = { get: \\\"/api/v1/hello/{name}\\\" }; }; } \",\"来方便我们进行查看如何去使用http transcoding 规则查询。\",\"我们再次进行编码 protoc ..., 运行服务\",\"接着启动服务，用curl去测试一下\",\"curl --location 'http://127.0.0.1:8090/api/v1/hello/lixin' {\\\"msg\\\":\\\"0 / lixin / Hello\\\"} \",\"可以看到获取到了对应的name字段，那如果我们传入query参数呢？\",\"curl --location 'http://127.0.0.1:8090/api/v1/hello/lixin?age=12' {\\\"msg\\\":\\\"12 / lixin / Hello\\\"} curl --location 'http://127.0.0.1:8090/api/v1/hello/lixin?age=12&msg=message' {\\\"msg\\\":\\\"12 / lixin / message Hello\\\"} \",\"可以看到，我们这样就可以给http 路由传递 query参数去访问对应的grpc服务。\",\"那还有没有别的用法？,我们继续修改proto文件 get: \\\"/api/v1/hello/{name=names/*}\\\", 接着我们传递\",\"curl --location 'http://127.0.0.1:8090/api/v1/hello/names/lixin?age=12&msg=message' {\\\"msg\\\": \\\"12 / names/lixin / message Hello\\\"} \",\"可以看到我们修改了对应的:name为{names/*}，这样我们就让names/lixin顺利传递给了name参数。\",\"接下来，我们看看body的用法，我们一般不会用get方法去传递body，所以下面我们接着再来修改一下proto文件，让对应的http 方法称为post，然后加上body参数。\",\"service Greetering { rpc Hello (HelloReq) returns (HelloResp) { option (google.api.http) = { post: \\\"/api/v1/hello/{name}\\\" body: \\\"msg\\\" }; }; } \",\"我们再来观察一下这个option里面的东西，post路径为/api/v1/hello/{name}, 这意味着，我们可以给path传递name，然后给body传递msg参数，那剩下的age呢？我们可以用query路径传递进去，就是这样\",\"message HelloReq { string name = 1; // path int64 age = 2; // query string msg = 3; // body } \",\"curl --location 'http://127.0.0.1:8090/api/v1/hello/lixin?age=12' \\\\ --header 'Content-Type: text/plain' \\\\ --data '\\\"eeeesae\\\"' { \\\"msg\\\": \\\"12 / lixin / eeeesae Hello\\\"} \",\"可以看到我们传递的data，就是对应到msg参数里面的。\",\"下面我们再修改一下proto文件, 将body修改为*\",\"service Greetering { rpc Hello (HelloReq) returns (HelloResp) { option (google.api.http) = { post: \\\"/api/v1/hello/{name}\\\" body: \\\"*\\\" }; }; } \",\"重新生成gw.go protoc ...\",\"curl --location 'http://127.0.0.1:8090/api/v1/hello/lixin?age=12' \\\\ --header 'Content-Type: application/json' \\\\ --data '{ \\\"name\\\": \\\"Lixinsss\\\", \\\"age\\\": 21, \\\"msg\\\": \\\"This is a message.\\\" }' 可以看到，虽然body是*, 但是body里面只有传递age和msg有效，当body是*时，query参数就没有效果了。 {\\\"msg\\\": \\\"21 / lixin / This is a message. Hello\\\"} \",\"总结\",\"我们本篇文章，主要是介绍了GRPC-Gateway,下载gatwway插件，学习使用gateway,并且学习了传递HTTP的多种方式\"]},\"1081\":{\"c\":[\"tutorial\"]},\"1082\":{\"c\":[\"golang\",\"grpc\"]},\"1083\":{\"h\":\"GRPC教程 5 - GRPC语法和常见包的使用\",\"t\":[\"本篇文章，我会介绍一下gRPC常见的语法以及常见的包的调用，让大家快速入门gRPC,以便我们快速对gRPC的语法快速熟悉起来。\"]},\"1084\":{\"h\":\"gRPC基础语法教程\",\"t\":[\"官方教程\",\"当然本期视频不会带着大家去仔细去过一遍官方文档，我们的主要目的是先run起来再说，先把最基础的学会了，然后基本就可以搞定60%的问题了，然后接着我们再对剩下的40%看一遍，有一个印象就可以了。\",\"首先我们创建一个目录比如说就叫grpc-syntax-package\",\"我们在这个目录下创建一个pb文件，用来存放我们的proto文件和生成的go文件。接着，我们再在里面创建一个person/person.proto,然后在里面写入\",\"// person.proto syntax = \\\"proto3\\\"; package person; // protobuf package option go_package = \\\"grpc-syntax-package/pb/person\\\"; message Person { string Name = 1; int64 Age = 2; } \",\"然后呢？\",\"我们就可以根据这个proto文件去生成对应的person.pb.go文件\",\"protoc --proto_path=pb --go_out=pb --go_opt=paths=source_relative pb/person/person.proto 这里--proto_path=pb的意思是，输入的proto文件是在当前目录下的pb目录 这里的--go_out=pb 的意思是，输出的.pb.go文件是在当前目录下的proto目录，前提是你得有proto目录，不然就会报错。 这里的-go_opt=paths=source_relative是最常见的一种输出文件的方式 所以相应的你也可以新创建一个proto目录去试试这个命令 protoc --proto_path=pb --go_out=proto --go_opt=paths=source_relative pb/person/person.proto \",\"接着你可以点进对应的person.pb.go文件去对照proto文件看一下，\",\"package student; 其实是protobuf的包，当别的proto文件去使用这个文件时，使用的就是这个包名 option go_package = \\\"grpc-syntax-package/pb/person\\\"; 这个的意思是 当在别的proto生成对应的文件时，输出引入的person的包就叫这个包。 \",\"接着我们创建一个student/student.proto去引入person.proto演示一下\",\"syntax = \\\"proto3\\\"; package student; option go_package = \\\"grpc-syntax-package/pb/student\\\"; import \\\"pb/person/person.proto\\\"; message Student { person.Person person = 1; } \",\"然后使用刚才的命令\",\"protoc --proto_path=pb --go_out=proto --go_opt=paths=source_relative pb/person/person.proto pb/student/student.proto \",\"发现是生成失败的，因为我们定义的--proto_path=pb是pb,而在student包里却是import \\\"pb/person/person.proto\\\";，所以找不到pb目录，我们需要修改一下命令\",\"protoc --proto_path=. --go_out=. --go_opt=paths=source_relative pb/person/person.proto pb/student/student.proto \",\"这样就可以了，让--proto_path=. --go_out=.就可以了。\",\"这也是最简单的命令包使用。\",\"我们来回顾一下。\",\"使用protobuf编程的方式\",\"1. 编写proto文件 2. 输出go文件 3. 编写代码 \",\"接下来我们详细看一看message里的字段类型有哪些，这里不是要大家记住所有的字段，而是让大家有个印象，这样以后我们自己编写proto文件的时候，哪怕忘记了某个字段，但是有印象就可以去文档里找。\",\"https://protobuf.dev/programming-guides/proto3/#scalar\",\"以及看看下面的默认类型。\",\"Enumerations 枚举类型\",\"enum Gender { Man = 0; Woman = 1; } Gender gender = 2; \",\"Optional 可选类型\",\" optional uint32 age = 3; \",\"Repeated 数组类型\",\" repeated string books = 4; \",\"Reserved 保留类型， 当我们更新proto文件，比如需要删除某个字段时，但是可能有别的微服务在使用我们之前的proto版本，那我们可以直接删除某个字段吗？答案是不可以。这是因为在protobuf的二进制编码中，每个字段都有一个唯一的编号，用于标识该字段的类型和位置。如果您定义了一个新的字段并使用了已经保留的字段号，那么在序列化和反序列化时就会出现冲突，导致数据解析失败。\",\"因此，当您使用 reserved 关键字时，编译器会检查您定义的每个字段的编号是否与已保留的字段号冲突。如果您尝试使用保留的字段号定义新的字段，编译器会报错，以防止在序列化和反序列化时出现数据损坏或解析失败的情况。\",\" reserved 5; \",\"Map 映射类型\",\" map<string, string> m = 6; \",\"oneof 字段\",\"oneof content { int32 number = 7; string text = 8; bool flag = 9; }\",\"于是我们的代码后可以这样\",\"p := pb.Person{ Name: \\\"John Smith\\\", Age: proto.Uint32(32), Gender: pb.Person_Woman, Books: []string{\\\"book1\\\", \\\"book2\\\"}, M: map[string]string{ \\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\", }, Content: &pb.Person_Text{Text: \\\"221dd\\\"}, } \"]},\"1085\":{\"h\":\"gRPC导入别的包去使用\"},\"1086\":{\"h\":\"any包\",\"t\":[\"导入\",\"Import \\\"google.golang.org/protobuf/types/known/anypb\\\" google.protobuf.Any details = 10; \",\"生成代码\",\"然后代码中我们怎么使用呢?\",\"Details: &anypb.Any{ TypeUrl: \\\"example.com/MyMessageDetails\\\", Value: []byte(\\\"your details\\\"), }, \"]},\"1087\":{\"h\":\"timestamp包\",\"t\":[\"在 Protobuf 中，google.protobuf.Timestamp 类型表示一个时间戳，它包含了秒数和纳秒数两个字段。在 Go 中，google.protobuf.Timestamp 被映射为 *timestamp.Timestamp 类型。\",\"import \\\"google.golang.org/protobuf/types/known/timestamppb\\\" now := time.Now() timestampProto := timestamppb.New(now) CreatedAt: timestampProto, \"]},\"1088\":{\"h\":\"field_mask 包\",\"t\":[\"在 Protobuf 中，google.protobuf.FieldMask 类型用于指定在更新一个资源时需要更新哪些字段。它包含一个字段列表，列表中的每个字段表示需要更新的一个字段的路径。\",\"我们新加入一个message，来请求更新我们的Person\",\"message UpdatePersonReq { string name = 1; google.protobuf.FieldMask update_mask = 2; Person update_data = 3; } \",\"import \\\"google/protobuf/field_mask.proto\\\"; mask := &fieldmaskpb.FieldMask{ Paths: []string{\\\"age\\\", \\\"gender\\\"}, } req := &pb.UpdatePersonReq{ Name: \\\"John Smith\\\", UpdateMask: mask, UpdateData: &pb.Person{ Name: \\\"Lixin\\\", Gender: pb.Person_Woman, Content: &pb.Person_Flag{Flag: true}, }, } \",\"如果我们的客户端这么写，服务器端怎么根据field_mask值去更新对应的字段呢？\",\" func resp(req pb.UpdatePersonReq) { // 首先，我们需要检查请求中是否指定了 update_mask 字段 if req.UpdateMask == nil { // 如果 update_mask 字段未指定，则更新所有字段 return db.UpdateResource(req.Id, req.UpdatedData) } // 如果 update_mask 字段指定了，则只更新指定的字段 // 首先，我们需要将 FieldMask 转换为一个字符串数组 paths := req.UpdateMask.Paths // 然后，我们需要创建一个包含要更新的字段的 map fields := make(map[string]interface{}) for _, path := range paths { switch path { case \\\"name\\\": fields[path] = req.UpdateData.Name case \\\"gender\\\": fields[path] = req.UpdateData.Gender // 如果请求中包含了我们不支持的字段，则返回一个错误 default: return nil, status.Error(codes.InvalidArgument, fmt.Sprintf(\\\"Unsupported field: %s\\\", path)) } } // 最后，我们调用数据库的 UpdateResourceWithFields 方法来更新指定的字段 return db.UpdateResourceWithFields(req.Name, fields) } \",\"可以我们的服务端可以类似这样的去写，根据field_mask字段去更新对应的字段信息，你可能会问了，为什么直接传递一个Person？因为使用 FieldMask 字段的主要目的是为了避免在更新操作中无意中修改了一些不应该被修改的字段，从而导致不可预料的后果。如果我们误传了一个错误的 Person 对象，甚至可能会更新一些我们根本不想更新的字段，从而导致数据不一致等问题。\",\"使用 FieldMask 字段可以让客户端明确地指定要更新的字段，从而避免这些问题。通过指定 FieldMask 字段，客户端可以控制更新操作仅修改指定的字段，而不是所有字段。这样，即使客户端传递了错误的数据，服务器也可以根据 FieldMask 中指定的字段来执行正确的操作，从而避免不必要的风险。\",\"因此，使用 FieldMask 字段是一个很好的实践，可以帮助我们编写更加健壮和可靠的代码。\"]},\"1089\":{\"h\":\"总结\",\"t\":[\"我们在本期教程中，第一部分，学习了gRPC的主要语法以及如何用protoc工具生成.pb.go文件以及生成对应的_grpc.pb.go文件和相关的命令行的作用。认识到了proto里面的某些字段的作用比如package、go_package的作用。以及定义message、定义service服务。\",\"第二部分，我们主要学习了protobuf中的三个最常见的包的使用包括timestamp，any，field_mask。希望本期视频后，大家都能够自己动手试一试，自己敲一敲代码对这些熟悉起来。\"]},\"1090\":{\"c\":[\"tutorial\"]},\"1091\":{\"c\":[\"golang\",\"grpc\"]},\"1092\":{\"h\":\"GRPC教程 6 - gRPC元数据处理与加密认证和拦截中间件\",\"t\":[\"本篇教程我们来讲解gRPC的元数据处理和拦截的中间件\"]},\"1093\":{\"h\":\"元数据处理\",\"t\":[\"首先，先来讲一讲，元数据(metadata)，元数据是指在处理RPC请求中，不放在正文的数据，比如身份信息token(不属于业务信息)可以放在元数据中，通常以map[string][]string的形式存放，key是string，value是[]string类型。gRPC里规定可以存放二进制数据(key以-bin结尾)，key不能以grpc开头(因为有grp以grpc开头的数据)。元数据对于gRPC本身是不可见的，我们通常在上下文代码中存放元数据，在Go语言中我们通过https://pkg.go.dev/google.golang.org/grpc/metadata 仓库去访问元数据。\",\"元数据的定义如下\",\"type MD map[string][]string // 可以看到它的类型是map[string][]string。 \",\"我们可以通过metadata.New()或metadata.Pairs去创建一个MD, 或者可以先创建一个MD，然后通过metadata.Join()去往这个MD里面添加元数据。\",\"// md := metadata.New(map[string]string{\\\"key1\\\": \\\"val1\\\"}) md := metadata.Pairs( \\\"key\\\", \\\"string value\\\", \\\"key-bin\\\", string([]byte(b)), // 二进制数据在发送前会进行(base64) 编码 // 收到后会进行解码 ) \",\"你可以发现MD有一些常见的使用方法\",\"type MD map[string][]string func (metadata.MD).Append(k string, vals ...string) func (metadata.MD).Copy() metadata.MD func (metadata.MD).Delete(k string) func (metadata.MD).Get(k string) []string func (metadata.MD).Len() int func (metadata.MD).Set(k string, vals ...string) \",\"我们可以通过这些方法去对元数据进行一些操作。\"]},\"1094\":{\"h\":\"发送接收元数据\",\"t\":[\"我们先说说在metadata包中发送元数据的方法,\",\"//此方法可以将元数据添加到已有的ctx中。好处是不会覆盖之前ctx的metadata metadata.AppendToOutgoingContext(context.Background(), \\\"key1\\\", \\\"value1\\\", \\\"name\\\", \\\"Lixin\\\", \\\"AGE\\\", \\\"21\\\") // 这个方法metadata.NewOutgoingContext这个方法会覆盖之前crtx中的metadata。 b := \\\"This is bin message\\\" // md := metadata.New(map[string]string{\\\"key1\\\": \\\"val1\\\"}) md := metadata.Pairs( \\\"key\\\", \\\"string value\\\", \\\"key-bin\\\", string([]byte(b)), // 二进制数据在发送前会进行(base64) 编码 // 收到后会进行解码 ) ctx = metadata.NewOutgoingContext(ctx, md) \",\"再来说一说接收metadata的方法\",\"metadata.FromIncomingContext(ctx) \"]},\"1095\":{\"h\":\"设置header和trailer\",\"t\":[\"Header和trailer可以简单的理解为头和尾。类似于我们调用HTTP方法的头和尾一样属于元数据的一部分。\",\"在gRPC的上下文中，服务端方可以给客户端方设置header和trailer，客户端可以接受header和trailer。\",\"首先介绍服务器端如何发送header和trailer\",\" // 创建和发送 header header := metadata.New(map[string]string{\\\"header-name\\\": \\\"lixin\\\"}) grpc.SendHeader(ctx, header) // 创建和发送 trailer trailer := metadata.Pairs(\\\"trailer-age\\\", \\\"21\\\") grpc.SetTrailer(ctx, trailer) \",\"下面是客户端接收请求的header和trailer\",\"var header, trailer metadata.MD r, err := client.Hello( ctx, &pb.HelloReq{\\\"name\\\": \\\"Lixin\\\"}, grpc.Header(&header), // 将会接收header grpc.Trailer(&trailer), // 将会接收trailer ) \",\"下面我们做个示例去使用metadata。\",\"// client.go func main() { conn, err := grpc.Dial(\\\"127.0.0.1:7890\\\", grpc.WithTransportCredentials(insecure.NewCredentials())) if err != nil { log.Fatal(err) } defer conn.Close() c := pb.NewGreeteringClient(conn) metadata.AppendToOutgoingContext(context.Background(), \\\"key1\\\", \\\"value1\\\", \\\"name\\\", \\\"Lixin\\\", \\\"AGE\\\", \\\"21\\\") ctx := context.Background() b := \\\"This is bin message\\\" // md := metadata.New(map[string]string{\\\"key1\\\": \\\"val1\\\"}) md := metadata.Pairs( \\\"key\\\", \\\"string value\\\", \\\"key-bin\\\", string([]byte(b)), // 二进制数据在发送前会进行(base64) 编码 // 收到后会进行解码 ) ctx = metadata.NewOutgoingContext(ctx, md) var header,trailer metadata.MD resp, err := c.Hello(ctx, &pb.HelloReq{Name: \\\"nn\\\"}, grpc.Trailer(&trailer), grpc.Header(&header)) if err != nil { log.Fatal(err) } fmt.Println(header) fmt.Println(trailer) fmt.Println(resp.GetMsg()) } \",\"// server.go md, ok := metadata.FromIncomingContext(ctx) if !ok { log.Println(\\\"No metadata!\\\") } md = metadata.New(map[string]string{\\\"name\\\": \\\"lixin\\\"}) err := grpc.SendHeader(ctx, md) if err != nil { log.Fatal(err) } md = metadata.Pairs( \\\"AGE\\\", \\\"21\\\", ) err = grpc.SetTrailer(ctx, md) if err != nil { log.Fatal(err) } return &pb.HelloResp{ Msg: fmt.Sprintf(\\\"Hello %s!\\\\n\\\", in.GetName()), }, nil \"]},\"1096\":{\"h\":\"拦截中间件\",\"t\":[\"GRPC可以在RPC的Client/Server的基础上提供了拦截器的中间件。拦截器可以在每次调用GRPC调用的时候记录一些信息或者验证用户token(比如响应时间数据等)。\"]},\"1097\":{\"h\":\"注册拦截器\",\"t\":[\"首先我们之前的文章/视频讲过，GRPC请求分为直接请求和流式请求，当我们使用直接请求的时候对应的就是一元拦截器，流式请求就是流拦截器。我们这里的示例是一元拦截器，就是直接请求GRPC服务拦截器的使用，在客户端和服务器端都可以自定义拦截器。\",\"怎么去使用拦截器呢？\",\"在server端，我们只需要在注册GRPC服务的时候加入对应拦截器(Interceptor)。\",\"s := grpc.NewServer(grpc.UnaryInterceptor(unaryInterceptor)) \",\"并且我们需要实现unaryInterceptor 函数类型是\",\"type UnaryServerInterceptor func(ctx context.Context, req interface{}, info *UnaryServerInfo, handler UnaryHandler) (resp interface{}, err error) \",\"在client端呢？我们需要在Dial GRPC服务IP端口的时候，加入grpc.WithUnaryInterceptor(unaryInterceptor), 就可以实现客户端的拦截器。\",\"那我们就来实践一下吧, 我们想先在客户端加一个拦截器，比如我们想让每次传输的字节数不超过3，那么就有对应的方法来实现\",\"// unaryInterceptor 客户端一元拦截器 func unaryInterceptor(ctx context.Context, method string, req, reply interface{}, cc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption) error { opts = append(opts, grpc.MaxCallSendMsgSize(3)) start := time.Now() err := invoker(ctx, method, req, reply, cc, opts...) fmt.Println(\\\"reply: \\\", reply) end := time.Now() fmt.Printf(\\\"RPC: %s, start time: %s, end time: %s, err: %v\\\\n\\\", method, start.Format(\\\"Basic\\\"), end.Format(time.RFC3339), err) return err } \",\"服务器端这里什么都不需要做，因为我们只在客户端加一个拦截器，如果传入的字节数超过3，那么会直接返回错误的。\"]},\"1098\":{\"h\":\"加密处理\",\"t\":[\"参考https://www.liwenzhou.com/posts/Go/gRPC/#autoid-0-9-1\"]},\"1099\":{\"h\":\"gRPC的加密处理中间件\",\"t\":[\"那如果我们想让中间件有加密处理这一层呢？\",\"// server.go creds, err := credentials.NewServerTLSFromFile(\\\"certs/server.crt\\\", \\\"certs/server.key\\\") if err != nil { log.Fatal(err) } s := grpc.NewServer(grpc.Creds(creds), grpc.UnaryInterceptor(unaryInterceptor)) // valid 校验认证信息. func valid(authorization []string) bool { if len(authorization) < 1 { return false } token := strings.TrimPrefix(authorization[0], \\\"Bearer \\\") // 执行token认证的逻辑 // 这里是为了演示方便简单判断token是否与\\\"some-secret-token\\\"相等 return token == \\\"some-secret-token\\\" } // unaryInterceptor 服务端一元拦截器 func unaryInterceptor(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) { // authentication (token verification) md, ok := metadata.FromIncomingContext(ctx) if !ok { return nil, status.Errorf(codes.InvalidArgument, \\\"missing metadata\\\") } if !valid(md[\\\"authorization\\\"]) { return nil, status.Errorf(codes.Unauthenticated, \\\"invalid token\\\") } m, err := handler(ctx, req) if err != nil { fmt.Printf(\\\"RPC failed with error %v\\\\n\\\", err) } return m, err } \",\"// client.go certs, err := credentials.NewClientTLSFromFile(\\\"./certs/server.crt\\\", \\\"\\\") if err != nil { log.Fatal(err) } conn, err := grpc.Dial(\\\"127.0.0.1:7890\\\", grpc.WithTransportCredentials(certs), grpc.WithUnaryInterceptor(unaryInterceptor)) // unaryInterceptor 客户端一元拦截器 func unaryInterceptor(ctx context.Context, method string, req, reply interface{}, cc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption) error { var credsConfigured bool for _, o := range opts { _, ok := o.(grpc.PerRPCCredsCallOption) if ok { credsConfigured = true break } } if !credsConfigured { opts = append(opts, grpc.PerRPCCredentials(oauth.NewOauthAccess(&oauth2.Token{ AccessToken: \\\"some-secret-token\\\", }))) } opts = append(opts, grpc.MaxCallSendMsgSize(5)) start := time.Now() err := invoker(ctx, method, req, reply, cc, opts...) fmt.Println(\\\"reply: \\\", reply) end := time.Now() fmt.Printf(\\\"RPC: %s, start time: %s, end time: %s, err: %v\\\\n\\\", method, start.Format(\\\"Basic\\\"), end.Format(time.RFC3339), err) return err } \",\"这样我们就可以通过中间件来判断有没有加密处理了，如果没有加密处理，我们的服务端是直接拒接请求的。\"]},\"1100\":{\"h\":\"gRPC拦截器和gin的拦截器对比\",\"t\":[\"Gin框架的拦截器呢？\",\"package main import ( \\\"fmt\\\" \\\"github.com/gin-gonic/gin\\\" ) func main() { r := gin.Default() count := 0 r.Use(func(ctx *gin.Context) { if count > 1 { ctx.JSON(200, gin.H{ \\\"exit\\\": \\\"Sorry.\\\", }) ctx.Abort() } count++ fmt.Println(\\\"This is a intercepter.\\\") }) r.GET(\\\"/hello\\\", func(ctx *gin.Context) { ctx.JSON(200, gin.H{ \\\"Hello\\\": \\\"Lixin\\\", }) }) r.Run(\\\":7899\\\") } \"]},\"1101\":{\"h\":\"总结\",\"t\":[\"元数据处理\\n拦截器\\nGRPC的加密处理\\nGIN和GRPC 拦截器的对比\"]},\"1102\":{\"c\":[\"tutorial\"]},\"1103\":{\"c\":[\"golang\",\"grpc\"]},\"1104\":{\"h\":\"Go语言中使用redis lua脚本\",\"t\":[\"我们在分布式环境中使用redis的时候，不可避免会使用到redis的Lua脚本来保证redis的原子性，本文的首要目标就是帮助大家在go语言中使用redis lua脚本，以及在在脚本下的debug等。\",\"redis环境可以使用在本地下载的，也可以使用docker启动一个redis，下面的示例中使用会docker启动一个redis实例。\"]},\"1105\":{\"h\":\"Docker启动redis\"},\"1106\":{\"h\":\"什么是lua脚本\",\"t\":[\"redis lua脚本的原子性，不支持ACID\"]},\"1107\":{\"h\":\"redis中lua脚本的debug\"},\"1108\":{\"h\":\"Go语言操作redis\"},\"1109\":{\"h\":\"总结\"},\"1110\":{\"c\":[\"tutorial\"]},\"1111\":{\"c\":[\"golang\",\"redis\"]},\"1112\":{\"h\":\"Go 语言使用zerolog日志库\",\"t\":[\"Zerolog是一个高性能、零分配的Go日志库。它在记录日志的时候不需要在堆上分配内存，所以也不需要垃圾回收，可以以完全零分配的方式使用。\",\"本文章视频已上传至B站\"]},\"1113\":{\"c\":[\"tutorial\"]},\"1114\":{\"c\":[\"golang\",\"log\",\"zerolog\"]},\"1115\":{\"h\":\"Concurrency or Parallelism ?\",\"t\":[\"First of all, You need to know Go is a concurrent language and not a parallel one. Before discussing how concurrency is taken care in Go, we must first understand what is concurrency and how it is different from parallelism.\"]},\"1116\":{\"h\":\"What is concurrency?\",\"t\":[\"Concurrency is the capability to deal with lots of things at once. It's best explained with an example.\",\"Let's consider a person jogging. During his morning jog, let's say his shoelaces become untied. Now the person stops running, ties his shoelaces and then starts running again. This is a classic example of concurrency. The person is capable of handling both running and tying shoelaces, that is the person is able to deal with lots of things at once 😃\"]},\"1117\":{\"h\":\"What is parallelism and how is it different from concurrency?\",\"t\":[\"Parallelism is doing lots of things at the same time. It might sound similar to concurrency but it's actually different.\",\"Let's understand it better with the same jogging example. In this case, let's assume that the person is jogging and also listening to music on his iPod. In this case, the person is jogging and listening to music at the same time, that is he is doing lots of things at the same time. This is called parallelism.\"]},\"1118\":{\"h\":\"Concurrency and Parallelism - A technical point of view\",\"t\":[\"We understood what is concurrency and how it is different from parallelism using real world examples. Now let's look at them from a more technical point of view as we are geeks 😃.\",\"Let's say we are programming a web browser. The web browser has various components. Two of them are the web page rendering area and the downloader for downloading files from the internet. Let's assume that we have structured our browser's code in such a way that each of these components can be executed independently (This is done using threads in languages such as Java and in Go we can achieve this using Goroutine, more on this later). When this browser is run in a single-core processor, the processor will context switch between the two components of the browser. It might be downloading a file for some time and then it might switch to render the html of a user requested web page. This is known as concurrency. Concurrent processes start at different points of time and their execution cycles overlap. In this case, the downloading and the rendering start at different points in time and their executions overlap.\",\"Let's say the same browser is running on a multi-core processor. In this case, the file downloading component and the HTML rendering component might run simultaneously in different cores. This is known as parallelism.\",\" Parallelism will not always result in faster execution times. This is because the components running in parallel have might have to communicate with each other. For example, in the case of our browser, when the file downloading is complete, this should be communicated to the user, say using a popup. This communication happens between the component responsible for downloading and the component responsible for rendering the user interface. This communication overhead is low in concurrent systems. In the case when components run in parallel in multiple cores, this communication overhead is high. Hence parallel programs do not always result in faster execution times!\",\"Support for concurrency in Go. Concurrency is an inherent part of the Go programming language.\",\"That's it for introduction to concurrency.\"]},\"1119\":{\"h\":\"What are goroutines?\",\"t\":[\"Goroutines are functions or methods that run concurrently with other functions or methods. Goroutines can be thought of as lightweight threads. The cost of creating a Goroutine is tiny when compared to a thread. Hence it's common for Go applications to have thousands of Goroutines running concurrently.\",\"Let's create a Goroutine.\",\"package main import ( \\\"fmt\\\" ) func hello() { fmt.Println(\\\"Hello world goroutine\\\") } func main() { go hello() fmt.Println(\\\"main\\\") } \",\"Run this program and you will have a surprise!\",\"This program only outputs the text main function. What happened to the Goroutine we started? We need to understand the two main properties of goroutines to understand why this happens.\",\"When a new Goroutine is started, the goroutine call returns immediately. Unlike functions, the control does not wait for the Goroutine to finish executing. The control returns immediately to the next line of code after the Goroutine call and any return values from the Goroutine are ignored.\",\"The main Goroutine should be running for any other Goroutines to run. If the main Goroutine terminates then the program will be terminated and no other Goroutine will run.\",\"I guess now you will be able to understand why our Goroutine did not run. After the call to go hello() , the control returned immediately to the next line of code without waiting for the hello goroutine to finish and printed main. Then the main Goroutine terminated since there is no other code to execute and hence the hello Goroutine did not get a chance to run.\",\"Let's fix this now.\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func hello() { fmt.Println(\\\"Hello world goroutine\\\") } func main() { go hello() time.Sleep(1 * time.Millisecond) fmt.Println(\\\"main\\\") } \",\"Now run this code. Output is\",\"Hello world goroutine main \",\"What we do is just add a Millisecond.\",\"This way of using sleep in the main Goroutine to wait for other Goroutines to finish their execution is a hack we are using to understand how Goroutines work. Channels can be used to block the main Goroutine until all other Goroutines finish their execution. We will discuss channels after this.\"]},\"1120\":{\"h\":\"Starting multiple Goroutines\",\"t\":[\"Run this\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func numbers() { for i := 1; i <= 5; i++ { time.Sleep(250 * time.Millisecond) fmt.Printf(\\\"%d \\\", i) } } func alphabets() { for i := 'a'; i <= 'e'; i++ { time.Sleep(400 * time.Millisecond) fmt.Printf(\\\"%c \\\", i) } } func main() { go numbers() go alphabets() time.Sleep(3000 * time.Millisecond) fmt.Println(\\\"main terminated\\\") } \",\"This program output:\",\"1 a 2 3 b 4 c 5 d e main terminated \",\"The following image depicts how this program works. Please open the image in a new tab for better visibility 😃\",\"The first portion of the image in blue color represents the numbers Goroutine, the second portion in maroon color represents the alphabets Goroutine, the third portion in green represents the main Goroutine and the final portion in black merges all the above three and shows us how the program works. The strings like 0 ms, 250 ms at the top of each box represent the time in milliseconds and the output is represented in the bottom of each box as 1, 2, 3 and so on. The blue box tells us that 1 is printed after 250 ms, 2 is printed after 500 ms and so on. The bottom of the last black box has values 1 a 2 3 b 4 c 5 d e main terminated which is the output of the program as well. The image is self-explanatory and you will be able to understand how the program works.\"]},\"1121\":{\"h\":\"What are channel?\",\"t\":[\"Channels can be thought of as pipes using which Goroutines communicate. Similar to how water flows from one end to another in a pipe, data can be sent from one end and received from the other end using channels.\"]},\"1122\":{\"h\":\"Declaring channels\",\"t\":[\"Each channel has a type associated with it. This type is the type of data that the channel is allowed to transport. No other type is allowed to be transported using the channel.\",\"chan T is a channel of type T\",\"The zero value of a channel is nil. nil channels are not of any use and hence the channel has to be defined using make similar to maps and slices.\",\"Let's write some code that declares a channel.\",\"package main import \\\"fmt\\\" func main() { var a chan int if a == nil { fmt.Println(\\\"channel a is nil, going to define it\\\") a = make(chan int) fmt.Printf(\\\"Type of a is %T\\\", a) } } \",\"Outputs:\",\"channel a is nil, going to define it Type of a is chan int \",\"As usual, the short hand declaration is also a valid and concise way to define a channel.\",\"a := make(chan int) \",\"The above line of code also defines an int channel a.\"]},\"1123\":{\"h\":\"Sending and receiving from a channel\",\"t\":[\"a <- data // write to channel a data := <- a // read from channel a \",\"Nothing to explain.\",\"Sends and receives are blocking by default Sends and receives to a channel are blocking by default. What does this mean? When data is sent to a channel, the control is blocked in the send statement until some other Goroutine reads from that channel. Similarly, when data is read from a channel, the read is blocked until some Goroutine writes data to that channel.\",\"This property of channels is what helps Goroutines communicate effectively without the use of explicit locks or conditional variables that are quite common in other programming languages.\",\"It's ok if this doesn't make sense now. The upcoming sections will add more clarity on how channels are blocking by default.\"]},\"1124\":{\"h\":\"Channel example program\",\"t\":[\"We will rewrite the above program using channels.\",\"package main import ( \\\"fmt\\\" ) func hello(done chan bool) { fmt.Println(\\\"Hello world goroutine\\\") done <- true } func main() { done := make(chan bool) go hello(done) <-done fmt.Println(\\\"main\\\") } \",\"In the above program, we create a done bool channel in line no. 12 and pass it as a parameter to the hello Goroutine. In line no. 14 we are receiving data from the done channel. This line of code is blocking which means that until some Goroutine writes data to the done channel, the control will not move to the next line of code. Hence this eliminates the need for the time.Sleep which was present in the original program to prevent the main Goroutine from exiting.\",\"The line of code <-done receives data from the done channel but does not use or store that data in any variable. This is perfectly legal.\",\"Now we have our main Goroutine blocked waiting for data on the done channel. The hello Goroutine receives this channel as a parameter, prints Hello world goroutine and then writes to the done channel. When this write is complete, the main Goroutine receives the data from the done channel, it is unblocked and then the text main function is printed.\",\"This program outputs\",\"Hello world goroutine main \",\"Let's modify this program by introducing a sleep in the hello Goroutine to better understanding this blocking concept.\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func hello(done chan bool) { fmt.Println(\\\"hello go routine is going to sleep\\\") time.Sleep(4 * time.Second) fmt.Println(\\\"hello go routine awake and going to write to done\\\") done <- true } func main() { done := make(chan bool) fmt.Println(\\\"Main going to call hello go goroutine\\\") go hello(done) <-done fmt.Println(\\\"Main received data\\\") } \",\"In the above program, we have introduced a sleep of 4 seconds to the hello function in line no. 10.\",\"This program will first print Main going to call hello go goroutine. Then the hello Goroutine will be started and it will print hello go routine is going to sleep. After this is printed, the hello Goroutine will sleep for 4 seconds and during this time main Goroutine will be blocked since it is waiting for data from the done channel in line no. 18 <-done. After 4 seconds hello go routine awake and going to write to done will be printed followed by Main received data.\"]},\"1125\":{\"h\":\"Deadlock\",\"t\":[\"One important factor to consider while using channels is deadlock. If a Goroutine is sending data on a channel, then it is expected that some other Goroutine should be receiving the data. If this does not happen, then the program will panic at runtime with Deadlock.\",\"Similarly, if a Goroutine is waiting to receive data from a channel, then some other Goroutine is expected to write data on that channel, else the program will panic.\",\"package main func main() { ch := make(chan int) ch <- 5 } \",\"In the program above, a channel ch is created and we send 5 to the channel in line no. 6 ch <- 5. In this program no other Goroutine is receiving data from the channel ch. Hence this program will panic with the following runtime error.\",\"fatal error: all goroutines are asleep - deadlock! goroutine 1 [chan send]: main.main() main.go:6 +0x31 exit status 2 \"]},\"1126\":{\"h\":\"Unidirectional channels\",\"t\":[\"All the channels we discussed so far are bidirectional channels, that is data can be both sent and received on them. It is also possible to create unidirectional channels, that is channels that only send or receive data.\",\"package main import \\\"fmt\\\" func sendData(sendch chan<- int) { sendch <- 10 } func main() { sendch := make(chan<- int) go sendData(sendch) fmt.Println(<-sendch) } \",\"In the above program, we create send only channel sendch in line no. 10. chan<- int denotes a send only channel as the arrow is pointing to chan. We try to receive data from a send only channel in line no. 12. This is not allowed and when the program is run, the compiler will complain stating,\",\"./main.go:12:14: invalid operation: <-sendch (receive from send-only type chan<- int) \",\"All is well but what is the point of writing to a send only channel if it cannot be read from!\",\"This is where channel conversion comes into use. It is possible to convert a bidirectional channel to a send only or receive only channel but not the vice versa.\",\"package main import \\\"fmt\\\" func sendData(sendch chan<- int) { sendch <- 10 } func main() { chnl := make(chan int) go sendData(chnl) fmt.Println(<-chnl) } \",\"In line no. 10 of the program above, a bidirectional channel chnl is created. It is passed as a parameter to the sendData Goroutine in line no. 11. The sendData function converts this channel to a send only channel in line no. 5 in the parameter sendch chan<- int. So now the channel is send only inside the sendData Goroutine but it's bidirectional in the main Goroutine. This program will print 10 as the output.\"]},\"1127\":{\"h\":\"Closing channels and for range loops on channels\",\"t\":[\"Senders have the ability to close the channel to notify receivers that no more data will be sent on the channel.\",\"Receivers can use an additional variable while receiving data from the channel to check whether the channel has been closed.\",\"v, ok := <- ch \",\"In the above statement ok is true if the value was received by a successful send operation to a channel. If ok is false it means that we are reading from a closed channel. The value read from a closed channel will be the zero value of the channel's type. For example, if the channel is an int channel, then the value received from a closed channel will be 0.\",\"package main import ( \\\"fmt\\\" ) func producer(chnl chan int) { for i := 0; i < 10; i++ { chnl <- i } close(chnl) } func main() { ch := make(chan int) go producer(ch) for { v, ok := <-ch if ok == false { break } fmt.Println(\\\"Received \\\", v, ok) } } \",\"Outputs:\",\"Received 0 true Received 1 true Received 2 true Received 3 true Received 4 true Received 5 true Received 6 true Received 7 true Received 8 true Received 9 true \",\"The for range form of the for loop can be used to receive values from a channel until it is closed.\",\"Let's rewrite the program above using a for range loop.\",\"package main import ( \\\"fmt\\\" ) func producer(chnl chan int) { for i := 0; i < 10; i++ { chnl <- i } close(chnl) } func main() { ch := make(chan int) go producer(ch) for v := range ch { fmt.Println(\\\"Received \\\",v) } } \",\"The for range loop in line no. 16 receives data from the ch channel until it is closed. Once ch is closed, the loop automatically exits. This program outputs,\",\"Received 0 Received 1 Received 2 Received 3 Received 4 Received 5 Received 6 Received 7 Received 8 Received 9 \",\"Congratulations on completing this tutorial, and welcome to continue learning in practice.\"]},\"1128\":{\"c\":[\"golang\"]},\"1129\":{\"c\":[\"golang\",\"concurrency\"]},\"1130\":{\"h\":\"Go 语言底层剖析\"},\"1131\":{\"h\":\"GMP\",\"t\":[\"数据结构\",\"G — 表示 Goroutine，它是一个待执行的任务；\",\"M — 表示操作系统的线程，它由操作系统的调度器调度和管理；\",\"P — 表示处理器，它可以被看做运行在线程上的本地调度器；\",\"我们先在这里介绍一下不同的数据结构, 作用以及运行期间可能的状态:\"]},\"1132\":{\"h\":\"G\",\"t\":[\"Goroutine 是 Go 语言调度器中待执行的任务，它在运行时调度器中的地位与线程在操作系统中差不多，但是它占用了更小的内存空间，也降低了上下文切换的开销。\",\"Goroutine只存在于Go语言的运行时,它是Go语言在用户态提供的线程,作为粒度更细的资源调度单元,如果使用得当能够在高并发的场景下更高效地利用机器的CPU.\",\"Goroutine在Go语言运行时使用私有结构体runtime.g来表示,这个私有结构体十分复杂,里也不会介绍所有的字段，仅会挑选其中的一部分，首先是与栈相关的两个字段：\",\"type g struct { stack stack stackguard0 uintptr } \",\"stack字段保存了当前goroutine1的栈内存范围[stack.lo, stack.hi], 另一个字段stackguard0可以用于调度器抢占式调度.除了stackguard0外,goroutine还包含了另外三个与抢占密切相关的字段,\",\"type g struct { preempt bool // 抢占信号 preemptStop bool // 抢占时将状态修改成 `_Gpreempted` preemptShrink bool // 在同步安全点收缩栈 } \",\"Goroutine 与我们在前面章节提到的 defer 和 panic 也有千丝万缕的联系，每一个 Goroutine 上都持有两个分别存储 defer 和 panic 对应结构体的链表：\",\"type g struct { _panic *_panic // 最内侧的 panic 结构体 _defer *_defer // 最内侧的延迟函数结构体 } \",\"最后，我们再节选一些作者认为比较有趣或者重要的字段：\",\"type g struct { m *m // m是当前goroutine抢占的线程 sched gobuf // 存储goroutine调度相关的数据 atomicstatus uint32 // goroutine的状态 goid int64 // goroutine的id } \",\"上述四个字段中，我们需要展开介绍 sched 字段的 runtime.gobuf 结构体中包含哪些内容：\",\"type gobuf struct { sp uintptr pc uintptr g guintptr ret sys.Uintreg ... } \",\"sp — 栈指针； pc — 程序计数器； g — 持有 runtime.gobuf 的 Goroutine； ret — 系统调用的返回值； \",\"这些内容会在调度器保存或者恢复上下文的时候用到，其中的栈指针和程序计数器会用来存储或者恢复寄存器中的值，改变程序即将执行的代码。\",\"结构体 runtime.g 的 atomicstatus 字段存储了当前 Goroutine 的状态。除了几个已经不被使用的以及与 GC 相关的状态之外，Goroutine 可能处于以下 9 种状态：\",\"状态\",\"描述\",\"_Gidle\",\"刚刚被分配并且还没有被初始化\",\"_Grunnable\",\"没有执行代码，没有栈的所有权，存储在运行队列中\",\"_Grunning\",\"可以执行代码，拥有栈的所有权，被赋予了内核线程 M 和处理器 P\",\"_Gsyscall\",\"正在执行系统调用，拥有栈的所有权，没有执行用户代码，被赋予了内核线程 M 但是不在运行队列上\",\"_Gwaiting\",\"由于运行时而被阻塞，没有执行用户代码并且不在运行队列上，但是可能存在于 Channel 的等待队列上\",\"_Gdead\",\"没有被使用，没有执行代码，可能有分配的栈\",\"_Gcopystack\",\"栈正在被拷贝，没有执行代码，不在运行队列上\",\"_Gpreempted\",\"由于抢占而被阻塞，没有执行用户代码并且不在运行队列上，等待唤醒\",\"_Gscan\",\"GC 正在扫描栈空间，没有执行代码，可以与其他状态同时存在\",\"虽然 Goroutine 在运行时中定义的状态非常多而且复杂，但是我们可以将这些不同的状态聚合成三种：等待中、可运行、运行中，运行期间会在这三种状态来回切换：\",\"等待中：Goroutine 正在等待某些条件满足，例如：系统调用结束等，包括 _Gwaiting、_Gsyscall 和 _Gpreempted 几个状态；\",\"可运行：Goroutine 已经准备就绪，可以在线程运行，如果当前程序中有非常多的 Goroutine，每个 Goroutine 就可能会等待更多的时间，即 _Grunnable；\",\"运行中：Goroutine 正在某个线程上运行，即 _Grunning；\"]},\"1133\":{\"h\":\"M\",\"t\":[\"M是操作系统的线程,调度器最多可以创建10000个线程,但是其中大多数线程都不会执行用户代码,最多只有GOMAXPROCS个活跃的线程能正常运行.\",\"在默认情况下,运行时将GOMAXPROCS设置成当前机器的核数,我们也可以在程序中使用runtime.GOMAXPROCS来修改.\",\"Go 语言会使用私有结构体 runtime.m 表示操作系统线程，这个结构体也包含了几十个字段，这里先来了解几个与 Goroutine 相关的字段：\",\"type m struct { // g0是持有调度栈的Goroutine,curg是当前线程上运行的用户Goroutine,也是操作系统线程唯一关心的两个Goroutine g0 *g curg *g ... } \",\"g0 是一个运行时中比较特殊的 Goroutine，它会深度参与运行时的调度过程，包括 Goroutine 的创建、大内存分配和 CGO 函数的执行。在后面的小节中，我们会经常看到 g0 的身影。\",\"M0 是启动程序后的编号为 0 的主线程，这个 M 对应的实例会在全局变量 runtime.m0 中，不需要在 heap 上分配，M0 负责执行初始化操作和启动第一个 G， 在之后 M0 就和其他的 M 一样了。\",\"G0 是每次启动一个 M 都会第一个创建的 goroutine，G0 仅用于负责调度的 G，G0 不指向任何可执行的函数，每个 M 都会有一个自己的 G0。在调度或系统调用时会使用 G0 的栈空间，全局变量的 G0 是 M0 的 G0。\"]},\"1134\":{\"h\":\"P\",\"t\":[\"调度器中的处理器 P 是线程和 Goroutine 的中间层，它能提供线程需要的上下文环境，也会负责调度线程上的等待队列，通过处理器 P 的调度，每一个内核线程都能够执行多个 Goroutine，它能在 Goroutine 进行一些 I/O 操作时及时让出计算资源，提高线程的利用率。\",\"因为调度器在启动时就会创建 GOMAXPROCS 个处理器，所以 Go 语言程序的处理器数量一定会等于 GOMAXPROCS，这些处理器会绑定到不同的内核线程上。\",\"runtime.p 是处理器的运行时表示，作为调度器的内部实现，它包含的字段也非常多，其中包括与性能追踪、垃圾回收和计时器相关的字段，这些字段也非常重要，但是在这里就不展示了，我们主要关注处理器中的线程和运行队列：\",\"type p struct { m muintptr runqhead uint32 runqtail uint32 runq [256]guintptr runnext guintptr ... } \",\"反向存储的线程维护着线程与处理器之间的关系，而 runqhead、runqtail 和 runq 三个字段表示处理器持有的运行队列，其中存储着待执行的 Goroutine 列表，runnext 中是线程下一个需要执行的 Goroutine。\",\"runtime.的state字段会是下面:\",\"状态\",\"描述\",\"_Pidle\",\"处理器没有运行用户代码或者调度器，被空闲队列或者改变其状态的结构持有，运行队列为空\",\"_Prunning\",\"被线程 M 持有，并且正在执行用户代码或者调度器\",\"_Psyscall\",\"没有执行用户代码，当前线程陷入系统调用\",\"_Pgcstop\",\"被线程 M 持有，当前处理器由于垃圾回收被停止\",\"_Pdead\",\"当前处理器已经不被使用\",\"调度器启动\",\"调度器的启动过程是我们平时比较难以接触的过程，不过作为程序启动前的准备工作，理解调度器的启动过程对我们理解调度器的实现原理很有帮助，运行时通过 runtime.schedinit 初始化调度器：\",\"在调度器初始函数执行的过程中会将 maxmcount 设置成 10000，这也就是一个 Go 语言程序能够创建的最大线程数，虽然最多可以创建 10000 个线程，但是可以同时运行的线程还是由 GOMAXPROCS 变量控制。\",\"我们从环境变量 GOMAXPROCS 获取了程序能够同时运行的最大处理器数之后就会调用 runtime.procresize 更新程序中处理器的数量，在这时整个程序不会执行任何用户 Goroutine，调度器也会进入锁定状态\"]},\"1135\":{\"h\":\"创建 Goroutine\",\"t\":[\"想要启动一个新的 Goroutine 来执行任务时，我们需要使用 Go语言的 go 关键字，编译器会通过 cmd/compile/internal/gc.state.stmt 和 cmd/compile/internal/gc.state.call 两个方法将该关键字转换成 runtime.newproc 函数调用：\",\"runtime.newproc 的入参是参数大小和表示函数的指针 funcval，它会获取 Goroutine 以及调用方的程序计数器，然后调用 runtime.newproc1 函数获取新的 Goroutine 结构体、将其加入处理器的运行队列并在满足条件时调用 runtime.wakep 唤醒新的处理执行 Goroutine：\",\"runtime.newproc1 会根据传入参数初始化一个 g 结构体:\",\"获取或者创建新的 Goroutine 结构体；\",\"将传入的参数移到 Goroutine 的栈上；\",\"更新 Goroutine 调度相关的属性；\",\"调度\",\"这是本章的重点，分为 调度策略 和 调度时机 。\",\"调度策略\",\"即从哪里获取 协程？下面是调度策略函数：\",\"主要的调度逻辑就是这三段\",\"第一段主要是防止 全局协程队列 中的协程等待太久，那么每执行 61 次 本地协程队列中的协程调度(常量竟然是写死的 -_-!!!)，就从 全局协程队列 获取一个 G 放到 P的本地协程队列 中 (runqput 函数) 那么一开始肯定不会进入这里。\",\"所以一开始的入口是第二段， 直接从本地协程队列获取协程。\",\"然后就是 进入到真正策略函数 findrunnable 。\",\"进入findrunnable 可以看到 一开始 也是通过 runqget 获取 p 的本地协程队列\",\"P 本地协程队列\",\"进入findrunnable 可以看到 一开始 也是通过 runqget 获取 p 的本地协程队列 它的处理逻辑也很简单，流程是：\",\"先返回 p.next 指向的协程， 如果 next==0 就从 q.runq 本地协程队列获取协程返回。\",\"其中可以看到如果 head == tail 则表示队列为空。\",\"然后是 globrunqget方法 获取 len(p.runq) / 2 数量的 goroutine，放到 p 的本地协程队列中(runqput)\",\"获取准备就绪的网络协程\",\"然后就是 获取准备就绪的网络协程：\",\"如果有网络协程，则在 injectglist函数中， 将 所有网络协程 通过 globrunqputbatch方法 都加入到全局协程队列中。\",\"窃取其他P中的G\",\"最后从其他 P中窃取G\",\"进入 stealWork 可以看到， 所有的 p 都在一个 allp []*p 的全局变量中。\",\"通过一个算法(有兴趣的朋友可以自行研究一下，这里就不详解了)，保证了一定会遍历 allp 中的所有元素。\",\"然后在在 runqsteal() 调用 runqgrab() 窃取别的 P 中一半协程 到自己的本地协程队列中。\",\"执行\",\"schedule() 方法 的最后，就是调用 execute()方法 :\",\"将 g 状态改为 _Grunnable -> _Grunning\",\"最后通过 gogo 将 Goroutine 调度到当前线程上执行，gogo 在不同的处理器架构上实现方式不一样(汇编)，最终都会调用 goexit0() 方法 :\",\"// goexit continuation on g0. func goexit0(gp *g) { ... casgstatus(gp, _Grunning, _Gdead) ... gfput(_g_.m.p.ptr(), gp) ... schedule() } \",\"其中主要的逻辑就是：\",\"将 goroutine 变成 _Gdead 状态，然后通过 gfput 将 goroutine 放入P 的 gFree list然后重新调度 \",\"如果 p 中 gFree list 中 协程的数量 >= 64， 就弹出一半加入到全局协程回收站中 sched.gFree\",\"调度时机\",\"因为调度器的 schedule会重新选择 Goroutine 在线程上执行，所以我们只要找到该函数的调用方就能找到所有触发调度的时间点。\",\"整理如下：\",\"mstart1(): 线程启动 Goexit() -> goexit1() ->goexit0(): 协程退出 Gosched() -> `gosched_m() -> goschedImpl(): 主动让出 gopark() -> park_m() ： 被动等待 exitsyscall() -> exitsyscall0(): 退出系统调用 preemptPark(): 抢占p startTheWorld() -> semrelease1() -> goyield() -> goyield_m(): gc 协程退出 在上一节 执行 中已经说了，这里就不重复。 线程启动 主要是初始化 P，比较简单，这里就不叙述了，感兴趣的朋友可以自己了解一下。 剩下的，我们再一个一个来看。 抢占 P 咱们单独拿一节来说。 \",\"主动让出\",\"有时候我们会主动调用 runtime.Gosched() 让出 goroutine 的 cpu 执行。比如自旋锁的实现，如果我们发现锁被占用，就直接让出 cpu：\",\"逻辑也比较简单：\",\"将 goroutine 状态从 _Grunning 变成 _Grunnable通过 dropg 将 m 与 goroutine 解绑再将 goroutine 放入 全局 grouting 队列开始新一轮调度 \",\"被动等待:\",\"这是最常见的，比如 网络I/O、chan 阻塞、定时器 等都会进入这里面。\",\"总的逻辑也比较简单：\",\"将 goroutine 状态从 _Grunning 变成 _Gwaiting通过 dropg 将 m 与 goroutine 解绑重新调度 \",\"等待被唤醒\",\"运行时通过 goready() 唤醒等待的 goroutine, 核心逻辑在 ready() 中，逻辑也很简单: 修改 g 的状态 _Gwaiting -> _Grunnable放入本地队列\",\"退出系统调用\",\"系统调用前，运行时会调用 reentersyscall()。它会完成 Goroutine 进入系统调用前的准备工作：\",\"保存当前 PC 和栈指针 SP 中的内容修改 g 的状态 _Grunning -> _Gsyscall；修改 p 的状态为 _Psyscall并解除 p 与 m 之间的绑定将 P 放入 oldp 中 然后就是进入系统调用。 \",\"当系统调用结束后，会调用退出系统调用的函数，将 g 重新执行：\",\"这里有一个快速路径和一个慢的路径。\",\"跳进 exitsyscallfast() 逻辑可以看到: 快路径就是获取当前 g，然后将 g 与 oldp (即进入系统调用时候保存的 p)进行绑定：\",\"执行从注释就能看出来：\",\"如果获取到空闲 p，就直接绑定 p 和 m， 然后执行当前。\",\"如果获取不到，就将当前 g 状态改为 _Grunnable ，放进全局协程队列，执行。\",\"startTheWorld\",\"逻辑也非常简单：\",\"修改协程状态 _Grunning -> _Grunnable将 g 与 m 解绑重新放入当前 p 的本地队列重新调度 \",\"从中可以看到，当 p 在 _Prunning 或 _Psyscall 状态下，有 5种情况 p 会被抢占\",\"如果 p 距离上次调度已经过去 10us (pd.schedwhen+forcePreemptNS <= now)如果系统调用超过了一个 sysmon tick (20us)系统调用情况下，p 中的本地 goroutine 队列中有等待运行的G（runqempty(p)）。 这时候抢占只是为了让本地队列中的 goroutine有执行的机会。没有空闲 p 和 自旋的 m ( atomic.Load(&sched.nmspinning)+atomic.Load(&sched.npidle) > 0 )。有的话，说们很闲，抢占了也没有意义当系统调用时间超过了 10us (pd.syscallwhen+1010001000) \",\"总结\",\"一开始我们介绍了 GMP 结构体中重要字段的意思。\",\"然后就是重点 调度 ，调度可以看作是一个死循环，分为 调度策略 和 调度时机\",\"调度策略逻辑如下：\",\"先从 p 的 本地协程队列 获取 g，如果没有，就从全局协程队列里，获取第一个，然后拿一部分协程(最多拿走 256/2 个) 到本地中； \",\"如果 全局队列 中没有， 就获取将网络协程中的第一个，然后将剩下的所有网络协程都加入到全局协程队列中。\",\"如果还是没有， 就从其他 p 的本地协程队列中 窃取一半 到自己本地队列中。\",\"然后就是调度时机，常见的就是：\",\"主动让出： \",\"runtime.Gosched() 。协程状态 _Grunnable 变成 _Grunning ，放入全局协程队列。\",\"被动等待：\",\"网络I/O、channel、定时器；将协程状态从 _Grunning 变成 _Gwaiting，然后与 m 解绑。\",\"唤醒后，将协程状态从 _Gwaiting 变成 _Grunnable，然后放入当前 p 的本地协程队列。\",\"3.退出系统调用\",\"退出后就要要么马上执行当前 goroutine（快路径）；\",\"要么就是慢路径: 将协程状态从 _Gwaiting 变成 _Grunnable，然后放入当前 p 的全局协程队列。。\",\"gc 的 stop the world 后的 start the world:\",\"修改协程状态 _Grunning -> _Grunnable; 将 g 与 m 解绑; 重新放入当前 p 的本地队列\",\"最后就是，就是监控线程的抢占 p ，它的目的主要是为了更公平是实现调度，防止其他 协程出现饥饿的情况。主要是出现下面两种情况会发生抢占：\",\"超过了系统 tick(即20微秒)当前执行超过了 10 微秒(系统执行或者用户协程执行) \",\"然后将当前的 g 放入全局队列\",\"参考<https://zhuanlan.zhihu.com/p/502740833>\"]},\"1136\":{\"h\":\"Chan 底层\",\"t\":[\"设计原理\",\"Go语言最常见的也是经常被人提及的设计模式是:不要通过共享内存的方式进行通信，而是应该通过通信的方式共享内存。在很多主流的编程语言中，多个线程传递数据的方式一般都是共享内存，为了解决线程竞争，我们需要限制同一时间能够读写这些变量的线程数量，然而这与 Go 语言鼓励的设计并不相同。\",\"虽然我们在 Go 语言中也能使用共享内存加互斥锁进行通信，但是 Go 语言提供了一种不同的并发模型，即通信顺序进程(CSP), Goroutine 和 Channel 分别对应 CSP 中的实体和传递信息的媒介，Goroutine 之间会通过 Channel 传递数据。\",\"先入先出\",\"目前的 Channel 收发操作均遵循了先进先出的设计，具体规则如下：\",\"先从 Channel 读取数据的 Goroutine 会先接收到数据；\",\"先向 Channel 发送数据的 Goroutine 会得到先发送数据的权利；\",\"这种 FIFO 的设计是相对好理解的，但是稍早的 Go 语言实现却没有严格遵循这一语义...\"]},\"1137\":{\"h\":\"数据结构\",\"t\":[\"Go语言的Channel在运行时使用runtime.hchan结构体表示,我们在Go语言中创建新的Channel时,实际上创建的是如下的结构体:\",\"type hchan struct { qcount uint // Channel元素的个数 dataqsiz uint // Channel 中的循环队列的长度 buf unsafe.Pointer // Channel 的缓冲区数据指针； elemsize uint16 // 能够接收的大小 closed uint32 elemtype *_type // 能够接收的类型 sendx uint // Channel 的发送操作处理到的位置； recvx uint // Channel 的接收操作处理到的位置; recvq waitq // 存储了当前 Channel 由于缓冲区空间不足而阻塞的 Goroutine 列表 sendq waitq // 存储了当前 Channel 由于接收空间不足而阻塞的 Goroutine 列表 lock mutex } // 这些等待队列使用双向链表 runtime.waitq 表示，链表中所有的元素都是 runtime.sudog 结构： type waitq struct { first *sudog last *sudog } \",\"创建管道\",\"Go语言创建管道使用make关键词,这一阶段会对传入 make 关键字的缓冲区大小进行检查，如果我们不向 make 传递表示缓冲区大小的参数，那么就会设置一个默认值 0，也就是当前的 Channel 不存在缓冲区。\",\"这一阶段根据传入chan的缓冲区大小有所不同:\",\"如果当前chan不存在缓冲区,则只为runtime.hchan分配一段内存空间\",\"如果当前chan中存储的类型不是指针类型,会为当前的 Channel 和底层的数组分配一块连续的内存空间；\",\"在默认情况下会单独为 runtime.hchan 和缓冲区分配内存；\",\"发送数据\",\"当我们想要向 Channel 发送数据时，就需要使用 ch <- i 语句\",\"发送数据时会调用runtime.chansend,这个函数包含了发送数据的全部逻辑,如果我们在调用时将block参数设置为true,那么表示当前的发送操作是阻塞的.在发送数据的逻辑执行之前会为当前Channel加锁,防止多线程并发修改数据,如果channel已经关闭则会panic.\",\"因为 runtime.chansend 函数的实现比较复杂，所以我们这里将该函数的执行过程分成以下的三个部分：\",\"当存在等待的接收者时，通过 runtime.send 直接将数据发送给阻塞的接收者；\",\"当缓冲区存在空余空间时，将发送的数据写入 Channel 的缓冲区；\",\"当不存在缓冲区或者缓冲区已满时，等待其他 Goroutine 从 Channel 接收数据；\",\"发送数据时会调用 runtime.send，该函数的执行可以分成两个部分：\",\"调用 runtime.sendDirect 将发送的数据直接拷贝到 x = <-c 表达式中变量 x 所在的内存地址上；\",\"调用 runtime.goready 将等待接收数据的 Goroutine 标记成可运行状态 Grunnable 并把该 Goroutine 放到发送方所在的处理器的 runnext 上等待执行，该处理器在下一次调度时会立刻唤醒数据的接收方；\",\"缓冲区\",\"如果创建的 Channel 包含缓冲区并且 Channel 中的数据没有装满，在这里我们首先会使用 runtime.chanbuf 计算出下一个可以存储数据的位置，然后通过 runtime.typedmemmove 将发送的数据拷贝到缓冲区中并增加 sendx 索引和 qcount 计数器。\",\"阻塞发送\",\"当 Channel 没有接收者能够处理数据时，向 Channel 发送数据会被下游阻塞，当然使用 select 关键字可以向 Channel 非阻塞地发送消息。向 Channel 阻塞地发送数据时会：\",\"获取发送数据的Goroutine\",\"执行 runtime.acquireSudog 获取 runtime.sudog 结构并设置这一次阻塞发送的相关信息，例如发送的 Channel、是否在 select 中和待发送数据的内存地址等；\",\"将刚刚创建并初始化的 runtime.sudog 加入发送等待队列，并设置到当前 Goroutine 的 waiting 上，表示 Goroutine 正在等待该 sudog 准备就绪；\",\"调用 runtime.goparkunlock 将当前的 Goroutine 陷入沉睡等待唤醒；\",\"被调度器唤醒后会执行一些收尾工作，将一些属性置零并且释放 runtime.sudog 结构体； 函数在最后会返回true,表示已经向channel发送数据\",\"小结\",\"我们在这里可以简单梳理和总结一下使用 ch <- i 表达式向 Channel 发送数据时遇到的几种情况：\",\"如果当前 Channel 的 recvq 上存在已经被阻塞的 Goroutine，那么会直接将数据发送给当前 Goroutine 并将其设置成下一个运行的 Goroutine；\",\"如果 Channel 存在缓冲区并且其中还有空闲的容量，我们会直接将数据存储到缓冲区 sendx 所在的位置上；\",\"如果不满足上面的两种情况，会创建一个 runtime.sudog 结构并将其加入 Channel 的 sendq 队列中，当前 Goroutine 也会陷入阻塞等待其他的协程从 Channel 接收数据；\",\"发送数据的过程中包含几个会触发 Goroutine 调度的时机：\",\"发送数据时发现 Channel 上存在等待接收数据的 Goroutine，立刻设置处理器的 runnext 属性，但是并不会立刻触发调度；\",\"发送数据时并没有找到接收方并且缓冲区已经满了，这时会将自己加入 Channel 的 sendq 队列并调用 runtime.goparkunlock 触发 Goroutine 的调度让出处理器的使用权；\",\"接收数据\",\"当存在等待的发送者时，通过 runtime.recv 从阻塞的发送者或者缓冲区中获取数据；\",\"当缓冲区存在数据时，从 Channel 的缓冲区中接收数据；\",\"当缓冲区中不存在数据时，等待其他 Goroutine 向 Channel 发送数据；\",\"小结\",\"我们梳理一下从 Channel 中接收数据时可能会发生的五种情况：\",\"如果 Channel 为空，那么会直接调用 runtime.gopark 挂起当前 Goroutine；\",\"如果 Channel 已经关闭并且缓冲区没有任何数据，runtime.chanrecv 会直接返回；\",\"如果 Channel 的 sendq 队列中存在挂起的 Goroutine，会将 recvx 索引所在的数据拷贝到接收变量所在的内存空间上并将 sendq 队列中 Goroutine 的数据拷贝到缓冲区；\",\"如果 Channel 的缓冲区中包含数据，那么直接读取 recvx 索引对应的数据；\",\"在默认情况下会挂起当前的 Goroutine，将 runtime.sudog 结构加入 recvq 队列并陷入休眠等待调度器的唤醒；\",\"我们总结一下从 Channel 接收数据时，会触发 Goroutine 调度的两个时机：\",\"当 Channel 为空时；\",\"当缓冲区中不存在数据并且也不存在数据的发送者时；\"]},\"1138\":{\"h\":\"Interface 接口的底层实现\",\"t\":[\"Go语言使用runtime.iface表示一组方法的接口, 使用runtime.eface表示不包含任何方法的接口 interface{}, 两种接口虽然都使用 interface 声明，但是由于后者在 Go 语言中很常见，所以在实现时使用了特殊的类型。\",\"interface{} 类型不是任意类型。如果我们将类型转换成了 interface{} 类型，变量在运行期间的类型也会发生变化，获取变量类型时会得到 interface{}。\",\"package main func main() { type Test struct{} v := Test{} Print(v) } func Print(v interface{}) { println(v) } \",\"上述函数不接受任意类型的参数，只接受 interface{} 类型的值，在调用 Print 函数时会对参数 v 进行类型转换，将原来的 Test 类型转换成 interface{} 类型，本节会在后面介绍类型转换的实现原理。\",\"指针和接口\",\"在 Go 语言中同时使用指针和接口时会发生一些让人困惑的问题，接口在定义一组方法时没有对实现的接收者做限制，所以我们会看到某个类型实现接口的两种方式, 一种是值接受者,另一种是指针接受者\",\"结构提类型和指针类型是不同的,同样实现虽然两种类型不同，我们也不能同时实现两种相同的接口,Go 语言的编译器会在结构体类型和指针类型都实现一个方法时报错 “method redeclared”。\",\"结构体实现接口\",\"结构体指针实现接口\",\"结构体初始化变量\",\"通过\",\"不通过\",\"结构体指针初始化变量\",\"通过\",\"通过\",\"四种中只有使用指针实现接口，使用结构体初始化变量无法通过编译，其他的三种情况都可以正常执行。当实现接口的类型和初始化变量时返回的类型时相同时，代码通过编译是理所应当的：\",\"方法接受者和初始化类型都是结构体；\",\"方法接受者和初始化类型都是结构体指针；\",\"而剩下的两种方式为什么一种能够通过编译，另一种无法通过编译呢？我们先来看一下能够通过编译的情况，即方法的接受者是结构体，而初始化的变量是结构体指针\",\"type Cat struct{} func (c Cat) Quack() { fmt.Println(\\\"meow\\\") } func main() { var c Duck = &Cat{} c.Quack() } \",\"作为指针的 &Cat{} 变量能够隐式地获取到指向的结构体，所以能在结构体上调用 Walk 和 Quack 方法。我们可以将这里的调用理解成 C 语言中的 d->Walk() 和 d->Speak()，它们都会先获取指向的结构体再执行对应的方法。\",\"但是如果我们将上述代码中方法的接受者和初始化的类型进行交换，代码就无法通过编译了：\",\"type Duck interface { Quack() } type Cat struct{} func (c *Cat) Quack() { fmt.Println(\\\"meow\\\") } func main() { var c Duck = Cat{} c.Quack() } $ go build interface.go ./interface.go:20:6: cannot use Cat literal (type Cat) as type Duck in assignment: Cat does not implement Duck (Quack method has pointer receiver) \",\"编译器会提醒我们：Cat 类型没有实现 Duck 接口，Quack 方法的接受者是指针。这两个报错对于刚刚接触 Go 语言的开发者比较难以理解，如果我们想要搞清楚这个问题，首先要知道 Go 语言在传递参数时都是传值的。\",\"如上图所示，无论上述代码中初始化的变量 c 是 Cat{} 还是 &Cat{}，使用 c.Quack() 调用方法时都会发生值拷贝：\",\"如上图左侧，对于 &Cat{} 来说，这意味着拷贝一个新的 &Cat{} 指针，这个指针与原来的指针指向一个相同并且唯一的结构体，所以编译器可以隐式的对变量解引用（dereference）获取指针指向的结构体； 如上图右侧，对于 Cat{} 来说，这意味着 Quack 方法会接受一个全新的 Cat{}，因为方法的参数是 *Cat，编译器不会无中生有创建一个新的指针；即使编译器可以创建新指针，这个指针指向的也不是最初调用该方法的结构体； \",\"上面的分析解释了指针类型的现象，当我们使用指针实现接口时，只有指针类型的变量才会实现该接口；当我们使用结构体实现接口时，指针类型和结构体类型都会实现该接口。当然这并不意味着我们应该一律使用结构体实现接口，这个问题在实际工程中也没那么重要，在这里我们只想解释现象背后的原因。\",\"nil 和 non-nil #\",\"我们可以通过一个例子理解Go 语言的接口类型不是任意类型这一句话，下面的代码在 main 函数中初始化了一个 *TestStruct 类型的变量，由于指针的零值是 nil，所以变量 s 在初始化之后也是 nil：\",\"package main type TestStruct struct{} func NilOrNot(v interface{}) bool { return v == nil } func main() { var s *TestStruct fmt.Println(s == nil) // #=> true fmt.Println(NilOrNot(s)) // #=> false } $ go run main.go true false \",\"调用 NilOrNot 函数时发生了隐式的类型转换，除了向方法传入参数之外，变量的赋值也会触发隐式类型转换。\"]},\"1139\":{\"h\":\"数据结构\",\"t\":[\"Go 语言根据接口类型是否包含一组方法将接口类型分成了两类：\",\"使用 runtime.iface 结构体表示包含方法的接口\",\"使用 runtime.eface 结构体表示不包含任何方法的 interface{} 类型；\",\"runtime.eface 结构体在 Go 语言中的定义是这样的：\",\"type eface struct { // 16 字节 _type *_type data unsafe.Pointer } \",\"由于 interface{} 类型不包含任何方法，所以它的结构也相对来说比较简单，只包含指向底层数据和类型的两个指针。从上述结构我们也能推断出 — Go 语言的任意类型都可以转换成 interface{}。\",\"另一个用于表示接口的结构体是 runtime.iface，这个结构体中有指向原始数据的指针 data，不过更重要的是 runtime.itab 类型的 tab 字段。\",\"type iface struct { // 16 字节 tab *itab data unsafe.Pointer } \",\"接下来我们将详细分析 Go 语言接口中的这两个类型，即 runtime._type 和 runtime.itab。\",\"runtime._type 是 Go 语言类型的运行时表示。下面是运行时包中的结构体，其中包含了很多类型的元信息，例如：类型的大小、哈希、对齐以及种类等。\",\"type _type struct { size uintptr // 字段存储了类型占用的内存空间，为内存空间的分配提供信息； ptrdata uintptr hash uint32 // 字段能够帮助我们快速确定类型是否相等 tflag tflag align uint8 fieldAlign uint8 kind uint8 equal func(unsafe.Pointer, unsafe.Pointer) bool // 字段用于判断当前类型的多个对象是否相等，该字段是为了减少 Go 语言二进制包大小从 typeAlg 结构体中迁移过来的； gcdata *byte str nameOff ptrToThis typeOff } \",\"itab 结构体\",\"runtime.itab 结构体是接口类型的核心组成部分，每一个 runtime.itab 都占 32 字节，我们可以将其看成接口类型和具体类型的组合，它们分别用 inter 和 _type 两个字段表示：\",\"type itab struct { // 32 字节 inter *interfacetype _type *_type hash uint32 _ [4]byte fun [1]uintptr } \",\"除了 inter 和 _type 两个用于表示类型的字段之外，上述结构体中的另外两个字段也有自己的作用：\",\"hash 是对 _type.hash 的拷贝，当我们想将 interface 类型转换成具体类型时，可以使用该字段快速判断目标类型和具体类型 runtime._type 是否一致；\",\"fun 是一个动态大小的数组，它是一个用于动态派发的虚函数表，存储了一组函数指针。虽然该变量被声明成大小固定的数组，但是在使用时会通过原始指针获取其中的数据，所以 fun 数组中保存的元素数量是不确定的；\",\"我们会在类型断言中介绍 hash 字段的使用，在动态派发一节中介绍 fun 数组中存储的函数指针是如何被使用的。\"]},\"1140\":{\"h\":\"类型转换\",\"t\":[\"既然我们已经了解了接口在运行时的数据结构，接下来会通过几个例子来深入理解接口类型是如何初始化和传递的，本节会介绍在实现接口时使用指针类型和结构体类型的区别。这两种不同的接口实现方式会导致 Go 语言编译器生成不同的汇编代码，进而影响最终的处理过程。\",\"https://draveness.me/golang/docs/part2-foundation/ch04-basic/golang-interface/#423-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"]},\"1141\":{\"h\":\"Go同步原句与锁\",\"t\":[\"Go原生支持多协程,当提到并发编程、多线程编程时，往往都离不开锁这一概念。锁是一种并发编程中的同步原语（Synchronization Primitives），它能保证多个 Goroutine 在访问同一片内存时不会出现竞争条件（Race condition）等问题。\",\"Go 语言在 sync 包中提供了用于同步的一些基本原语，包括常见的 sync.Mutex、sync.RWMutex、sync.WaitGroup、sync.Once 和 sync.Cond：\"]},\"1142\":{\"h\":\"Mutex\",\"t\":[\"Go语言的sync.Mutex由两个字段state 和sema组成,其中 state 表示当前互斥锁的状态，而 sema 是用于控制锁状态的信号量。\",\"type Mutex struct { state int32 sema uint32 } \",\"上述两个加起来只占 8 字节空间的结构体表示了 Go 语言中的互斥锁。\",\"状态state 互斥锁状态比较复杂,其中最低三位分别表示mutexLocked,mutexWoken和mutexStarving,剩下的位置用来表示当前有多少goroutine在等待互斥锁的释放:\",\"在默认情况下，互斥锁的所有状态位都是 0，int32 中的不同位分别表示了不同的状态：\",\"mutexLocked — 表示互斥锁的锁定状态；\",\"mutexWoken — 表示从正常模式被从唤醒；\",\"mutexStarving — 当前的互斥锁进入饥饿状态；\",\"waitersCount — 当前互斥锁上等待的 Goroutine 个数；\",\"模式:正常模式和饥饿模式\",\"在正常模式下，锁的等待者会按照先进先出的顺序获取锁。但是刚被唤起的 Goroutine 与新创建的 Goroutine 竞争时，大概率会获取不到锁，为了减少这种情况的出现，一旦 Goroutine 超过 1ms 没有获取到锁，它就会将当前互斥锁切换饥饿模式，防止部分 Goroutine 被『饿死』。\",\"在饥饿模式中，互斥锁会直接交给等待队列最前面的 Goroutine。新的 Goroutine 在该状态下不能获取锁、也不会进入自旋状态，它们只会在队列的末尾等待。如果一个 Goroutine 获得了互斥锁并且它在队列的末尾或者它等待的时间少于 1ms，那么当前的互斥锁就会切换回正常模式。\",\"与饥饿模式相比，正常模式下的互斥锁能够提供更好地性能，饥饿模式的能避免 Goroutine 由于陷入等待无法获取锁而造成的高尾延时。\",\"加锁和解锁\",\"我们在这一节中将分别介绍互斥锁的加锁和解锁过程，它们分别使用 sync.Mutex.Lock 和 sync.Mutex.Unlock 方法。\",\"互斥锁的加锁是靠 sync.Mutex.Lock 完成的，最新的 Go 语言源代码中已经将 sync.Mutex.Lock 方法进行了简化，方法的主干只保留最常见、简单的情况 — 当锁的状态是 0 时，将 mutexLocked 位置成 1\",\"如果互斥锁状态不是1,当前gouroutine就尝试自旋等待锁的释放,该方法是一个非常大的for循环,分成以下几步:\",\"判断当前 Goroutine 能否进入自旋；\",\"通过自旋等待互斥锁的释放；\",\"计算互斥锁的最新状态；\",\"更新互斥锁的状态并获取锁；\",\"第一步,判断当前Goroutine能否进入自旋等互斥锁的释放比较严苛:\",\"互斥锁只有在普通模式才能进入自旋；\",\"runtime.sync_runtime_canSpin 需要返回 true：\",\"运行在多 CPU 的机器上；\",\"当前 Goroutine 为了获取该锁进入自旋的次数小于四次；\",\"当前机器上至少存在一个正在运行的处理器 P 并且处理的运行队列为空；\",\"一旦当前 Goroutine 能够进入自旋就会调用runtime.sync_runtime_doSpin 和 runtime.procyield 并执行 30 次的 PAUSE 指令，该指令只会占用 CPU 并消耗 CPU 时间\",\"处理了自旋逻辑后,互斥锁会 根据上下文计算当前互斥锁的最新状态,几个不同的条件分别会更新 state 字段中存储的不同信息 — mutexLocked、mutexStarving、mutexWoken 和 mutexWaiterShift.\",\"计算了新的互斥锁状态之后，会使用 CAS 函数 sync/atomic.CompareAndSwapInt32 更新状态, 如果没有通过CAS获得锁,就会调用 runtime.sync_runtime_SemacquireMutex 通过信号量保证资源不会被两个 Goroutine 获取。runtime.sync_runtime_SemacquireMutex 会在方法中不断尝试获取锁并陷入休眠等待信号量的释放，一旦当前 Goroutine 可以获取信号量，它就会立刻返回，sync.Mutex.Lock 的剩余代码也会继续执行。\",\"在正常模式下，这段代码会设置唤醒和饥饿标记、重置迭代次数并重新执行获取锁的循环；\",\"在饥饿模式下，当前 Goroutine 会获得互斥锁，如果等待队列中只存在当前 Goroutine，互斥锁还会从饥饿模式中退出；\",\"解锁\",\"互斥锁的解锁过程 sync.Mutex.Unlock 与加锁过程相比就很简单，该过程会先使用 sync/atomic.AddInt32 函数快速解锁，这时会发生下面的两种情况：\",\"如果该函数返回的新状态等于 0，当前 Goroutine 就成功解锁了互斥锁；\",\"如果该函数返回的新状态不等于 0，这段代码会调用 sync.Mutex.unlockSlow 开始慢速解锁：\",\"sync.Mutex.unlockSlow 会先校验锁状态的合法性 — 如果当前互斥锁已经被解锁过了会直接抛出异常 “sync: unlock of unlocked mutex” 中止当前程序。\"]},\"1143\":{\"h\":\"RWMutex\",\"t\":[\"读写互斥锁 sync.RWMutex 是细粒度的互斥锁，它不限制资源的并发读，但是读写、写写操作无法并行执行。\",\"读\",\"写\",\"读\",\"Y\",\"写\",\"N\",\"常见服务的资源读写比例会非常高，因为大多数的读请求之间不会相互影响，所以我们可以分离读写操作，以此来提高服务的性能。\",\"sync.RWMutex 中总共包含以下 5 个字段：\",\"type RWMutex struct { w Mutex writerSem uint32 readerSem uint32 readerCount int32 readerWait int32 } \",\"w — 复用互斥锁提供的能力；\",\"writerSem 和 readerSem — 分别用于写等待读和读等待写：\",\"readerCount 存储了当前正在执行的读操作数量；\",\"readerWait 表示当写操作被阻塞时等待的读操作个数；\",\"我们会依次分析获取写锁和读锁的实现原理，其中：\",\"写操作使用 sync.RWMutex.Lock 和 sync.RWMutex.Unlock 方法；\",\"读操作使用 sync.RWMutex.RLock 和 sync.RWMutex.RUnlock 方法；\",\"写锁\",\"当资源的使用者想要获取写锁时，需要调用 sync.RWMutex.Lock 方法：\",\"调用结构体持有的 sync.Mutex 结构体的 sync.Mutex.Lock 阻塞后续的写操作； \",\"因为互斥锁已经被获取，其他 Goroutine 在获取写锁时会进入自旋或者休眠；\",\"调用 sync/atomic.AddInt32 函数阻塞后续的读操作：\",\"如果仍然有其他 Goroutine 持有互斥锁的读锁，该 Goroutine 会调用 runtime.sync_runtime_SemacquireMutex 进入休眠状态等待所有读锁所有者执行结束后释放 writerSem 信号量将当前协程唤醒；\",\"写锁的释放会调用 sync.RWMutex.Unlock\",\"与加锁的过程正好相反，写锁的释放分以下几个执行：\",\"调用 sync/atomic.AddInt32 函数将 readerCount 变回正数，释放读锁；\",\"通过 for 循环释放所有因为获取读锁而陷入等待的 Goroutine：\",\"调用 sync.Mutex.Unlock 释放写锁；\",\"获取写锁时会先阻塞写锁的获取，后阻塞读锁的获取，这种策略能够保证读操作不会被连续的写操作『饿死』。\",\"读锁\",\"读锁的加锁方法 sync.RWMutex.RLock 很简单，该方法会通过 sync/atomic.AddInt32 将 readerCount 加一：\",\"如果该方法返回负数 — 其他 Goroutine 获得了写锁，当前 Goroutine 就会调用 runtime.sync_runtime_SemacquireMutex 陷入休眠等待锁的释放；\",\"如果该方法的结果为非负数 — 没有 Goroutine 获得写锁，当前方法会成功返回；\",\"当 Goroutine 想要释放读锁时，会调用如下所示的 sync.RWMutex.RUnlock 方法：\",\"该方法会先减少正在读资源的 readerCount 整数，根据 sync/atomic.AddInt32 的返回值不同会分别进行处理：\",\"如果返回值大于等于零 — 读锁直接解锁成功；\",\"如果返回值小于零 — 有一个正在执行的写操作，在这时会调用sync.RWMutex.rUnlockSlow 方法；\",\"sync.RWMutex.rUnlockSlow 会减少获取锁的写操作等待的读操作数 readerWait 并在所有读操作都被释放之后触发写操作的信号量 writerSem，该信号量被触发时，调度器就会唤醒尝试获取写锁的 Goroutine。\"]},\"1144\":{\"h\":\"WaitGroup\",\"t\":[\"sync.WaitGroup 可以等待一组 Goroutine 的返回，一个比较常见的使用场景是批量发出 RPC 或者 HTTP 请求, 我们可以通过 sync.WaitGroup 将原本顺序执行的代码在多个 Goroutine 中并发执行，加快程序处理的速度。\",\"结构体\",\"type WaitGroup struct { noCopy noCopy state1 [3]uint32 } \",\"noCopy — 保证 sync.WaitGroup 不会被开发者通过再赋值的方式拷贝；\",\"state1 — 存储着状态和信号量；\",\"sync.noCopy 是一个特殊的私有结构体，tools/go/analysis/passes/copylock 包中的分析器会在编译期间检查被拷贝的变量中是否包含 sync.noCopy 或者实现了 Lock 和 Unlock 方法，如果包含该结构体或者实现了对应的方法就会报出以下错误\",\"./prog.go:10:10: assignment copies lock value to yawg: sync.WaitGroup ./prog.go:11:14: call of fmt.Println copies lock value: sync.WaitGroup ./prog.go:11:18: call of fmt.Println copies lock value: sync.WaitGroup \",\"这段代码会因为变量赋值或者调用函数时发生值拷贝导致分析器报错\",\"除了 sync.noCopy 之外，sync.WaitGroup` 结构体中还包含一个总共占用 12 字节的数组，这个数组会存储当前结构体的状态，在 64 位与 32 位的机器上表现也非常不同。\",\"sync.WaitGroup 提供的私有方法 sync.WaitGroup.state 能够帮我们从 state1 字段中取出它的状态和信号量。\",\"sync.WaitGroup 对外暴露了三个方法 — sync.WaitGroup.Add、sync.WaitGroup.Wait 和 sync.WaitGroup.Done。\",\"因为其中的 sync.WaitGroup.Done 只是向 sync.WaitGroup.Add 方法传入了 -1，所以我们重点分析另外两个方法，即 sync.WaitGroup.Add 和 sync.WaitGroup.Wait：\",\"sync.WaitGroup.Add 可以更新 sync.WaitGroup 中的计数器 counter。虽然 sync.WaitGroup.Add 方法传入的参数可以为负数，但是计数器只能是非负数，一旦出现负数就会发生程序崩溃。当调用计数器归零，即所有任务都执行完成时，才会通过 sync.runtime_Semrelease 唤醒处于等待状态的 Goroutine。\",\"sync.WaitGroup 的另一个方法 sync.WaitGroup.Wait 会在计数器大于 0 并且不存在等待的 Goroutine 时，调用 runtime.sync_runtime_Semacquire 陷入睡眠。\",\"当 sync.WaitGroup 的计数器归零时，陷入睡眠状态的 Goroutine 会被唤醒，上述方法也会立刻返回。\",\"通过对 sync.WaitGroup 的分析和研究，我们能够得出以下结论：\",\"sync.WaitGroup 必须在 sync.WaitGroup.Wait 方法返回之后才能被重新使用；\",\"sync.WaitGroup.Done 只是对 sync.WaitGroup.Add 方法的简单封装，我们可以向 sync.WaitGroup.Add 方法传入任意负数（需要保证计数器非负）快速将计数器归零以唤醒等待的 Goroutine；\",\"可以同时有多个 Goroutine 等待当前 sync.WaitGroup 计数器的归零，这些 Goroutine 会被同时唤醒；\"]},\"1145\":{\"h\":\"Once\",\"t\":[\"结构体\",\"每一个 sync.Once 结构体中都只包含一个用于标识代码块是否执行过的 done 以及一个互斥锁 sync.Mutex：\",\"type Once struct { done uint32 m Mutex } \",\"sync.Once.Do 是 sync.Once 结构体对外唯一暴露的方法，该方法会接收一个入参为空的函数：\",\"如果传入的函数已经执行过，会直接返回；\",\"如果传入的函数没有执行过，会调用 sync.Once.doSlow 执行传入的函数：\",\"func (o *Once) Do(f func()) { if atomic.LoadUint32(&o.done) == 0 { o.doSlow(f) } } func (o *Once) doSlow(f func()) { o.m.Lock() defer o.m.Unlock() if o.done == 0 { defer atomic.StoreUint32(&o.done, 1) f() } } \",\"为当前 Goroutine 获取互斥锁；\",\"执行传入的无入参函数；\",\"运行延迟函数调用，将成员变量 done 更新成 1；\",\"sync.Once 会通过成员变量 done 确保函数不会执行第二次。\"]},\"1146\":{\"h\":\"Cond\",\"t\":[\"Go 语言标准库中还包含条件变量 sync.Cond，它可以让一组的 Goroutine 都在满足特定条件时被唤醒。每一个 sync.Cond 结构体在初始化时都需要传入一个互斥锁，我们可以通过下面的例子了解它的使用方法：\",\"var status int64 func main() { c := sync.NewCond(&sync.Mutex{}) for i := 0; i < 10; i++ { go listen(c) } time.Sleep(1 * time.Second) go broadcast(c) ch := make(chan os.Signal, 1) signal.Notify(ch, os.Interrupt) <-ch } func broadcast(c *sync.Cond) { c.L.Lock() atomic.StoreInt64(&status, 1) c.Broadcast() c.L.Unlock() } func listen(c *sync.Cond) { c.L.Lock() for atomic.LoadInt64(&status) != 1 { c.Wait() } fmt.Println(\\\"listen\\\") c.L.Unlock() } $ go run main.go listen ... listen \",\"sync.Cond 的结构体中包含以下 4 个字段：\",\"type Cond struct { noCopy noCopy L Locker notify notifyList checker copyChecker } \",\"noCopy — 用于保证结构体不会在编译期间拷贝；\",\"copyChecker — 用于禁止运行期间发生的拷贝；\",\"L — 用于保护内部的 notify 字段，Locker 接口类型的变量；\",\"notify — 一个 Goroutine 的链表，它是实现同步机制的核心结构；\",\"type notifyList struct { wait uint32 notify uint32 lock mutex head *sudog tail *sudog } \",\"sync.Cond 对外暴露的 sync.Cond.Wait 方法会将当前 Goroutine 陷入休眠状态，它的执行过程分成以下两个步骤：\",\"调用 runtime.notifyListAdd 将等待计数器加一并解锁；\",\"调用 runtime.notifyListWait 等待其他 Goroutine 的唤醒并加锁：\",\"除了将当前 Goroutine 追加到链表的末端之外，我们还会调用 runtime.goparkunlock 将当前 Goroutine 陷入休眠，该函数也是在 Go 语言切换 Goroutine 时经常会使用的方法，它会直接让出当前处理器的使用权并等待调度器的唤醒。\",\"sync.Cond.Signal 和 sync.Cond.Broadcast 就是用来唤醒陷入休眠的 Goroutine 的方法，它们的实现有一些细微的差别：\",\"sync.Cond.Signal 方法会唤醒队列最前面的 Goroutine；\",\"sync.Cond.Broadcast 方法会唤醒队列中全部的 Goroutine；\",\"runtime.notifyListNotifyOne 只会从 sync.notifyList 链表中找到满足 sudog.ticket == l.notify 条件的 Goroutine 并通过 runtime.readyWithTime 唤醒：\",\"Goroutine 的唤醒顺序也是按照加入队列的先后顺序，先加入的会先被唤醒，而后加入的可能 Goroutine 需要等待调度器的调度。\",\"在一般情况下，我们都会先调用 sync.Cond.Wait 陷入休眠等待满足期望条件，当满足唤醒条件时，就可以选择使用 sync.Cond.Signal 或者 sync.Cond.Broadcast 唤醒一个或者全部的 Goroutine。\"]},\"1147\":{\"h\":\"内存分配\",\"t\":[\"TCMalloc是Thread Cache Malloc的简称,是Go内存管理的起源,Go的内存管理是借鉴了TCMalloc: 内存碎片:随着内存的不断分配申请释放,会有很多碎片,解决:可以将两个连续的未使用的内存块合并 大锁,同一进程的线程共享内存,访问内存需要加锁\"]},\"1148\":{\"h\":\"内存布局\",\"t\":[\"page:内存块,一张8kb大小的内存空间,Go与操作系统之间的内存申请和释放都是以page为单位的\",\"span:内存快,一个或多个连续的page组成一个span\",\"sizeclass:内存规格,每个span都有一个sizeclass,标记着span中的page如何使用\",\"object对象:用来存储一个变量数据内存空间,一个span在初始化的时候,会被切割成一堆等大的object,假设object的大小是16b,span大小是8kb,则这个span的page就会切割成8kb/16b=512个object\"]},\"1149\":{\"h\":\"小于32KB的内存分配\",\"t\":[\"当程序里发生了小于32kb以下的小块内存分配,Go会从一个叫做mcache的本地内存缓存里分配内存,这样的一个内存块叫做span,它是要给程序分配内存时的分配单元.\",\"Go语言调度模型里面,每一个线程M都会绑定一个处理器P,在单一粒度的时间里,只能做多处理一个goroutinen,每个P都会绑定一个上面所说的mcache.当内存需要分配时,当前运行的goroutine会从mcache中查找可用的mspan,从本地mcache里分配内存不需要加锁,这样分配效率更高\",\"申请内存时会给他们分配一个mspan这样的单元会不会产生浪费,其实mcache持有的一系列mspan并不是固定大小的,而是按照大小从8b到32kb分配了大概67*2类的mspan,每个内存页分为多级固定大小的空闲列表,这有助于减少碎片.\",\"那如果申请内存时mcache里没有空闲对口的sizeclass的span呢? Go还为每一个mspan的种类维护着一个mcentral.它的作用是为所有的mcache提供切割好的mspan资源,每一个central会持有一种特定大小的mspan,当工作线程的mcache中没有合适大小的mspan时就去mcentral中获取\",\"mcentral被所有的工作线程共同享有,存在多个goroutine竞争的情况因此mcentral需要加锁,mcentral里维护着两个双向链表,nonempty表示里面还有空闲的mspan等待分配,empty表示这个链表里面的mspan都被分配到了mspan里.\",\"程序申请内存的时候,如果mcache没有空闲的mspan了,那么工作线程就像下图一样去获取和归还mspan的流程:\",\"获取加锁,从nonempty链表里面找到一个可用的mspan,并将其从nonempty中删除,将取出的mspan加入到empty链表中,将mspan返回给工作线程,解锁.\",\"归还加锁,将mspan从empty中删除,将mspan加入到nonempty链表,解锁\",\"mcentral是sizeclass相同的span会以链表的形式组织在一起,就是指该mspan用来存储哪种大小的对象\",\"如果mcentral如果不够了,还有一个mheap申请,而如果mheap没有资源了, mheap会向操作系统申请新内存,mheap主要用于大对象的分配以及管理未分割的mspan,用于给mcentral切割成小对象.\",\"mheap中含有所有规格的mcentral所以当一个mcache从mcentral申请mspan时,只需要在独立的mcentral中使用锁,并不会影响申请其他规格的mspan\",\"所有mcentral的集合是存放于mheap中的,mheap里的arena区域是真正的堆区,运行时会将8kb看作一页,这些内存页中存储了所有在堆上初始化的对象,运行时使用二维的runtime.heapArena数组管理所有内存,每个runtime.heapAreana都会管理64MB的内存,如果arean区域没有足够的空间,会调用runtime.mheap.sysAlloc从操作系统中申请更多的内存.\",\"arena是一个二维数组,其包含4M个区域,最大有4M*64MB = 256TB的虚拟空间\",\"大于32kb内存分配\",\"Go没法使用工作线程的本地缓存mcache和全局中心缓存mcentral上管理超过32kb的内存申请,所以当需要为超过32kb的内存申请时,会直接在堆上分配对应数量的内存页给程序\"]},\"1150\":{\"h\":\"小于16kb对象的分配\",\"t\":[\"对于小于16字节的对象,Go语言将其划分成了tiny对象,划分tiny对象的主要目的是为了处理极小的字符串和独立的转意变量.对json的基准测试表明,使用tiny对象减少了12%的分配次数和20%的堆大小,tiny对象会被放入class为2的span中.\",\"首先查看之前分配的元素中是否还有多余空间\",\"如果当前分配大小不够,例如要分配16b大小这时需要查找下一个空闲元素\",\"tiny分配的第一步是尝试利用分配过前一个元素的空间达到节省内存的目的.\",\"总结: 一般小对象直接通过mspan分配内存,大对象直接通过mheap直接分配内存\",\"Go程序启动时会向操作系统申请一大块内存,由mheap结构构建全局管理\",\"Go内存管理的基本单元是mspan,每种mspan可以分配特定大小的object\",\"mcache,mcentral,mheap是Go内存管理的三大组件,mcache管理本地缓存,mcentral提供全局span供mcache使用\"]},\"1151\":{\"c\":[\"tutorial\"]},\"1152\":{\"c\":[\"golang\"]},\"1153\":{\"h\":\"Go Bufio 包详解\",\"t\":[\"相关信息\",\"bufio 包是 Go 标准库中的一个包，提供了带缓冲的 I/O 操作，用于提高 I/O 的效率。它封装了 io.Reader 和 io.Writer，并提供了缓冲功能，可以减少系统调用次数，提高读写性能。\",\"下面是对 bufio 包的详细介绍以及一些示例：\",\"创建缓冲读取器（Scanner）：\",\"NewScanner() 函数用于创建一个缓冲读取器，它从指定的 io.Reader 中读取数据。\",\"Scanner 类型提供了方便的方法来逐行或逐个词读取数据。\",\"示例：\",\"file, _ := os.Open(\\\"data.txt\\\") scanner := bufio.NewScanner(file) for scanner.Scan() { line := scanner.Text() fmt.Println(line) } if err := scanner.Err(); err != nil { fmt.Println(\\\"Error:\\\", err) } \",\"创建缓冲写入器（Writer）：\",\"NewWriter() 函数用于创建一个缓冲写入器，它将数据写入指定的 io.Writer。\",\"Writer 类型提供了 Write() 方法，用于将数据写入缓冲区，并在缓冲区满或显式刷新时将数据写入底层的 io.Writer。\",\"示例：\",\"file, _ := os.Create(\\\"output.txt\\\") writer := bufio.NewWriter(file) text := \\\"Hello, World!\\\" writer.WriteString(text) writer.Flush() // 刷新缓冲区，确保所有数据被写入底层的文件 file.Close() \",\"创建带缓冲的读取器（Reader）：\",\"NewReader() 函数用于创建一个带缓冲的读取器，它从指定的 io.Reader 中读取数据并提供缓冲机制。\",\"Reader 类型提供了 Read() 方法，用于从缓冲区读取数据，并在缓冲区为空时填充缓冲区。\",\"示例：\",\"data := []byte(\\\"Hello, World!\\\") reader := bufio.NewReader(bytes.NewReader(data)) buffer := make([]byte, 5) for { n, err := reader.Read(buffer) if err != nil && err != io.EOF { fmt.Println(\\\"Error:\\\", err) break } if n == 0 { break } fmt.Println(string(buffer[:n])) } \",\"bufio 包还提供了其他一些函数和类型，例如 ReadString()、WriteString()、Scanner 的定界符设定、更高级的缓冲写入器等。这些功能都可以帮助你更高效地进行 I/O 操作。\",\"请注意，在使用完缓冲读取器或缓冲写入器后，务必调用 Scanner、Writer 或 Reader 的 Flush() 方法，以确保所有数据被写入或读取。\",\"这是对 bufio 包的简要介绍和示例。使用 bufio 包可以提高 I/O 操作的效率，并简化对输入输出的处理。\"]},\"1154\":{\"c\":[\"tutorial\"]},\"1155\":{\"c\":[\"golang\"]},\"1156\":{\"h\":\"Go Context包详解\",\"t\":[\"相关信息\",\"context 包定义了 Context 类型，它在 API 边界和进程之间传递截止时间、取消信号和其他与请求相关的值。\",\"这样说可能你还是一脸懵。\",\"举例\",\"可以将 context 想象成传递信号的工具，类似于你向一个进程发送信号，告诉它该做什么或者取消它正在做的事情。\",\"假设你是一名团队的领导，你负责协调团队中的各个成员完成任务。你希望每个成员都能在规定的时间内完成自己的任务，如果有需要的话，你还想提前告知他们任务的截止时间或者取消任务。在这种情况下，你可以使用 context 包来实现这些功能。\",\"下面是一些示例，帮助你理解 context 包的基本概念和用法：\",\"创建一个根上下文（Background Context）就像是你作为领导创建了一个规定了整个团队工作时间的时钟，每个人都应该在这个时间内完成自己的任务。你可以将根上下文视为一个默认的上下文，用于传递截止时间和取消信号。\",\"使用 WithCancel、WithDeadline 或 WithTimeout 函数可以创建派生的上下文，就像你告知每个成员任务的截止时间，并提供一个按钮，让他们在时间到达之前取消任务。这些函数返回一个派生的上下文和一个取消函数，当调用取消函数时，任务将被取消。\",\"在函数之间传递上下文，就像你将任务的要求和指示从一个人传递给另一个人，确保每个人都知道任务的要求和截止时间。\",\"当一个上下文被取消时，所有从它派生的上下文也会被取消，就像当你决定取消整个团队的任务时，每个成员都会被告知任务取消，并停止执行。\",\"使用 context 包有助于在并发环境中进行任务管理、传递请求的元数据和控制任务的生命周期。\"]},\"1157\":{\"c\":[\"tutorial\"]},\"1158\":{\"c\":[\"golang\"]},\"1159\":{\"h\":\"Go flag 包详解\"},\"1160\":{\"h\":\"介绍\",\"t\":[\"相关信息\",\"flag 包是 Go 语言标准库中的一个包，用于解析命令行参数。它提供了一种方便的方式来定义和解析命令行参数，使得开发命令行工具和应用程序更加简单和灵活。\",\"相关信息\",\"flag 包的主要功能包括：\",\"定义命令行参数的类型和默认值\",\"解析命令行参数，并将其赋值给对应的变量\",\"提供帮助信息和用法说明\"]},\"1161\":{\"h\":\"简单例子\",\"t\":[\"下面是一个示例，假设我们要编写一个简单的命令行工具，用于计算两个整数的和。我们可以使用 flag 包来定义并解析命令行参数。\",\"package main import ( \\\"flag\\\" \\\"fmt\\\" ) func main() { // 定义命令行参数 num1 := flag.Int(\\\"num1\\\", 0, \\\"第一个整数\\\") num2 := flag.Int(\\\"num2\\\", 0, \\\"第二个整数\\\") // 解析命令行参数 flag.Parse() // 计算和 sum := *num1 + *num2 // 输出结果 fmt.Println(\\\"和:\\\", sum) } \",\"在上面的示例中，我们首先使用 flag.Int 函数定义了两个命令行参数 num1 和 num2，分别表示两个整数。这些参数的默认值为 0，而第三个参数是用于帮助信息的描述。\",\"接下来，我们调用 flag.Parse() 函数来解析命令行参数。它会在命令行中查找定义的参数，并将相应的值赋给对应的变量。\",\"最后，我们将两个整数相加，并输出结果。\",\"现在我们可以在命令行中运行该程序，并指定命令行参数：\",\"$ go run main.go -num1=10 -num2=20 和: 30 \",\"以上示例演示了如何使用 flag 包来定义和解析命令行参数，使得我们可以灵活地通过命令行来控制程序的行为。我们可以通过flag包进一步开发自己的命令行工具和应用程序。\",\"flag 包还支持以下几种常用的命令行参数类型：\",\"布尔类型（bool）：\",\"用法：flag.Bool(name string, value bool, usage string) *bool\",\"示例：verbose := flag.Bool(\\\"verbose\\\", false, \\\"显示详细信息\\\")\",\"描述：布尔类型的命令行参数用于表示某个选项是否开启或关闭。如果命令行中指定了该选项，则对应的布尔变量会被设置为 true，否则为 false。\",\"整数类型（int）：\",\"用法：flag.Int(name string, value int, usage string) *int\",\"示例：count := flag.Int(\\\"count\\\", 0, \\\"重试次数\\\")\",\"描述：整数类型的命令行参数用于表示整数值。通过命令行指定的整数值会被解析并赋值给对应的整数变量。\",\"字符串类型（string）：\",\"用法：flag.String(name string, value string, usage string) *string\",\"示例：name := flag.String(\\\"name\\\", \\\"\\\", \\\"姓名\\\")\",\"描述：字符串类型的命令行参数用于表示文本字符串。命令行中指定的字符串值会被解析并赋值给对应的字符串变量。\",\"浮点数类型（float64）：\",\"用法：flag.Float64(name string, value float64, usage string) *float64\",\"示例：price := flag.Float64(\\\"price\\\", 0.0, \\\"价格\\\")\",\"描述：浮点数类型的命令行参数用于表示浮点数值。命令行中指定的浮点数值会被解析并赋值给对应的浮点数变量。\",\"其他类型：\",\"Int64、Uint、Uint64：类似于整数类型，但是支持更大的整数范围。\",\"Duration：用于表示时间段的类型，可以解析包含时间单位的字符串，如 \\\"10s\\\"、\\\"1h30m\\\"。\",\"IP、IPMask：用于表示 IP 地址和 IP 子网掩码的类型。\",\"Var：用于自定义类型的命令行参数，需要实现 flag.Value 接口。\",\"通过使用这些不同类型的命令行参数，可以满足各种不同类型数据的需求，并且 flag 包提供了简单易用的方法来解析和处理这些命令行参数。\",\"以下是一个示例，展示了 flag 包中常用的命令行参数类型：\",\"package main import ( \\\"flag\\\" \\\"fmt\\\" ) func main() { // 定义命令行参数 verbose := flag.Bool(\\\"verbose\\\", false, \\\"显示详细信息\\\") count := flag.Int(\\\"count\\\", 0, \\\"重试次数\\\") name := flag.String(\\\"name\\\", \\\"\\\", \\\"姓名\\\") price := flag.Float64(\\\"price\\\", 0.0, \\\"价格\\\") // 解析命令行参数 flag.Parse() // 输出解析后的命令行参数 fmt.Println(\\\"Verbose:\\\", *verbose) fmt.Println(\\\"Count:\\\", *count) fmt.Println(\\\"Name:\\\", *name) fmt.Println(\\\"Price:\\\", *price) } \",\"在上述示例中，我们定义了四个不同类型的命令行参数：\",\"verbose 是一个布尔类型的参数，用于表示是否显示详细信息。\",\"count 是一个整数类型的参数，用于表示重试次数。\",\"name 是一个字符串类型的参数，用于表示姓名。\",\"price 是一个浮点数类型的参数，用于表示价格。\",\"通过使用 flag.Bool、flag.Int、flag.String 和 flag.Float64 函数，我们定义了这些不同类型的命令行参数，并为每个参数指定了名称、默认值和帮助信息。\",\"接下来，我们调用 flag.Parse() 函数来解析命令行参数。然后，我们使用指针解引用的方式获取每个命令行参数的值，并将其打印出来。\",\"现在我们可以在命令行中运行该程序，并指定不同的命令行参数：\",\"$ go run main.go -verbose -count=3 -name=John -price=9.99 Verbose: true Count: 3 Name: John Price: 9.99 \",\"通过修改命令行参数的值，你可以尝试不同类型的参数并观察输出结果。\"]},\"1162\":{\"h\":\"Var形式\",\"t\":[\"flag不仅仅支持直接类型的形式解析，还支持直接解析覆盖值的形式来解析命令行数据，比如BoolVar。\",\"示例\",\"package main import ( \\\"flag\\\" \\\"fmt\\\" ) func main() { // 定义命令行参数 var verbose bool flag.BoolVar(&verbose, \\\"verbose\\\", false, \\\"显示详细信息\\\") var count int flag.IntVar(&count, \\\"count\\\", 0, \\\"重试次数\\\") // 解析命令行参数 flag.Parse() // 输出解析后的命令行参数 fmt.Println(\\\"Verbose:\\\", verbose) fmt.Println(\\\"Count:\\\", count) } \",\"在上述示例中，我们使用 BoolVar 和 IntVar 函数创建了布尔类型和整数类型的命令行参数。\",\"BoolVar 函数用于创建一个布尔类型的命令行参数，并将解析后的值存储在对应的布尔变量中。它的参数包括一个布尔变量的指针，命令行参数的名称，命令行参数的默认值以及对该命令行参数的简短描述。\",\"IntVar 函数用于创建一个整数类型的命令行参数，并将解析后的值存储在对应的整数变量中。它的参数包括一个整数变量的指针，命令行参数的名称，命令行参数的默认值以及对该命令行参数的简短描述。\",\"通过调用 flag.Parse() 函数，我们可以解析命令行参数并将其赋值给相应的变量。\",\"下面是在命令行中运行该程序并指定不同的命令行参数的示例：\",\"$ go run main.go -verbose -count=3 Verbose: true Count: 3 \",\"通过修改命令行参数的值，您可以尝试不同的布尔值和整数值，并观察输出结果。这将帮助您更好地理解和使用 flag 包中的 BoolVar 和 IntVar 函数。\"]},\"1163\":{\"h\":\"自定义类型解析\",\"t\":[\"flag.TypeVar 是 flag 包中用于自定义类型的命令行参数的函数。通过实现 flag.Value 接口，我们可以创建自己的类型，并在命令行参数中使用。\",\"flag.Value接口：\",\"type Value interface { String() string Set(string) error } \",\"以下是一个示例，展示了如何使用 flag.TypeVar 创建自定义类型的命令行参数：\",\"flag.TypeVar 是 flag 包中用于自定义类型的命令行参数的函数。通过实现 flag.Value 接口，我们可以创建自己的类型，并在命令行参数中使用。\",\"package main import ( \\\"flag\\\" \\\"fmt\\\" \\\"strconv\\\" ) // CustomType 是自定义的类型 type CustomType int // String 返回 CustomType 的字符串表示 func (c CustomType) String() string { return strconv.Itoa(int(c)) } // Set 解析命令行参数并设置 CustomType 的值 func (c *CustomType) Set(value string) error { // 在这里可以进行自定义类型的解析和处理 // 这里简单地将命令行参数转换为整数并赋值给 CustomType num, err := strconv.Atoi(value) if err != nil { return err } *c = CustomType(num) return nil } func main() { // 定义命令行参数 var custom CustomType flag.Var(&custom, \\\"custom\\\", \\\"自定义参数\\\") // 解析命令行参数 flag.Parse() // 输出解析后的命令行参数 fmt.Println(\\\"Custom:\\\", custom) } \",\"在上面的示例中，我们定义了一个名为 CustomType 的自定义类型，并实现了 flag.Value 接口的两个方法：String 和 Set。\",\"String 方法用于返回自定义类型 CustomType 的字符串表示，这里我们将其转换为整数类型的字符串。\",\"Set 方法用于解析命令行参数并设置自定义类型 CustomType 的值。在这个示例中，我们将命令行参数转换为整数，并将其赋值给 CustomType 变量。\",\"接下来，我们使用 flag.Var 函数注册自定义类型的命令行参数。通过传入一个实现了 flag.Value 接口的变量的指针，我们告诉 flag 包应该如何解析和处理该类型的命令行参数。\",\"最后，我们调用 flag.Parse() 函数来解析命令行参数。在解析完成后，我们可以通过直接访问自定义类型的变量来获取解析后的值，并将其打印出来。\",\"现在我们可以在命令行中运行该程序，并指定自定义类型的命令行参数：\",\"$ go run main.go -custom=42 Custom: 42 \",\"当然如果你只是想获得命令行参数，就不需要flag包了，os.Args就可以解决：\",\"os.Args 是一个字符串切片，用于访问命令行参数。它存储了程序启动时传递给程序的所有命令行参数，包括程序名称本身。\",\"以下是一个示例，展示了如何使用 os.Args 来获取和遍历命令行参数：\",\"package main import ( \\\"fmt\\\" \\\"os\\\" ) func main() { // 获取命令行参数 args := os.Args // 遍历命令行参数 for index, arg := range args { fmt.Printf(\\\"参数 %d: %s\\\\n\\\", index, arg) } } \",\"在上述示例中，我们使用 os.Args 获取了所有的命令行参数，并将它们存储在 args 变量中。\",\"然后，我们使用 range 循环遍历 args 切片，获取每个命令行参数的索引和值。通过 %d 和 %s 占位符，我们将参数的索引和值打印出来。\",\"现在我们可以在命令行中运行该程序，并指定不同的命令行参数：\",\"$ go run main.go arg1 arg2 arg3 参数 0: main.go 参数 1: arg1 参数 2: arg2 参数 3: arg3 \",\"在上面的示例中，main.go 是程序的名称，arg1、arg2 和 arg3 是用户传递给程序的自定义命令行参数。通过遍历 os.Args 切片，我们可以获取和处理这些命令行参数。\",\"使用 os.Args 可以访问和处理命令行参数，从而根据程序的需求来执行相应的逻辑操作。\"]},\"1164\":{\"c\":[\"tutorial\"]},\"1165\":{\"c\":[\"golang\"]},\"1166\":{\"h\":\"Go fmt 包详解\",\"t\":[\"相关信息\",\"相信很多人入坑Go语言都是从官网的fmt.Println(\\\"Hello World\\\")入门的\",\"这篇文章带你好好了解一下fmt包还可以做哪些事情。\",\"相关信息\",\"在Go语言中，我们经常使用 fmt 包进行格式化输入输出操作。虽然大多数时候我们只会使用 Print...、Sprint... 和 Errorf 等少数函数，也只会用到一些常见的占位符，但这并不代表我们不需要了解 fmt 包的其他特性, 本文就来详细介绍fmt包。\",\"fmt 包实现了类似于C语言的格式化输入输出函数。\"]},\"1167\":{\"h\":\"Print 系列函数\",\"t\":[\"func Print(a ...interface{}) (n int, err error) func Printf(format string, a ...interface{}) (n int, err error) func Println(a ...interface{}) (n int, err error) \",\"Print 系列函数会将内容输出到标准输出，Print 函数直接输出内容，Printf 支持格式化输出，Println 每次输出的内容都会加一个换行符。\",\"例如：\",\"fmt.Print(\\\"123\\\") fmt.Printf(\\\"%d\\\", 456) fmt.Print(\\\"789\\\") fmt.Printf(\\\"%d\\\\n\\\", 123) fmt.Println(\\\"123\\\") fmt.Println(\\\"456\\\") \",\"输出：\",\"123456789123 123 456 \"]},\"1168\":{\"h\":\"Sprint 系列函数\",\"t\":[\"func Sprint(a ...interface{}) string func Sprintf(format string, a ...interface{}) string func Sprintln(a ...interface{}) string \",\"Sprint 系列函数会将内容输出为字符串，区别在于 Sprint 直接输出内容，Sprintf 将后面的内容映射到对应的占位符，Sprintln 会在内容后面添加一个换行符。\",\"例如：\",\"s1 := fmt.Sprint(\\\"123\\\") s2 := fmt.Sprintf(\\\"name:%s,age:%d\\\", \\\"Lixin\\\", 21) s3 := fmt.Sprintln(\\\"456\\\") fmt.Println(s1, s2, s3) \",\"输出：\",\"123 name:Lixin,age:21 456 \"]},\"1169\":{\"h\":\"Fprint 系列函数\",\"t\":[\"func Fprint(w io.Writer, a ...interface{}) (n int, err error) func Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error) func Fprintln(w io.Writer, a ...interface{}) (n int, err error) \",\"Fprint 系列函数会将内容输出到实现了 io.Writer 接口的变量，常见用法是向文件中写入内容，也可以向终端输出内容（很少见）。\",\"例如，向标准输出写入内容：\",\"fmt.Fprintln(os.Stdout, \\\"向标准输出写入内容\\\") fileObj, err := os.OpenFile(\\\"./output.txt\\\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644) if err != nil { panic(err) } name := \\\"Lixin\\\" // 向打开的文件句柄中写入内容 fmt.Fprintf(fileObj, \\\"往文件中写入信息\\\\nname: %s\\\\nage: %d\\\", name, 21) \",\"输出的内容为：\",\"向标准输出写入内容 \",\"文件 output.txt 的内容为：\",\"往文件中写入信息 name: Lixin age: 21 \"]},\"1170\":{\"h\":\"Errors\",\"t\":[\"Errorf 类似于 Printf，但返回一个包含该字符串的错误。\",\"通常我们\",\"会返回这样的错误：\",\"var err error // ... return fmt.Errorf(\\\"Error: %v\\\", err) \"]},\"1171\":{\"h\":\"Scan 系列函数\",\"t\":[\"func Scan(a ...interface{}) (n int, err error) func Scanf(format string, a ...interface{}) (n int, err error) func Scanln(a ...interface{}) (n int, err error) \",\"Scan 系列函数用于从标准输入中扫描文本，并根据 format 参数指定的格式将对应的值映射到 a... 的参数中。\",\"Scan 函数根据空格来区分输入的值，Scanf 根据 format 来区分值，Scanln 根据回车来停止扫描。\",\"例如：\",\"var name string var age int fmt.Scanln(&name, &age) fmt.Printf(\\\"name: %s, age: %d\\\", name, age) \",\"输入 Lixin 21，输出：\",\"name: Lixin, age: 21 \",\"Scanf 的示例：\",\"var name string var age int fmt.Scanf(\\\"name:%s age:%d\\\", &name, &age) fmt.Printf(\\\"name: %s, age: %d\\\", name, age) \",\"输入 name:Lixin age:21，输出：\",\"name: Lixin, age: 21 \"]},\"1172\":{\"h\":\"Fscan 系列函数\",\"t\":[\"func Fscan(r io.Reader, a ...interface{}) (n int, err error) func Fscanln(r io.Reader, a ...interface{}) (n int, err error) func Fscanf(r io.Reader, format string, a ...interface{}) (n int, err error) \",\"Fscan 系列函数可以从标准输入中读取数据，例如文件或命令行中的输入。\",\"如果想从文件中读取内容：\",\"var s string f, _ := os.OpenFile(\\\"./output.txt\\\", os.O_CREATE|os.O_RDWR, 0644) reader := bufio.NewReader(f) fmt.Fscan(reader, &s) fmt.Printf(\\\"读取的字符串是：%s\\\", s) \",\"如果文件 output.txt 的内容是 file.Outputn ame: Lixinage: 21，则输出为 读取的字符串是：file.Outputn，因为 Fscan 默认使用空格作为分隔符，无法识别空格后的内容。\",\"如果想从标准输入中读取内容，可以使用以下代码：\",\"var s string reader := bufio.NewReader(os.Stdin) fmt.Fscan(reader, &s) fmt.Printf(\\\"你的输入内容是：%s\\\", s) \",\"输入 Hello, Lixin，输出 你的输入内容是：Hello，同样因为该函数无法识别空格。\",\"Fscanln 函数是根据换行符来停止扫描的，Fscanf 类似于 Scanf，用于映射对应的换行符，这两个函数用法类似。\",\"另外，这里提一下 bufio 包中的 ReadString 函数，用于从指定的 io.Reader 中读取一行字符串，直到遇到指定的分隔符为止。函数签名如下：\",\"func (b *Reader) ReadString(delim byte) (string, error) \",\"例如，如果想读取文件 output.txt 的第一行，并以空格作为分隔符，可以这样写：\",\"f, _ := os.OpenFile(\\\"./output.txt\\\", os.O_RDWR, 0644) reader := bufio.NewReader(f) line, err := reader.ReadString(' ') if err != nil { fmt.Println(err) return } fmt.Printf(\\\"读取的字符串是：%s\\\", line) \",\"如果文件 output.txt 的内容是 file.Outputn ame: Lixinage: 21，则输出为 读取的字符串是：file.Outputn，因为 ReadString 在遇到空格时停止读取。\"]},\"1173\":{\"h\":\"Sscan 系列函数\",\"t\":[\"func Sscan(str string, a ...interface{}) (n int, err error) func Sscanln(str string, a ...interface{}) (n int, err error) func Sscanf(str string, format string, a ...interface{}) (n int, err error) \",\"Sscan 是用于从字符串中读取数据并格式化到指定变量中的函数。\",\"例如：\",\"str := \\\"1 2 3\\\" var a, b, c int n, err := fmt.Sscan(str, &a, &b, &c) if err != nil { fmt.Println(err) return } fmt.Printf(\\\"读取了 %d 个数，分别是：%d,%d,%d\\\", n, a, b, c) \",\"运行该函数，输出：\",\"读取了 3 个数，分别是：1,2,3 \",\"在 Go 语言的 fmt 包中，有一些常见的占位符可以用于格式化输出。以下是一些常用的占位符及其使用方式：\",\"%v：通用的占位符，可以用于格式化任意类型的值。它会根据值的类型自动选择适当的格式。\",\"%d：用于格式化整数类型（包括有符号整数和无符号整数）。\",\"%f：用于格式化浮点数类型。\",\"%s：用于格式化字符串类型。\",\"%t：用于格式化布尔类型。\",\"%c：用于格式化字符类型。\",\"%p：用于格式化指针类型。\",\"以下是一些示例说明如何使用这些占位符：\",\"name := \\\"Lixin\\\" age := 21 pi := 3.14159 isStudent := true fmt.Printf(\\\"Name: %s, Age: %d\\\\n\\\", name, age) // 输出：Name: Lixin, Age: 21 fmt.Printf(\\\"Pi: %.2f\\\\n\\\", pi) // 输出：Pi: 3.14 fmt.Printf(\\\"Is student: %t\\\\n\\\", isStudent) // 输出：Is student: true \",\"在格式化字符串中，占位符用百分号 % 后跟一个字母表示。在 %d 和 %f 等占位符后可以加上一些附加参数来控制格式化的方式。例如，%f 占位符可以使用 .2 来限制浮点数只保留两位小数。\",\"除了 Printf 函数，还有其他的函数如 Sprintf 和 Fprintf 也可以使用这些占位符。Sprintf 函数将格式化的结果作为字符串返回，而 Fprintf 函数将格式化的结果写入一个指定的 io.Writer。\",\"result := fmt.Sprintf(\\\"Name: %s, Age: %d\\\", name, age) fmt.Println(result) // 输出：Name: Lixin, Age: 21 file, _ := os.Create(\\\"output.txt\\\") fmt.Fprintf(file, \\\"Name: %s, Age: %d\\\", name, age) file.Close() \"]},\"1174\":{\"h\":\"总结\",\"t\":[\"这些是 fmt 包中常见的函数和使用方式。具体可以去看官网页面，里面写的很详细\"]},\"1175\":{\"c\":[\"tutorial\"]},\"1176\":{\"c\":[\"golang\"]},\"1177\":{\"h\":\"Go log 包详解\",\"t\":[\"相关信息\",\"之前不知道在哪看到过一句话，一个程序员开始重视日志的时候才是这个程序员从程序员迈向工程师的时候。\",\"在程序开发中，日志是一个非常重要的工具，它可以帮助我们记录和追踪程序的运行状态和错误信息。在Go语言中，log 包是一个基础的标准库，提供了许多日志相关的功能。本文将介绍 log 包的常用函数以及如何配置和使用日志。\"]},\"1178\":{\"h\":\"常用函数\",\"t\":[\"log 包提供了一些常用的函数，可以方便地打印日志信息。这些函数包括 Print、Printf、Println、Fatal、Fatalf、Fatalln、Panic、Panicf 和 Panicln。它们的功能类似，区别在于添加换行符(ln)和是否触发程序的退出或崩溃。\",\"func Print(v ...interface{}) func Printf(format string, v ...interface{}) func Println(v ...interface{}) func Fatal(v ...interface{}) func Fatalf(format string, v ...interface{}) func Fatalln(v ...interface{}) func Panic(v ...interface{}) func Panicf(format string, v ...interface{}) func Panicln(v ...interface{}) \",\"// demo func printDemo() { log.Print(\\\"Test Print\\\") log.Println(\\\"Test Print\\\") log.Printf(\\\"Test Print\\\") } // 输出 2023/05/25 17:37:06 Test Print 2023/05/25 17:37:06 Test Print 2023/05/25 17:37:06 Test Print \"]},\"1179\":{\"h\":\"Logger类型配置日志\",\"t\":[\"其实整个log包内的这些函数都是由一个Logger类型配置的，默认情况下logger只会返回对应的日志的时间信息，如果我们想设置更多的信息，log包下有一些类型可以让我们自行配置：\",\"const ( Ldate = 1 << iota // the date in the local time zone: 2009/01/23 Ltime // the time in the local time zone: 01:23:23 Lmicroseconds // microsecond resolution: 01:23:23.123123. assumes Ltime. Llongfile // full file name and line number: /a/b/c/d.go:23 Lshortfile // final file name element and line number: d.go:23. overrides Llongfile LUTC // if Ldate or Ltime is set, use UTC rather than the local time zone Lmsgprefix // move the \\\"prefix\\\" from the beginning of the line to before the message LstdFlags = Ldate | Ltime // initial values for the standard logger ) \",\"默认是LstdFlags，如果我们想配置别的类型只需要，使用SetFlags函数即可，比如Llongfile可以看到整个文件在系统中的位置。\",\"func Flags() int func SetFlags(flag int) \"]},\"1180\":{\"h\":\"配置日志前缀\",\"t\":[\"和flag一样，log标准库,也支持我们自行配置每行日志的前缀信息\",\"func Prefix() string func SetPrefix(prefix string) \",\"Prefix函数可以让我们的到前缀是什么，比如下面这样:\",\"func prefixDemo() { log.SetPrefix(\\\"TestPrefix: \\\") log.Print(\\\"Test Print\\\") log.Println(\\\"Test Print\\\") log.Printf(\\\"Test Print\\\") log.Println(log.Prefix()) } // 输出 TestPrefix: 2023/05/25 17:43:57 Test Print TestPrefix: 2023/05/25 17:43:57 Test Print TestPrefix: 2023/05/25 17:43:57 Test Print TestPrefix: 2023/05/25 17:43:57 TestPrefix: \"]},\"1181\":{\"h\":\"配置日志输出位置\",\"t\":[\"我们还可以通过log配置日志输出位置\",\"func SetOutput(w io.Writer) \",\"比如我们可以打开一个log.txt文件来保存所有的日志信息，\",\"logFile, err := os.OpenFile(\\\"./log.txt\\\", os.O_CREATE|os.O_RDWR|os.O_APPEND, 0644) if err != nil { panic(err) } fmt.Println(log.Prefix()) log.SetFlags(log.Llongfile | log.Lmicroseconds | log.Ldate) log.SetOutput(logFile) log.Println(\\\"Test\\\") // 输出在文件里的详细信息 2023/05/25 17:47:13.688674 /Users/lixin/xxx/test-std/test-log/log.go:24: Test \",\"其实你打开具体的SetOutput、SetPrefix、SetFlag这些函数，其实都是配置一个已经在log包下创建好的logger结构体。\",\"// SetOutput函数 // SetOutput sets the output destination for the standard logger. // std 其实只是使用log包下New出来的一个 Logger实例 func SetOutput(w io.Writer) { std.SetOutput(w) } var std = New(os.Stderr, \\\"\\\", LstdFlags) \",\"所以理论上我们也可以自己New出来一个Logger实例，然后让我们自己New出来的实例去打印日志，实际上许多项目就是这么做的，比如mixin的logger就是自己封装一个log，总共才70行的代码https://github.com/MixinNetwork/mixin/blob/master/logger/log.go。\"]},\"1182\":{\"h\":\"创建自己的logger\",\"t\":[\"示例：\",\"func newLogger() { logger := log.New(os.Stdout, \\\"<Test Prefix>\\\", log.LstdFlags) logger.Println(\\\"Test logger\\\") } // 输出 <Test Prefix>2023/05/25 17:58:35 Test logger \"]},\"1183\":{\"h\":\"总结\",\"t\":[\"总结\",\"log 包是Go语言官方提供的基础日志库，它提供了一些常用的函数和配置选项，可以方便地记录和输出日志信息。然而，它的功能相对简单，如果有更复杂的需求，我们可以选择使用其他成熟的日志库，例如 zap 等。无论使用何种日志库，重视日志的记录和分析对于程序开发和维护都是至关重要的。\"]},\"1184\":{\"c\":[\"tutorial\"]},\"1185\":{\"c\":[\"golang\"]},\"1186\":{\"h\":\"Go reflect 反射包详解\",\"t\":[\"当我们接触一个新名词的时候，我们需要做的事情就是明确其定义，然后尽快适应，反射就是这样的名词之一。 \",\"首先是定义：反射允许程序在运行时检查和操作其结构、变量、方法等信息。Go语言提供了反射包（reflect），使得我们能够在运行时动态地获取类型信息、操作对象的字段和方法。\",\"你现在知道定义了，接下来就需要适应这个新名词出现在自己的世界里，然后尽快适应它。\",\"如何尽快适应呢？就是通过大量练习，尽可能让自己在实践中使用到。\",\"ps: 本文最后的反射示例是我们公司内部使用框架的一个小demo，可以通过方法名自动注册HTTP方法。 \"]},\"1187\":{\"h\":\"反射怎么用\",\"t\":[\"在Go语言中每个字段都有：\",\"1. 类型 2. 值 \",\"比如\",\"A := 10 // a 的类型就是int，值就是10，这是go语言的语法糖帮助我们简单创建的类型 var a int = 10 // 实际上应该是这样创建, 在声明值的时候标注类型 \",\"Reflect的两个主要类型是reflect.Type和reflect.Value ，可以让我们获取任意对象的Type和Value。\"]},\"1188\":{\"h\":\"Type\",\"t\":[\"当我们想要获取一个变量的类型信息时，可以使用reflect.TypeOf函数来实现。下面是一个使用reflect.TypeOf的示例：\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) func main() { var num int = 42 var str string = \\\"Hello, Reflect!\\\" fmt.Println(reflect.TypeOf(num)) // 输出: int fmt.Println(reflect.TypeOf(str)) // 输出: string } \",\"实际上reflect不仅仅只有Type还有一个Kind。Kind你可以理解为字段的底层类型。比如下面这个例子\",\" var a myFloat64 // 自定义类型 var b *float64 // 指针 reflectType(a) // 输出：TypeOf: main.myFloat64, 类型：myFloat64，种类：float64 reflectType(b) // 输出：TypeOf: TypeOf: *float64, 类型：，种类：ptr type Person struct { Name string Age int } var p = Person{ Name: \\\"Lixin\\\", Age: 21, } reflectType(p) // TypeOf: TypeOf: main.Person, 类型：Person，种类：struct \",\"你可以注意到，像slice，map，指针等变量的.Name返回都是空，它们在Go语言中都被视为类型的底层实现或衍生类型，而不是具体的命名类型。\",\"为什么要这样做呢呢？\",\"对于数组和切片类型，它们的名称在Go语言中是以表达式形式表示的，例如[5]int表示长度为5的整型数组，[]string表示字符串切片。由于这些类型是通过表达式定义的，而不是具体的命名类型，所以它们的.Name()方法返回空。 对于map类型，它的名称是map，而不包含具体的键类型和值类型信息。因为映射类型在Go语言中是一种内置类型，并且可以使用不同的键类型和值类型进行实例化，所以它的.Name()方法返回空。 对于指针类型，它的名称是加上指针指向的类型的名称。例如，对于int类型的指针变量，它的名称是*int。然而，由于指针类型本身没有具体的命名，只是指向其他类型的引用，所以它的.Name()方法返回空。 \",\"这样设计的目的是为了遵循Go语言的类型系统和语法约定。\",\"类型里不仅仅有Type，通过反射，我们可以进一步使用.Kind()方法获取这些类型的种类信息，以便进一步判断和处理。 比如下面的示例：\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) type student struct { Name string `json:\\\"name\\\"` Score int `json:\\\"score\\\"` } func main() { stu1 := student{ Name: \\\"Lixin\\\", Score: 90, } t := reflect.TypeOf(stu1) fmt.Println(t.Name(), t.Kind()) // student struct switch t.Kind() { case reflect.Struct: fmt.Println(\\\"Type is a struct\\\") for i := 0; i < t.NumField(); i++ { field := t.Field(i) fmt.Printf(\\\"name:%s index:%d type:%v json tag:%v\\\\n\\\", field.Name, field.Index, field.Type, field.Tag.Get(\\\"json\\\")) } case reflect.Int: fmt.Println(\\\"Type is an int\\\") // Handle int type accordingly case reflect.Bool: fmt.Println(\\\"Type is a bool\\\") // Handle bool type accordingly default: fmt.Println(\\\"Unknown type\\\") } } \",\"student struct Type is a struct name:Name index:[0] type:string json tag:name name:Score index:[1] type:int json tag:score \",\"在这里，你可以可以进一步在reflect包中得知go的真正的Kind的定义\",\"// go reflect标准库源码 // A Kind represents the specific kind of type that a Type represents. // The zero Kind is not a valid kind. type Kind uint const ( Invalid Kind = iota Bool Int Int8 Int16 Int32 Int64 Uint Uint8 Uint16 Uint32 Uint64 Uintptr Float32 Float64 Complex64 Complex128 Array Chan Func Interface Map Pointer Slice String Struct UnsafePointer ) \"]},\"1189\":{\"h\":\"Value\",\"t\":[\"Reflect的Value类型就是Go中每个字段的值信息，我们可以通过ValueOf()来获得原始值信息。\",\"以下是其中一些常用的方法：\",\"Interface()：返回一个interface{}类型的值，表示reflect.Value持有的原始值。可以通过类型断言将其转换为具体类型。\",\"Bool()：返回bool类型的原始值。\",\"Int()：返回int类型的原始值。\",\"Float()：返回float64类型的原始值。\",\"String()：返回string类型的原始值。\",\"Type()：返回reflect.Type类型，表示reflect.Value持有的值的类型。\",\"下面这个例子，你就应该明白怎么用了：\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) func main() { // 使用 reflect.ValueOf 获取 reflect.Value v := reflect.ValueOf(42) // 获取原始值 value := v.Interface() fmt.Println(value) // 输出: 42 // 使用类型断言将原始值转换为具体类型 if i, ok := value.(int); ok { fmt.Println(i * 2) // 输出: 84 } // 使用其他方法获取原始值 b := reflect.ValueOf(true).Bool() fmt.Println(b) // 输出: true f := reflect.ValueOf(3.14).Float() fmt.Println(f) // 输出: 3.14 s := reflect.ValueOf(\\\"hello\\\").String() fmt.Println(s) // 输出: hello t := reflect.ValueOf(42).Type() fmt.Println(t) // 输出: int } \"]},\"1190\":{\"h\":\"通过反射来更改变量的底层值\",\"t\":[\"你还可以通过反射来修改其底层的值。\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) type Person struct { Name string Age int } func main() { p := Person{Name: \\\"Alice\\\", Age: 25} // 使用反射获取变量的指针值 // 这里必须是指针，因为我们是通过底层指针去更改值的 v := reflect.ValueOf(&p) // 检查是否是指针类型并且可寻址 if v.Kind() == reflect.Ptr && v.Elem().CanSet() { // 获取指针指向的值 elem := v.Elem() // 获取字段的值并修改 nameField := elem.FieldByName(\\\"Name\\\") if nameField.IsValid() && nameField.Kind() == reflect.String { nameField.SetString(\\\"Bob\\\") } ageField := elem.FieldByName(\\\"Age\\\") if ageField.IsValid() && ageField.Kind() == reflect.Int { ageField.SetInt(30) } } fmt.Printf(\\\"%+v\\\", p) // 输出: {Name:Bob Age:30} } \"]},\"1191\":{\"h\":\"isVaild\",\"t\":[\"你可能注意到了我们上个例子中有个没有提到的方法IsValid()\",\"func (v Value) IsValid() bool返回v是否持有一个值。如果v是Value零值会返回假，此时v除了IsValid、String、Kind之外的方法都会导致panic。\",\"func (v Value) IsNil() bool IsNil()报告v持有的值是否为nil。v持有的值的分类必须是通道、函数、接口、映射、指针、切片之一；否则IsNil函数会导致panic。\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) type Person struct { Name string Age int } func main() { // *int类型空指针 var a *int fmt.Println(\\\"var a *int IsNil:\\\", reflect.ValueOf(a).IsNil()) //var a *int IsNil: true // nil值 fmt.Println(\\\"nil IsValid:\\\", reflect.ValueOf(nil).IsValid()) // nil IsValid: false // 实例化一个匿名结构体 b := struct{}{} // 尝试从结构体中查找\\\"abc\\\"字段 fmt.Println(\\\"不存在的结构体成员:\\\", reflect.ValueOf(b).FieldByName(\\\"abc\\\").IsValid()) // 不存在的结构体成员: false // 尝试从结构体中查找\\\"abc\\\"方法 fmt.Println(\\\"不存在的结构体方法:\\\", reflect.ValueOf(b).MethodByName(\\\"abc\\\").IsValid()) // 不存在的结构体方法: false // map c := map[string]int{} // 尝试从map中查找一个不存在的键 fmt.Println(\\\"map中不存在的键：\\\", reflect.ValueOf(c).MapIndex(reflect.ValueOf(\\\"娜扎\\\")).IsValid()) // map中不存在的键： false } \"]},\"1192\":{\"h\":\"结构体反射\",\"t\":[\"当我们从reflect获得类型信息后，如果类型是结构体的话，那我们可以将通过NumField()和Field()方法获得结构体成员的详细信息，甚至通过类型的实例来获得类型的方法。\",\"比如下面这个例子：\",\"package main import ( \\\"fmt\\\" \\\"reflect\\\" ) type Person struct { Name string Age int Height float64 } func (p Person) SayHello() { fmt.Println(\\\"Hello, my name is\\\", p.Name) } func main() { p := Person{ Name: \\\"John\\\", Age: 30, Height: 1.75, } // 获取结构体字段信息 t := reflect.TypeOf(p) fmt.Println(\\\"Struct fields:\\\") for i := 0; i < t.NumField(); i++ { field := t.Field(i) fmt.Printf(\\\"Name: %s, Type: %s\\\\n\\\", field.Name, field.Type) } // 根据字段名获取结构体字段信息 field, ok := t.FieldByName(\\\"Age\\\") if ok { fmt.Println(\\\"\\\\nField by name:\\\") fmt.Printf(\\\"Name: %s, Type: %s\\\\n\\\", field.Name, field.Type) } // 获取结构体方法信息 v := reflect.ValueOf(p) fmt.Println(\\\"\\\\nMethods:\\\") for i := 0; i < t.NumMethod(); i++ { method := t.Method(i) fmt.Printf(\\\"Name: %s, Type: %s\\\\n\\\", method.Name, method.Type) } // 根据方法名获取结构体方法信息 method, ok := t.MethodByName(\\\"SayHello\\\") if ok { fmt.Println(\\\"\\\\nMethod by name:\\\") fmt.Printf(\\\"Name: %s, Type: %s\\\\n\\\", method.Name, method.Type) } } \",\"// 输出 Struct fields: Name: Name, Type: string Name: Age, Type: int Name: Height, Type: float64 Field by name: Name: Age, Type: int Methods: Name: SayHello, Type: func(main.Person) Method by name: Name: SayHello, Type: func(main.Person) \",\"通过上面这个例子，你可以看出reflect的威力。\"]},\"1193\":{\"h\":\"通过reflect自动注册HTTP路由\",\"t\":[\"甚至比如我可以通过构建一个结构体，给这个结构体写几个方法，只要将方法名称写成一定的格式，就可以帮我自动注册HTTP方法，比如我有个结构体Service，只要在这个结构体下写Get_XXX,就可以注册路径为/xxx的get服务，下面就是一个示例：\",\"package main import ( \\\"fmt\\\" \\\"net/http\\\" \\\"reflect\\\" \\\"strings\\\" ) type Service struct{} func (s *Service) Get_Hubs(w http.ResponseWriter, r *http.Request) { fmt.Println(\\\"Handling GET request for /hubs\\\") } func (s *Service) Post_Name(w http.ResponseWriter, r *http.Request) { fmt.Println(\\\"Handling POST request for /name\\\") } func RegisterHTTPHandlers(service interface{}) { svcType := reflect.TypeOf(service) svcValue := reflect.ValueOf(service) for i := 0; i < svcType.NumMethod(); i++ { method := svcType.Method(i) methodName := method.Name if strings.HasPrefix(methodName, \\\"Get_\\\") || strings.HasPrefix(methodName, \\\"Post_\\\") { parts := strings.Split(methodName, \\\"_\\\") if len(parts) < 2 { continue } path := \\\"/\\\" + strings.ToLower(strings.Join(parts[1:], \\\"/\\\")) handler := svcValue.MethodByName(methodName).Interface().(func(http.ResponseWriter, *http.Request)) http.HandleFunc(path, func(w http.ResponseWriter, r *http.Request) { switch r.Method { case http.MethodGet: if strings.HasPrefix(methodName, \\\"Get_\\\") { handler(w, r) } else { http.Error(w, \\\"Method Not Allowed\\\", http.StatusMethodNotAllowed) } case http.MethodPost: if strings.HasPrefix(methodName, \\\"Post_\\\") { handler(w, r) } else { http.Error(w, \\\"Method Not Allowed\\\", http.StatusMethodNotAllowed) } default: http.Error(w, \\\"Method Not Allowed\\\", http.StatusMethodNotAllowed) } }) } } } func main() { service := &Service{} RegisterHTTPHandlers(service) fmt.Println(\\\"Listening on http://localhost:8889\\\") http.ListenAndServe(\\\":8889\\\", nil) } \",\"在这个示例中，我们定义了一个 Service 结构体，其中包含了 Get_Hubs() 和 Post_Name() 两个方法。然后，我们编写了 RegisterHTTPHandlers() 函数来根据方法的名称自动注册 HTTP 处理程序。\",\"然后这个程序就注册了get hubs 和 post name的方法，你可以使用curl或者postman工具来不断向8889分别发送对应的请求，会发现终端打印了这些。\",\"Listening on http://localhost:8889 Handling POST request for /name Handling GET request for /hubs \",\"再接着继续想想，既然可以注册Get和Post请求方法，那是不是我们还可以进一步操作比如动态绑定参数等等。通过反射，我们都可以做到。\"]},\"1194\":{\"h\":\"总结\",\"t\":[\"本文章介绍了Go语言中的反射包（reflect）的使用。反射允许程序在运行时检查和操作其结构、变量、方法等信息。通过反射，可以动态地获取类型信息、操作对象的字段和方法。\",\"我们首先解释了反射的定义和作用，并提到了反射包中的两个主要类型：reflect.Type和reflect.Value。reflect.TypeOf函数用于获取变量的类型信息，而reflect.ValueOf函数用于获取变量的值信息。\",\"介绍了如何使用反射来获取变量的类型信息和值信息。通过示例代码展示了如何使用reflect.TypeOf和reflect.ValueOf函数，并介绍了reflect.Type和reflect.Value类型的常用方法，如Interface()、Bool()、Int()、Float()和String()等。\",\"还提到了IsValid()和IsNil()方法的使用，用于判断反射值是否有效或为nil。\",\"然后介绍了如何使用反射来更改变量的底层值。通过示例代码演示了如何通过反射获取变量的指针值，并使用SetString()和SetInt()等方法修改结构体的字段值。\",\"接着，我们详细介绍了结构体反射。通过示例代码展示了如何使用反射获取结构体的字段信息和方法信息，包括使用NumField()、Field()、Method()和MethodByName()等方法。\",\"最后，我给出了一个应用示例，通过反射自动注册HTTP方法的功能。通过解析结构体的方法名称，将满足特定命名格式的方法自动注册为相应的HTTP服务。\",\"总的来说，我详细介绍了Go语言中反射包的使用方法，包括获取类型信息、值信息，修改变量值以及结构体的反射等操作。\",\"注意\",\"反射是一项强大的功能，可以在某些场景下提供灵活性和便利性。但需要注意，由于反射使用了运行时信息，会带来一定的性能损耗，因此在性能敏感的场景中需要谨慎使用。\",\"参考：https://www.liwenzhou.com/posts/Go/reflect/ 李文周博客\"]},\"1195\":{\"c\":[\"tutorial\"]},\"1196\":{\"c\":[\"golang\"]},\"1197\":{\"h\":\"Go strconv包详解\",\"t\":[\"相关信息\",\"Strconv包也是我们在Go语言中经常会使用到的包，通常用于在字符串与基本数据类型之间进行转换。它提供了一系列函数来处理字符串的解析（parsing）和格式化（formatting）操作。\"]},\"1198\":{\"h\":\"简要介绍\",\"t\":[\"strconv 包是 Go 标准库中的一个包，用于进行字符串和基本数据类型之间的相互转换。它提供了一系列的函数，包括将基本类型转换为字符串的函数，以及将字符串转换为基本类型的函数。\",\"该包的常用函数和功能包括：\",\"Parse 系列函数：用于将字符串解析为基本类型的值，例如 ParseBool、ParseInt、ParseFloat 等函数。\",\"Format 系列函数：用于将基本类型的值格式化为字符串的表示形式，例如 FormatBool、FormatInt、FormatFloat 等函数。\",\"Append 系列函数：用于将基本类型的值追加到字节切片中，例如 AppendBool、AppendInt、AppendFloat 等函数。\",\"Quote 系列函数：用于将基本类型的值转换为其在 Go 语言中的源代码表示形式的字符串，例如 Quote、QuoteRune、QuoteRuneToASCII 等函数。\",\"字符串转换函数：包括 Atoi、Itoa、ParseUint、FormatUint 等函数，用于处理字符串和整数类型之间的转换。\",\"字符串和浮点数类型之间的转换：包括 Atof、FormatFloat、ParseFloat 等函数，用于处理字符串和浮点数类型之间的转换。\",\"下面是strconv包中一些常用的函数和其功能的简要介绍：\",\"strconv.Itoa：将整数转换为字符串。它接受一个整数值，并返回表示该整数的字符串形式。\",\"示例：\",\"import ( \\\"fmt\\\" \\\"strconv\\\" ) func main() { num := 42 str := strconv.Itoa(num) fmt.Println(str) // 输出: \\\"42\\\" } \",\"strconv.Atoi：将字符串转换为整数。它接受一个表示整数的字符串，并返回对应的整数值。如果转换失败，它会返回错误信息。\",\"示例：\",\"import ( \\\"fmt\\\" \\\"strconv\\\" ) func main() { str := \\\"42\\\" num, err := strconv.Atoi(str) if err != nil { fmt.Println(\\\"转换失败:\\\", err) return } fmt.Println(num) // 输出: 42 } \",\"strconv.ParseFloat：将字符串转换为浮点数。接受一个表示浮点数的字符串、指定的位数（32或64）以及对应位数的浮点数类型，并返回对应的浮点数值。如果转换失败，它会返回错误信息。\",\"示例：\",\"import ( \\\"fmt\\\" \\\"strconv\\\" ) func main() { str := \\\"3.14\\\" num, err := strconv.ParseFloat(str, 64) if err != nil { fmt.Println(\\\"转换失败:\\\", err) return } fmt.Println(num) // 输出: 3.14 } \",\"strconv.FormatInt / strconv.FormatFloat：将整数或浮点数转换为字符串。接受一个整数或浮点数值，以及指定的基数（如10进制、16进制等），并返回对应的字符串形式。\",\"示例：\",\"import ( \\\"fmt\\\" \\\"strconv\\\" ) func main() { num := 42 str := strconv.FormatInt(int64(num), 10) fmt.Println(str) // 输出: \\\"42\\\" pi := 3.14159 str = strconv.FormatFloat(pi, 'f', 2, 64) fmt.Println(str) // 输出: \\\"3.14\\\" } \",\"这些只是strconv包提供的一些常用函数，它还提供了其他函数用于更复杂的转换操作，比如处理布尔值、Unicode字符等。\"]},\"1199\":{\"h\":\"AppendXXX 简要介绍\",\"t\":[\"AppendXXX 函数用于将基本类型的值追加到字节切片（[]byte）中。\",\"AppendBool 函数\",\"func AppendBool(dst []byte, b bool) []byte\",\"AppendBool 函数将布尔值 b 转换为字符串表示形式，并将结果追加到字节切片 dst 中。返回值是追加后的字节切片。\",\"示例：\",\"var dst []byte dst = strconv.AppendBool(dst, true) fmt.Println(string(dst)) // 输出: \\\"true\\\" \",\"AppendFloat 函数\",\"func AppendFloat(dst []byte, f float64, fmt byte, prec, bitSize int) []byte\",\"AppendFloat 函数将浮点数 f 转换为字符串表示形式，并将结果追加到字节切片 dst 中。fmt 参数指定格式，prec 参数指定精度，bitSize 参数指定浮点数位数。\",\"示例：\",\"var dst []byte dst = strconv.AppendFloat(dst, 3.14159, 'f', 4, 64) fmt.Println(string(dst)) // 输出: \\\"3.1416\\\" \",\"请注意，这些 AppendXXX 函数用于将字符串形式的基本类型值追加到字节切片中，而不是在现有的字节切片中修改值。这些函数通常在需要将基本类型值转换为字符串并将其添加到字节切片中的情况下使用。\"]},\"1200\":{\"h\":\"QuoteXXX 简要介绍 QuoteXXX 函数是 strconv 包中的一组函数，用于将基本类型的值转换为其在 Go 语言中的源代码表示形式，并返回该表示形式的字符串。\",\"t\":[\"以下是 QuoteXXX 函数的作用和示例：\",\"Quote 函数\",\"func Quote(s string) string\",\"Quote 函数将字符串 s 转换为它在 Go 语言中的源代码表示形式，并返回该表示形式的字符串。它将特殊字符进行转义，使字符串可以直接在源代码中使用。\",\"示例用法：\",\"str := `Hello, \\\"Gopher\\\"` quoted := strconv.Quote(str) fmt.Println(quoted) // 输出: \\\"Hello, \\\\\\\"Gopher\\\\\\\"\\\" \",\"QuoteRune 函数\",\"func QuoteRune(r rune) string\",\"QuoteRune 函数将 Unicode 字符 r 转换为它在 Go 语言中的源代码表示形式，并返回该表示形式的字符串。\",\"示例用法：\",\"rune := '♥' quoted := strconv.QuoteRune(rune) fmt.Println(quoted) // 输出: \\\"'♥'\\\" \",\"QuoteRuneToASCII 函数\",\"func QuoteRuneToASCII(r rune) string\",\"QuoteRuneToASCII 函数将 Unicode 字符 r 转换为它在 Go 语言中的源代码表示形式，并返回该表示形式的 ASCII 字符串。它将非 ASCII 字符进行转义。\",\"示例用法：\",\"rune := '♥' quoted := strconv.QuoteRuneToASCII(rune) fmt.Println(quoted) // 输出: \\\"'\\\\\\\\u2665'\\\" \",\"QuoteRuneToGraphic 函数\",\"func QuoteRuneToGraphic(r rune) string\",\"QuoteRuneToGraphic 函数将 Unicode 字符 r 转换为它在 Go 语言中的源代码表示形式，并返回该表示形式的可打印字符的字符串。它将非图形字符进行转义。\",\"示例用法：\",\"rune := '\\\\u2022' // 中文的\\\"点\\\"字符 quoted := strconv.QuoteRuneToGraphic(rune) fmt.Println(quoted) // 输出: \\\"'•'\\\" \",\"这些 QuoteXXX 函数可以用于生成源代码字符串的表示形式，特别是在需要将字符串或字符嵌入到源代码中时，可以确保它们的表示形式是正确的，并且不会导致语法错误。\"]},\"1201\":{\"h\":\"总结\",\"t\":[\"相关信息\",\"strconv 包提供了灵活且简便的方法来处理字符串和基本数据类型之间的转换，使得我们可以方便地进行数据格式转换和处理。\"]},\"1202\":{\"c\":[\"tutorial\"]},\"1203\":{\"c\":[\"golang\"]},\"1204\":{\"h\":\"Go time 包详解\",\"t\":[\"time 包是 Go 语言中用于处理时间和日期的标准库。 它提供了许多函数和类型，用于表示和操作时间、计时器、持续时间和时区等。 本文的顺序按照Go time官方包的顺序编写 详细信息请看 https://pkg.go.dev/time@go1.20.4 \"]},\"1205\":{\"h\":\"简要介绍\",\"t\":[\"常用的函数和类型包括：\",\"相关信息\",\"时间表示和创建函数：Date()、Now()、Parse()、Unix() 等函数用于创建和获取时间对象，以不同的方式表示时间。\",\"时间格式化和解析：Format() 和 Parse() 函数用于时间对象与字符串之间的相互转换。通过定义特定的格式模板，可以按照需要格式化或解析时间。\",\"时间计算和比较：Add()、AddDate()、Sub() 等函数用于进行时间的加减运算，例如增加一定的时间量、计算两个时间之间的间隔，并支持时间之间的比较。\",\"持续时间处理：Duration 类型用于表示时间间隔或持续时间，可以用于表示以纳秒、微秒、毫秒、秒、分钟、小时为单位的时间段，并提供了一系列的方法用于操作和转换持续时间。\",\"时区处理：Location 类型用于表示时区信息，可以加载系统预定义的时区或自定义的时区。可以使用 LoadLocation() 函数加载时区信息，并使用 In() 和 UTC() 方法将时间转换为特定时区或 UTC 时间。\",\"计时器：Timer 和 Ticker 类型用于定时触发事件。Timer 用于在指定的时间后触发单个事件，Ticker 用于以固定时间间隔触发重复事件。\",\"time 包中还包含了其他一些用于时间操作和格式化的函数，以及表示月份、星期几的类型等。\",\"Time包下的内容比较多，我觉得通过示例来学习time包比较好，下面我就按照在go官方的time包下的类型，依次介绍 time 包中常用函数的示例：\"]},\"1206\":{\"h\":\"函数\",\"t\":[\"func After(d Duration) <-chan Time // After 函数返回一个通道，指定时间过后，通道会接收到一个时间值 func Sleep(d Duration) // Sleep 函数使程序暂停指定的时间 func Tick(d Duration) <-chan Time // Tick 函数返回一个通道，每隔指定的时间间隔，通道会接收到一个时间值 \",\"示例：\",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // After 函数返回一个通道，指定时间过后，通道会接收到一个时间值 select { case <-time.After(2 * time.Second): fmt.Println(\\\"After\\\") } // Sleep 函数使程序暂停指定的时间 fmt.Println(\\\"Start\\\") time.Sleep(2 * time.Second) fmt.Println(\\\"End\\\") // Tick 函数返回一个通道，每隔指定的时间间隔，通道会接收到一个时间值 ticker := time.Tick(1 * time.Second) for tick := range ticker { fmt.Println(\\\"Tick:\\\", tick) } } \",\"# 输出 After Start End Tick: 2023-05-28 19:52:59.051953 +0800 CST m=+5.002580117 Tick: 2023-05-28 19:53:00.051654 +0800 CST m=+6.002592024 Tick: 2023-05-28 19:53:01.050407 +0800 CST m=+7.001636794 Tick: 2023-05-28 19:53:02.050139 +0800 CST m=+8.001642844 \"]},\"1207\":{\"h\":\"Duration\",\"t\":[\"Duration表示一段时间间隔。\",\"func ParseDuration(s string) (Duration, error) func Since(t Time) Duration func Until(t Time) Duration func (d Duration) Abs() Duration func (d Duration) Hours() float64 func (d Duration) Microseconds() int64 func (d Duration) Milliseconds() int64 func (d Duration) Minutes() float64 func (d Duration) Nanoseconds() int64 func (d Duration) Round(m Duration) Duration func (d Duration) Seconds() float64 func (d Duration) String() string func (d Duration) Truncate(m Duration) Duration \",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // ParseDuration 函数将字符串解析为 Duration 类型 d, _ := time.ParseDuration(\\\"1h30m\\\") fmt.Println(\\\"Parsed Duration:\\\", d) // Since 函数返回当前时间和指定时间之间的时间差，作为 Duration 类型 t := time.Date(2023, time.May, 7, 12, 0, 0, 0, time.UTC) duration := time.Since(t) fmt.Println(\\\"Time Since:\\\", duration) // Until 函数返回指定时间和当前时间之间的时间差，作为 Duration 类型 duration = time.Until(t) fmt.Println(\\\"Time Until:\\\", duration) // Duration 类型的常用方法示例 duration = 2 * time.Hour + 30 * time.Minute fmt.Println(\\\"Hours:\\\", duration.Hours()) fmt.Println(\\\"Minutes:\\\", duration.Minutes()) fmt.Println(\\\"Seconds:\\\", duration.Seconds()) fmt.Println(\\\"Milliseconds:\\\", duration.Milliseconds()) fmt.Println(\\\"Microseconds:\\\", duration.Microseconds()) fmt.Println(\\\"Nanoseconds:\\\", duration.Nanoseconds()) // 格式化输出 Duration 类型的时间间隔 fmt.Println(\\\"Duration String:\\\", duration.String()) } \",\"# 返回值 Parsed Duration: 1h30m0s Time Since: 504h21m51.536756s Time Until: -504h21m51.536761s Hours: 2.5 Minutes: 150 Seconds: 9000 Milliseconds: 9000000 Microseconds: 9000000000 Nanoseconds: 9000000000000 Duration String: 2h30m0s \"]},\"1208\":{\"h\":\"Location\",\"t\":[\"Location 类型表示地点的意思，我们可以通过LoadLocation设置我们的时间地点。\",\"type Location:\",\"func FixedZone(name string, offset int) *Location func LoadLocation(name string) (*Location, error) func LoadLocationFromTZData(name string, data []byte) (*Location, error) func (l *Location) String() string \",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // FixedZone 函数创建一个固定偏移量的时区 zone := time.FixedZone(\\\"CST\\\", int(8*time.Hour.Seconds())) fmt.Println(\\\"Fixed Zone:\\\", zone) // LoadLocation 函数加载指定名称的时区 shanghai, err := time.LoadLocation(\\\"Asia/Shanghai\\\") // UTC+08:00 if err != nil { fmt.Println(\\\"Failed to load Asia/Shanghai location:\\\", err) return } timeInShanghai := time.Date(2023, 5, 28, 20, 0, 0, 0, shanghai) fmt.Println(\\\"Time in Shanghai:\\\", sameTimeInShanghai) newYork, err := time.LoadLocation(\\\"America/New_York\\\") if err != nil { fmt.Println(\\\"Failed to load America/New_York location:\\\", err) return } timeInNewYork := sameTimeInShanghai.In(newYork) fmt.Println(\\\"Time in New York:\\\", sameTimeInNewYork) timesAreEqual := sameTimeInShanghai.Equal(sameTimeInNewYork) fmt.Println(timesAreEqual) } \",\"现在，timeInShanghai被转换为纽约时区，所以它与timeInNewYork表示相同的时间点，Equal方法将返回true。\"]},\"1209\":{\"h\":\"Month\",\"t\":[\"Month类型\",\"func (m Month) String() string \",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // String 方法返回 Month 类型的字符串表示形式 month := time.May fmt.Println(\\\"Month String:\\\", month.String()) } \"]},\"1210\":{\"h\":\"ParseError\",\"t\":[\"func (e *ParseError) Error() string \",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // Parse 函数解析时间字符串时可能返回 ParseError 类型的错误 _, err := time.Parse(\\\"2006-01-02\\\", \\\"invalid\\\") if err != nil { parseError := err.(*time.ParseError) fmt.Println(\\\"Parse Error:\\\", parseError.Error()) } } \"]},\"1211\":{\"h\":\"Ticker\",\"t\":[\"Ticker主要是一个定时器\",\"func NewTicker(d Duration) *Ticker func (t *Ticker) Reset(d Duration) func (t *Ticker) Stop() \",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // NewTicker 函数创建一个定时触发的 Ticker 对象 ticker := time.NewTicker(1 * time.Second) go func() { for tick := range ticker.C { fmt.Println(\\\"Tick:\\\", tick) } }() // 停止 Ticker time.Sleep(5 * time.Second) ticker.Stop() fmt.Println(\\\"Ticker Stopped\\\") } \"]},\"1212\":{\"h\":\"Time类型\",\"t\":[\"Time类型是time包下最常使用到的类型\",\"func Date(year int, month Month, day, hour, min, sec, nsec int, loc *Location) Time func Now() Time func Parse(layout, value string) (Time, error) func ParseInLocation(layout, value string, loc *Location) (Time, error) func Unix(sec int64, nsec int64) Time func UnixMicro(usec int64) Time func UnixMilli(msec int64) Time func (t Time) Add(d Duration) Time func (t Time) AddDate(years int, months int, days int) Time func (t Time) After(u Time) bool func (t Time) AppendFormat(b []byte, layout string) []byte func (t Time) Before(u Time) bool func (t Time) Clock() (hour, min, sec int) func (t Time) Compare(u Time) int func (t Time) Date() (year int, month Month, day int) func (t Time) Day() int func (t Time) Equal(u Time) bool func (t Time) Format(layout string) string func (t Time) GoString() string func (t *Time) GobDecode(data []byte) error func (t Time) GobEncode() ([]byte, error) func (t Time) Hour() int func (t Time) ISOWeek() (year, week int) func (t Time) In(loc *Location) Time func (t Time) IsDST() bool func (t Time) IsZero() bool func (t Time) Local() Time func (t Time) Location() *Location func (t Time) MarshalBinary() ([]byte, error) func (t Time) MarshalJSON() ([]byte, error) func (t Time) MarshalText() ([]byte, error) func (t Time) Minute() int func (t Time) Month() Month func (t Time) Nanosecond() int func (t Time) Round(d Duration) Time func (t Time) Second() int func (t Time) String() string func (t Time) Sub(u Time) Duration func (t Time) Truncate(d Duration) Time func (t Time) UTC() Time func (t Time) Unix() int64 func (t Time) UnixMicro() int64 func (t Time) UnixMilli() int64 func (t Time) UnixNano() int64 func (t *Time) UnmarshalBinary(data []byte) error func (t *Time) UnmarshalJSON(data []byte) error func (t *Time) UnmarshalText(data []byte) error func (t Time) Weekday() Weekday func (t Time) Year() int func (t Time) YearDay() int func (t Time) Zone() (name string, offset int) func (t Time) ZoneBounds() (start, end Time) \",\"package main import ( \\\"fmt\\\" \\\"time\\\" ) func main() { // Date 函数根据指定的年、月、日、时、分、秒、纳秒和时区创建一个 Time 对象 date := time.Date(2023, time.May, 7, 12, 0, 0, 0, time.UTC) fmt.Println(\\\"Date:\\\", date) // Now 函数返回当前时间的 Time 对象 now := time.Now() fmt.Println(\\\"Now:\\\", now) // Parse 函数将指定的时间字符串解析为 Time 对象 // 这里第一个参数只能是 2006-01-02 15:04:05 parsedTime, _ := time.Parse(\\\"2006-01-02 15:04:05\\\", \\\"2023-05-07 12:00:00\\\") fmt.Println(\\\"Parsed Time:\\\", parsedTime) // Unix 函数根据 Unix 时间戳创建一个 Time 对象 unixTime := time.Unix(1670140800, 0) fmt.Println(\\\"Unix Time:\\\", unixTime) // Time 类型的常用方法示例 fmt.Println(\\\"Year:\\\", now.Year()) fmt.Println(\\\"Month:\\\", now.Month()) fmt.Println(\\\"Day:\\\", now.Day()) fmt.Println(\\\"Hour:\\\", now.Hour()) fmt.Println(\\\"Minute:\\\", now.Minute()) fmt.Println(\\\"Second:\\\", now.Second()) fmt.Println(\\\"Nanosecond:\\\", now.Nanosecond()) fmt.Println(\\\"Weekday:\\\", now.Weekday()) // 格式化输出 Time 对象的字符串表示 fmt.Println(\\\"Formatted Time:\\\", now.Format(\\\"2006-01-02 15:04:05\\\")) // 时间比较 otherTime := time.Date(2023, time.May, 7, 10, 0, 0, 0, time.UTC) fmt.Println(\\\"Before:\\\", now.Before(otherTime)) fmt.Println(\\\"After:\\\", now.After(otherTime)) fmt.Println(\\\"Equal:\\\", now.Equal(otherTime)) // 时间计算 afterTime := now.Add(2 * time.Hour) fmt.Println(\\\"After 2 Hours:\\\", afterTime) addedDate := now.AddDate(1, 0, 0) // 增加一年 fmt.Println(\\\"Added Date:\\\", addedDate) // 时区相关操作 loc, _ := time.LoadLocation(\\\"America/New_York\\\") localTime := now.In(loc) fmt.Println(\\\"Local Time:\\\", localTime) utcTime := localTime.UTC() fmt.Println(\\\"UTC Time:\\\", utcTime) // 时间戳 unix := now.Unix() unixMicro := now.UnixMicro() unixMilli := now.UnixMilli() unixNano := now.UnixNano() fmt.Println(\\\"Unix:\\\", unix) fmt.Println(\\\"Unix Micro:\\\", unixMicro) fmt.Println(\\\"Unix Milli:\\\", unixMilli) fmt.Println(\\\"Unix Nano:\\\", unixNano) } \",\"// 输出 Date: 2023-05-07 12:00:00 +0000 UTC Now: 2023-05-28 20:37:21.055316 +0800 CST m=+0.000293065 Parsed Time: 2023-05-07 12:00:00 +0000 UTC Unix Time: 2022-12-04 16:00:00 +0800 CST Year: 2023 Month: May Day: 28 Hour: 20 Minute: 37 Second: 21 Nanosecond: 55316000 Weekday: Sunday Formatted Time: 2023-05-28 20:37:21 Before: false After: true Equal: false After 2 Hours: 2023-05-28 22:37:21.055316 +0800 CST m=+7200.000293065 Added Date: 2024-05-28 20:37:21.055316 +0800 CST Local Time: 2023-05-28 08:37:21.055316 -0400 EDT UTC Time: 2023-05-28 12:37:21.055316 +0000 UTC Unix: 1685277441 Unix Micro: 1685277441055316 Unix Milli: 1685277441055 Unix Nano: 1685277441055316000 \",\"以上是 time 包中一些常用函数和类型的示例，你可以根据需要进行参考和使用。\"]},\"1213\":{\"h\":\"总结\",\"t\":[\"time 包的常用操作总结：\",\"创建和表示时间：使用 Date()、Now()、Parse()、Unix() 等函数创建和获取时间对象。\",\"格式化和解析时间：使用 Format() 和 Parse() 函数将时间对象与字符串进行转换。\",\"时间计算和比较：使用 Add()、AddDate()、Sub() 等函数对时间进行加减运算，比较时间的先后顺序。\",\"持续时间处理：使用 Duration 类型表示时间间隔，进行时间单位的转换和操作。\",\"时区处理：使用 Location 类型表示时区，加载预定义的时区信息，转换时间到特定时区。\",\"定时器和计时器：使用 Timer 和 Ticker 类型进行定时触发事件。\",\"以上是对 time 包的详细总结，它是处理时间和日期相关操作的重要工具，可根据实际需求使用其中的函数和类型。\"]},\"1214\":{\"c\":[\"tutorial\"]},\"1215\":{\"c\":[\"golang\"]},\"1216\":{\"h\":\"Go操作Mongo最便捷的方式\",\"t\":[\"我大七牛提供的qmgo最好用了...\",\"本篇文章分为三个部分:\",\"介绍MongoDB\",\"使用Docker启动MongoDB(有手就行,没手让AI帮忙也行)\",\"在Go语言实操使用Qmgo摆弄MongoDB\"]},\"1217\":{\"h\":\"介绍MongoDB\",\"t\":[\"MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案，MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。\",\"NoSQL(NoSQL = Not Only SQL )，意即\\\"不仅仅是SQL\\\"。\",\"MongoDB 将数据存储为一个文档，数据结构由键值(key=>value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。\"]},\"1218\":{\"h\":\"相关概念\",\"t\":[\"SQL术语/概念\",\"Mongo术语/概念\",\"解释/说明\",\"database\",\"database\",\"数据库\",\"table\",\"collection\",\"数据库表/集合\",\"row\",\"document\",\"数据记录行/文档\",\"column\",\"filed\",\"数据字段/域\",\"index\",\"index\",\"索引\",\"table joins\",\"database\",\"表连接,MongoDB不支持\",\"primary key\",\"primary key\",\"主键,MongoDB自动将_id字段设置为主键\"]},\"1219\":{\"h\":\"MongoDB安装以及简单上手\",\"t\":[\"我们使用Docker来安装MongoDB，Docker可以很方便地启动MongoDB、Redis、MySQL等常见的组件，用起来很简单:\",\"提示\",\"当然首先你得确保你已经启动了Docker\",\"# 拉取Mongo6.0版本镜像 docker pull mongo:6.0 # 启动运行mongo # docker中的名称是 mongodb # 自己主机端口号是27017 容器内对应的端口号也是27017 # -d 是设置容器以守护进程方式运行 # 想使用volumn持久化的话可以代替使用下面的两个命令 # docker create volumn mongodb # docker run -p 27017:27017 --name mongodb -v mongodb:/data/db -d mongo docker run -p 27017:27017 --name mongodb -d mongo # 紧接着就可以通过以下命令行进入了mongo了 docker exec -it mongodb mongosh \"]},\"1220\":{\"h\":\"Go语言操作Mongo\",\"t\":[\"Qmgo是一款Go语言的MongoDB驱动器，它基于官方提供的Mongo官方驱动器开发实现，同时使用了更简便易懂的接口设计，比如参考了mgo的链式调用。\",\"Qmgo让您以更优雅的姿势使用MongoDB的新特性。\",\"Qmgo是从mgo迁移到新MongoDB driver的第一选择，对代码的改动影响最小。\"]},\"1221\":{\"h\":\"要求\",\"t\":[\"Go 1.10 及以上。\",\"MongoDB 2.6 及以上。\"]},\"1222\":{\"h\":\"功能\",\"t\":[\"文档的增删改查, 均支持官方driver支持的所有options\",\"Sort、limit、count、select、distinct\",\"事务\",\"Hooks\",\"自动化更新的默认和定制fields\",\"预定义操作符\",\"聚合Aggregate、索引操作、cursor\",\"validation tags 基于tag的字段验证\",\"可自定义插件化编程\"]},\"1223\":{\"h\":\"安装\",\"t\":[\"推荐方式是使用go mod，通过在源码中import github.com/qiniu/qmgo 来自动安装依赖。\",\"当然，通过下面方式同样可行：\",\"go get github.com/qiniu/qmgo \"]},\"1224\":{\"h\":\"Usage\"},\"1225\":{\"h\":\"开始\",\"t\":[\"import并新建连接\",\"import( \\\"context\\\" \\\"github.com/qiniu/qmgo\\\" ) ctx := context.Background() client, err := qmgo.NewClient(ctx, &qmgo.Config{Uri: \\\"mongodb://localhost:27017\\\"}) db := client.Database(\\\"class\\\") coll := db.Collection(\\\"user\\\") \",\"如果你的连接是指向固定的 database 和 collection，我们推荐使用下面的更方便的方法初始化连接，后续操作都基于cli而不用再关心 database 和 collection:\",\"cli, err := qmgo.Open(ctx, &qmgo.Config{Uri: \\\"mongodb://localhost:27017\\\", Database: \\\"class\\\", Coll: \\\"user\\\"}) \",\"相关信息\",\"后面都会基于cli来举例，如果你使用第一种传统的方式进行初始化，根据上下文，将cli替换成client、db 或 coll即可\",\"在初始化成功后，请defer来关闭连接:\",\"defer func() { if err = cli.Close(ctx); err != nil { panic(err) } }() \"]},\"1226\":{\"h\":\"创建索引\",\"t\":[\"做操作前，我们先初始化一些数据：\",\" type UserInfo struct { Name string `bson:\\\"name\\\"` Age uint16 `bson:\\\"age\\\"` Weight uint32 `bson:\\\"weight\\\"` } var userInfo = UserInfo{ Name: \\\"xm\\\", Age: 7, Weight: 40, } \"]},\"1227\":{\"h\":\"创建索引\",\"t\":[\"cli.CreateOneIndex(context.Background(), options.IndexModel{Key: []string{\\\"name\\\"}}) cli.CreateIndexes(context.Background(), []options.IndexModel{{Key: []string{\\\"id2\\\", \\\"id3\\\"}}}) \"]},\"1228\":{\"h\":\"插入一个文档\",\"t\":[\"// insert one document result, err := cli.InsertOne(ctx, userInfo) \"]},\"1229\":{\"h\":\"查找一个文档\",\"t\":[\" // find one document one := UserInfo{} err = cli.Find(ctx, bson.M{\\\"name\\\": userInfo.Name}).One(&one) \"]},\"1230\":{\"h\":\"删除文档\",\"t\":[\"err = cli.Remove(ctx, bson.M{\\\"age\\\": 7}) \"]},\"1231\":{\"h\":\"插入多条数据\",\"t\":[\"// multiple insert var userInfos = []UserInfo{ UserInfo{Name: \\\"a1\\\", Age: 6, Weight: 20}, UserInfo{Name: \\\"b2\\\", Age: 6, Weight: 25}, UserInfo{Name: \\\"c3\\\", Age: 6, Weight: 30}, UserInfo{Name: \\\"d4\\\", Age: 6, Weight: 35}, UserInfo{Name: \\\"a1\\\", Age: 7, Weight: 40}, UserInfo{Name: \\\"a1\\\", Age: 8, Weight: 45}, } result, err = cli.Collection.InsertMany(ctx, userInfos) \"]},\"1232\":{\"h\":\"批量查找 Sort 和 Limit\",\"t\":[\"// find all 、sort and limit batch := []UserInfo{} cli.Find(ctx, bson.M{\\\"age\\\": 6}).Sort(\\\"weight\\\").Limit(7).All(&batch) \"]},\"1233\":{\"h\":\"Count\",\"t\":[\"count, err := cli.Find(ctx, bson.M{\\\"age\\\": 6}).Count() \"]},\"1234\":{\"h\":\"Update\",\"t\":[\"// UpdateOne one err := cli.UpdateOne(ctx, bson.M{\\\"name\\\": \\\"d4\\\"}, bson.M{\\\"$set\\\": bson.M{\\\"age\\\": 7}}) // UpdateAll result, err := cli.UpdateAll(ctx, bson.M{\\\"age\\\": 6}, bson.M{\\\"$set\\\": bson.M{\\\"age\\\": 10}}) \"]},\"1235\":{\"h\":\"Select\",\"t\":[\"err := cli.Find(ctx, bson.M{\\\"age\\\": 10}).Select(bson.M{\\\"age\\\": 1}).One(&one) \"]},\"1236\":{\"h\":\"Aggregate\",\"t\":[\"matchStage := bson.D{{\\\"$match\\\", []bson.E{{\\\"weight\\\", bson.D{{\\\"$gt\\\", 30}}}}}} groupStage := bson.D{{\\\"$group\\\", bson.D{{\\\"_id\\\", \\\"$name\\\"}, {\\\"total\\\", bson.D{{\\\"$sum\\\", \\\"$age\\\"}}}}}} var showsWithInfo []bson.M err = cli.Aggregate(context.Background(), Pipeline{matchStage, groupStage}).All(&showsWithInfo) \"]},\"1237\":{\"h\":\"建立连接时支持所有 mongoDB 的Options\",\"t\":[\"poolMonitor := &event.PoolMonitor{ Event: func(evt *event.PoolEvent) { switch evt.Type { case event.GetSucceeded: fmt.Println(\\\"GetSucceeded\\\") case event.ConnectionReturned: fmt.Println(\\\"ConnectionReturned\\\") } }, } opt := options.Client().SetPoolMonitor(poolMonitor) // more options use the chain options. cli, err := Open(ctx, &Config{Uri: URI, Database: DATABASE, Coll: COLL}, opt) \"]},\"1238\":{\"h\":\"事务\",\"t\":[\"callback := func(sessCtx context.Context) (interface{}, error) { // 重要：确保事务中的每一个操作，都使用传入的sessCtx参数 if _, err := cli.InsertOne(sessCtx, bson.D{{\\\"abc\\\", int32(1)}}); err != nil { return nil, err } if _, err := cli.InsertOne(sessCtx, bson.D{{\\\"xyz\\\", int32(999)}}); err != nil { return nil, err } return nil, nil } result, err = cli.DoTransaction(ctx, callback) \"]},\"1239\":{\"h\":\"预定义操作符\",\"t\":[\"// aggregate matchStage := bson.D{{operator.Match, []bson.E{{\\\"weight\\\", bson.D{{operator.Gt, 30}}}}}} groupStage := bson.D{{operator.Group, bson.D{{\\\"_id\\\", \\\"$name\\\"}, {\\\"total\\\", bson.D{{operator.Sum, \\\"$age\\\"}}}}}} var showsWithInfo []bson.M err = cli.Aggregate(context.Background(), Pipeline{matchStage, groupStage}).All(&showsWithInfo) \"]},\"1240\":{\"h\":\"Hooks\",\"t\":[\"Qmgo 灵活的 hooks:\",\"type User struct { Name string `bson:\\\"name\\\"` Age int `bson:\\\"age\\\"` } func (u *User) BeforeInsert(ctx context.Context) error { fmt.Println(\\\"before insert called\\\") return nil } func (u *User) AfterInsert(ctx context.Context) error { fmt.Println(\\\"after insert called\\\") return nil } u := &User{Name: \\\"Alice\\\", Age: 7} _, err := cli.InsertOne(context.Background(), u) \"]},\"1241\":{\"h\":\"自动化更新fields\",\"t\":[\"Qmgo支持2种方式来自动化更新特定的字段\",\"默认 fields\",\"在文档结构体里注入 field.DefaultField, Qmgo 会自动在更新和插入操作时更新 createAt、updateAt and _id field的值.\",\"type User struct { field.DefaultField `bson:\\\",inline\\\"` Name string `bson:\\\"name\\\"` Age int `bson:\\\"age\\\"` } u := &User{Name: \\\"Lucas\\\", Age: 7} _, err := cli.InsertOne(context.Background(), u) // tag为createAt、updateAt 和 _id 的字段会自动更新插入 \",\"Custom fields\",\"可以自定义field名, Qmgo 会自动在更新和插入操作时更新他们.\",\"type User struct { Name string `bson:\\\"name\\\"` Age int `bson:\\\"age\\\"` MyId string `bson:\\\"myId\\\"` CreateTimeAt time.Time `bson:\\\"createTimeAt\\\"` UpdateTimeAt int64 `bson:\\\"updateTimeAt\\\"` } // 指定自定义field的field名 func (u *User) CustomFields() field.CustomFieldsBuilder { return field.NewCustom().SetCreateAt(\\\"CreateTimeAt\\\").SetUpdateAt(\\\"UpdateTimeAt\\\").SetId(\\\"MyId\\\") } u := &User{Name: \\\"Lucas\\\", Age: 7} _, err := cli.InsertOne(context.Background(), u) // CreateTimeAt、UpdateTimeAt and MyId 会自动更新并插入DB // 假设Id和ui已经初始化 err = cli.ReplaceOne(context.Background(), bson.M{\\\"_id\\\": Id}, &ui) // UpdateTimeAt 会被自动更新 \",\"例子介绍\",\"自动化 fields 详情介绍\"]},\"1242\":{\"h\":\"Validation tags 基于tag的字段验证\",\"t\":[\"功能基于go-playground/validator实现。\",\"所以Qmgo支持所有go-playground/validator 的struct验证规则，比如：\",\"type User struct { FirstName string `bson:\\\"fname\\\"` LastName string `bson:\\\"lname\\\"` Age uint8 `bson:\\\"age\\\" validate:\\\"gte=0,lte=130\\\" ` // Age must in [0,130] Email string `bson:\\\"e-mail\\\" validate:\\\"required,email\\\"` // Email can't be empty string, and must has email format CreateAt time.Time `bson:\\\"createAt\\\" validate:\\\"lte\\\"` // CreateAt must lte than current time Relations map[string]string `bson:\\\"relations\\\" validate:\\\"max=2\\\"` // Relations can't has more than 2 elements } \",\"本功能只对以下API有效： InsertOne、InsertyMany、Upsert、UpsertId、ReplaceOne\",\"插件化编程\",\"实现以下方法\",\"func Do(ctx context.Context, doc interface{}, opType operator.OpType, opts ...interface{}) error{ // do anything } \",\"调用middleware包的Register方法，注入Do Qmgo会在支持的操作执行前后调用Do\",\"middleware.Register(Do) \",\"Example\",\"Qmgo的hook、自动更新field和validation tags都基于plugin的方式实现\"]},\"1243\":{\"c\":[\"tutorial\"]},\"1244\":{\"c\":[\"golang\",\"mongo\",\"qmgo\"]},\"1245\":{\"h\":\"Validator库学习\",\"t\":[\"validator包实现了基于tags的对结构和体字段的验证器，很方便在字段验证时使用。\",\"go get github.com/go-playground/validator/v10 \"]},\"1246\":{\"c\":[\"tutorial\"]},\"1247\":{\"c\":[\"golang\",\"validator\"]},\"1248\":{\"h\":\"Posts\"},\"1249\":{\"h\":\"Econonics\"},\"1250\":{\"h\":\"Betxin\"},\"1251\":{\"h\":\"Program\"},\"1252\":{\"h\":\"Docker\"},\"1253\":{\"h\":\"Get Start with C Tcp Program\"},\"1254\":{\"h\":\"C\"},\"1255\":{\"h\":\"Btc\"},\"1256\":{\"h\":\"Crypto\"},\"1257\":{\"h\":\"Eth\"},\"1258\":{\"h\":\"Solana\"},\"1259\":{\"h\":\"Summarize\"},\"1260\":{\"h\":\"Nextjs\"},\"1261\":{\"h\":\"Frontend\"},\"1262\":{\"h\":\"Leetcode\"},\"1263\":{\"h\":\"Leetcode\"},\"1264\":{\"h\":\"Offer\"},\"1265\":{\"h\":\"Notes\"},\"1266\":{\"h\":\"Mysql\"},\"1267\":{\"h\":\"Cache Consistency\"},\"1268\":{\"h\":\"Redis\"},\"1269\":{\"h\":\"Datastruct\"},\"1270\":{\"h\":\"Note\"},\"1271\":{\"h\":\"Tool\"},\"1272\":{\"h\":\"Thinking\"},\"1273\":{\"h\":\"2021\"},\"1274\":{\"h\":\"Thinking\"},\"1275\":{\"h\":\"2022\"},\"1276\":{\"h\":\"Thinking\"},\"1277\":{\"h\":\"2023\"},\"1278\":{\"h\":\"Thinking\"},\"1279\":{\"h\":\"2024\"},\"1280\":{\"h\":\"Thinking\"},\"1281\":{\"h\":\"2025\"},\"1282\":{\"h\":\"Behavioral\"},\"1283\":{\"h\":\"Creational\"},\"1284\":{\"h\":\"Structural\"},\"1285\":{\"h\":\"Top 10 Sorting\"},\"1286\":{\"h\":\"十大排序\"},\"1287\":{\"h\":\"Mock框架\"},\"1288\":{\"h\":\"单测\"},\"1289\":{\"h\":\"单测总结\"},\"1290\":{\"h\":\"Common\"},\"1291\":{\"h\":\"常用框架工具\"},\"1292\":{\"h\":\"Gin\"},\"1293\":{\"h\":\"Grpc\"},\"1294\":{\"h\":\"Redis\"},\"1295\":{\"h\":\"Zerolog\"},\"1296\":{\"h\":\"Go语言底层原理\"},\"1297\":{\"h\":\"底层\"},\"1298\":{\"h\":\"官方标准库学习\"},\"1299\":{\"h\":\"标准库学习\"},\"1300\":{\"h\":\"第三方库\"}},\"dirtCount\":0,\"index\":[[\"插件化编程\",{\"1\":{\"1242\":1}}],[\"插入多条数据\",{\"0\":{\"1231\":1}}],[\"插入一个文档\",{\"0\":{\"1228\":1}}],[\"插入一个字符\",{\"1\":{\"266\":1}}],[\"插入到前面位置上去\",{\"1\":{\"946\":1}}],[\"插入到列表\",{\"1\":{\"405\":1}}],[\"插入排序\",{\"0\":{\"946\":1}}],[\"插入字符串\",{\"1\":{\"478\":2}}],[\"插入字符\",{\"1\":{\"478\":2}}],[\"插入的字符\",{\"1\":{\"478\":1}}],[\"插入的索引\",{\"1\":{\"478\":1}}],[\"插入的记录\",{\"1\":{\"362\":1}}],[\"插入\",{\"0\":{\"478\":1},\"1\":{\"946\":1}}],[\"插入缓存\",{\"1\":{\"376\":1}}],[\"插入操作就会发生阻塞\",{\"1\":{\"374\":1}}],[\"插入意向锁如果不在间隙锁区间内则是可以的\",{\"1\":{\"374\":1}}],[\"插入意向锁与间隙锁的另一个非常重要的差别是\",{\"1\":{\"374\":1}}],[\"插入意向锁确实是一种特殊的间隙锁\",{\"1\":{\"374\":1}}],[\"插入意向锁名字虽然有意向锁\",{\"1\":{\"374\":1}}],[\"插入意向锁\",{\"0\":{\"374\":1},\"1\":{\"374\":2}}],[\"详情介绍\",{\"1\":{\"1241\":1}}],[\"详细信息请看\",{\"1\":{\"1204\":1}}],[\"详细信息可以在anchor文档\",{\"1\":{\"128\":1}}],[\"详细介绍5\",{\"1\":{\"28\":1}}],[\"详细规则如下\",{\"1\":{\"28\":1}}],[\"灵活的\",{\"1\":{\"1240\":1}}],[\"灵活定义您自己的帮助\",{\"1\":{\"988\":1}}],[\"批量查找\",{\"0\":{\"1232\":1}}],[\"批判思考指南\",{\"1\":{\"669\":1}}],[\"批判性思考与讨论\",{\"1\":{\"627\":1}}],[\"批判性思考与写作\",{\"1\":{\"627\":1}}],[\"批判性思考的基本活动\",{\"1\":{\"627\":1}}],[\"批判性思考的本质是评价\",{\"1\":{\"626\":1}}],[\"批判性思考依靠的主要是心智约束\",{\"1\":{\"627\":1}}],[\"批判性思考者\",{\"1\":{\"627\":1}}],[\"批判性思考者的一个特征就是提出恰当问题的技巧\",{\"1\":{\"627\":1}}],[\"批判性思考者也通过提出问题来分析议题\",{\"1\":{\"626\":1}}],[\"批判性思考是一个习惯问题\",{\"1\":{\"627\":1}}],[\"批判性思考是一个人头脑中拥有许多正确答案的同义语\",{\"1\":{\"627\":1}}],[\"批判性思考还包括寻找答案的过程\",{\"1\":{\"627\":1}}],[\"批判性思考可能促使我们提问\",{\"1\":{\"626\":1}}],[\"批判性思考所使用的最重要的技巧之一就是提出试探性问题\",{\"1\":{\"626\":1}}],[\"聚合aggregate\",{\"1\":{\"1222\":1}}],[\"聚簇索引记录中两个跟事务有关的隐藏列\",{\"1\":{\"362\":1}}],[\"紧接着就可以通过以下命令行进入了mongo了\",{\"1\":{\"1219\":1}}],[\"拉取mongo6\",{\"1\":{\"1219\":1}}],[\"纳秒和时区创建一个\",{\"1\":{\"1212\":1}}],[\"纳瓦尔宝典\",{\"1\":{\"669\":1}}],[\"♥\",{\"1\":{\"1200\":3}}],[\"娜扎\",{\"1\":{\"1191\":1}}],[\"浮点数类型的命令行参数用于表示浮点数值\",{\"1\":{\"1161\":1}}],[\"浮点数类型\",{\"1\":{\"1161\":1}}],[\"姓名\",{\"1\":{\"1161\":2}}],[\"告诉它该做什么或者取消它正在做的事情\",{\"1\":{\"1156\":1}}],[\"告诉他们为什么你在章鱼的等级体系中把他们排在较低的位置\",{\"1\":{\"586\":1}}],[\"边界和进程之间传递截止时间\",{\"1\":{\"1156\":1}}],[\"饥饿模式的能避免\",{\"1\":{\"1142\":1}}],[\"饿死\",{\"1\":{\"1142\":1,\"1143\":1}}],[\"饿汉式单例模式更加适合于对象创建后不会被修改的场景\",{\"1\":{\"900\":1}}],[\"饿汉式单例模式是指在类加载时就立即创建对象\",{\"1\":{\"898\":1}}],[\"饿汉式\",{\"0\":{\"898\":1}}],[\"竞争时\",{\"1\":{\"1142\":1}}],[\"四种中只有使用指针实现接口\",{\"1\":{\"1138\":1}}],[\"四部曲\",{\"1\":{\"669\":1}}],[\"声明\",{\"1\":{\"1138\":1}}],[\"声明一个全局变量在其他语言中看起来非常简单\",{\"1\":{\"454\":1}}],[\"唤醒一个或者全部的\",{\"1\":{\"1146\":1}}],[\"唤醒\",{\"1\":{\"1146\":1}}],[\"唤醒处于等待状态的\",{\"1\":{\"1144\":1}}],[\"唤醒后\",{\"1\":{\"1135\":1}}],[\"唤醒等待的\",{\"1\":{\"1135\":1}}],[\"唤醒新的处理执行\",{\"1\":{\"1135\":1}}],[\"阻塞后续的写操作\",{\"1\":{\"1143\":1}}],[\"阻塞地发送数据时会\",{\"1\":{\"1137\":1}}],[\"阻塞发送\",{\"1\":{\"1137\":1}}],[\"阻塞\",{\"1\":{\"1135\":1}}],[\"咱们单独拿一节来说\",{\"1\":{\"1135\":1}}],[\"咱是谁啊\",{\"1\":{\"554\":1}}],[\"汇编\",{\"1\":{\"1135\":1}}],[\"窃取一半\",{\"1\":{\"1135\":1}}],[\"窃取别的\",{\"1\":{\"1135\":1}}],[\"窃取其他p中的g\",{\"1\":{\"1135\":1}}],[\"栈正在被拷贝\",{\"1\":{\"1132\":1}}],[\"栈指针\",{\"1\":{\"1132\":1}}],[\"栈的压入\",{\"0\":{\"302\":1}}],[\"抢占了也没有意义当系统调用时间超过了\",{\"1\":{\"1135\":1}}],[\"抢占\",{\"1\":{\"1135\":1}}],[\"抢占p\",{\"1\":{\"1135\":1}}],[\"抢占时将状态修改成\",{\"1\":{\"1132\":1}}],[\"抢占信号\",{\"1\":{\"1132\":1}}],[\"拦截器的对比\",{\"1\":{\"1101\":1}}],[\"拦截器\",{\"1\":{\"1101\":1}}],[\"拦截器可以在每次调用grpc调用的时候记录一些信息或者验证用户token\",{\"1\":{\"1096\":1}}],[\"拦截中间件\",{\"0\":{\"1096\":1}}],[\"映射\",{\"1\":{\"1191\":1}}],[\"映射类型\",{\"1\":{\"1084\":1}}],[\"映射到\",{\"1\":{\"1079\":1}}],[\"询问服务器有没有新消息\",{\"1\":{\"1073\":1}}],[\"轮询是指浏览器通过javascript启动一个定时器\",{\"1\":{\"1073\":1}}],[\"响应协议\",{\"1\":{\"1073\":1}}],[\"响起铃声\",{\"1\":{\"631\":1}}],[\"环境就下载好了\",{\"1\":{\"1067\":1}}],[\"环境变量设置为任何不是\",{\"1\":{\"447\":1}}],[\"环境变量来得到一个\",{\"1\":{\"447\":1}}],[\"环境变量\",{\"1\":{\"46\":1}}],[\"待函数调用栈全部返回后\",{\"1\":{\"1055\":1}}],[\"待落盘的脏数据页记录\",{\"1\":{\"357\":1}}],[\"受众\",{\"1\":{\"1047\":1}}],[\"受合格和监管要求\",{\"1\":{\"184\":1}}],[\"雪花算法\",{\"0\":{\"1041\":1}}],[\"雪崩\",{\"1\":{\"533\":1}}],[\"桶大小和速率\",{\"1\":{\"1038\":1}}],[\"桶大小\",{\"1\":{\"1038\":1}}],[\"桶中放置\",{\"1\":{\"1034\":1}}],[\"桶中产生多少\",{\"1\":{\"1034\":1}}],[\"桶的容量大小\",{\"1\":{\"1034\":1}}],[\"桶满则暂时不放\",{\"1\":{\"1033\":1}}],[\"限流器可以帮助我们限制请求的速率\",{\"1\":{\"1033\":1}}],[\"限制\",{\"1\":{\"77\":1}}],[\"李文周博客\",{\"1\":{\"1194\":1}}],[\"李文周的博客\",{\"1\":{\"1027\":1}}],[\"李笑来的所有书都值得认真去读\",{\"1\":{\"669\":1}}],[\"李笑来\",{\"1\":{\"669\":1}}],[\"李笑来有个类比大意是这样\",{\"1\":{\"605\":1}}],[\"李笑来部曲\",{\"0\":{\"502\":1}}],[\"八股\",{\"1\":{\"1010\":1}}],[\"累就不说了\",{\"1\":{\"1010\":1}}],[\"略\",{\"1\":{\"1009\":1}}],[\"配送中\",{\"1\":{\"1009\":3}}],[\"配置日志输出位置\",{\"0\":{\"1181\":1}}],[\"配置日志前缀\",{\"0\":{\"1180\":1}}],[\"配置项结构体\",{\"1\":{\"981\":1}}],[\"配置纪元实际上就是一个计数器\",{\"1\":{\"426\":1}}],[\"配置纪元\",{\"1\":{\"426\":1}}],[\"配置\",{\"1\":{\"360\":1,\"404\":2,\"406\":2}}],[\"配置jwt和callback\",{\"1\":{\"194\":1}}],[\"δ\",{\"1\":{\"1009\":1}}],[\"∑\",{\"1\":{\"1009\":1}}],[\"诸如黄转绿这样的状态转换是不允许的\",{\"1\":{\"1009\":1}}],[\"诸如此类\",{\"1\":{\"396\":1,\"423\":1,\"425\":1,\"427\":1}}],[\"红只能转绿\",{\"1\":{\"1009\":1}}],[\"红\",{\"1\":{\"1009\":1}}],[\"红锁\",{\"1\":{\"437\":1}}],[\"黄只能转红\",{\"1\":{\"1009\":1}}],[\"黄\",{\"1\":{\"1009\":1}}],[\"黄金\",{\"1\":{\"184\":1}}],[\"绿只能转黄\",{\"1\":{\"1009\":1}}],[\"绿\",{\"1\":{\"1009\":1}}],[\"绿色表示语句被覆盖了\",{\"1\":{\"969\":1}}],[\"箭头表示的就是状态之间可以发生\",{\"1\":{\"1009\":1}}],[\"熄\",{\"1\":{\"1009\":1}}],[\"亮\",{\"1\":{\"1009\":1}}],[\"亮和熄\",{\"1\":{\"1009\":1}}],[\"屏幕可以从两种状态之间自由转换\",{\"1\":{\"1009\":1}}],[\"周日开始的那个\",{\"1\":{\"1003\":1}}],[\"周的任意一天\",{\"1\":{\"1002\":1}}],[\"周历\",{\"1\":{\"1002\":1}}],[\"周遭的环境\",{\"1\":{\"689\":1}}],[\"轻松生成应用程序和应用程序带有\",{\"1\":{\"988\":1}}],[\"轻松和享受\",{\"1\":{\"573\":1}}],[\"嵌套子命令\",{\"1\":{\"988\":1}}],[\"嵌套结构体方法\",{\"1\":{\"956\":1}}],[\"亦或者后续我们改变了获取数据的方式\",{\"1\":{\"980\":1}}],[\"凌晨\",{\"1\":{\"979\":1}}],[\"凌晨不允许发送报警短信\",{\"1\":{\"979\":1}}],[\"晚上\",{\"1\":{\"979\":1}}],[\"晚上吃完饭歇了一会就坐地铁去了豫园\",{\"1\":{\"779\":1}}],[\"报告v持有的值是否为nil\",{\"1\":{\"1191\":1}}],[\"报错\",{\"1\":{\"991\":1}}],[\"报错跟之前大同小异\",{\"1\":{\"462\":1}}],[\"报警速率决策函数\",{\"1\":{\"979\":2}}],[\"白天工作时间允许大量发送报警信息\",{\"1\":{\"979\":1}}],[\"└──\",{\"1\":{\"977\":4,\"989\":5,\"1067\":5,\"1079\":5}}],[\"│\",{\"1\":{\"977\":2,\"989\":7,\"1067\":10,\"1079\":6}}],[\"├──\",{\"1\":{\"977\":5,\"989\":9,\"1067\":11,\"1079\":11}}],[\"准备就绪\",{\"1\":{\"1137\":1}}],[\"准备数据\",{\"1\":{\"976\":1}}],[\"准确说\",{\"1\":{\"51\":1}}],[\"五秒过期\",{\"1\":{\"976\":1}}],[\"五个字符\",{\"1\":{\"418\":1}}],[\"五个状态\",{\"1\":{\"254\":1}}],[\"驱动程序的行为\",{\"1\":{\"975\":1}}],[\"演示如何为http\",{\"1\":{\"972\":1}}],[\"演技只是这个谜题的一部分\",{\"1\":{\"580\":1}}],[\"演技或商业敏锐度\",{\"1\":{\"580\":1}}],[\"警告\",{\"1\":{\"961\":1,\"1047\":1}}],[\"禁用内联优化\",{\"0\":{\"961\":1}}],[\"✔\",{\"1\":{\"959\":2}}],[\"➜\",{\"1\":{\"959\":1,\"967\":3,\"969\":3,\"970\":2,\"972\":2,\"973\":1,\"975\":1,\"976\":1,\"989\":3}}],[\"剩下的位置用来表示当前有多少goroutine在等待互斥锁的释放\",{\"1\":{\"1142\":1}}],[\"剩下的\",{\"1\":{\"1135\":1}}],[\"剩下的放到右边\",{\"1\":{\"949\":1}}],[\"剩余部分以债券形式发放\",{\"1\":{\"591\":1}}],[\"剩余的部分归当前处理交易的领导者所有\",{\"1\":{\"118\":1}}],[\"剩余\",{\"1\":{\"26\":2}}],[\"冒泡\",{\"1\":{\"946\":1}}],[\"冒泡排序其实就是冒泡一样\",{\"1\":{\"945\":1}}],[\"冒泡排序\",{\"0\":{\"945\":1}}],[\"享元会将不同对象的相同数据进行缓存以节省内存\",{\"1\":{\"932\":1}}],[\"享元模式通过与共享对象减少内存使用和对象创建\",{\"1\":{\"934\":1}}],[\"享元模式尝试重用现有的同类对象\",{\"1\":{\"932\":1}}],[\"享元模式\",{\"0\":{\"931\":1},\"1\":{\"931\":1}}],[\"享受空调\",{\"1\":{\"647\":1,\"686\":1}}],[\"享受奢侈品\",{\"1\":{\"573\":1}}],[\"账簿录入\",{\"1\":{\"927\":1}}],[\"账户健康因子是一个单一值\",{\"1\":{\"150\":1}}],[\"账户上最常引用的数据包括\",{\"1\":{\"135\":1}}],[\"账户以使其相关数据在链上可用的费用称为\",{\"1\":{\"124\":1}}],[\"账户数据大小限制\",{\"0\":{\"120\":1}}],[\"账户和元数据的组合大小可能会有所不同\",{\"1\":{\"116\":1}}],[\"账户地址索引的紧凑数组\",{\"1\":{\"117\":1}}],[\"账户地址\",{\"1\":{\"116\":1}}],[\"账户余额的数字表示\",{\"1\":{\"111\":1}}],[\"账户结构\",{\"1\":{\"111\":1}}],[\"账户都有一个程序\",{\"1\":{\"111\":1}}],[\"账户需要sol为单位的租金\",{\"1\":{\"111\":1}}],[\"账户最多存储10mb包含可执行程序\",{\"1\":{\"111\":1}}],[\"账户是solana的核心要素\",{\"1\":{\"111\":1}}],[\"账户模型\",{\"0\":{\"111\":1}}],[\"贷记余额\",{\"1\":{\"927\":1}}],[\"桥接器作为结构型设计模式\",{\"1\":{\"911\":1}}],[\"桥接模式符合开闭原则\",{\"1\":{\"909\":1}}],[\"桥接模式提高了抽象和实现的独立性\",{\"1\":{\"909\":1}}],[\"桥接模式能将抽象部分和实现部分分离\",{\"1\":{\"909\":1}}],[\"桥接模式的主要作用是\",{\"1\":{\"909\":1}}],[\"桥接模式建立一个桥接结构去搭起抽象部分和实现部分\",{\"1\":{\"909\":1}}],[\"桥接模式是一种结构型设计模式\",{\"1\":{\"909\":1}}],[\"桥接模式\",{\"0\":{\"909\":1}}],[\"桥水基金的老大瑞达里奥去年年末写的\",{\"1\":{\"528\":1}}],[\"欧洲\",{\"1\":{\"903\":1}}],[\"欧元\",{\"1\":{\"182\":1}}],[\"违反单一职责原则\",{\"1\":{\"899\":1}}],[\"潜在的性能问题\",{\"1\":{\"899\":1}}],[\"潜意识中的东西就像房子的地下室里的物品一样\",{\"1\":{\"574\":1}}],[\"懒汉式单例模式是指在第一次使用对象时才创建对象\",{\"1\":{\"899\":1}}],[\"懒汉式\",{\"0\":{\"899\":1}}],[\"封装复杂对象的创建过程\",{\"1\":{\"873\":1}}],[\"封装一个复杂对象的创建过程\",{\"1\":{\"872\":1}}],[\"封装单调队列的方式解题\",{\"1\":{\"336\":1}}],[\"父类可以控制子类的执行顺序\",{\"1\":{\"860\":1}}],[\"父母或老师们应该设法塑造孩子的价值观吗\",{\"1\":{\"626\":1}}],[\"备忘录模式适用于需要保存和恢复对象状态\",{\"1\":{\"839\":1}}],[\"备忘录模式是一种将对象状态保存到外部对象中\",{\"1\":{\"839\":1}}],[\"备忘录模式是一种行为型设计模式\",{\"1\":{\"837\":1}}],[\"备忘录模式可以实现对象状态的历史记录和回溯\",{\"1\":{\"837\":1}}],[\"备忘录模式可以实现对象状态的管理和控制\",{\"1\":{\"837\":1}}],[\"备忘录模式可以实现对象的撤销\",{\"1\":{\"837\":1}}],[\"备忘录模式可以保护对象的封装性\",{\"1\":{\"837\":1}}],[\"备忘录模式的优点有以下几种\",{\"1\":{\"837\":1}}],[\"备忘录模式的用法有以下几种\",{\"1\":{\"837\":1}}],[\"备忘录模式\",{\"0\":{\"837\":1}}],[\"备份期间业务依然可以对数据进行更新操作\",{\"1\":{\"364\":1}}],[\"撤销\",{\"1\":{\"821\":1}}],[\"撤销处理结果\",{\"1\":{\"206\":1}}],[\"降低系统的耦合度\",{\"1\":{\"834\":1}}],[\"降低了代码的复杂度和出错率\",{\"1\":{\"848\":1,\"854\":1}}],[\"降低了系统的耦合度\",{\"1\":{\"826\":1}}],[\"降低了耦合\",{\"1\":{\"815\":1}}],[\"降低耦合度\",{\"1\":{\"813\":1}}],[\"降低出问题的概率\",{\"1\":{\"386\":1}}],[\"房地产赚钱就是比做研发快得多\",{\"1\":{\"806\":1}}],[\"房地产等传统领域的资产\",{\"1\":{\"184\":1}}],[\"房产价炒的也很高\",{\"1\":{\"806\":1}}],[\"华为内部在二十世纪初有一个决策\",{\"1\":{\"806\":1}}],[\"呼啸而来\",{\"1\":{\"806\":1}}],[\"古话说得好\",{\"1\":{\"806\":1}}],[\"拥抱社区是产品活下去的关键之一\",{\"1\":{\"801\":1}}],[\"拥有栈的所有权\",{\"1\":{\"1132\":2}}],[\"拥有穿透时间的力量\",{\"1\":{\"674\":1}}],[\"拥有某些方面的优势却是可以让创业成功的概率显著提升\",{\"1\":{\"673\":1}}],[\"拥有知识和技能的人们需要花费大量的时间来学习\",{\"1\":{\"646\":1}}],[\"拥有知识和技能的人们可以通过多种方式实现财富创造\",{\"1\":{\"646\":1,\"649\":1}}],[\"拥有对信息的理解\",{\"1\":{\"646\":1}}],[\"拥有资本的人们可以建立工厂\",{\"1\":{\"646\":1}}],[\"拥有肥沃土地的人们更容易获得丰收和财富\",{\"1\":{\"646\":1}}],[\"拥有生产资料的人\",{\"1\":{\"646\":1,\"677\":1}}],[\"拥有数字资产的web3\",{\"1\":{\"534\":1}}],[\"拥有了崩溃恢复能力\",{\"1\":{\"377\":1}}],[\"拥有自己的数据\",{\"1\":{\"193\":1}}],[\"闭门造车一定不会竞争过开源产品\",{\"1\":{\"801\":1}}],[\"帮助你理解\",{\"1\":{\"1156\":1}}],[\"帮助产品不断迭代\",{\"1\":{\"801\":1}}],[\"帮助我们无谓地恐惧自己\",{\"1\":{\"585\":1}}],[\"帮助我们简单地构建一下web服务\",{\"1\":{\"516\":1}}],[\"产品是为人服务的\",{\"1\":{\"801\":1}}],[\"产生两个主服务\",{\"1\":{\"413\":1}}],[\"产生的redo\",{\"1\":{\"357\":1}}],[\"产生的\",{\"1\":{\"357\":1}}],[\"低调\",{\"1\":{\"795\":1}}],[\"低头专注于当下\",{\"1\":{\"587\":1}}],[\"低头看看我们正在走的路\",{\"1\":{\"570\":1}}],[\"巴勒斯坦\",{\"1\":{\"795\":1}}],[\"巴甫洛夫的狗最为著名\",{\"1\":{\"622\":1}}],[\"南朝鲜\",{\"1\":{\"795\":1}}],[\"南朝鲜关系等等\",{\"1\":{\"795\":1}}],[\"乌克兰\",{\"1\":{\"795\":1}}],[\"俄罗斯\",{\"1\":{\"795\":1}}],[\"俄乌冲突\",{\"1\":{\"795\":1}}],[\"招一个人最终目的是为公司有产出\",{\"1\":{\"792\":1}}],[\"招人喜欢\",{\"1\":{\"581\":1}}],[\"色情片的本质是人为刺激大脑\",{\"1\":{\"789\":1}}],[\"色情等来阻止用户探索围墙之外的更大的互联网\",{\"1\":{\"534\":1}}],[\"睡前刷短视频已经成了现代人的通病\",{\"1\":{\"789\":1}}],[\"睡眠时间不足6小时\",{\"1\":{\"788\":1}}],[\"冥想可以放松大脑\",{\"1\":{\"789\":1}}],[\"冥想\",{\"1\":{\"789\":1}}],[\"仰卧起坐\",{\"1\":{\"789\":1}}],[\"剧烈运动可能会让你的身体疲惫不堪\",{\"1\":{\"789\":1}}],[\"剧烈运动会使你的身体释放大量的内啡肽\",{\"1\":{\"789\":1}}],[\"众所周知\",{\"1\":{\"789\":1,\"1044\":1}}],[\"化学物质\",{\"1\":{\"789\":1}}],[\"柔和的焦点\",{\"1\":{\"789\":1}}],[\"沙子和海洋的景象和声音对人类大脑来说是放松的\",{\"1\":{\"789\":1}}],[\"穿跑步鞋运动半小时\",{\"1\":{\"789\":1}}],[\"吃垃圾食品\",{\"1\":{\"788\":1}}],[\"躺在沙发上玩游戏\",{\"1\":{\"787\":1}}],[\"祸起萧墙一个言论让一整个家族在一夜之间倾覆也是常见的事情\",{\"1\":{\"784\":1}}],[\"尤其\",{\"1\":{\"784\":1}}],[\"尤其是当他们告诉你你们都是一家人的时候\",{\"1\":{\"751\":1}}],[\"尤其是从20世纪80年代中期开始\",{\"1\":{\"648\":1}}],[\"尤其是劳动和消费\",{\"1\":{\"648\":1}}],[\"尤其是虚拟世界的垄断企业\",{\"1\":{\"598\":1}}],[\"尤其是那些不太传统的职业\",{\"1\":{\"585\":1}}],[\"言论自由是现代社会的产物\",{\"1\":{\"784\":1}}],[\"言论自由的假象在于言论自由是现代社会赋予个体的权利\",{\"1\":{\"784\":1}}],[\"言论自由的假象\",{\"0\":{\"784\":1}}],[\"谈论政治也是危险的\",{\"1\":{\"784\":1}}],[\"谈论政治也是非常危险的\",{\"1\":{\"783\":1}}],[\"谈论政治是危险的\",{\"0\":{\"782\":1}}],[\"玖玖小炒\",{\"1\":{\"779\":1}}],[\"墙裂推荐这家店里的朗姆酒味冰激凌\",{\"1\":{\"779\":1}}],[\"碰碰凉\",{\"1\":{\"779\":1}}],[\"碰到处于\",{\"1\":{\"360\":1}}],[\"慢慢成为一个不会使用技术的老人\",{\"1\":{\"773\":1}}],[\"烛光更自然\",{\"1\":{\"773\":1}}],[\"荧光灯\",{\"1\":{\"773\":1}}],[\"讨厌\",{\"1\":{\"773\":1}}],[\"讨论需要一种相互尊重和文明礼貌的氛围\",{\"1\":{\"627\":1}}],[\"讨论加深理解并促进问题的解决和决策\",{\"1\":{\"627\":1}}],[\"汽车取代了马\",{\"1\":{\"773\":1}}],[\"哦\",{\"1\":{\"771\":1}}],[\"胁迫和对改变的抗拒\",{\"1\":{\"771\":1}}],[\"刚刚被分配并且还没有被初始化\",{\"1\":{\"1132\":1}}],[\"刚刚好\",{\"1\":{\"771\":1}}],[\"刚才写的\",{\"1\":{\"58\":1}}],[\"墨守成规\",{\"1\":{\"771\":1}}],[\"岁的人一生都抗拒改变\",{\"1\":{\"771\":1}}],[\"岁的人应该为自己感到羞愧\",{\"1\":{\"771\":1}}],[\"岁的人取代\",{\"1\":{\"771\":1}}],[\"岁的人被一个\",{\"1\":{\"771\":1}}],[\"岁左右这个年龄段\",{\"1\":{\"771\":1}}],[\"岁或以下时流行的歌曲\",{\"1\":{\"771\":1}}],[\"岁以下\",{\"1\":{\"771\":1}}],[\"岁时想写音乐剧到最近想当一个作家\",{\"1\":{\"572\":1}}],[\"岁时想写电影配乐到\",{\"1\":{\"572\":1}}],[\"岁时想当企业家\",{\"1\":{\"572\":1}}],[\"岁时想当总统\",{\"1\":{\"572\":1}}],[\"岁时想当电影明星到\",{\"1\":{\"572\":1}}],[\"屯币的价值就在于你是否坚定地走上这条路\",{\"1\":{\"767\":1}}],[\"屯比特币就是币圈内大家都知道可以最后变得富有的路径\",{\"1\":{\"767\":1}}],[\"屯比特币\",{\"0\":{\"767\":1},\"1\":{\"767\":1}}],[\"努力投资\",{\"1\":{\"795\":1}}],[\"努力存钱\",{\"1\":{\"795\":1}}],[\"努力赚钱\",{\"1\":{\"795\":1}}],[\"努力工作\",{\"1\":{\"795\":1}}],[\"努力工作可以带来成就感\",{\"1\":{\"623\":1}}],[\"努力的人在任何时代都可以获得自己想要的生活\",{\"1\":{\"764\":1}}],[\"云服务\",{\"1\":{\"764\":1}}],[\"云服务的发展已经成为社会的基础设施\",{\"1\":{\"711\":1}}],[\"旅游也有对应的平台\",{\"1\":{\"764\":1}}],[\"偶然聊到了这个话题\",{\"1\":{\"764\":1}}],[\"偶尔\",{\"1\":{\"377\":1}}],[\"笑来在群里讲课的几年对我的投资观\",{\"1\":{\"759\":1}}],[\"居住环境舒适\",{\"1\":{\"759\":1}}],[\"宿舍上下床\",{\"1\":{\"759\":1}}],[\"瞬间而已\",{\"1\":{\"757\":1}}],[\"毕业想法\",{\"0\":{\"760\":1}}],[\"毕业感想\",{\"0\":{\"757\":1}}],[\"毕竟\",{\"1\":{\"751\":1}}],[\"毕竟自己的感觉可是实实在在的\",{\"1\":{\"673\":1}}],[\"毕竟自己的未来还长\",{\"1\":{\"592\":1}}],[\"毕竟选择决定命运嘛\",{\"1\":{\"631\":1}}],[\"毕竟没有数字技术的时代也依然有谎言\",{\"1\":{\"611\":1}}],[\"毕竟这里不是朝鲜\",{\"1\":{\"552\":1}}],[\"毕竟是求最大价值\",{\"1\":{\"236\":1}}],[\"净资产\",{\"1\":{\"754\":1}}],[\"净利润约19\",{\"1\":{\"163\":1}}],[\"衣服\",{\"1\":{\"751\":1}}],[\"衣服比你的好看\",{\"1\":{\"683\":1}}],[\"鞋子\",{\"1\":{\"751\":1}}],[\"员工被告知\",{\"1\":{\"751\":1}}],[\"员工的角度来看\",{\"1\":{\"751\":1}}],[\"员工的全部成本\",{\"1\":{\"751\":1}}],[\"雇新的来省钱\",{\"1\":{\"751\":1}}],[\"雇主真的在乎你吗\",{\"0\":{\"751\":1}}],[\"雇主从其他国家进口非熟练劳动力\",{\"1\":{\"653\":1}}],[\"遗漏的地方更少\",{\"1\":{\"751\":1}}],[\"熟悉新的清洁技术\",{\"1\":{\"751\":1}}],[\"熟悉一段时间你就解放了\",{\"1\":{\"494\":1}}],[\"付给清洁工\",{\"1\":{\"751\":1}}],[\"掌握生产知识并会变现的人越来越富有\",{\"1\":{\"747\":1}}],[\"掌握更多的知识\",{\"1\":{\"746\":1}}],[\"寒带的人只能捕猎或者长途跋涉来获取食物\",{\"1\":{\"746\":1}}],[\"贫富差距已经无法解决了\",{\"1\":{\"795\":1}}],[\"贫富差距\",{\"1\":{\"795\":1}}],[\"贫富差距逐步扩大也是社会发展的必然结果\",{\"1\":{\"746\":1}}],[\"贫富差距是不可避免的\",{\"1\":{\"746\":1}}],[\"贫富差距不可避免\",{\"0\":{\"746\":1}}],[\"休息是一门艺术\",{\"1\":{\"788\":1}}],[\"休闲\",{\"1\":{\"743\":1}}],[\"休眠一会\",{\"1\":{\"386\":1}}],[\"销售产品想法\",{\"1\":{\"740\":1}}],[\"销毁等\",{\"1\":{\"896\":1}}],[\"销毁续约锁即可\",{\"1\":{\"436\":1}}],[\"销毁值的函数\",{\"1\":{\"395\":1}}],[\"销毁键的函数\",{\"1\":{\"395\":1}}],[\"销毁\",{\"1\":{\"118\":1}}],[\"花在制作视频的时间\",{\"1\":{\"739\":1}}],[\"花在写文章的时间\",{\"1\":{\"739\":1}}],[\"杀马特\",{\"1\":{\"735\":1}}],[\"杀不死我的会让我更强大\",{\"1\":{\"552\":1}}],[\"杀不死我的会是我更强大\",{\"1\":{\"534\":1}}],[\"杀不死我的\",{\"1\":{\"534\":1}}],[\"闹市里哪里有热点可凑\",{\"1\":{\"734\":1}}],[\"归还加锁\",{\"1\":{\"1149\":1}}],[\"归还\",{\"1\":{\"1037\":1}}],[\"归并排序的时间复杂度是o\",{\"1\":{\"948\":1}}],[\"归并排序\",{\"0\":{\"948\":1}}],[\"归功于信息近乎零成本传输的今天\",{\"1\":{\"731\":1}}],[\"归档日志\",{\"1\":{\"355\":2}}],[\"归档内容\",{\"0\":{\"0\":1}}],[\"浏览器不主动请求\",{\"1\":{\"1073\":1}}],[\"浏览器与新事物\",{\"0\":{\"731\":1}}],[\"浏览话题中心\",{\"1\":{\"23\":1}}],[\"听起来很熟悉\",{\"1\":{\"725\":1}}],[\"泥巴大球\",{\"1\":{\"723\":1}}],[\"额外的沟通开销是\",{\"1\":{\"722\":1}}],[\"额外的故意等待\",{\"1\":{\"360\":1}}],[\"神话人物月\",{\"1\":{\"722\":1}}],[\"神经不紧绷\",{\"1\":{\"698\":1}}],[\"布尔类型的命令行参数用于表示某个选项是否开启或关闭\",{\"1\":{\"1161\":1}}],[\"布尔类型的dp\",{\"1\":{\"267\":1}}],[\"布尔类型\",{\"1\":{\"1161\":1}}],[\"布鲁克斯\",{\"1\":{\"722\":1}}],[\"弗雷德\",{\"1\":{\"722\":1}}],[\"弗里曼一样优秀\",{\"1\":{\"580\":1}}],[\"缩短\",{\"1\":{\"722\":1}}],[\"缩进\",{\"1\":{\"58\":1}}],[\"模块和函数应该对扩展开放\",{\"1\":{\"982\":1}}],[\"模块化\",{\"1\":{\"1017\":1}}],[\"模块化单体与分布的泥球完全相反\",{\"1\":{\"724\":1}}],[\"模块化通常既难以捉摸\",{\"1\":{\"723\":1}}],[\"模块化实际上是可取的呢\",{\"1\":{\"722\":1}}],[\"模拟接口行为\",{\"0\":{\"977\":1}}],[\"模板方法模式是一种非常有用的设计模式\",{\"1\":{\"862\":1}}],[\"模板方法模式是一种行为型设计模式\",{\"1\":{\"859\":1}}],[\"模板方法模式可以让子类在不改变算法结构的情况下\",{\"1\":{\"859\":1}}],[\"模版模式\",{\"0\":{\"859\":1}}],[\"模式通过共享多个对象的部分状态来实现上述功能\",{\"1\":{\"932\":1}}],[\"模式变量\",{\"1\":{\"450\":1}}],[\"模式的订阅与退订\",{\"1\":{\"423\":1}}],[\"模式持久化时\",{\"1\":{\"414\":1}}],[\"模式和\",{\"1\":{\"358\":1}}],[\"模式\",{\"1\":{\"358\":2,\"1142\":1}}],[\"模式中的字符\",{\"1\":{\"291\":1}}],[\"桌面\",{\"1\":{\"721\":1}}],[\"访谈\",{\"1\":{\"721\":1}}],[\"访问内存需要加锁\",{\"1\":{\"1147\":1}}],[\"访问具体元素b\",{\"1\":{\"867\":1}}],[\"访问具体元素a\",{\"1\":{\"867\":1}}],[\"访问者模式适用于对象结构包含多个类型的对象\",{\"1\":{\"868\":1}}],[\"访问者模式是一种将对对象结构中各个元素的操作封装在不同的访问者类中\",{\"1\":{\"868\":1}}],[\"访问者模式是一种行为型设计模式\",{\"1\":{\"865\":1}}],[\"访问者模式可以实现对对象结构中各个元素的动态访问\",{\"1\":{\"866\":1}}],[\"访问者模式可以实现对对象结构中各个元素的统一处理\",{\"1\":{\"866\":1}}],[\"访问者模式可以实现对象结构和操作的解耦\",{\"1\":{\"866\":1}}],[\"访问者模式可以将数据结构和数据操作分离\",{\"1\":{\"865\":1}}],[\"访问者模式的优点有以下几种\",{\"1\":{\"866\":1}}],[\"访问者模式的用法有以下几种\",{\"1\":{\"866\":1}}],[\"访问者模式\",{\"0\":{\"865\":1}}],[\"访问\",{\"1\":{\"473\":1}}],[\"访问数组索引越界等等\",{\"1\":{\"446\":1}}],[\"晋升渠道紧缩\",{\"1\":{\"718\":1}}],[\"科技公司不断发展前沿科技\",{\"1\":{\"717\":1}}],[\"科学家可以通过做实验试错来继续做研究\",{\"1\":{\"783\":1}}],[\"科学家在研究临终的人对自己一生的感受时\",{\"1\":{\"570\":1}}],[\"科学的操作\",{\"0\":{\"622\":1}}],[\"科学的操纵\",{\"1\":{\"618\":1}}],[\"科学技术\",{\"1\":{\"528\":1}}],[\"考公这件事就绝对是这样的幻想\",{\"1\":{\"717\":1}}],[\"考虑一个问题\",{\"1\":{\"677\":1}}],[\"考虑一下你对该话题已经了解的知识\",{\"1\":{\"627\":1}}],[\"考虑一下你的反应是否借鉴了别人的看法\",{\"1\":{\"623\":1}}],[\"考虑一下一个多世纪前在心理学中流行的思想所引发的一系列事件\",{\"1\":{\"620\":1}}],[\"考虑所有事实和可能的解释\",{\"1\":{\"654\":1}}],[\"考虑价值观的议题\",{\"1\":{\"626\":1}}],[\"考虑到与根本性使命改变有关的大红色循环\",{\"1\":{\"588\":1}}],[\"考虑到递推公式的特性\",{\"1\":{\"244\":1}}],[\"考虑终点\",{\"1\":{\"584\":1}}],[\"考虑是否刷新aof\",{\"1\":{\"422\":1}}],[\"考虑以下\",{\"1\":{\"287\":1}}],[\"考虑下标i\",{\"1\":{\"248\":1}}],[\"考虑coins\",{\"1\":{\"242\":1,\"244\":2}}],[\"战略合作等\",{\"1\":{\"714\":1}}],[\"股价相对很低\",{\"1\":{\"714\":1}}],[\"股票经纪人欺骗了他们\",{\"1\":{\"703\":1}}],[\"股票\",{\"1\":{\"528\":1,\"751\":1}}],[\"股票价格\",{\"1\":{\"252\":2,\"253\":6,\"254\":4}}],[\"股票问题\",{\"0\":{\"251\":1},\"1\":{\"223\":1}}],[\"阿里巴巴\",{\"1\":{\"714\":1}}],[\"远程过程调用\",{\"1\":{\"1063\":1,\"1066\":1}}],[\"远远超出了\",{\"1\":{\"725\":1}}],[\"远远超过你想象的\",{\"1\":{\"710\":1}}],[\"远远低于实际为社会创造的实际价值\",{\"1\":{\"714\":1}}],[\"远见可以翻译为\",{\"1\":{\"674\":1}}],[\"远见是所有强大思维模式最重要的特征\",{\"1\":{\"674\":1}}],[\"远见\",{\"1\":{\"674\":1}}],[\"免费用户默认有1gb的云加密空间存储\",{\"1\":{\"710\":1}}],[\"音乐\",{\"1\":{\"709\":1}}],[\"音频\",{\"1\":{\"393\":1,\"402\":1}}],[\"遭到黑客攻击的故事\",{\"1\":{\"706\":1}}],[\"遭到监禁\",{\"1\":{\"643\":1}}],[\"永远不要犯这个错误\",{\"1\":{\"706\":1}}],[\"永远永远永远不要这样做\",{\"1\":{\"706\":1}}],[\"永远都不会是\",{\"1\":{\"587\":1}}],[\"破产\",{\"0\":{\"706\":1}}],[\"称其为等待\",{\"1\":{\"705\":1}}],[\"称为临键锁\",{\"1\":{\"373\":1}}],[\"称为间隙锁\",{\"1\":{\"372\":1}}],[\"称为记录锁\",{\"1\":{\"371\":1}}],[\"称为集群\",{\"1\":{\"137\":1}}],[\"称为指令\",{\"1\":{\"126\":2}}],[\"称为\",{\"1\":{\"122\":1,\"123\":1,\"129\":1}}],[\"储备证明\",{\"1\":{\"703\":1}}],[\"旁注\",{\"1\":{\"703\":1}}],[\"赌掉了自己的真币\",{\"1\":{\"703\":1}}],[\"诈骗用户\",{\"1\":{\"701\":1}}],[\"诈骗数额是二十五分之一个小目标\",{\"1\":{\"605\":1}}],[\"私有类型的导出方法\",{\"1\":{\"956\":1}}],[\"私有数据\",{\"1\":{\"395\":1}}],[\"私钥对\",{\"1\":{\"1047\":1}}],[\"私钥对进行签名\",{\"1\":{\"1047\":1}}],[\"私钥\",{\"1\":{\"701\":1}}],[\"闲逛的好处\",{\"0\":{\"698\":1}}],[\"莫扎特其实并没有死去\",{\"1\":{\"695\":1}}],[\"牛顿这些人\",{\"1\":{\"695\":1}}],[\"牛逼的地方在于实现了颗粒度更细的行级锁\",{\"1\":{\"366\":1}}],[\"孔子\",{\"1\":{\"695\":1}}],[\"十大排序\",{\"0\":{\"943\":1,\"1286\":1}}],[\"十年\",{\"1\":{\"806\":2}}],[\"十有八九你的下意识反应一定是抵触\",{\"1\":{\"692\":1}}],[\"十几岁的人其实是不具备完整的思考能力的\",{\"1\":{\"551\":1}}],[\"售后服务占10\",{\"1\":{\"683\":1}}],[\"售后占20\",{\"1\":{\"683\":1}}],[\"售后\",{\"1\":{\"683\":1}}],[\"售出将产生5\",{\"1\":{\"28\":1}}],[\"售出已有的话题份额\",{\"1\":{\"23\":1}}],[\"氮气的占比是78\",{\"1\":{\"683\":1}}],[\"拼命去思考如何做能让未来赢的决策\",{\"1\":{\"680\":1}}],[\"拼多多\",{\"1\":{\"533\":1}}],[\"婚姻伴侣这种对人生都影响长远的选择呢\",{\"1\":{\"680\":1}}],[\"婚姻或继承来源就已富裕的人来说\",{\"1\":{\"571\":1}}],[\"缺点是多了一层抽象\",{\"1\":{\"884\":1}}],[\"缺点是多了一层抽象层\",{\"1\":{\"876\":1}}],[\"缺乏独立思考能力造成的\",{\"1\":{\"680\":1}}],[\"缺一不可\",{\"1\":{\"621\":1}}],[\"扩展功能等目的\",{\"1\":{\"937\":1}}],[\"扩展性\",{\"1\":{\"860\":1}}],[\"扩展知识领域\",{\"1\":{\"677\":1}}],[\"扩展为表上的所有列\",{\"1\":{\"347\":1}}],[\"拍视频等\",{\"1\":{\"677\":1}}],[\"土地是生产粮食和农产品的生产资料\",{\"1\":{\"677\":1}}],[\"土地成为他们赖以生存的根基\",{\"1\":{\"646\":1}}],[\"土地成为了新的关键生产资料\",{\"1\":{\"646\":1}}],[\"融资演讲需要创始人的电子以及演讲水平\",{\"1\":{\"674\":1}}],[\"融资\",{\"1\":{\"674\":1}}],[\"融入知识阶级\",{\"0\":{\"646\":1}}],[\"木桶理论\",{\"1\":{\"674\":1}}],[\"木马病毒\",{\"1\":{\"534\":1}}],[\"障碍\",{\"1\":{\"674\":1}}],[\"勇气是唯一不可伪造的美德\",{\"1\":{\"674\":1}}],[\"勇气和毅力\",{\"1\":{\"674\":1}}],[\"足智多谋\",{\"1\":{\"674\":1}}],[\"足够擅长这项运动以取得成功\",{\"1\":{\"580\":1}}],[\"足够应付高并发场景了\",{\"1\":{\"436\":1}}],[\"仿佛又了金钱就可以创业成功\",{\"1\":{\"673\":1}}],[\"仿佛过去的都是错误的\",{\"1\":{\"528\":1}}],[\"马没有问题\",{\"1\":{\"773\":1}}],[\"马斯克这种顶级富豪\",{\"1\":{\"746\":1}}],[\"马化腾这些创业成功的人\",{\"1\":{\"673\":1}}],[\"马上读取\",{\"1\":{\"383\":1}}],[\"马上执行\",{\"1\":{\"362\":1}}],[\"扎克伯格\",{\"1\":{\"673\":1}}],[\"凭借其简单易用性使我们可以迅速构建web应用\",{\"1\":{\"1060\":1}}],[\"凭借其坚实的\",{\"1\":{\"721\":1}}],[\"凭借经验发送\",{\"1\":{\"388\":1}}],[\"凭什么不公平还可以当作优势了\",{\"1\":{\"673\":1}}],[\"塔勒布是这个世界上极度聪明的人\",{\"1\":{\"669\":1}}],[\"塔勒布\",{\"1\":{\"669\":1}}],[\"塔佛瑞斯\",{\"1\":{\"653\":1}}],[\"债务危机\",{\"1\":{\"669\":1}}],[\"债券\",{\"1\":{\"184\":1}}],[\"达里奥出生是一个普通家庭\",{\"1\":{\"669\":1}}],[\"达到科技创新的目的\",{\"1\":{\"605\":1}}],[\"达到人类知识的顶峰\",{\"1\":{\"605\":1}}],[\"达到\",{\"1\":{\"580\":1}}],[\"达到dp\",{\"1\":{\"254\":1}}],[\"瑞达里奥\",{\"1\":{\"669\":1}}],[\"独立思考的对立面就是感觉\",{\"1\":{\"680\":1}}],[\"独立思考不是来秀优越感的\",{\"1\":{\"680\":1}}],[\"独立思考指南\",{\"1\":{\"669\":1}}],[\"独占表锁\",{\"1\":{\"368\":2}}],[\"独占锁\",{\"1\":{\"368\":1,\"370\":1}}],[\"繁荣与停滞\",{\"1\":{\"669\":1}}],[\"东南大学生存指南\",{\"1\":{\"669\":1}}],[\"东南大学学生生存指南\",{\"1\":{\"503\":1,\"669\":1}}],[\"滴滴等\",{\"1\":{\"663\":1}}],[\"搬迁好几次博客让我想到一件事情\",{\"1\":{\"660\":1}}],[\"搬迁博客的扯淡成本\",{\"1\":{\"660\":1}}],[\"逻辑可以看到\",{\"1\":{\"1135\":1}}],[\"逻辑也非常简单\",{\"1\":{\"1135\":1}}],[\"逻辑也很简单\",{\"1\":{\"1135\":1}}],[\"逻辑也比较简单\",{\"1\":{\"1135\":1}}],[\"逻辑化\",{\"1\":{\"660\":1}}],[\"逻辑思考指南\",{\"1\":{\"503\":1}}],[\"倘若自己记笔记\",{\"1\":{\"660\":1}}],[\"迁移博客\",{\"0\":{\"660\":1}}],[\"妨碍知识的习惯\",{\"1\":{\"657\":1}}],[\"宗教信仰的意思是对不能证明的事物的信仰\",{\"1\":{\"656\":1}}],[\"挑选更多的印度人而不是本地非洲人去修建东非的铁路\",{\"1\":{\"653\":1}}],[\"挑选出一个状态良好\",{\"1\":{\"426\":1}}],[\"挑选出一个从服务器\",{\"1\":{\"426\":1}}],[\"强大的现实\",{\"1\":{\"674\":1}}],[\"强化了愤怒的态度\",{\"1\":{\"653\":1}}],[\"强一致\",{\"1\":{\"387\":1}}],[\"卡罗尔\",{\"1\":{\"653\":1}}],[\"承认无知是通往知识关键的第一步\",{\"1\":{\"657\":1}}],[\"承认自己不知道某事\",{\"1\":{\"657\":1}}],[\"承认自己所不知道的事情\",{\"1\":{\"627\":1}}],[\"承担照料孩子和年迈父母责任的男人显示出同样的抚育特质\",{\"1\":{\"653\":1}}],[\"显而易见\",{\"1\":{\"674\":1}}],[\"显然gin\",{\"1\":{\"1055\":1}}],[\"显然\",{\"1\":{\"653\":1}}],[\"显示详细信息\",{\"1\":{\"1161\":2,\"1162\":1}}],[\"显示器只有两个状态\",{\"1\":{\"1009\":1}}],[\"显示节点正在导入槽i\",{\"1\":{\"432\":1}}],[\"显示的是镜像下载到本地后\",{\"1\":{\"51\":1}}],[\"她的结论是\",{\"1\":{\"653\":1}}],[\"她的发现结果挑战了这个传统智慧\",{\"1\":{\"653\":1}}],[\"她缺乏对如何找到幸福关系的基本理解\",{\"1\":{\"585\":1}}],[\"芭芭拉\",{\"1\":{\"653\":1}}],[\"女人比个男人更有抚育特质\",{\"1\":{\"653\":1}}],[\"治愈任何疾病\",{\"1\":{\"648\":1}}],[\"劳动力占国内生产总值的份额以同样的速度增长\",{\"1\":{\"648\":1}}],[\"吸引了很多人的注意力\",{\"1\":{\"648\":1}}],[\"效果非常好\",{\"1\":{\"648\":1}}],[\"医生等协助\",{\"1\":{\"648\":1}}],[\"医学专业的一年级学生看到经验丰富的外科医生工作时会想\",{\"1\":{\"578\":1}}],[\"根本原因是真正重要的事情做起来太难\",{\"1\":{\"754\":1}}],[\"根本原因是当前我们的时代仍然是工业社会的末尾阶段\",{\"1\":{\"648\":1}}],[\"根据方法名获取结构体方法信息\",{\"1\":{\"1192\":1}}],[\"根据字段名获取结构体字段信息\",{\"1\":{\"1192\":1}}],[\"根据回车来停止扫描\",{\"1\":{\"1171\":1}}],[\"根据上下文\",{\"1\":{\"1225\":1}}],[\"根据上下文计算当前互斥锁的最新状态\",{\"1\":{\"1142\":1}}],[\"根据上下文信息\",{\"1\":{\"1055\":1}}],[\"根据field\",{\"1\":{\"1088\":1}}],[\"根据当前请求的路径与参数查询出对应的处理函数value\",{\"1\":{\"1055\":1}}],[\"根据选项的作用范围\",{\"1\":{\"991\":1}}],[\"根据指数递减\",{\"1\":{\"767\":1}}],[\"根据一线城市财富自由的标准来看\",{\"1\":{\"767\":1}}],[\"根据之前的论述\",{\"1\":{\"623\":1}}],[\"根据数据\",{\"1\":{\"585\":1}}],[\"根据你所反思的一切\",{\"1\":{\"585\":1}}],[\"根据你当前与速度相关的优势以及你认为自己在每个领域能够提高多少\",{\"1\":{\"584\":1}}],[\"根据你目前与该领域相关的技能\",{\"1\":{\"584\":1}}],[\"根据不同类型的职业\",{\"1\":{\"581\":1}}],[\"根据他们观察到的和自己经历过的事情得出结论\",{\"1\":{\"581\":1}}],[\"根据他们的身份和所处的世界\",{\"1\":{\"570\":1}}],[\"根据我们的真实身份\",{\"1\":{\"577\":1}}],[\"根据每个职业领域你的潜力水平与该领域实现成功的一般难易程度进行比对后得出\",{\"1\":{\"572\":1}}],[\"根据李笑来的说法\",{\"1\":{\"525\":1}}],[\"根据函数名称\",{\"1\":{\"511\":1}}],[\"根据第三个包godoenv\",{\"1\":{\"510\":1}}],[\"根据其他sentinel发回的sentinel\",{\"1\":{\"426\":1}}],[\"根据这些信息\",{\"1\":{\"426\":1}}],[\"根据info命令的回复\",{\"1\":{\"426\":1}}],[\"根据给定的配置文件\",{\"1\":{\"426\":1}}],[\"根据情况\",{\"1\":{\"425\":1}}],[\"根据读入的数据库号码进行数\",{\"1\":{\"419\":1}}],[\"根据号码的大小不同\",{\"1\":{\"419\":1}}],[\"根据键值对的数量\",{\"1\":{\"419\":1}}],[\"根据键值对的\",{\"1\":{\"413\":1}}],[\"根据执行计划执行\",{\"1\":{\"349\":1}}],[\"根据词法分析的结果\",{\"1\":{\"345\":1}}],[\"根据结果计数\",{\"1\":{\"287\":1}}],[\"根据以上特点\",{\"1\":{\"287\":1}}],[\"根据\",{\"1\":{\"287\":1,\"1143\":1,\"1171\":1}}],[\"根据dp\",{\"1\":{\"259\":2,\"262\":1}}],[\"根据t3\",{\"1\":{\"192\":1}}],[\"根据资金池的使用率自动调整存借利率\",{\"1\":{\"166\":1}}],[\"根据资产抵押率计算可借额度\",{\"1\":{\"159\":1}}],[\"根据费用调整借款利率\",{\"1\":{\"152\":1}}],[\"根据利用率调整存款利率\",{\"1\":{\"152\":1}}],[\"根据仓库名列出镜像\",{\"1\":{\"54\":1}}],[\"误区\",{\"0\":{\"648\":1}}],[\"误解\",{\"0\":{\"647\":1}}],[\"研究和实践\",{\"1\":{\"646\":1}}],[\"研究的是如何将\",{\"1\":{\"220\":1}}],[\"积累知识更新知识都需要大量时间\",{\"1\":{\"646\":1}}],[\"积极的分数表明对搜索引擎的偏好\",{\"1\":{\"771\":1}}],[\"积极倾听\",{\"1\":{\"627\":1}}],[\"积极应对气候危机\",{\"1\":{\"611\":1}}],[\"积极做出关于价值观的决定\",{\"1\":{\"577\":1}}],[\"赞助和销售等方式获得收益\",{\"1\":{\"646\":1}}],[\"博客文章\",{\"1\":{\"740\":1}}],[\"博客\",{\"1\":{\"646\":1}}],[\"跃迁的本意是电子从原子的一个轨道跳跃到另一个轨道上的过程\",{\"1\":{\"646\":1}}],[\"体力是狩猎者最为重要的生产工具\",{\"1\":{\"646\":1}}],[\"体积过大的aof文件很可能对redis服务器\",{\"1\":{\"422\":1}}],[\"体积的问题就都会解决\",{\"1\":{\"56\":1}}],[\"奔跑吧程序员\",{\"1\":{\"669\":1}}],[\"奔跑\",{\"1\":{\"646\":1}}],[\"狩猎者依靠自身的力量\",{\"1\":{\"646\":1}}],[\"农耕文明和工业文明等不同阶段的生产资料\",{\"1\":{\"649\":1}}],[\"农耕文明和工业文明等不同的阶段\",{\"1\":{\"646\":1}}],[\"农耕文明经历了几千年\",{\"1\":{\"646\":1}}],[\"农耕文明中\",{\"1\":{\"646\":1}}],[\"农民可以在土地之上来进行耕种和收获\",{\"1\":{\"677\":1}}],[\"农民利用土地进行耕种\",{\"1\":{\"646\":1}}],[\"农民使用农具和机械来进行耕种和收获\",{\"1\":{\"646\":1}}],[\"农田就更不用说了\",{\"1\":{\"677\":1}}],[\"农田提供了土壤和种植条件\",{\"1\":{\"646\":1}}],[\"农田是生产粮食和农产品的生产资料\",{\"1\":{\"646\":1}}],[\"物力\",{\"1\":{\"646\":1,\"677\":1}}],[\"物品\",{\"1\":{\"243\":1}}],[\"物品0\",{\"1\":{\"241\":1}}],[\"物品遍历的for循环放在外层\",{\"1\":{\"237\":1}}],[\"物品还是先遍历背包重量呢\",{\"1\":{\"235\":1}}],[\"物品与背包重量\",{\"1\":{\"235\":1}}],[\"物品i重量\",{\"1\":{\"236\":1}}],[\"物品i的价值\",{\"1\":{\"235\":1,\"236\":1}}],[\"物品i无法放进背包中\",{\"1\":{\"235\":1}}],[\"物品3\",{\"1\":{\"235\":1}}],[\"物品2\",{\"1\":{\"235\":1,\"241\":1}}],[\"物品1\",{\"1\":{\"235\":1,\"241\":1}}],[\"物品为\",{\"1\":{\"235\":1,\"241\":1}}],[\"卓别林\",{\"1\":{\"643\":1}}],[\"阉割的产物\",{\"1\":{\"642\":1}}],[\"感兴趣的朋友可以自己了解一下\",{\"1\":{\"1135\":1}}],[\"感谢作者\",{\"1\":{\"1008\":1}}],[\"感知从一开始就是有选择的\",{\"1\":{\"640\":1}}],[\"感知一定是有缺陷的\",{\"1\":{\"640\":1}}],[\"感觉这个和time\",{\"1\":{\"1004\":1}}],[\"感觉有点过度宣传了\",{\"1\":{\"779\":1}}],[\"感觉是受当下看法的影响的\",{\"1\":{\"680\":1}}],[\"感觉是情感\",{\"1\":{\"626\":1}}],[\"感觉除了表达自身外没有别的目的\",{\"1\":{\"626\":1}}],[\"感觉在引导我们注意到自己应当思考的问题上是非常有用的\",{\"1\":{\"626\":1}}],[\"感觉对了\",{\"1\":{\"587\":1}}],[\"感觉得深入一下solana链基础才能配合后续更好的开发\",{\"1\":{\"108\":1}}],[\"篮球运动员在跳投之前已经超时了吗\",{\"1\":{\"637\":1}}],[\"篮球运动已经发展到了现在的超大型球场\",{\"1\":{\"579\":1}}],[\"抽象层一般可以将对自己的调用委派给实现的对象\",{\"1\":{\"911\":1}}],[\"抽象层和实施层均可独立开发不受影响\",{\"1\":{\"910\":1}}],[\"抽象层是计算机\",{\"1\":{\"910\":1}}],[\"抽烟不会因为我们喜欢抽烟而对健康无害\",{\"1\":{\"637\":1}}],[\"抽奖\",{\"1\":{\"95\":1}}],[\"俗语说每个人都在创造他的真理\",{\"1\":{\"637\":1}}],[\"近年来\",{\"1\":{\"637\":1}}],[\"近些年\",{\"1\":{\"533\":1}}],[\"挖坑文章\",{\"1\":{\"634\":1}}],[\"挖矿和区块链\",{\"1\":{\"99\":1}}],[\"锻炼身体的重要性\",{\"1\":{\"634\":1}}],[\"锻炼身体这件事情\",{\"1\":{\"633\":1}}],[\"锻炼身体\",{\"0\":{\"633\":1},\"1\":{\"739\":1}}],[\"培养正念\",{\"0\":{\"632\":1}}],[\"培育去中心化\",{\"1\":{\"611\":1}}],[\"狗就开始分泌唾液\",{\"1\":{\"631\":1}}],[\"铃声一响或红灯一亮\",{\"1\":{\"631\":1}}],[\"伸进口袋一摸手机正好在\",{\"1\":{\"631\":1}}],[\"猜猜看下一个视频是不是广告\",{\"1\":{\"631\":1}}],[\"猜想并形成预感和假设\",{\"1\":{\"627\":1}}],[\"搞笑等分类\",{\"1\":{\"631\":1}}],[\"搞成队列\",{\"1\":{\"280\":1}}],[\"校园\",{\"1\":{\"631\":1}}],[\"校验认证信息\",{\"1\":{\"1099\":1}}],[\"校验返回结果是否符合预期\",{\"1\":{\"973\":2}}],[\"校验状态码是否符合预期\",{\"1\":{\"972\":1}}],[\"校验用户身份\",{\"1\":{\"349\":1}}],[\"校验客户端的用户名和密码\",{\"1\":{\"342\":1}}],[\"恋爱\",{\"1\":{\"631\":1}}],[\"摘要\",{\"1\":{\"631\":1}}],[\"摘要删除镜像\",{\"1\":{\"55\":1}}],[\"括起来\",{\"1\":{\"628\":1}}],[\"抄袭了一篇\",{\"1\":{\"628\":1}}],[\"肯定不是这个世界也不是这个社会\",{\"1\":{\"680\":1}}],[\"肯定会有\",{\"1\":{\"385\":1}}],[\"肯尼迪\",{\"1\":{\"628\":1}}],[\"寻求1988年民主党总统候选人提名时\",{\"1\":{\"628\":1}}],[\"寻找伴侣\",{\"1\":{\"674\":1}}],[\"寻找冒充者\",{\"0\":{\"575\":1}}],[\"寻找到新的可代替的资源就可以实现持续发展了\",{\"1\":{\"500\":1}}],[\"拜登\",{\"1\":{\"628\":1}}],[\"拜占庭将军问题\",{\"1\":{\"95\":1}}],[\"剽窃是把他人的思想和语言冒充成自己的\",{\"1\":{\"628\":1}}],[\"抵制打断的冲动\",{\"1\":{\"627\":1}}],[\"抵押获得高利息以抵抗现实世界的高通胀\",{\"1\":{\"598\":1}}],[\"抵押物包括usdc\",{\"1\":{\"185\":1}}],[\"抵押物一般有股票\",{\"1\":{\"184\":1}}],[\"抵押比例为375\",{\"1\":{\"174\":1}}],[\"抵押\",{\"1\":{\"166\":2}}],[\"抵押nft贷款\",{\"1\":{\"151\":1}}],[\"抛弃自我中心和个人主义\",{\"1\":{\"627\":1}}],[\"遵从下述指导原则\",{\"1\":{\"627\":1}}],[\"疑问和断言\",{\"1\":{\"627\":1}}],[\"疑似下线状态\",{\"1\":{\"433\":1}}],[\"判定证据的意义是什么\",{\"1\":{\"627\":1}}],[\"判断当前goroutine能否进入自旋等互斥锁的释放比较严苛\",{\"1\":{\"1142\":1}}],[\"判断当前\",{\"1\":{\"1142\":1}}],[\"判断当前时间以及服务重启后的定时器失效问题\",{\"1\":{\"998\":1}}],[\"判断当下能考虑的理由\",{\"1\":{\"680\":1}}],[\"判断是否还有下一个元素\",{\"1\":{\"827\":2}}],[\"判断是否用户已经登录\",{\"1\":{\"200\":1}}],[\"判断哪些具有优缺点\",{\"1\":{\"680\":1}}],[\"判断其具备哪些优点\",{\"1\":{\"626\":1}}],[\"判断依据\",{\"0\":{\"597\":1},\"1\":{\"804\":1}}],[\"判断键所在的槽是否由自己负责\",{\"1\":{\"429\":1}}],[\"判断槽是否由当前节点负责处理\",{\"1\":{\"429\":1}}],[\"判断这个实例为客观下线\",{\"1\":{\"426\":1}}],[\"判断你输入的这个\",{\"1\":{\"345\":1}}],[\"判断该树是不是平衡二叉树\",{\"1\":{\"329\":1}}],[\"判断该数组是不是某二叉搜索树的后序遍历结果\",{\"1\":{\"306\":1}}],[\"判断b是不是a的子结构\",{\"1\":{\"297\":1}}],[\"判断数组中是否含有该整数\",{\"1\":{\"276\":1}}],[\"判断\",{\"1\":{\"263\":1,\"287\":1,\"297\":2,\"409\":1,\"627\":1}}],[\"判断子序列\",{\"0\":{\"263\":1}}],[\"判断回文\",{\"1\":{\"213\":1}}],[\"拒绝学习新工具\",{\"1\":{\"771\":1}}],[\"拒绝对其认可\",{\"1\":{\"627\":1}}],[\"拒绝牢狱\",{\"0\":{\"576\":1}}],[\"忽视平衡的必要性\",{\"1\":{\"627\":1}}],[\"忽略换行符\",{\"1\":{\"483\":1}}],[\"宁可困惑不解也不努力搞明白\",{\"1\":{\"627\":1}}],[\"践行公正性并且寻求平衡的观点\",{\"1\":{\"627\":1}}],[\"践踏人权\",{\"1\":{\"551\":1}}],[\"草率的思考者也能成为一名批判的思考者\",{\"1\":{\"627\":1}}],[\"恰恰相反\",{\"1\":{\"627\":1}}],[\"情绪\",{\"1\":{\"789\":1}}],[\"情绪和欲望的主观反映\",{\"1\":{\"626\":1}}],[\"情感等\",{\"1\":{\"776\":1}}],[\"情感和智力上都不得不依赖别人的告知\",{\"1\":{\"639\":1}}],[\"情况发生了变化\",{\"1\":{\"771\":1}}],[\"情况的第一反应当作试探性的\",{\"1\":{\"623\":1}}],[\"情况下\",{\"1\":{\"386\":1}}],[\"情况会是怎样的呢\",{\"1\":{\"383\":1}}],[\"情况\",{\"1\":{\"382\":1}}],[\"情况三\",{\"1\":{\"265\":1,\"267\":2}}],[\"情况二\",{\"1\":{\"265\":1,\"267\":2}}],[\"情况一\",{\"1\":{\"265\":1,\"267\":2}}],[\"谦让\",{\"1\":{\"623\":1}}],[\"谦卑的不安全感并不令人愉快\",{\"1\":{\"588\":1}}],[\"谦卑的人注定会受到影响\",{\"1\":{\"575\":1}}],[\"冲动的习惯\",{\"1\":{\"621\":1}}],[\"家庭和教师是影响儿童最主要的因素\",{\"1\":{\"621\":1}}],[\"家用物联网设备这些都是5000天以来发生的事情\",{\"1\":{\"531\":1}}],[\"歧视南欧人和中欧人\",{\"1\":{\"620\":1}}],[\"立刻设置处理器的\",{\"1\":{\"1137\":1}}],[\"立法者了解了考试结果后决定采取一些措施来阻止智力低下的人进入这个国家\",{\"1\":{\"620\":1}}],[\"立即重试很大概率\",{\"1\":{\"385\":1}}],[\"波兰人是10\",{\"1\":{\"620\":1}}],[\"波动币种在\",{\"1\":{\"159\":1}}],[\"迟到15分钟是正确的\",{\"1\":{\"619\":1}}],[\"迟到5分钟中被允许的\",{\"1\":{\"619\":1}}],[\"丹尼尔卡尼曼说不同地区的人都有不同的守时习惯\",{\"1\":{\"619\":1}}],[\"捍卫民主\",{\"1\":{\"611\":1}}],[\"谎言比真相流传的更久\",{\"1\":{\"611\":1}}],[\"气候危机这个词说起来非常严重\",{\"1\":{\"609\":1}}],[\"气候危机与集体注意力的缺失🎑\",{\"0\":{\"608\":1}}],[\"气候也是一样\",{\"1\":{\"609\":1}}],[\"气候难民\",{\"0\":{\"609\":1}}],[\"昨天看到一个新闻\",{\"1\":{\"605\":1}}],[\"山脉\",{\"1\":{\"789\":1}}],[\"山姆奥特曼\",{\"1\":{\"605\":1}}],[\"山丘\",{\"1\":{\"505\":1}}],[\"燃素\",{\"1\":{\"605\":1}}],[\"离开了云的网络设备也已经没有多少人能够接受了\",{\"1\":{\"709\":1}}],[\"离开后的结果\",{\"0\":{\"552\":1}}],[\"离骚\",{\"1\":{\"605\":1}}],[\"静待经济回暖时\",{\"1\":{\"598\":1}}],[\"静态变量不会被内联\",{\"1\":{\"457\":1}}],[\"静态变量和常量的区别\",{\"1\":{\"457\":1}}],[\"静态变量允许声明一个全局的变量\",{\"1\":{\"457\":1}}],[\"静态变量\",{\"0\":{\"457\":1}}],[\"静态常量\",{\"0\":{\"456\":1}}],[\"印钱都是很简单的度过危机的方式\",{\"1\":{\"596\":1}}],[\"抱怨总是最简单的\",{\"1\":{\"592\":1}}],[\"抱怨的章鱼提醒你\",{\"1\":{\"587\":1}}],[\"鸡蛋不能放在一个篮子里\",{\"1\":{\"592\":1}}],[\"坚决不抱怨\",{\"1\":{\"592\":1}}],[\"坚持使用你已经知道的东西\",{\"1\":{\"773\":1}}],[\"坚持方程之后\",{\"1\":{\"583\":1}}],[\"坚持不懈比速度更简单\",{\"1\":{\"582\":1}}],[\"坚持不懈\",{\"0\":{\"582\":1}}],[\"坚持\",{\"1\":{\"580\":1}}],[\"愿意用mixin的后续利润弥补\",{\"1\":{\"591\":1}}],[\"愿望盒\",{\"1\":{\"578\":2}}],[\"冯晓东的btc不仅被盗\",{\"1\":{\"592\":1}}],[\"冯晓东在直播中表示影响最大的是过去积累下来的信誉\",{\"1\":{\"591\":1}}],[\"冯晓东本人在2023\",{\"1\":{\"591\":1}}],[\"冯军旗\",{\"1\":{\"503\":1}}],[\"团队在这次事件中我认为做的没有任何问题\",{\"1\":{\"592\":1}}],[\"团队尽自己最大的能力愿意赔付一半的损失\",{\"1\":{\"591\":1}}],[\"团队尽可能弥补损失\",{\"1\":{\"591\":1}}],[\"团队已经做了杠杆交易的产品做多做空的产品\",{\"1\":{\"151\":1}}],[\"幸运的是我们没有开始\",{\"1\":{\"725\":1}}],[\"幸运的是\",{\"1\":{\"588\":1,\"724\":1}}],[\"纠正了一些最初的错误假设\",{\"1\":{\"588\":1}}],[\"怀疑自己可能需要改变宏观使命\",{\"1\":{\"588\":1}}],[\"弄清楚是什么特别的原因导致了内心的不安\",{\"1\":{\"588\":1}}],[\"药物引起的错觉\",{\"1\":{\"587\":1}}],[\"纯粹而欢乐的幸福从来不是一个合理的目标\",{\"1\":{\"587\":1}}],[\"纯粹照搬已有食谱的厨师和完全独立创新的主厨\",{\"1\":{\"571\":1}}],[\"擅长将其屏蔽掉\",{\"1\":{\"587\":1}}],[\"固守型的思维模式会认定自己只能是这样\",{\"1\":{\"674\":1}}],[\"固执而愚蠢\",{\"1\":{\"586\":1}}],[\"固定的路径\",{\"1\":{\"578\":1}}],[\"固定值\",{\"1\":{\"399\":1}}],[\"固定年利率的协议费用\",{\"1\":{\"152\":1}}],[\"固定年利率的保险费\",{\"1\":{\"152\":1}}],[\"画了一个箭头\",{\"1\":{\"586\":1}}],[\"衡量\",{\"1\":{\"586\":1}}],[\"权衡\",{\"1\":{\"586\":1}}],[\"权限\",{\"1\":{\"78\":1}}],[\"粗略的假设\",{\"1\":{\"585\":1}}],[\"吉尔伯特也曾优雅地描述了我们在预测未来什么会让我们快乐方面的糟糕能力\",{\"1\":{\"585\":1}}],[\"世界不会停下来迁就你\",{\"1\":{\"773\":1}}],[\"世界上也有一些慷慨的雇主\",{\"1\":{\"751\":1}}],[\"世界属于那些能不断学习成长的人\",{\"1\":{\"674\":1}}],[\"世界很简单\",{\"1\":{\"586\":1}}],[\"世界会发生变化\",{\"1\":{\"585\":1}}],[\"世界都会向你证明你是对的\",{\"1\":{\"500\":1}}],[\"旨在为\",{\"1\":{\"1217\":1}}],[\"旨在帮助年轻有才华的人解决职业选择问题\",{\"1\":{\"585\":1}}],[\"旨在使俄罗斯于其他互联网断开连接\",{\"1\":{\"533\":1}}],[\"乔布斯将生活比作连接点\",{\"1\":{\"585\":1}}],[\"乔丹拿着他的第一只篮球\",{\"1\":{\"587\":1}}],[\"乔丹\",{\"1\":{\"583\":1}}],[\"史蒂夫\",{\"1\":{\"585\":1}}],[\"划掉箭头\",{\"1\":{\"585\":1}}],[\"划分tiny对象的主要目的是为了处理极小的字符串和独立的转意变量\",{\"1\":{\"1150\":1}}],[\"划分这两个区域后\",{\"1\":{\"377\":1}}],[\"划分这三种情况\",{\"1\":{\"362\":1}}],[\"划分了\",{\"1\":{\"377\":1}}],[\"恭喜你\",{\"1\":{\"585\":1}}],[\"摆脱分析\",{\"1\":{\"584\":1}}],[\"评估你认为自己愿意在每个职业道路上投入的时间\",{\"1\":{\"584\":1}}],[\"评估你的起点\",{\"1\":{\"584\":1}}],[\"评论\",{\"0\":{\"42\":1}}],[\"弱点\",{\"1\":{\"583\":1}}],[\"决定开发用于运行他\",{\"1\":{\"721\":1}}],[\"决定进一步研究它\",{\"1\":{\"653\":1}}],[\"决定为什么你会有那样的反应\",{\"1\":{\"623\":1}}],[\"决定dp\",{\"1\":{\"248\":2}}],[\"决心和耐心\",{\"1\":{\"583\":1}}],[\"聪明人也会犯错\",{\"0\":{\"643\":1}}],[\"聪明和机智也很重要\",{\"1\":{\"581\":1}}],[\"聪明\",{\"1\":{\"581\":1}}],[\"速度乘以坚持程度的乘积可能能够达到该道路的总长度\",{\"1\":{\"584\":1}}],[\"速度\",{\"0\":{\"581\":1},\"1\":{\"580\":2}}],[\"距离上次调度已经过去\",{\"1\":{\"1135\":1}}],[\"距离\",{\"1\":{\"580\":1}}],[\"善于个人品牌推广\",{\"1\":{\"580\":1}}],[\"游戏规则的最新情况\",{\"1\":{\"584\":1}}],[\"游戏\",{\"1\":{\"580\":1,\"789\":1}}],[\"游戏板上涉及更多因素\",{\"1\":{\"580\":1}}],[\"游戏往往更直接\",{\"1\":{\"580\":1}}],[\"星期几的类型等\",{\"1\":{\"1205\":1}}],[\"星星并不仅仅是关于特定的技能水平\",{\"1\":{\"580\":1}}],[\"星际穿越\",{\"1\":{\"505\":1}}],[\"撰写\",{\"1\":{\"579\":1}}],[\"哇\",{\"1\":{\"578\":1}}],[\"肥胖的传统智慧\",{\"1\":{\"578\":1}}],[\"艺术\",{\"1\":{\"578\":1}}],[\"艺术文化\",{\"1\":{\"528\":1}}],[\"稳定的环境中安身立命\",{\"1\":{\"578\":1}}],[\"稳定币是去中心化金融发展的基础\",{\"1\":{\"187\":1}}],[\"稳定币是加密货币的一种\",{\"1\":{\"180\":1}}],[\"稳定币的供应和价格完全通过算法来调节\",{\"1\":{\"186\":1}}],[\"稳定币类型\",{\"0\":{\"181\":1}}],[\"稳定币总结\",{\"0\":{\"180\":1}}],[\"教程\",{\"0\":{\"953\":1,\"956\":1}}],[\"教育和专长包括接收正规学校教育和自学得到的知识和技术\",{\"1\":{\"673\":1}}],[\"教育改变一个人的价值观吗\",{\"1\":{\"626\":1}}],[\"教育工作者读到考试结果后认为\",{\"1\":{\"620\":1}}],[\"教师或企业阶梯等\",{\"1\":{\"578\":1}}],[\"教父\",{\"1\":{\"505\":1}}],[\"法务都是辅助性职务\",{\"1\":{\"792\":1}}],[\"法律文章的许多内容\",{\"1\":{\"628\":1}}],[\"法律\",{\"1\":{\"578\":1}}],[\"法官也善于记仇\",{\"1\":{\"573\":1}}],[\"顶层的渴望就越有可能茁壮成长\",{\"1\":{\"577\":1}}],[\"顶层渴望\",{\"1\":{\"577\":1}}],[\"货架摆放既是去优先化\",{\"1\":{\"577\":1}}],[\"货币未来\",{\"1\":{\"503\":1}}],[\"碗和顶层架子过于宽容\",{\"1\":{\"577\":1}}],[\"碗渴望者得到他们想要的东西的机会就越大\",{\"1\":{\"577\":1}}],[\"碗有着非常强烈的渴望\",{\"1\":{\"577\":1}}],[\"碗里放太多东西会抵消它的力量\",{\"1\":{\"577\":1}}],[\"碗里\",{\"1\":{\"577\":1}}],[\"必有近忧\",{\"1\":{\"806\":1}}],[\"必要时不惜牺牲所有其他渴望\",{\"1\":{\"577\":1}}],[\"必须在\",{\"1\":{\"1144\":1}}],[\"必须在事务提交之后\",{\"1\":{\"360\":1}}],[\"必须等到等待时间之后\",{\"1\":{\"1037\":1}}],[\"必须有\",{\"1\":{\"991\":2}}],[\"必须发布它并且让全世界看到它\",{\"1\":{\"740\":1}}],[\"必须用主厨思维认真考虑\",{\"1\":{\"571\":1}}],[\"必须传递切片引用类型\",{\"1\":{\"481\":1}}],[\"必须赋值为编译器就可以计算出的值\",{\"1\":{\"457\":1}}],[\"必须保持一致才能保证主从数据一致\",{\"1\":{\"360\":1}}],[\"必须初始化为一个最大的数\",{\"1\":{\"244\":1}}],[\"必须创建代币计划拥有的另一种类型的数据帐户\",{\"1\":{\"135\":1}}],[\"必须创建新帐户\",{\"1\":{\"115\":1}}],[\"何时完全拒绝它\",{\"1\":{\"577\":1}}],[\"谁再敢提房地产就直接走人\",{\"1\":{\"806\":1}}],[\"谁偷了你的汽车轮盖\",{\"1\":{\"637\":1}}],[\"谁下的命令\",{\"1\":{\"577\":1}}],[\"谁让咱不想成为奴隶呢\",{\"1\":{\"554\":1}}],[\"留下那些不愉快的角色\",{\"1\":{\"576\":1}}],[\"走到你的心灵的地下室的地下室的地下室\",{\"1\":{\"576\":1}}],[\"讽刺的是\",{\"1\":{\"575\":1}}],[\"智力和洞察力包括书本智力\",{\"1\":{\"673\":1}}],[\"智力是由基因决定的\",{\"1\":{\"620\":1}}],[\"智力自满并固步自封\",{\"1\":{\"588\":1}}],[\"智慧产权是用心智努力而不是金钱来购得的\",{\"1\":{\"628\":1}}],[\"智慧财产\",{\"1\":{\"628\":1}}],[\"智慧一开始可能会让人感到痛苦\",{\"1\":{\"575\":1}}],[\"智慧与知识无关\",{\"1\":{\"575\":1}}],[\"智能建议\",{\"1\":{\"988\":1}}],[\"智能体时代普通人有了\",{\"1\":{\"804\":1}}],[\"智能窗帘等\",{\"1\":{\"772\":1}}],[\"智能手机\",{\"1\":{\"531\":1}}],[\"智能合约\",{\"1\":{\"111\":1,\"114\":1,\"126\":1}}],[\"伪装成你的内在你\",{\"1\":{\"575\":1}}],[\"伪客户端执行命令的效果和带网络连接的客户端执行命令的效果完全一样\",{\"1\":{\"422\":1}}],[\"著名哲学家\",{\"1\":{\"575\":1}}],[\"明学楼3楼18时的场景\",{\"1\":{\"695\":1}}],[\"明确返回值\",{\"1\":{\"960\":1}}],[\"明确mock的函数\",{\"1\":{\"960\":1}}],[\"明确整体和部分对象\",{\"1\":{\"914\":1}}],[\"明确他们愿意为此付出多少钱\",{\"1\":{\"663\":2}}],[\"明确地说\",{\"1\":{\"575\":1}}],[\"明天我应该写一些什么\",{\"1\":{\"660\":1}}],[\"明天该过账\",{\"1\":{\"573\":1}}],[\"明天房租交期\",{\"1\":{\"573\":1}}],[\"朋友圈的欢欢发了个动态说今年的天气很奇怪\",{\"1\":{\"609\":1}}],[\"朋友\",{\"1\":{\"575\":1,\"978\":1}}],[\"审计\",{\"1\":{\"703\":1}}],[\"审计等\",{\"1\":{\"77\":1}}],[\"审视的另一部分将涉及你的渴望的层次结构\",{\"1\":{\"577\":1}}],[\"审讯室可能不会是一个有趣的时光\",{\"1\":{\"575\":1}}],[\"陷入休眠等待满足期望条件\",{\"1\":{\"1146\":1}}],[\"陷入休眠等待锁的释放\",{\"1\":{\"1143\":1}}],[\"陷入休眠\",{\"1\":{\"1146\":1}}],[\"陷入休眠状态\",{\"1\":{\"1146\":1}}],[\"陷入睡眠状态的\",{\"1\":{\"1144\":1}}],[\"陷入睡眠\",{\"1\":{\"1144\":1}}],[\"陷入沉睡等待唤醒\",{\"1\":{\"1137\":1}}],[\"陷入\",{\"1\":{\"575\":1}}],[\"露出了面具下面的原始安装者\",{\"1\":{\"575\":1}}],[\"欲望\",{\"1\":{\"575\":1}}],[\"欲望盒子\",{\"1\":{\"574\":1}}],[\"逐渐意识到很多信息都是压根没用的\",{\"1\":{\"605\":1}}],[\"逐一将每个渴望带入其中进行交叉审讯\",{\"1\":{\"575\":1}}],[\"逐步消耗\",{\"1\":{\"121\":1}}],[\"剖析一下\",{\"1\":{\"574\":1}}],[\"剖析一下这个想法\",{\"1\":{\"574\":1}}],[\"试想一下当你的工作成果被人质疑\",{\"1\":{\"692\":1}}],[\"试着想一想如果你的身高在平均水平线以下\",{\"1\":{\"683\":1}}],[\"试着在空闲时间放下手机\",{\"1\":{\"631\":1}}],[\"试着弄清楚为什么\",{\"1\":{\"574\":1}}],[\"试图提高学生智力是没有意义的\",{\"1\":{\"620\":1}}],[\"试remove方法\",{\"1\":{\"480\":1}}],[\"章鱼的核心部分会感到被忽视甚至受到攻击\",{\"1\":{\"587\":1}}],[\"章鱼不会成为房间里明智的成年人\",{\"1\":{\"577\":1}}],[\"章鱼中包含了任何可能让你想或不想从事某项职业的因素\",{\"1\":{\"577\":1}}],[\"章鱼中的哪些触角渴望这个职业\",{\"1\":{\"574\":1}}],[\"章节介绍过很多过滤镜像列表的方式都可以拿过来使用\",{\"1\":{\"55\":1}}],[\"恐惧\",{\"1\":{\"574\":1}}],[\"牺牲和妥协的游戏\",{\"1\":{\"573\":1}}],[\"历史上没有任何一个人能满足他们内心所有的渴望\",{\"1\":{\"573\":1}}],[\"历史上有个伟人直接以哲学的视角描述了上述的论证\",{\"1\":{\"528\":1}}],[\"真理\",{\"1\":{\"643\":1}}],[\"真理既不依赖于我们对它的认可\",{\"1\":{\"637\":1}}],[\"真理是被发现的\",{\"0\":{\"637\":1},\"1\":{\"637\":1}}],[\"真的有外星人驾驶ufo吗\",{\"1\":{\"637\":2}}],[\"真的是好不容易\",{\"1\":{\"631\":1}}],[\"真的是我吗\",{\"1\":{\"577\":1}}],[\"真的真的不像隧道\",{\"1\":{\"585\":1}}],[\"真正有用的是认知差\",{\"1\":{\"810\":1}}],[\"真正的危险在于言论自由的假象\",{\"1\":{\"783\":1}}],[\"真正的自由是完全为自己的决策负责\",{\"1\":{\"760\":1}}],[\"真正重要的事情是你是否已经有自己可持续赚钱的业务\",{\"1\":{\"754\":1}}],[\"真正重要的是\",{\"1\":{\"754\":1}}],[\"真正重要的是发现自己具备什么样的不公平优势以及自己如何培养起自己的不公平优势\",{\"1\":{\"673\":1}}],[\"真正知道你的比特币是否存在的唯一方法就是提取它\",{\"1\":{\"703\":1}}],[\"真正推动这一点的是美国房地产泡沫的破灭\",{\"1\":{\"648\":1}}],[\"真正花时间和精力去那里\",{\"1\":{\"574\":1}}],[\"真正爱见受助者受益的那部分在道义触\",{\"1\":{\"573\":1}}],[\"真男人的代码特别稳定\",{\"1\":{\"449\":1}}],[\"渴望的章鱼可以帮助你\",{\"1\":{\"586\":1}}],[\"渴望的排序也是恐惧的排序\",{\"1\":{\"577\":1}}],[\"渴望和恐惧是没有耐心的\",{\"1\":{\"577\":1}}],[\"渴望八爪鱼\",{\"1\":{\"577\":1}}],[\"渴望章鱼\",{\"1\":{\"574\":1}}],[\"渴望无忧生活的你\",{\"1\":{\"573\":1}}],[\"渴望自己留下名字和成就更大的事业\",{\"1\":{\"573\":1}}],[\"照这个趋势下去\",{\"1\":{\"631\":1}}],[\"照顾自我\",{\"1\":{\"573\":1}}],[\"照猫画虎\",{\"1\":{\"525\":1}}],[\"唯一真正的差别在于\",{\"1\":{\"628\":1}}],[\"唯一值得作出的结论是基于对问题或议题以及它们可能的解决方案或决议的透彻了解\",{\"1\":{\"627\":1}}],[\"唯一一个有资格想要和不想要你所追求的东西的人\",{\"1\":{\"575\":1}}],[\"唯一问题是\",{\"1\":{\"573\":1}}],[\"唯一不同的一点\",{\"1\":{\"253\":1}}],[\"触发\",{\"1\":{\"1137\":1}}],[\"触发器\",{\"1\":{\"341\":1}}],[\"触上周六请朋友吃饭消费了钱\",{\"1\":{\"573\":1}}],[\"触须上还有其他小生物\",{\"1\":{\"573\":1}}],[\"采取其中一件需求往往意味着不去考虑其他需求\",{\"1\":{\"573\":1}}],[\"采用第二种方式\",{\"1\":{\"436\":1}}],[\"采用多线程来处理\",{\"1\":{\"412\":1}}],[\"采用单线程模型可以避免了多线程之间的竞争\",{\"1\":{\"412\":1}}],[\"采用单线程为什么还这么快\",{\"0\":{\"412\":1}}],[\"采用这种方案\",{\"1\":{\"386\":1}}],[\"采用这个策略\",{\"1\":{\"360\":1}}],[\"采用\",{\"1\":{\"353\":1,\"383\":1,\"388\":3}}],[\"采用了\",{\"1\":{\"75\":1,\"412\":1}}],[\"框审查\",{\"1\":{\"573\":1}}],[\"框需要权衡各种因素权衡取舍\",{\"1\":{\"573\":1}}],[\"框的难点在于\",{\"1\":{\"573\":1}}],[\"框开始\",{\"1\":{\"572\":1}}],[\"框包含所有从现实可能性来看你可能实现的职业\",{\"1\":{\"572\":1}}],[\"框\",{\"0\":{\"573\":1},\"1\":{\"572\":2}}],[\"框架深度剖析\",{\"0\":{\"1050\":1}}],[\"框架中的可接近性和混乱性也是如此\",{\"1\":{\"721\":1}}],[\"框架变得复杂且难以使用\",{\"1\":{\"721\":1}}],[\"框架本身看起来很简单明了\",{\"1\":{\"572\":1}}],[\"框架\",{\"1\":{\"191\":1,\"721\":2}}],[\"心理学上专门有一个词叫乌比冈湖效应\",{\"1\":{\"683\":1}}],[\"心理学的影响\",{\"0\":{\"623\":1},\"1\":{\"618\":1}}],[\"心理学家认为\",{\"1\":{\"588\":1}}],[\"心里升起的不爽怎么解决呢\",{\"1\":{\"611\":1}}],[\"心态变化\",{\"1\":{\"592\":1}}],[\"心知肚明选择了错误的职业道路但还在其中挣扎\",{\"1\":{\"572\":1}}],[\"心跳检测\",{\"1\":{\"425\":1}}],[\"业务处理函数\",{\"1\":{\"1055\":1}}],[\"业务起步节点直接开始操作数据库就好\",{\"1\":{\"381\":1}}],[\"业余爱好者的错误在于\",{\"1\":{\"577\":1}}],[\"业余时间能做什么事\",{\"1\":{\"571\":1}}],[\"约32\",{\"1\":{\"571\":1}}],[\"约17\",{\"1\":{\"571\":1}}],[\"约定空树不是任意一个树的子结构\",{\"1\":{\"297\":1}}],[\"扣除儿童时期\",{\"1\":{\"571\":1}}],[\"厨师的食谱变得越来越过时\",{\"1\":{\"581\":1}}],[\"厨师工作简单直接得多\",{\"1\":{\"571\":1}}],[\"厨师\",{\"1\":{\"571\":1}}],[\"握着各自的小弟弟\",{\"1\":{\"570\":1}}],[\"握手完成\",{\"1\":{\"427\":1}}],[\"眺望池塘边\",{\"1\":{\"570\":1}}],[\"童年的河流汇入了一个名为大学的池塘\",{\"1\":{\"570\":1}}],[\"童年就像一条河流\",{\"1\":{\"570\":1}}],[\"耐心十足的赞助人\",{\"1\":{\"569\":1}}],[\"耐久性\",{\"1\":{\"424\":1}}],[\"职业是一条隧道\",{\"1\":{\"585\":1}}],[\"职业是一个复杂的游戏\",{\"1\":{\"581\":1}}],[\"职业就是隧道\",{\"1\":{\"585\":1}}],[\"职业就是我们生存的来源\",{\"1\":{\"571\":1}}],[\"职业从来都不像40年的隧道那样运作\",{\"1\":{\"585\":1}}],[\"职业曾经有点像一个为期40年的隧道\",{\"1\":{\"585\":1}}],[\"职业道路就像一个游戏棋盘\",{\"1\":{\"579\":1}}],[\"职业前景\",{\"0\":{\"579\":1}}],[\"职业规划\",{\"1\":{\"572\":1}}],[\"职业同时也是您主要创造影响的方式\",{\"1\":{\"571\":1}}],[\"职业生涯\",{\"1\":{\"571\":1}}],[\"职业\",{\"1\":{\"569\":1}}],[\"起初他们没有意识到这一点\",{\"1\":{\"771\":1}}],[\"起初没人觉得这是\",{\"1\":{\"566\":1}}],[\"起点\",{\"1\":{\"584\":1}}],[\"起始状态\",{\"1\":{\"1009\":1}}],[\"起始大小都必须是1\",{\"1\":{\"257\":1}}],[\"起始点在下图中标记为\",{\"1\":{\"230\":1}}],[\"健康码好像也只能用微信\",{\"1\":{\"553\":1}}],[\"健康因子的计算方式各个协议可能不同\",{\"1\":{\"164\":1}}],[\"健康因子是账户的健康度\",{\"1\":{\"164\":1}}],[\"健康因子\",{\"0\":{\"164\":1}}],[\"爱的物生存在土地上\",{\"1\":{\"552\":1}}],[\"青春期这个概念是1904年才被提出来\",{\"1\":{\"619\":1}}],[\"青年大学习还是得交\",{\"1\":{\"553\":1}}],[\"青年大学习\",{\"1\":{\"552\":2}}],[\"青蛙跳台阶问题\",{\"0\":{\"282\":1}}],[\"填入当前的w和req\",{\"1\":{\"1055\":1}}],[\"填补表格右下角的理想工具\",{\"1\":{\"721\":1}}],[\"填充现实盒子\",{\"0\":{\"584\":1}}],[\"填个表格\",{\"1\":{\"551\":1}}],[\"填满j\",{\"1\":{\"239\":1}}],[\"聊天软件\",{\"1\":{\"551\":2}}],[\"聊到了微信的隐私问题和大企业的数据垄断问题\",{\"1\":{\"551\":1}}],[\"嗯\",{\"1\":{\"551\":1,\"751\":1}}],[\"背后的抽象思维方式\",{\"1\":{\"1011\":1}}],[\"背诵着别人大脑中的欲望和恐惧\",{\"1\":{\"575\":1}}],[\"背景\",{\"1\":{\"551\":1,\"721\":1}}],[\"背包\",{\"1\":{\"243\":1}}],[\"背包总容量是j\",{\"1\":{\"237\":1}}],[\"背包中每一个元素是不可重复放入\",{\"1\":{\"237\":1}}],[\"背包如果正好装满\",{\"1\":{\"237\":1}}],[\"背包要放入的商品\",{\"1\":{\"237\":1}}],[\"背包的体积为sum\",{\"1\":{\"237\":1}}],[\"背包价值总和一定为0\",{\"1\":{\"235\":1}}],[\"背包最大重量为4\",{\"1\":{\"235\":1,\"241\":1}}],[\"背包基础\",{\"0\":{\"234\":1}}],[\"背包问题\",{\"0\":{\"233\":1},\"1\":{\"223\":1}}],[\"奴隶的意识形态也发生了变化\",{\"1\":{\"551\":1}}],[\"少数人的努力保护了其他人\",{\"1\":{\"551\":1}}],[\"少有人走的路\",{\"1\":{\"503\":1,\"669\":1}}],[\"庞大到在中国\",{\"1\":{\"551\":1}}],[\"遇到一个考察我们一个知识点的题目\",{\"1\":{\"640\":1}}],[\"遇到的人\",{\"1\":{\"551\":1}}],[\"遇河搭桥\",{\"1\":{\"525\":1}}],[\"究竟是什么决定了我们的选择\",{\"1\":{\"666\":1}}],[\"究竟是什么决定了有的人走到了金字塔的顶端\",{\"1\":{\"551\":1}}],[\"究竟是长期还是泡沫\",{\"1\":{\"551\":1}}],[\"究竟选\",{\"1\":{\"254\":1}}],[\"湮灭创新\",{\"1\":{\"551\":2}}],[\"​​being\",{\"1\":{\"543\":1}}],[\"​同时我们也要知道\",{\"1\":{\"387\":1}}],[\"站在2022年的今天去看\",{\"1\":{\"534\":1}}],[\"垄断公司的股票都是值得购入的\",{\"1\":{\"714\":1}}],[\"垄断互联网控制着人们使用货币最基本的方法\",{\"1\":{\"534\":1}}],[\"垄断竞争市场\",{\"1\":{\"8\":2}}],[\"企业也是如此\",{\"1\":{\"751\":1}}],[\"企业家是能够纵深跳下悬崖并在下坠过程中组装成一架飞机的人\",{\"1\":{\"674\":1}}],[\"企业家或软件工程师看到与自己领域中经验丰富的外科医生相当的人时\",{\"1\":{\"578\":1}}],[\"企业要么使用债务要么使用股权来开办新企业并以通常超过老企业的工资雇佣员工从而提高员工的购买力从而进一步推动创新\",{\"1\":{\"648\":1}}],[\"企业和大型社交媒体正在用他们所有的手段包括满足原始杏仁核的上瘾算法\",{\"1\":{\"534\":1}}],[\"企业\",{\"1\":{\"534\":1}}],[\"企业这些新秀已经尽了自己最大的努力\",{\"1\":{\"534\":1}}],[\"企业拥有庞大的数据确实是真实的\",{\"1\":{\"533\":1}}],[\"尼采有一句话很有意思\",{\"1\":{\"534\":1}}],[\"竟然有个匪夷所思的名字叫\",{\"1\":{\"533\":1}}],[\"抖音\",{\"1\":{\"533\":1,\"740\":1}}],[\"知易行难\",{\"1\":{\"767\":1}}],[\"知识都必须经过长期实践才能被我们内化\",{\"1\":{\"810\":1}}],[\"知识时\",{\"1\":{\"810\":1}}],[\"知识在贫富差距上的作用几乎是决定性的\",{\"1\":{\"746\":1}}],[\"知识的障碍\",{\"0\":{\"657\":1}}],[\"知识的重要性不容忽视\",{\"1\":{\"647\":1,\"686\":1}}],[\"知识和宗教信仰之间的关系非常微妙\",{\"1\":{\"656\":1}}],[\"知识和技能具有更大的弹性和增值潜力\",{\"1\":{\"646\":1}}],[\"知识和技能的传播不再受限于时间和空间的限制\",{\"1\":{\"646\":1}}],[\"知识和技能成为了最宝贵的资源\",{\"1\":{\"646\":1}}],[\"知识经常被遗忘或被不明智地拒绝\",{\"1\":{\"655\":1}}],[\"知识作为重要生产资料的认知还不普遍\",{\"1\":{\"649\":1}}],[\"知识阶级作为新时代的统治者\",{\"1\":{\"649\":1}}],[\"知识阶级通过生产和传播知识\",{\"1\":{\"646\":1}}],[\"知识成为了新的核心生产资料\",{\"1\":{\"649\":1}}],[\"知识已经使一些非凡的事情成为可能\",{\"1\":{\"649\":1}}],[\"知识循环\",{\"0\":{\"649\":1}}],[\"知识循环会替代工作循环\",{\"1\":{\"648\":1}}],[\"知识可以让我们做什么\",{\"1\":{\"648\":1}}],[\"知识可以不断积累和更新\",{\"1\":{\"646\":1}}],[\"知识让人类克服了看似无法逾越的进步障碍\",{\"1\":{\"648\":1}}],[\"知识也可以作为一种资产\",{\"1\":{\"647\":1,\"686\":1}}],[\"知识是一个记录在媒介中\",{\"1\":{\"605\":1}}],[\"知名心理学家丹\",{\"1\":{\"585\":1}}],[\"知乎等平台上看到它们\",{\"1\":{\"534\":1}}],[\"知乎你可以吗\",{\"1\":{\"533\":1}}],[\"知乎里面的某些回答也是一样会被审查\",{\"1\":{\"533\":1}}],[\"知道种什么可以卖更多钱\",{\"1\":{\"746\":1}}],[\"知道意味着明白了正确答案\",{\"1\":{\"653\":1}}],[\"知道它抱怨的方式正是你计划中的方式\",{\"1\":{\"587\":1}}],[\"知道何时接受自己不那么高尚的一面\",{\"1\":{\"577\":1}}],[\"知道了\",{\"1\":{\"362\":1}}],[\"知道这个做题就好做了\",{\"1\":{\"279\":1}}],[\"豆瓣也一样\",{\"1\":{\"533\":1}}],[\"淘宝\",{\"1\":{\"533\":1,\"709\":1}}],[\"美观的博客固然重要\",{\"1\":{\"660\":1}}],[\"美女\",{\"1\":{\"631\":1}}],[\"美国人等等\",{\"1\":{\"795\":1}}],[\"美国人就是twitter\",{\"1\":{\"533\":1}}],[\"美国独立宣言\",{\"1\":{\"673\":1}}],[\"美国参议员约瑟夫\",{\"1\":{\"628\":1}}],[\"美国白人的平均心理年龄是13岁\",{\"1\":{\"620\":1}}],[\"美团等有在中国大陆地区有垄断优势互联网公司的好时机\",{\"1\":{\"714\":1}}],[\"美团\",{\"1\":{\"533\":1}}],[\"美元的山寨币\",{\"1\":{\"706\":1}}],[\"美元的价格卖出\",{\"1\":{\"169\":1}}],[\"美元的价格买入\",{\"1\":{\"169\":1}}],[\"美元\",{\"1\":{\"150\":13}}],[\"越来越多的人通过建立自己的平台去绕过监管\",{\"1\":{\"534\":1}}],[\"越来越多的人对当下企业控制的互联网感到反感\",{\"1\":{\"534\":1}}],[\"越来越多的人已经认同一个观点\",{\"1\":{\"533\":1}}],[\"越过山丘\",{\"1\":{\"505\":2}}],[\"兴趣和期望的影响\",{\"1\":{\"640\":1}}],[\"兴趣\",{\"1\":{\"532\":1}}],[\"探索\",{\"1\":{\"532\":1,\"534\":1}}],[\"许多特定于客户端的接口优于一个通用接口\",{\"1\":{\"982\":1}}],[\"许多创造奇迹\",{\"1\":{\"577\":1}}],[\"许多看似成功但其实不快乐的人\",{\"1\":{\"573\":1}}],[\"许多所谓民主国家的政府也普遍反对在互联网上实行任何形式的自由\",{\"1\":{\"533\":1}}],[\"许多人有可能对他们真实的价值观是自欺欺人的吗\",{\"1\":{\"626\":1}}],[\"许多人可能只是告诉你去思考\",{\"1\":{\"626\":1}}],[\"许多人甚至都习以为常了\",{\"1\":{\"533\":1}}],[\"许多人都声称自己开放\",{\"1\":{\"528\":1}}],[\"许多厂商的制作产品有差异化\",{\"1\":{\"8\":1}}],[\"绝大多数人的第一想法都是愤愤不平\",{\"1\":{\"673\":1}}],[\"绝大多数人的境界是停留在第二个学习里面的\",{\"1\":{\"525\":1}}],[\"绝大多数人不知道未来的互联网要去往何方\",{\"1\":{\"532\":1}}],[\"绝对不要借贷消费\",{\"1\":{\"598\":1}}],[\"绝对不是继续现有的路线\",{\"1\":{\"11\":1}}],[\"绝对的正确存不存在\",{\"1\":{\"528\":1}}],[\"绝对的正确\",{\"0\":{\"528\":1}}],[\"逢山开路\",{\"1\":{\"525\":1}}],[\"宇宙起源\",{\"0\":{\"523\":1}}],[\"欢迎进入编程世界\",{\"1\":{\"1008\":1}}],[\"欢迎继续和我聊天\",{\"1\":{\"828\":1}}],[\"欢迎对我反馈\",{\"1\":{\"521\":1}}],[\"欢迎点赞\",{\"1\":{\"517\":1}}],[\"宣传资料\",{\"1\":{\"521\":1}}],[\"潮汐已经变得臃肿\",{\"1\":{\"521\":1}}],[\"差不多完事了\",{\"0\":{\"517\":1}}],[\"便于解构代码\",{\"1\":{\"513\":1}}],[\"难以防范csrf攻击\",{\"1\":{\"1045\":1}}],[\"难以维护且难以修改\",{\"1\":{\"1010\":1}}],[\"难以测试\",{\"1\":{\"899\":1}}],[\"难受死人了\",{\"1\":{\"512\":1}}],[\"难度是动态调整的\",{\"1\":{\"94\":1}}],[\"社区有很成熟的命令行库程序\",{\"1\":{\"988\":1}}],[\"社区中还有一个参考monkey库实现的gomonkey库\",{\"1\":{\"978\":1}}],[\"社交\",{\"1\":{\"709\":1}}],[\"社交情感智力和创造力\",{\"1\":{\"673\":1}}],[\"社交媒体等途径分享自己的知识和经验\",{\"1\":{\"646\":1}}],[\"社交媒体中使用\",{\"1\":{\"188\":1}}],[\"社交账号也是虚拟可增长资产\",{\"1\":{\"598\":1}}],[\"社交技巧也可能至关重要\",{\"1\":{\"581\":1}}],[\"社交触说不能向亲友借钱\",{\"1\":{\"573\":1}}],[\"社交触会因慈善获得某社群赞赏而乐于参与\",{\"1\":{\"573\":1}}],[\"社交生存猛象\",{\"1\":{\"573\":1}}],[\"社交需求触须可能是我们最原始的动物性趋势\",{\"1\":{\"573\":1}}],[\"社交问题\",{\"1\":{\"554\":1}}],[\"社会资本\",{\"1\":{\"738\":1}}],[\"社会化损失\",{\"1\":{\"706\":2}}],[\"社会\",{\"1\":{\"575\":1}}],[\"社会和环境为我们设定的道路\",{\"1\":{\"570\":1}}],[\"社会就像那个大叔\",{\"1\":{\"569\":1}}],[\"社会就像你的大伯\",{\"1\":{\"569\":1}}],[\"社会告诉了我们很多关于我们应该追求的职业以及职业的可能性\",{\"1\":{\"569\":1}}],[\"社会的进步就体现在\",{\"1\":{\"551\":1}}],[\"社会分工协作等等很多方面\",{\"1\":{\"509\":1}}],[\"喋喋不休\",{\"1\":{\"505\":3}}],[\"西部世界\",{\"1\":{\"505\":1}}],[\"北京爱情故事\",{\"1\":{\"505\":1}}],[\"影视\",{\"1\":{\"505\":1}}],[\"影响更多的人\",{\"1\":{\"649\":1}}],[\"影响了你的思维模式\",{\"1\":{\"619\":1}}],[\"影响是我们每个人不可避免的重要组成部分\",{\"1\":{\"575\":1}}],[\"影响\",{\"1\":{\"573\":1}}],[\"影响力\",{\"1\":{\"571\":1}}],[\"影响从库的数据\",{\"1\":{\"360\":1}}],[\"影响主库的数据\",{\"1\":{\"360\":1}}],[\"悬崖之上\",{\"1\":{\"505\":1}}],[\"熔炉\",{\"1\":{\"505\":1}}],[\"逆境生存指南\",{\"1\":{\"505\":1}}],[\"逆中序\",{\"1\":{\"327\":1}}],[\"肖申克的救赎\",{\"1\":{\"505\":1}}],[\"姑且就先这么统计吧\",{\"1\":{\"505\":1}}],[\"陪朋友闲聊散步啊这些其实不应该混在一起的\",{\"1\":{\"505\":1}}],[\"充分体现了solid中的依赖倒置原则\",{\"1\":{\"1057\":1}}],[\"充足睡觉\",{\"1\":{\"789\":1}}],[\"充电桩分布\",{\"1\":{\"683\":1}}],[\"充满活力\",{\"1\":{\"585\":1}}],[\"充其量就是每天复习\",{\"1\":{\"505\":1}}],[\"充当交易的时间戳\",{\"1\":{\"116\":1}}],[\"雄辩的javascript\",{\"1\":{\"504\":1}}],[\"围城\",{\"1\":{\"503\":1,\"669\":1}}],[\"围成一圈\",{\"1\":{\"249\":1}}],[\"穷爸爸富爸爸\",{\"1\":{\"503\":1,\"669\":1}}],[\"击败庄家\",{\"1\":{\"503\":1}}],[\"老子\",{\"1\":{\"695\":1}}],[\"老天爷发大水发大旱就只能接受\",{\"1\":{\"677\":1}}],[\"老家门口唱大戏\",{\"1\":{\"505\":1}}],[\"老猫\",{\"1\":{\"503\":1,\"669\":1}}],[\"老实说目前我还没有找到\",{\"1\":{\"11\":1}}],[\"精英的见识与我们的时代\",{\"1\":{\"503\":1}}],[\"精通比特币\",{\"1\":{\"93\":1}}],[\"稀缺\",{\"1\":{\"503\":1}}],[\"太难学了\",{\"1\":{\"771\":1}}],[\"太傻十日谈\",{\"1\":{\"503\":1,\"552\":1}}],[\"太良心了有木有\",{\"1\":{\"494\":1}}],[\"黑客攻击\",{\"1\":{\"703\":1,\"704\":1,\"706\":1}}],[\"黑客与画家\",{\"1\":{\"660\":1,\"669\":1}}],[\"黑人是10\",{\"1\":{\"620\":1}}],[\"黑暗时代\",{\"1\":{\"569\":1}}],[\"黑暗骑士崛起\",{\"1\":{\"505\":1}}],[\"黑暗骑士\",{\"1\":{\"505\":1,\"534\":1}}],[\"黑天鹅原本只是个形容天鹅的词\",{\"1\":{\"528\":1}}],[\"黑天鹅\",{\"1\":{\"503\":1,\"528\":1,\"669\":1}}],[\"黑箱镜像\",{\"1\":{\"55\":1}}],[\"沟通的方法\",{\"1\":{\"503\":1}}],[\"奇特的一生\",{\"1\":{\"503\":1,\"669\":1}}],[\"挤挤都会有的\",{\"1\":{\"502\":1}}],[\"坐享其成\",{\"1\":{\"502\":1}}],[\"韭菜的自我修养\",{\"1\":{\"502\":1}}],[\"七年就是一辈子\",{\"1\":{\"502\":1,\"669\":1}}],[\"财富总会流向有能力掌控财富的人手中\",{\"1\":{\"738\":1}}],[\"财富自由之路\",{\"1\":{\"502\":1,\"669\":1}}],[\"财务自由之路\",{\"1\":{\"669\":1}}],[\"财务目标\",{\"1\":{\"4\":1}}],[\"财力等等\",{\"1\":{\"646\":1,\"677\":1}}],[\"书信以及书籍来传递的\",{\"1\":{\"631\":1}}],[\"书籍地址\",{\"1\":{\"767\":1}}],[\"书籍\",{\"0\":{\"501\":1},\"1\":{\"648\":1}}],[\"书中的目录\",{\"1\":{\"350\":1}}],[\"娱乐\",{\"1\":{\"500\":1,\"505\":1}}],[\"娱乐时间减少至1小时\",{\"1\":{\"4\":1}}],[\"石油\",{\"1\":{\"500\":1}}],[\"煤\",{\"1\":{\"500\":1}}],[\"副本集环境在线部署\",{\"0\":{\"497\":1}}],[\"微秒\",{\"1\":{\"1135\":1,\"1205\":1}}],[\"微服务并不能降低复杂性\",{\"1\":{\"723\":1}}],[\"微博等应用都离不开云\",{\"1\":{\"709\":1}}],[\"微信公众号\",{\"1\":{\"740\":1}}],[\"微信已然成为了整个互联网\",{\"1\":{\"553\":1}}],[\"微信\",{\"1\":{\"533\":1}}],[\"微信互联网平民创业\",{\"1\":{\"502\":1,\"669\":1}}],[\"微信在传输的时候都会在本地备份一份\",{\"1\":{\"494\":1}}],[\"微信文件传输了\",{\"1\":{\"494\":1}}],[\"微创新算创新吗\",{\"1\":{\"11\":1}}],[\"跨平台支持\",{\"1\":{\"494\":1}}],[\"跨程序调用\",{\"0\":{\"131\":1},\"1\":{\"121\":1,\"131\":1}}],[\"工资涨幅累计起来了\",{\"1\":{\"751\":1}}],[\"工资单通常占收入的\",{\"1\":{\"751\":1}}],[\"工业文明经历了几百年\",{\"1\":{\"646\":1}}],[\"工业化的生产需要大规模的资金投入\",{\"1\":{\"646\":1}}],[\"工厂方法返回一个通用产品\",{\"1\":{\"880\":1}}],[\"工厂对象负责返回完全初始化的对象\",{\"1\":{\"879\":1}}],[\"工厂模式非常有用\",{\"1\":{\"884\":1}}],[\"工厂模式定义了创建对象的接口\",{\"1\":{\"880\":1}}],[\"工厂模式是面向对象编程语言中常用的设计模式\",{\"1\":{\"879\":1}}],[\"工厂模式是非常有用的\",{\"1\":{\"876\":1}}],[\"工厂模式\",{\"0\":{\"879\":1}}],[\"工厂想要生产商品也是需要时间的\",{\"1\":{\"677\":1}}],[\"工厂的机器设备\",{\"1\":{\"677\":1}}],[\"工厂提供了物质条件\",{\"1\":{\"646\":1}}],[\"工厂是生产资料的重要组成部分\",{\"1\":{\"646\":1}}],[\"工作结束\",{\"1\":{\"1011\":1}}],[\"工作时间\",{\"1\":{\"979\":1}}],[\"工作时间非常零散\",{\"1\":{\"579\":1}}],[\"工作等等\",{\"1\":{\"788\":1}}],[\"工作提高自己生产率的\",{\"1\":{\"695\":1}}],[\"工作选择\",{\"1\":{\"680\":1}}],[\"工作循环变得更加恶性\",{\"1\":{\"648\":1}}],[\"工作循环与竞争激烈的商品和服务市场相结合\",{\"1\":{\"648\":1}}],[\"工作循环是什么\",{\"1\":{\"648\":1}}],[\"工作场所或在家里\",{\"1\":{\"627\":1}}],[\"工作态度的微妙之处\",{\"1\":{\"583\":1}}],[\"工作不需过劳\",{\"1\":{\"573\":1}}],[\"工作量证明\",{\"1\":{\"95\":1}}],[\"工具中生成过\",{\"1\":{\"772\":1}}],[\"工具\",{\"1\":{\"648\":1,\"1026\":1},\"2\":{\"496\":1}}],[\"工具介绍\",{\"0\":{\"494\":1}}],[\"人的主观感受永远是在当下的\",{\"1\":{\"806\":1}}],[\"人的大脑也会饿的\",{\"1\":{\"631\":1}}],[\"人如果想要有远虑则不能被永恒的当下所束缚\",{\"1\":{\"806\":1}}],[\"人无远虑\",{\"1\":{\"806\":1}}],[\"人体就是这样设计的\",{\"1\":{\"789\":1}}],[\"人工智能不知道节省了多少沟通成本\",{\"1\":{\"692\":1}}],[\"人工智能\",{\"1\":{\"674\":1,\"717\":1}}],[\"人工智能翻译\",{\"1\":{\"531\":1}}],[\"人家可没说在所有方面都平等\",{\"1\":{\"673\":1}}],[\"人人在生命\",{\"1\":{\"673\":1}}],[\"人人生而平等起初来自于\",{\"1\":{\"673\":1}}],[\"人人都是时间上的资产阶级\",{\"0\":{\"677\":1},\"1\":{\"646\":1,\"677\":1}}],[\"人人都是工程师\",{\"1\":{\"502\":1}}],[\"人人都能用英语\",{\"1\":{\"502\":1}}],[\"人其实是不具备思考判断能力的\",{\"1\":{\"631\":1}}],[\"人类生产力的变革所需的时间越来越短\",{\"1\":{\"649\":1}}],[\"人类生产力发生越迁的时间越来越短\",{\"1\":{\"646\":1}}],[\"人类逐渐过渡到了农耕文明时代\",{\"1\":{\"646\":1}}],[\"人类的大脑没有进化到能够处理高速互联网所提供的持续刺激和多样性\",{\"1\":{\"789\":1}}],[\"人类的基因通过这种试错来让我们进化\",{\"1\":{\"782\":1}}],[\"人类的历史长河中\",{\"1\":{\"646\":1}}],[\"人类的记忆力是可以被操纵的\",{\"1\":{\"622\":1}}],[\"人类的渴望是一个选择\",{\"1\":{\"573\":1}}],[\"人类可以通过阅读文字的能力快速获得过去几千年的知识\",{\"1\":{\"605\":1}}],[\"人生观有很大的正面影响\",{\"1\":{\"759\":1}}],[\"人生就是这样\",{\"1\":{\"680\":1}}],[\"人生能够取得最大幸福感\",{\"1\":{\"573\":1}}],[\"人生没有白走的路\",{\"1\":{\"500\":1}}],[\"人与人没有区别很大\",{\"1\":{\"573\":1}}],[\"人们就会慢慢在新技术和文化方面变得过时\",{\"1\":{\"771\":1}}],[\"人们变得\",{\"1\":{\"771\":1}}],[\"人们把自己出生时就存在的所有技术都视为理所当然\",{\"1\":{\"771\":1}}],[\"人们的生活已经离不开互联网了\",{\"1\":{\"764\":1}}],[\"人们的生活已经完全虚拟化了\",{\"1\":{\"764\":1}}],[\"人们的主要生产资料是体力\",{\"1\":{\"646\":1}}],[\"人们在购买消费品时\",{\"1\":{\"743\":1}}],[\"人们在生命的尽头最有可能后悔的是惯性生活\",{\"1\":{\"588\":1}}],[\"人们总是有一个幻想\",{\"1\":{\"717\":1}}],[\"人们常说养成一个习惯需要21天\",{\"1\":{\"660\":1}}],[\"人们很容易低估使用信用卡订购披萨时幕后工作的复杂程度\",{\"1\":{\"927\":1}}],[\"人们很容易低估数字技术进一步加速和扩大知识循环访问方面的潜力\",{\"1\":{\"649\":1}}],[\"人们很少轻易改变自己的看法\",{\"1\":{\"627\":1}}],[\"人们可以通过在线教育平台\",{\"1\":{\"646\":1}}],[\"人们可以迅速获取和交流信息\",{\"1\":{\"646\":1}}],[\"人们通常说练习一项技能需要有足够的熟练度\",{\"1\":{\"631\":1}}],[\"人们通常是这样看的\",{\"1\":{\"578\":1}}],[\"人们要么\",{\"1\":{\"627\":1}}],[\"人们要自律\",{\"1\":{\"623\":1}}],[\"人们逐渐发现了空气中有助燃物质的其实是氧气\",{\"1\":{\"605\":1}}],[\"人们谈论在当下的时刻保持存在感\",{\"1\":{\"587\":1}}],[\"人们问我们未来想成为什么\",{\"1\":{\"571\":1}}],[\"人们用web3\",{\"1\":{\"534\":1}}],[\"人是很容易被反向塑造的\",{\"1\":{\"689\":1}}],[\"人是社交化生物\",{\"1\":{\"553\":1}}],[\"人是有逆反情绪的\",{\"1\":{\"534\":1}}],[\"人\",{\"1\":{\"485\":1}}],[\"国内的投资经理会帮你打理好一切\",{\"1\":{\"754\":1}}],[\"国外有关web3\",{\"1\":{\"534\":1}}],[\"国\",{\"1\":{\"485\":1}}],[\"国家稳定货币相关的\",{\"1\":{\"182\":1}}],[\"测\",{\"1\":{\"480\":1}}],[\"测试等任务\",{\"1\":{\"1023\":1}}],[\"测试的过程中并不需要真正的连接\",{\"1\":{\"975\":1}}],[\"测试结果和预期的完全一致\",{\"1\":{\"973\":1}}],[\"测试执行后刷新挂起的mock\",{\"1\":{\"973\":1}}],[\"测试覆盖率\",{\"0\":{\"969\":1}}],[\"测试组\",{\"0\":{\"968\":1}}],[\"测试失败输出错误提示\",{\"1\":{\"967\":2}}],[\"测试程序的一些逻辑行为是否正确\",{\"1\":{\"966\":1}}],[\"测试函数示例\",{\"1\":{\"967\":1}}],[\"测试函数的基本格式\",{\"1\":{\"967\":1}}],[\"测试函数的性能\",{\"1\":{\"966\":1}}],[\"测试函数\",{\"1\":{\"966\":1}}],[\"测试时可能会遇到困难\",{\"1\":{\"899\":1}}],[\"测试\",{\"1\":{\"899\":1,\"960\":1,\"980\":1}}],[\"测试代码变得更容易\",{\"1\":{\"881\":1}}],[\"测试代码\",{\"1\":{\"833\":1,\"838\":1,\"844\":1,\"849\":1,\"855\":1,\"867\":1,\"981\":1}}],[\"测试truncate\",{\"1\":{\"480\":1}}],[\"测试remove方法\",{\"1\":{\"480\":1}}],[\"े\",{\"1\":{\"474\":1}}],[\"ते\",{\"1\":{\"474\":1}}],[\"त\",{\"1\":{\"474\":1}}],[\"्\",{\"1\":{\"474\":1}}],[\"स्\",{\"1\":{\"474\":1}}],[\"स\",{\"1\":{\"474\":1}}],[\"म\",{\"1\":{\"474\":2}}],[\"न\",{\"1\":{\"474\":2}}],[\"नमस्ते\",{\"1\":{\"474\":1}}],[\"隐式输入等\",{\"1\":{\"981\":1}}],[\"隐式创建依赖项\",{\"1\":{\"981\":2}}],[\"隐式强制转换\",{\"1\":{\"472\":1}}],[\"隐藏系统的复杂性\",{\"1\":{\"925\":1}}],[\"隐藏了主题对象和观察者对象之间的具体实现细节\",{\"1\":{\"843\":1}}],[\"隐藏集合的内部结构\",{\"1\":{\"828\":1}}],[\"隐藏列里\",{\"1\":{\"362\":1}}],[\"隐私被上传\",{\"1\":{\"551\":1}}],[\"隐私问题其实上升到一定程度上就到了社会的整体问题\",{\"1\":{\"551\":1}}],[\"隐私与创新高度相关\",{\"1\":{\"533\":1}}],[\"隐蔽的角落\",{\"1\":{\"505\":1}}],[\"顾名思义\",{\"1\":{\"471\":1}}],[\"啥是切片\",{\"1\":{\"467\":1}}],[\"^^^^^\",{\"1\":{\"473\":1}}],[\"^^^^^^^^^\",{\"1\":{\"468\":1}}],[\"^^^^^^^\",{\"1\":{\"467\":1}}],[\"^=\",{\"1\":{\"330\":3}}],[\"涉及的各方\",{\"1\":{\"584\":1}}],[\"涉及许多你之后才会了解到的概念\",{\"1\":{\"467\":1}}],[\"涉及到去重\",{\"1\":{\"219\":1}}],[\"涉及到了两条指令\",{\"1\":{\"56\":1}}],[\"规范是全部使用大写\",{\"1\":{\"456\":1}}],[\"规则查询\",{\"1\":{\"1080\":1}}],[\"规则不适用于我\",{\"1\":{\"627\":1}}],[\"规则\",{\"0\":{\"31\":1}}],[\"哪怕忘记了某个字段\",{\"1\":{\"1084\":1}}],[\"哪怕是\",{\"1\":{\"450\":1}}],[\"哪有什么情绪稳定\",{\"1\":{\"810\":1}}],[\"哪里就会挤满了人群\",{\"1\":{\"734\":1}}],[\"哪些不具备优点\",{\"1\":{\"626\":1}}],[\"哪些是更普遍的经验教训\",{\"1\":{\"572\":1}}],[\"哪些记录可以被覆盖的过程\",{\"1\":{\"357\":1}}],[\"哪些记录可以被擦除\",{\"1\":{\"357\":1}}],[\"展望未来\",{\"0\":{\"585\":1},\"1\":{\"584\":1}}],[\"展示了如何使用\",{\"1\":{\"1163\":2}}],[\"展示了\",{\"1\":{\"1161\":1}}],[\"展示了一个从文件中读取用户名的函数\",{\"1\":{\"450\":1}}],[\"展示我们整个区块链架构的核心过程\",{\"1\":{\"510\":1}}],[\"展开就会获得构建镜像所需的一切文件\",{\"1\":{\"60\":1}}],[\"展开的文件\",{\"1\":{\"58\":1}}],[\"展开的大小\",{\"1\":{\"51\":1}}],[\"枚举类型\",{\"1\":{\"1084\":1}}],[\"枚举和其成员也被导入到了\",{\"1\":{\"448\":1}}],[\"枚举一样\",{\"1\":{\"448\":1}}],[\"枚举所代表的\",{\"1\":{\"448\":1}}],[\"😊\",{\"1\":{\"828\":1}}],[\"😦\",{\"1\":{\"563\":1}}],[\"😕\",{\"0\":{\"448\":1}}],[\"😃\",{\"0\":{\"81\":1},\"1\":{\"800\":1,\"1116\":1,\"1118\":1,\"1120\":1}}],[\"往文件中写入信息\",{\"1\":{\"1169\":2}}],[\"往桶中放一个\",{\"1\":{\"1034\":1}}],[\"往往都离不开锁这一概念\",{\"1\":{\"1141\":1}}],[\"往往就需要考虑很多方面\",{\"1\":{\"998\":1}}],[\"往往是通过在记忆里扭曲事实来欺骗自己\",{\"1\":{\"683\":1}}],[\"往往相互冲突\",{\"1\":{\"573\":1}}],[\"往往一切都是那么地失败\",{\"1\":{\"528\":1}}],[\"往往指的就是\",{\"1\":{\"471\":1}}],[\"往下则是调用你的代码的代码\",{\"1\":{\"447\":1}}],[\"往插入一个\",{\"1\":{\"362\":1}}],[\"阅读所有语言的书籍\",{\"1\":{\"764\":1}}],[\"阅读这篇文章的小意识中心\",{\"1\":{\"577\":1}}],[\"阅读\",{\"1\":{\"447\":1}}],[\"跟其他语言中的一样\",{\"1\":{\"447\":1}}],[\"跟一个节点发生cluser\",{\"1\":{\"427\":1}}],[\"宏观使命本身并不是问题所在\",{\"1\":{\"588\":1}}],[\"宏的输出\",{\"1\":{\"448\":1}}],[\"宏\",{\"1\":{\"448\":1}}],[\"宏来处理程序遇到的不可恢复的错误\",{\"1\":{\"446\":1}}],[\"宏记录日志\",{\"1\":{\"121\":1}}],[\"播\",{\"1\":{\"434\":1}}],[\"广告\",{\"1\":{\"634\":1}}],[\"广告常常把玩耍描绘得比工作更有成就感\",{\"1\":{\"621\":1}}],[\"广泛地涌现出一些喜欢研究新事物的人所创建的网站\",{\"1\":{\"532\":1}}],[\"广\",{\"1\":{\"434\":1}}],[\"似乎这些都是排他性的选择\",{\"1\":{\"721\":1}}],[\"似乎是从web时代到来\",{\"1\":{\"631\":1}}],[\"似乎早已经过了上滑练习\",{\"1\":{\"631\":1}}],[\"似乎面对死亡会让你头脑中那些并非你自己的声音渐渐消失\",{\"1\":{\"588\":1}}],[\"似乎存在于自身\",{\"1\":{\"574\":1}}],[\"似乎觉得未来就在眼前\",{\"1\":{\"534\":1}}],[\"似\",{\"1\":{\"433\":1}}],[\"故障检测\",{\"1\":{\"433\":1}}],[\"故障转移完成\",{\"1\":{\"433\":1}}],[\"故障转移操作最后要做的是\",{\"1\":{\"426\":1}}],[\"故障转移操作第一步要做的就是在已下线主服务器属下的所有从服务器中\",{\"1\":{\"426\":1}}],[\"故障转移\",{\"1\":{\"426\":1,\"427\":1,\"433\":1}}],[\"己\",{\"1\":{\"433\":1}}],[\"任务将被取消\",{\"1\":{\"1156\":1}}],[\"任务状态值\",{\"1\":{\"455\":1}}],[\"任意电脑都可使用两台打印机\",{\"1\":{\"910\":1}}],[\"任意搜索引擎搜索内容\",{\"1\":{\"731\":1}}],[\"任意ai搜索\",{\"1\":{\"731\":1}}],[\"任\",{\"1\":{\"431\":1}}],[\"任何一方都可以主动发消息给对方\",{\"1\":{\"1073\":1}}],[\"任何一个曾经绞尽脑汁试图解决问题或把思想用清晰和有意义的文字表达出来的人\",{\"1\":{\"628\":1}}],[\"任何类型只要我们实现了servehttp方法\",{\"1\":{\"1055\":1}}],[\"任何知识\",{\"1\":{\"810\":1}}],[\"任何人都有可能犯错\",{\"1\":{\"637\":1}}],[\"任何人都可以增加余额\",{\"1\":{\"111\":1}}],[\"任何语言的错误处理基本可以分为两大部分\",{\"1\":{\"446\":1}}],[\"任何请求\",{\"1\":{\"387\":1}}],[\"任何试图将账户余额降低到其租金豁免最低余额\",{\"1\":{\"125\":1}}],[\"任何都可见\",{\"1\":{\"105\":1}}],[\"任何无关的东西都应该清理掉\",{\"1\":{\"58\":1}}],[\"任何修改的结果仅仅是在当前层进行标记\",{\"1\":{\"55\":1}}],[\"任何保存于容器存储层的信息都会随容器删除而丢失\",{\"1\":{\"47\":1}}],[\"任何额外的东西应该在该层构建结束前清理掉\",{\"1\":{\"46\":1}}],[\"群众资金\",{\"1\":{\"738\":1}}],[\"群\",{\"1\":{\"431\":1,\"434\":1}}],[\"群集和公共\",{\"0\":{\"137\":1}}],[\"度假\",{\"1\":{\"751\":1}}],[\"度\",{\"1\":{\"428\":1}}],[\"杂\",{\"1\":{\"428\":1}}],[\"传递请求的元数据和控制任务的生命周期\",{\"1\":{\"1156\":1}}],[\"传递表示缓冲区大小的参数\",{\"1\":{\"1137\":1}}],[\"传递数据\",{\"1\":{\"1136\":1}}],[\"传递和调用\",{\"1\":{\"819\":1}}],[\"传统和良好的\",{\"1\":{\"721\":1}}],[\"传统的认识都主张重的东西比轻的东西下落速度更快\",{\"1\":{\"653\":1}}],[\"传统智慧再次出错\",{\"1\":{\"653\":1}}],[\"传统智慧告诉我们\",{\"1\":{\"585\":1}}],[\"传统智慧就隐藏在它的背后\",{\"1\":{\"578\":1}}],[\"传统智慧就像他的咆哮\",{\"1\":{\"569\":1}}],[\"传统厨师的特点\",{\"1\":{\"583\":1}}],[\"传统观念只会举手投降\",{\"1\":{\"580\":1}}],[\"传统观念可能会在你脑海中浮现\",{\"1\":{\"580\":1}}],[\"传统互联网与web3\",{\"1\":{\"534\":1}}],[\"传统互联网也慢慢地在回来\",{\"1\":{\"534\":1}}],[\"传统互联网的规模貌似有提升趋势\",{\"1\":{\"532\":1}}],[\"传统互联网\",{\"0\":{\"532\":1}}],[\"传统虚拟机技术是虚拟出一套硬件后\",{\"1\":{\"45\":1}}],[\"传播\",{\"1\":{\"450\":1}}],[\"传播错误的简写\",{\"0\":{\"451\":1}}],[\"传播错误\",{\"0\":{\"450\":1}}],[\"传播节点的槽指派信息\",{\"1\":{\"428\":1}}],[\"槽\",{\"1\":{\"428\":1}}],[\"槽指派\",{\"0\":{\"428\":1},\"1\":{\"427\":1}}],[\"责任链模式通过链式请求传递\",{\"1\":{\"815\":1}}],[\"责任链模式使多个对象都有可能接收请求\",{\"1\":{\"813\":1}}],[\"责任链模式允许你将请求沿着处理链路不断进行处理\",{\"1\":{\"812\":1}}],[\"责任链模式\",{\"0\":{\"812\":1}}],[\"责怪自己如此浪费十年\",{\"1\":{\"595\":1}}],[\"责\",{\"1\":{\"428\":1}}],[\"点和\",{\"1\":{\"1002\":1}}],[\"点到\",{\"1\":{\"1002\":2}}],[\"点到下午\",{\"1\":{\"1002\":1}}],[\"点执行任务\",{\"1\":{\"997\":1}}],[\"点扫描某个数据库的所有任务执行\",{\"1\":{\"997\":1}}],[\"点赞给那些你认为有价值的视频上\",{\"1\":{\"689\":1}}],[\"点赞你认为对你有价值的视频\",{\"0\":{\"689\":1}}],[\"点醒了梦中人啊\",{\"1\":{\"551\":1}}],[\"点击\",{\"1\":{\"1067\":1}}],[\"点击下载\",{\"1\":{\"521\":1}}],[\"点击new案例\",{\"1\":{\"512\":1}}],[\"点击购买按钮\",{\"1\":{\"40\":1}}],[\"点\",{\"1\":{\"428\":1,\"431\":2,\"433\":3,\"435\":1,\"580\":1,\"759\":2,\"1002\":2,\"1003\":5,\"1200\":1}}],[\"面对技术进步的选择\",{\"0\":{\"773\":1}}],[\"面对这样的世界怎样去做我也在一直思考\",{\"1\":{\"631\":1}}],[\"面对经常使用的库\",{\"1\":{\"193\":1}}],[\"面\",{\"1\":{\"426\":1}}],[\"部\",{\"1\":{\"426\":1}}],[\"部分对象实现共同的接口\",{\"1\":{\"914\":1}}],[\"部分\",{\"1\":{\"914\":1}}],[\"部分原因是\",{\"1\":{\"721\":1}}],[\"部分重同步功能由以下三个部分构成\",{\"1\":{\"425\":1}}],[\"部分重同步的实现\",{\"1\":{\"425\":1}}],[\"部分重同步则用于处理断线后复制的情况\",{\"1\":{\"425\":1}}],[\"部分则是\",{\"1\":{\"420\":1}}],[\"部分非数值列举如下\",{\"1\":{\"292\":1}}],[\"部分数值列举如下\",{\"1\":{\"292\":1}}],[\"局部和级联标志\",{\"1\":{\"988\":1}}],[\"局部性原理还是成立的\",{\"1\":{\"377\":1}}],[\"局\",{\"1\":{\"426\":1}}],[\"别人告诉他们要发挥优势\",{\"1\":{\"572\":1}}],[\"别人告诉他们要追随热情\",{\"1\":{\"572\":1}}],[\"别人才是首席执行官\",{\"1\":{\"570\":1}}],[\"别人根本无从得知\",{\"1\":{\"55\":1}}],[\"别惊讶\",{\"1\":{\"531\":1}}],[\"别\",{\"1\":{\"426\":1}}],[\"源码分析\",{\"1\":{\"1050\":1}}],[\"源节点就向客户端返回一个ask错误\",{\"1\":{\"432\":1}}],[\"源节点会优先从自己的数据库里查找键\",{\"1\":{\"432\":1}}],[\"源节点向目标节点迁移一个槽的过程中\",{\"1\":{\"432\":1}}],[\"源\",{\"1\":{\"426\":1,\"431\":1}}],[\"源sentinel在接收到目标sentinel返回的命令回复之后\",{\"1\":{\"426\":1}}],[\"源sentinel\",{\"1\":{\"426\":1}}],[\"观察不同策略下的结果\",{\"1\":{\"855\":1}}],[\"观察不同状态下的行为\",{\"1\":{\"849\":1}}],[\"观察者模式适用于对象状态需要被其他对象实时关注\",{\"1\":{\"845\":1}}],[\"观察者模式是一种将对象状态的变化通知给其他对象的设计模式\",{\"1\":{\"845\":1}}],[\"观察者模式是一种行为型设计模式\",{\"1\":{\"842\":1}}],[\"观察者模式可以实现抽象层的封装\",{\"1\":{\"843\":1}}],[\"观察者模式可以实现对象之间的松耦合\",{\"1\":{\"843\":1}}],[\"观察者模式可以实现对象之间的动态联动\",{\"1\":{\"843\":1}}],[\"观察者模式的优点有以下几种\",{\"1\":{\"843\":1}}],[\"观察者模式的用法有以下几种\",{\"1\":{\"843\":1}}],[\"观察者模式\",{\"0\":{\"842\":1}}],[\"观察里面的内容\",{\"1\":{\"421\":1}}],[\"观看远在美国拍摄的影片\",{\"1\":{\"647\":1,\"686\":1}}],[\"观点\",{\"0\":{\"598\":1}}],[\"观\",{\"1\":{\"426\":1}}],[\"功\",{\"1\":{\"426\":1}}],[\"功能基于go\",{\"1\":{\"1242\":1}}],[\"功能\",{\"0\":{\"150\":1,\"1222\":1},\"1\":{\"60\":1,\"422\":1}}],[\"否认我们内心深处的渴望\",{\"1\":{\"585\":1}}],[\"否\",{\"1\":{\"426\":1}}],[\"否则isnil函数会导致panic\",{\"1\":{\"1191\":1}}],[\"否则为\",{\"1\":{\"1161\":1}}],[\"否则为false\",{\"1\":{\"267\":1}}],[\"否则不要在\",{\"1\":{\"1047\":1}}],[\"否则买家可以发起退货进入退货子流程\",{\"1\":{\"1009\":1}}],[\"否则报错\",{\"1\":{\"991\":3}}],[\"否则可能导致mock失败\",{\"1\":{\"961\":1}}],[\"否则并不需要这样休息\",{\"1\":{\"788\":1}}],[\"否则你将会成为明天的老年人\",{\"1\":{\"771\":1}}],[\"否则我们的观念会深深地控制整个感知过程\",{\"1\":{\"639\":1}}],[\"否则我不就去做了么\",{\"1\":{\"11\":1}}],[\"否则自我感受只能是不幸\",{\"1\":{\"610\":1}}],[\"否则气候就只能不断被破坏下去\",{\"1\":{\"609\":1}}],[\"否则会失去竞争力\",{\"1\":{\"598\":1}}],[\"否则会导致上层镜像因为依赖丢失而出错\",{\"1\":{\"53\":1}}],[\"否则地下室可能很暗\",{\"1\":{\"574\":1}}],[\"否则一个新的块将无法与它之前的哈希值进行比较\",{\"1\":{\"517\":1}}],[\"否则直接加一可能导致溢出\",{\"1\":{\"458\":1}}],[\"否则加锁失败\",{\"1\":{\"437\":1}}],[\"否则就得准备回国\",{\"1\":{\"751\":1}}],[\"否则就保存数据\",{\"1\":{\"418\":1}}],[\"否则就会导致索引失效\",{\"1\":{\"353\":1}}],[\"否则就会在min\",{\"1\":{\"244\":1}}],[\"否则判定该\",{\"1\":{\"414\":1}}],[\"否则还会继续投递消息给消费者\",{\"1\":{\"385\":1}}],[\"否则继续往下执行\",{\"1\":{\"349\":1}}],[\"否则返回\",{\"1\":{\"306\":1}}],[\"否则到递推公式的时候就会越来越乱\",{\"1\":{\"235\":1,\"236\":1}}],[\"否则\",{\"1\":{\"27\":1,\"284\":1,\"579\":1}}],[\"论证系统学习的必要性\",{\"1\":{\"525\":1}}],[\"论\",{\"1\":{\"426\":1}}],[\"头和负载以json的格式存在\",{\"1\":{\"1047\":1}}],[\"头戴设备\",{\"1\":{\"772\":1}}],[\"头sentinel的运行id和配置纪元\",{\"1\":{\"426\":1}}],[\"头sentinel对下线主服务器执行故障转移操作\",{\"1\":{\"426\":1}}],[\"头\",{\"1\":{\"426\":2}}],[\"头脑以及对未来的远见\",{\"1\":{\"19\":1,\"34\":1}}],[\"领头sentinel下一步要做的就是\",{\"1\":{\"426\":1}}],[\"领头sentinel将根据从服务器的优先级\",{\"1\":{\"426\":1}}],[\"领头sentinel将对已下线的主服务器执行故障转移操作\",{\"1\":{\"426\":1}}],[\"领头sentinel会将已下线主服务器的所有从服务器保存到一个列表里面\",{\"1\":{\"426\":1}}],[\"领\",{\"1\":{\"426\":4}}],[\"商品配送中\",{\"1\":{\"1010\":2}}],[\"商品id\",{\"1\":{\"353\":1}}],[\"商家发货后进入\",{\"1\":{\"1009\":1}}],[\"商家输入\",{\"1\":{\"1009\":1}}],[\"商业模式从一个美好的理论变成了实际的现实\",{\"1\":{\"725\":1}}],[\"商\",{\"1\":{\"426\":1}}],[\"协程出现饥饿的情况\",{\"1\":{\"1135\":1}}],[\"协程状态\",{\"1\":{\"1135\":1}}],[\"协程退出\",{\"1\":{\"1135\":2}}],[\"协程的数量\",{\"1\":{\"1135\":1}}],[\"协程\",{\"1\":{\"1135\":1}}],[\"协\",{\"1\":{\"426\":1}}],[\"协议\",{\"1\":{\"1073\":1}}],[\"协议消息时使用\",{\"1\":{\"435\":1}}],[\"协议利率费用\",{\"1\":{\"152\":1}}],[\"协议支持非常多的参数\",{\"1\":{\"152\":1}}],[\"协议方\",{\"1\":{\"150\":1}}],[\"协议采用部分清算方式\",{\"1\":{\"150\":1}}],[\"协议的\",{\"1\":{\"1073\":1}}],[\"协议的代码过程中\",{\"1\":{\"152\":1}}],[\"协议的保险基金\",{\"1\":{\"150\":1}}],[\"协议的清算非常重要\",{\"1\":{\"150\":1}}],[\"协议内部为每个share进行维护当我\",{\"1\":{\"150\":1}}],[\"协议中会有对应的\",{\"1\":{\"150\":1}}],[\"协议是solana生态最知名成熟的借贷协议之一\",{\"1\":{\"147\":1}}],[\"协议是以太坊生态最知名\",{\"1\":{\"143\":1}}],[\"协议时你需要去官网详细了解借贷协议相关概念避免资金损失\",{\"1\":{\"144\":1}}],[\"协议目前版本发展到v4\",{\"1\":{\"144\":1}}],[\"毫不奇怪\",{\"1\":{\"648\":1}}],[\"毫无疑问\",{\"1\":{\"627\":1,\"643\":1}}],[\"毫\",{\"1\":{\"426\":1}}],[\"毫秒\",{\"1\":{\"117\":1,\"1205\":1}}],[\"超过了系统\",{\"1\":{\"1135\":1}}],[\"超过了这个限制\",{\"1\":{\"710\":1}}],[\"超过\",{\"1\":{\"754\":1,\"1142\":1}}],[\"超过sentinel配置中设置的quorum参数的值\",{\"1\":{\"426\":1}}],[\"超越感觉\",{\"1\":{\"503\":1,\"618\":1,\"626\":2,\"669\":1,\"680\":1}}],[\"超时时间不好设置\",{\"1\":{\"436\":1}}],[\"超\",{\"1\":{\"426\":1}}],[\"超额抵押\",{\"1\":{\"185\":1}}],[\"断言调用顺序\",{\"1\":{\"977\":1}}],[\"断言mock被触发\",{\"1\":{\"973\":1}}],[\"断言`bar`成功mock\",{\"1\":{\"958\":1}}],[\"断言`a\",{\"1\":{\"958\":1}}],[\"断言`foo`成功mock\",{\"1\":{\"958\":1}}],[\"断定\",{\"1\":{\"653\":1}}],[\"断\",{\"1\":{\"426\":1}}],[\"断线后重复制\",{\"1\":{\"425\":1}}],[\"线性成长\",{\"1\":{\"767\":1}}],[\"线\",{\"1\":{\"426\":3}}],[\"线程启动\",{\"1\":{\"1135\":2}}],[\"线程没执行完\",{\"1\":{\"436\":1}}],[\"线程来处理网络请求\",{\"1\":{\"412\":1}}],[\"线程处理多个\",{\"1\":{\"412\":1}}],[\"线程处理\",{\"1\":{\"412\":1}}],[\"线程\",{\"1\":{\"383\":4,\"384\":9,\"386\":10,\"411\":1}}],[\"络\",{\"1\":{\"426\":1}}],[\"互斥锁还会从饥饿模式中退出\",{\"1\":{\"1142\":1}}],[\"互斥锁会\",{\"1\":{\"1142\":1}}],[\"互斥锁会直接交给等待队列最前面的\",{\"1\":{\"1142\":1}}],[\"互斥锁只有在普通模式才能进入自旋\",{\"1\":{\"1142\":1}}],[\"互斥锁的解锁过程\",{\"1\":{\"1142\":1}}],[\"互斥锁的加锁是靠\",{\"1\":{\"1142\":1}}],[\"互斥锁的所有状态位都是\",{\"1\":{\"1142\":1}}],[\"互斥锁状态比较复杂\",{\"1\":{\"1142\":1}}],[\"互联网自普及以来所有的中国大陆的网络热点\",{\"1\":{\"734\":1}}],[\"互联网的未来\",{\"0\":{\"563\":1}}],[\"互联网的中心化几年前就完成了\",{\"1\":{\"533\":1}}],[\"互联网的精神就是追求知识\",{\"1\":{\"532\":1}}],[\"互联网是有记忆的\",{\"1\":{\"528\":1}}],[\"互\",{\"1\":{\"426\":1}}],[\"样本小\",{\"1\":{\"946\":1}}],[\"样\",{\"1\":{\"426\":1}}],[\"运动会让你更强壮\",{\"1\":{\"789\":1}}],[\"运动会导致欣快感\",{\"1\":{\"789\":1}}],[\"运动等日常\",{\"1\":{\"571\":1}}],[\"运气\",{\"1\":{\"580\":1}}],[\"运算符被定义为从函数中提早返回一个值\",{\"1\":{\"451\":1}}],[\"运算符只能被用于返回值与\",{\"1\":{\"451\":1}}],[\"运算符消除了大量样板代码并使得函数的实现更简单\",{\"1\":{\"451\":1}}],[\"运算符\",{\"0\":{\"451\":1}}],[\"运\",{\"1\":{\"426\":1}}],[\"运行该函数\",{\"1\":{\"1173\":1}}],[\"运行延迟函数调用\",{\"1\":{\"1145\":1}}],[\"运行队列为空\",{\"1\":{\"1134\":1}}],[\"运行期间会在这三种状态来回切换\",{\"1\":{\"1132\":1}}],[\"运行期初始化\",{\"0\":{\"459\":1}}],[\"运行中\",{\"1\":{\"1132\":2}}],[\"运行服务\",{\"1\":{\"1080\":1}}],[\"运行server\",{\"1\":{\"1072\":1}}],[\"运行现在的无偿分布式系统的困难和成本是巨大的\",{\"1\":{\"723\":1}}],[\"运行上面的程序\",{\"1\":{\"475\":1}}],[\"运行后报错\",{\"1\":{\"459\":1}}],[\"运行在多\",{\"1\":{\"1142\":1}}],[\"运行在主从模式下时\",{\"1\":{\"414\":1}}],[\"运行在其中的应用都像是在独立的操作系统中运行一样\",{\"1\":{\"76\":1}}],[\"运行模式的话\",{\"1\":{\"414\":2}}],[\"运行时使用二维的runtime\",{\"1\":{\"1149\":1}}],[\"运行时会将8kb看作一页\",{\"1\":{\"1149\":1}}],[\"运行时会调用\",{\"1\":{\"1135\":1}}],[\"运行时会自动进行垃圾回收\",{\"1\":{\"125\":1}}],[\"运行时通过\",{\"1\":{\"1134\":1,\"1135\":1}}],[\"运行时将gomaxprocs设置成当前机器的核数\",{\"1\":{\"1133\":1}}],[\"运行时支持两种交易版本\",{\"1\":{\"138\":1}}],[\"运行时支持交易支付一个可选的费用\",{\"1\":{\"123\":1}}],[\"运行时中使用附加功能\",{\"1\":{\"138\":1}}],[\"运行时的绝对最大计算单元限制为140万cu\",{\"1\":{\"122\":1}}],[\"运行各种语言应用的镜像\",{\"1\":{\"57\":1}}],[\"运行\",{\"0\":{\"50\":1},\"1\":{\"75\":1,\"455\":1,\"959\":1,\"1026\":1}}],[\"录\",{\"1\":{\"426\":2,\"428\":1}}],[\"录制zerolog\",{\"1\":{\"4\":1}}],[\"录制zerolog视频\",{\"1\":{\"4\":1}}],[\"录制两万字入门prometheus视频\",{\"1\":{\"4\":1}}],[\"录制高质量分享视频10个\",{\"1\":{\"4\":1}}],[\"道义触投资2500美元在朋友开的面包店也没有结果\",{\"1\":{\"573\":1}}],[\"道义触须与生活方式触相悖\",{\"1\":{\"573\":1}}],[\"道义触须设想如果有十亿资金能为社会带来什么影响\",{\"1\":{\"573\":1}}],[\"道义需求触须认为\",{\"1\":{\"573\":1}}],[\"道\",{\"1\":{\"426\":1}}],[\"频\",{\"1\":{\"426\":1}}],[\"频道的订阅与退订\",{\"1\":{\"423\":1}}],[\"频道的所有订阅者都会收到这条消息\",{\"1\":{\"423\":1}}],[\"于10\",{\"1\":{\"426\":1}}],[\"于等\",{\"1\":{\"426\":1}}],[\"于\",{\"1\":{\"426\":1}}],[\"于是几乎在未来二十年内这个决策看起来是错误的\",{\"1\":{\"806\":1}}],[\"于是华为在整个房地产发展的过程中几乎没有任何参与\",{\"1\":{\"806\":1}}],[\"于是能跟随趋势发展的人当前就在未来的这些可能会爆发的行业中\",{\"1\":{\"806\":1}}],[\"于是复盘就成了做决策的关键因素\",{\"1\":{\"759\":1}}],[\"于是对这个断章取义的概念理解有所偏差就会导致各种心理不平衡\",{\"1\":{\"673\":1}}],[\"于是对照曾经的代码会明显感觉到自己的进步\",{\"1\":{\"602\":1}}],[\"于是\",{\"1\":{\"643\":1}}],[\"于是我们的代码后可以这样\",{\"1\":{\"1084\":1}}],[\"于是我们就只是看到了事实的一部分\",{\"1\":{\"642\":1}}],[\"于是我的手就开始了上滑的练习\",{\"1\":{\"631\":1}}],[\"于是这个论断就变成了任何一个人认为是真理的任何事情\",{\"1\":{\"637\":1}}],[\"于是这些发现自己被欺骗的人\",{\"1\":{\"534\":1}}],[\"于是自己就只能模糊的进行选择\",{\"1\":{\"631\":1}}],[\"于是ai的抉择就是自己的判断\",{\"1\":{\"631\":1}}],[\"于是继续加固这个上滑动作\",{\"1\":{\"631\":1}}],[\"于是呢\",{\"1\":{\"631\":2}}],[\"于是上滑似乎也是一种类似的行为\",{\"1\":{\"631\":1}}],[\"于是就有华为内部的高管想将公司的资金投资一些房地产\",{\"1\":{\"806\":1}}],[\"于是就会源源不断推荐给你这样的内容\",{\"1\":{\"689\":1}}],[\"于是就会导致各种社会问题\",{\"1\":{\"673\":2}}],[\"于是就开始让我们产生一些反应\",{\"1\":{\"642\":1}}],[\"于是就开始了下滑的动作练习\",{\"1\":{\"631\":1}}],[\"于是就得不断去尝试获取信息\",{\"1\":{\"631\":1}}],[\"于是就出现了我的大脑让我加入了一个竞赛\",{\"1\":{\"631\":1}}],[\"于是就兴冲冲下载了个抖音\",{\"1\":{\"631\":1}}],[\"于是就可以看到肉眼可见的其他人营造出的幸福生活\",{\"1\":{\"611\":1}}],[\"于是就可以通过它找到修改前的记录\",{\"1\":{\"362\":1}}],[\"于是金钱就体现出了茁壮的生命力\",{\"1\":{\"614\":1,\"615\":1}}],[\"于是金钱有生命力的含义是\",{\"1\":{\"614\":1}}],[\"于是大量谎言就出现了\",{\"1\":{\"611\":1}}],[\"于是每个人的心理都出现一个比较的念头\",{\"1\":{\"611\":1}}],[\"于是造就了整个社会失去了本应该关心的目标\",{\"1\":{\"610\":1}}],[\"于是省出来很多时间去做更有意义的事情\",{\"1\":{\"552\":1}}],[\"于是找到了云闪付这个软件\",{\"1\":{\"551\":1}}],[\"于是找到一个替代wechat的文件传输工具对我来说是刚需\",{\"1\":{\"494\":1}}],[\"于是乎金钱最终在流通中会流向对金钱有认知有掌控力的人的手中\",{\"1\":{\"615\":1}}],[\"于是乎\",{\"1\":{\"551\":1}}],[\"于是逢山开路\",{\"1\":{\"525\":1}}],[\"于是设计出了flush链表\",{\"1\":{\"377\":1}}],[\"于是事物\",{\"1\":{\"374\":1}}],[\"于是你就可以保护你的api路由了\",{\"1\":{\"199\":1}}],[\"于是t3\",{\"1\":{\"191\":1}}],[\"于是在没有天赋的领域将一事无成\",{\"1\":{\"674\":1}}],[\"于是在几天内\",{\"1\":{\"552\":1}}],[\"于是在\",{\"1\":{\"191\":1}}],[\"于是苹果公司当时处于一种完全垄断市场的状态\",{\"1\":{\"9\":1}}],[\"些\",{\"1\":{\"426\":1}}],[\"他将结果与预期输出进行比较\",{\"1\":{\"967\":1}}],[\"他能用\",{\"1\":{\"771\":1}}],[\"他还是被坑了\",{\"1\":{\"751\":1}}],[\"他就不应该失业\",{\"1\":{\"751\":1}}],[\"他就会被驱逐出境\",{\"1\":{\"751\":1}}],[\"他就会受到严格约束\",{\"1\":{\"751\":1}}],[\"他说\",{\"1\":{\"751\":1}}],[\"他工资相当低\",{\"1\":{\"751\":1}}],[\"他是在生产内容\",{\"1\":{\"738\":1}}],[\"他是生产者\",{\"1\":{\"738\":1}}],[\"他会每天晚上躺在床上刷着娱乐视频吗\",{\"1\":{\"738\":1}}],[\"他会发现交易所实际上并没有他的钱\",{\"1\":{\"703\":1}}],[\"他也具有\",{\"1\":{\"721\":1}}],[\"他喜欢php最初的易接近性\",{\"1\":{\"721\":1}}],[\"他受到了他在php和java方面的经验的指导\",{\"1\":{\"721\":1}}],[\"他只是变成了音乐陪伴着这个世界\",{\"1\":{\"695\":1}}],[\"他只是接了广告\",{\"1\":{\"680\":1}}],[\"他不喜欢\",{\"1\":{\"721\":1}}],[\"他不仅仅是一个学者\",{\"1\":{\"669\":1}}],[\"他不理解为什么去中心化的服务要用中心化的数据库\",{\"1\":{\"592\":1}}],[\"他的理由是\",{\"1\":{\"771\":1}}],[\"他的视频被许多人剪辑发布\",{\"1\":{\"738\":1}}],[\"他的代币并希望提取利润时\",{\"1\":{\"703\":1}}],[\"他的原则思维一定程度上概括了他的核心思维\",{\"1\":{\"669\":1}}],[\"他的书\",{\"1\":{\"528\":1}}],[\"他又可能被另一位作者作为权威来引用\",{\"1\":{\"654\":1}}],[\"他被指控为异端\",{\"1\":{\"643\":1}}],[\"他对每个人采用了相同的评分标准吗\",{\"1\":{\"626\":1}}],[\"他对一些主题的评分比其他的重要\",{\"1\":{\"626\":1}}],[\"他或许是对的\",{\"1\":{\"605\":1}}],[\"他可能表现得很差\",{\"1\":{\"583\":1}}],[\"他可能也让你相信你内心深处真正想成为一名木匠的那部分不是真正的你\",{\"1\":{\"576\":1}}],[\"他可以观察你的章鱼\",{\"1\":{\"577\":1}}],[\"他把你对木工的热情扔进了一个黑暗潮湿的否认监狱\",{\"1\":{\"576\":1}}],[\"他人与我无关\",{\"1\":{\"573\":1}}],[\"他在节假日把你困住\",{\"1\":{\"569\":1}}],[\"他们开始将过错归咎于老板\",{\"1\":{\"788\":1}}],[\"他们躺在沙发上吃外卖\",{\"1\":{\"788\":1}}],[\"他们很少真正筋疲力尽\",{\"1\":{\"788\":1}}],[\"他们很容易放弃\",{\"1\":{\"588\":1}}],[\"他们是最后采用者\",{\"1\":{\"771\":1}}],[\"他们是无比复杂\",{\"1\":{\"585\":1}}],[\"他们本可以成为早期采用者\",{\"1\":{\"771\":1}}],[\"他们有钱买电脑\",{\"1\":{\"771\":1}}],[\"他们有的品质\",{\"1\":{\"673\":1}}],[\"他们实际上无法完成基本的技术任务\",{\"1\":{\"771\":1}}],[\"他们想维持现状\",{\"1\":{\"771\":1}}],[\"他们就过时了\",{\"1\":{\"771\":1}}],[\"他们就会像你会换掉老清洁工一样进行替换\",{\"1\":{\"751\":1}}],[\"他们就修改判断\",{\"1\":{\"627\":1}}],[\"他们为整个人类创造了需要的东西\",{\"1\":{\"746\":1}}],[\"他们会感受到现实世界的压力\",{\"1\":{\"788\":1}}],[\"他们会感到非常惊讶\",{\"1\":{\"734\":1}}],[\"他们会说出自己\",{\"1\":{\"771\":1}}],[\"他们会采用新技术\",{\"1\":{\"771\":1}}],[\"他们会迅速而热情地采用新技术\",{\"1\":{\"771\":1}}],[\"他们会打扫得更快\",{\"1\":{\"751\":1}}],[\"他们会更年轻\",{\"1\":{\"751\":1}}],[\"他们会选择逃避\",{\"1\":{\"674\":1}}],[\"他们总是跟着社会热点走\",{\"1\":{\"717\":1}}],[\"他们在很年轻的时候就决定一定要买房\",{\"1\":{\"717\":1}}],[\"他们只是将所有损失推给了用户\",{\"1\":{\"706\":1}}],[\"他们只根据眼前的看到的信息来做一个仓促的\",{\"1\":{\"680\":1}}],[\"他们后来声称自己遭到了黑客攻击\",{\"1\":{\"705\":1}}],[\"他们后来声称自己被\",{\"1\":{\"703\":1}}],[\"他们一次又一次地遭到黑客攻击\",{\"1\":{\"704\":1}}],[\"他们留下来的东西一直在伴随着人类走下去\",{\"1\":{\"695\":1}}],[\"他们其实并没有真正死去\",{\"1\":{\"695\":1}}],[\"他们其实有自己的考虑\",{\"1\":{\"533\":1}}],[\"他们当然都很聪明\",{\"1\":{\"673\":1}}],[\"他们当然想知道有什么支持这些观点的根据\",{\"1\":{\"627\":1}}],[\"他们自己的之处也会减少\",{\"1\":{\"648\":1}}],[\"他们用于购买智能手机\",{\"1\":{\"648\":1}}],[\"他们可以影响更多的人接受知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"他们可能不好相处\",{\"1\":{\"586\":1}}],[\"他们可能会选择\",{\"1\":{\"450\":1}}],[\"他们需要投入时间来建立和维护自己的品牌和影响力\",{\"1\":{\"646\":1}}],[\"他们需要投入时间来生产有价值的内容\",{\"1\":{\"646\":1}}],[\"他们转向淀粉\",{\"1\":{\"643\":1}}],[\"他们没有认识到\",{\"1\":{\"627\":1}}],[\"他们期望教室和工作场所能提供刷短视频所带来的刺激一样\",{\"1\":{\"621\":1}}],[\"他们也倾向于获得与家庭\",{\"1\":{\"621\":1}}],[\"他们敏捷如翼\",{\"1\":{\"588\":1}}],[\"他们脚踏实地\",{\"1\":{\"588\":1}}],[\"他们更可能会想\",{\"1\":{\"578\":1}}],[\"他们对\",{\"1\":{\"577\":1}}],[\"他们还会购买律师\",{\"1\":{\"648\":1}}],[\"他们还会对实体经济有什么天马行空想法吗\",{\"1\":{\"534\":1}}],[\"他们还没有达到那个阶段\",{\"1\":{\"575\":1}}],[\"他们或许选择了错误的领域\",{\"1\":{\"573\":1}}],[\"他们明确知道自己想去的方向\",{\"1\":{\"572\":1}}],[\"他们正承受人生最常见也最让人痛苦的状况之一\",{\"1\":{\"572\":1}}],[\"他们不讨厌你\",{\"1\":{\"751\":1}}],[\"他们不是让交易所及其所有者承担失败的成本\",{\"1\":{\"706\":1}}],[\"他们不关心证据的数量和质量\",{\"1\":{\"627\":1}}],[\"他们不再确定自己是谁\",{\"1\":{\"572\":1}}],[\"他们不断发明新的方法让互联网中的人圈养在各种围栏里\",{\"1\":{\"533\":1}}],[\"他们过去可能有了解答\",{\"1\":{\"572\":1}}],[\"他们以核心事实和观察结果为基础\",{\"1\":{\"571\":1}}],[\"他们从小面对的是数字的屏幕\",{\"1\":{\"534\":1}}],[\"他们所做的不是去打压\",{\"1\":{\"534\":1}}],[\"他们的心情会好吗\",{\"1\":{\"795\":1}}],[\"他们的大脑并没有真正放松\",{\"1\":{\"788\":1}}],[\"他们的大脑并没有在晚上真正休息好\",{\"1\":{\"788\":1}}],[\"他们的财富几乎都来自于科技和商业\",{\"1\":{\"746\":1}}],[\"他们的缺点则相反\",{\"1\":{\"588\":1}}],[\"他们的缺点是在错误的事物上停留的时间太长\",{\"1\":{\"588\":1}}],[\"他们的道德触角可能一开始就讨厌这些动机\",{\"1\":{\"577\":1}}],[\"他们的出发点都是自私的动机\",{\"1\":{\"577\":1}}],[\"他们的人生道路其实并不合理\",{\"1\":{\"570\":1}}],[\"他们的问题是比特币的价值究竟有多少\",{\"1\":{\"534\":1}}],[\"他们的广告却铺天盖地\",{\"1\":{\"534\":1}}],[\"他们的区别就在于是否在\",{\"1\":{\"413\":1}}],[\"他们的值可能为1但是不一定是在s中第一个出现一次的字符\",{\"1\":{\"322\":1}}],[\"他sentinel将自己设置为局部领头sentinel\",{\"1\":{\"426\":1}}],[\"他sentinel对发送信息sentinel的认知\",{\"1\":{\"426\":1}}],[\"他\",{\"1\":{\"426\":1}}],[\"息\",{\"1\":{\"426\":5,\"434\":1}}],[\"号的\",{\"1\":{\"1002\":1}}],[\"号\",{\"1\":{\"426\":1}}],[\"口\",{\"1\":{\"426\":1}}],[\"址\",{\"1\":{\"426\":1}}],[\"地球到底有多少水等等\",{\"1\":{\"677\":1}}],[\"地球乃是太阳系的中心\",{\"1\":{\"643\":1}}],[\"地位是指社会地位\",{\"1\":{\"673\":1}}],[\"地图上有一个明确的箭头\",{\"1\":{\"585\":1}}],[\"地\",{\"1\":{\"426\":2}}],[\"地址和\",{\"1\":{\"1161\":1}}],[\"地址查找表\",{\"0\":{\"139\":1}}],[\"地址给容器\",{\"1\":{\"64\":1}}],[\"地址的格式一般是\",{\"1\":{\"49\":1}}],[\"地址\",{\"1\":{\"49\":1,\"76\":1}}],[\"普\",{\"1\":{\"426\":1}}],[\"普通变量\",{\"1\":{\"956\":1}}],[\"普通群众之间会有越来越世风日下的感受\",{\"1\":{\"747\":1}}],[\"普通人什么都不需要做\",{\"1\":{\"528\":1}}],[\"普通服务器在初始化时会通过载入rdb文件或者aof文件来还原数据库状态\",{\"1\":{\"426\":1}}],[\"普通的\",{\"1\":{\"368\":1,\"370\":1}}],[\"普通\",{\"1\":{\"356\":1,\"361\":1,\"362\":1,\"369\":1,\"956\":2}}],[\"普通用户自然不可能与链上程序直接交互\",{\"1\":{\"110\":1}}],[\"码\",{\"1\":{\"426\":2}}],[\"哨兵会默认以10秒一次的频率通过命令向被监视的主服务器发送info命令\",{\"1\":{\"426\":1}}],[\"哨兵\",{\"0\":{\"426\":1},\"1\":{\"426\":1}}],[\"哨兵模式\",{\"1\":{\"413\":2}}],[\"辅助实现min\",{\"1\":{\"425\":2}}],[\"检测主观下线状态\",{\"1\":{\"426\":1}}],[\"检测主从服务器的网络连接状态\",{\"1\":{\"425\":2}}],[\"检测命令丢失\",{\"1\":{\"425\":2}}],[\"检查是否是指针类型并且可寻址\",{\"1\":{\"1190\":1}}],[\"检查当前状态是否符合预期\",{\"1\":{\"1009\":1}}],[\"检查安全码\",{\"1\":{\"927\":1}}],[\"检查账户\",{\"1\":{\"927\":1}}],[\"检查索引是否有效\",{\"1\":{\"838\":1}}],[\"检查两次溢出\",{\"1\":{\"458\":1}}],[\"检查这些结构的slots数组\",{\"1\":{\"428\":1}}],[\"检查主服务器是否已下线\",{\"1\":{\"426\":1}}],[\"检查客观下线状态\",{\"1\":{\"426\":1}}],[\"检查被监视的键是否至少有一个已经被修改过了\",{\"1\":{\"424\":1}}],[\"检查保存条件是否满足\",{\"1\":{\"417\":1}}],[\"检查表或字段是否存在\",{\"1\":{\"349\":1}}],[\"检查\",{\"1\":{\"347\":1}}],[\"检查本地是否存在指定的镜像\",{\"1\":{\"64\":1}}],[\"器\",{\"1\":{\"425\":1,\"426\":5}}],[\"服\",{\"1\":{\"425\":1,\"426\":5}}],[\"服务和资源\",{\"1\":{\"1047\":1}}],[\"服务的读写性能\",{\"1\":{\"413\":1}}],[\"服务器也可以根据\",{\"1\":{\"1088\":1}}],[\"服务器也可以发送多个响应\",{\"1\":{\"1073\":1}}],[\"服务器也将所有模式的订阅关系都保存在服务器状态的pubsub\",{\"1\":{\"423\":1}}],[\"服务器先拖一段时间\",{\"1\":{\"1073\":1}}],[\"服务器是没法主动发数据给浏览器的\",{\"1\":{\"1073\":1}}],[\"服务器才能响应这个请求\",{\"1\":{\"1073\":1}}],[\"服务器才会使用rdb文件来还原数据库状态\",{\"1\":{\"416\":1}}],[\"服务器可以将\",{\"1\":{\"1078\":1}}],[\"服务器可以在任意时刻发送消息给浏览器\",{\"1\":{\"1073\":1}}],[\"服务器可以清楚地知道哪些数据库键正在被监视\",{\"1\":{\"424\":1}}],[\"服务器端这里什么都不需要做\",{\"1\":{\"1097\":1}}],[\"服务器端怎么根据field\",{\"1\":{\"1088\":1}}],[\"服务器端只需要不断监听这个流就可以不断获取客户端发送的消息\",{\"1\":{\"1072\":1}}],[\"服务器端需要存储大量的session数据sessionid\",{\"1\":{\"1045\":1}}],[\"服务器级\",{\"1\":{\"721\":1}}],[\"服务器运行id\",{\"1\":{\"425\":1}}],[\"服务器的运行id\",{\"1\":{\"425\":1}}],[\"服务器停机\",{\"1\":{\"424\":1}}],[\"服务器要么就执行事务中的所有操作\",{\"1\":{\"424\":1}}],[\"服务器将执行客户端提交的这个事务\",{\"1\":{\"424\":1}}],[\"服务器将拒绝执行事务\",{\"1\":{\"424\":1}}],[\"服务器会初始化一个sentinel\",{\"1\":{\"426\":1}}],[\"服务器会根据这个客户端是否打开了redis\",{\"1\":{\"424\":1}}],[\"服务器会遍历这个客户端的事务队列\",{\"1\":{\"424\":1}}],[\"服务器会调用select命令\",{\"1\":{\"419\":1}}],[\"服务器需要执行以下两个动作\",{\"1\":{\"423\":1}}],[\"服务器执行完一个写命令后\",{\"1\":{\"422\":1}}],[\"服务器在启动时\",{\"1\":{\"421\":1}}],[\"服务器在载入rdb文件时\",{\"1\":{\"418\":1}}],[\"服务器中的所有数据库\",{\"1\":{\"417\":1}}],[\"服务器对数据库状态\",{\"1\":{\"417\":1}}],[\"服务器状态还维持着一个dirty计数器和lastsave属性\",{\"1\":{\"417\":1}}],[\"服务器禁止save和bgsave的目的是避免父子进程同时执行rdbsave防止有竞争条件\",{\"1\":{\"416\":1}}],[\"服务器处理bgsave\",{\"1\":{\"416\":1}}],[\"服务器上\",{\"1\":{\"413\":1}}],[\"服务器\",{\"1\":{\"413\":1}}],[\"服务器故障时\",{\"1\":{\"413\":1}}],[\"服务器发生宕机了\",{\"1\":{\"413\":1}}],[\"服务器目前正在执行bgsave命令或者bgrewriteaof命令\",{\"1\":{\"395\":1}}],[\"服务器目前没有在执行bgsave命令或者bgrewriteaof命令\",{\"1\":{\"395\":1}}],[\"服务器为例子\",{\"1\":{\"55\":1}}],[\"服务收到\",{\"1\":{\"343\":1}}],[\"服务发送\",{\"1\":{\"343\":1}}],[\"服务端一元拦截器\",{\"1\":{\"1099\":1}}],[\"服务端方可以给客户端方设置header和trailer\",{\"1\":{\"1095\":1}}],[\"服务端流式grpc\",{\"1\":{\"1075\":1}}],[\"服务端根据对应的token进行鉴权\",{\"1\":{\"1046\":1}}],[\"服务端根据对应的sessionid查找session并进行鉴权\",{\"1\":{\"1045\":1}}],[\"服务端是允许多个客户端连接的\",{\"1\":{\"361\":1}}],[\"服务端组件\",{\"1\":{\"199\":2}}],[\"服务端的架构中\",{\"1\":{\"60\":1}}],[\"服务配合使用\",{\"1\":{\"193\":1}}],[\"服务\",{\"1\":{\"48\":1,\"385\":1,\"413\":1,\"1010\":1}}],[\"骤\",{\"1\":{\"425\":1}}],[\"步\",{\"1\":{\"425\":1}}],[\"步骤7\",{\"1\":{\"425\":1}}],[\"步骤6\",{\"1\":{\"425\":1}}],[\"步骤5\",{\"1\":{\"425\":1}}],[\"步骤4\",{\"1\":{\"425\":1}}],[\"步骤3\",{\"1\":{\"425\":1}}],[\"步骤2\",{\"1\":{\"425\":1}}],[\"步骤1\",{\"1\":{\"425\":1}}],[\"步骤\",{\"1\":{\"384\":2}}],[\"证据必须是相关和充分的\",{\"1\":{\"627\":1}}],[\"证明自己的思考的\",{\"1\":{\"605\":1}}],[\"证明选举\",{\"1\":{\"95\":1}}],[\"证书在每台设备上即时生成\",{\"1\":{\"494\":1}}],[\"证\",{\"1\":{\"425\":1}}],[\"验\",{\"1\":{\"425\":1}}],[\"验证工具\",{\"1\":{\"128\":1}}],[\"验证\",{\"1\":{\"128\":1}}],[\"验证者的奖励提供了来源\",{\"1\":{\"118\":1}}],[\"份\",{\"1\":{\"425\":1}}],[\"份额记录\",{\"1\":{\"150\":1}}],[\"身上的衣服只要干净整洁就行\",{\"1\":{\"743\":1}}],[\"身份认同\",{\"1\":{\"571\":1}}],[\"身份验证\",{\"1\":{\"425\":1}}],[\"身\",{\"1\":{\"425\":1}}],[\"错误返回值使用的\",{\"1\":{\"448\":1}}],[\"错误指向\",{\"1\":{\"447\":1}}],[\"错误\",{\"1\":{\"425\":1,\"450\":1,\"959\":1}}],[\"错乱\",{\"1\":{\"383\":1}}],[\"队列并陷入休眠等待调度器的唤醒\",{\"1\":{\"1137\":1}}],[\"队列并调用\",{\"1\":{\"1137\":1}}],[\"队列中存在挂起的\",{\"1\":{\"1137\":1}}],[\"队列中\",{\"1\":{\"1137\":2}}],[\"队列中有等待运行的g\",{\"1\":{\"1135\":1}}],[\"队列开始新一轮调度\",{\"1\":{\"1135\":1}}],[\"队列\",{\"1\":{\"425\":1}}],[\"队列的声明如下\",{\"1\":{\"280\":1}}],[\"初读\",{\"0\":{\"767\":1}}],[\"初步想法是综合所有平台的加密货币价格\",{\"1\":{\"698\":1}}],[\"初次复制\",{\"1\":{\"425\":1}}],[\"初始\",{\"1\":{\"566\":1}}],[\"初始边界\",{\"1\":{\"300\":1}}],[\"初始为多少都可以\",{\"1\":{\"260\":1}}],[\"初始为0\",{\"1\":{\"236\":1,\"240\":1,\"259\":1}}],[\"初始化调度器\",{\"1\":{\"1134\":1}}],[\"初始化打印\",{\"1\":{\"463\":1}}],[\"初始化sentinel的最后一步是创建连向被监视主服务器的网络连接\",{\"1\":{\"426\":1}}],[\"初始化sentinel的监视主服务器列表\",{\"1\":{\"426\":1}}],[\"初始化sentinel状态\",{\"1\":{\"426\":2}}],[\"初始化服务器\",{\"1\":{\"426\":2}}],[\"初始化\",{\"1\":{\"326\":1}}],[\"初始化数量统计变量\",{\"1\":{\"287\":1}}],[\"初始化为false\",{\"1\":{\"267\":1}}],[\"初始化为0\",{\"1\":{\"259\":1}}],[\"初始化的时候\",{\"1\":{\"267\":1}}],[\"初始化分析完毕\",{\"1\":{\"264\":1}}],[\"初始化保证金要求的资产价值限额\",{\"1\":{\"152\":1}}],[\"初始债务权重\",{\"1\":{\"152\":1}}],[\"初始资产权重\",{\"1\":{\"152\":1}}],[\"初始交易中调用程序a的签署者权限会被延申给程序b\",{\"1\":{\"131\":1}}],[\"致力于帮助他人的人被认为有讨好型人格\",{\"1\":{\"623\":1}}],[\"致\",{\"1\":{\"424\":1}}],[\"务必调用\",{\"1\":{\"1153\":1}}],[\"务\",{\"1\":{\"424\":1,\"425\":1,\"426\":5}}],[\"改进的插入排序\",{\"0\":{\"947\":1}}],[\"改变程序即将执行的代码\",{\"1\":{\"1132\":1}}],[\"改变\",{\"1\":{\"1038\":1}}],[\"改变放入\",{\"1\":{\"1038\":1}}],[\"改变上下文对象的策略\",{\"1\":{\"855\":1}}],[\"改变其行为\",{\"1\":{\"848\":1}}],[\"改变主题对象的状态\",{\"1\":{\"844\":1}}],[\"改变发起人的状态\",{\"1\":{\"838\":1}}],[\"改变习惯很难\",{\"1\":{\"771\":1}}],[\"改变他们的思维和行为\",{\"1\":{\"646\":1}}],[\"改\",{\"1\":{\"424\":1}}],[\"改为\",{\"1\":{\"243\":1}}],[\"函\",{\"1\":{\"424\":1}}],[\"函数根据\",{\"1\":{\"1212\":1}}],[\"函数根据指定的年\",{\"1\":{\"1212\":1}}],[\"函数根据空格来区分输入的值\",{\"1\":{\"1171\":1}}],[\"函数加载指定名称的时区\",{\"1\":{\"1208\":1}}],[\"函数加载时区信息\",{\"1\":{\"1205\":1}}],[\"函数创建一个定时触发的\",{\"1\":{\"1211\":1}}],[\"函数创建一个固定偏移量的时区\",{\"1\":{\"1208\":1}}],[\"函数创建了布尔类型和整数类型的命令行参数\",{\"1\":{\"1162\":1}}],[\"函数返回当前时间的\",{\"1\":{\"1212\":1}}],[\"函数返回当前时间和指定时间之间的时间差\",{\"1\":{\"1207\":1}}],[\"函数返回指定时间和当前时间之间的时间差\",{\"1\":{\"1207\":1}}],[\"函数返回一个通道\",{\"1\":{\"1206\":4}}],[\"函数使程序暂停指定的时间\",{\"1\":{\"1206\":2}}],[\"函数是\",{\"0\":{\"1200\":1}}],[\"函数是根据换行符来停止扫描的\",{\"1\":{\"1172\":1}}],[\"函数用于时间对象与字符串之间的相互转换\",{\"1\":{\"1205\":1}}],[\"函数用于将字符串形式的基本类型值追加到字节切片中\",{\"1\":{\"1199\":1}}],[\"函数用于将基本类型的值追加到字节切片\",{\"1\":{\"1199\":1}}],[\"函数用于创建一个整数类型的命令行参数\",{\"1\":{\"1162\":1}}],[\"函数用于创建一个布尔类型的命令行参数\",{\"1\":{\"1162\":1}}],[\"函数用于创建一个带缓冲的读取器\",{\"1\":{\"1153\":1}}],[\"函数用于创建一个缓冲写入器\",{\"1\":{\"1153\":1}}],[\"函数用于创建一个缓冲读取器\",{\"1\":{\"1153\":1}}],[\"函数来根据方法的名称自动注册\",{\"1\":{\"1193\":1}}],[\"函数来解析命令行参数\",{\"1\":{\"1161\":2,\"1163\":1}}],[\"函数签名如下\",{\"1\":{\"1172\":1}}],[\"函数直接输出内容\",{\"1\":{\"1167\":1}}],[\"函数注册自定义类型的命令行参数\",{\"1\":{\"1163\":1}}],[\"函数定义了两个命令行参数\",{\"1\":{\"1161\":1}}],[\"函数可以用于生成源代码字符串的表示形式\",{\"1\":{\"1200\":1}}],[\"函数可以创建派生的上下文\",{\"1\":{\"1156\":1}}],[\"函数可以添加一些可选项\",{\"1\":{\"1001\":1}}],[\"函数将时间对象与字符串进行转换\",{\"1\":{\"1213\":1}}],[\"函数将指定的时间字符串解析为\",{\"1\":{\"1212\":1}}],[\"函数将字符串解析为\",{\"1\":{\"1207\":1}}],[\"函数将字符串\",{\"1\":{\"1200\":1}}],[\"函数将浮点数\",{\"1\":{\"1199\":1}}],[\"函数将布尔值\",{\"1\":{\"1199\":1}}],[\"函数将格式化的结果写入一个指定的\",{\"1\":{\"1173\":1}}],[\"函数将格式化的结果作为字符串返回\",{\"1\":{\"1173\":1}}],[\"函数将\",{\"1\":{\"1143\":1,\"1200\":3}}],[\"函数阻塞后续的读操作\",{\"1\":{\"1143\":1}}],[\"函数快速解锁\",{\"1\":{\"1142\":1}}],[\"函数中初始化了一个\",{\"1\":{\"1138\":1}}],[\"函数时发生了隐式的类型转换\",{\"1\":{\"1138\":1}}],[\"函数时会对参数\",{\"1\":{\"1138\":1}}],[\"函数时gin提供的中间件流程控制函数之一\",{\"1\":{\"1056\":1}}],[\"函数在最后会返回true\",{\"1\":{\"1137\":1}}],[\"函数在该栈中\",{\"1\":{\"301\":1}}],[\"函数获取新的\",{\"1\":{\"1135\":1}}],[\"函数调用\",{\"1\":{\"1135\":1}}],[\"函数类型是\",{\"1\":{\"1097\":1}}],[\"函数里\",{\"1\":{\"1053\":1}}],[\"函数解析时间字符串时可能返回\",{\"1\":{\"1210\":1}}],[\"函数解析\",{\"1\":{\"1004\":1}}],[\"函数修改为以下实现\",{\"1\":{\"980\":1}}],[\"函数名前缀为example\",{\"1\":{\"966\":1}}],[\"函数名前缀为benchmark\",{\"1\":{\"966\":1}}],[\"函数名前缀为test\",{\"1\":{\"966\":1}}],[\"函数变量\",{\"1\":{\"956\":1}}],[\"函数执行次数\",{\"1\":{\"956\":1}}],[\"函数选项模式可以实现建造者模式的优点\",{\"1\":{\"873\":1}}],[\"函数选项模式可以通过闭包和高阶函数实现\",{\"1\":{\"873\":1}}],[\"函数的作用和示例\",{\"1\":{\"1200\":1}}],[\"函数的实现比较复杂\",{\"1\":{\"1137\":1}}],[\"函数的执行\",{\"1\":{\"1133\":1}}],[\"函数的返回值必须是\",{\"1\":{\"451\":1}}],[\"函数的调用者会收到一个\",{\"1\":{\"450\":1}}],[\"函数的调用者会收到一个包含\",{\"1\":{\"450\":1}}],[\"函数开始\",{\"1\":{\"450\":1}}],[\"函数体以调用\",{\"1\":{\"450\":1}}],[\"函数和方法\",{\"1\":{\"956\":1}}],[\"函数和\",{\"1\":{\"450\":1}}],[\"函数从文件中读取到的用户名\",{\"1\":{\"450\":1}}],[\"函数需要一个方法在告诉我们成功与否的同时返回文件句柄或者错误信息\",{\"1\":{\"448\":1}}],[\"函数\",{\"0\":{\"1206\":1},\"1\":{\"308\":1,\"353\":1,\"956\":1,\"1055\":1,\"1135\":1,\"1142\":1,\"1161\":1,\"1162\":2,\"1172\":1,\"1173\":1,\"1191\":1,\"1199\":2,\"1200\":4}}],[\"函数进行匹配\",{\"1\":{\"169\":1}}],[\"么\",{\"1\":{\"424\":1}}],[\"监测对方是否在线\",{\"1\":{\"433\":1}}],[\"监视资本主义\",{\"1\":{\"531\":1}}],[\"监视同一个主服务器的多个在线sentinel中的任意一个都有可能成为领头sentinel\",{\"1\":{\"426\":1}}],[\"监视同一个主服务器的多个sentinel可以自动发现对方\",{\"1\":{\"426\":1}}],[\"监视这个下线主服务器的各\",{\"1\":{\"426\":1}}],[\"监视任意数量的数据库键\",{\"1\":{\"424\":1}}],[\"监\",{\"1\":{\"424\":1,\"426\":1}}],[\"监控后\",{\"1\":{\"377\":1}}],[\"令\",{\"1\":{\"424\":1,\"425\":1,\"426\":2,\"434\":1,\"435\":1}}],[\"令牌是在各方之间安全传输信息的好方法\",{\"1\":{\"1047\":1}}],[\"令牌桶就是想象有一个固定大小的桶\",{\"1\":{\"1033\":1}}],[\"令牌桶\",{\"1\":{\"1033\":1}}],[\"令牌\",{\"1\":{\"193\":1,\"1047\":1}}],[\"令牌后\",{\"1\":{\"193\":1}}],[\"令牌和\",{\"1\":{\"193\":1}}],[\"送\",{\"1\":{\"424\":1,\"431\":2,\"435\":1}}],[\"户\",{\"1\":{\"424\":2,\"435\":1}}],[\"客观思考是基于事实的比较\",{\"1\":{\"683\":1}}],[\"客观地看待它\",{\"1\":{\"577\":1}}],[\"客观下线状态的判断条件\",{\"1\":{\"426\":1}}],[\"客\",{\"1\":{\"424\":2,\"426\":1,\"435\":1}}],[\"客户端一元拦截器\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"客户端流式grpc\",{\"1\":{\"1075\":1}}],[\"客户端和服务器之间的通信是通过消息来完成的\",{\"1\":{\"1073\":1}}],[\"客户端和服务器之间的通信是通过流来完成的\",{\"1\":{\"1073\":1}}],[\"客户端和服务器端都可以向这个流中写入数据\",{\"1\":{\"1072\":1}}],[\"客户端保存token\",{\"1\":{\"1046\":1}}],[\"客户端访问需要认证的接口时\",{\"1\":{\"1045\":1}}],[\"客户端通过用户名密码\",{\"1\":{\"1045\":1,\"1046\":1}}],[\"客户端通过连接器建立连接\",{\"1\":{\"355\":1}}],[\"客户端只需要输入卡片详情\",{\"1\":{\"927\":1}}],[\"客户端不需要重新编译代码就可以扩展新的实现类\",{\"1\":{\"909\":1}}],[\"客户端不需要知道复杂对象的内部结构\",{\"1\":{\"872\":1}}],[\"客户端代码只需了解工厂接口\",{\"1\":{\"881\":1}}],[\"客户端代码调用工厂对象\",{\"1\":{\"880\":1}}],[\"客户端向所有\",{\"1\":{\"437\":1}}],[\"客户端为获取锁的总耗时\",{\"1\":{\"437\":1}}],[\"客户端需要重新计算这把锁的有效时间\",{\"1\":{\"437\":1}}],[\"客户端获取锁的总耗时\",{\"1\":{\"437\":1}}],[\"客户端获取当前时间\",{\"1\":{\"437\":1}}],[\"客户端从超过半数\",{\"1\":{\"437\":1}}],[\"客户端就要计算整个加锁过程的总耗时\",{\"1\":{\"437\":1}}],[\"客户端就可以向\",{\"1\":{\"343\":1}}],[\"客户端按顺序依次向\",{\"1\":{\"437\":1}}],[\"客户端成功地获得分布式锁\",{\"1\":{\"437\":1}}],[\"客户端还是可以完成锁操作\",{\"1\":{\"437\":1}}],[\"客户端还可以通过执行psubscribe命令订阅一个或多个模式\",{\"1\":{\"423\":1}}],[\"客户端可以接受header和trailer\",{\"1\":{\"1095\":1}}],[\"客户端可以控制更新操作仅修改指定的字段\",{\"1\":{\"1088\":1}}],[\"客户端可以发送多个请求\",{\"1\":{\"1073\":1}}],[\"客户端可以让接收命令的节点a将另一个节点b添加到节点a当前所在的集群里面\",{\"1\":{\"427\":1}}],[\"客户端可以订阅一个或多个频道\",{\"1\":{\"423\":1}}],[\"客户端\",{\"1\":{\"425\":1}}],[\"客户端提交的事务已经不再安全\",{\"1\":{\"424\":1}}],[\"客户端c2和c4正在监视键\",{\"1\":{\"424\":1}}],[\"客户端c3正在监视键\",{\"1\":{\"424\":1}}],[\"客户端c1和c2正在监视键\",{\"1\":{\"424\":1}}],[\"客户端发送save命令会被服务器直接拒绝\",{\"1\":{\"416\":1}}],[\"件\",{\"1\":{\"419\":1}}],[\"据库切换\",{\"1\":{\"419\":1}}],[\"据\",{\"1\":{\"419\":1}}],[\"据我所知\",{\"1\":{\"169\":1}}],[\"果\",{\"1\":{\"416\":1,\"424\":1,\"426\":1,\"432\":2}}],[\"造成了严重的后果\",{\"1\":{\"795\":1}}],[\"造成了一定的内存空间浪费\",{\"1\":{\"414\":1}}],[\"造成选择暴政的真正原因是\",{\"1\":{\"585\":1}}],[\"造成这么回事的不是事件\",{\"1\":{\"566\":1}}],[\"造成访问压缩列表性能的下降\",{\"1\":{\"399\":1}}],[\"惰性删除策略对内存不友好\",{\"1\":{\"414\":1}}],[\"惰性删除策略对\",{\"1\":{\"414\":1}}],[\"惰性删除策略的缺点\",{\"1\":{\"414\":1}}],[\"惰性删除策略的优点\",{\"1\":{\"414\":1}}],[\"惰性删除策略的做法是\",{\"1\":{\"414\":1}}],[\"惰性删除+定期删除\",{\"1\":{\"414\":1}}],[\"惰性空间释放\",{\"1\":{\"393\":1,\"402\":1}}],[\"范围内的模数\",{\"1\":{\"413\":1}}],[\"范围内最长的回文子序列的长度为dp\",{\"1\":{\"268\":1}}],[\"切换到下一个状态\",{\"1\":{\"849\":2}}],[\"切片之一\",{\"1\":{\"1191\":1}}],[\"切片的索引必须落在字符之间的边界位置\",{\"1\":{\"468\":1}}],[\"切片就是对string类型中某一部分的饮用而已\",{\"1\":{\"468\":1}}],[\"切片允许你引用集合中部分连续的元素序列\",{\"1\":{\"468\":1}}],[\"切片在go语言中非常流行\",{\"1\":{\"468\":1}}],[\"切片\",{\"0\":{\"468\":1},\"1\":{\"468\":1,\"1163\":2}}],[\"切片集群模式\",{\"1\":{\"413\":1}}],[\"切片集群\",{\"1\":{\"413\":2}}],[\"切割b之后在cdef中在切割第三段\",{\"1\":{\"213\":1}}],[\"切割一个a之后\",{\"1\":{\"213\":1}}],[\"切割问题\",{\"1\":{\"206\":1,\"213\":2}}],[\"切割\",{\"1\":{\"206\":1}}],[\"兼容性差\",{\"1\":{\"413\":1}}],[\"兼顾了异步复制和同步复制的优点\",{\"1\":{\"359\":1}}],[\"混合持久化缺点\",{\"1\":{\"413\":1}}],[\"混合持久化结合了\",{\"1\":{\"413\":1}}],[\"混合持久化优点\",{\"1\":{\"413\":1}}],[\"混合持久化方式\",{\"1\":{\"413\":1}}],[\"势必会造成\",{\"1\":{\"413\":1}}],[\"仍然有绝大部分人庸庸碌碌过完一生\",{\"1\":{\"551\":1}}],[\"仍然有很多潜力未曾展现\",{\"1\":{\"509\":1}}],[\"仍然是好奇等等\",{\"1\":{\"534\":1}}],[\"仍然是创新\",{\"1\":{\"534\":1}}],[\"仍然存在于复制积压缓冲区里面\",{\"1\":{\"425\":1}}],[\"仍然使用单线程来处理\",{\"1\":{\"412\":1}}],[\"仍有\",{\"1\":{\"116\":1}}],[\"死锁造成的性能损耗\",{\"1\":{\"412\":1}}],[\"省去了多线程切换带来的时间和性能上的开销\",{\"1\":{\"412\":1}}],[\"瓶颈可能是机器的内存或者网络带宽\",{\"1\":{\"412\":1}}],[\"成就感又会带来满足感和自信\",{\"1\":{\"623\":1}}],[\"成为我们的一部分\",{\"1\":{\"810\":1}}],[\"成为黑马\",{\"1\":{\"669\":1}}],[\"成为批判性思考者\",{\"1\":{\"627\":1}}],[\"成为一个更好的幼儿园教师\",{\"1\":{\"586\":1}}],[\"成为一名电影明星需要一些才华\",{\"1\":{\"580\":1}}],[\"成为显著的实力\",{\"1\":{\"583\":1}}],[\"成为你真正想要的东西\",{\"1\":{\"575\":1}}],[\"成长型思维有的四个特征\",{\"1\":{\"674\":1}}],[\"成长型思维\",{\"1\":{\"674\":1}}],[\"成长型思维的缺陷是它忽略了一些人已有的不公平优势\",{\"1\":{\"674\":1}}],[\"成长型思维的人可以高度概括为六个字\",{\"1\":{\"674\":1}}],[\"成长型思维模式\",{\"0\":{\"674\":1}}],[\"成长\",{\"1\":{\"669\":1}}],[\"成长和消亡属性的\",{\"1\":{\"614\":2}}],[\"成长和衰老和死亡过程的\",{\"1\":{\"614\":1}}],[\"成长后\",{\"1\":{\"571\":1}}],[\"成长的边界\",{\"1\":{\"503\":1,\"669\":1}}],[\"成员中的\",{\"1\":{\"448\":1}}],[\"成员的分数值\",{\"1\":{\"410\":1}}],[\"成\",{\"1\":{\"426\":3}}],[\"成功地实现了他对\",{\"1\":{\"721\":1}}],[\"成功点\",{\"1\":{\"584\":1}}],[\"成功似乎最近是如何实现的\",{\"1\":{\"584\":1}}],[\"成功和稳定都无法保证\",{\"1\":{\"578\":1}}],[\"成功了\",{\"1\":{\"450\":2}}],[\"成功时\",{\"1\":{\"448\":1}}],[\"成功\",{\"1\":{\"385\":1,\"580\":1}}],[\"成功消费后才会删除消息\",{\"1\":{\"385\":1}}],[\"成功消费之前不会丢失\",{\"1\":{\"385\":1}}],[\"成功执行\",{\"1\":{\"383\":1}}],[\"迭代器模式是一种提供顺序访问集合元素的方法的设计模式\",{\"1\":{\"828\":1}}],[\"迭代器模式可以隐藏集合的内部结构\",{\"1\":{\"826\":1}}],[\"迭代器模式可以提供多种遍历方式和操作方式\",{\"1\":{\"826\":1}}],[\"迭代器模式可以实现集合和遍历的分离\",{\"1\":{\"826\":1}}],[\"迭代器模式有以下优点\",{\"1\":{\"826\":1}}],[\"迭代器模式通常用于以下场景\",{\"1\":{\"825\":1}}],[\"迭代器模式\",{\"0\":{\"824\":1},\"1\":{\"824\":1}}],[\"迭代有序集合中的元素\",{\"1\":{\"410\":1}}],[\"迭代集合中的元素\",{\"1\":{\"409\":1}}],[\"迭代哈希表中的键值对\",{\"1\":{\"407\":1}}],[\"域\",{\"1\":{\"407\":1,\"1218\":1}}],[\"移动互联网兴起以来\",{\"1\":{\"747\":1}}],[\"移除二进制文件和\",{\"1\":{\"1026\":1}}],[\"移除观察者\",{\"1\":{\"844\":1}}],[\"移除有序集合中给定的分数区间的所有成员\",{\"1\":{\"410\":1}}],[\"移除有序集合中给定的排名区间的所有成员\",{\"1\":{\"410\":1}}],[\"移除有序集合中给定的字典区间的所有成员\",{\"1\":{\"410\":1}}],[\"移除有序集合中的一个或多个成员\",{\"1\":{\"410\":1}}],[\"移除集合中一个或多个成员\",{\"1\":{\"409\":1}}],[\"移除并返回集合中的一个随机元素\",{\"1\":{\"409\":1}}],[\"移除\",{\"1\":{\"405\":1}}],[\"移到\",{\"1\":{\"283\":2}}],[\"替\",{\"1\":{\"426\":1}}],[\"替代了双向链表和压缩列表\",{\"1\":{\"404\":1}}],[\"替换\",{\"0\":{\"479\":1}}],[\"替换空格\",{\"0\":{\"277\":1},\"1\":{\"274\":1}}],[\"替换元素\",{\"1\":{\"266\":1}}],[\"替换为\",{\"1\":{\"266\":1}}],[\"替换一个字符\",{\"1\":{\"266\":1}}],[\"追热点会错过最好的时机\",{\"1\":{\"717\":1}}],[\"追捕猎物\",{\"1\":{\"646\":1}}],[\"追逐幸福是业余水平的行为\",{\"1\":{\"587\":1}}],[\"追随我们的激情\",{\"1\":{\"577\":1}}],[\"追溯下去\",{\"1\":{\"575\":1}}],[\"追加到链表的末端之外\",{\"1\":{\"1146\":1}}],[\"追加到该\",{\"1\":{\"403\":1}}],[\"追加字符\",{\"1\":{\"477\":2}}],[\"追加字符串\",{\"1\":{\"477\":2}}],[\"追加\",{\"0\":{\"477\":1},\"1\":{\"422\":1}}],[\"追上了\",{\"1\":{\"357\":1}}],[\"占位符可以使用\",{\"1\":{\"1173\":1}}],[\"占位符用百分号\",{\"1\":{\"1173\":1}}],[\"占位符\",{\"1\":{\"1163\":1}}],[\"占\",{\"1\":{\"480\":2}}],[\"占⽤空间都发⽣变化\",{\"1\":{\"399\":1}}],[\"占用\",{\"1\":{\"385\":1}}],[\"占用空间越大\",{\"1\":{\"350\":1}}],[\"⽽当新插⼊的元素较⼤时\",{\"1\":{\"399\":1}}],[\"⽽查找其他元素时\",{\"1\":{\"399\":1}}],[\"⼗进制255\",{\"1\":{\"399\":1}}],[\"尾部\",{\"1\":{\"399\":1}}],[\"尾节点地址\",{\"1\":{\"377\":1}}],[\"节日应该是用来学习\",{\"1\":{\"695\":1}}],[\"节日应该做什么\",{\"0\":{\"695\":1}}],[\"节日究竟应该做什么呢\",{\"1\":{\"695\":1}}],[\"节日就是来放假用来休息的\",{\"1\":{\"695\":1}}],[\"节日到底应该做什么\",{\"1\":{\"695\":2}}],[\"节\",{\"1\":{\"428\":1,\"431\":2,\"433\":2,\"435\":3}}],[\"节省内存\",{\"1\":{\"398\":1}}],[\"节点上成功获取到了锁\",{\"1\":{\"437\":1}}],[\"节点上的呢\",{\"1\":{\"413\":1}}],[\"节点成功的获取到了锁\",{\"1\":{\"437\":1}}],[\"节点发起释放锁的操作\",{\"1\":{\"437\":1}}],[\"节点发生故障了\",{\"1\":{\"437\":1}}],[\"节点发送的所有消息都由一个消息头包裹\",{\"1\":{\"435\":1}}],[\"节点发送的消息主要有以下五种\",{\"1\":{\"434\":1}}],[\"节点执行加锁操作\",{\"1\":{\"437\":1}}],[\"节点依次请求申请加锁\",{\"1\":{\"437\":1}}],[\"节点d将向节点a返回一条pong消息\",{\"1\":{\"435\":1}}],[\"节点还会用clusterstate结构中的slots\",{\"1\":{\"430\":1}}],[\"节点只能使用0号数据库\",{\"1\":{\"430\":1}}],[\"节点数据库的实现\",{\"0\":{\"430\":1}}],[\"节点就会向客户端返回一个moved错误\",{\"1\":{\"429\":1}}],[\"节点就会检查自己在clusterstate\",{\"1\":{\"429\":1}}],[\"节点使用以下算法来计算给定键key属于哪个槽\",{\"1\":{\"429\":1}}],[\"节点会执行这\",{\"1\":{\"434\":1}}],[\"节点会通过发送消息告知集群中的其他节点\",{\"1\":{\"428\":1}}],[\"节点会继续使用所有在单机模式中使用的服务器组件\",{\"1\":{\"427\":1}}],[\"节点b会被集群中的所有节点认识\",{\"1\":{\"427\":1}}],[\"节点b会为节点a创建一个clusternode结构\",{\"1\":{\"427\":1}}],[\"节点b将接收到节点a返回的ping消息\",{\"1\":{\"427\":1}}],[\"节点b将接收到节点a发送的meet消息\",{\"1\":{\"427\":1}}],[\"节点b将向节点a返回一条pong消息\",{\"1\":{\"427\":1}}],[\"节点a向节点d发送ping消息\",{\"1\":{\"435\":1}}],[\"节点a会向集群广播一条关于节点b的fail消息\",{\"1\":{\"434\":1}}],[\"节点a会从自己的clusterstate\",{\"1\":{\"428\":1}}],[\"节点a会将节点b的信息通过gossip协议传播给集群中的其他节点\",{\"1\":{\"427\":1}}],[\"节点a会为节点b创建一个clusternode结构\",{\"1\":{\"427\":1}}],[\"节点a将向节点b返回一条ping消息\",{\"1\":{\"427\":1}}],[\"节点a将接收到节点b返回的pong消息\",{\"1\":{\"427\":1}}],[\"节点a将根据cluster\",{\"1\":{\"427\":1}}],[\"节点标识\",{\"1\":{\"427\":1}}],[\"节点当前的配置纪元\",{\"1\":{\"427\":2}}],[\"节点的加锁操作\",{\"1\":{\"437\":1}}],[\"节点的分布式锁\",{\"1\":{\"437\":1}}],[\"节点的端口号\",{\"1\":{\"427\":1}}],[\"节点的ip地址\",{\"1\":{\"427\":1}}],[\"节点的ip地址和端口号等\",{\"1\":{\"427\":1}}],[\"节点的名字\",{\"1\":{\"427\":2}}],[\"节点的level数组\",{\"1\":{\"397\":1}}],[\"节点距离起始地址由多少字节\",{\"1\":{\"399\":1}}],[\"节点值对比函数\",{\"1\":{\"394\":1}}],[\"节点值释放函数\",{\"1\":{\"394\":1}}],[\"节点值复制函数\",{\"1\":{\"394\":1}}],[\"节点\",{\"1\":{\"297\":1,\"427\":1}}],[\"跳进\",{\"1\":{\"1135\":1}}],[\"跳跃并不是为了解脱坚持\",{\"1\":{\"588\":1}}],[\"跳跃表支持平均o\",{\"1\":{\"397\":1}}],[\"跳到一个新的点是一种解放的感觉\",{\"1\":{\"587\":1}}],[\"跳表属性\",{\"1\":{\"397\":1}}],[\"跳表节点的属性\",{\"1\":{\"397\":1}}],[\"跳表是一个数据结构\",{\"1\":{\"397\":1}}],[\"跳表\",{\"0\":{\"397\":1}}],[\"跳出时\",{\"1\":{\"326\":1}}],[\"典\",{\"1\":{\"396\":1,\"426\":1,\"428\":1}}],[\"间\",{\"1\":{\"396\":1}}],[\"间隙锁之间是兼容的\",{\"1\":{\"372\":1}}],[\"间隙锁虽然存在\",{\"1\":{\"372\":1}}],[\"间隙锁\",{\"1\":{\"370\":1,\"372\":1,\"374\":1}}],[\"期间有无数的人做过无数的尝试都死了\",{\"1\":{\"798\":1}}],[\"期间发生了什么\",{\"0\":{\"341\":1},\"1\":{\"340\":1,\"349\":1}}],[\"期望的结果\",{\"1\":{\"967\":2}}],[\"期望的\",{\"1\":{\"722\":1}}],[\"期望有人质疑你的观点\",{\"1\":{\"627\":1}}],[\"期\",{\"1\":{\"396\":1}}],[\"式\",{\"1\":{\"396\":1}}],[\"渐\",{\"1\":{\"396\":1}}],[\"渐进式rehash\",{\"0\":{\"396\":1}}],[\"希尔排序可以看作是插入排序的加强版\",{\"1\":{\"947\":1}}],[\"希尔排序\",{\"0\":{\"947\":1},\"1\":{\"947\":1}}],[\"希望本期视频后\",{\"1\":{\"1089\":1}}],[\"希望我们一起学习工具来提升我们的代码能力\",{\"1\":{\"1020\":1}}],[\"希望我们所处的现实生活可以瞬间改变\",{\"1\":{\"810\":1}}],[\"希望它能够带来一些改变\",{\"1\":{\"731\":1}}],[\"希望这能清楚地说明你的雇主有多关心你\",{\"1\":{\"751\":1}}],[\"希望这篇文章对你有所启发\",{\"1\":{\"718\":1}}],[\"希望这个过程没有你们的贡献\",{\"1\":{\"551\":1}}],[\"希望和梦想时\",{\"1\":{\"574\":1}}],[\"希望做到的是有更多的地方使用pusd\",{\"1\":{\"188\":1}}],[\"希\",{\"1\":{\"396\":1}}],[\"哈\",{\"1\":{\"396\":1}}],[\"哈希\",{\"1\":{\"1139\":1}}],[\"哈希使用散列来识别和保持块的正确顺序\",{\"1\":{\"513\":1}}],[\"哈希是如何去识别区块和区块链呢\",{\"1\":{\"513\":1}}],[\"哈希槽\",{\"1\":{\"413\":1}}],[\"哈希对象\",{\"1\":{\"400\":1}}],[\"哈希节点\",{\"1\":{\"395\":1}}],[\"哈希表在rehashidx索引上的所有键值对rehash到ht\",{\"1\":{\"396\":1}}],[\"哈希表的扩展与收缩\",{\"1\":{\"395\":1}}],[\"哈希表的指定位置上\",{\"1\":{\"395\":1}}],[\"哈希表分配空间\",{\"1\":{\"395\":1}}],[\"哈希表进行rehash时使用\",{\"1\":{\"395\":1}}],[\"哈希表只会在对ht\",{\"1\":{\"395\":1}}],[\"哈希表\",{\"1\":{\"395\":2}}],[\"哈希表大小掩码\",{\"1\":{\"395\":1}}],[\"哈希表大小\",{\"1\":{\"395\":2}}],[\"哈希表数组\",{\"1\":{\"395\":1}}],[\"哈希表实现\",{\"1\":{\"395\":1}}],[\"过度了\",{\"1\":{\"772\":1}}],[\"过了\",{\"1\":{\"771\":1}}],[\"过一段时间再进行反思这些反应是否值当\",{\"1\":{\"734\":1}}],[\"过一段时间后也无法记清具体的操作\",{\"1\":{\"55\":1}}],[\"过渡到知识型社会对认知\",{\"1\":{\"649\":1}}],[\"过去四年我的的几个重大决策\",{\"0\":{\"759\":1}}],[\"过去一段时间以来\",{\"1\":{\"757\":1}}],[\"过去一年里的时间消费\",{\"1\":{\"500\":1}}],[\"过去两三年的不论长假还是小假期我基本都不会选择去某个地区玩一圈或者逛一圈\",{\"1\":{\"695\":1}}],[\"过去种庄稼的生产力已经被解放了\",{\"1\":{\"677\":1}}],[\"过去几个世纪里\",{\"1\":{\"621\":1}}],[\"过去几年我收获最大的一点就是承担责任\",{\"1\":{\"760\":1}}],[\"过去几年我觉得最重要的事情就是我学习了编程和投资\",{\"1\":{\"758\":1}}],[\"过去几年的收获\",{\"0\":{\"758\":1}}],[\"过去几年\",{\"1\":{\"521\":1}}],[\"过去的传统职业就像隧道一样发展\",{\"1\":{\"585\":1}}],[\"过去的决定或最近的环境\",{\"1\":{\"575\":1}}],[\"过去的一年对我和所有喜欢\",{\"1\":{\"569\":1}}],[\"过去十天的传奇经历\",{\"0\":{\"566\":1}}],[\"过去犯的错误太多\",{\"1\":{\"528\":1}}],[\"过\",{\"1\":{\"426\":1,\"435\":1}}],[\"过期检查\",{\"1\":{\"976\":1}}],[\"过期了\",{\"1\":{\"414\":1}}],[\"过期键对载入\",{\"1\":{\"414\":1}}],[\"过期键\",{\"1\":{\"414\":1}}],[\"过期的键\",{\"1\":{\"414\":1}}],[\"过期字典\",{\"1\":{\"414\":1}}],[\"过期删除与内存淘汰\",{\"0\":{\"414\":1}}],[\"过程永远充满失败\",{\"1\":{\"571\":1}}],[\"过程\",{\"1\":{\"396\":1}}],[\"负载\",{\"1\":{\"1047\":1}}],[\"负载因子=哈希表已保存节点数量\",{\"1\":{\"395\":1}}],[\"负责执行初始化操作和启动第一个\",{\"1\":{\"1133\":1}}],[\"负责在监听位置上接受网络请求并作出响应\",{\"1\":{\"1055\":1}}],[\"负责设置监听地址\",{\"1\":{\"1055\":1}}],[\"负责任地判断思想\",{\"1\":{\"627\":1}}],[\"负责\",{\"1\":{\"592\":1}}],[\"负责只有一种就是100\",{\"1\":{\"592\":1}}],[\"负责回答诸如\",{\"1\":{\"570\":1}}],[\"负\",{\"1\":{\"428\":1}}],[\"负溢价主要原因是市场上pusd的数量太多了\",{\"1\":{\"175\":1}}],[\"负溢价\",{\"1\":{\"175\":1}}],[\"量\",{\"1\":{\"395\":1,\"428\":1}}],[\"操\",{\"1\":{\"395\":1}}],[\"操作对象的字段和方法\",{\"1\":{\"1186\":1,\"1194\":1}}],[\"操作views和product\",{\"1\":{\"975\":1}}],[\"操作系统导论\",{\"1\":{\"670\":1}}],[\"操作系统概念\",{\"1\":{\"504\":1}}],[\"操作系统通常会将写入数据暂时保存在一个内存缓冲区里面\",{\"1\":{\"422\":1}}],[\"操作字符串\",{\"0\":{\"476\":1}}],[\"操作符号\",{\"1\":{\"451\":1}}],[\"操作缓存和写消息队列\",{\"1\":{\"385\":1}}],[\"操作失败的情况\",{\"1\":{\"384\":1}}],[\"操作数据库和缓存的时间\",{\"1\":{\"383\":1}}],[\"操作时及时让出计算资源\",{\"1\":{\"1134\":1}}],[\"操作时\",{\"1\":{\"367\":2}}],[\"操作\",{\"0\":{\"484\":1},\"1\":{\"287\":1,\"353\":1,\"357\":1,\"358\":1,\"360\":3,\"367\":1,\"724\":1,\"1153\":2,\"1197\":1}}],[\"操作返回\",{\"1\":{\"280\":1}}],[\"操作三\",{\"1\":{\"266\":1}}],[\"操作的效率\",{\"1\":{\"1153\":1}}],[\"操作的最少次数为dp\",{\"1\":{\"265\":1}}],[\"操作的命令都写入一个脚本\",{\"1\":{\"56\":1}}],[\"操作二\",{\"1\":{\"254\":2,\"266\":1}}],[\"操作一\",{\"1\":{\"254\":2,\"266\":1}}],[\"执\",{\"1\":{\"395\":1,\"424\":1,\"425\":1}}],[\"执行传入的无入参函数\",{\"1\":{\"1145\":1}}],[\"执行传入的函数\",{\"1\":{\"1145\":1}}],[\"执行从注释就能看出来\",{\"1\":{\"1135\":1}}],[\"执行token认证的逻辑\",{\"1\":{\"1099\":1}}],[\"执行c\",{\"1\":{\"1055\":1}}],[\"执行相关逻辑\",{\"1\":{\"1037\":1}}],[\"执行的操作是通过\",{\"1\":{\"993\":1}}],[\"执行前后执行额外的操作\",{\"0\":{\"993\":1}}],[\"执行执行测试\",{\"1\":{\"976\":1}}],[\"执行上面写好的单元测试\",{\"1\":{\"973\":1}}],[\"执行单元测试\",{\"1\":{\"972\":1,\"975\":1,\"978\":2}}],[\"执行同步操作\",{\"1\":{\"425\":1}}],[\"执行复制的双方\",{\"1\":{\"425\":1}}],[\"执行这个事务所得的结果已经被保存到永久性存储介质\",{\"1\":{\"424\":1}}],[\"执行过程中发生的错误都是一些不能在入队时被服务器发现的错误\",{\"1\":{\"424\":1}}],[\"执行错误\",{\"1\":{\"424\":1}}],[\"执行队列中保存的所有命令\",{\"1\":{\"424\":1}}],[\"执行事务所得的结果也不会丢失\",{\"1\":{\"424\":1}}],[\"执行事务\",{\"1\":{\"424\":1}}],[\"执行写操作命令和记录日志是两个过程\",{\"1\":{\"413\":1}}],[\"执行时序发生\",{\"1\":{\"383\":1}}],[\"执行了两次\",{\"1\":{\"362\":1}}],[\"执行了增删查改操作的\",{\"1\":{\"362\":1}}],[\"执行了\",{\"1\":{\"362\":2,\"413\":2}}],[\"执行阶段\",{\"1\":{\"349\":1}}],[\"执行器把\",{\"1\":{\"358\":1}}],[\"执行器负责具体执行\",{\"1\":{\"355\":1}}],[\"执行器\",{\"0\":{\"349\":1}}],[\"执行\",{\"0\":{\"346\":1},\"1\":{\"349\":2,\"362\":1,\"414\":1,\"967\":1,\"1135\":4,\"1137\":1}}],[\"执行图\",{\"1\":{\"341\":1}}],[\"执行一条sql查询语句\",{\"0\":{\"341\":1}}],[\"执行一条\",{\"1\":{\"340\":1,\"349\":1,\"356\":1}}],[\"执行清算获得折扣资产\",{\"1\":{\"163\":1}}],[\"执行系统调用\",{\"1\":{\"121\":1}}],[\"执行系统调用等\",{\"1\":{\"121\":1}}],[\"执行指令\",{\"1\":{\"121\":1}}],[\"执行顺序\",{\"1\":{\"116\":1}}],[\"执行完毕后容器被终止\",{\"1\":{\"64\":1}}],[\"执行用户指定的应用程序\",{\"1\":{\"64\":1}}],[\"执行结束后\",{\"1\":{\"58\":1}}],[\"执行命令\",{\"0\":{\"58\":1}}],[\"项目开始时作为一个有新泛型实现的实验\",{\"1\":{\"1017\":1}}],[\"项目中\",{\"1\":{\"191\":1}}],[\"项\",{\"1\":{\"395\":2,\"428\":2}}],[\"性欲旺盛的青少年自己为了强烈的抱负而将其推到楼下\",{\"1\":{\"576\":1}}],[\"性\",{\"1\":{\"395\":1,\"424\":2,\"426\":1,\"435\":1}}],[\"性能和可靠性成本是巨大的\",{\"1\":{\"723\":1}}],[\"性能和一致性就像天平的两端\",{\"1\":{\"387\":1}}],[\"性能高效\",{\"1\":{\"436\":1}}],[\"性能产生影响\",{\"1\":{\"413\":1}}],[\"性能表现的瓶颈所在\",{\"1\":{\"412\":1}}],[\"性能就会急剧下降\",{\"1\":{\"377\":1}}],[\"性能效率就越低\",{\"1\":{\"361\":1}}],[\"性能不佳\",{\"1\":{\"360\":1}}],[\"性能\",{\"1\":{\"357\":1,\"387\":1}}],[\"性能差别巨大\",{\"1\":{\"357\":1}}],[\"键\",{\"1\":{\"395\":2,\"424\":1,\"436\":1}}],[\"键值对键是保存msg的sds\",{\"1\":{\"393\":1,\"402\":1}}],[\"带有箭头或问号的那个\",{\"1\":{\"585\":1}}],[\"带有过期的部分有新增的expiretime\",{\"1\":{\"420\":1}}],[\"带上\",{\"1\":{\"437\":1}}],[\"带上过期时间存储到一个过期字典\",{\"1\":{\"414\":1}}],[\"带来了并发读写的一系列问题\",{\"1\":{\"412\":1}}],[\"带链表长度计数器\",{\"1\":{\"394\":1}}],[\"带表头指针和表尾指针\",{\"1\":{\"394\":1}}],[\"带着这个问题\",{\"1\":{\"341\":1}}],[\"压测\",{\"1\":{\"899\":1}}],[\"压力很大\",{\"1\":{\"579\":1}}],[\"压缩列表数据结构已经废弃了\",{\"1\":{\"406\":1,\"410\":1}}],[\"压缩列表占⽤的内存空间就需要重新分配\",{\"1\":{\"399\":1}}],[\"压缩列表新增某个元素或修改某个元素时\",{\"1\":{\"399\":1}}],[\"压缩列表节点包含三部分内容\",{\"1\":{\"399\":1}}],[\"压缩列表在表头有三个字段\",{\"1\":{\"399\":1}}],[\"压缩列表的组成\",{\"1\":{\"399\":1}}],[\"压缩列表是redis为了节约内存而开发的\",{\"1\":{\"399\":1}}],[\"压缩列表\",{\"0\":{\"399\":1}}],[\"压缩文件这样的二进制数据\",{\"1\":{\"393\":1,\"402\":1}}],[\"压根没办法通过别的方法去试出来\",{\"1\":{\"206\":1}}],[\"需求章鱼的每个触须上都生活着一个完全不同的需求世界\",{\"1\":{\"573\":1}}],[\"需求章鱼\",{\"1\":{\"573\":3}}],[\"需配合\",{\"1\":{\"388\":1}}],[\"需要实现\",{\"1\":{\"1161\":1}}],[\"需要等待调度器的调度\",{\"1\":{\"1146\":1}}],[\"需要保证计数器非负\",{\"1\":{\"1144\":1}}],[\"需要保证账户健康因子处于健康状态\",{\"1\":{\"150\":1}}],[\"需要调用\",{\"1\":{\"1143\":1}}],[\"需要返回\",{\"1\":{\"1142\":1}}],[\"需要配合status使用\",{\"1\":{\"1074\":1}}],[\"需要引入codes包\",{\"1\":{\"1074\":1}}],[\"需要使用时\",{\"1\":{\"1074\":1}}],[\"需要理解其背后的现实世界模型\",{\"1\":{\"1011\":1}}],[\"需要一个\",{\"1\":{\"970\":1}}],[\"需要一个二元订单铺模型具体可以参考以下文档\",{\"1\":{\"169\":1}}],[\"需要两个for循环\",{\"1\":{\"944\":1}}],[\"需要额外付出的代价\",{\"1\":{\"710\":1}}],[\"需要额外小心\",{\"1\":{\"46\":1}}],[\"需要接受现实主义的元素\",{\"1\":{\"674\":1}}],[\"需要不断去整理之前的内容\",{\"1\":{\"660\":2}}],[\"需要学会有效地管理时间\",{\"1\":{\"646\":1,\"649\":1}}],[\"需要抉择的时候也是每个人价值观发挥作用的地方\",{\"1\":{\"631\":1}}],[\"需要存入一些用户资料例如头像\",{\"1\":{\"592\":1}}],[\"需要荒谬的奋斗和毅力等等\",{\"1\":{\"580\":1}}],[\"需要极高的乐观主义态度\",{\"1\":{\"580\":1}}],[\"需要思考在职业生涯中各方面期盼什么\",{\"1\":{\"573\":1}}],[\"需要考虑的事情\",{\"1\":{\"551\":1}}],[\"需要考虑缓存和数据库一致性问题\",{\"1\":{\"388\":1}}],[\"需要每个个体去去思考未来\",{\"1\":{\"534\":1}}],[\"需要你自己去官网中查看\",{\"1\":{\"516\":1}}],[\"需要首先熟悉不那么舒服的感觉\",{\"1\":{\"494\":1}}],[\"需要用mut关键字修饰\",{\"1\":{\"479\":1}}],[\"需要格外的小心\",{\"1\":{\"475\":1}}],[\"需要格外小心这一点\",{\"1\":{\"468\":1}}],[\"需要主服务器再次发生rdb文件\",{\"1\":{\"425\":1}}],[\"需要手动进行恢复\",{\"1\":{\"413\":1}}],[\"需要全量把日志都执行一遍\",{\"1\":{\"413\":1}}],[\"需要更新\",{\"1\":{\"383\":1}}],[\"需要先暂时放弃原先使用落后工具依然可以达到目的的方式\",{\"1\":{\"494\":1}}],[\"需要先将脏页同步到磁盘\",{\"1\":{\"377\":1}}],[\"需要先对表加上\",{\"1\":{\"368\":1}}],[\"需要先在表级别加上一个\",{\"1\":{\"368\":2}}],[\"需要判断插入位置是否已被其他事务加了间隙锁\",{\"1\":{\"374\":1}}],[\"需要判断\",{\"1\":{\"362\":1}}],[\"需要将一部分数据页淘汰掉\",{\"1\":{\"377\":1}}],[\"需要将\",{\"1\":{\"360\":1}}],[\"需要把被更新的列的旧值记下来\",{\"1\":{\"357\":1}}],[\"需要的东西\",{\"1\":{\"494\":1}}],[\"需要的\",{\"1\":{\"357\":1}}],[\"需要记录对应的\",{\"1\":{\"357\":1}}],[\"需要记录对应\",{\"1\":{\"357\":1}}],[\"需要占用物理空间\",{\"1\":{\"350\":1}}],[\"需要初始化dp\",{\"1\":{\"252\":1}}],[\"需要转化成完全背包问题\",{\"1\":{\"241\":1}}],[\"需要满足的条件是上一层可以重复利用\",{\"1\":{\"236\":1}}],[\"需要注意的是\",{\"1\":{\"366\":1}}],[\"需要注意\",{\"1\":{\"254\":1}}],[\"需要注意上一个是不需要startindex控制递归的\",{\"1\":{\"211\":1}}],[\"需要注意维持健康因子\",{\"1\":{\"159\":1}}],[\"需要\",{\"1\":{\"208\":1}}],[\"需要支付手续费\",{\"1\":{\"163\":1}}],[\"需要确保有足够的流动性\",{\"1\":{\"160\":1}}],[\"需要签名的只读账户地址数量\",{\"1\":{\"117\":1}}],[\"需要让\",{\"1\":{\"66\":1}}],[\"需要加\",{\"1\":{\"53\":1,\"970\":1}}],[\"需要5\",{\"1\":{\"28\":1}}],[\"失效时间\",{\"1\":{\"387\":1}}],[\"失败了\",{\"1\":{\"450\":1}}],[\"失败后立即重试的问题在于\",{\"1\":{\"385\":1}}],[\"失败\",{\"1\":{\"384\":1,\"455\":1}}],[\"极大地浪费服务器资源\",{\"1\":{\"1073\":1}}],[\"极大的简化了容器的创建和维护\",{\"1\":{\"45\":1}}],[\"极简主义创业的核心是以持续盈利为目的\",{\"1\":{\"663\":1}}],[\"极简主义创业就是这样\",{\"1\":{\"663\":1}}],[\"极简主义创业者首要考虑目标就是盈利\",{\"1\":{\"663\":1}}],[\"极简主义创业者不会这样做极小概率可以成功的事情\",{\"1\":{\"663\":1}}],[\"极简主义创业者不会是这样\",{\"1\":{\"663\":1}}],[\"极简主义创业者\",{\"0\":{\"663\":1}}],[\"极简界面\",{\"1\":{\"521\":1}}],[\"极致的交易速度\",{\"1\":{\"592\":1}}],[\"极致的隐私\",{\"1\":{\"592\":1}}],[\"极客时间\",{\"1\":{\"553\":1}}],[\"极端情况下\",{\"1\":{\"386\":1}}],[\"延时消息\",{\"1\":{\"386\":1}}],[\"延迟消息\",{\"1\":{\"388\":1}}],[\"延迟双删\",{\"1\":{\"388\":2}}],[\"延迟时间要大于线程\",{\"1\":{\"386\":1}}],[\"延迟时间要大于\",{\"1\":{\"386\":1}}],[\"延迟时间到底设置要多久呢\",{\"1\":{\"386\":1}}],[\"延迟删除缓存\",{\"1\":{\"388\":1}}],[\"延迟删除\",{\"1\":{\"386\":1}}],[\"延迟删\",{\"1\":{\"386\":1}}],[\"延迟\",{\"1\":{\"360\":2}}],[\"投入股票\",{\"1\":{\"528\":1}}],[\"投递\",{\"1\":{\"385\":1}}],[\"投资人一般不会对生活方式型创业感兴趣\",{\"1\":{\"674\":1}}],[\"投资获得的资产最终目的不是未来的高消费\",{\"1\":{\"598\":1}}],[\"投资的决策是自己做出的\",{\"1\":{\"592\":1}}],[\"投资最重要的事\",{\"1\":{\"503\":1,\"669\":1}}],[\"投资者投资自己的真金白银\",{\"1\":{\"169\":1}}],[\"投资距今都有好几年了\",{\"1\":{\"169\":1}}],[\"订阅变更日志\",{\"1\":{\"385\":3,\"388\":1}}],[\"订阅数据库变更日志\",{\"1\":{\"385\":1}}],[\"订单关闭\",{\"1\":{\"1010\":1}}],[\"订单返回\",{\"1\":{\"1010\":1}}],[\"订单取消\",{\"1\":{\"1010\":1}}],[\"订单生命周期结束\",{\"1\":{\"1009\":1}}],[\"订单信息提供者\",{\"1\":{\"980\":1}}],[\"订单接受者\",{\"1\":{\"169\":1}}],[\"订单\",{\"1\":{\"169\":2}}],[\"订单创建者\",{\"1\":{\"169\":1}}],[\"至最后一个函数调用返回\",{\"1\":{\"1056\":1}}],[\"至目标节点\",{\"1\":{\"431\":1}}],[\"至正确的节点\",{\"1\":{\"429\":1}}],[\"至于何时发送指令给状态机\",{\"1\":{\"1009\":1}}],[\"至于里面的内容正确与否只能十年后再回头看了\",{\"1\":{\"599\":1}}],[\"至于每类事情具体所作了什么\",{\"1\":{\"500\":1}}],[\"至于numslots属性则记\",{\"1\":{\"428\":1}}],[\"至于主服务器返回的从服务器信息\",{\"1\":{\"426\":1}}],[\"至于写队列失败和消息队列的维护成本问题\",{\"1\":{\"385\":1}}],[\"至此已经解决了最关键的问题\",{\"1\":{\"551\":1}}],[\"至此\",{\"1\":{\"385\":1}}],[\"至少有一个位置参数\",{\"1\":{\"991\":1}}],[\"至少有一个键已经被修改过了\",{\"1\":{\"424\":1}}],[\"至少要有\",{\"1\":{\"991\":1}}],[\"至少目前而言\",{\"1\":{\"692\":1}}],[\"至少我会有抵触情绪\",{\"1\":{\"692\":1}}],[\"至少我赚到了属于时间的钱\",{\"1\":{\"669\":1}}],[\"至少从时间作为生产资料的维度上\",{\"1\":{\"677\":1}}],[\"至少在一段时间内\",{\"1\":{\"587\":1}}],[\"至少对于较不传统的职业来说\",{\"1\":{\"581\":1}}],[\"至少对于现在是\",{\"1\":{\"500\":1}}],[\"至少对我来说是这样\",{\"1\":{\"521\":1}}],[\"至少还有一个从库有最新的数据\",{\"1\":{\"359\":1}}],[\"至少一位数字\",{\"1\":{\"292\":3}}],[\"丢失的数据会更多\",{\"1\":{\"413\":1}}],[\"丢失\",{\"1\":{\"385\":1}}],[\"补偿\",{\"1\":{\"385\":1}}],[\"尽量多尝试\",{\"1\":{\"731\":1}}],[\"尽快找到可以让自己充满激情的事业\",{\"0\":{\"634\":1}}],[\"尽力领会复杂性\",{\"1\":{\"627\":1}}],[\"尽力评估当前世界职业形势\",{\"1\":{\"584\":1}}],[\"尽可能让自己在实践中使用到\",{\"1\":{\"1186\":1}}],[\"尽可能去获得初始用户\",{\"1\":{\"674\":1}}],[\"尽可能去做mvp\",{\"1\":{\"674\":1}}],[\"尽可能满足mieles\",{\"1\":{\"674\":1}}],[\"尽可能选择和自己的优势互补的合伙人\",{\"1\":{\"674\":1}}],[\"尽可能降低不一致发生的概率\",{\"1\":{\"388\":1}}],[\"尽可能地去做\",{\"1\":{\"385\":1}}],[\"尽管他有\",{\"1\":{\"771\":1}}],[\"尽管支票转账需要\",{\"1\":{\"771\":1}}],[\"尽管将\",{\"1\":{\"724\":1}}],[\"尽管现在看起来仍然有很多人在这个领域\",{\"1\":{\"647\":1,\"686\":1}}],[\"尽管现在的游戏棋盘已经发生了很大的变化\",{\"1\":{\"579\":1}}],[\"尽管你明智的自己会知道这正是应该的\",{\"1\":{\"587\":1}}],[\"尽管去那里可能不那么愉快\",{\"1\":{\"574\":1}}],[\"尽管政府\",{\"1\":{\"534\":1}}],[\"尽管\",{\"1\":{\"258\":1,\"374\":1}}],[\"答案不断变得混沌不清\",{\"1\":{\"572\":1}}],[\"答案很简单\",{\"1\":{\"472\":1}}],[\"答案是不可以\",{\"1\":{\"1084\":1}}],[\"答案是价值观\",{\"1\":{\"666\":1}}],[\"答案是知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"答案是否定的\",{\"1\":{\"385\":1}}],[\"答案是\",{\"1\":{\"385\":2,\"513\":1}}],[\"答案需要取模\",{\"1\":{\"286\":1}}],[\"仔细去考虑当下所有的选择\",{\"1\":{\"680\":1}}],[\"仔细评估了的思想\",{\"1\":{\"627\":1}}],[\"仔细分析其中的情况\",{\"1\":{\"573\":1}}],[\"仔细想一下\",{\"1\":{\"384\":1}}],[\"仔细观察\",{\"1\":{\"51\":1}}],[\"新分配的数组空间\",{\"1\":{\"948\":1}}],[\"新歌很烂\",{\"1\":{\"771\":1}}],[\"新的\",{\"1\":{\"1142\":1}}],[\"新的工资净额只有每年\",{\"1\":{\"751\":1}}],[\"新的主节点是通过选举产生的\",{\"1\":{\"433\":1}}],[\"新的主节点开始接收和自己负责处理的槽有关的命令请求\",{\"1\":{\"433\":1}}],[\"新的主节点向集群广播一条pong消息\",{\"1\":{\"433\":1}}],[\"新的主节点会撤销所有对已下线主节点的槽指派\",{\"1\":{\"433\":1}}],[\"新的主服务器是怎样挑选出来的\",{\"1\":{\"426\":1}}],[\"新产品\",{\"1\":{\"740\":1,\"771\":1}}],[\"新知识不会从真空中完全形成\",{\"1\":{\"649\":1}}],[\"新型交易市场法律虽然已经日趋成熟\",{\"1\":{\"592\":1}}],[\"新\",{\"1\":{\"426\":2}}],[\"新版redis复制功能的实现\",{\"1\":{\"425\":1}}],[\"新旧两个aof文件所保存的数据库状态相同\",{\"1\":{\"422\":1}}],[\"新增的方式\",{\"1\":{\"413\":1}}],[\"新增了一个新的后台线程\",{\"1\":{\"411\":1}}],[\"新元素会被放置在底层数组的最末尾\",{\"1\":{\"398\":1}}],[\"新元素会被放置在底层数组的最开头\",{\"1\":{\"398\":1}}],[\"新添加到字典的键值对一律会被保存到ht\",{\"1\":{\"396\":1}}],[\"新值\",{\"1\":{\"384\":2,\"386\":2}}],[\"新建一个\",{\"1\":{\"451\":1}}],[\"新建并启动\",{\"0\":{\"64\":1}}],[\"新建立一层\",{\"1\":{\"58\":1}}],[\"浪费缓存资源\",{\"1\":{\"383\":1}}],[\"拿出公司几乎所有钱来弥补大家的损失\",{\"1\":{\"591\":1}}],[\"拿出任务就去执行对应的方法即可\",{\"1\":{\"411\":1}}],[\"拿起手机\",{\"1\":{\"552\":1}}],[\"拿到属于自己的权力\",{\"1\":{\"534\":1}}],[\"拿到了驾照\",{\"1\":{\"505\":1}}],[\"拿到具体操作的数据\",{\"1\":{\"385\":1}}],[\"拿到锁的线程才允许更新数据库和缓存\",{\"1\":{\"383\":1}}],[\"拿\",{\"1\":{\"385\":1}}],[\"拿不到锁的线程\",{\"1\":{\"383\":1}}],[\"热点总是被制造的\",{\"1\":{\"734\":1}}],[\"热点总是稍纵即逝\",{\"1\":{\"717\":1}}],[\"热点总会出现\",{\"1\":{\"734\":1}}],[\"热点就附近的设备安全地共享文件和消息\",{\"1\":{\"494\":1}}],[\"热数据\",{\"1\":{\"382\":1}}],[\"热爱阅读思考\",{\"1\":{\"3\":1}}],[\"认证时接口通过http请求头加入token请求服务器端\",{\"1\":{\"1046\":1}}],[\"认证成功后\",{\"1\":{\"1045\":1,\"1046\":1}}],[\"认证\",{\"0\":{\"1045\":1,\"1046\":1,\"1047\":1}}],[\"认知必须要经过长期不断主动实践才可能被内化成为我们身体的一部分\",{\"1\":{\"810\":1}}],[\"认知\",{\"1\":{\"810\":1}}],[\"认知时代的开始\",{\"1\":{\"669\":1}}],[\"认知困难还有另一个原因\",{\"1\":{\"655\":1}}],[\"认知困难的原因之一在于未解决的老问题继续抵制解决\",{\"1\":{\"655\":1}}],[\"认知也通常意味着其他事情\",{\"1\":{\"653\":1}}],[\"认知意味着什么\",{\"0\":{\"653\":1}}],[\"认知不同就导致了金钱的生命力在谁的手中的不同\",{\"1\":{\"614\":1}}],[\"认为\",{\"1\":{\"773\":1,\"982\":1}}],[\"认为这是上帝赐予的\",{\"1\":{\"721\":1}}],[\"认为太阳是我们太阳系的中心时\",{\"1\":{\"643\":1}}],[\"认为空闲时\",{\"1\":{\"377\":1}}],[\"认识到了proto里面的某些字段的作用比如package\",{\"1\":{\"1089\":1}}],[\"认识到极端的观点\",{\"1\":{\"627\":1}}],[\"认识自己的局限性\",{\"1\":{\"627\":1}}],[\"认真读书1本\",{\"1\":{\"4\":1}}],[\"策略模式适用于对象有多种行为\",{\"1\":{\"856\":1}}],[\"策略模式是一种将算法封装在不同的策略类中\",{\"1\":{\"856\":1}}],[\"策略模式是一种行为型设计模式\",{\"1\":{\"853\":1}}],[\"策略模式可以避免使用大量的条件分支语句\",{\"1\":{\"854\":1}}],[\"策略模式可以实现算法的动态切换\",{\"1\":{\"854\":1}}],[\"策略模式可以实现算法和对象的解耦\",{\"1\":{\"854\":1}}],[\"策略模式可以根据不同的情况\",{\"1\":{\"853\":1}}],[\"策略模式的优点有以下几种\",{\"1\":{\"854\":1}}],[\"策略模式的用法有以下几种\",{\"1\":{\"854\":1}}],[\"策略模式\",{\"0\":{\"853\":1}}],[\"策略迫使其用户为黑客行为付费\",{\"1\":{\"706\":1}}],[\"策略\",{\"1\":{\"377\":1}}],[\"宕机了\",{\"1\":{\"377\":1}}],[\"污染的问题\",{\"1\":{\"377\":1}}],[\"污染而导致缓存命中率下降的问题\",{\"1\":{\"377\":1}}],[\"污染并不只是查询语句查询出了大量的数据才出现的问题\",{\"1\":{\"377\":1}}],[\"污染\",{\"1\":{\"377\":4}}],[\"脏页需要被刷入磁盘\",{\"1\":{\"377\":1}}],[\"脏页什么时候会被刷入磁盘\",{\"1\":{\"377\":1}}],[\"脏页同时存在于\",{\"1\":{\"377\":1}}],[\"脏页\",{\"1\":{\"377\":1}}],[\"脏读\",{\"1\":{\"361\":2}}],[\"干净页\",{\"1\":{\"377\":1}}],[\"控制\",{\"1\":{\"860\":1}}],[\"控制自己的大脑的输入信息源会变得比过去十年重要得多\",{\"1\":{\"605\":1}}],[\"控制写回硬盘的时机\",{\"1\":{\"413\":1}}],[\"控制的\",{\"1\":{\"377\":1}}],[\"控制块也是有占有空间的\",{\"1\":{\"376\":1}}],[\"控制块信息包括\",{\"1\":{\"376\":1}}],[\"控制组可以提供对容器的内存\",{\"1\":{\"77\":1}}],[\"控制组技术最早是由\",{\"1\":{\"77\":1}}],[\"控制组是\",{\"1\":{\"77\":1}}],[\"控制组\",{\"0\":{\"77\":1},\"1\":{\"75\":1}}],[\"属于一看很高大上的概念\",{\"1\":{\"1008\":1}}],[\"属于被迁移槽的一部分键值对保存在源节点里面\",{\"1\":{\"432\":1}}],[\"属于行级别锁\",{\"1\":{\"374\":1}}],[\"属\",{\"1\":{\"395\":1,\"426\":1,\"435\":1}}],[\"属性\",{\"1\":{\"1137\":1}}],[\"属性的值而不是空字符来判断字符串是否结束\",{\"1\":{\"393\":1,\"402\":1}}],[\"属性实现的\",{\"1\":{\"369\":1}}],[\"又可以设置给该\",{\"1\":{\"991\":1}}],[\"又该怎么编写单元测试呢\",{\"1\":{\"973\":1}}],[\"又受到高度追捧\",{\"1\":{\"723\":1}}],[\"又名\",{\"1\":{\"704\":1}}],[\"又比如说农田\",{\"1\":{\"646\":1,\"677\":1}}],[\"又\",{\"1\":{\"631\":1}}],[\"又由于我只是个学生\",{\"1\":{\"554\":1}}],[\"又不是不能用\",{\"1\":{\"551\":2,\"553\":1}}],[\"又新蹦出来一堆新发明的名词\",{\"1\":{\"531\":1}}],[\"又因为信息革命让我们每个人的链接比以往放大了无数倍\",{\"1\":{\"528\":1}}],[\"又因为redis保存的是二进制数据\",{\"1\":{\"418\":1}}],[\"又得重新学一遍\",{\"1\":{\"525\":1}}],[\"又会耗费太多精力\",{\"1\":{\"500\":1}}],[\"又或许仅仅是使用鸵鸟策略对其相视不见\",{\"1\":{\"500\":1}}],[\"又或许自己在过去一年又有哪些未完成的学习和工作任务\",{\"1\":{\"500\":1}}],[\"又或者是某个类下方法的替换\",{\"1\":{\"956\":1}}],[\"又或者是与我们每个人当下都能感受到的气候危机\",{\"1\":{\"610\":1}}],[\"又或者你遇到的问题\",{\"1\":{\"605\":1}}],[\"又或者对下线主节点进行故障转移\",{\"1\":{\"435\":1}}],[\"又或者取得负责处理槽i的节点\",{\"1\":{\"428\":1}}],[\"又或者某个模式目前有多少订阅者\",{\"1\":{\"423\":1}}],[\"又或者列表中包含的元素都是比较长的字符串时\",{\"1\":{\"394\":1}}],[\"又想吐槽的点也可以上去和开发者battle\",{\"1\":{\"494\":1}}],[\"又需要一个不可变借用\",{\"1\":{\"468\":1}}],[\"又意外的持有了锁\",{\"1\":{\"436\":1}}],[\"又通过订阅连接从服务器的\",{\"1\":{\"426\":1}}],[\"又仍然保留在数据库中\",{\"1\":{\"414\":1}}],[\"又存在先后问题\",{\"1\":{\"382\":1}}],[\"又能阻止其他事务将新纪录插入到被保护记录前面的间隙中\",{\"1\":{\"373\":1}}],[\"又一核心概念\",{\"1\":{\"62\":1}}],[\"型关系\",{\"1\":{\"373\":1}}],[\"型的\",{\"1\":{\"373\":4}}],[\"型的记录锁是冲突的\",{\"1\":{\"373\":1}}],[\"型的记录锁与\",{\"1\":{\"373\":1}}],[\"型的记录锁\",{\"1\":{\"371\":1}}],[\"型间隙锁\",{\"1\":{\"372\":1}}],[\"型间隙锁和\",{\"1\":{\"372\":1}}],[\"型与\",{\"1\":{\"371\":4,\"373\":1}}],[\"型记录锁\",{\"1\":{\"371\":4}}],[\"型记录锁后\",{\"1\":{\"371\":2}}],[\"满足则返回\",{\"1\":{\"1036\":1}}],[\"满足则发生交换\",{\"1\":{\"293\":1}}],[\"满足条件\",{\"1\":{\"1035\":1}}],[\"满足人们在信息社会中的需求\",{\"1\":{\"677\":1}}],[\"满足写写互斥\",{\"1\":{\"370\":1}}],[\"满足读读共享\",{\"1\":{\"370\":1}}],[\"修\",{\"1\":{\"424\":1}}],[\"修饰的字段加上轻量级锁\",{\"1\":{\"369\":1}}],[\"修饰的字段的值是连续递增的\",{\"1\":{\"369\":1}}],[\"修饰的字段赋值递增的值\",{\"1\":{\"369\":1}}],[\"修改变量值以及结构体的反射等操作\",{\"1\":{\"1194\":1}}],[\"修改协程状态\",{\"1\":{\"1135\":2}}],[\"修改后的service\",{\"1\":{\"1079\":1}}],[\"修改proto文件加入\",{\"1\":{\"1072\":1}}],[\"修改从服务器的复制目标\",{\"1\":{\"426\":1}}],[\"修改数\",{\"1\":{\"417\":1}}],[\"修改数据库\",{\"1\":{\"385\":1}}],[\"修改\",{\"1\":{\"55\":1,\"993\":1,\"1009\":1,\"1135\":2}}],[\"释放写锁\",{\"1\":{\"1143\":1}}],[\"释放读锁\",{\"1\":{\"1143\":1}}],[\"释放锁的操作和在单节点上释放锁的操作一样\",{\"1\":{\"437\":1}}],[\"释放锁时\",{\"1\":{\"436\":1}}],[\"释放内存\",{\"1\":{\"411\":1}}],[\"释放间隙锁的时刻\",{\"1\":{\"374\":1}}],[\"释放\",{\"1\":{\"367\":2}}],[\"申请内存时会给他们分配一个mspan这样的单元会不会产生浪费\",{\"1\":{\"1149\":1}}],[\"申请审批和清理数据\",{\"1\":{\"1010\":1}}],[\"申请自增主键后就释放锁\",{\"1\":{\"369\":1}}],[\"申请\",{\"1\":{\"367\":2}}],[\"元数据的定义如下\",{\"1\":{\"1093\":1}}],[\"元数据对于grpc本身是不可见的\",{\"1\":{\"1093\":1}}],[\"元数据是指在处理rpc请求中\",{\"1\":{\"1093\":1}}],[\"元数据\",{\"1\":{\"1093\":1}}],[\"元数据处理\",{\"0\":{\"1093\":1},\"1\":{\"1101\":1}}],[\"元数据锁\",{\"0\":{\"367\":1},\"1\":{\"365\":1,\"367\":1}}],[\"元旦的前两天假期都在出租屋内收拾回去的行李\",{\"1\":{\"779\":1}}],[\"元旦游南京东路\",{\"0\":{\"779\":1}}],[\"元组中元素的顺序也是固定的\",{\"1\":{\"490\":1}}],[\"元组的长度是固定的\",{\"1\":{\"490\":1}}],[\"元组\",{\"0\":{\"490\":1},\"1\":{\"490\":1}}],[\"元素名称\",{\"1\":{\"867\":2}}],[\"元素从\",{\"1\":{\"409\":1}}],[\"元素是否是集合\",{\"1\":{\"409\":1}}],[\"元素权重值\",{\"1\":{\"397\":1}}],[\"元素的数值\",{\"1\":{\"237\":1}}],[\"条publish消息的节点都会执行相同的publish命令\",{\"1\":{\"434\":1}}],[\"条\",{\"1\":{\"426\":2,\"434\":1,\"772\":1}}],[\"条记录\",{\"1\":{\"362\":2}}],[\"条件的\",{\"1\":{\"1146\":1}}],[\"条件过滤\",{\"1\":{\"956\":1}}],[\"条件二\",{\"1\":{\"437\":1}}],[\"条件一\",{\"1\":{\"437\":1}}],[\"条件中的\",{\"1\":{\"355\":1}}],[\"条件\",{\"1\":{\"352\":1,\"384\":1}}],[\"条件等等\",{\"1\":{\"345\":1}}],[\"幻像\",{\"1\":{\"362\":1}}],[\"幻读被完全解决了吗\",{\"1\":{\"362\":1}}],[\"幻读\",{\"1\":{\"361\":3}}],[\"万人民币的人才被称为合格投资人\",{\"1\":{\"754\":1}}],[\"万美元以上\",{\"1\":{\"754\":1}}],[\"万美元用来买一部新手机\",{\"1\":{\"751\":1}}],[\"万美元请人打扫房子\",{\"1\":{\"751\":1}}],[\"万美元请人打扫你的房子\",{\"1\":{\"751\":1}}],[\"万美元的价格雇一个新的\",{\"1\":{\"751\":1}}],[\"万美元的价格留下你的老清洁工\",{\"1\":{\"751\":1}}],[\"万美元就能找到一个高素质的人\",{\"1\":{\"751\":1}}],[\"万美元就能找到一个能为你做完全相同工作的人\",{\"1\":{\"751\":1}}],[\"万美元\",{\"1\":{\"751\":6}}],[\"万维网\",{\"1\":{\"723\":1}}],[\"万万没想到\",{\"1\":{\"503\":1}}],[\"万的记录\",{\"1\":{\"362\":1}}],[\"万亿美金吗\",{\"1\":{\"169\":1}}],[\"活跃事务\",{\"1\":{\"362\":3}}],[\"方法将时间转换为特定时区或\",{\"1\":{\"1205\":1}}],[\"方法将会阻塞一段时间\",{\"1\":{\"1035\":1}}],[\"方法获得结构体成员的详细信息\",{\"1\":{\"1192\":1}}],[\"方法获取这些类型的种类信息\",{\"1\":{\"1188\":1}}],[\"方法返回\",{\"1\":{\"1209\":1}}],[\"方法返回空\",{\"1\":{\"1188\":3}}],[\"方法返回之后才能被重新使用\",{\"1\":{\"1144\":1}}],[\"方法等信息\",{\"1\":{\"1186\":1,\"1194\":1}}],[\"方法用于解析命令行参数并设置自定义类型\",{\"1\":{\"1163\":1}}],[\"方法用于返回自定义类型\",{\"1\":{\"1163\":1}}],[\"方法会唤醒队列中全部的\",{\"1\":{\"1146\":1}}],[\"方法会唤醒队列最前面的\",{\"1\":{\"1146\":1}}],[\"方法会将当前\",{\"1\":{\"1146\":1}}],[\"方法会接受一个全新的\",{\"1\":{\"1138\":1}}],[\"方法传入任意负数\",{\"1\":{\"1144\":1}}],[\"方法传入的参数可以为负数\",{\"1\":{\"1144\":1}}],[\"方法传入了\",{\"1\":{\"1144\":1}}],[\"方法进行了简化\",{\"1\":{\"1142\":1}}],[\"方法接受者和初始化类型都是结构体指针\",{\"1\":{\"1138\":1}}],[\"方法接受者和初始化类型都是结构体\",{\"1\":{\"1138\":1}}],[\"方法接受两个参数\",{\"1\":{\"479\":1}}],[\"方法称为post\",{\"1\":{\"1080\":1}}],[\"方法表示\",{\"1\":{\"1036\":1}}],[\"方法有一个\",{\"1\":{\"1035\":1}}],[\"方法消费\",{\"1\":{\"1035\":1}}],[\"方法执行的前后执行一些其它的操作\",{\"1\":{\"993\":1}}],[\"方法实现的\",{\"1\":{\"993\":1}}],[\"方法实现了\",{\"1\":{\"820\":3,\"827\":4}}],[\"方法指定when\",{\"1\":{\"960\":1}}],[\"方法就可以这样表示\",{\"1\":{\"960\":1}}],[\"方法时需要分三步进行\",{\"1\":{\"960\":1}}],[\"方法中实现逻辑\",{\"1\":{\"828\":1}}],[\"方法中调用接收者的相应方法\",{\"1\":{\"821\":1}}],[\"方法定义了获取书架中指定位置的书籍的操作\",{\"1\":{\"827\":1}}],[\"方法定义了获取书架中书籍数量的操作\",{\"1\":{\"827\":1}}],[\"方法定义了向书架中添加书籍的操作\",{\"1\":{\"827\":1}}],[\"方法定义了调用切换频道的命令的操作\",{\"1\":{\"820\":1}}],[\"方法定义了调用关闭电视机的命令的操作\",{\"1\":{\"820\":1}}],[\"方法定义了调用打开电视机的命令的操作\",{\"1\":{\"820\":1}}],[\"方法定义了切换频道的操作\",{\"1\":{\"820\":1}}],[\"方法定义了关闭电视机的操作\",{\"1\":{\"820\":1}}],[\"方法定义了打开电视机的操作\",{\"1\":{\"820\":1}}],[\"方法的使用\",{\"1\":{\"1194\":1}}],[\"方法的简单封装\",{\"1\":{\"1144\":1}}],[\"方法的主干只保留最常见\",{\"1\":{\"1142\":1}}],[\"方法的接受者是指针\",{\"1\":{\"1138\":1}}],[\"方法的调用次数mocktimes\",{\"1\":{\"960\":1}}],[\"方法的返回值\",{\"1\":{\"956\":1}}],[\"方法的定义\",{\"1\":{\"481\":1}}],[\"方法的第二个参数是一个引用的类型\",{\"1\":{\"481\":1}}],[\"方法参数为\",{\"1\":{\"480\":1}}],[\"方法是按照字节来处理字符串的\",{\"1\":{\"480\":2}}],[\"方法插入字符串字面量\",{\"1\":{\"478\":1}}],[\"方法插入单个字符char\",{\"1\":{\"478\":1}}],[\"方法追加字符串字面量\",{\"1\":{\"477\":1}}],[\"方法追加字符char\",{\"1\":{\"477\":1}}],[\"方法也会返回一个\",{\"1\":{\"450\":1}}],[\"方法来更新指定的字段\",{\"1\":{\"1088\":1}}],[\"方法来指定向\",{\"1\":{\"1034\":1}}],[\"方法来将文件的内容读取到\",{\"1\":{\"450\":1}}],[\"方法来实现的\",{\"1\":{\"433\":1}}],[\"方法\",{\"0\":{\"960\":1},\"1\":{\"436\":1,\"450\":1,\"479\":1,\"481\":1,\"485\":1,\"814\":1,\"820\":3,\"821\":1,\"958\":1,\"960\":2,\"967\":1,\"990\":1,\"1037\":3,\"1135\":3,\"1138\":1,\"1142\":1,\"1143\":5,\"1144\":1,\"1153\":3,\"1191\":1}}],[\"方法做故障恢复时\",{\"1\":{\"413\":1}}],[\"方案中\",{\"1\":{\"413\":1}}],[\"方案采用哈希槽\",{\"1\":{\"413\":1}}],[\"方案\",{\"1\":{\"385\":1,\"386\":1,\"388\":3,\"413\":1}}],[\"方案还是有的\",{\"1\":{\"385\":1}}],[\"方式解决了幻读\",{\"1\":{\"361\":2,\"362\":2}}],[\"方便我们监听8080端口\",{\"1\":{\"517\":1}}],[\"方便我们快速查找书中的内容\",{\"1\":{\"350\":1}}],[\"方便后续模块读取表名\",{\"1\":{\"349\":1}}],[\"方便开发人员模拟接口行为做测试的工具\",{\"1\":{\"977\":1}}],[\"方便开发人员\",{\"1\":{\"193\":1}}],[\"针对mock函数\",{\"1\":{\"960\":1}}],[\"针对开发人员提升单测速度非常友好\",{\"1\":{\"958\":1}}],[\"针对趋势的理解需要全方位清晰捕捉到才能深刻理解它\",{\"1\":{\"804\":1}}],[\"针对特殊的界面设计\",{\"1\":{\"731\":1}}],[\"针对这次事件我没有任何抱怨\",{\"1\":{\"592\":1}}],[\"针对以上事实\",{\"1\":{\"591\":1}}],[\"针对在校生就是\",{\"1\":{\"552\":1}}],[\"针对某一类变量的最大值\",{\"1\":{\"455\":1}}],[\"针对\",{\"1\":{\"377\":1}}],[\"针对当前读\",{\"1\":{\"361\":1,\"362\":1}}],[\"针对快照读\",{\"1\":{\"361\":1,\"362\":1}}],[\"针对不同的隔离级别\",{\"1\":{\"361\":1}}],[\"串\",{\"1\":{\"478\":1}}],[\"串行化\",{\"1\":{\"361\":3,\"362\":1}}],[\"串成一个链表\",{\"1\":{\"356\":1}}],[\"隔离级别是\",{\"1\":{\"362\":1}}],[\"隔离级别是在\",{\"1\":{\"362\":1}}],[\"隔离级别的事务来说\",{\"1\":{\"362\":3}}],[\"隔离级别会影响性能\",{\"1\":{\"361\":1}}],[\"隔离级别来避免幻读现象的发生\",{\"1\":{\"361\":1}}],[\"隔离级别下\",{\"1\":{\"361\":1}}],[\"隔离级别越高\",{\"1\":{\"361\":1}}],[\"隔离性是通过\",{\"1\":{\"361\":1}}],[\"隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致\",{\"1\":{\"361\":1}}],[\"隔离性\",{\"1\":{\"361\":1,\"424\":1}}],[\"隔开\",{\"1\":{\"258\":1}}],[\"早十年经历经济差的生活总比已经步入中年再经历经济危机好\",{\"1\":{\"764\":1}}],[\"早些毕业会变得更好吗\",{\"0\":{\"764\":1}}],[\"早些年我还没有认真读书的时候\",{\"1\":{\"746\":1}}],[\"早期互联网的大部分站点其实都是个人网站\",{\"1\":{\"532\":1}}],[\"早被写入到\",{\"1\":{\"360\":1}}],[\"早已没有了当年蹲在屏幕前看乐视2发布会的心情\",{\"1\":{\"9\":1}}],[\"机构臃肿\",{\"1\":{\"718\":1}}],[\"机器\",{\"1\":{\"648\":1}}],[\"机器设备\",{\"1\":{\"646\":1}}],[\"机器性能浪费\",{\"1\":{\"388\":1}}],[\"机器人异或是其他领域均是如此\",{\"1\":{\"804\":1}}],[\"机器人的崛起会会呈现类似的现象\",{\"1\":{\"717\":1}}],[\"机器人等我们已经谈论了数十年的问题\",{\"1\":{\"717\":1}}],[\"机器人\",{\"1\":{\"674\":1}}],[\"机器人试图达到网格的右下角\",{\"1\":{\"230\":1}}],[\"机器人每次只能向下或者向右移动一步\",{\"1\":{\"230\":1}}],[\"机制\",{\"1\":{\"360\":1,\"412\":1}}],[\"引用\",{\"1\":{\"1027\":1}}],[\"引力是如何起作用的\",{\"1\":{\"637\":1}}],[\"引导自己的思维而不是受其控制\",{\"1\":{\"627\":1}}],[\"引导客户端到正在导入槽i的节点去查找键key\",{\"1\":{\"432\":1}}],[\"引起的别的库中\",{\"1\":{\"447\":1}}],[\"引入缓存后\",{\"1\":{\"388\":1}}],[\"引入缓存提高性能\",{\"0\":{\"381\":1},\"1\":{\"380\":1}}],[\"引入消息队列来解决这个问题\",{\"1\":{\"385\":1}}],[\"引入消息队列\",{\"1\":{\"385\":1}}],[\"引入\",{\"1\":{\"381\":1}}],[\"引入了组提交机制后\",{\"1\":{\"360\":1}}],[\"引入了\",{\"1\":{\"360\":1,\"377\":1}}],[\"引擎并不支持行级锁\",{\"1\":{\"370\":1}}],[\"引擎是支持行级锁的\",{\"1\":{\"370\":1}}],[\"引擎通过什么技术来保证事务的这四个特性的呢\",{\"1\":{\"361\":1}}],[\"引擎它是支持事务的\",{\"1\":{\"361\":1}}],[\"引擎层是负责数据的存储和提取\",{\"1\":{\"341\":1}}],[\"引擎的表里对某些纪录加上\",{\"1\":{\"368\":1}}],[\"引擎的表里对某些记录加上\",{\"1\":{\"368\":1}}],[\"引擎的表使用表锁\",{\"1\":{\"366\":1}}],[\"引擎的默认隔离级别虽然是\",{\"1\":{\"361\":1,\"362\":1}}],[\"引擎的默认隔离级别\",{\"1\":{\"361\":1}}],[\"引擎的\",{\"1\":{\"60\":1}}],[\"引擎以帮助构建镜像\",{\"1\":{\"60\":1}}],[\"引擎无法获得这些位置的文件\",{\"1\":{\"60\":1}}],[\"引擎收到这个上下文包后\",{\"1\":{\"60\":1}}],[\"引擎中构建的\",{\"1\":{\"60\":1}}],[\"引擎变得轻而易举\",{\"1\":{\"60\":1}}],[\"引擎交互\",{\"1\":{\"60\":1}}],[\"引擎\",{\"1\":{\"60\":4,\"358\":1}}],[\"落盘\",{\"1\":{\"360\":1}}],[\"却是在go\",{\"1\":{\"1079\":1}}],[\"却期望得到完全不同的结果\",{\"1\":{\"717\":1}}],[\"却从不和任何人约会\",{\"1\":{\"585\":1}}],[\"却没有意识到\",{\"1\":{\"579\":1}}],[\"却没有在博客上发布这些令人满意的想法\",{\"1\":{\"569\":1}}],[\"却没有数据的所有权其实是很扯淡的\",{\"1\":{\"533\":1}}],[\"却没有被leaf调整\",{\"1\":{\"177\":1}}],[\"却要比\",{\"1\":{\"383\":1}}],[\"却不能保证两者的提交顺序一致\",{\"1\":{\"360\":1}}],[\"次的\",{\"1\":{\"1142\":1}}],[\"次为\",{\"1\":{\"1002\":1}}],[\"次触发为第\",{\"1\":{\"1002\":1}}],[\"次\",{\"1\":{\"426\":1,\"1135\":1}}],[\"次刷盘操作\",{\"1\":{\"360\":1}}],[\"次数会很高\",{\"1\":{\"360\":1}}],[\"次数高\",{\"1\":{\"360\":1}}],[\"次幂函数\",{\"1\":{\"288\":1}}],[\"处\",{\"1\":{\"428\":1}}],[\"处于命令传播阶段的主从服务器因为网络原因而中断了复制\",{\"1\":{\"425\":1}}],[\"处于\",{\"1\":{\"360\":1,\"1009\":1}}],[\"处理程序\",{\"1\":{\"1193\":1}}],[\"处理了自旋逻辑后\",{\"1\":{\"1142\":1}}],[\"处理器没有运行用户代码或者调度器\",{\"1\":{\"1134\":1}}],[\"处理请求\",{\"1\":{\"1055\":1}}],[\"处理状态逻辑\",{\"1\":{\"849\":1}}],[\"处理的是你认为可取的东西\",{\"1\":{\"578\":1}}],[\"处理返回值\",{\"1\":{\"450\":1}}],[\"处理可恢复的错误\",{\"0\":{\"448\":1}}],[\"处理不可恢复的错误😱\",{\"0\":{\"447\":1}}],[\"处理\",{\"1\":{\"357\":1}}],[\"处理节点\",{\"1\":{\"206\":1}}],[\"崩溃了\",{\"1\":{\"360\":1}}],[\"崩溃\",{\"1\":{\"360\":1}}],[\"崩溃恢复的情况\",{\"1\":{\"360\":2}}],[\"崩溃恢复\",{\"1\":{\"357\":1}}],[\"异类\",{\"1\":{\"503\":1}}],[\"异步调用\",{\"1\":{\"1063\":1}}],[\"异步重试\",{\"1\":{\"385\":1}}],[\"异步复制\",{\"1\":{\"359\":1}}],[\"异常\",{\"1\":{\"382\":1}}],[\"异常重启会出现什么现象\",{\"1\":{\"360\":2}}],[\"持续时间处理\",{\"1\":{\"1205\":1,\"1213\":1}}],[\"持续时间和时区等\",{\"1\":{\"1204\":1}}],[\"持续肥皂剧\",{\"1\":{\"788\":1}}],[\"持续经营假设\",{\"1\":{\"706\":1}}],[\"持续发展的首要目的就是在一开始获得盈利\",{\"1\":{\"663\":1}}],[\"持续发展的力量与另一种创业完全不同\",{\"1\":{\"663\":1}}],[\"持不同看法的人已经存在不久了\",{\"1\":{\"704\":1}}],[\"持久化文件有两种格式\",{\"1\":{\"414\":1}}],[\"持久化时\",{\"1\":{\"414\":1}}],[\"持久化的优点\",{\"1\":{\"413\":1}}],[\"持久化到磁盘\",{\"1\":{\"360\":3}}],[\"持久性是通过\",{\"1\":{\"361\":1}}],[\"持久性\",{\"1\":{\"361\":1}}],[\"持有互斥锁的读锁\",{\"1\":{\"1143\":1}}],[\"持有元素对象的切片\",{\"1\":{\"867\":1}}],[\"持有当前策略对象\",{\"1\":{\"855\":1}}],[\"持有当前状态对象\",{\"1\":{\"849\":1}}],[\"持有观察者对象的切片\",{\"1\":{\"844\":1}}],[\"持有备忘录对象的切片\",{\"1\":{\"838\":1}}],[\"持有同事对象的集合\",{\"1\":{\"833\":1}}],[\"持有中介者引用\",{\"1\":{\"833\":2}}],[\"持有股票的最大现金\",{\"1\":{\"253\":1}}],[\"持有股票之后哪还有现金呢\",{\"1\":{\"252\":1}}],[\"持有\",{\"1\":{\"252\":2,\"1132\":1,\"1134\":2}}],[\"阶段拆分为三个过程\",{\"1\":{\"360\":1}}],[\"阶段不变\",{\"1\":{\"360\":1}}],[\"阶段结束才能释放锁\",{\"1\":{\"360\":1}}],[\"阶段的\",{\"1\":{\"360\":2}}],[\"阶段和commit语句不同\",{\"1\":{\"360\":1}}],[\"阶段和提交\",{\"1\":{\"360\":1}}],[\"阶段\",{\"1\":{\"360\":9}}],[\"介于两者之间\",{\"1\":{\"359\":1}}],[\"介绍mongodb\",{\"0\":{\"1217\":1},\"1\":{\"1216\":1}}],[\"介绍了如何使用反射来获取变量的类型信息和值信息\",{\"1\":{\"1194\":1}}],[\"介绍一下如何去了解一个包吧\",{\"1\":{\"512\":1}}],[\"介绍文档中有介绍其的核心机制\",{\"1\":{\"149\":1}}],[\"介绍如何在\",{\"1\":{\"74\":1}}],[\"介绍镜像实现的基本原理\",{\"1\":{\"49\":1}}],[\"介绍\",{\"0\":{\"18\":1,\"149\":1,\"1160\":1}}],[\"版本控制服务器的软件时\",{\"1\":{\"721\":1}}],[\"版本而有所不同\",{\"1\":{\"447\":1}}],[\"版本\",{\"1\":{\"411\":1}}],[\"版本之后\",{\"1\":{\"404\":1,\"411\":1,\"412\":1}}],[\"版本之后增加的一种复制方式\",{\"1\":{\"359\":1}}],[\"版本链\",{\"1\":{\"362\":1}}],[\"版本中\",{\"1\":{\"360\":1}}],[\"版本化交易是新的交易形式\",{\"1\":{\"138\":1}}],[\"版本化交易\",{\"0\":{\"138\":1}}],[\"半同步复制\",{\"1\":{\"359\":1}}],[\"刷新缓冲区\",{\"1\":{\"1153\":1}}],[\"刷新故障迁移状态的最大时限\",{\"1\":{\"426\":1}}],[\"刷短视频\",{\"1\":{\"788\":1}}],[\"刷短视频等等\",{\"1\":{\"787\":1}}],[\"刷一天手机的感觉比认真工作一天还累\",{\"1\":{\"695\":1}}],[\"刷了半小时我总结出一个规律\",{\"1\":{\"631\":1}}],[\"刷盘这两个任务\",{\"1\":{\"411\":1}}],[\"刷盘的时机\",{\"1\":{\"360\":3}}],[\"刷盘操作合并成一个\",{\"1\":{\"360\":1}}],[\"刷盘\",{\"1\":{\"360\":4,\"411\":1}}],[\"刷到磁盘上的频率\",{\"1\":{\"358\":1}}],[\"刷题笔记\",{\"0\":{\"274\":1}}],[\"升高\",{\"1\":{\"358\":1}}],[\"升级的好处\",{\"1\":{\"398\":1}}],[\"升级\",{\"1\":{\"398\":1}}],[\"升级权限\",{\"1\":{\"127\":1}}],[\"升级solana程序\",{\"0\":{\"127\":1}}],[\"升级和执行自定义程序\",{\"1\":{\"112\":1}}],[\"得不偿失\",{\"1\":{\"731\":1}}],[\"得不到读者的认可\",{\"1\":{\"660\":1}}],[\"得出一个值\",{\"1\":{\"383\":1}}],[\"得用\",{\"1\":{\"358\":1}}],[\"得到医疗\",{\"1\":{\"573\":1}}],[\"得到内订阅的课程\",{\"1\":{\"553\":1}}],[\"得到专栏万维钢精英日课4\",{\"1\":{\"504\":1}}],[\"得到\",{\"1\":{\"413\":1,\"448\":1}}],[\"得到旧值\",{\"1\":{\"384\":1,\"386\":1}}],[\"得到了\",{\"1\":{\"362\":1}}],[\"得到dp\",{\"1\":{\"244\":1}}],[\"得到的价值是value\",{\"1\":{\"235\":1,\"241\":1}}],[\"理由同第\",{\"1\":{\"759\":1}}],[\"理想情况下\",{\"1\":{\"573\":1}}],[\"理应了解其本质\",{\"1\":{\"509\":1}}],[\"理\",{\"1\":{\"428\":1}}],[\"理论上讲你可以在当前目录下创建很多可运行的main程序\",{\"1\":{\"989\":1}}],[\"理论上只要记录在\",{\"1\":{\"358\":1}}],[\"理论\",{\"1\":{\"384\":1}}],[\"理解调度器的启动过程对我们理解调度器的实现原理很有帮助\",{\"1\":{\"1134\":1}}],[\"理解你所处的世界\",{\"0\":{\"795\":1}}],[\"理解成一个数据快照\",{\"1\":{\"362\":1}}],[\"理解镜像构成\",{\"1\":{\"55\":1}}],[\"适配器允许我们创建一个中间层类\",{\"1\":{\"904\":1}}],[\"适配器可以充当两个对象之间的中间封装层\",{\"1\":{\"903\":1}}],[\"适配器是一种结构型设计模式\",{\"1\":{\"903\":1}}],[\"适配器模式的主要作用是\",{\"1\":{\"906\":1}}],[\"适配器模式在接口不兼容的情况下\",{\"1\":{\"906\":1}}],[\"适配器模式是一种结构型设计模式\",{\"1\":{\"906\":1}}],[\"适配器模式\",{\"0\":{\"903\":1}}],[\"适用对象不同\",{\"1\":{\"358\":1}}],[\"适当设置\",{\"1\":{\"357\":1}}],[\"能否进入自旋\",{\"1\":{\"1142\":1}}],[\"能不能\",{\"1\":{\"646\":1}}],[\"能看到自己的缺点\",{\"1\":{\"627\":1}}],[\"能通过推理来支持自己的信念\",{\"1\":{\"627\":1}}],[\"能拿出自己所有的钱来赔付我头次见\",{\"1\":{\"592\":1}}],[\"能让你快乐\",{\"1\":{\"577\":1}}],[\"能使用\",{\"1\":{\"358\":1}}],[\"能力\",{\"1\":{\"358\":1}}],[\"能力的速度\",{\"1\":{\"580\":1}}],[\"能力的\",{\"1\":{\"358\":1}}],[\"能够帮我们从\",{\"1\":{\"1144\":1}}],[\"能够进入自旋就会调用runtime\",{\"1\":{\"1142\":1}}],[\"能够接收的类型\",{\"1\":{\"1137\":1}}],[\"能够接收的大小\",{\"1\":{\"1137\":1}}],[\"能够运行在任何环境中\",{\"1\":{\"1066\":1}}],[\"能够精简程序里的逻辑判断\",{\"1\":{\"1011\":1}}],[\"能够显著提高测试效率\",{\"1\":{\"972\":1}}],[\"能够开发一个模块化的单体架构\",{\"1\":{\"724\":1}}],[\"能够胜任它的工作\",{\"1\":{\"449\":1}}],[\"能够保证\",{\"1\":{\"357\":1}}],[\"能够潜在地支持任何可以编译到\",{\"1\":{\"129\":1}}],[\"能够相互隔离\",{\"1\":{\"76\":1}}],[\"入门的\",{\"1\":{\"1166\":1}}],[\"入门过程\",{\"0\":{\"989\":1}}],[\"入门门槛极高\",{\"1\":{\"718\":1}}],[\"入队错误\",{\"1\":{\"424\":1}}],[\"入\",{\"1\":{\"358\":1,\"426\":1}}],[\"统治者也是直接拥有土地的人\",{\"1\":{\"646\":1}}],[\"统\",{\"1\":{\"426\":1}}],[\"统一写\",{\"1\":{\"358\":1}}],[\"统计一个数字在排序数组中出现的次数\",{\"1\":{\"325\":1}}],[\"继续延伸这个话题\",{\"1\":{\"792\":1}}],[\"继续刷视频来刺激自己的大脑\",{\"1\":{\"788\":1}}],[\"继续投资计划\",{\"1\":{\"761\":1}}],[\"继续去考公是非常不明智的选择\",{\"1\":{\"717\":1}}],[\"继续留坑\",{\"1\":{\"633\":1}}],[\"继续执行下面剩余的队列值\",{\"1\":{\"424\":1}}],[\"继续执行新的更新操作\",{\"1\":{\"357\":1}}],[\"继续匹配\",{\"1\":{\"263\":1}}],[\"恢复到第二个状态\",{\"1\":{\"838\":1}}],[\"恢复到第一个状态\",{\"1\":{\"838\":1}}],[\"恢复等功能\",{\"1\":{\"837\":1,\"839\":1}}],[\"恢复和事务等功能\",{\"1\":{\"821\":1}}],[\"恢复功能时\",{\"1\":{\"819\":1}}],[\"恢复数据的效率会比\",{\"1\":{\"413\":1}}],[\"恢复数据时\",{\"1\":{\"413\":1}}],[\"恢复出来的库\",{\"1\":{\"360\":1}}],[\"恢复正常运行\",{\"1\":{\"357\":1}}],[\"恢复事务\",{\"1\":{\"357\":1}}],[\"～\",{\"1\":{\"357\":2}}],[\"图像或视频\",{\"1\":{\"772\":1}}],[\"图书馆距离宿舍足够近\",{\"1\":{\"759\":1}}],[\"图式的第二部分是\",{\"1\":{\"572\":1}}],[\"图式的第一部分是\",{\"1\":{\"572\":1}}],[\"图中顺时针\",{\"1\":{\"357\":1}}],[\"图中蓝色部分\",{\"1\":{\"357\":1}}],[\"图中的红色部分\",{\"1\":{\"357\":1}}],[\"图中的\",{\"1\":{\"357\":1,\"358\":2}}],[\"图论算法\",{\"0\":{\"271\":1}}],[\"吗\",{\"1\":{\"357\":1}}],[\"偏移量的地方做了aaa\",{\"1\":{\"357\":1,\"358\":1}}],[\"顺便提一句\",{\"1\":{\"534\":1}}],[\"顺序写\",{\"1\":{\"357\":2}}],[\"顺着\",{\"1\":{\"356\":1}}],[\"顺时针打印矩阵\",{\"0\":{\"300\":1}}],[\"行动之后\",{\"0\":{\"587\":1}}],[\"行提醒我们可以设置\",{\"1\":{\"447\":1}}],[\"行级锁的类型主要有三类\",{\"1\":{\"370\":1}}],[\"行级锁\",{\"0\":{\"370\":1}}],[\"行\",{\"1\":{\"362\":1,\"395\":1,\"396\":1,\"424\":1,\"425\":1,\"426\":3,\"447\":1}}],[\"行了\",{\"1\":{\"356\":1}}],[\"行为\",{\"1\":{\"956\":1}}],[\"行为时都会计算利息\",{\"1\":{\"152\":1}}],[\"行为就不会发生\",{\"1\":{\"55\":1}}],[\"揭开\",{\"0\":{\"354\":1}}],[\"页号\",{\"1\":{\"376\":1}}],[\"页都是靠这个机制保证持久化的\",{\"1\":{\"356\":1}}],[\"页的修改也都会记录到\",{\"1\":{\"356\":1}}],[\"页\",{\"1\":{\"356\":1}}],[\"页分裂还有可能会造成大量的内存碎片\",{\"1\":{\"353\":1}}],[\"页面后\",{\"1\":{\"357\":1}}],[\"页面需要检测session\",{\"1\":{\"200\":1}}],[\"页面会跳转到主页面\",{\"1\":{\"40\":1}}],[\"页面介绍\",{\"0\":{\"23\":1,\"39\":1}}],[\"页面\",{\"0\":{\"22\":1,\"38\":1},\"1\":{\"357\":2}}],[\"覆盖索引是指\",{\"1\":{\"353\":1}}],[\"覆盖索引优化\",{\"1\":{\"353\":2}}],[\"男女的记录分布均匀\",{\"1\":{\"352\":1}}],[\"傻瓜都知道时间是宝贵的\",{\"1\":{\"350\":1}}],[\"全世界所有国家的人们的生活都非常不如意\",{\"1\":{\"795\":1}}],[\"全部被黑客攻击\",{\"1\":{\"704\":1}}],[\"全部写满就从头开始\",{\"1\":{\"358\":1}}],[\"全面的境界是只需要重新在大脑里扫描需要的知识去用就可以了\",{\"1\":{\"525\":1}}],[\"全面可以节省很多不必要浪费的时间\",{\"1\":{\"525\":1}}],[\"全面\",{\"1\":{\"525\":2}}],[\"全局队列\",{\"1\":{\"1135\":1}}],[\"全局协程队列\",{\"1\":{\"1135\":2}}],[\"全局\",{\"1\":{\"988\":1,\"1135\":1}}],[\"全局常量可以在程序的任意部分使用\",{\"1\":{\"456\":1}}],[\"全局变量的\",{\"1\":{\"1133\":1}}],[\"全局变量的生命周期一定是\",{\"1\":{\"454\":1}}],[\"全局变量\",{\"0\":{\"454\":1},\"1\":{\"981\":1}}],[\"全局锁主要应用于做全库逻辑备份\",{\"1\":{\"364\":1}}],[\"全局锁会被自动释放\",{\"1\":{\"364\":1}}],[\"全局锁\",{\"0\":{\"364\":1}}],[\"全量刷入缓存\",{\"1\":{\"381\":1}}],[\"全表扫描\",{\"1\":{\"349\":1}}],[\"全排列ii\",{\"0\":{\"219\":1}}],[\"全排列\",{\"0\":{\"218\":1}}],[\"符合迪米特法则\",{\"1\":{\"926\":1}}],[\"符合开闭原则\",{\"1\":{\"906\":1,\"922\":1}}],[\"符合我们重试的需求\",{\"1\":{\"385\":1}}],[\"符合ipv6大小限制\",{\"1\":{\"116\":1}}],[\"符号而是源sentinel的运行id时\",{\"1\":{\"426\":1}}],[\"符号扩展为表上的所有列\",{\"1\":{\"349\":1}}],[\"符号\",{\"1\":{\"347\":1}}],[\"词法分析的主要作用是识别出关键词update\",{\"1\":{\"355\":1}}],[\"词法分析\",{\"1\":{\"345\":1,\"525\":1}}],[\"语言编写\",{\"1\":{\"1217\":1}}],[\"语言编译器生成不同的汇编代码\",{\"1\":{\"1140\":1}}],[\"语言标准库中的一个包\",{\"1\":{\"1160\":1}}],[\"语言标准库中还包含条件变量\",{\"1\":{\"1146\":1}}],[\"语言切换\",{\"1\":{\"1146\":1}}],[\"语言源代码中已经将\",{\"1\":{\"1142\":1}}],[\"语言在\",{\"1\":{\"1141\":1}}],[\"语言在传递参数时都是传值的\",{\"1\":{\"1138\":1}}],[\"语言二进制包大小从\",{\"1\":{\"1139\":1}}],[\"语言类型的运行时表示\",{\"1\":{\"1139\":1}}],[\"语言接口中的这两个类型\",{\"1\":{\"1139\":1}}],[\"语言根据接口类型是否包含一组方法将接口类型分成了两类\",{\"1\":{\"1139\":1}}],[\"语言的\",{\"1\":{\"1173\":1}}],[\"语言的任意类型都可以转换成\",{\"1\":{\"1139\":1}}],[\"语言的接口类型不是任意类型这一句话\",{\"1\":{\"1138\":1}}],[\"语言的开发者比较难以理解\",{\"1\":{\"1138\":1}}],[\"语言的编译器会在结构体类型和指针类型都实现一个方法时报错\",{\"1\":{\"1138\":1}}],[\"语言中用于处理时间和日期的标准库\",{\"1\":{\"1204\":1}}],[\"语言中的源代码表示形式\",{\"0\":{\"1200\":1},\"1\":{\"1200\":4}}],[\"语言中的源代码表示形式的字符串\",{\"1\":{\"1198\":1}}],[\"语言中的互斥锁\",{\"1\":{\"1142\":1}}],[\"语言中的定义是这样的\",{\"1\":{\"1139\":1}}],[\"语言中的\",{\"1\":{\"1138\":1}}],[\"语言中同时使用指针和接口时会发生一些让人困惑的问题\",{\"1\":{\"1138\":1}}],[\"语言中很常见\",{\"1\":{\"1138\":1}}],[\"语言中也能使用共享内存加互斥锁进行通信\",{\"1\":{\"1136\":1}}],[\"语言实现却没有严格遵循这一语义\",{\"1\":{\"1136\":1}}],[\"语言提供了一种不同的并发模型\",{\"1\":{\"1136\":1}}],[\"语言提供了一些依赖注入工具\",{\"1\":{\"981\":1}}],[\"语言鼓励的设计并不相同\",{\"1\":{\"1136\":1}}],[\"语言程序能够创建的最大线程数\",{\"1\":{\"1134\":1}}],[\"语言程序的处理器数量一定会等于\",{\"1\":{\"1134\":1}}],[\"语言会使用私有结构体\",{\"1\":{\"1133\":1}}],[\"语言调度器中待执行的任务\",{\"1\":{\"1132\":1}}],[\"语言底层剖析\",{\"0\":{\"1130\":1}}],[\"语言使用zerolog日志库\",{\"0\":{\"1112\":1}}],[\"语言支持\",{\"1\":{\"1073\":1}}],[\"语言定义了一些宏方便我们使用\",{\"1\":{\"1003\":1}}],[\"语言来实现类似的定时管理\",{\"1\":{\"997\":1}}],[\"语言开发的应用很多会使用这种方式来制作镜像\",{\"1\":{\"57\":1}}],[\"语法轻量且易于使用\",{\"1\":{\"873\":1}}],[\"语法\",{\"1\":{\"345\":1}}],[\"语法解析器会根据语法规则\",{\"1\":{\"345\":1}}],[\"语法分析是判断是否符合mysql语法\",{\"1\":{\"355\":1}}],[\"语法分析\",{\"1\":{\"345\":1,\"349\":1}}],[\"语法树\",{\"1\":{\"345\":1}}],[\"语句用于计算键key的crc\",{\"1\":{\"429\":1}}],[\"语句扫描了大量的数据时\",{\"1\":{\"377\":1}}],[\"语句执行结束后才释放锁\",{\"1\":{\"369\":1}}],[\"语句执行的时候\",{\"1\":{\"360\":1}}],[\"语句是不会对记录加锁的\",{\"1\":{\"370\":1}}],[\"语句是利用\",{\"1\":{\"368\":1}}],[\"语句是否满足\",{\"1\":{\"345\":1}}],[\"语句的时候\",{\"1\":{\"361\":1,\"362\":1}}],[\"语句的第一个字段\",{\"1\":{\"343\":1}}],[\"语句或者在自动提交的情况下\",{\"1\":{\"360\":1}}],[\"语句而已\",{\"1\":{\"358\":1}}],[\"语句重现\",{\"1\":{\"358\":1}}],[\"语句也是会使用事务的\",{\"1\":{\"356\":1}}],[\"语句类型\",{\"1\":{\"349\":1}}],[\"语句语法不对\",{\"1\":{\"345\":1}}],[\"语句查询的结果\",{\"1\":{\"343\":1}}],[\"语句\",{\"1\":{\"343\":1,\"356\":2,\"358\":1,\"361\":1,\"362\":2,\"367\":2,\"369\":1,\"449\":1,\"1137\":1}}],[\"语句后\",{\"1\":{\"343\":1}}],[\"语句了\",{\"1\":{\"343\":1}}],[\"优点\",{\"0\":{\"826\":1}}],[\"优点功能\",{\"1\":{\"494\":1}}],[\"优雅地作出反应\",{\"1\":{\"627\":1}}],[\"优先考虑支持他们既成观点的看法\",{\"1\":{\"627\":1}}],[\"优先级最高的内心驱动力会被放在特别的\",{\"1\":{\"577\":1}}],[\"优先级费用\",{\"0\":{\"123\":1},\"1\":{\"118\":1,\"123\":1}}],[\"优先排名\",{\"0\":{\"577\":1}}],[\"优势\",{\"1\":{\"521\":1}}],[\"优化阶段\",{\"1\":{\"349\":1}}],[\"优化器确定执行计划\",{\"1\":{\"355\":1}}],[\"优化器会基于查询成本的考虑\",{\"1\":{\"348\":1}}],[\"优化器主要负责将\",{\"1\":{\"348\":1}}],[\"优化器\",{\"0\":{\"348\":1},\"1\":{\"348\":1}}],[\"优化和执行\",{\"1\":{\"341\":1}}],[\"零分配的go日志库\",{\"1\":{\"1112\":1}}],[\"零售业的总就业人数和工资都会下降\",{\"1\":{\"648\":1}}],[\"零件\",{\"1\":{\"341\":1}}],[\"零钱兑换\",{\"0\":{\"242\":1,\"244\":1}}],[\"说们很闲\",{\"1\":{\"1135\":1}}],[\"说到底还是自己不愿意在这方面花太多时间\",{\"1\":{\"743\":1}}],[\"说到职业的可能性\",{\"1\":{\"578\":1}}],[\"说到职业\",{\"1\":{\"569\":1}}],[\"说得好听美其名曰\",{\"1\":{\"709\":1}}],[\"说得简单点就是要给自己积极的心理暗示\",{\"1\":{\"632\":1}}],[\"说出未知事物并将其实现\",{\"1\":{\"674\":1}}],[\"说说为什么这些方面优势会让创业更加简单\",{\"1\":{\"673\":1}}],[\"说实话\",{\"1\":{\"660\":1,\"751\":1}}],[\"说起比尔盖茨\",{\"1\":{\"673\":1}}],[\"说起不公平优势\",{\"1\":{\"673\":1}}],[\"说起培养正念\",{\"1\":{\"632\":1}}],[\"说起来为什么写这篇文章呢\",{\"1\":{\"609\":1}}],[\"说不清道不明是什么时期人们开始无意识联系上滑的动作\",{\"1\":{\"631\":1}}],[\"说道气候难民\",{\"1\":{\"609\":1}}],[\"说\",{\"1\":{\"426\":1}}],[\"说白了就是如何存储数据\",{\"1\":{\"350\":1}}],[\"说清楚buffer\",{\"1\":{\"340\":1}}],[\"说明态度的时候尽可能说在我看来\",{\"1\":{\"657\":1}}],[\"说明自己的意向性加上时间才是精确的\",{\"1\":{\"610\":1}}],[\"说明我们需要一个string类型的字符串而不是\",{\"1\":{\"467\":1}}],[\"说明主从服务器心跳检测机制的实现原理\",{\"1\":{\"425\":1}}],[\"说明\",{\"1\":{\"360\":2,\"1218\":1}}],[\"说明mid前面的元素就有少的所以只要继续二分左边的数组即可\",{\"1\":{\"326\":1}}],[\"说明mid前面的元素肯定都是完整的不少元素所以只需要继续二分右边的数组即可\",{\"1\":{\"326\":1}}],[\"说明匹配失败\",{\"1\":{\"297\":1}}],[\"说明递归到了子节点的子节点完成匹配\",{\"1\":{\"297\":1}}],[\"说明s\",{\"1\":{\"268\":1}}],[\"说明找到了总和为\",{\"1\":{\"237\":1}}],[\"锁是一种并发编程中的同步原语\",{\"1\":{\"1141\":1}}],[\"锁是特殊的表锁机制\",{\"1\":{\"369\":1}}],[\"锁的等待者会按照先进先出的顺序获取锁\",{\"1\":{\"1142\":1}}],[\"锁的最初有效时间\",{\"1\":{\"437\":1}}],[\"锁的过程中\",{\"1\":{\"369\":1}}],[\"锁变量仍然是存在的\",{\"1\":{\"437\":1}}],[\"锁信息等等\",{\"1\":{\"376\":1}}],[\"锁住的就是一个点\",{\"1\":{\"374\":1}}],[\"锁住的是一条记录\",{\"1\":{\"371\":1}}],[\"锁不兼容\",{\"1\":{\"371\":3}}],[\"锁不是再一个事务提交后才释放\",{\"1\":{\"369\":1}}],[\"锁兼容\",{\"1\":{\"371\":1}}],[\"锁之分的\",{\"1\":{\"371\":1}}],[\"锁和\",{\"1\":{\"371\":1}}],[\"锁定一个范围\",{\"1\":{\"370\":2,\"373\":1}}],[\"锁就会被释放\",{\"1\":{\"370\":1}}],[\"锁再对大量数据进行插入的时候\",{\"1\":{\"369\":1}}],[\"锁释放掉\",{\"1\":{\"369\":1}}],[\"锁实现的\",{\"1\":{\"369\":1}}],[\"锁范围内插入了一条记录\",{\"1\":{\"361\":1,\"362\":1}}],[\"锁来保证事务提交的顺序\",{\"1\":{\"360\":1}}],[\"锁竞争激烈\",{\"1\":{\"360\":1}}],[\"锁\",{\"0\":{\"363\":1,\"369\":1},\"1\":{\"340\":1,\"365\":1,\"369\":3,\"437\":1}}],[\"事先声明\",{\"1\":{\"714\":1}}],[\"事情的其他可能反应\",{\"1\":{\"623\":1}}],[\"事情在变好之前\",{\"1\":{\"609\":1}}],[\"事情变化得太快了\",{\"1\":{\"579\":1}}],[\"事情变得更复杂了\",{\"1\":{\"573\":1}}],[\"事情比我想象的简单\",{\"1\":{\"552\":1}}],[\"事实证明\",{\"1\":{\"721\":1}}],[\"事实是\",{\"1\":{\"653\":1}}],[\"事实是mixin网络几乎丢了全部的btc\",{\"1\":{\"591\":1}}],[\"事实是对其他已购买者权益的侵害\",{\"1\":{\"28\":1}}],[\"事实\",{\"1\":{\"591\":4}}],[\"事实上解决了这个最关键的问题\",{\"1\":{\"754\":1}}],[\"事实上从这个角度看真正重要的事情不是你是否有了海外账户\",{\"1\":{\"754\":1}}],[\"事实上\",{\"1\":{\"585\":1,\"626\":1,\"703\":1}}],[\"事实上是抓取用户的每一分注意力\",{\"1\":{\"709\":1}}],[\"事实上是\",{\"1\":{\"528\":1}}],[\"事\",{\"1\":{\"424\":1,\"623\":1}}],[\"事务等功能时\",{\"1\":{\"837\":1}}],[\"事务具有一致性指的是\",{\"1\":{\"424\":1}}],[\"事务具有原子性指的是\",{\"1\":{\"424\":1}}],[\"事务也具有耐久性\",{\"1\":{\"424\":1}}],[\"事务仍然是安全的\",{\"1\":{\"424\":1}}],[\"事务状态属性包含一个事务队列\",{\"1\":{\"424\":1}}],[\"事务队列中的命令要么就全部都执行\",{\"1\":{\"424\":1}}],[\"事务队列是一个multicmd类型的数组\",{\"1\":{\"424\":1}}],[\"事务队列\",{\"1\":{\"424\":1}}],[\"事务开始\",{\"1\":{\"424\":1}}],[\"事务提供了一种将多个命令请求打包\",{\"1\":{\"424\":1}}],[\"事务提交后\",{\"1\":{\"360\":1}}],[\"事务提交的时候\",{\"1\":{\"358\":1}}],[\"事务提交之后发生了崩溃\",{\"1\":{\"357\":1}}],[\"事务提交之前发生了崩溃\",{\"1\":{\"357\":1}}],[\"事务过程中生成的锁都会被释放\",{\"1\":{\"371\":1}}],[\"事务中就会出现所谓的幻象问题\",{\"1\":{\"362\":1}}],[\"事务期间的多次读取同一条数据\",{\"1\":{\"362\":1}}],[\"事务处理结束后\",{\"1\":{\"361\":1}}],[\"事务处理过程中\",{\"1\":{\"356\":1}}],[\"事务必须遵循acid\",{\"1\":{\"361\":1}}],[\"事务是由\",{\"1\":{\"361\":1}}],[\"事务执行中途发生的停机都不会影响数据库的一致性\",{\"1\":{\"424\":1}}],[\"事务执行中间过程的\",{\"1\":{\"360\":1}}],[\"事务执行\",{\"1\":{\"424\":1}}],[\"事务执行过程中看到的数据\",{\"1\":{\"361\":1,\"362\":1}}],[\"事务执行过程中\",{\"1\":{\"358\":1}}],[\"事务没提交的时候\",{\"1\":{\"360\":2}}],[\"事务的耐久性指的是\",{\"1\":{\"424\":1}}],[\"事务的隔离性指的是\",{\"1\":{\"424\":1}}],[\"事务的隔离级别是怎么实现的\",{\"0\":{\"362\":1}}],[\"事务的隔离级别有哪些\",{\"1\":{\"361\":1}}],[\"事务的acid性质\",{\"1\":{\"424\":1}}],[\"事务的启动时机是不同的\",{\"1\":{\"362\":1}}],[\"事务的\",{\"1\":{\"360\":3}}],[\"事务的提交\",{\"1\":{\"360\":1}}],[\"事务由\",{\"1\":{\"360\":1}}],[\"事务线程不用等待所有的从库复制成功响应\",{\"1\":{\"359\":1}}],[\"事务\",{\"0\":{\"361\":1,\"424\":1,\"1238\":1},\"1\":{\"340\":1,\"360\":1,\"362\":3,\"374\":1,\"1222\":1}}],[\"小于16kb对象的分配\",{\"0\":{\"1150\":1}}],[\"小于32kb的内存分配\",{\"0\":{\"1149\":1}}],[\"小于\",{\"1\":{\"1035\":1}}],[\"小结\",{\"0\":{\"1011\":1},\"1\":{\"1137\":2}}],[\"小时为单位的时间段\",{\"1\":{\"1205\":1}}],[\"小时域的3\",{\"1\":{\"1002\":1}}],[\"小时\",{\"1\":{\"1002\":1}}],[\"小时的速度行驶两个小时的汽车走得更远\",{\"1\":{\"582\":1}}],[\"小时的速度行驶\",{\"1\":{\"582\":1}}],[\"小红书\",{\"1\":{\"740\":1}}],[\"小到中午吃饭吃什么\",{\"1\":{\"710\":1}}],[\"小县城的交通很便利\",{\"1\":{\"698\":1}}],[\"小法官\",{\"1\":{\"573\":1}}],[\"小型互联网\",{\"1\":{\"534\":1}}],[\"小丑\",{\"1\":{\"505\":1}}],[\"小的那个的概率\",{\"1\":{\"337\":1}}],[\"小数\",{\"1\":{\"292\":2}}],[\"滑动窗口添加最后面的元素\",{\"1\":{\"336\":1}}],[\"滑动窗口移除最前面的元素\",{\"1\":{\"336\":1}}],[\"滑动窗口的位置\",{\"1\":{\"336\":1}}],[\"滑动窗口的最大值\",{\"0\":{\"336\":1}}],[\"滑动窗口做\",{\"1\":{\"320\":1}}],[\"翻译过来叫新互联网协议\",{\"1\":{\"533\":1}}],[\"翻译过来的意思是\",{\"1\":{\"512\":1}}],[\"翻译了一本英文技术类的书\",{\"1\":{\"505\":1}}],[\"翻译成\",{\"1\":{\"318\":4}}],[\"翻转句子中单词的顺序\",{\"1\":{\"333\":1,\"334\":1}}],[\"翻转单词顺序\",{\"0\":{\"333\":1,\"334\":1}}],[\"双向流式grpc\",{\"1\":{\"1072\":1}}],[\"双端流式grpc\",{\"1\":{\"1075\":1}}],[\"双端\",{\"1\":{\"394\":1}}],[\"双1\",{\"1\":{\"360\":1}}],[\"双指针\",{\"1\":{\"332\":1}}],[\"双花\",{\"1\":{\"95\":1}}],[\"形象\",{\"1\":{\"573\":1}}],[\"形象的说就是索引是数据的目录\",{\"1\":{\"350\":1}}],[\"形成了一个函数调用栈\",{\"1\":{\"1056\":1}}],[\"形成链表\",{\"1\":{\"395\":1}}],[\"形成树的一条路径\",{\"1\":{\"328\":1}}],[\"形式保存在内存中的\",{\"1\":{\"343\":1}}],[\"形式出现\",{\"1\":{\"48\":1}}],[\"叶节点\",{\"1\":{\"328\":1}}],[\"叶子节点\",{\"1\":{\"307\":1}}],[\"≤\",{\"1\":{\"326\":1}}],[\"−1\",{\"1\":{\"326\":1}}],[\"丑数\",{\"0\":{\"321\":1}}],[\"礼物的最大价值\",{\"0\":{\"319\":1}}],[\"几个不同的条件分别会更新\",{\"1\":{\"1142\":1}}],[\"几个状态\",{\"1\":{\"1132\":1}}],[\"几年时间根本不足以跨越通常需要走过的漫长距离\",{\"1\":{\"582\":1}}],[\"几乎恍惚的精神状态\",{\"1\":{\"789\":1}}],[\"几乎不需要沟通\",{\"1\":{\"722\":1}}],[\"几乎有一半的情况下它给出的都是错误答案\",{\"1\":{\"692\":1}}],[\"几乎刷3个其他类的\",{\"1\":{\"631\":1}}],[\"几乎年年发大水\",{\"1\":{\"609\":1}}],[\"几乎损失了我在大学前三年不断增持的大部分资产\",{\"1\":{\"591\":1}}],[\"几乎每天他们都会发一些新事物\",{\"1\":{\"731\":1}}],[\"几乎每天都在图书馆读书\",{\"1\":{\"552\":1}}],[\"几乎每个人一开始都表现糟糕\",{\"1\":{\"581\":1}}],[\"几乎如此\",{\"1\":{\"576\":1}}],[\"几乎只能通过微信\",{\"1\":{\"553\":1}}],[\"几乎就是我们与这个世界的关系\",{\"1\":{\"500\":1}}],[\"几乎没有等待时间\",{\"1\":{\"109\":1}}],[\"几位树的总个数\",{\"1\":{\"317\":1}}],[\"建造者与director之间存在紧密的依赖\",{\"1\":{\"873\":1}}],[\"建造者模式比直接创建复杂对象更加复杂\",{\"1\":{\"873\":1}}],[\"建造者模式的主要缺点\",{\"1\":{\"873\":1}}],[\"建造者模式的主要优点是\",{\"1\":{\"873\":1}}],[\"建造者模式的主要作用有\",{\"1\":{\"872\":1}}],[\"建造者模式是一种创建型设计模式\",{\"1\":{\"871\":1}}],[\"建造者模式\",{\"0\":{\"871\":1}}],[\"建筑遵循需求\",{\"1\":{\"724\":1}}],[\"建\",{\"1\":{\"426\":1}}],[\"建立http连接\",{\"1\":{\"1063\":1}}],[\"建立更深入的人际关系\",{\"1\":{\"581\":1}}],[\"建立套接字连接\",{\"1\":{\"425\":1}}],[\"建立连接时支持所有\",{\"0\":{\"1237\":1}}],[\"建立连接\",{\"1\":{\"349\":1}}],[\"建立一个文本文件\",{\"1\":{\"56\":1}}],[\"建堆的时间复杂度是o\",{\"1\":{\"950\":1}}],[\"建堆就是要维护父节点的值比两个子节点的值大\",{\"1\":{\"950\":1}}],[\"建堆\",{\"1\":{\"313\":1,\"950\":1}}],[\"堆排序对n个数进行heapify\",{\"1\":{\"950\":1}}],[\"堆排序的过程就是\",{\"1\":{\"950\":1}}],[\"堆排序\",{\"0\":{\"950\":1},\"1\":{\"313\":1}}],[\"防止部分\",{\"1\":{\"1142\":1}}],[\"防止多线程并发修改数据\",{\"1\":{\"1137\":1}}],[\"防止其他\",{\"1\":{\"1135\":1}}],[\"防止其他线程对这个表结构做了变更\",{\"1\":{\"367\":1}}],[\"防止索引失效\",{\"1\":{\"353\":2}}],[\"防止为空\",{\"1\":{\"304\":1,\"305\":1}}],[\"防止spam垃圾交易横行\",{\"1\":{\"118\":1}}],[\"序列化二叉树\",{\"0\":{\"310\":1}}],[\"序列\",{\"1\":{\"302\":2}}],[\"弹出序列\",{\"0\":{\"302\":1}}],[\"及以上\",{\"1\":{\"1221\":2}}],[\"及\",{\"1\":{\"301\":1,\"395\":1,\"426\":1}}],[\"俩节点\",{\"1\":{\"297\":1,\"299\":1}}],[\"树木\",{\"1\":{\"789\":1}}],[\"树作为索引\",{\"1\":{\"353\":1}}],[\"树为了维护索引有序性\",{\"1\":{\"350\":1}}],[\"树索引\",{\"1\":{\"341\":1}}],[\"树\",{\"1\":{\"297\":6}}],[\"树的子结构\",{\"0\":{\"297\":1}}],[\"树中节点孩子的数量就是集合的大小\",{\"1\":{\"206\":1}}],[\"合格投资人\",{\"1\":{\"754\":1}}],[\"合理的真相是\",{\"1\":{\"643\":1}}],[\"合理推理\",{\"1\":{\"626\":1}}],[\"合并一次刷盘\",{\"1\":{\"360\":1}}],[\"合并这两个链表并使新链表中的节点仍然是递增排序的\",{\"1\":{\"296\":1}}],[\"合并两个排序的链表\",{\"0\":{\"296\":1}}],[\"合约转移给用户\",{\"1\":{\"169\":2}}],[\"合约中\",{\"1\":{\"169\":2}}],[\"反射是一项强大的功能\",{\"1\":{\"1194\":1}}],[\"反射怎么用\",{\"0\":{\"1187\":1}}],[\"反射允许程序在运行时检查和操作其结构\",{\"1\":{\"1186\":1,\"1194\":1}}],[\"反射就是这样的名词之一\",{\"1\":{\"1186\":1}}],[\"反射包详解\",{\"0\":{\"1186\":1}}],[\"反向存储的线程维护着线程与处理器之间的关系\",{\"1\":{\"1134\":1}}],[\"反向影响成你本不应该成为的样子\",{\"1\":{\"689\":1}}],[\"反而是通过更精细化的函数或者某个类的方法来进行单测\",{\"1\":{\"958\":1}}],[\"反而纷纷去追热门币种\",{\"1\":{\"767\":1}}],[\"反而会影响自己的注意力资产\",{\"1\":{\"734\":1}}],[\"反过来都会影响成不同的样子\",{\"1\":{\"689\":1}}],[\"反思\",{\"1\":{\"586\":2}}],[\"反正都挺令人舒适的\",{\"1\":{\"505\":1}}],[\"反正我已经超过20g了\",{\"1\":{\"494\":1}}],[\"反脆弱\",{\"1\":{\"503\":1,\"528\":1,\"534\":2,\"552\":1,\"669\":1}}],[\"反\",{\"1\":{\"424\":1,\"426\":1}}],[\"反之返回不消费\",{\"1\":{\"1036\":1}}],[\"反之也同样正确\",{\"1\":{\"639\":1}}],[\"反之\",{\"1\":{\"367\":1}}],[\"反之就是代码有问题\",{\"1\":{\"105\":1}}],[\"反转该链表并输出反转后链表的头节点\",{\"1\":{\"295\":1}}],[\"反转链表\",{\"0\":{\"295\":1}}],[\"均支持官方driver支持的所有options\",{\"1\":{\"1222\":1}}],[\"均不匹配\",{\"1\":{\"291\":1}}],[\"均为none\",{\"1\":{\"52\":1}}],[\"含义为每隔duration触发一次会调用time\",{\"1\":{\"1004\":1}}],[\"含义的时候为什么要表示以下标i\",{\"1\":{\"263\":1}}],[\"含\",{\"1\":{\"395\":2,\"426\":1,\"428\":1}}],[\"含根\",{\"1\":{\"328\":1}}],[\"含0次\",{\"1\":{\"291\":1}}],[\"循环遍历\",{\"1\":{\"1163\":1}}],[\"循环释放所有因为获取读锁而陷入等待的\",{\"1\":{\"1143\":1}}],[\"循环二分\",{\"1\":{\"326\":1}}],[\"循环条件\",{\"1\":{\"293\":1,\"300\":1}}],[\"循环逐位判断\",{\"1\":{\"287\":1}}],[\"循环判断\",{\"1\":{\"287\":1}}],[\"右子数组的首元素\",{\"1\":{\"326\":1}}],[\"右子数组的首位元素\",{\"1\":{\"326\":1}}],[\"右子树\",{\"1\":{\"297\":1}}],[\"右边界\",{\"1\":{\"326\":1}}],[\"右大于等于左\",{\"1\":{\"300\":1}}],[\"右移一位\",{\"1\":{\"287\":1}}],[\"右侧\",{\"1\":{\"283\":1}}],[\"汉明重量\",{\"1\":{\"287\":1}}],[\"二十世纪初房地产发展很迅速\",{\"1\":{\"806\":1}}],[\"二十年\",{\"1\":{\"806\":1}}],[\"二十年的趋势吹起来的\",{\"1\":{\"806\":1}}],[\"二十年后逐步展开\",{\"1\":{\"806\":1}}],[\"二十年前的年轻人\",{\"0\":{\"735\":1}}],[\"二十年之后你大概率会对自己的当前的选择失望\",{\"1\":{\"717\":1}}],[\"二\",{\"0\":{\"772\":1}}],[\"二者缺一不可\",{\"1\":{\"610\":1}}],[\"二是频繁的请求会给服务器带来极大的压力\",{\"1\":{\"1073\":1}}],[\"二是如果有人对我写的东西产生质疑\",{\"1\":{\"605\":1}}],[\"二是可用性也很差\",{\"1\":{\"359\":1}}],[\"二选一\",{\"1\":{\"448\":1}}],[\"二叉搜索树的第k大节点\",{\"0\":{\"327\":1}}],[\"二叉搜索树的后序遍历序列\",{\"0\":{\"306\":1}}],[\"二叉搜索树与双向链表\",{\"0\":{\"309\":1}}],[\"二叉树的深度\",{\"0\":{\"328\":1}}],[\"二叉树的镜像\",{\"0\":{\"298\":1}}],[\"二叉树中和为某一值的路径\",{\"0\":{\"307\":1}}],[\"二叉树\",{\"1\":{\"299\":1}}],[\"二分法\",{\"1\":{\"293\":1}}],[\"二进制数据在发送前会进行\",{\"1\":{\"1093\":1,\"1094\":1,\"1095\":1}}],[\"二进制\",{\"1\":{\"287\":2}}],[\"二进制中1的个数\",{\"0\":{\"287\":1}}],[\"二维字符网格\",{\"1\":{\"284\":1}}],[\"二维dp数组中的dp\",{\"1\":{\"236\":1}}],[\"二维dp数组01背包问题\",{\"1\":{\"235\":1}}],[\"二维数组中的查找\",{\"0\":{\"276\":1},\"1\":{\"274\":1}}],[\"二维数组\",{\"0\":{\"235\":1}}],[\"×\",{\"1\":{\"285\":3}}],[\"段\",{\"1\":{\"285\":1,\"286\":1}}],[\"剪绳子\",{\"0\":{\"285\":1,\"286\":1}}],[\"剪枝\",{\"1\":{\"211\":1}}],[\"剪枝操作\",{\"1\":{\"209\":1}}],[\"定时器和计时器\",{\"1\":{\"1213\":1}}],[\"定时器\",{\"0\":{\"1004\":1},\"1\":{\"1135\":2}}],[\"定时器的启动和取消\",{\"1\":{\"998\":1}}],[\"定时任务\",{\"0\":{\"998\":1}}],[\"定时任务是我们经常使用到的库\",{\"1\":{\"997\":1}}],[\"定时把数据库的数据\",{\"1\":{\"381\":1}}],[\"定投改变命运\",{\"1\":{\"502\":1,\"669\":2}}],[\"定格某一时刻的风景\",{\"1\":{\"362\":1}}],[\"定义命令行参数\",{\"1\":{\"1161\":2,\"1162\":1,\"1163\":1}}],[\"定义命令行参数的类型和默认值\",{\"1\":{\"1160\":1}}],[\"定义service服务\",{\"1\":{\"1089\":1}}],[\"定义了什么样的当前状态结合什么输入可以变成什么目标状态\",{\"1\":{\"1009\":1}}],[\"定义了一个执行成功的测试用例和一个执行失败回滚的测试用例\",{\"1\":{\"975\":1}}],[\"定义两个测试用例\",{\"1\":{\"972\":1}}],[\"定义对这些元素的新操作的设计模式\",{\"1\":{\"868\":1}}],[\"定义对象结构类\",{\"1\":{\"867\":1}}],[\"定义作用于这些元素的新操作\",{\"1\":{\"865\":1}}],[\"定义算法接口\",{\"1\":{\"855\":1}}],[\"定义上下文类\",{\"1\":{\"849\":1,\"855\":1}}],[\"定义上来说\",{\"1\":{\"573\":1}}],[\"定义管理者类\",{\"1\":{\"838\":1}}],[\"定义备忘录类\",{\"1\":{\"838\":1}}],[\"定义发起者\",{\"1\":{\"838\":1}}],[\"定义具体访问者类b\",{\"1\":{\"867\":1}}],[\"定义具体访问者类a\",{\"1\":{\"867\":1}}],[\"定义具体元素类b\",{\"1\":{\"867\":1}}],[\"定义具体元素类a\",{\"1\":{\"867\":1}}],[\"定义具体策略类c\",{\"1\":{\"855\":1}}],[\"定义具体策略类b\",{\"1\":{\"855\":1}}],[\"定义具体策略类a\",{\"1\":{\"855\":1}}],[\"定义具体状态类b\",{\"1\":{\"849\":1}}],[\"定义具体状态类a\",{\"1\":{\"849\":1}}],[\"定义具体观察者类b\",{\"1\":{\"844\":1}}],[\"定义具体观察者类a\",{\"1\":{\"844\":1}}],[\"定义具体主题类\",{\"1\":{\"844\":1}}],[\"定义具体中介者类\",{\"1\":{\"833\":1}}],[\"定义具体同事类b\",{\"1\":{\"833\":1}}],[\"定义具体同事类a\",{\"1\":{\"833\":1}}],[\"定义抽象访问者类\",{\"1\":{\"867\":1}}],[\"定义抽象元素类\",{\"1\":{\"867\":1}}],[\"定义抽象策略类\",{\"1\":{\"855\":1}}],[\"定义抽象状态类\",{\"1\":{\"849\":1}}],[\"定义抽象观察者类\",{\"1\":{\"844\":1}}],[\"定义抽象主题类\",{\"1\":{\"844\":1}}],[\"定义抽象中介者类\",{\"1\":{\"833\":1}}],[\"定义抽象同事类\",{\"1\":{\"833\":1}}],[\"定义静态变量时\",{\"1\":{\"457\":1}}],[\"定义常量的命名规则类似c语言\",{\"1\":{\"456\":1}}],[\"定义为8字节只是为了对齐其他消息结构\",{\"1\":{\"435\":1}}],[\"定义栈的数据结构\",{\"1\":{\"301\":1}}],[\"定义一个director结构体\",{\"1\":{\"873\":1}}],[\"定义一个builder接口\",{\"1\":{\"873\":1}}],[\"定义一个minarr\",{\"1\":{\"301\":1}}],[\"定义一个函数\",{\"1\":{\"295\":1}}],[\"定义一个函数删除该节点\",{\"1\":{\"290\":1}}],[\"定义一个虚拟头节点\",{\"1\":{\"294\":1}}],[\"定义一个canfind函数\",{\"1\":{\"284\":1}}],[\"定义\",{\"0\":{\"813\":1,\"819\":1,\"872\":1,\"880\":1,\"888\":1,\"895\":1,\"926\":1},\"1\":{\"287\":1}}],[\"定制镜像\",{\"0\":{\"56\":1},\"1\":{\"56\":1}}],[\"定制变的更为容易\",{\"1\":{\"46\":1}}],[\"矩阵中的路径\",{\"0\":{\"284\":1}}],[\"既可以设置给该\",{\"1\":{\"991\":1}}],[\"既可以快速搜索界面内容\",{\"1\":{\"731\":1}}],[\"既不大于\",{\"1\":{\"283\":1}}],[\"既然可以注册get和post请求方法\",{\"1\":{\"1193\":1}}],[\"既然我们已经了解了接口在运行时的数据结构\",{\"1\":{\"1140\":1}}],[\"既然我能心安理得的提出这些问题\",{\"1\":{\"500\":1}}],[\"既然时间是我们最重要的生产资料\",{\"1\":{\"677\":1}}],[\"既然当下毫无疑问不会是正确的\",{\"1\":{\"528\":1}}],[\"既然决定使用缓存\",{\"1\":{\"387\":1}}],[\"既然备份数据库数据的时候\",{\"1\":{\"364\":1}}],[\"既然只依靠\",{\"1\":{\"358\":1}}],[\"既然递归公式是\",{\"1\":{\"243\":1}}],[\"既然\",{\"1\":{\"58\":1,\"412\":1}}],[\"左侧的block\",{\"1\":{\"511\":1}}],[\"左侧或者就是\",{\"1\":{\"283\":1}}],[\"左闭右开\",{\"1\":{\"468\":1}}],[\"左旋转字符串\",{\"0\":{\"335\":1}}],[\"左子数组的末元素\",{\"1\":{\"326\":1}}],[\"左子数组的末位元素\",{\"1\":{\"326\":1}}],[\"左子树\",{\"1\":{\"297\":1}}],[\"左边界\",{\"1\":{\"326\":1}}],[\"左右的\",{\"1\":{\"166\":1}}],[\"左右的年化\",{\"1\":{\"166\":1}}],[\"左右的年化套利\",{\"1\":{\"166\":1}}],[\"左右\",{\"1\":{\"153\":1}}],[\"首字母\",{\"1\":{\"982\":1}}],[\"首席执行官兼联合创始人\",{\"1\":{\"721\":1}}],[\"首次访问`hashmap`的同时对其进行初始化\",{\"1\":{\"460\":1}}],[\"首尾数字\",{\"1\":{\"283\":1}}],[\"首先查看之前分配的元素中是否还有多余空间\",{\"1\":{\"1150\":1}}],[\"首先介绍服务器端如何发送header和trailer\",{\"1\":{\"1095\":1}}],[\"首先添加\",{\"1\":{\"1079\":1}}],[\"首先然后在server\",{\"1\":{\"1067\":1}}],[\"首先随便选个目录\",{\"1\":{\"1067\":1}}],[\"首先选定一个mock的demo目录\",{\"1\":{\"977\":1}}],[\"首先分配另外一个空间与原数组等长\",{\"1\":{\"948\":1}}],[\"首先认知和知道之间有什么区别吗\",{\"1\":{\"653\":1}}],[\"首先它受我们欲望\",{\"1\":{\"640\":1}}],[\"首先说明注意力在我这里的定义\",{\"1\":{\"610\":1}}],[\"首先关于为什么写作\",{\"1\":{\"605\":1}}],[\"首先是定义\",{\"1\":{\"1186\":1}}],[\"首先是与栈相关的两个字段\",{\"1\":{\"1132\":1}}],[\"首先是初始化gin默认的初始化包含两个中间件\",{\"1\":{\"1050\":1}}],[\"首先是我在\",{\"1\":{\"759\":1}}],[\"首先是按照作者划分\",{\"1\":{\"669\":1}}],[\"首先是广阔的职业前景\",{\"1\":{\"579\":1}}],[\"首先是修改\",{\"1\":{\"377\":1}}],[\"首先支付手段\",{\"1\":{\"551\":1}}],[\"首先反省自己所处的环境\",{\"1\":{\"551\":1}}],[\"首先打开golang的官网\",{\"1\":{\"512\":1}}],[\"首先的首先\",{\"1\":{\"510\":1}}],[\"首先新建一个文件夹\",{\"1\":{\"510\":1}}],[\"首先第一步是要找到最小的那个数\",{\"1\":{\"944\":1}}],[\"首先第一步确定dp数组\",{\"1\":{\"229\":1}}],[\"首先第一个包\",{\"1\":{\"509\":1}}],[\"首先我们之前的文章\",{\"1\":{\"1097\":1}}],[\"首先我们创建一个目录比如说就叫grpc\",{\"1\":{\"1084\":1}}],[\"首先我们先修改一下对应之前的pb\",{\"1\":{\"1080\":1}}],[\"首先我们先说说http\",{\"1\":{\"1072\":1}}],[\"首先我们来搞清楚命令行参数\",{\"1\":{\"991\":1}}],[\"首先我们探讨了资产阶级和生产资料的概念\",{\"1\":{\"649\":1}}],[\"首先我们需要对生命力这个形容词进行一个定义\",{\"1\":{\"614\":1}}],[\"首先我们需要导入所需要的包\",{\"1\":{\"511\":1}}],[\"首先我们可以确定的是\",{\"1\":{\"454\":1}}],[\"首先我们要理解\",{\"1\":{\"60\":1}}],[\"首先bgsave执行期间\",{\"1\":{\"416\":1}}],[\"首先检查该\",{\"1\":{\"414\":1}}],[\"首先修改buffer\",{\"1\":{\"376\":1}}],[\"首先要知道\",{\"1\":{\"1138\":1}}],[\"首先要接受贫富差距是不可避免的\",{\"1\":{\"748\":1}}],[\"首先要认识到\",{\"1\":{\"573\":1}}],[\"首先要记录相应的\",{\"1\":{\"357\":1}}],[\"首先要考虑如下两种操作\",{\"1\":{\"263\":1}}],[\"首先凑足总金额为0所需钱币的个数一定是0\",{\"1\":{\"244\":1}}],[\"首先在回顾一下01背包的核心代码\",{\"1\":{\"241\":1}}],[\"首先从dp\",{\"1\":{\"235\":1}}],[\"首先\",{\"1\":{\"39\":1,\"55\":1,\"58\":1,\"283\":1,\"355\":1,\"467\":1,\"509\":1,\"521\":1,\"587\":1,\"627\":1,\"646\":1,\"647\":1,\"686\":1,\"1088\":2,\"1093\":1}}],[\"旋转数字最小数字\",{\"1\":{\"283\":1}}],[\"旋转数组的最小数字\",{\"0\":{\"283\":1}}],[\"装饰器模式可以在不改变原有对象的情况下\",{\"1\":{\"922\":1}}],[\"装饰器模式在不改变原有对象的基础上\",{\"1\":{\"920\":1}}],[\"装饰器模式\",{\"1\":{\"919\":1}}],[\"装饰模式\",{\"0\":{\"919\":1}}],[\"装入数组\",{\"1\":{\"278\":1}}],[\"装满容量为x背包\",{\"1\":{\"239\":1}}],[\"供http处理时调用\",{\"1\":{\"1055\":1}}],[\"供他人参考\",{\"1\":{\"274\":1}}],[\"供应量\",{\"1\":{\"134\":1}}],[\"觉得有必要把这部分知识补充一下所以特此准备深度研究一下图的知识\",{\"1\":{\"271\":1}}],[\"觉得有必要将学习到的常见借贷协议机制给总结下来\",{\"1\":{\"157\":1}}],[\"调度的两个时机\",{\"1\":{\"1137\":1}}],[\"调度的时机\",{\"1\":{\"1137\":1}}],[\"调度可以看作是一个死循环\",{\"1\":{\"1135\":1}}],[\"调度到当前线程上执行\",{\"1\":{\"1135\":1}}],[\"调度时机\",{\"1\":{\"1135\":3}}],[\"调度策略逻辑如下\",{\"1\":{\"1135\":1}}],[\"调度策略\",{\"1\":{\"1135\":3}}],[\"调度\",{\"1\":{\"1135\":2}}],[\"调度相关的属性\",{\"1\":{\"1135\":1}}],[\"调度器就会唤醒尝试获取写锁的\",{\"1\":{\"1143\":1}}],[\"调度器也会进入锁定状态\",{\"1\":{\"1134\":1}}],[\"调度器的启动过程是我们平时比较难以接触的过程\",{\"1\":{\"1134\":1}}],[\"调度器启动\",{\"1\":{\"1134\":1}}],[\"调度器中的处理器\",{\"1\":{\"1134\":1}}],[\"调度器最多可以创建10000个线程\",{\"1\":{\"1133\":1}}],[\"调度类型的\",{\"1\":{\"271\":1}}],[\"调查\",{\"1\":{\"627\":1}}],[\"调\",{\"1\":{\"424\":1}}],[\"调整数组顺序使奇数位于偶数前面\",{\"0\":{\"293\":1}}],[\"调用结构体持有的\",{\"1\":{\"1143\":1}}],[\"调用方法时都会发生值拷贝\",{\"1\":{\"1138\":1}}],[\"调用时函数依序入栈\",{\"1\":{\"1056\":1}}],[\"调用时就不需要在函数体内部再进行重新声明了\",{\"1\":{\"513\":1}}],[\"调用下一个handlerfunc\",{\"1\":{\"1056\":1}}],[\"调用hello\",{\"1\":{\"1056\":1}}],[\"调用handlers链上的下一个函数\",{\"1\":{\"1055\":1}}],[\"调用middleware包的register方法\",{\"1\":{\"1242\":1}}],[\"调用middlewareb\",{\"1\":{\"1056\":1}}],[\"调用middlewarea\",{\"1\":{\"1056\":1}}],[\"调用在无请求时保持阻塞\",{\"1\":{\"1055\":1}}],[\"调用函数\",{\"1\":{\"976\":1}}],[\"调用我们的业务函数\",{\"1\":{\"973\":2}}],[\"调用其他服务的api\",{\"1\":{\"973\":1}}],[\"调用原有功能\",{\"1\":{\"921\":1}}],[\"调用元素的接受访问者方法\",{\"1\":{\"867\":1}}],[\"调用访问者对自己的访问方法\",{\"1\":{\"867\":2}}],[\"调用执行策略方法\",{\"1\":{\"855\":1}}],[\"调用当前策略对象的算法方法\",{\"1\":{\"855\":1}}],[\"调用当前状态对象的处理方法\",{\"1\":{\"849\":1}}],[\"调用请求方法\",{\"1\":{\"849\":1}}],[\"调用观察者的更新方法\",{\"1\":{\"844\":1}}],[\"调用者执行各种操作\",{\"1\":{\"820\":1}}],[\"调用者可能拥有更多信息或逻辑来决定应该如何处理错误\",{\"1\":{\"450\":1}}],[\"调用接收者的\",{\"1\":{\"820\":3}}],[\"调用了先前的calculatehash函数\",{\"1\":{\"514\":1}}],[\"调用后\",{\"1\":{\"480\":1}}],[\"调用这个函数的代码最终会得到一个包含用户名的\",{\"1\":{\"450\":1}}],[\"调用可能成功并返回一个可以读写的文件句柄\",{\"1\":{\"448\":1}}],[\"调用\",{\"1\":{\"169\":1,\"301\":1,\"449\":1,\"1001\":1,\"1010\":1,\"1135\":1,\"1137\":3,\"1138\":1,\"1143\":3,\"1144\":1,\"1146\":2}}],[\"怎样解决其实不是问题\",{\"1\":{\"533\":1}}],[\"怎能刚开始就全都匹配上了\",{\"1\":{\"267\":1}}],[\"怎么去使用拦截器呢\",{\"1\":{\"1097\":1}}],[\"怎么解决呢\",{\"1\":{\"1071\":1}}],[\"怎么解决出现\",{\"1\":{\"377\":1}}],[\"怎么实现堆排序\",{\"1\":{\"950\":1}}],[\"怎么维护呢\",{\"1\":{\"950\":1}}],[\"怎么插入到前面的位置去呢\",{\"1\":{\"946\":1}}],[\"怎么做呢\",{\"1\":{\"945\":1}}],[\"怎么可能有生命力呢\",{\"1\":{\"614\":1}}],[\"怎么可以将一个局部变量赋值给全局变量\",{\"1\":{\"461\":1}}],[\"怎么都是删除元素\",{\"1\":{\"266\":1}}],[\"怎么生成的镜像\",{\"1\":{\"55\":1}}],[\"综上所述\",{\"1\":{\"424\":1}}],[\"综上\",{\"1\":{\"266\":1}}],[\"增量改变\",{\"1\":{\"956\":1}}],[\"增强对象的重用性和独立性\",{\"1\":{\"832\":1,\"843\":1}}],[\"增强了系统的灵活性\",{\"1\":{\"815\":1}}],[\"增加一年\",{\"1\":{\"1212\":1}}],[\"增加对象的功能性和灵活性\",{\"1\":{\"837\":1}}],[\"增加系统的灵活性和可扩展性\",{\"1\":{\"821\":1}}],[\"增加接收对象的灵活性\",{\"1\":{\"813\":1}}],[\"增加学习成果\",{\"1\":{\"646\":1}}],[\"增加了新的接口适配功能\",{\"1\":{\"906\":1}}],[\"增加了代码的灵活性和适应性\",{\"1\":{\"866\":1}}],[\"增加了代码的复用性和一致性\",{\"1\":{\"866\":1}}],[\"增加了对象的灵活性和适应性\",{\"1\":{\"854\":1}}],[\"增加了对象的灵活性和扩展性\",{\"1\":{\"848\":1}}],[\"增加了系统的灵活性\",{\"1\":{\"826\":1}}],[\"增加了系统复杂度\",{\"1\":{\"412\":1}}],[\"增加了另一个分支\",{\"1\":{\"448\":1}}],[\"增加了哨兵模式\",{\"1\":{\"413\":1}}],[\"增加了\",{\"1\":{\"413\":1}}],[\"增加自己的话题余额\",{\"1\":{\"25\":1}}],[\"增大它的大小可以让\",{\"1\":{\"357\":1}}],[\"增\",{\"1\":{\"266\":1}}],[\"转换时间到特定时区\",{\"1\":{\"1213\":1}}],[\"转换失败\",{\"1\":{\"1198\":2}}],[\"转换为它在\",{\"1\":{\"1200\":4}}],[\"转换为字符串表示形式\",{\"1\":{\"1199\":2}}],[\"转换为一个字符串数组\",{\"1\":{\"1088\":1}}],[\"转换为\",{\"1\":{\"1078\":1}}],[\"转换状态失败\",{\"1\":{\"1011\":2}}],[\"转换\",{\"1\":{\"1009\":1}}],[\"转换成\",{\"1\":{\"266\":1}}],[\"转发给除自己以外的所有同事\",{\"1\":{\"833\":1}}],[\"转发消息\",{\"1\":{\"833\":1}}],[\"转基因食品\",{\"1\":{\"528\":1}}],[\"转义输出一个字符\",{\"1\":{\"483\":1}}],[\"转向\",{\"1\":{\"427\":1}}],[\"转交给操作系统控制写回的时机\",{\"1\":{\"413\":1}}],[\"转移到\",{\"1\":{\"169\":2}}],[\"转移的账户\",{\"1\":{\"134\":1}}],[\"删\",{\"1\":{\"266\":1,\"396\":1}}],[\"删word2\",{\"1\":{\"265\":1}}],[\"删word1\",{\"1\":{\"265\":1}}],[\"删除文档\",{\"0\":{\"1230\":1}}],[\"删除字符串中的所有字符\",{\"1\":{\"480\":1}}],[\"删除字符串中从指定位置开始到结尾的全部字符\",{\"1\":{\"480\":1}}],[\"删除第一个汉字\",{\"1\":{\"480\":1}}],[\"删除并返回字符串中指定位置的字符\",{\"1\":{\"480\":1}}],[\"删除并返回字符串中最后一个字符\",{\"1\":{\"480\":1}}],[\"删除等方法\",{\"1\":{\"476\":1}}],[\"删除锁\",{\"1\":{\"436\":1}}],[\"删除所有与已下线主服务器连接断开超过down\",{\"1\":{\"426\":1}}],[\"删除所有元素\",{\"1\":{\"264\":1}}],[\"删除列表中所有最近五秒内没有回复过领头sentinel的info命令的从服务器\",{\"1\":{\"426\":1}}],[\"删除列表中所有处于下线或者断线状态的从服务器\",{\"1\":{\"426\":1}}],[\"删除一个或多个哈希表字段\",{\"1\":{\"407\":1}}],[\"删除一个字符\",{\"1\":{\"266\":1}}],[\"删除缓存的时间\",{\"1\":{\"384\":1}}],[\"删除缓存对应的方案也有\",{\"1\":{\"384\":1}}],[\"删除缓存\",{\"1\":{\"383\":1,\"384\":1,\"386\":2,\"388\":1}}],[\"删除缓存可以保证一致性吗\",{\"0\":{\"384\":1},\"1\":{\"380\":1}}],[\"删除操作\",{\"1\":{\"368\":1}}],[\"删除链表的节点\",{\"0\":{\"290\":1}}],[\"删除某些字符或者不删除任何字符形成的一个序列\",{\"1\":{\"268\":1}}],[\"删除数据卷\",{\"1\":{\"74\":1}}],[\"删除容器\",{\"0\":{\"71\":1}}],[\"删除了为了编译构建所需要的软件\",{\"1\":{\"58\":1}}],[\"删除镜像\",{\"1\":{\"55\":1}}],[\"删除本地镜像\",{\"0\":{\"55\":1}}],[\"删除\",{\"0\":{\"480\":1},\"1\":{\"47\":1,\"257\":1,\"263\":1,\"266\":2,\"386\":2,\"396\":1,\"417\":1}}],[\"删除前一层文件的操作\",{\"1\":{\"46\":1}}],[\"变回正数\",{\"1\":{\"1143\":1}}],[\"变得更好\",{\"1\":{\"810\":1}}],[\"变更日志\",{\"1\":{\"385\":1}}],[\"变量中\",{\"1\":{\"1163\":1}}],[\"变量的赋值也会触发隐式类型转换\",{\"1\":{\"1138\":1}}],[\"变量能够隐式地获取到指向的结构体\",{\"1\":{\"1138\":1}}],[\"变量在运行期间的类型也会发生变化\",{\"1\":{\"1138\":1}}],[\"变量控制\",{\"1\":{\"1134\":1}}],[\"变量呢\",{\"1\":{\"981\":1}}],[\"变量将会是一个包含了更多关于发生了何种错误的信息的\",{\"1\":{\"448\":1}}],[\"变量将会是一个包含文件句柄的\",{\"1\":{\"448\":1}}],[\"变量\",{\"1\":{\"326\":1,\"956\":1,\"1163\":1,\"1186\":1,\"1194\":1}}],[\"变量有四种不同的可见域\",{\"1\":{\"105\":1}}],[\"变成\",{\"1\":{\"1135\":7}}],[\"变成`\",{\"1\":{\"461\":1}}],[\"变成了\",{\"1\":{\"357\":2}}],[\"变成word1=\",{\"1\":{\"266\":1}}],[\"变成空字符串t\",{\"1\":{\"264\":1}}],[\"变为\",{\"1\":{\"265\":2}}],[\"空\",{\"1\":{\"419\":1}}],[\"空闲页\",{\"1\":{\"377\":1}}],[\"空字符串s\",{\"1\":{\"264\":1}}],[\"空字符串s可以随便删除元素\",{\"1\":{\"264\":1}}],[\"空间预分配\",{\"1\":{\"393\":1,\"402\":1}}],[\"空间是否满足要求\",{\"1\":{\"393\":1,\"402\":1}}],[\"空间或\",{\"1\":{\"377\":1}}],[\"空间不足时\",{\"1\":{\"377\":1}}],[\"空间比较有限的情况下\",{\"1\":{\"377\":1}}],[\"空间复杂度是o\",{\"1\":{\"330\":1,\"948\":1}}],[\"空间分配\",{\"1\":{\"112\":1}}],[\"空间\",{\"1\":{\"47\":1}}],[\"种类\",{\"1\":{\"1188\":3}}],[\"种状态\",{\"1\":{\"1132\":1}}],[\"种植农作物\",{\"1\":{\"646\":1}}],[\"种\",{\"1\":{\"384\":1}}],[\"种格式类型\",{\"1\":{\"358\":1}}],[\"种可以从\",{\"1\":{\"264\":1}}],[\"种方法变成dp\",{\"1\":{\"239\":1}}],[\"种方法\",{\"1\":{\"239\":1,\"243\":1}}],[\"题目数据保证答案符合\",{\"1\":{\"264\":1}}],[\"题目中的1\",{\"1\":{\"239\":1}}],[\"出生在沙漠\",{\"1\":{\"746\":1}}],[\"出生在热带雨林的人可以随意捡果子吃\",{\"1\":{\"746\":1}}],[\"出淤泥而不染的是莲花\",{\"1\":{\"689\":1}}],[\"出演的所有电影\",{\"1\":{\"643\":1}}],[\"出自其个人自身还是外在的\",{\"1\":{\"626\":1}}],[\"出了这样的事情我也损失很大\",{\"1\":{\"592\":1}}],[\"出色的网站80\",{\"1\":{\"585\":1}}],[\"出去吃饭\",{\"1\":{\"505\":1}}],[\"出\",{\"1\":{\"426\":1}}],[\"出现的位置\",{\"1\":{\"447\":1}}],[\"出现的次数\",{\"0\":{\"316\":1}}],[\"出现的个数\",{\"1\":{\"264\":1}}],[\"出现以j\",{\"1\":{\"264\":1}}],[\"出现空字符串的个数就是1\",{\"1\":{\"264\":1}}],[\"出现空字符串的个数\",{\"1\":{\"264\":1}}],[\"出售这些商品的大多数人反过来被雇佣\",{\"1\":{\"648\":1}}],[\"出售\",{\"1\":{\"94\":1,\"703\":1}}],[\"整体对象包含部分对象\",{\"1\":{\"914\":1}}],[\"整体\",{\"1\":{\"914\":1}}],[\"整体层次结构\",{\"1\":{\"914\":1}}],[\"整体上是两种\",{\"1\":{\"267\":1}}],[\"整理了一下之前的博客内容就放上去了\",{\"1\":{\"660\":1}}],[\"整理如下\",{\"1\":{\"263\":1,\"1135\":1}}],[\"整个函数在patchconvey局部函数作用域里\",{\"1\":{\"958\":1}}],[\"整个地球上的生态都受气候危机的影响\",{\"1\":{\"609\":1}}],[\"整个世界好像都开始了一次大混沌时代\",{\"1\":{\"609\":1}}],[\"整个社会其实已经没有多少进步的动力了\",{\"1\":{\"533\":1}}],[\"整个互联网的虚拟世界完全不可见\",{\"1\":{\"532\":1}}],[\"整个代码库都可以识别到\",{\"1\":{\"454\":1}}],[\"整个事务也会继续执行下去\",{\"1\":{\"424\":1}}],[\"整个数据库就处于只读状态了\",{\"1\":{\"364\":1}}],[\"整个字符串\",{\"1\":{\"291\":1}}],[\"整数类型的命令行参数用于表示整数值\",{\"1\":{\"1161\":1}}],[\"整数类型\",{\"1\":{\"1161\":1}}],[\"整数除法\",{\"1\":{\"950\":1}}],[\"整数集合需要先进行升级\",{\"1\":{\"398\":1}}],[\"整数集合是集合键的实现之一\",{\"1\":{\"398\":1}}],[\"整数集合\",{\"0\":{\"398\":1},\"1\":{\"398\":1}}],[\"整数中\",{\"0\":{\"316\":1}}],[\"整数拆分\",{\"0\":{\"231\":1}}],[\"整数\",{\"1\":{\"117\":1,\"292\":3,\"1143\":1}}],[\"应用提供可扩展的高性能数据存储解决方案\",{\"1\":{\"1217\":1}}],[\"应用场景\",{\"1\":{\"1073\":1}}],[\"应用场景不正确\",{\"0\":{\"800\":1}}],[\"应用和服务\",{\"1\":{\"646\":1}}],[\"应用和创造能力的人们成为了新时代的知识阶级\",{\"1\":{\"646\":1}}],[\"应对策略\",{\"0\":{\"789\":1}}],[\"应当这样来高度评估你的信念\",{\"1\":{\"657\":1}}],[\"应当返回一个元素\",{\"1\":{\"447\":1}}],[\"应\",{\"1\":{\"426\":1,\"433\":1}}],[\"应为nums\",{\"1\":{\"262\":1}}],[\"应该依赖抽象\",{\"1\":{\"982\":1}}],[\"应该更好用一点\",{\"1\":{\"948\":1}}],[\"应该可以一次研究一个模块的系统\",{\"1\":{\"722\":1}}],[\"应该可以\",{\"1\":{\"722\":1}}],[\"应该可以大概了解函数的主要作用\",{\"1\":{\"511\":1}}],[\"应该避免去考公\",{\"0\":{\"717\":1}}],[\"应该也能引起大众的注意了\",{\"1\":{\"609\":1}}],[\"应该被视为有希望的实力\",{\"1\":{\"583\":1}}],[\"应该选所得现金最大的\",{\"1\":{\"252\":1}}],[\"应该担心计算的过程中向下取整有没有影响\",{\"1\":{\"239\":1}}],[\"应该是gap\",{\"1\":{\"947\":1}}],[\"应该是1\",{\"1\":{\"264\":1}}],[\"应该是多少\",{\"1\":{\"264\":1}}],[\"应该是多少呢\",{\"1\":{\"260\":1,\"262\":1}}],[\"应该是value\",{\"1\":{\"235\":1}}],[\"应该是\",{\"1\":{\"235\":1}}],[\"应该会将\",{\"1\":{\"60\":1}}],[\"应该将它们复制到上下文目录中去\",{\"1\":{\"60\":1}}],[\"应该先将它们删除\",{\"1\":{\"55\":1}}],[\"先加入的会先被唤醒\",{\"1\":{\"1146\":1}}],[\"先向\",{\"1\":{\"1136\":1}}],[\"先入先出\",{\"1\":{\"1136\":1}}],[\"先从\",{\"1\":{\"1135\":1,\"1136\":1}}],[\"先返回\",{\"1\":{\"1135\":1}}],[\"先来讲一讲\",{\"1\":{\"1093\":1}}],[\"先来看\",{\"1\":{\"384\":1}}],[\"先把最基础的学会了\",{\"1\":{\"1084\":1}}],[\"先把插入排序超过来\",{\"1\":{\"947\":1}}],[\"先把日志写到\",{\"1\":{\"358\":1}}],[\"先说最终原因\",{\"1\":{\"717\":1}}],[\"先说说第一点人权\",{\"1\":{\"551\":1}}],[\"先成为一个创作者然后再是创业者\",{\"1\":{\"663\":1}}],[\"先成为创作者然后再是创业者\",{\"1\":{\"663\":2}}],[\"先想象它们\",{\"1\":{\"639\":1}}],[\"先做个简单的说明\",{\"1\":{\"569\":1}}],[\"先去学习正确学习的方法\",{\"1\":{\"525\":1}}],[\"先去申请分布式锁\",{\"1\":{\"383\":1}}],[\"先这么告一段落\",{\"1\":{\"505\":1}}],[\"先给锁设置一个超时时间\",{\"1\":{\"436\":1}}],[\"先比较\",{\"1\":{\"436\":1}}],[\"先进先出\",{\"1\":{\"425\":1}}],[\"先将命令写入到\",{\"1\":{\"413\":2}}],[\"先将前k个元素放入队列\",{\"1\":{\"336\":1}}],[\"先\",{\"1\":{\"386\":1}}],[\"先删除缓存\",{\"1\":{\"384\":5,\"386\":2,\"388\":1}}],[\"先不考虑并发问题\",{\"1\":{\"382\":1}}],[\"先更新free\",{\"1\":{\"393\":1,\"402\":1}}],[\"先更新数据库\",{\"1\":{\"382\":1,\"383\":1,\"384\":3,\"385\":1,\"386\":2,\"388\":2}}],[\"先更新缓存\",{\"1\":{\"382\":1,\"383\":1}}],[\"先会加上表级别的意向独占锁\",{\"1\":{\"368\":1}}],[\"先执行\",{\"1\":{\"362\":1}}],[\"先看看dp\",{\"1\":{\"260\":1}}],[\"先遍历背包\",{\"1\":{\"235\":1}}],[\"先遍历\",{\"1\":{\"235\":1}}],[\"外部系统是几个定时器\",{\"1\":{\"1009\":1}}],[\"外部合约可看\",{\"1\":{\"105\":1}}],[\"外观模式通过提供一个简单的接口用来访问复杂系统\",{\"1\":{\"928\":1}}],[\"外观模式会与多种组件进一步地进行沟通\",{\"1\":{\"927\":1}}],[\"外观模式可以更清楚地定义访问系统不同层次的入口\",{\"1\":{\"926\":1}}],[\"外观模式提供了一个更高级\",{\"1\":{\"926\":1}}],[\"外观模式提供了一个高层次的接口\",{\"1\":{\"926\":1}}],[\"外观模式用于定义一个高层接口\",{\"1\":{\"926\":1}}],[\"外观模式\",{\"0\":{\"925\":1},\"1\":{\"925\":1}}],[\"外卖\",{\"1\":{\"709\":1}}],[\"外科医生在做手术时\",{\"1\":{\"643\":1}}],[\"外层for循环遍历b\",{\"1\":{\"259\":1}}],[\"外层for循环遍历a\",{\"1\":{\"259\":1}}],[\"思想是把它当作俩半截数组来排序\",{\"1\":{\"948\":1}}],[\"思维模式更容易受我们自己掌控而去更容易受我们影响\",{\"1\":{\"673\":1}}],[\"思路是链表头节点是最近使用的\",{\"1\":{\"377\":1}}],[\"思路只能向右向下\",{\"1\":{\"319\":1}}],[\"思路其实是差不多的\",{\"1\":{\"268\":1}}],[\"思路\",{\"1\":{\"257\":1,\"321\":1}}],[\"思考质量决定人生质量\",{\"1\":{\"735\":1}}],[\"思考如何做出用户愿意使用的产品是最为关键的\",{\"1\":{\"698\":1}}],[\"思考的效率和质量都会提升\",{\"1\":{\"632\":1}}],[\"思考有两大类\",{\"1\":{\"626\":1}}],[\"思考是以解决问题\",{\"1\":{\"626\":1}}],[\"思考过程以及我是如何进步的\",{\"1\":{\"605\":1}}],[\"思考一下该职业的当前职业板块情况\",{\"1\":{\"584\":1}}],[\"思考快与慢\",{\"1\":{\"503\":1}}],[\"思考\",{\"0\":{\"13\":1}}],[\"冷冻期\",{\"1\":{\"256\":1}}],[\"笔交易\",{\"1\":{\"255\":1}}],[\"笔记\",{\"0\":{\"84\":1,\"86\":1},\"2\":{\"87\":1}}],[\"沿用前一天卖出股票的状态\",{\"1\":{\"254\":1}}],[\"状态state\",{\"1\":{\"1142\":1}}],[\"状态下\",{\"1\":{\"1135\":1}}],[\"状态从\",{\"1\":{\"1135\":2}}],[\"状态改为\",{\"1\":{\"1135\":2}}],[\"状态转换的输入条件很简单\",{\"1\":{\"1009\":1}}],[\"状态转换是受限的\",{\"1\":{\"1009\":1}}],[\"状态转移方程\",{\"1\":{\"235\":1,\"257\":1}}],[\"状态转移公式\",{\"1\":{\"224\":1}}],[\"状态模式适用于对象的行为取决于其状态\",{\"1\":{\"850\":1}}],[\"状态模式是一种将对象的行为与其内部状态关联的设计模式\",{\"1\":{\"850\":1}}],[\"状态模式是一种行为型设计模式\",{\"1\":{\"848\":1}}],[\"状态模式可以避免使用大量的条件分支语句\",{\"1\":{\"848\":1}}],[\"状态模式可以实现对象状态和行为的动态切换\",{\"1\":{\"848\":1}}],[\"状态模式可以实现对象状态和行为的封装\",{\"1\":{\"848\":1}}],[\"状态模式的优点有以下几种\",{\"1\":{\"848\":1}}],[\"状态模式的用法有以下几种\",{\"1\":{\"848\":1}}],[\"状态模式将对象的状态和行为分离\",{\"1\":{\"848\":1}}],[\"状态模式\",{\"0\":{\"848\":1}}],[\"状态的\",{\"1\":{\"360\":1}}],[\"状态设置为\",{\"1\":{\"360\":1}}],[\"状态\",{\"1\":{\"254\":1,\"360\":1,\"1009\":7,\"1132\":1,\"1134\":1,\"1135\":1}}],[\"向打开的文件句柄中写入内容\",{\"1\":{\"1169\":1}}],[\"向标准输出写入内容\",{\"1\":{\"1169\":3}}],[\"向他人传授知识并获得收入\",{\"1\":{\"646\":1}}],[\"向他们描述你从反思中获得的见解\",{\"1\":{\"586\":1}}],[\"向情爱的挑逗\",{\"1\":{\"505\":1}}],[\"向一个节点发送命令\",{\"1\":{\"433\":1}}],[\"向源节点发送命令\",{\"1\":{\"432\":1}}],[\"向目标节点发送命令\",{\"1\":{\"432\":1}}],[\"向clusternode结构的指针\",{\"1\":{\"428\":1}}],[\"向节点b发送一条meet消息\",{\"1\":{\"427\":1}}],[\"向\",{\"1\":{\"426\":3,\"431\":1,\"432\":2,\"434\":1,\"1137\":3}}],[\"向服务器发送以下命令\",{\"1\":{\"426\":1}}],[\"向主服务器和从服务器发送信息\",{\"1\":{\"426\":1}}],[\"向主服务器发送命令\",{\"1\":{\"425\":1}}],[\"向主服务器发送从服务器的监听端口号\",{\"1\":{\"425\":1}}],[\"向sentinel\",{\"1\":{\"426\":1}}],[\"向有序集合添加一个或多个成员\",{\"1\":{\"410\":1}}],[\"向集合添加一个或多个成员\",{\"1\":{\"409\":1}}],[\"向该表插入一条\",{\"1\":{\"374\":1}}],[\"向右边取最大利润\",{\"1\":{\"252\":1}}],[\"向左取最小值\",{\"1\":{\"252\":1}}],[\"贪心\",{\"1\":{\"252\":1}}],[\"天时间\",{\"1\":{\"771\":1}}],[\"天时间找到一个新雇主为你的签证提供担保\",{\"1\":{\"751\":1}}],[\"天气很灰尘\",{\"1\":{\"609\":1}}],[\"天天输入垃圾信息源\",{\"1\":{\"605\":1}}],[\"天赋确实很重要\",{\"1\":{\"581\":1}}],[\"天赋人权在维基百科上指不可剥夺的权利\",{\"1\":{\"551\":1}}],[\"天然气等等这些所谓的不可再生资源是有解决方案的\",{\"1\":{\"500\":1}}],[\"天的股票价格\",{\"1\":{\"256\":1}}],[\"天的价格\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1}}],[\"天接连购买股票\",{\"1\":{\"253\":1}}],[\"天和第\",{\"1\":{\"253\":1}}],[\"天\",{\"1\":{\"252\":2,\"253\":6,\"254\":4,\"256\":1}}],[\"输入的proto文件是在当前目录下的pb目录\",{\"1\":{\"1084\":1}}],[\"输入mockgen查看是否下载在$gopath\",{\"1\":{\"977\":1}}],[\"输入什么样的内容\",{\"1\":{\"689\":1}}],[\"输入string类型\",{\"1\":{\"468\":1}}],[\"输入输出缓冲区\",{\"1\":{\"427\":1}}],[\"输入缓冲区\",{\"1\":{\"427\":1}}],[\"输入缓冲区和输出缓冲区\",{\"1\":{\"427\":1}}],[\"输入n\",{\"1\":{\"337\":1}}],[\"输入字符串\",{\"1\":{\"335\":1}}],[\"输入字符串可以在前面或者后面包含多余的空格\",{\"1\":{\"333\":1,\"334\":1}}],[\"输入一棵二叉树的根节点\",{\"1\":{\"328\":1,\"329\":1}}],[\"输入一个英文句子\",{\"1\":{\"333\":1,\"334\":1}}],[\"输入一个递增排序的数组和一个数字s\",{\"1\":{\"332\":1}}],[\"输入一个数组\",{\"1\":{\"323\":1}}],[\"输入一个整数\",{\"1\":{\"316\":1}}],[\"输入一个整数数组\",{\"1\":{\"293\":1,\"306\":1}}],[\"输入一个整型数组\",{\"1\":{\"315\":1}}],[\"输入一个字符串\",{\"1\":{\"311\":1}}],[\"输入一个矩阵\",{\"1\":{\"300\":1}}],[\"输入一个二叉树\",{\"1\":{\"298\":1}}],[\"输入一个链表\",{\"1\":{\"294\":1}}],[\"输入一个链表的头节点\",{\"1\":{\"278\":1,\"295\":1}}],[\"输入12\",{\"1\":{\"316\":1}}],[\"输入4\",{\"1\":{\"313\":1}}],[\"输入整数数组\",{\"1\":{\"313\":1}}],[\"输入两个整数序列\",{\"1\":{\"302\":1}}],[\"输入两个递增排序的链表\",{\"1\":{\"296\":1}}],[\"输入两棵二叉树a和b\",{\"1\":{\"297\":1}}],[\"输入数字\",{\"1\":{\"289\":1}}],[\"输入是一个无符号整数\",{\"1\":{\"287\":1}}],[\"输入某二叉树的前序遍历和中序遍历的结果\",{\"1\":{\"279\":1}}],[\"输入这样的一个二维数组和一个整数\",{\"1\":{\"276\":1}}],[\"输入\",{\"1\":{\"252\":2,\"253\":3,\"254\":1,\"256\":1,\"257\":1,\"259\":1,\"260\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"268\":1,\"275\":1,\"277\":1,\"278\":1,\"280\":1,\"284\":1,\"285\":2,\"288\":3,\"289\":1,\"290\":2,\"291\":2,\"293\":1,\"295\":1,\"296\":1,\"297\":2,\"298\":1,\"299\":2,\"300\":2,\"302\":2,\"306\":2,\"307\":1,\"311\":1,\"312\":1,\"313\":2,\"315\":1,\"316\":2,\"317\":2,\"318\":1,\"319\":1,\"320\":2,\"321\":1,\"322\":2,\"323\":1,\"325\":2,\"326\":2,\"327\":2,\"330\":2,\"331\":2,\"332\":2,\"333\":3,\"334\":2,\"335\":2,\"336\":1,\"337\":2,\"1009\":1,\"1171\":2,\"1172\":1}}],[\"输出在文件里的详细信息\",{\"1\":{\"1181\":1}}],[\"输出解析后的命令行参数\",{\"1\":{\"1161\":1,\"1162\":1,\"1163\":1}}],[\"输出go文件\",{\"1\":{\"1084\":1}}],[\"输出引入的person的包就叫这个包\",{\"1\":{\"1084\":1}}],[\"输出的内容为\",{\"1\":{\"1169\":1}}],[\"输出的\",{\"1\":{\"1084\":1}}],[\"输出结果\",{\"1\":{\"827\":1,\"855\":1,\"867\":1,\"1161\":1}}],[\"输出结果可以用\",{\"1\":{\"66\":1}}],[\"输出中的每个json元素将以新行开始\",{\"1\":{\"516\":1}}],[\"输出如下\",{\"1\":{\"485\":1,\"486\":1}}],[\"输出缓冲区\",{\"1\":{\"427\":1}}],[\"输出该链表中倒数第k个节点\",{\"1\":{\"294\":1}}],[\"输出\",{\"1\":{\"60\":1,\"252\":2,\"253\":3,\"254\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"268\":1,\"275\":1,\"277\":1,\"278\":1,\"280\":1,\"284\":1,\"285\":2,\"288\":3,\"289\":1,\"290\":2,\"291\":2,\"293\":1,\"295\":1,\"296\":1,\"297\":2,\"298\":1,\"299\":2,\"300\":2,\"302\":2,\"306\":2,\"307\":1,\"311\":1,\"312\":1,\"313\":2,\"315\":1,\"316\":2,\"317\":2,\"318\":1,\"319\":1,\"320\":2,\"321\":1,\"322\":2,\"323\":1,\"325\":2,\"326\":2,\"327\":2,\"330\":2,\"331\":2,\"332\":2,\"333\":3,\"334\":2,\"335\":2,\"336\":1,\"337\":2,\"483\":1,\"833\":1,\"844\":1,\"849\":1,\"905\":1,\"915\":1,\"978\":1,\"1010\":1,\"1167\":1,\"1168\":1,\"1171\":2,\"1172\":1,\"1173\":5,\"1178\":1,\"1180\":1,\"1182\":1,\"1188\":4,\"1189\":6,\"1190\":1,\"1192\":1,\"1198\":5,\"1199\":2,\"1200\":4,\"1206\":1,\"1212\":1}}],[\"示例用法\",{\"1\":{\"1200\":4}}],[\"示例函数\",{\"1\":{\"966\":1}}],[\"示例代码如下\",{\"1\":{\"480\":1,\"482\":1}}],[\"示例展示了与你看到类似的输出\",{\"1\":{\"447\":1}}],[\"示例1\",{\"1\":{\"296\":1,\"315\":1}}],[\"示例\",{\"0\":{\"814\":1,\"820\":1,\"827\":1,\"833\":1,\"838\":1,\"844\":1,\"855\":1,\"861\":1,\"867\":1,\"921\":1,\"933\":1,\"939\":1},\"1\":{\"252\":2,\"253\":3,\"254\":1,\"256\":1,\"276\":1,\"279\":2,\"285\":2,\"288\":3,\"290\":2,\"297\":2,\"298\":1,\"299\":2,\"300\":2,\"301\":1,\"302\":2,\"306\":2,\"311\":1,\"312\":1,\"313\":2,\"316\":2,\"317\":2,\"318\":1,\"319\":1,\"320\":2,\"321\":1,\"322\":2,\"323\":1,\"325\":2,\"326\":2,\"327\":2,\"329\":2,\"330\":2,\"331\":2,\"332\":2,\"333\":3,\"334\":2,\"335\":2,\"336\":1,\"337\":2,\"1153\":3,\"1161\":4,\"1162\":1,\"1182\":1,\"1198\":4,\"1199\":2,\"1206\":1}}],[\"卖掉所有东西\",{\"1\":{\"703\":1}}],[\"卖豪车的和在街边摊的卖货的\",{\"1\":{\"689\":1}}],[\"卖课作为一种销售知识的商业模式更具优势\",{\"1\":{\"649\":1}}],[\"卖课的人首先需要能够生产知识或传授知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"卖课就意味着销售知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"卖课和卖广告都可以获得收益\",{\"1\":{\"647\":1,\"686\":1}}],[\"卖广告面临明显的天花板\",{\"1\":{\"647\":1,\"686\":1}}],[\"卖货\",{\"1\":{\"634\":1}}],[\"卖出\",{\"1\":{\"256\":2}}],[\"卖出股票后\",{\"1\":{\"256\":1}}],[\"卖出该股票\",{\"1\":{\"252\":1}}],[\"卖不出去产品就没有存活下去的机会\",{\"1\":{\"10\":1}}],[\"买家满意\",{\"1\":{\"1009\":1}}],[\"买家签收后进入\",{\"1\":{\"1009\":1}}],[\"买家签收成功输入则进入下一个状态\",{\"1\":{\"1009\":1}}],[\"买家不在家之类的情况\",{\"1\":{\"1009\":1}}],[\"买个好看的表\",{\"1\":{\"754\":1}}],[\"买个帅气的车\",{\"1\":{\"754\":1}}],[\"买个更大的房子\",{\"1\":{\"754\":1}}],[\"买车在我看来也是错误的决策\",{\"1\":{\"717\":1}}],[\"买车\",{\"1\":{\"717\":1}}],[\"买入国债\",{\"1\":{\"528\":1}}],[\"买入股票的状态\",{\"1\":{\"254\":1}}],[\"买入\",{\"1\":{\"252\":1,\"256\":2}}],[\"买入这只股票\",{\"1\":{\"252\":1}}],[\"买卖股票的最佳时机iv\",{\"0\":{\"255\":1}}],[\"买卖股票的最佳时机iii\",{\"0\":{\"254\":1}}],[\"买卖股票的最佳时机ii\",{\"0\":{\"253\":1}}],[\"买卖股票的最佳时机\",{\"0\":{\"252\":1}}],[\"买卖双方的规模足够大\",{\"1\":{\"8\":1}}],[\"今天我也体会到了这种感受\",{\"1\":{\"767\":1}}],[\"今天我们就来说一说滚动数组\",{\"1\":{\"236\":1}}],[\"今天下午选择吃什么饭这种选择几乎对命运没什么影响\",{\"1\":{\"666\":1}}],[\"今天是6\",{\"1\":{\"660\":1}}],[\"今天大部分的消费都是花在广告上的巨额资金和媒体曝光驱动的\",{\"1\":{\"648\":1}}],[\"今天的世界上\",{\"1\":{\"648\":1}}],[\"今天的世界由数以千计的选择组成\",{\"1\":{\"579\":1}}],[\"今天突发奇想\",{\"1\":{\"631\":1}}],[\"今天继续读\",{\"1\":{\"626\":1}}],[\"今天重新读了下\",{\"1\":{\"618\":1}}],[\"今天\",{\"1\":{\"579\":1}}],[\"今天保持持有的状态\",{\"1\":{\"252\":1}}],[\"今晚能够偷窃到的最高金额\",{\"1\":{\"249\":1}}],[\"计时器\",{\"1\":{\"1204\":1,\"1205\":1}}],[\"计数器的归零\",{\"1\":{\"1144\":1}}],[\"计数器\",{\"1\":{\"1137\":1}}],[\"计划偷窃沿街的房屋\",{\"1\":{\"249\":1}}],[\"计算两个时间之间的间隔\",{\"1\":{\"1205\":1}}],[\"计算和\",{\"1\":{\"1161\":1}}],[\"计算了新的互斥锁状态之后\",{\"1\":{\"1142\":1}}],[\"计算互斥锁的最新状态\",{\"1\":{\"1142\":1}}],[\"计算出下一个可以存储数据的位置\",{\"1\":{\"1137\":1}}],[\"计算用户年龄\",{\"1\":{\"978\":1}}],[\"计算机\",{\"1\":{\"910\":1}}],[\"计算机网络\",{\"1\":{\"670\":1}}],[\"计算机网络自顶向下方法\",{\"1\":{\"504\":1}}],[\"计算机技术\",{\"0\":{\"670\":1}}],[\"计算机可以读取以往数据\",{\"1\":{\"551\":1}}],[\"计算机能替代人的绝大部分人类的工作\",{\"1\":{\"551\":1}}],[\"计算的结果是\",{\"1\":{\"437\":1}}],[\"计算键属于哪个槽\",{\"1\":{\"429\":1}}],[\"计算一个\",{\"1\":{\"413\":1}}],[\"计算给定的一个或多个有序集的并集\",{\"1\":{\"410\":1}}],[\"计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合\",{\"1\":{\"410\":1}}],[\"计算给定字符串中\",{\"1\":{\"403\":1}}],[\"计算哈希值的函数\",{\"1\":{\"395\":1}}],[\"计算\",{\"1\":{\"383\":1}}],[\"计算中点\",{\"1\":{\"326\":1}}],[\"计算该最长子字符串的长度\",{\"1\":{\"320\":1}}],[\"计算在有序集合中指定区间分数的成员数\",{\"1\":{\"410\":1}}],[\"计算在\",{\"1\":{\"264\":1}}],[\"计算你\",{\"1\":{\"249\":1}}],[\"计算利率累积状态变化\",{\"1\":{\"152\":1}}],[\"计算时间差\",{\"1\":{\"152\":1}}],[\"计算保险费用的年利率\",{\"1\":{\"152\":1}}],[\"计算组费用的年利率\",{\"1\":{\"152\":1}}],[\"计算基础利率\",{\"1\":{\"152\":1}}],[\"计算总的利率费用和总的固定年利率费用\",{\"1\":{\"152\":1}}],[\"计算成本\",{\"1\":{\"121\":1}}],[\"计算单元会被链上执行的每条指令\",{\"1\":{\"121\":1}}],[\"计算单元\",{\"0\":{\"121\":1},\"1\":{\"121\":1}}],[\"计算单元限制\",{\"0\":{\"122\":1},\"1\":{\"119\":1,\"122\":1}}],[\"计算预算\",{\"0\":{\"119\":1},\"1\":{\"119\":1}}],[\"找不到配置文件\",{\"1\":{\"446\":1}}],[\"找到变量\",{\"1\":{\"990\":1}}],[\"找到要移除的元素\",{\"1\":{\"867\":1}}],[\"找到要移除的观察者\",{\"1\":{\"844\":1}}],[\"找到它的设置\",{\"1\":{\"578\":1}}],[\"找到这一行\",{\"1\":{\"355\":1}}],[\"找到后再翻到对应的页\",{\"1\":{\"350\":1}}],[\"找到最长且\",{\"1\":{\"258\":1}}],[\"找到其中最长严格递增子序列的长度\",{\"1\":{\"257\":1}}],[\"找到若干个完全平方数\",{\"1\":{\"245\":1}}],[\"找出客户端发送\",{\"1\":{\"423\":1}}],[\"找出其中最小的\",{\"1\":{\"313\":1}}],[\"找出其中最长的回文子序列\",{\"1\":{\"268\":1}}],[\"找出所有\",{\"1\":{\"307\":1}}],[\"找出数组中重复的数字\",{\"1\":{\"275\":1}}],[\"找出\",{\"1\":{\"248\":1}}],[\"单点登录是当今广泛使用\",{\"1\":{\"1047\":1}}],[\"单一职责原则\",{\"1\":{\"982\":1}}],[\"单元测试通过\",{\"1\":{\"975\":1}}],[\"单元测试的示例代码如下\",{\"1\":{\"972\":1}}],[\"单元测试函数\",{\"1\":{\"966\":1}}],[\"单元格是那些水平相邻或垂直相邻的单元格\",{\"1\":{\"284\":1}}],[\"单测函数\",{\"0\":{\"967\":1}}],[\"单测离不开go\",{\"1\":{\"966\":1}}],[\"单测\",{\"0\":{\"966\":1,\"1288\":1},\"1\":{\"967\":1}}],[\"单测总结\",{\"0\":{\"965\":1,\"1289\":1}}],[\"单例模式是一种常用的设计模式\",{\"1\":{\"900\":1}}],[\"单例模式是一种创建型设计模式\",{\"1\":{\"895\":1}}],[\"单例模式将数据和控制逻辑耦合在一起\",{\"1\":{\"899\":1}}],[\"单例模式可能成为系统的瓶颈\",{\"1\":{\"899\":1}}],[\"单例模式也存在一些缺点\",{\"1\":{\"899\":1}}],[\"单例模式的主要用处包括\",{\"1\":{\"896\":1}}],[\"单例模式通常用于管理系统资源\",{\"1\":{\"895\":1}}],[\"单例模式\",{\"0\":{\"894\":1}}],[\"单体架构\",{\"0\":{\"724\":1}}],[\"单位小时\",{\"1\":{\"500\":1}}],[\"单位为lamports\",{\"1\":{\"111\":1}}],[\"单纯使用gossip协议来传播节点的已下线信息会给节点的信息更新带来一定延迟\",{\"1\":{\"435\":1}}],[\"单事务\",{\"1\":{\"360\":1}}],[\"单层逻辑\",{\"1\":{\"299\":1}}],[\"单层执行逻辑\",{\"1\":{\"298\":1}}],[\"单词中的字母已标出\",{\"1\":{\"284\":1}}],[\"单词必须按照字母顺序\",{\"1\":{\"284\":1}}],[\"单词拆分\",{\"0\":{\"246\":1}}],[\"凑足总额为j\",{\"1\":{\"244\":1}}],[\"凑足总额为j所需钱币的最少个数为dp\",{\"1\":{\"244\":1}}],[\"凑成总金额j的货币组合数为dp\",{\"1\":{\"242\":1}}],[\"爬到有i个台阶的楼顶\",{\"1\":{\"243\":1}}],[\"爬楼梯每爬一次楼梯\",{\"1\":{\"227\":1}}],[\"爬楼梯\",{\"0\":{\"227\":1,\"243\":1}}],[\"问一些简单的问题\",{\"1\":{\"739\":1}}],[\"问问你自己是否其他的第一反应获取更合适\",{\"1\":{\"623\":1}}],[\"问问自己\",{\"1\":{\"584\":1}}],[\"问号群体面临着一个艰难的选择\",{\"1\":{\"585\":1}}],[\"问号运算符来使其更易于处理\",{\"1\":{\"450\":1}}],[\"问题是被动学习具有严重缺陷\",{\"1\":{\"654\":1}}],[\"问题是你跳跃使命的冲动是真正的进化结果\",{\"1\":{\"588\":1}}],[\"问题在于\",{\"1\":{\"573\":1}}],[\"问题又来了\",{\"1\":{\"462\":1}}],[\"问题2\",{\"1\":{\"386\":1}}],[\"问题1\",{\"1\":{\"386\":1}}],[\"问题\",{\"1\":{\"384\":1,\"387\":1,\"399\":1,\"626\":1,\"1045\":1}}],[\"问有多少种不同的方法可以爬到楼顶呢\",{\"1\":{\"243\":1}}],[\"问背包能背的物品最大价值是多少\",{\"1\":{\"235\":1,\"241\":1}}],[\"三和五\",{\"1\":{\"1002\":1}}],[\"三天前换了新手机\",{\"1\":{\"551\":1}}],[\"三傻大闹宝莱坞\",{\"1\":{\"505\":1}}],[\"三五年内根本无法完全消化\",{\"1\":{\"504\":1}}],[\"三\",{\"0\":{\"773\":1},\"1\":{\"426\":1}}],[\"三个字段表示处理器持有的运行队列\",{\"1\":{\"1134\":1}}],[\"三个学习中第二个是名词\",{\"1\":{\"525\":1}}],[\"三个步骤\",{\"1\":{\"422\":1}}],[\"三个台阶\",{\"1\":{\"243\":1}}],[\"三次握手建立连接\",{\"1\":{\"342\":1}}],[\"三星垄断高端市场\",{\"1\":{\"9\":1}}],[\"两万字长文带你入门\",{\"0\":{\"1030\":1}}],[\"两全其美\",{\"1\":{\"792\":1}}],[\"两方面缺一不可\",{\"1\":{\"605\":1}}],[\"两者不太协调\",{\"1\":{\"573\":1}}],[\"两框重合区域包含你最佳的职业选择\",{\"1\":{\"572\":1}}],[\"两种接口虽然都使用\",{\"1\":{\"1138\":1}}],[\"两种\",{\"1\":{\"463\":1}}],[\"两\",{\"1\":{\"395\":1,\"396\":1}}],[\"两阶段提交虽然能够保证\",{\"1\":{\"360\":1}}],[\"两阶段提交虽然保证了两个日志文件的数据一致性\",{\"1\":{\"360\":1}}],[\"两阶段提交是以\",{\"1\":{\"360\":1}}],[\"两阶段提交的过程是怎样的\",{\"1\":{\"360\":1}}],[\"两阶段提交将单个事务提交拆分成了两个部分\",{\"1\":{\"360\":1}}],[\"两阶段提交其实是分布式事务一致性协议\",{\"1\":{\"360\":1}}],[\"两阶段提交\",{\"1\":{\"360\":1}}],[\"两阶段提交有什么问题\",{\"1\":{\"355\":1,\"360\":1}}],[\"两大作用\",{\"1\":{\"356\":1}}],[\"两个方法\",{\"1\":{\"1193\":1}}],[\"两个方法将该关键字转换成\",{\"1\":{\"1135\":1}}],[\"两个用于表示类型的字段之外\",{\"1\":{\"1139\":1}}],[\"两个字段表示\",{\"1\":{\"1139\":1}}],[\"两个字符串的删除操作\",{\"0\":{\"265\":1}}],[\"两个字符串的\",{\"1\":{\"260\":1}}],[\"两个相互增强的作用会作用于另一个方向\",{\"1\":{\"648\":1}}],[\"两个身份\",{\"1\":{\"425\":1}}],[\"两个哈希表\",{\"1\":{\"396\":1}}],[\"两个线程要修改\",{\"1\":{\"383\":1}}],[\"两个线程\",{\"1\":{\"383\":1}}],[\"两个条件\",{\"1\":{\"377\":1}}],[\"两个日志的提交顺序一致\",{\"1\":{\"360\":1}}],[\"两个日志的内容一致\",{\"1\":{\"360\":1}}],[\"两个链表的第一个公共节点\",{\"0\":{\"324\":1}}],[\"两个数组中\",{\"1\":{\"259\":1}}],[\"两个台阶\",{\"1\":{\"243\":1}}],[\"两笔\",{\"1\":{\"254\":1}}],[\"两段式路径\",{\"1\":{\"48\":1}}],[\"钱很有用\",{\"1\":{\"751\":1}}],[\"钱币\",{\"1\":{\"242\":2}}],[\"钱包的lamport余额是账户拥有的sol金额\",{\"1\":{\"112\":1}}],[\"钱包\",{\"0\":{\"96\":1},\"1\":{\"112\":1,\"122\":1}}],[\"且都在命令的\",{\"1\":{\"991\":1}}],[\"且会越来越大\",{\"0\":{\"746\":1}}],[\"且主从服务器之间采用的是\",{\"1\":{\"413\":1}}],[\"且\",{\"1\":{\"377\":1}}],[\"且是默认使用\",{\"1\":{\"341\":1}}],[\"且内层for循环倒序遍历\",{\"1\":{\"237\":1}}],[\"且不同命名空间中可以有相同\",{\"1\":{\"76\":1}}],[\"套到本题\",{\"1\":{\"237\":1}}],[\"套利机器人可以迅速利用市场低效率\",{\"1\":{\"151\":1}}],[\"容量为j的背包\",{\"1\":{\"236\":1}}],[\"容量为j的背包所背的最大价值\",{\"1\":{\"236\":1}}],[\"容量为\",{\"1\":{\"236\":1}}],[\"容器就可以共享一些基础的文件系统层\",{\"1\":{\"78\":1}}],[\"容器中进程交互还是采用了\",{\"1\":{\"76\":1}}],[\"容器启动后会进入后台\",{\"1\":{\"68\":1}}],[\"容器会把输出的结果\",{\"1\":{\"66\":1}}],[\"容器的进程间交互实际上还是\",{\"1\":{\"76\":1}}],[\"容器的信息\",{\"1\":{\"74\":1}}],[\"容器的核心为所执行的应用程序\",{\"1\":{\"65\":1}}],[\"容器的实质是进程\",{\"1\":{\"47\":1}}],[\"容器是否会长久运行\",{\"1\":{\"66\":1}}],[\"容器是独立运行的一个或一组应用\",{\"1\":{\"62\":1}}],[\"容器是\",{\"1\":{\"62\":1}}],[\"容器是以镜像为基础\",{\"1\":{\"55\":1}}],[\"容器是镜像运行时的实体\",{\"1\":{\"47\":1}}],[\"容器删除或者重新运行之后\",{\"1\":{\"47\":1}}],[\"容器消亡\",{\"1\":{\"47\":1}}],[\"容器消亡时\",{\"1\":{\"47\":1}}],[\"容器不应该向其存储层内写入任何数据\",{\"1\":{\"47\":1}}],[\"容器存储层要保持无状态化\",{\"1\":{\"47\":1}}],[\"容器存储层也随之消亡\",{\"1\":{\"47\":1}}],[\"容器存储层的生存周期和容器一样\",{\"1\":{\"47\":1}}],[\"容器存储层\",{\"1\":{\"47\":1}}],[\"容器也是如此\",{\"1\":{\"47\":1}}],[\"容器内对应的端口号也是27017\",{\"1\":{\"1219\":1}}],[\"容器内的进程是运行在一个隔离的环境里\",{\"1\":{\"47\":1}}],[\"容器内没有自己的内核\",{\"1\":{\"45\":1}}],[\"容器进程运行于属于自己的独立的\",{\"1\":{\"47\":1}}],[\"容器可以被创建\",{\"1\":{\"47\":1}}],[\"容器\",{\"0\":{\"47\":1,\"62\":1},\"1\":{\"50\":1,\"51\":1,\"76\":1}}],[\"容器和仓库理解了这三个概念\",{\"1\":{\"45\":1}}],[\"动态地改变\",{\"1\":{\"1038\":1}}],[\"动态调整速率\",{\"0\":{\"1038\":1}}],[\"动态规划问题拆解为如下五步曲\",{\"1\":{\"224\":1}}],[\"动态规划基础\",{\"0\":{\"224\":1}}],[\"动态规划\",{\"0\":{\"223\":1},\"1\":{\"224\":1,\"252\":1,\"268\":1,\"315\":1}}],[\"动物农场\",{\"1\":{\"503\":1,\"533\":1,\"669\":1}}],[\"动规五部曲分析如下\",{\"1\":{\"236\":1,\"268\":1}}],[\"表连接\",{\"1\":{\"1218\":1}}],[\"表达愤怒使你更加愤怒\",{\"1\":{\"653\":1}}],[\"表达式向\",{\"1\":{\"1137\":1}}],[\"表达式中变量\",{\"1\":{\"1137\":1}}],[\"表达式有着完全相同的工作方式\",{\"1\":{\"451\":1}}],[\"表达式完全可以是\",{\"1\":{\"236\":1}}],[\"表明这是\",{\"1\":{\"447\":1}}],[\"表明有事务想在某个区间插入新记录\",{\"1\":{\"374\":1}}],[\"表\",{\"1\":{\"396\":1}}],[\"表中有一个范围\",{\"1\":{\"372\":1,\"373\":1}}],[\"表中主键\",{\"1\":{\"371\":1}}],[\"表里的主键通常都会设置成自增的\",{\"1\":{\"369\":1}}],[\"表级别的独占锁\",{\"1\":{\"366\":1}}],[\"表级别的共享锁\",{\"1\":{\"366\":1}}],[\"表级锁\",{\"0\":{\"365\":1}}],[\"表锁和行锁是满足读读共享\",{\"1\":{\"368\":1}}],[\"表锁除了会限制别的线程的读写外\",{\"1\":{\"366\":1}}],[\"表锁\",{\"0\":{\"366\":1},\"1\":{\"365\":1}}],[\"表空间中的\",{\"1\":{\"357\":1,\"358\":1}}],[\"表数据太少的时候\",{\"1\":{\"352\":1}}],[\"表名等等\",{\"1\":{\"355\":1}}],[\"表名\",{\"1\":{\"345\":1}}],[\"表示reflect\",{\"1\":{\"1189\":2}}],[\"表示rehash操作已完成\",{\"1\":{\"396\":1}}],[\"表示rehash工作正式开始\",{\"1\":{\"396\":1}}],[\"表示当写操作被阻塞时等待的读操作个数\",{\"1\":{\"1143\":1}}],[\"表示当前互斥锁的状态\",{\"1\":{\"1142\":1}}],[\"表示当前要擦除的位置\",{\"1\":{\"357\":1}}],[\"表示当前目录\",{\"1\":{\"60\":1}}],[\"表示从正常模式被从唤醒\",{\"1\":{\"1142\":1}}],[\"表示从下标为\",{\"1\":{\"235\":1,\"236\":1}}],[\"表示互斥锁的锁定状态\",{\"1\":{\"1142\":1}}],[\"表示已经向channel发送数据\",{\"1\":{\"1137\":1}}],[\"表示已使用的资源占总资源的比例\",{\"1\":{\"152\":1}}],[\"表示操作系统线程\",{\"1\":{\"1133\":1}}],[\"表示操作系统的线程\",{\"1\":{\"1131\":1}}],[\"表示处理器\",{\"1\":{\"1131\":1}}],[\"表示目标的依赖\",{\"1\":{\"1025\":1}}],[\"表示目标\",{\"1\":{\"1025\":1}}],[\"表示每小时的开始\",{\"1\":{\"1003\":1}}],[\"表示每天\",{\"1\":{\"1003\":1}}],[\"表示每周第一天的\",{\"1\":{\"1003\":1}}],[\"表示每年第一天的\",{\"1\":{\"1003\":1}}],[\"表示每月第一天的\",{\"1\":{\"1003\":1}}],[\"表示每月\",{\"1\":{\"1002\":1}}],[\"表示每个月\",{\"1\":{\"1002\":1}}],[\"表示每次提交事务都\",{\"1\":{\"358\":1,\"360\":1}}],[\"表示每次提交事务都会\",{\"1\":{\"358\":1}}],[\"表示每次提交事务都只\",{\"1\":{\"358\":1}}],[\"表示每次数据提交时候\",{\"1\":{\"357\":1}}],[\"表示每次事务提交时\",{\"1\":{\"357\":1,\"360\":1}}],[\"表示可以指定多个选项和多个参数\",{\"1\":{\"991\":1}}],[\"表示checkout的参数是xxx\",{\"1\":{\"988\":1}}],[\"表示行为\",{\"1\":{\"988\":1}}],[\"表示该字符起始的索引位置\",{\"1\":{\"480\":1}}],[\"表示该客户端的事务安全性已经被破坏\",{\"1\":{\"424\":1}}],[\"表示设置\",{\"1\":{\"436\":1}}],[\"表示这个主节点支持从节点成为新的主节点\",{\"1\":{\"433\":1}}],[\"表示这个节点已经由原来的主节点变成了从节点\",{\"1\":{\"433\":1}}],[\"表示这个版本的记录是在创建\",{\"1\":{\"362\":2}}],[\"表示主服务器已经进入客观下线状态\",{\"1\":{\"426\":1}}],[\"表示复制指令已经被接收\",{\"1\":{\"425\":1}}],[\"表示此页\",{\"1\":{\"377\":1}}],[\"表示此页已被使用\",{\"1\":{\"377\":1}}],[\"表示此页未被使用\",{\"1\":{\"377\":1}}],[\"表示生成该版本记录的活跃事务已经被提交\",{\"1\":{\"362\":1}}],[\"表示生成该版本记录的活跃事务依然活跃着\",{\"1\":{\"362\":1}}],[\"表示表示每次事务提交时\",{\"1\":{\"357\":1}}],[\"表示数值的字符串\",{\"0\":{\"292\":1}}],[\"表示零个或多个\",{\"1\":{\"291\":1}}],[\"表示它前面的字符可以出现任意次\",{\"1\":{\"291\":1}}],[\"表示任意一个字符\",{\"1\":{\"291\":1}}],[\"表示区间范围\",{\"1\":{\"267\":1}}],[\"表示什么呢\",{\"1\":{\"264\":1,\"266\":1}}],[\"表示以下标i\",{\"1\":{\"263\":1,\"266\":2}}],[\"表示i之前包括i的以nums\",{\"1\":{\"257\":1}}],[\"表示的是第i天\",{\"1\":{\"254\":1}}],[\"表示第0天不持有股票\",{\"1\":{\"252\":1}}],[\"表示第0天持有股票\",{\"1\":{\"252\":1}}],[\"表示第i天状态j所剩最大现金\",{\"1\":{\"254\":1}}],[\"表示第i天不持有股票所得最多现金\",{\"1\":{\"252\":1}}],[\"表示第i天持有股票所得最多现金\",{\"1\":{\"252\":1}}],[\"表示一支给定股票第\",{\"1\":{\"252\":1}}],[\"表示容量为j\",{\"1\":{\"236\":1}}],[\"表示容量为j的背包所背的价值最大为dp\",{\"1\":{\"236\":1}}],[\"表示\",{\"1\":{\"150\":1,\"152\":1,\"236\":2,\"237\":1,\"239\":1,\"264\":1,\"357\":1,\"988\":1,\"1131\":1,\"1137\":2}}],[\"遍历命令行参数\",{\"1\":{\"1163\":1}}],[\"遍历查找engine\",{\"1\":{\"1055\":1}}],[\"遍历结束\",{\"1\":{\"948\":1}}],[\"遍历所有元素\",{\"1\":{\"867\":1}}],[\"遍历所有观察者\",{\"1\":{\"844\":1}}],[\"遍历两个链表遇到相同则跳出遍历\",{\"1\":{\"324\":1}}],[\"遍历的时候直接把数字放进map里如果出现过\",{\"1\":{\"275\":1}}],[\"遍历i\",{\"1\":{\"259\":1}}],[\"遍历到了nums\",{\"1\":{\"239\":1}}],[\"遍历背包的for循环放在内层\",{\"1\":{\"237\":1}}],[\"遍历背包容量\",{\"1\":{\"235\":1,\"241\":1}}],[\"遍历物品\",{\"1\":{\"235\":1,\"241\":1}}],[\"放进全局协程队列\",{\"1\":{\"1135\":1}}],[\"放进容量为j的背包\",{\"1\":{\"235\":1,\"236\":1}}],[\"放进容量为j的背包价值最大为多少\",{\"1\":{\"235\":1}}],[\"放到发送方所在的处理器的\",{\"1\":{\"1137\":1}}],[\"放到\",{\"1\":{\"1135\":2}}],[\"放到$gopath\",{\"1\":{\"1067\":1}}],[\"放松休闲\",{\"1\":{\"573\":1}}],[\"放心\",{\"1\":{\"360\":1}}],[\"放的是最小的数字\",{\"1\":{\"301\":1}}],[\"放入全局队列\",{\"1\":{\"1135\":1}}],[\"放入全局协程队列\",{\"1\":{\"1135\":1}}],[\"放入\",{\"1\":{\"1135\":2}}],[\"放入p\",{\"1\":{\"1135\":1}}],[\"放入剩下的元素\",{\"1\":{\"948\":1}}],[\"放入数组里\",{\"1\":{\"278\":1}}],[\"放入物品i了之后的价值即\",{\"1\":{\"236\":1}}],[\"放物品i\",{\"1\":{\"235\":1}}],[\"价值观决定了命运\",{\"1\":{\"666\":1}}],[\"价值观和信念之间有怎样的关系\",{\"1\":{\"626\":1}}],[\"价值观和信仰之间的关系是什么\",{\"1\":{\"626\":1}}],[\"价值观和信仰都或多或少收到心理学的影响\",{\"1\":{\"623\":1}}],[\"价值观和恐惧并非无中生有\",{\"1\":{\"575\":1}}],[\"价值大于\",{\"1\":{\"319\":1}}],[\"价值也为元素的数值\",{\"1\":{\"237\":1}}],[\"价值总和最大是多少\",{\"1\":{\"235\":1,\"236\":1}}],[\"价值\",{\"1\":{\"235\":1,\"241\":1}}],[\"价格\",{\"1\":{\"353\":2,\"683\":1,\"1161\":2}}],[\"价格是否能够保持稳定\",{\"1\":{\"186\":1}}],[\"价格预言机的\",{\"1\":{\"150\":2}}],[\"价格在美国东部时间\",{\"1\":{\"27\":1}}],[\"求\",{\"1\":{\"426\":1}}],[\"求该树的深度\",{\"1\":{\"328\":1}}],[\"求a\",{\"1\":{\"324\":1}}],[\"求按从小到大的顺序的第\",{\"1\":{\"321\":1}}],[\"求出这个数组中的逆序对的总数\",{\"1\":{\"323\":1}}],[\"求出\",{\"1\":{\"317\":1}}],[\"求出num是多少\",{\"1\":{\"317\":1}}],[\"求任意第n位对应的数字\",{\"1\":{\"317\":1}}],[\"求1～n这n个整数的十进制表示中1出现的次数\",{\"1\":{\"316\":1}}],[\"求所有子数组的和的最大值\",{\"1\":{\"315\":1}}],[\"求的是回文子串\",{\"1\":{\"268\":1}}],[\"求最长公共自序列\",{\"1\":{\"265\":1}}],[\"求组合类问题的公式\",{\"1\":{\"239\":1}}],[\"求解将哪些物品装入背包里物品价值总和最大\",{\"1\":{\"235\":1,\"241\":1}}],[\"求以\",{\"1\":{\"232\":1}}],[\"取消信号和其他与请求相关的值\",{\"1\":{\"1156\":1}}],[\"取消订单\",{\"1\":{\"1010\":1}}],[\"取消\",{\"1\":{\"1009\":1}}],[\"取消mock能力\",{\"1\":{\"959\":1}}],[\"取值范围\",{\"1\":{\"1002\":5}}],[\"取决于我们对时间的管理和运用\",{\"1\":{\"646\":1}}],[\"取决于所使用的具体\",{\"1\":{\"48\":1}}],[\"取引用即可\",{\"1\":{\"472\":1}}],[\"取模\",{\"1\":{\"413\":1}}],[\"取最大的\",{\"1\":{\"252\":1,\"260\":1}}],[\"取最大的而已\",{\"1\":{\"231\":1}}],[\"取最大值\",{\"1\":{\"248\":1}}],[\"斐波那契数列\",{\"0\":{\"281\":1}}],[\"斐波那契数\",{\"0\":{\"226\":1}}],[\"举一个简单的例子\",{\"1\":{\"1037\":1}}],[\"举一个大家都会用的命令\",{\"1\":{\"988\":1}}],[\"举个发送ping消息和返回pong消息的例子\",{\"1\":{\"435\":1}}],[\"举个例子a\",{\"1\":{\"259\":1}}],[\"举个例子\",{\"1\":{\"169\":1,\"371\":1,\"374\":1,\"393\":1,\"402\":1,\"425\":2,\"426\":3}}],[\"举\",{\"1\":{\"426\":3,\"433\":1}}],[\"举例\",{\"1\":{\"385\":1,\"1072\":1,\"1156\":1}}],[\"举例推导dp数组\",{\"1\":{\"224\":1,\"235\":1}}],[\"确认订单完成则进入最后状态\",{\"1\":{\"1009\":1}}],[\"确认这是真实的皮肤\",{\"1\":{\"575\":1}}],[\"确实\",{\"1\":{\"575\":1}}],[\"确定\",{\"1\":{\"258\":1}}],[\"确定遍历顺序\",{\"1\":{\"224\":1,\"235\":1,\"237\":1,\"242\":1,\"257\":1,\"259\":1,\"264\":1}}],[\"确定递推公式\",{\"1\":{\"224\":1,\"229\":1,\"231\":1,\"232\":1,\"235\":1,\"240\":1,\"242\":1,\"244\":1,\"252\":1,\"254\":1,\"258\":1,\"259\":1,\"260\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1}}],[\"确定dp数组下标含义\",{\"1\":{\"259\":1}}],[\"确定dp数组的下标含义\",{\"1\":{\"258\":1}}],[\"确定dp数组的定义\",{\"1\":{\"231\":1,\"236\":1}}],[\"确定dp数组以及下标的含义\",{\"1\":{\"235\":1,\"242\":1,\"254\":1}}],[\"确定dp数组\",{\"1\":{\"224\":1,\"232\":1,\"240\":1,\"252\":1,\"260\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1}}],[\"确保事务中的每一个操作\",{\"1\":{\"1238\":1}}],[\"确保每个人都知道任务的要求和截止时间\",{\"1\":{\"1156\":1}}],[\"确保所有数据被写入底层的文件\",{\"1\":{\"1153\":1}}],[\"确保所有利率均为非负值\",{\"1\":{\"152\":1}}],[\"确保函数不会执行第二次\",{\"1\":{\"1145\":1}}],[\"确保我们代码中的每个逻辑分支都能被测试到\",{\"1\":{\"975\":1}}],[\"确保期望的结果都满足\",{\"1\":{\"975\":1}}],[\"确保你真的是一个独立的人\",{\"1\":{\"623\":1}}],[\"确保你下载了go语言安装包\",{\"1\":{\"509\":1}}],[\"确保大概能看懂别人的程序代码\",{\"1\":{\"525\":1}}],[\"确保最大程度的安全性\",{\"1\":{\"494\":1}}],[\"确保为所有成员提供足够的保障\",{\"1\":{\"151\":1}}],[\"确保udp可以快速可靠传递集群消息\",{\"1\":{\"116\":1}}],[\"英尺篮球架\",{\"1\":{\"579\":1}}],[\"英雄\",{\"1\":{\"575\":1}}],[\"英文\",{\"1\":{\"224\":1}}],[\"英语学习\",{\"1\":{\"4\":1}}],[\"子网掩码的类型\",{\"1\":{\"1161\":1}}],[\"子类可以通过重写部分算法来实现新的行为\",{\"1\":{\"860\":1}}],[\"子线程中调用\",{\"1\":{\"463\":1}}],[\"子\",{\"1\":{\"424\":1}}],[\"子命令会报错\",{\"1\":{\"992\":1}}],[\"子命令传入一个参数\",{\"1\":{\"992\":1}}],[\"子命令接受任意多个频道作为输入参数\",{\"1\":{\"423\":1}}],[\"子命令用于返回服务器当前被订阅的频道\",{\"1\":{\"423\":1}}],[\"子句中\",{\"1\":{\"353\":1}}],[\"子字符串\",{\"1\":{\"267\":1}}],[\"子数组\",{\"1\":{\"262\":1}}],[\"子数组最少包含一个元素\",{\"1\":{\"262\":1}}],[\"子序列定义为\",{\"1\":{\"268\":1}}],[\"子序列\",{\"1\":{\"257\":1,\"260\":1,\"264\":1}}],[\"子序列问题\",{\"1\":{\"223\":1}}],[\"子集ii\",{\"0\":{\"216\":1}}],[\"子集问题\",{\"1\":{\"206\":1}}],[\"子集\",{\"0\":{\"215\":1},\"1\":{\"206\":1}}],[\"皇后问题\",{\"1\":{\"220\":3}}],[\"按4比较一次\",{\"1\":{\"947\":1}}],[\"按自己的节奏和喜好做自己喜欢的事\",{\"1\":{\"573\":1}}],[\"按ctrl\",{\"1\":{\"512\":1}}],[\"按顺序\",{\"1\":{\"292\":3}}],[\"按顺序打印出从\",{\"1\":{\"289\":1}}],[\"按位运算的问题\",{\"1\":{\"288\":1}}],[\"按任意顺序\",{\"1\":{\"219\":1}}],[\"按照现在的工作方式\",{\"1\":{\"579\":1}}],[\"按照延时双删策略\",{\"1\":{\"386\":1}}],[\"按照从外向里以顺时针的顺序依次打印出每一个数字\",{\"1\":{\"300\":1}}],[\"按照\",{\"1\":{\"47\":1,\"413\":1}}],[\"第\",{\"1\":{\"1002\":9}}],[\"第四个或第八个点是什么\",{\"1\":{\"585\":1}}],[\"第四和六两个字母根本就不存在\",{\"1\":{\"474\":1}}],[\"第三方库\",{\"0\":{\"1300\":1}}],[\"第三方登录进行认证\",{\"1\":{\"1045\":1,\"1046\":1}}],[\"第三方类提供接口的转换器\",{\"1\":{\"904\":1}}],[\"第三类人就是幸运的一群\",{\"1\":{\"572\":1}}],[\"第三\",{\"1\":{\"521\":1}}],[\"第三个重大决策就是在21年底决定为实习做准备\",{\"1\":{\"759\":1}}],[\"第三个是\",{\"1\":{\"660\":1}}],[\"第三个误解是\",{\"1\":{\"627\":1}}],[\"第三个包godotenv\",{\"1\":{\"509\":1}}],[\"第三个参数则表示替换的个数\",{\"1\":{\"479\":1}}],[\"第三步是\",{\"1\":{\"437\":1}}],[\"第三行再按照从左到右的顺序打印\",{\"1\":{\"304\":1,\"305\":1}}],[\"第19位是4\",{\"1\":{\"317\":1}}],[\"第13位是1\",{\"1\":{\"317\":1}}],[\"第5位\",{\"1\":{\"317\":1}}],[\"第0天做第一次买入的操作\",{\"1\":{\"254\":1}}],[\"第二章\",{\"1\":{\"626\":1}}],[\"第二部分\",{\"0\":{\"578\":1},\"1\":{\"1089\":1}}],[\"第二步代理对象持有原对象的引用\",{\"1\":{\"938\":1}}],[\"第二步是\",{\"1\":{\"437\":1}}],[\"第二步的expire设置过期时间就失败了\",{\"1\":{\"436\":1}}],[\"第二步执行\",{\"1\":{\"384\":1}}],[\"第二步失败依旧有不一致的风险\",{\"1\":{\"384\":1}}],[\"第二步操作失败\",{\"1\":{\"384\":2}}],[\"第二步\",{\"1\":{\"384\":1}}],[\"第二步将\",{\"1\":{\"265\":1}}],[\"第二个整数\",{\"1\":{\"1161\":1}}],[\"第二个参数是\",{\"1\":{\"1034\":1}}],[\"第二个参数是具体执行任务的参数\",{\"1\":{\"1001\":1}}],[\"第二个参数是新的字符串\",{\"1\":{\"479\":1}}],[\"第二个数组的地一个位置\",{\"1\":{\"948\":1}}],[\"第二个重大决策还是在\",{\"1\":{\"759\":1}}],[\"第二个就是过去长期一厢情愿地以为写作能力其实不重要\",{\"1\":{\"605\":1}}],[\"第二个观点是\",{\"1\":{\"596\":1}}],[\"第二个境界对于解决实际问题的确很有帮助\",{\"1\":{\"525\":1}}],[\"第二个包\",{\"1\":{\"509\":1}}],[\"第二个是\",{\"1\":{\"660\":1}}],[\"第二个是新的字符串\",{\"1\":{\"479\":1}}],[\"第二个是本题不可以直接排序\",{\"1\":{\"217\":1}}],[\"第二个问题\",{\"1\":{\"386\":1}}],[\"第二个发生幻读现象的场景\",{\"1\":{\"362\":1}}],[\"第二种是超高速增长型创业公司\",{\"1\":{\"674\":1}}],[\"第二种\",{\"1\":{\"362\":1}}],[\"第二件事情\",{\"1\":{\"345\":1}}],[\"第二层按照从右到左的顺序打印\",{\"1\":{\"304\":1,\"305\":1}}],[\"第二次卖出\",{\"1\":{\"254\":1}}],[\"第二次买入\",{\"1\":{\"254\":1}}],[\"第i天没有操作\",{\"1\":{\"254\":2}}],[\"第i天卖出股票了\",{\"1\":{\"254\":1}}],[\"第i天卖出股票\",{\"1\":{\"252\":1}}],[\"第i天买入股票了\",{\"1\":{\"254\":1}}],[\"第i天买入股票\",{\"1\":{\"252\":1}}],[\"第i\",{\"1\":{\"248\":1,\"252\":2}}],[\"第i件物品的重量是weight\",{\"1\":{\"235\":1,\"241\":1}}],[\"第一段主要是防止\",{\"1\":{\"1135\":1}}],[\"第一部分\",{\"1\":{\"1089\":1}}],[\"第一遍找到最小的值把它放在最前面\",{\"1\":{\"944\":1}}],[\"第一本书是达里奥在过去40年走向成功的总结\",{\"1\":{\"669\":1}}],[\"第一章总结\",{\"0\":{\"663\":1}}],[\"第一行显示了\",{\"1\":{\"447\":1}}],[\"第一种\",{\"1\":{\"362\":1}}],[\"第一件事情\",{\"1\":{\"345\":1}}],[\"第一步\",{\"1\":{\"1142\":1}}],[\"第一步定义接口\",{\"1\":{\"938\":1}}],[\"第一步是\",{\"1\":{\"437\":1}}],[\"第一步将\",{\"1\":{\"265\":1}}],[\"第一步先将数组排序\",{\"1\":{\"216\":1}}],[\"第一次卖出\",{\"1\":{\"254\":1}}],[\"第一次买入\",{\"1\":{\"254\":1}}],[\"第一个整数\",{\"1\":{\"1161\":1}}],[\"第一个参数是\",{\"1\":{\"1034\":1}}],[\"第一个参数是我们cron触发时间的规则\",{\"1\":{\"1001\":1}}],[\"第一个参数是要被替换的字符串\",{\"1\":{\"479\":1}}],[\"第一个映入脑海的想法往往是抵制\",{\"1\":{\"653\":1}}],[\"第一个点是一个轻松的情况\",{\"1\":{\"585\":1}}],[\"第一个点是你测试它的机会\",{\"1\":{\"585\":1}}],[\"第一个是替换的字符串的范围\",{\"1\":{\"479\":1}}],[\"第一个是结束递条件\",{\"1\":{\"217\":1}}],[\"第一个问题\",{\"1\":{\"386\":1}}],[\"第一个例子\",{\"1\":{\"362\":1}}],[\"第一个发生幻读现象的场景\",{\"1\":{\"362\":1}}],[\"第一个只出现一次的字符\",{\"0\":{\"322\":1}}],[\"第一个序列表示栈的压入顺序\",{\"1\":{\"302\":1}}],[\"第一个元素就是根节点元素\",{\"1\":{\"279\":1}}],[\"第一个接触的就是稳定币\",{\"1\":{\"180\":1}}],[\"第一点提到的包含程序的可执行字节码的帐户\",{\"1\":{\"114\":1}}],[\"乍一看和上一个子集差不多但其实差别还是很大的\",{\"1\":{\"217\":1}}],[\"递推公式的基础就是dp\",{\"1\":{\"248\":1}}],[\"递推公式\",{\"1\":{\"224\":1,\"236\":1,\"244\":1,\"265\":1}}],[\"递增子序列\",{\"0\":{\"217\":1}}],[\"递归的结束条件是start\",{\"1\":{\"948\":1}}],[\"递归的深度\",{\"1\":{\"206\":1}}],[\"递归终止逻辑\",{\"1\":{\"298\":1,\"299\":2}}],[\"递归终止条件\",{\"1\":{\"296\":2}}],[\"递归逻辑\",{\"1\":{\"297\":1}}],[\"递归判断\",{\"1\":{\"297\":1}}],[\"递归参数\",{\"1\":{\"297\":1,\"298\":1,\"299\":1}}],[\"递归公式代码如下\",{\"1\":{\"266\":1}}],[\"递归\",{\"1\":{\"206\":1,\"296\":1}}],[\"递归就要有终止条件\",{\"1\":{\"206\":1}}],[\"字的文章\",{\"1\":{\"579\":1}}],[\"字都取不完整\",{\"1\":{\"468\":1}}],[\"字\",{\"1\":{\"396\":1,\"426\":1,\"428\":1,\"435\":2}}],[\"字典的值为节点对应的clusternode结构\",{\"1\":{\"427\":1}}],[\"字典的值则是一个指向sentinelredisinstance结构的指针\",{\"1\":{\"426\":1}}],[\"字典的键为节点的名字\",{\"1\":{\"427\":1}}],[\"字典的键是被监视主服务器的名字\",{\"1\":{\"426\":1}}],[\"字典的键是主服务器的名字\",{\"1\":{\"426\":1}}],[\"字典会同时使用ht\",{\"1\":{\"396\":1}}],[\"字典只使用ht\",{\"1\":{\"395\":1}}],[\"字典实现\",{\"1\":{\"395\":1}}],[\"字典\",{\"0\":{\"395\":1}}],[\"字段值可以包含其他文档\",{\"1\":{\"1217\":1}}],[\"字段用于判断当前类型的多个对象是否相等\",{\"1\":{\"1139\":1}}],[\"字段能够帮助我们快速确定类型是否相等\",{\"1\":{\"1139\":1}}],[\"字段存储了类型占用的内存空间\",{\"1\":{\"1139\":1}}],[\"字段存储了当前\",{\"1\":{\"1132\":1}}],[\"字段的使用\",{\"1\":{\"1139\":1}}],[\"字段的\",{\"1\":{\"1132\":1}}],[\"字段的主要目的是为了避免在更新操作中无意中修改了一些不应该被修改的字段\",{\"1\":{\"1088\":1}}],[\"字段是一个很好的实践\",{\"1\":{\"1088\":1}}],[\"字段可以让客户端明确地指定要更新的字段\",{\"1\":{\"1088\":1}}],[\"字段指定了\",{\"1\":{\"1088\":1}}],[\"字段未指定\",{\"1\":{\"1088\":1}}],[\"字段中取出它的状态和信号量\",{\"1\":{\"1144\":1}}],[\"字段中存储的不同信息\",{\"1\":{\"1142\":1}}],[\"字段中存在大量重复数据\",{\"1\":{\"352\":1}}],[\"字段中\",{\"1\":{\"991\":2}}],[\"字段有唯一性限制的\",{\"1\":{\"351\":1}}],[\"字段\",{\"1\":{\"349\":1,\"1084\":1,\"1088\":2,\"1139\":1,\"1146\":1,\"1191\":1}}],[\"字段名\",{\"1\":{\"345\":1}}],[\"字符进行转义\",{\"1\":{\"1200\":1}}],[\"字符\",{\"0\":{\"485\":1},\"1\":{\"483\":2,\"1200\":4}}],[\"字符的方式遍历字符串\",{\"1\":{\"485\":1}}],[\"字符的十六进制表示\",{\"1\":{\"483\":1}}],[\"字符的内部\",{\"1\":{\"475\":1}}],[\"字符的边界\",{\"1\":{\"468\":1}}],[\"字符且不干扰剩余字符相对位置所组成的新字符串\",{\"1\":{\"264\":1}}],[\"字符而不改变剩余字符相对位置形成的新字符串\",{\"1\":{\"263\":1}}],[\"字符串和浮点数类型之间的转换\",{\"1\":{\"1198\":1}}],[\"字符串转换函数\",{\"1\":{\"1198\":1}}],[\"字符串转义\",{\"0\":{\"483\":1}}],[\"字符串类型的命令行参数用于表示文本字符串\",{\"1\":{\"1161\":1}}],[\"字符串类型\",{\"1\":{\"1161\":1}}],[\"字符串中获取子串是较为复杂的事情\",{\"1\":{\"487\":1}}],[\"字符串索引\",{\"0\":{\"473\":1}}],[\"字符串切片是非常危险的操作\",{\"1\":{\"475\":1}}],[\"字符串切片\",{\"0\":{\"475\":1}}],[\"字符串切片类型\",{\"1\":{\"471\":1}}],[\"字符串切片的类型标识是\",{\"1\":{\"468\":1}}],[\"字符串是\",{\"1\":{\"471\":1}}],[\"字符串是由字符组成的连续集合\",{\"1\":{\"471\":1}}],[\"字符串字面值就不需要static显式声明\",{\"1\":{\"454\":1}}],[\"字符串对象的编码可以是int\",{\"1\":{\"402\":1}}],[\"字符串\",{\"0\":{\"467\":1,\"484\":1},\"1\":{\"291\":1,\"1200\":1}}],[\"字符串s在\",{\"1\":{\"268\":1}}],[\"字符串的方式\",{\"1\":{\"484\":1}}],[\"字符串的不同表现形式\",{\"0\":{\"474\":1}}],[\"字符串的底层的数据存储格式实际上是\",{\"1\":{\"473\":1}}],[\"字符串的字面量是切片\",{\"0\":{\"470\":1}}],[\"字符串的前两个字节\",{\"1\":{\"468\":1}}],[\"字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部\",{\"1\":{\"335\":1}}],[\"字符串的排列\",{\"0\":{\"311\":1}}],[\"字符串的一个\",{\"1\":{\"264\":1}}],[\"字符串的一个子序列是原始字符串删除一些\",{\"1\":{\"263\":1}}],[\"字符串的zeronum和onenum相当于物品的重量\",{\"1\":{\"240\":1}}],[\"字符串本身的个数相当于物品的价值\",{\"1\":{\"240\":1}}],[\"字符串不用考虑深拷贝问题\",{\"1\":{\"210\":1}}],[\"字节的数组\",{\"1\":{\"1144\":1}}],[\"字节的最大传输单元\",{\"1\":{\"116\":1}}],[\"字节空间的结构体表示了\",{\"1\":{\"1142\":1}}],[\"字节时\",{\"1\":{\"410\":1}}],[\"字节码的修改版本\",{\"1\":{\"129\":1}}],[\"字节数组\",{\"1\":{\"117\":1,\"393\":1,\"402\":1}}],[\"字节\",{\"0\":{\"486\":1},\"1\":{\"116\":2,\"404\":1,\"406\":1,\"1139\":4}}],[\"电视剧\",{\"1\":{\"789\":1}}],[\"电商\",{\"1\":{\"709\":1}}],[\"电脑在他们年轻时就进入了市场\",{\"1\":{\"771\":1}}],[\"电脑比你的好\",{\"1\":{\"683\":1}}],[\"电脑\",{\"1\":{\"648\":1,\"751\":1}}],[\"电影权威们确信熟悉已故的查理\",{\"1\":{\"643\":1}}],[\"电影\",{\"1\":{\"505\":1,\"631\":1,\"789\":1}}],[\"电话号码的字母总和\",{\"0\":{\"210\":1}}],[\"电子邮件登录需要配置数据库以存储一次性验证令牌\",{\"1\":{\"193\":1}}],[\"深蹲等锻炼\",{\"1\":{\"789\":1}}],[\"深维\",{\"1\":{\"698\":1}}],[\"深度剖析\",{\"0\":{\"578\":1}}],[\"深度最多为4\",{\"1\":{\"131\":1}}],[\"深深刻在你的意识中\",{\"1\":{\"575\":1}}],[\"深入挖掘并确定各种渴望的真正根源\",{\"1\":{\"574\":1}}],[\"深入分析第一部分\",{\"0\":{\"573\":1}}],[\"深入思考劳动是很困难的\",{\"1\":{\"648\":1}}],[\"深入思考后你会发现\",{\"1\":{\"647\":1,\"686\":1}}],[\"深入思考\",{\"1\":{\"572\":1}}],[\"深入字符串内部\",{\"1\":{\"473\":1}}],[\"深拷贝\",{\"1\":{\"209\":1}}],[\"依次介绍\",{\"1\":{\"1205\":1}}],[\"依序调用handlerchain中的handlerfunc的过程中\",{\"1\":{\"1056\":1}}],[\"依赖\",{\"1\":{\"1025\":1}}],[\"依赖反转原则\",{\"1\":{\"982\":1}}],[\"依赖注入就是指在创建组件\",{\"1\":{\"981\":1}}],[\"依赖注入代替隐式依赖\",{\"0\":{\"981\":1}}],[\"依赖外部api\",{\"1\":{\"973\":1}}],[\"依然要保持曾经的状态\",{\"1\":{\"695\":1}}],[\"依然可以用box\",{\"1\":{\"462\":1}}],[\"依然可以得到\",{\"1\":{\"414\":1}}],[\"依旧是\",{\"1\":{\"384\":1}}],[\"依旧不会触发删除该层的行为\",{\"1\":{\"55\":1}}],[\"依据上述的代码框架很容易得到代码其实应该长这个样子\",{\"1\":{\"208\":1}}],[\"路上的汽车没有那么多\",{\"1\":{\"698\":1}}],[\"路上尽量少障碍\",{\"1\":{\"573\":1}}],[\"路径走到尽头\",{\"1\":{\"575\":1}}],[\"路径总和等于给定目标和的路径\",{\"1\":{\"307\":1}}],[\"路径\",{\"1\":{\"206\":1,\"319\":1}}],[\"路由传递\",{\"1\":{\"1080\":1}}],[\"路由\",{\"1\":{\"972\":1}}],[\"路由上使用跨站点请求伪造令牌\",{\"1\":{\"193\":1}}],[\"路由管理等\",{\"1\":{\"191\":1}}],[\"路由表\",{\"1\":{\"76\":1}}],[\"集成\",{\"1\":{\"721\":1}}],[\"集成了\",{\"1\":{\"413\":1}}],[\"集中于你正考察的问题并记录下你所有的想法\",{\"1\":{\"627\":1}}],[\"集体注意力的缺失导致的危害可能是十年后才会展现的\",{\"1\":{\"610\":1}}],[\"集体注意力的缺失\",{\"0\":{\"610\":1}}],[\"集\",{\"1\":{\"431\":1,\"434\":1}}],[\"集群里的每个节点默认每隔一秒钟就会从已知节点列表中随机选出五个节点\",{\"1\":{\"434\":1}}],[\"集群里每个负责处理槽的主节点都有一次投票的机会\",{\"1\":{\"433\":1}}],[\"集群配置纪元的值会被增一\",{\"1\":{\"433\":1}}],[\"集群的配置纪元是一个自增计数器\",{\"1\":{\"433\":1}}],[\"集群的主从复制过程梳理成\",{\"1\":{\"359\":1}}],[\"集群不需要下线\",{\"1\":{\"431\":1}}],[\"集群模式的redis\",{\"1\":{\"429\":1,\"432\":1}}],[\"集群就会进入上线状态\",{\"1\":{\"429\":1}}],[\"集群进入上线状态\",{\"1\":{\"428\":1}}],[\"集群处于上线状态\",{\"1\":{\"428\":1}}],[\"集群中的各个节点通过发送和接收消息\",{\"1\":{\"434\":1}}],[\"集群中的各个节点会通过相互发送消息来交换集群中各个节点的消息\",{\"1\":{\"433\":1}}],[\"集群中的每个节点都会知道数据库中的16384个槽分别被指派给了集群中的哪些节点\",{\"1\":{\"428\":1}}],[\"集群中的每个节点可以处理0\",{\"1\":{\"428\":1}}],[\"集群中每个节点会定期向集群中的其他节点发送ping消息\",{\"1\":{\"433\":1}}],[\"集群中整个数据库被分成16384个槽\",{\"1\":{\"428\":1}}],[\"集群中至少处理着一个槽的节点的数量\",{\"1\":{\"427\":1}}],[\"集群节点保存键值对以及键值对的过期方式与redis单机保存键值对过期时间的方式完全相同\",{\"1\":{\"430\":1}}],[\"集群节点名单\",{\"1\":{\"427\":1}}],[\"集群节点之间失去联系\",{\"1\":{\"413\":1}}],[\"集群当前的状态\",{\"1\":{\"427\":1}}],[\"集群当前的配置纪元\",{\"1\":{\"427\":2}}],[\"集群包含多少个节点\",{\"1\":{\"427\":1}}],[\"集群目前所处的状态\",{\"1\":{\"427\":1}}],[\"集群数据结构\",{\"1\":{\"427\":1}}],[\"集群通过分片\",{\"1\":{\"427\":1}}],[\"集群\",{\"0\":{\"427\":1}}],[\"集群脑裂导致数据丢失怎么办\",{\"1\":{\"413\":1}}],[\"集群时\",{\"1\":{\"413\":1}}],[\"集群内的各个节点由第三方拥有和操作\",{\"1\":{\"137\":1}}],[\"集合中\",{\"1\":{\"409\":1}}],[\"集合移动到\",{\"1\":{\"409\":1}}],[\"集合对象和有序集合对象这五种类型的对象\",{\"1\":{\"400\":1}}],[\"集合包含的元素数量\",{\"1\":{\"398\":1}}],[\"集合里的元素\",{\"1\":{\"237\":1}}],[\"集合\",{\"1\":{\"212\":1,\"409\":1,\"1218\":1}}],[\"集合的大小就构成了树的宽度\",{\"1\":{\"206\":1}}],[\"解锁\",{\"1\":{\"1142\":1,\"1149\":2}}],[\"解锁需要1\",{\"1\":{\"436\":1}}],[\"解绑\",{\"1\":{\"1135\":2}}],[\"解绑重新放入当前\",{\"1\":{\"1135\":1}}],[\"解绑重新调度\",{\"1\":{\"1135\":1}}],[\"解绑再将\",{\"1\":{\"1135\":1}}],[\"解压下来的文件夹\",{\"1\":{\"1079\":1}}],[\"解压缩文件\",{\"1\":{\"1067\":1}}],[\"解剖欲望章鱼\",{\"0\":{\"574\":1}}],[\"解决\",{\"1\":{\"1147\":1}}],[\"解决vscode中\",{\"1\":{\"1071\":1}}],[\"解决问题吧\",{\"1\":{\"586\":1}}],[\"解决问题\",{\"1\":{\"525\":1}}],[\"解决第二个问题\",{\"1\":{\"386\":1}}],[\"解决第一个问题\",{\"1\":{\"386\":1}}],[\"解决了并发问题\",{\"1\":{\"384\":1}}],[\"解决的方案有两种\",{\"1\":{\"361\":1,\"362\":1}}],[\"解决方案是\",{\"1\":{\"388\":1}}],[\"解决方案是加\",{\"1\":{\"388\":1}}],[\"解决方案\",{\"1\":{\"194\":1,\"413\":1}}],[\"解析命令行参数并设置\",{\"1\":{\"1163\":1}}],[\"解析命令行参数\",{\"1\":{\"1160\":1,\"1161\":2,\"1162\":1,\"1163\":1}}],[\"解析监听的地址\",{\"1\":{\"1054\":1}}],[\"解析并检验响应内容是否复合预期\",{\"1\":{\"972\":1}}],[\"解析请求\",{\"1\":{\"411\":1}}],[\"解析器就会给报错\",{\"1\":{\"345\":1}}],[\"解析器会做如下两件事情\",{\"1\":{\"345\":1}}],[\"解析器\",{\"0\":{\"345\":1}}],[\"解析\",{\"0\":{\"344\":1},\"1\":{\"341\":1,\"349\":1}}],[\"解释了原因\",{\"1\":{\"648\":1}}],[\"解释\",{\"1\":{\"252\":2,\"253\":3,\"254\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"262\":1,\"264\":1,\"265\":1,\"266\":1,\"268\":1,\"285\":2,\"288\":1,\"290\":2,\"291\":2,\"302\":2,\"315\":1,\"318\":1,\"319\":1,\"320\":2,\"321\":1,\"333\":2,\"334\":1,\"336\":1,\"627\":1,\"1218\":1}}],[\"解数独等等\",{\"1\":{\"206\":1}}],[\"棋盘问题\",{\"1\":{\"206\":1}}],[\"棋盘\",{\"1\":{\"206\":1}}],[\"排队\",{\"1\":{\"821\":1}}],[\"排在我们的任务清单上的相当高的位置\",{\"1\":{\"588\":1}}],[\"排序\",{\"1\":{\"313\":1,\"410\":1}}],[\"排完序的数组都是自增子序列了\",{\"1\":{\"217\":1}}],[\"排除的元素应该是同层的相同的元素\",{\"1\":{\"212\":1}}],[\"排列和执行请求时\",{\"1\":{\"819\":1}}],[\"排列强调元素之间的顺序\",{\"1\":{\"242\":1}}],[\"排列问题和组合问题不一样的地方在于对于排列而言\",{\"1\":{\"218\":1}}],[\"排列问题\",{\"1\":{\"206\":1}}],[\"排列\",{\"1\":{\"206\":1}}],[\"排障更为容易\",{\"1\":{\"58\":1}}],[\"文章等都是事先在云服务提供商的服务器上存储\",{\"1\":{\"709\":1}}],[\"文本\",{\"1\":{\"494\":1}}],[\"文本等\",{\"1\":{\"493\":1}}],[\"文\",{\"1\":{\"419\":1,\"480\":1}}],[\"文档的增删改查\",{\"1\":{\"1222\":1}}],[\"文档\",{\"1\":{\"1218\":1}}],[\"文档类似于\",{\"1\":{\"1217\":1}}],[\"文档等\",{\"1\":{\"1025\":1}}],[\"文档地址\",{\"1\":{\"200\":1}}],[\"文档中的内容非常庞杂\",{\"1\":{\"193\":1}}],[\"文件和文件夹应被视为相同的对象\",{\"1\":{\"915\":1}}],[\"文件和文件夹\",{\"1\":{\"915\":1}}],[\"文件夹\",{\"1\":{\"493\":1,\"494\":1}}],[\"文件同步\",{\"1\":{\"422\":1}}],[\"文件里增加一条\",{\"1\":{\"414\":1}}],[\"文件里擦除\",{\"1\":{\"358\":1}}],[\"文件追加一条\",{\"1\":{\"414\":1}}],[\"文件会保留此过期键\",{\"1\":{\"414\":1}}],[\"文件写入和同步为了提高文件的写入效率\",{\"1\":{\"422\":1}}],[\"文件写入\",{\"1\":{\"422\":1}}],[\"文件写入阶段\",{\"1\":{\"414\":1}}],[\"文件写入阶段和\",{\"1\":{\"414\":1}}],[\"文件写满了怎么办\",{\"1\":{\"357\":1}}],[\"文件时\",{\"1\":{\"414\":2}}],[\"文件产生任何影响\",{\"1\":{\"414\":1}}],[\"文件生成阶段\",{\"1\":{\"414\":1}}],[\"文件生成阶段和加载阶段\",{\"1\":{\"414\":1}}],[\"文件分为两个阶段\",{\"1\":{\"414\":2}}],[\"文件读入内存就可以\",{\"1\":{\"413\":1}}],[\"文件记录的是命令操作的日志\",{\"1\":{\"413\":1}}],[\"文件的内容\",{\"1\":{\"992\":1}}],[\"文件的内核缓冲区\",{\"1\":{\"413\":2}}],[\"文件的第二行第五个字符\",{\"1\":{\"447\":1}}],[\"文件的体积也会越来越大\",{\"1\":{\"422\":1}}],[\"文件的从服务器也不会造成影响\",{\"1\":{\"414\":1}}],[\"文件的主服务器造成影响\",{\"1\":{\"414\":1}}],[\"文件的可读性变得很差\",{\"1\":{\"413\":1}}],[\"文件的时间太长\",{\"1\":{\"413\":1}}],[\"文件的大小超过所设定的阈值后\",{\"1\":{\"413\":1}}],[\"文件越写越大\",{\"1\":{\"413\":1}}],[\"文件做\",{\"1\":{\"360\":1}}],[\"文件中添加了\",{\"1\":{\"413\":1}}],[\"文件中\",{\"1\":{\"358\":2,\"414\":2}}],[\"文件保存的是全量的日志\",{\"1\":{\"358\":1}}],[\"文件是循环写\",{\"1\":{\"358\":1}}],[\"文件是记录了所有数据库表结构变更和表数据修改的日志\",{\"1\":{\"358\":1}}],[\"文件恢复数据\",{\"1\":{\"358\":1}}],[\"文件恢复数据吗\",{\"1\":{\"358\":1}}],[\"文件恢复\",{\"1\":{\"358\":2}}],[\"文件过大\",{\"1\":{\"358\":1}}],[\"文件格式不同\",{\"1\":{\"358\":1}}],[\"文件满了\",{\"1\":{\"357\":1}}],[\"文件组成\",{\"1\":{\"357\":1}}],[\"文件\",{\"1\":{\"56\":1,\"129\":1,\"357\":2,\"358\":4,\"360\":3,\"413\":5,\"414\":1,\"449\":1,\"494\":1,\"1067\":1,\"1071\":1,\"1169\":1}}],[\"文件外\",{\"1\":{\"55\":1}}],[\"文件系统中有两种类型的对象\",{\"1\":{\"915\":1}}],[\"文件系统\",{\"1\":{\"46\":1,\"47\":1,\"75\":2}}],[\"安全码\",{\"1\":{\"927\":1}}],[\"安全感的渴望最简单来说只是你实用触角做它本来的事情\",{\"1\":{\"574\":1}}],[\"安全发送\",{\"1\":{\"494\":1}}],[\"安全策略和会话属性\",{\"1\":{\"193\":1}}],[\"安装protocol\",{\"1\":{\"1067\":1}}],[\"安装grpc\",{\"0\":{\"1067\":1}}],[\"安装\",{\"0\":{\"957\":1,\"1000\":1,\"1223\":1},\"1\":{\"56\":1,\"58\":1,\"975\":1,\"976\":1,\"978\":1,\"1023\":1}}],[\"安装了一个营销之路的软件\",{\"1\":{\"10\":1}}],[\"高性能的javascript实用工具库\",{\"1\":{\"1017\":1}}],[\"高级功能\",{\"1\":{\"956\":1}}],[\"高级选项允许您定义自己的例程\",{\"1\":{\"193\":1}}],[\"高效且结构良好的\",{\"1\":{\"721\":1}}],[\"高手之所以为高手\",{\"1\":{\"525\":1}}],[\"高手\",{\"1\":{\"503\":1}}],[\"高可用服务的最基础的保证\",{\"1\":{\"413\":1}}],[\"高些\",{\"1\":{\"413\":1}}],[\"高度模块化的程序\",{\"1\":{\"724\":1}}],[\"高度\",{\"1\":{\"397\":1}}],[\"高端手机比如当时的索尼\",{\"1\":{\"9\":1}}],[\"尝试从map中查找一个不存在的键\",{\"1\":{\"1191\":1}}],[\"尝试从结构体中查找\",{\"1\":{\"1191\":2}}],[\"尝试去使用客户端的流式grpc\",{\"1\":{\"1072\":1}}],[\"尝试体会和理解\",{\"1\":{\"1011\":1}}],[\"尝试过早\",{\"0\":{\"799\":1}}],[\"尝试新事物\",{\"1\":{\"731\":1}}],[\"尝试预测在讨论中有可能表达的不同观点\",{\"1\":{\"627\":1}}],[\"尝试实施\",{\"1\":{\"193\":1}}],[\"尝试使用\",{\"1\":{\"191\":3}}],[\"窗口同步和\",{\"1\":{\"193\":1}}],[\"具\",{\"1\":{\"424\":1}}],[\"具有不同开始位置或结束位置的子串\",{\"1\":{\"267\":1}}],[\"具有选项卡\",{\"1\":{\"193\":1}}],[\"具体可以去看官网页面\",{\"1\":{\"1174\":1}}],[\"具体规则如下\",{\"1\":{\"1136\":1}}],[\"具体应用及其带来的好处\",{\"1\":{\"1011\":1}}],[\"具体实现如下\",{\"1\":{\"979\":1}}],[\"具体实现的功能是在一个事务中进行以下两次sql操作\",{\"1\":{\"975\":1}}],[\"具体例子\",{\"1\":{\"977\":1}}],[\"具体装饰类a\",{\"1\":{\"921\":1}}],[\"具体构件角色\",{\"1\":{\"921\":1}}],[\"具体取决于公司所处的行业\",{\"1\":{\"751\":1}}],[\"具体取决于交易中包含的指令\",{\"1\":{\"116\":1}}],[\"具体取决于交易的要求\",{\"1\":{\"116\":1}}],[\"具体执行过程分为两大步\",{\"1\":{\"413\":1}}],[\"具体来说result是一个盲盒\",{\"1\":{\"448\":1}}],[\"具体来说\",{\"1\":{\"413\":1}}],[\"具体来讲就是\",{\"1\":{\"385\":1}}],[\"具体是有目的地去解决一些现实问题\",{\"1\":{\"525\":1}}],[\"具体是这样做的\",{\"1\":{\"377\":1}}],[\"具体是负责做什么的\",{\"1\":{\"341\":1}}],[\"具体方式如下\",{\"1\":{\"368\":1}}],[\"具体如下\",{\"1\":{\"360\":1}}],[\"具体的职业板块\",{\"1\":{\"584\":1}}],[\"具体的解释是这样子的\",{\"1\":{\"525\":1}}],[\"具体的场景是\",{\"1\":{\"271\":1}}],[\"具体的选项可以通过\",{\"1\":{\"49\":1}}],[\"具体操作如下\",{\"1\":{\"169\":1}}],[\"具体格式我们会在\",{\"1\":{\"50\":1}}],[\"启用\",{\"1\":{\"193\":1}}],[\"启动运行mongo\",{\"1\":{\"1219\":1}}],[\"启动了一个无条件的for循环以便持续监听\",{\"1\":{\"1055\":1}}],[\"启动了但还没提交的事务\",{\"1\":{\"362\":1}}],[\"启动节点\",{\"1\":{\"427\":1}}],[\"启动sentinel的第二个步骤就是将一部分普通redis服务器使用的代\",{\"1\":{\"426\":1}}],[\"启动一个goroutine\",{\"1\":{\"1055\":1}}],[\"启动一个定时任务\",{\"1\":{\"381\":1}}],[\"启动一个挂载数据卷的容器\",{\"1\":{\"74\":1}}],[\"启动事务时\",{\"1\":{\"362\":1}}],[\"启动已终止容器\",{\"0\":{\"65\":1}}],[\"启动容器有两种方式\",{\"1\":{\"63\":1}}],[\"启动容器\",{\"0\":{\"63\":1}}],[\"启动\",{\"0\":{\"1054\":1},\"1\":{\"47\":1}}],[\"制造敌意\",{\"1\":{\"627\":1}}],[\"制定最严格的政策\",{\"1\":{\"193\":1}}],[\"制作想制作的任何东西\",{\"1\":{\"740\":1}}],[\"制作出了很臃肿的镜像的原因之一\",{\"1\":{\"58\":1}}],[\"制作镜像\",{\"1\":{\"55\":1}}],[\"制作gin框架的视频\",{\"1\":{\"4\":1}}],[\"政府机构的缺点\",{\"0\":{\"718\":1}}],[\"政府不会让大多数人失业\",{\"1\":{\"717\":1}}],[\"政府的权力就应当更削弱\",{\"1\":{\"717\":1}}],[\"政府的权力一直是被削弱的\",{\"1\":{\"717\":1}}],[\"政府尽管控制着主流的互联网\",{\"1\":{\"534\":1}}],[\"政府和企业根本没有能力彻底消灭自由互联网\",{\"1\":{\"534\":1}}],[\"政府已然是数据时代最大的赢家\",{\"1\":{\"533\":1}}],[\"政府领导也不知道互联网究竟是什么\",{\"1\":{\"532\":1}}],[\"政府也没有在互联网上建立自己的网站\",{\"1\":{\"532\":1}}],[\"政策旨在为每个\",{\"1\":{\"193\":1}}],[\"政治自古以来都是涉及生死的\",{\"1\":{\"783\":1}}],[\"政治等\",{\"1\":{\"578\":1}}],[\"政治\",{\"1\":{\"19\":1,\"34\":1}}],[\"登录\",{\"0\":{\"196\":1,\"197\":1,\"198\":1},\"1\":{\"193\":1}}],[\"促进松散耦合\",{\"1\":{\"881\":1}}],[\"促进和践行人道主义\",{\"1\":{\"611\":1}}],[\"促进学习\",{\"1\":{\"611\":1}}],[\"促进使用无密码登录机制\",{\"1\":{\"193\":1}}],[\"促进平滑快速的交易\",{\"1\":{\"151\":1}}],[\"专心设计方案\",{\"1\":{\"663\":2}}],[\"专心投入其中\",{\"1\":{\"587\":1}}],[\"专注于真正重要的事情\",{\"0\":{\"754\":1}}],[\"专注app体验\",{\"1\":{\"521\":1}}],[\"专注计划\",{\"1\":{\"4\":1}}],[\"专\",{\"1\":{\"426\":1}}],[\"专门用来缓存文件数据的\",{\"1\":{\"360\":1}}],[\"专为无服务器设计\",{\"1\":{\"193\":1}}],[\"组织才能成功运行微服务\",{\"1\":{\"723\":1}}],[\"组织化起来\",{\"1\":{\"660\":1}}],[\"组\",{\"1\":{\"395\":2,\"426\":1,\"428\":2,\"435\":1}}],[\"组提交\",{\"1\":{\"360\":2}}],[\"组成了两个测试用例\",{\"1\":{\"973\":1}}],[\"组成\",{\"1\":{\"427\":1,\"434\":1}}],[\"组成集群\",{\"1\":{\"413\":1}}],[\"组成新链表\",{\"1\":{\"308\":1}}],[\"组成的bag\",{\"1\":{\"264\":2}}],[\"组成这样的多层存储结构去运行的\",{\"1\":{\"55\":1}}],[\"组合模式作为结构模式可以将对象组合成树状的结构\",{\"1\":{\"916\":1}}],[\"组合模式描述了对象的部分\",{\"1\":{\"914\":1}}],[\"组合模式\",{\"0\":{\"914\":1}}],[\"组合不强调元素之间的顺序\",{\"1\":{\"242\":1}}],[\"组合总和是无重复元素的数组candidates\",{\"1\":{\"212\":1}}],[\"组合总和有如下区别\",{\"1\":{\"212\":1}}],[\"组合总和ii\",{\"0\":{\"212\":1}}],[\"组合总和iii\",{\"0\":{\"209\":1}}],[\"组合总和\",{\"0\":{\"211\":1}}],[\"组合问题\",{\"1\":{\"206\":1,\"213\":1}}],[\"组合\",{\"0\":{\"207\":1,\"208\":1},\"1\":{\"206\":1}}],[\"组建通读一遍可以省去很多debug的时间\",{\"1\":{\"193\":1}}],[\"~\",{\"1\":{\"192\":1}}],[\"管理层等\",{\"1\":{\"792\":1}}],[\"管理连接\",{\"1\":{\"349\":1}}],[\"管理等功能\",{\"1\":{\"191\":1}}],[\"管理本地主机上的镜像\",{\"1\":{\"49\":1}}],[\"授权\",{\"1\":{\"191\":1,\"1047\":1}}],[\"授权创建代币新单位的地址\",{\"1\":{\"132\":1}}],[\"港元稳定币可以解决当前支付体系延迟的问题\",{\"1\":{\"188\":1}}],[\"港币等等\",{\"1\":{\"180\":1}}],[\"香港今年7月份有许多领域专家呼吁香港政府发行以香港外汇储备作为外汇的港元稳定币hkbg\",{\"1\":{\"188\":1}}],[\"金诺克\",{\"1\":{\"628\":1}}],[\"金钱的认知\",{\"1\":{\"615\":1}}],[\"金钱的流通过程中集结了所有人对金钱的看法\",{\"1\":{\"615\":1}}],[\"金钱最终在流动中会流向对金钱有认知有掌控力的人的手中\",{\"1\":{\"614\":1}}],[\"金钱是你已经有的资本\",{\"1\":{\"673\":1}}],[\"金钱是一个东西呀\",{\"1\":{\"614\":1}}],[\"金钱是有生命力的\",{\"0\":{\"614\":1,\"615\":1}}],[\"金钱也是有诞生\",{\"1\":{\"614\":1}}],[\"金钱总额\",{\"1\":{\"242\":2}}],[\"金融服务\",{\"1\":{\"188\":1}}],[\"金额\",{\"1\":{\"135\":1}}],[\"算法治理优于人员治理\",{\"1\":{\"804\":1}}],[\"算法推给你的短视频\",{\"1\":{\"689\":1}}],[\"算法4\",{\"1\":{\"670\":1}}],[\"算法能够继续运行\",{\"1\":{\"437\":1}}],[\"算法加锁三个过程\",{\"1\":{\"437\":1}}],[\"算法的基本思路\",{\"1\":{\"437\":1}}],[\"算法的实现思路是这样的\",{\"1\":{\"377\":1}}],[\"算法\",{\"1\":{\"377\":2,\"413\":1}}],[\"算法无法避免下面这两个问题\",{\"1\":{\"377\":1}}],[\"算法并没有被\",{\"1\":{\"377\":1}}],[\"算法稳定币能否在极端情况下价格保持稳定是非常困难的\",{\"1\":{\"186\":1}}],[\"算法稳定币\",{\"0\":{\"186\":1}}],[\"算创新\",{\"1\":{\"11\":1}}],[\"透明的\",{\"1\":{\"185\":1}}],[\"曾经的良性循环变为了恶性循环\",{\"1\":{\"648\":1}}],[\"曾经的传统互联网只是一小撮极客分子的尝试\",{\"1\":{\"534\":1}}],[\"曾经我们祖母那个时期的文化教导\",{\"1\":{\"623\":1}}],[\"曾经是攥在手里的纸币\",{\"1\":{\"614\":1}}],[\"曾经是最大不得超过\",{\"1\":{\"58\":1}}],[\"曾经有过的秩序都被推翻从来\",{\"1\":{\"609\":1}}],[\"曾经有的秩序都不存在了\",{\"1\":{\"609\":1}}],[\"曾经有段时间的价格下跌很大\",{\"1\":{\"184\":1}}],[\"曾经走过的路\",{\"1\":{\"551\":1}}],[\"现有的人际关系\",{\"1\":{\"581\":1}}],[\"现有矩阵\",{\"1\":{\"276\":1}}],[\"现\",{\"1\":{\"426\":1}}],[\"现代计算机中为了提高文件的写入效率\",{\"1\":{\"422\":1}}],[\"现实世界中有许多应用fsm的地方\",{\"1\":{\"1009\":1}}],[\"现实仍然不会瞬间改变\",{\"1\":{\"810\":1}}],[\"现实交集图仅仅看作是一个早期\",{\"1\":{\"585\":1}}],[\"现实之箱\",{\"1\":{\"578\":1}}],[\"现实盒子也是一样\",{\"1\":{\"578\":1}}],[\"现实盒子\",{\"1\":{\"578\":2}}],[\"现实的谦逊的跌落并不让人感觉好\",{\"1\":{\"575\":1}}],[\"现实\",{\"1\":{\"572\":2,\"674\":1}}],[\"现实中就是一个人仅仅通过20年的教育就可以到达博士学历的层次\",{\"1\":{\"605\":1}}],[\"现实中一个人在网上使用的app数量其实很少\",{\"1\":{\"533\":1}}],[\"现实中有许多不同的资产适合通过代币化的方式来促进交易的增加流动性\",{\"1\":{\"188\":1}}],[\"现实情况往往没有想的这么简单\",{\"1\":{\"385\":1}}],[\"现象\",{\"0\":{\"788\":1},\"1\":{\"361\":3}}],[\"现金等价物通过监管审批机构认可的\",{\"1\":{\"188\":1}}],[\"现金\",{\"1\":{\"184\":1}}],[\"现在发泄并不会有任何作用\",{\"1\":{\"795\":1}}],[\"现在假设市场不景气\",{\"1\":{\"751\":1}}],[\"现在全球的富豪很少有靠出售资源获得大量财富的\",{\"1\":{\"746\":1}}],[\"现在绝大多数人的注意力都在社交媒体上\",{\"1\":{\"738\":1}}],[\"现在想一想\",{\"1\":{\"734\":1}}],[\"现在人们的注意力大多都在互联网上\",{\"1\":{\"734\":1}}],[\"现在每个人都已经离不开云了\",{\"1\":{\"709\":1}}],[\"现在云计算早已经融入大众的生活\",{\"1\":{\"709\":1}}],[\"现在我已经在七牛云实习了半年时间\",{\"1\":{\"695\":1}}],[\"现在我们可以在命令行中运行该程序\",{\"1\":{\"1161\":2,\"1163\":2}}],[\"现在我们可以根据需要获取任意时刻的速率值\",{\"1\":{\"979\":1}}],[\"现在我们开始编写main\",{\"1\":{\"1079\":1}}],[\"现在我们思考一下\",{\"1\":{\"1009\":1}}],[\"现在我们需要为代码中的recordstats函数编写单元测试\",{\"1\":{\"975\":1}}],[\"现在我们需要为hellohandler函数编写单元测试\",{\"1\":{\"972\":1}}],[\"现在我们需要编写一些函数来确保块没有被篡改\",{\"1\":{\"515\":1}}],[\"现在我们已经踏入了信息时代\",{\"1\":{\"646\":1}}],[\"现在我们来谈谈您\",{\"1\":{\"572\":1}}],[\"现在我们想要一种方便的方式来查看我们的区块链并写入它\",{\"1\":{\"515\":1}}],[\"现在我们知道事务在提交的时候\",{\"1\":{\"360\":1}}],[\"现在我们明白了这个\",{\"1\":{\"59\":1}}],[\"现在还是未来\",{\"1\":{\"646\":1}}],[\"现在成了什么样子呢\",{\"1\":{\"631\":1}}],[\"现在仍然可以通过史书去查看过去一两千年的历史\",{\"1\":{\"605\":1}}],[\"现在让我们转向你的现实盒子\",{\"1\":{\"577\":1}}],[\"现在让我们以定制一个\",{\"1\":{\"55\":1}}],[\"现在你在短视频中看到的各种炫酷的汽车\",{\"1\":{\"734\":1}}],[\"现在你请先仔细思考一下这个社会上有多少的人根本不在乎未来\",{\"1\":{\"680\":1}}],[\"现在你必须真正采取行动\",{\"1\":{\"586\":1}}],[\"现在你已经进行了审查\",{\"1\":{\"576\":1}}],[\"现在你明白为什么要将message单独作为一个结构了吗\",{\"1\":{\"516\":1}}],[\"现在专注于寻找被锁藏的与职业相关的渴望\",{\"1\":{\"576\":1}}],[\"现在是2023年9月30日\",{\"1\":{\"695\":1}}],[\"现在是信息社会了\",{\"1\":{\"677\":1}}],[\"现在是微信\",{\"1\":{\"614\":1}}],[\"现在是时候拿出你在文章开头时我让你画下的职业规划地图了\",{\"1\":{\"585\":1}}],[\"现在是3月31日\",{\"1\":{\"573\":1}}],[\"现在是深入思考的时候了\",{\"1\":{\"572\":1}}],[\"现在是不得超过\",{\"1\":{\"58\":1}}],[\"现在来看还是一个巨大的未知数\",{\"1\":{\"534\":1}}],[\"现在它拥有比以前更好的技术和前所未有的明确目的\",{\"1\":{\"534\":1}}],[\"现在的程序员可以用cursor和各种ai辅助编程\",{\"1\":{\"764\":1}}],[\"现在的程序员编码也是依靠网页去编码\",{\"1\":{\"532\":1}}],[\"现在的年轻人外卖\",{\"1\":{\"764\":1}}],[\"现在的热点在未来看都是类似\",{\"1\":{\"734\":1}}],[\"现在的潮流\",{\"1\":{\"734\":1}}],[\"现在的05后\",{\"1\":{\"534\":1}}],[\"现在的互联网本身已经被看作是一个巨大的广告工具\",{\"1\":{\"533\":1}}],[\"现在的互联网或许是一个错误\",{\"1\":{\"533\":1}}],[\"现在的手机市场已经完全进入寡头垄断市场\",{\"1\":{\"9\":1}}],[\"现在\",{\"1\":{\"514\":1,\"515\":1,\"572\":1,\"585\":1,\"587\":1,\"1208\":1}}],[\"现在看一下用梵文写的字符串\",{\"1\":{\"474\":1}}],[\"现在在模式变量\",{\"1\":{\"450\":1}}],[\"现在考虑网格中有障碍物\",{\"1\":{\"230\":1}}],[\"现在pusd的铸币利率提升了\",{\"1\":{\"177\":1}}],[\"现在使用\",{\"1\":{\"74\":1}}],[\"现在就可以理解刚才的命令\",{\"1\":{\"60\":1}}],[\"现在则有一种现代感的简洁美\",{\"1\":{\"8\":1}}],[\"公司的销售者的职责是向市场销售公司产品\",{\"1\":{\"792\":1}}],[\"公司的生产者职责为公司产出可销售产品\",{\"1\":{\"792\":1}}],[\"公司是商业机构而不是慈善机构\",{\"1\":{\"792\":1}}],[\"公司雇佣你肯定不是为了让你学习的\",{\"1\":{\"792\":1}}],[\"公司发行管理的稳定币\",{\"1\":{\"184\":1}}],[\"公平性等等\",{\"1\":{\"698\":1}}],[\"公共状态\",{\"1\":{\"933\":1}}],[\"公共子序列\",{\"1\":{\"260\":3}}],[\"公共的\",{\"1\":{\"259\":1}}],[\"公开募集资本来收购\",{\"1\":{\"673\":1}}],[\"公开的账本\",{\"1\":{\"94\":1}}],[\"公开服务是官方的\",{\"1\":{\"48\":1}}],[\"公开服务是开放给用户使用\",{\"1\":{\"48\":1}}],[\"公开服务\",{\"1\":{\"48\":1}}],[\"日\",{\"1\":{\"1212\":1}}],[\"日常使用都让我感觉非常舒适\",{\"1\":{\"743\":1}}],[\"日后再若遇到同样的问题\",{\"1\":{\"525\":1}}],[\"日志是一个非常重要的工具\",{\"1\":{\"1177\":1}}],[\"日志是如何实现的\",{\"1\":{\"413\":1}}],[\"日志记录器等\",{\"1\":{\"895\":1}}],[\"日志记录\",{\"1\":{\"821\":1}}],[\"日志记录的是操作命令\",{\"1\":{\"413\":1}}],[\"日志非常多\",{\"1\":{\"413\":1}}],[\"日志过大\",{\"1\":{\"413\":1}}],[\"日志数据写回硬盘\",{\"1\":{\"413\":1}}],[\"日志也是在主线程中执行\",{\"1\":{\"413\":1}}],[\"日志里后\",{\"1\":{\"413\":1}}],[\"日志里\",{\"1\":{\"413\":1}}],[\"日志的大小\",{\"1\":{\"377\":1}}],[\"日志的文件名叫\",{\"1\":{\"357\":1}}],[\"日志满了的情况下\",{\"1\":{\"377\":1}}],[\"日志让\",{\"1\":{\"377\":1}}],[\"日志中间件将gin的启动与响应日志输出到控制台和recovery\",{\"1\":{\"1050\":1}}],[\"日志中\",{\"1\":{\"362\":1}}],[\"日志丢失的风险\",{\"1\":{\"358\":1}}],[\"日志空间大小是固定\",{\"1\":{\"358\":1}}],[\"日志只能用于归档\",{\"1\":{\"358\":1}}],[\"日志\",{\"0\":{\"355\":1},\"1\":{\"340\":1,\"355\":1,\"359\":1,\"360\":1,\"413\":3}}],[\"日元等等\",{\"1\":{\"182\":1}}],[\"日凌晨\",{\"1\":{\"27\":1}}],[\"火币等价格\",{\"1\":{\"177\":1}}],[\"想使用volumn持久化的话可以代替使用下面的两个命令\",{\"1\":{\"1219\":1}}],[\"想象成传递信号的工具\",{\"1\":{\"1156\":1}}],[\"想象一下\",{\"1\":{\"915\":1,\"979\":1}}],[\"想象一下你雇了一个人来打扫房子\",{\"1\":{\"751\":1}}],[\"想象一下如果每次听歌都要事先下载音乐文件\",{\"1\":{\"709\":1}}],[\"想象一下遇到抉择的时候\",{\"1\":{\"631\":1}}],[\"想象一下有一个其他人问你是谁的时候\",{\"1\":{\"618\":1}}],[\"想通过=适配器进行转换\",{\"1\":{\"905\":1}}],[\"想一想你如果在2013年就尝试做去中心化金融\",{\"1\":{\"799\":1}}],[\"想一下\",{\"1\":{\"385\":1}}],[\"想告诉过去的自己哪些建议\",{\"1\":{\"776\":1}}],[\"想种粮食种庄稼\",{\"1\":{\"646\":1,\"677\":1}}],[\"想法\",{\"1\":{\"626\":1}}],[\"想法从何而来\",{\"0\":{\"10\":1}}],[\"想特立独行且正确\",{\"1\":{\"605\":1}}],[\"想想有多少老年人能正确使用电脑\",{\"1\":{\"771\":1}}],[\"想想这些热点你都有没有参与过\",{\"1\":{\"734\":1}}],[\"想想chatgpt吧\",{\"1\":{\"717\":1}}],[\"想想未来\",{\"1\":{\"648\":1}}],[\"想想你对这个人\",{\"1\":{\"623\":1}}],[\"想想你的内部层次结构可能是什么样的\",{\"1\":{\"577\":1}}],[\"想想动词有多少种变体就知道了\",{\"1\":{\"467\":1}}],[\"想出校门去商城逛一圈\",{\"1\":{\"553\":1}}],[\"想起来手机里都没有微信了\",{\"1\":{\"552\":1}}],[\"想看一看朋友圈里朋友的生活近况\",{\"1\":{\"551\":1}}],[\"想去做也可以做得出来\",{\"1\":{\"525\":1}}],[\"想要释放读锁时\",{\"1\":{\"1143\":1}}],[\"想要启动一个新的\",{\"1\":{\"1135\":1}}],[\"想要盒子\",{\"1\":{\"578\":2}}],[\"想要更好地获取公众赞誉的那部分在社交触\",{\"1\":{\"573\":1}}],[\"想要\",{\"0\":{\"573\":1},\"1\":{\"572\":2,\"573\":3}}],[\"想要个联系方式\",{\"1\":{\"553\":1}}],[\"想要准确的从\",{\"1\":{\"487\":1}}],[\"想要接收信息的客户端不在线或者断线\",{\"1\":{\"426\":1}}],[\"想要提高应用的性能\",{\"1\":{\"388\":1}}],[\"想要提升查询性能\",{\"1\":{\"376\":1}}],[\"想要保证数据库和缓存一致性\",{\"1\":{\"385\":1}}],[\"想要缓存利用率\",{\"1\":{\"382\":1}}],[\"想要达到相等\",{\"1\":{\"265\":1}}],[\"想要借稳定币怎么办呢\",{\"1\":{\"177\":1}}],[\"假定我们需要对流程规则进行修改\",{\"1\":{\"1010\":1}}],[\"假期最后一天在元旦当天和huliwei聊天提起来约饭的事儿\",{\"1\":{\"779\":1}}],[\"假装自己知道的比做的还多\",{\"1\":{\"627\":1}}],[\"假装你现在就可以弄清楚第二个\",{\"1\":{\"585\":1}}],[\"假如这个时候你手上有更多的usdt\",{\"1\":{\"177\":1}}],[\"假如我们在1\",{\"1\":{\"177\":1}}],[\"假如在其他平台贷款了1000usdt\",{\"1\":{\"177\":1}}],[\"假设id和ui已经初始化\",{\"1\":{\"1241\":1}}],[\"假设object的大小是16b\",{\"1\":{\"1148\":1}}],[\"假设年收入\",{\"1\":{\"751\":1}}],[\"假设你是一名团队的领导\",{\"1\":{\"1156\":1}}],[\"假设你们公司中台提供了一个用户中心的库varys\",{\"1\":{\"978\":1}}],[\"假设你年收入\",{\"1\":{\"751\":1}}],[\"假设你要\",{\"1\":{\"362\":1}}],[\"假设模块化是一个理想的属性\",{\"1\":{\"722\":1}}],[\"假设您从某个交易所购买比特币\",{\"1\":{\"703\":1}}],[\"假设测试是直观的\",{\"1\":{\"585\":1}}],[\"假设一些事情已经改变\",{\"1\":{\"584\":1}}],[\"假设一个结果代币和它的互补代币总是可以合并成一个单位的抵押资产\",{\"1\":{\"169\":1}}],[\"假设在上面的基础上再增加一个状态\",{\"1\":{\"1010\":1}}],[\"假设在一个包含a\",{\"1\":{\"435\":1}}],[\"假设在账户余额表插入一条小林余额为\",{\"1\":{\"362\":1}}],[\"假设我们要编写一个简单的命令行工具\",{\"1\":{\"1161\":1}}],[\"假设我们实现了一个获取店铺客单价的需求\",{\"1\":{\"980\":1}}],[\"假设我们现在有一个根据时间判断报警信息发送速率的模块\",{\"1\":{\"979\":1}}],[\"假设我们的业务逻辑是搭建一个http\",{\"1\":{\"972\":1}}],[\"假设我们采用\",{\"1\":{\"383\":1}}],[\"假设我们只需要查询商品的名称\",{\"1\":{\"353\":1}}],[\"假设事务\",{\"1\":{\"374\":1}}],[\"假设每个\",{\"1\":{\"357\":1}}],[\"假设输入的数组的任意两个数字都互不相同\",{\"1\":{\"306\":1}}],[\"假设输入的前序遍历和中序遍历的结果中都不含重复的数字\",{\"1\":{\"279\":1}}],[\"假设压入栈的所有数字均不相等\",{\"1\":{\"302\":1}}],[\"假设加法总和为x\",{\"1\":{\"239\":1}}],[\"假设原本1000pusd的贷款\",{\"1\":{\"177\":1}}],[\"假设有许多用户在pando协议里卖出pusd同时买入usdt\",{\"1\":{\"175\":1}}],[\"假设\",{\"1\":{\"150\":2,\"372\":1,\"373\":1}}],[\"假设价格预言机提供的\",{\"1\":{\"150\":2}}],[\"假设区块时间为\",{\"1\":{\"117\":1}}],[\"复\",{\"1\":{\"426\":1}}],[\"复杂的原则和过程中的各个步骤\",{\"1\":{\"653\":1}}],[\"复杂度是\",{\"1\":{\"399\":1}}],[\"复杂度的节点查找\",{\"1\":{\"397\":1}}],[\"复杂链表的复制\",{\"0\":{\"308\":1}}],[\"复制下线主节点的所有从节点里面\",{\"1\":{\"433\":1}}],[\"复制与故障转移\",{\"0\":{\"433\":1}}],[\"复制的实现\",{\"1\":{\"425\":1}}],[\"复制的过程就是将\",{\"1\":{\"359\":1}}],[\"复制积压缓冲区这些东西\",{\"1\":{\"425\":1}}],[\"复制积压缓冲区是由主服务器维护的一个固定长度\",{\"1\":{\"425\":1}}],[\"复制积压缓冲区\",{\"1\":{\"425\":1}}],[\"复制偏移量最大的从服务器\",{\"1\":{\"426\":1}}],[\"复制偏移量最大的从服务器就是保存着最新数据的从服务器\",{\"1\":{\"426\":1}}],[\"复制偏移量\",{\"1\":{\"425\":2}}],[\"复制\",{\"0\":{\"425\":1}}],[\"复制值的函数\",{\"1\":{\"395\":1}}],[\"复制键的函数\",{\"1\":{\"395\":1}}],[\"复制到所有从库上\",{\"1\":{\"359\":1}}],[\"复制一个复杂链表\",{\"1\":{\"308\":1}}],[\"复原ip地址\",{\"0\":{\"214\":1}}],[\"复盘pusd铸币利率提高的市场机会\",{\"0\":{\"177\":1}}],[\"复用互斥锁提供的能力\",{\"1\":{\"1143\":1}}],[\"复用\",{\"1\":{\"51\":1}}],[\"市面上的pusd价格就提升了\",{\"1\":{\"176\":1}}],[\"市场美元价格为\",{\"1\":{\"150\":2}}],[\"市场比率在一定程度上反映了过去一段时间人们对未来的看法\",{\"1\":{\"19\":1,\"34\":1}}],[\"流式请求就是流拦截器\",{\"1\":{\"1097\":1}}],[\"流式\",{\"1\":{\"1073\":1}}],[\"流式grpc允许我们在一个rpc请求中建立一个stream\",{\"1\":{\"1072\":1}}],[\"流式grpc\",{\"0\":{\"1072\":1}}],[\"流式grpc与错误处理\",{\"0\":{\"1071\":1}}],[\"流程是\",{\"1\":{\"1135\":1}}],[\"流程和行为控制\",{\"1\":{\"1010\":1}}],[\"流程说明\",{\"1\":{\"1009\":1}}],[\"流行\",{\"1\":{\"994\":1}}],[\"流行音乐\",{\"1\":{\"789\":1}}],[\"流行思想的影响\",{\"0\":{\"620\":1},\"1\":{\"618\":1}}],[\"流媒体提供商给你推送的短视频\",{\"1\":{\"709\":1}}],[\"流的效果\",{\"1\":{\"412\":1}}],[\"流\",{\"1\":{\"412\":1,\"1072\":1}}],[\"流通量\",{\"0\":{\"174\":1}}],[\"流动性质押获得\",{\"1\":{\"153\":1}}],[\"流动性提供者从资金中赚取利息\",{\"1\":{\"151\":1}}],[\"把一个类的接口转换成客户希望的另一个接口\",{\"1\":{\"906\":1}}],[\"把这个人弄进国内会多费些周折\",{\"1\":{\"751\":1}}],[\"把那些没营养没价值天天传播焦虑的视频都给我统统屏蔽掉\",{\"1\":{\"689\":1}}],[\"把滑石粉涂在橡胶手套上\",{\"1\":{\"643\":1}}],[\"把它写下来并用方括号\",{\"1\":{\"628\":1}}],[\"把它放下\",{\"1\":{\"572\":1}}],[\"把判断建立在第一印象和直觉反应上\",{\"1\":{\"627\":1}}],[\"把判断建立在证据而不是个人喜好上\",{\"1\":{\"627\":1}}],[\"把问题和有争议的议题视为对自我的损害或威胁\",{\"1\":{\"627\":1}}],[\"把问题和有争议的议题视为令人兴奋的挑战\",{\"1\":{\"627\":1}}],[\"把钱花在买彩票上\",{\"1\":{\"626\":1}}],[\"把对任何人\",{\"1\":{\"623\":1}}],[\"把物质主义描绘得比理想主义更有意义\",{\"1\":{\"621\":1}}],[\"把自我满足描绘得比自我控制更让人向往\",{\"1\":{\"621\":1}}],[\"把自己的思路放到产品上\",{\"1\":{\"11\":1}}],[\"把社会看作是科学实验室\",{\"1\":{\"585\":1}}],[\"把传统智慧等同于真理\",{\"1\":{\"578\":1}}],[\"把你的一部分放在最底层就是告诉它\",{\"1\":{\"577\":1}}],[\"把你对激情的渴望放在你的层次结构的顶端\",{\"1\":{\"577\":1}}],[\"把更高尚的品质放在首位可能是一个不错的目标\",{\"1\":{\"577\":1}}],[\"把所有隐私交给国家是没有问题的\",{\"1\":{\"533\":1}}],[\"把时间当作朋友\",{\"1\":{\"502\":1,\"669\":1,\"757\":1}}],[\"把日志文件写入磁盘的时候\",{\"1\":{\"413\":1}}],[\"把缓存删掉\",{\"1\":{\"386\":1}}],[\"把n个骰子扔在地上\",{\"1\":{\"337\":1}}],[\"把数字翻译成字符串\",{\"0\":{\"318\":1}}],[\"把字符串\",{\"1\":{\"277\":1}}],[\"把\",{\"1\":{\"169\":4,\"345\":1,\"359\":1,\"360\":1}}],[\"匹配同m不匹配的值\",{\"1\":{\"977\":1}}],[\"匹配等于nil的值\",{\"1\":{\"977\":1}}],[\"匹配使用反射reflect\",{\"1\":{\"977\":2}}],[\"匹配任何类型的任何值\",{\"1\":{\"977\":1}}],[\"匹配的是static\",{\"1\":{\"460\":1}}],[\"匹配\",{\"1\":{\"291\":1}}],[\"匹配是指字符串的所有字符匹配整个模式\",{\"1\":{\"291\":1}}],[\"匹配操作概述\",{\"1\":{\"169\":1}}],[\"匹配场景\",{\"1\":{\"169\":1}}],[\"场景下依旧有不一致问题\",{\"1\":{\"388\":1}}],[\"场景下无法保证缓存和数据一致性\",{\"1\":{\"388\":1}}],[\"场景\",{\"1\":{\"169\":1}}],[\"接触到了prometheus\",{\"1\":{\"1030\":1}}],[\"接受一个整数或浮点数值\",{\"1\":{\"1198\":1}}],[\"接受一个表示浮点数的字符串\",{\"1\":{\"1198\":1}}],[\"接受请求并返回建立的连接\",{\"1\":{\"1055\":1}}],[\"接受请求\",{\"1\":{\"1055\":1}}],[\"接受和处理网络请求\",{\"1\":{\"1055\":1}}],[\"接受网络请求并处理\",{\"1\":{\"1055\":1}}],[\"接受访问者\",{\"1\":{\"867\":1}}],[\"接受两个参数\",{\"1\":{\"479\":1}}],[\"接口的变量\",{\"1\":{\"1169\":1}}],[\"接口的变量的指针\",{\"1\":{\"1163\":1}}],[\"接口的两个方法\",{\"1\":{\"1163\":1}}],[\"接口的底层实现\",{\"0\":{\"1138\":1}}],[\"接口类型的变量\",{\"1\":{\"1146\":1}}],[\"接口在定义一组方法时没有对实现的接收者做限制\",{\"1\":{\"1138\":1}}],[\"接口完成支付\",{\"1\":{\"1010\":1}}],[\"接口隔离原则\",{\"1\":{\"982\":1}}],[\"接口抽象进行解耦\",{\"0\":{\"980\":1}}],[\"接口定义了迭代器对象的行为\",{\"1\":{\"827\":1}}],[\"接口定义了执行操作的方法\",{\"1\":{\"820\":1}}],[\"接口\",{\"0\":{\"1005\":1},\"1\":{\"820\":3,\"821\":1,\"827\":4,\"828\":1,\"967\":1,\"1138\":1,\"1161\":1,\"1163\":2,\"1191\":1}}],[\"接连发生的丑闻导致拜登退出候选人竞争\",{\"1\":{\"628\":1}}],[\"接\",{\"1\":{\"426\":4,\"433\":1,\"434\":1}}],[\"接收数据时\",{\"1\":{\"1137\":1}}],[\"接收数据\",{\"1\":{\"1137\":3}}],[\"接收流式请求\",{\"1\":{\"1072\":2,\"1074\":1}}],[\"接收调用结果\",{\"1\":{\"1063\":1}}],[\"接收两个参数\",{\"1\":{\"1001\":1}}],[\"接收消息\",{\"1\":{\"833\":1}}],[\"接收消息的节点为接收者\",{\"1\":{\"434\":1}}],[\"接收者将根据clustermsgdatagossip结构记录的信息\",{\"1\":{\"435\":1}}],[\"接收者将根据结构中记录的ip地址和端口号等信息\",{\"1\":{\"435\":1}}],[\"接收者会访问消息正文中的两个clustermsgdatagossip结构\",{\"1\":{\"435\":1}}],[\"接收者会向发送者返回一条pong消息\",{\"1\":{\"434\":1}}],[\"接收命令的节点会计算出命令要处理的数据库键属于哪个槽\",{\"1\":{\"429\":1}}],[\"接收sentinel\",{\"1\":{\"426\":1}}],[\"接收信息的sentinel将根据信息中的各个参数\",{\"1\":{\"426\":1}}],[\"接收来自主服务器和从服务器的频道信息\",{\"1\":{\"426\":1}}],[\"接收到\",{\"1\":{\"1009\":1}}],[\"接收到publish命令的节点不仅会向channel频道发送消息message\",{\"1\":{\"435\":1}}],[\"接收到psync命令的主服务器会向从服务器返回以下三种回复的其中一种\",{\"1\":{\"425\":1}}],[\"接收到消息的节点就可以根据这个名字来判断是哪个节点下线了\",{\"1\":{\"435\":1}}],[\"接收到该命令的节点首先会在自己的clusterstate\",{\"1\":{\"433\":1}}],[\"接收到另一个sentinel\",{\"1\":{\"426\":1}}],[\"接收到这个命令的主服务器会通过这两个参数来判断应该对从服务器执行哪种同步操作\",{\"1\":{\"425\":1}}],[\"接入\",{\"0\":{\"196\":1}}],[\"接入mixin\",{\"0\":{\"195\":1}}],[\"接着启动服务\",{\"1\":{\"1080\":1}}],[\"接着我们创建一个student\",{\"1\":{\"1084\":1}}],[\"接着我们传递\",{\"1\":{\"1080\":1}}],[\"接着我们用curl脚本命令\",{\"1\":{\"1079\":1}}],[\"接着我们定义一个gap\",{\"1\":{\"947\":1}}],[\"接着运行go\",{\"1\":{\"990\":1}}],[\"接着往主要的main程序添加命令启动各个服务就好\",{\"1\":{\"989\":1}}],[\"接着就可以使用cobra命令行来创建程序了\",{\"1\":{\"989\":1}}],[\"接着就可以开始做比较了\",{\"1\":{\"948\":1}}],[\"接着你可以点进对应的person\",{\"1\":{\"1084\":1}}],[\"接着你要创建一个mocks目录\",{\"1\":{\"977\":1}}],[\"接着你进入到文档后发现pnpm\",{\"1\":{\"192\":1}}],[\"接着在对应的包下创建一个quicksort\",{\"1\":{\"967\":1}}],[\"接着堆化堆顶的元素\",{\"1\":{\"950\":1}}],[\"接着压完马路就去了南京东路拐角处一家超级实惠的苍蝇小馆\",{\"1\":{\"779\":1}}],[\"接着可以让生意不断地做下去\",{\"1\":{\"663\":1}}],[\"接着设置一个严格的时间表\",{\"1\":{\"663\":2}}],[\"接着再从字母串的形式去看\",{\"1\":{\"474\":1}}],[\"接着返回它\",{\"1\":{\"451\":1}}],[\"接着函数继续执行\",{\"1\":{\"450\":1}}],[\"接着使用\",{\"1\":{\"450\":1}}],[\"接着\",{\"1\":{\"425\":1,\"1067\":1,\"1084\":1,\"1194\":1}}],[\"接着服务器会根据save选项去保存条件\",{\"1\":{\"417\":1}}],[\"接着才是缓存页\",{\"1\":{\"376\":1}}],[\"接着调用引擎的提交事务接口\",{\"1\":{\"360\":1}}],[\"接着对旧的\",{\"1\":{\"357\":1}}],[\"接着从后往前遍历s去解题\",{\"1\":{\"277\":1}}],[\"接着将\",{\"1\":{\"192\":1}}],[\"接着需要安装prisma\",{\"1\":{\"191\":1}}],[\"接着用真实世界的代币usdc充当\",{\"1\":{\"169\":1}}],[\"接下来会通过几个例子来深入理解接口类型是如何初始化和传递的\",{\"1\":{\"1140\":1}}],[\"接下来用我们上一篇文章的方式\",{\"1\":{\"1072\":1}}],[\"接下来在这两个目录下都创建一个proto文件夹\",{\"1\":{\"1067\":1}}],[\"接下来创建两个目录person和student分别用来放对应的接口和代码\",{\"1\":{\"977\":1}}],[\"接下来就需要适应这个新名词出现在自己的世界里\",{\"1\":{\"1186\":1}}],[\"接下来就需要一个to来设置mock的新值\",{\"1\":{\"959\":1}}],[\"接下来就是数学问题了\",{\"1\":{\"584\":1}}],[\"接下来如果我可以通过写作来积累知识\",{\"1\":{\"605\":1}}],[\"接下来如无意外\",{\"1\":{\"192\":1}}],[\"接下来直接上手去做一点自己感兴趣的东西\",{\"1\":{\"525\":1}}],[\"接下来我们将详细分析\",{\"1\":{\"1139\":1}}],[\"接下来我们详细看一看message里的字段类型有哪些\",{\"1\":{\"1084\":1}}],[\"接下来我们来改一改代码\",{\"1\":{\"1072\":1}}],[\"接下来我们来讲解每一个详细步骤的使用方式\",{\"1\":{\"960\":1}}],[\"接下来我们该如何改造它\",{\"1\":{\"979\":1}}],[\"接下来我们就要开始递归了\",{\"1\":{\"948\":1}}],[\"接下来我们递归到的地方所剩余元素个数为\",{\"1\":{\"208\":1}}],[\"接下来我通过postman工具进行post\",{\"1\":{\"517\":1}}],[\"接下来run运行web服务\",{\"1\":{\"511\":1}}],[\"接下来\",{\"1\":{\"426\":1,\"677\":1,\"967\":1,\"1080\":1,\"1161\":2,\"1163\":1}}],[\"接下来的这一小节\",{\"1\":{\"976\":1}}],[\"接下来的代码我们都将在main\",{\"1\":{\"510\":1}}],[\"接下来的内容将首先介绍消息头\",{\"1\":{\"434\":1}}],[\"接下来的问题就是\",{\"1\":{\"413\":1}}],[\"接下来的几节就将讲解如何定制镜像\",{\"1\":{\"55\":1}}],[\"接下来详细说下\",{\"1\":{\"362\":1}}],[\"接下来所写的指令将作为镜像第一层开始存在\",{\"1\":{\"57\":1}}],[\"换句话来说\",{\"1\":{\"932\":1}}],[\"换句话说就是有人想将可投资资产放到房地产上\",{\"1\":{\"806\":1}}],[\"换句话说这个文档记录软件免费用户最多只能存储1gb的云端数据\",{\"1\":{\"710\":1}}],[\"换句话说这代表了大家如何看你\",{\"1\":{\"673\":1}}],[\"换句话说是让大脑随意思考\",{\"1\":{\"698\":1}}],[\"换句话说科技进步可以让更少的人在农业上的生产力更强\",{\"1\":{\"677\":1}}],[\"换句话说资本仍然还是我们社会的主导\",{\"1\":{\"648\":1}}],[\"换句话说\",{\"1\":{\"55\":2,\"426\":2,\"493\":1,\"574\":1,\"575\":1,\"605\":1,\"619\":1,\"648\":1,\"660\":2,\"1052\":1,\"1073\":1}}],[\"换而言之是算法一开始可能并不会给人贴上标签\",{\"1\":{\"689\":1}}],[\"换而言之独立思考可以在当下权衡各种利弊做出能让未来赢的决策\",{\"1\":{\"680\":1}}],[\"换而言之批判性思考就是寻找答案\",{\"1\":{\"626\":1}}],[\"换行了也会保持之前的字符串格式\",{\"1\":{\"483\":1}}],[\"换\",{\"1\":{\"266\":1,\"426\":1}}],[\"换取自己对未来事件发生情况的权益\",{\"1\":{\"169\":1}}],[\"索性近两天人站调研一下\",{\"1\":{\"169\":1}}],[\"索引操作\",{\"1\":{\"1222\":1}}],[\"索引对应的数据\",{\"1\":{\"1137\":1}}],[\"索引所在的数据拷贝到接收变量所在的内存空间上并将\",{\"1\":{\"1137\":1}}],[\"索引和\",{\"1\":{\"1137\":1}}],[\"索引从0开始计数\",{\"1\":{\"478\":1}}],[\"索引length\",{\"1\":{\"398\":1}}],[\"索引0\",{\"1\":{\"398\":1}}],[\"索引失效有哪些\",{\"1\":{\"353\":1}}],[\"索引的价值是快速定位\",{\"1\":{\"352\":1}}],[\"索引的定义就是帮助存储引擎快速获取数据的一种数据结构\",{\"1\":{\"350\":1}}],[\"索引最大的好处就是可以提高查询速度\",{\"1\":{\"350\":1}}],[\"索引常见问题\",{\"0\":{\"350\":1}}],[\"索引下推\",{\"1\":{\"349\":1}}],[\"索引数组\",{\"1\":{\"117\":1}}],[\"索引\",{\"1\":{\"117\":1,\"340\":1,\"1218\":1}}],[\"≈\",{\"1\":{\"166\":1}}],[\"避免服务过载等\",{\"1\":{\"1033\":1}}],[\"避免数据竞态问题\",{\"1\":{\"1005\":1}}],[\"避免热点\",{\"0\":{\"734\":1}}],[\"避免抄袭\",{\"0\":{\"628\":1}}],[\"避免那种痛苦\",{\"1\":{\"575\":1}}],[\"避免单点故障\",{\"1\":{\"436\":1}}],[\"避免锁的误释放\",{\"1\":{\"436\":1}}],[\"避免额外的检查开销\",{\"1\":{\"413\":1}}],[\"避免并发问题\",{\"1\":{\"383\":1}}],[\"避免借贷池枯竭\",{\"1\":{\"166\":1}}],[\"避免池子里的钱都被借走导致存款人无法withdraw\",{\"1\":{\"158\":1}}],[\"总共才70行的代码https\",{\"1\":{\"1181\":1}}],[\"总共有n个元素\",{\"1\":{\"950\":1}}],[\"总的逻辑也比较简单\",{\"1\":{\"1135\":1}}],[\"总的来说\",{\"1\":{\"151\":1,\"862\":1,\"876\":1,\"884\":1,\"1194\":1}}],[\"总体形势\",{\"1\":{\"584\":1}}],[\"总收入不如之前伪装成埃及魅力女神兼职\",{\"1\":{\"573\":1}}],[\"总需要有人做事情时想想合不合适\",{\"1\":{\"551\":1}}],[\"总代码架构图示\",{\"0\":{\"511\":1}}],[\"总览\",{\"0\":{\"509\":1}}],[\"总计\",{\"1\":{\"500\":1}}],[\"总\",{\"1\":{\"424\":1}}],[\"总是会有一种期望\",{\"1\":{\"810\":1}}],[\"总是\",{\"1\":{\"413\":1,\"422\":1}}],[\"总是等于size\",{\"1\":{\"395\":1}}],[\"总之生活在不同地区的时代和文化会让你成为一个完全不同的人\",{\"1\":{\"619\":1}}],[\"总之\",{\"1\":{\"384\":1,\"571\":1,\"573\":1,\"1073\":1}}],[\"总结来说\",{\"1\":{\"891\":1}}],[\"总结出了以下几个需要做的点\",{\"1\":{\"631\":1}}],[\"总结起来至少有下面几种影响\",{\"1\":{\"618\":1}}],[\"总结一下\",{\"1\":{\"618\":1}}],[\"总结一下这篇文章的重点\",{\"1\":{\"388\":1}}],[\"总结一句话就是\",{\"1\":{\"413\":1}}],[\"总结\",{\"0\":{\"388\":1,\"464\":1,\"599\":1,\"673\":1,\"815\":1,\"821\":1,\"828\":1,\"834\":1,\"839\":1,\"845\":1,\"850\":1,\"856\":1,\"862\":1,\"868\":1,\"876\":1,\"884\":1,\"891\":1,\"900\":1,\"906\":1,\"911\":1,\"916\":1,\"922\":1,\"928\":1,\"934\":1,\"940\":1,\"994\":1,\"1020\":1,\"1057\":1,\"1068\":1,\"1075\":1,\"1089\":1,\"1101\":1,\"1109\":1,\"1174\":1,\"1183\":1,\"1194\":1,\"1201\":1,\"1213\":1},\"1\":{\"349\":1,\"380\":1,\"605\":1,\"611\":1,\"618\":1,\"663\":1,\"944\":1,\"948\":1,\"950\":1,\"1080\":1,\"1135\":1,\"1150\":1,\"1183\":1}}],[\"总不能是以下标\",{\"1\":{\"259\":1}}],[\"总流通量可通过pando官网的leaf查询到\",{\"1\":{\"187\":1}}],[\"总供应有1217万美元\",{\"1\":{\"174\":1}}],[\"总存款金额\",{\"1\":{\"166\":1}}],[\"例子介绍\",{\"1\":{\"1241\":1}}],[\"例子\",{\"1\":{\"164\":1}}],[\"例如增加一定的时间量\",{\"1\":{\"1205\":1}}],[\"例如文件或命令行中的输入\",{\"1\":{\"1172\":1}}],[\"例如要分配16b大小这时需要查找下一个空闲元素\",{\"1\":{\"1150\":1}}],[\"例如发送的\",{\"1\":{\"1137\":1}}],[\"例如为gin\",{\"1\":{\"1056\":1}}],[\"例如1h30m10s\",{\"1\":{\"1004\":1}}],[\"例如1usdt可以兑换1\",{\"1\":{\"175\":1}}],[\"例如将小时的域\",{\"1\":{\"1002\":1}}],[\"例如将小时域\",{\"1\":{\"1002\":1}}],[\"例如将周历的域\",{\"1\":{\"1002\":1}}],[\"例如将月份域\",{\"1\":{\"1002\":1}}],[\"例如0\",{\"1\":{\"1002\":1}}],[\"例如kubectl\",{\"1\":{\"988\":1}}],[\"例如今天我们来介绍的cobra\",{\"1\":{\"988\":1}}],[\"例如检查key的值是否与预期相等的s\",{\"1\":{\"976\":1}}],[\"例如我们现在有两台电脑\",{\"1\":{\"910\":1}}],[\"例如我们目前有个解释器\",{\"1\":{\"905\":1}}],[\"例如我们知道美国\",{\"1\":{\"903\":1}}],[\"例如我们选择购买\",{\"1\":{\"26\":1}}],[\"例如gin的engine\",{\"1\":{\"814\":1}}],[\"例如uniswap等\",{\"1\":{\"799\":1}}],[\"例如星座\",{\"1\":{\"776\":1}}],[\"例如周末应该出去玩\",{\"1\":{\"734\":1}}],[\"例如这两天我接触到的基于vscode的\",{\"1\":{\"731\":1}}],[\"例如投资\",{\"1\":{\"714\":1}}],[\"例如您的出生证明\",{\"1\":{\"705\":1}}],[\"例如betxin就是这样做出来的\",{\"1\":{\"698\":1}}],[\"例如学习了cex\",{\"1\":{\"698\":1}}],[\"例如气候危机\",{\"1\":{\"649\":1}}],[\"例如有一个永远会因为认为别人评价不公而耿耿于怀的\",{\"1\":{\"573\":1}}],[\"例如想要从\",{\"1\":{\"487\":1}}],[\"例如持有一个引用指向原始数组的某个元素和长度\",{\"1\":{\"469\":1}}],[\"例如中文在\",{\"1\":{\"468\":1}}],[\"例如你每次想运行go程序都需要输入go\",{\"1\":{\"1025\":1}}],[\"例如你需要设计一个网关系统\",{\"1\":{\"814\":1}}],[\"例如你学习了计算机编程\",{\"1\":{\"776\":1}}],[\"例如你的朋友需要购入加密货币\",{\"1\":{\"739\":1}}],[\"例如你想让你的\",{\"1\":{\"731\":1}}],[\"例如你想声明一个全局的mutex锁\",{\"1\":{\"459\":1}}],[\"例如你渴望考上公务员\",{\"1\":{\"718\":1}}],[\"例如你现在正在使用的手机\",{\"1\":{\"648\":1}}],[\"例如你可以覆盖原有的session属性\",{\"1\":{\"194\":1}}],[\"例如用一个变量统计当前的请求次数等\",{\"1\":{\"457\":1}}],[\"例如常量\",{\"1\":{\"454\":1}}],[\"例如没有打开文件的权限\",{\"1\":{\"448\":1}}],[\"例如某个节点是否处于在线状态\",{\"1\":{\"433\":1}}],[\"例如集群是在线还是下线\",{\"1\":{\"427\":1}}],[\"例如68eef66df23420a5862208ef5b1a7005b806f2ff\",{\"1\":{\"427\":1}}],[\"例如执行\",{\"1\":{\"411\":1}}],[\"例如延迟\",{\"1\":{\"386\":1}}],[\"例如阿里的\",{\"1\":{\"385\":1}}],[\"例如输入字符串\",{\"1\":{\"333\":1,\"334\":1}}],[\"例如输入\",{\"1\":{\"298\":1}}],[\"例如cabac\",{\"1\":{\"267\":1}}],[\"例如aa\",{\"1\":{\"267\":1}}],[\"例如示例一\",{\"1\":{\"242\":1}}],[\"例如sum\",{\"1\":{\"239\":1}}],[\"例如对于字符串abcdef\",{\"1\":{\"213\":1}}],[\"例如对于仓库地址\",{\"1\":{\"73\":1}}],[\"例如美金\",{\"1\":{\"180\":1}}],[\"例如pusd相对usdt负溢价就是\",{\"1\":{\"175\":1}}],[\"例如稳定币通常在\",{\"1\":{\"159\":1}}],[\"例如总供应量和铸币权限\",{\"1\":{\"132\":1}}],[\"例如艺术品\",{\"1\":{\"132\":1}}],[\"例如调用执行多个\",{\"1\":{\"122\":1}}],[\"例如函数参数\",{\"1\":{\"117\":1}}],[\"例如序列化交易\",{\"1\":{\"116\":1}}],[\"例如一个代币对应的银行可配置是否为隔离银行\",{\"1\":{\"152\":1}}],[\"例如一个话题的规则是\",{\"1\":{\"27\":1}}],[\"例如一些系统命令和系统库\",{\"1\":{\"75\":1}}],[\"例如\",{\"1\":{\"25\":1,\"26\":1,\"64\":1,\"70\":1,\"71\":1,\"112\":1,\"114\":1,\"131\":1,\"132\":1,\"162\":1,\"193\":1,\"257\":1,\"260\":1,\"263\":1,\"264\":2,\"266\":1,\"284\":1,\"285\":1,\"286\":1,\"291\":1,\"294\":1,\"297\":1,\"299\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"313\":1,\"316\":1,\"328\":1,\"353\":1,\"362\":1,\"396\":1,\"426\":2,\"448\":1,\"450\":1,\"462\":1,\"471\":1,\"475\":1,\"485\":1,\"577\":2,\"626\":1,\"647\":1,\"653\":1,\"686\":1,\"703\":1,\"969\":1,\"973\":1,\"980\":1,\"981\":1,\"1001\":1,\"1019\":2,\"1034\":1,\"1047\":2,\"1057\":1,\"1132\":1,\"1139\":1,\"1153\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1171\":1,\"1172\":1,\"1173\":2,\"1183\":1,\"1188\":2,\"1198\":4}}],[\"赚取利率差价\",{\"1\":{\"163\":1}}],[\"折扣\",{\"1\":{\"163\":1}}],[\"手动分配\",{\"1\":{\"413\":1}}],[\"手续费\",{\"1\":{\"163\":1}}],[\"手机市场\",{\"0\":{\"9\":1}}],[\"闪贷借出足够资金\",{\"1\":{\"163\":1}}],[\"闪贷套利\",{\"1\":{\"163\":1}}],[\"闪电贷\",{\"0\":{\"163\":1}}],[\"闪电贷套利机器人\",{\"1\":{\"151\":1}}],[\"做操作前\",{\"1\":{\"1226\":1}}],[\"做完这样的修改还需要相应修改所有的测试用例\",{\"1\":{\"1010\":1}}],[\"做了什么会变成另一个状态\",{\"1\":{\"1009\":1,\"1010\":1}}],[\"做交换\",{\"1\":{\"945\":1}}],[\"做起事情来更加有条不紊\",{\"1\":{\"810\":1}}],[\"做对了所有事情\",{\"1\":{\"751\":1}}],[\"做个生产者\",{\"0\":{\"738\":1}}],[\"做着与绝大多数人做相同的选择\",{\"1\":{\"717\":1}}],[\"做决策之前并不会有做决策之后的经验\",{\"1\":{\"680\":1}}],[\"做事\",{\"1\":{\"632\":1}}],[\"做事情不要总自私的想自己怎样怎么样\",{\"1\":{\"551\":1}}],[\"做过事情的人都知道想做一件事情的困难度和复杂度远比想象中要高许多\",{\"1\":{\"592\":1}}],[\"做一个负责的人\",{\"1\":{\"592\":1}}],[\"做出决定或取得理解而进行的有意识的精神过程\",{\"1\":{\"626\":1}}],[\"做出决定\",{\"1\":{\"585\":1}}],[\"做出正确选择的风险似乎如此之高\",{\"1\":{\"585\":1}}],[\"做排名的人是你\",{\"1\":{\"577\":1}}],[\"做的第一件事就是向主服务器发送一个ping命令\",{\"1\":{\"425\":1}}],[\"做快照时会阻塞线程吗\",{\"1\":{\"413\":1}}],[\"做多做空\",{\"1\":{\"163\":1}}],[\"做产品从0到1是少数的创见\",{\"1\":{\"11\":1}}],[\"偿还闪贷本金和手续费\",{\"1\":{\"163\":1}}],[\"偿还闪贷\",{\"1\":{\"163\":1}}],[\"偿还1000\",{\"1\":{\"163\":1}}],[\"偿还后会释放对应的抵押品额度\",{\"1\":{\"161\":1}}],[\"偿还借出的资产本金和利息\",{\"1\":{\"161\":1}}],[\"偿还\",{\"0\":{\"161\":1},\"1\":{\"157\":1}}],[\"系列函数可以从标准输入中读取数据\",{\"1\":{\"1172\":1}}],[\"系列函数用于从标准输入中扫描文本\",{\"1\":{\"1171\":1}}],[\"系列函数会将内容输出到实现了\",{\"1\":{\"1169\":1}}],[\"系列函数会将内容输出到标准输出\",{\"1\":{\"1167\":1}}],[\"系列函数会将内容输出为字符串\",{\"1\":{\"1168\":1}}],[\"系列函数\",{\"0\":{\"1167\":1,\"1168\":1,\"1169\":1,\"1171\":1,\"1172\":1,\"1173\":1},\"1\":{\"1198\":4}}],[\"系列方法来验证测试期望\",{\"1\":{\"967\":1}}],[\"系\",{\"1\":{\"426\":1}}],[\"系的\",{\"1\":{\"156\":2}}],[\"系统执行或者用户协程执行\",{\"1\":{\"1135\":1}}],[\"系统调用情况下\",{\"1\":{\"1135\":1}}],[\"系统调用前\",{\"1\":{\"1135\":1}}],[\"系统调用结束等\",{\"1\":{\"1132\":1}}],[\"系统调用的返回值\",{\"1\":{\"1132\":1}}],[\"系统会以恒定速率向桶中放\",{\"1\":{\"1033\":1}}],[\"系统会自动报警\",{\"1\":{\"249\":1}}],[\"系统化你的命令行程序\",{\"0\":{\"988\":1}}],[\"系统的默认搜索引擎\",{\"1\":{\"771\":1}}],[\"系统是redis高可用性解决方案\",{\"1\":{\"426\":1}}],[\"系统提供了fsync和fdatasync两个同步函数\",{\"1\":{\"422\":1}}],[\"系统程序创建帐户后\",{\"1\":{\"112\":1}}],[\"系统程序执行几个关键任务\",{\"1\":{\"112\":1}}],[\"系统中不存在中央服务器或控制点\",{\"1\":{\"94\":1}}],[\"系统对于命名空间功能的完善实现\",{\"1\":{\"75\":1}}],[\"去往这个md里面添加元数据\",{\"1\":{\"1093\":1}}],[\"去开启gateway代理\",{\"1\":{\"1079\":1}}],[\"去模拟person接口的行为\",{\"1\":{\"977\":1}}],[\"去健身房\",{\"1\":{\"789\":1}}],[\"去公园或者其他自然场所\",{\"1\":{\"789\":1}}],[\"去竭尽全力先烧钱占领市场再创业吗\",{\"1\":{\"663\":1}}],[\"去和那些惹麻烦的5岁孩子交谈\",{\"1\":{\"586\":1}}],[\"去反思这些事情放到现在而言究竟是对还是错\",{\"1\":{\"551\":1}}],[\"去mux的github官网\",{\"1\":{\"516\":1}}],[\"去给你的其他设备传输数据了\",{\"1\":{\"494\":1}}],[\"去删除对应的缓存\",{\"1\":{\"385\":1}}],[\"去重的逻辑\",{\"1\":{\"216\":1}}],[\"去借sui\",{\"1\":{\"166\":1}}],[\"去\",{\"1\":{\"153\":1,\"166\":2,\"360\":1}}],[\"去中心化电商\",{\"1\":{\"800\":1}}],[\"去中心化自从2009年比特币横空出世以来就吸引了了密码学社区\",{\"1\":{\"798\":1}}],[\"去中心化交易所\",{\"1\":{\"698\":1}}],[\"去中心化的稳定币在资金上更加安全\",{\"1\":{\"185\":1}}],[\"去中心化的点对点网络\",{\"1\":{\"94\":1}}],[\"去中心化抵押数字资产产生的稳定币\",{\"1\":{\"185\":1}}],[\"去中心化保险平台\",{\"1\":{\"151\":1}}],[\"去中心化稳定币\",{\"0\":{\"185\":1},\"1\":{\"151\":1}}],[\"减少系统复杂性\",{\"1\":{\"928\":1}}],[\"减少系统间的依赖\",{\"1\":{\"926\":1}}],[\"减少对具体类型的依赖\",{\"1\":{\"881\":1}}],[\"减少了复杂的对象创建代码\",{\"1\":{\"881\":1}}],[\"减去\",{\"1\":{\"437\":1}}],[\"减去损失金额\",{\"1\":{\"152\":1}}],[\"减脂计划\",{\"1\":{\"4\":1}}],[\"保留类型\",{\"1\":{\"1084\":1}}],[\"保护服务\",{\"1\":{\"1033\":1}}],[\"保护自己\",{\"0\":{\"540\":1}}],[\"保持超类的稳定和一致\",{\"1\":{\"862\":1}}],[\"保持不变\",{\"1\":{\"152\":1}}],[\"保\",{\"1\":{\"419\":1,\"428\":1,\"435\":1}}],[\"保存当前\",{\"1\":{\"1135\":1}}],[\"保存的状态\",{\"1\":{\"838\":1}}],[\"保存的是全量的日志\",{\"1\":{\"358\":1}}],[\"保存和恢复对象的内部状态\",{\"1\":{\"837\":1}}],[\"保存连接节点所需的有关信息\",{\"1\":{\"427\":1}}],[\"保存了所有被这个sentinel监视的主服务器\",{\"1\":{\"426\":1}}],[\"保存了数据库中所有\",{\"1\":{\"414\":1}}],[\"保存着从其他节点接收到的消息\",{\"1\":{\"427\":1}}],[\"保存着等待发送给其他节点的消息\",{\"1\":{\"427\":1}}],[\"保存着一个校验和\",{\"1\":{\"418\":1}}],[\"保存着\",{\"1\":{\"418\":1}}],[\"保存条件\",{\"1\":{\"417\":1}}],[\"保存元素的数组\",{\"1\":{\"398\":1}}],[\"保存每层上的前向指针和跨度\",{\"1\":{\"397\":1}}],[\"保存未被刷入磁盘的脏页日志\",{\"1\":{\"358\":1}}],[\"保障事务的原子性\",{\"1\":{\"356\":1}}],[\"保证\",{\"1\":{\"1144\":1}}],[\"保证系统中只有一个对象\",{\"1\":{\"896\":1}}],[\"保证系统的整体性和一致性\",{\"1\":{\"832\":1}}],[\"保证自己的生产率超过收入增长速度\",{\"1\":{\"598\":1}}],[\"保证解锁的客户端是持有锁的客户端\",{\"1\":{\"436\":1}}],[\"保证第二步成功执行\",{\"1\":{\"385\":1}}],[\"保证缓存和磁盘数据一致\",{\"1\":{\"377\":1}}],[\"保证了一定会遍历\",{\"1\":{\"1135\":1}}],[\"保证了集合的封装性\",{\"1\":{\"826\":1}}],[\"保证了事务四大特性中的持久性\",{\"1\":{\"357\":1}}],[\"保证了pusd透明和安全\",{\"1\":{\"187\":1}}],[\"保证持久化\",{\"1\":{\"356\":1}}],[\"保证递推的时候dp\",{\"1\":{\"240\":1}}],[\"保险费是在无人清算时使用的\",{\"1\":{\"152\":1}}],[\"保险利率费用\",{\"1\":{\"152\":1}}],[\"保险池通过借贷增加资金\",{\"1\":{\"151\":1}}],[\"银行卡里的一串数字\",{\"1\":{\"614\":1}}],[\"银行账户\",{\"1\":{\"152\":1}}],[\"银行操作状态\",{\"1\":{\"152\":1}}],[\"返回reflect\",{\"1\":{\"1189\":1}}],[\"返回string类型的原始值\",{\"1\":{\"1189\":1}}],[\"返回float64类型的原始值\",{\"1\":{\"1189\":1}}],[\"返回int类型的原始值\",{\"1\":{\"1189\":1}}],[\"返回bool类型的原始值\",{\"1\":{\"1189\":1}}],[\"返回元素名称\",{\"1\":{\"867\":2}}],[\"返回两数之积\",{\"1\":{\"855\":1}}],[\"返回两数之差\",{\"1\":{\"855\":1}}],[\"返回两数之和\",{\"1\":{\"855\":1}}],[\"返回当前状态\",{\"1\":{\"844\":1}}],[\"返回空值\",{\"1\":{\"838\":1}}],[\"返回指定索引的备忘录\",{\"1\":{\"838\":1}}],[\"返回一个interface\",{\"1\":{\"1189\":1}}],[\"返回一个包含当前状态的备忘录\",{\"1\":{\"838\":1}}],[\"返回一个单空格\",{\"1\":{\"322\":1}}],[\"返回下一个元素\",{\"1\":{\"827\":2}}],[\"返回它的切片\",{\"1\":{\"468\":1}}],[\"返回它的最大深度\",{\"1\":{\"328\":1}}],[\"返回的正确的元素\",{\"1\":{\"447\":1}}],[\"返回有序集中\",{\"1\":{\"410\":1}}],[\"返回有序集中指定分数区间内的成员\",{\"1\":{\"410\":1}}],[\"返回有序集中指定区间内的成员\",{\"1\":{\"410\":1}}],[\"返回有序集合中指定成员的排名\",{\"1\":{\"410\":1}}],[\"返回有序集合中指定成员的索引\",{\"1\":{\"410\":1}}],[\"返回所有给定集合的并集\",{\"1\":{\"409\":1}}],[\"返回所有不同的\",{\"1\":{\"220\":1}}],[\"返回所有不重复的全排列\",{\"1\":{\"219\":1}}],[\"返回集合中一个或多个随机数\",{\"1\":{\"409\":1}}],[\"返回集合中的所有成员\",{\"1\":{\"409\":1}}],[\"返回给定所有集合的交集并存储在\",{\"1\":{\"409\":1}}],[\"返回给定所有集合的交集\",{\"1\":{\"409\":1}}],[\"返回给定所有集合的差集并存储在\",{\"1\":{\"409\":1}}],[\"返回给定所有集合的差集\",{\"1\":{\"409\":1}}],[\"返回给客户端需要的数据\",{\"1\":{\"1045\":1,\"1046\":1}}],[\"返回给客户端\",{\"1\":{\"349\":1}}],[\"返回失败\",{\"1\":{\"383\":1}}],[\"返回值是追加后的字节切片\",{\"1\":{\"1199\":1}}],[\"返回值\",{\"1\":{\"297\":1,\"326\":1,\"1207\":1}}],[\"返回链表\",{\"1\":{\"294\":1}}],[\"返回删除后的链表的头节点\",{\"1\":{\"290\":1}}],[\"返回统计数量\",{\"1\":{\"287\":1}}],[\"返回其层次遍历结果\",{\"1\":{\"304\":1,\"305\":1}}],[\"返回其二进制表达式中数字位数为\",{\"1\":{\"287\":1}}],[\"返回其最大和\",{\"1\":{\"262\":1}}],[\"返回重复元素\",{\"1\":{\"275\":1}}],[\"返回使得\",{\"1\":{\"265\":1}}],[\"返回这两个字符串的最长\",{\"1\":{\"260\":1}}],[\"返回你可以从这笔交易中获取的最大利润\",{\"1\":{\"252\":1}}],[\"返回你可以获得的最大乘积\",{\"1\":{\"231\":1}}],[\"返回计算出的利率\",{\"1\":{\"152\":1}}],[\"返回\",{\"1\":{\"152\":1,\"252\":1,\"259\":1,\"260\":1,\"276\":2,\"284\":2,\"297\":2,\"301\":3,\"303\":1,\"329\":1,\"403\":2,\"448\":1,\"1163\":1}}],[\"返回借款人和存款人的利率\",{\"1\":{\"152\":1}}],[\"`bson\",{\"1\":{\"1226\":3,\"1240\":2,\"1241\":8,\"1242\":6}}],[\"`borrowing\",{\"1\":{\"152\":1}}],[\"`hello\",{\"1\":{\"1200\":1}}],[\"`https\",{\"1\":{\"194\":1}}],[\"`gosched\",{\"1\":{\"1135\":1}}],[\"`group\",{\"1\":{\"152\":1}}],[\"`echo\",{\"1\":{\"992\":1}}],[\"`err`\",{\"1\":{\"449\":1}}],[\"`json\",{\"1\":{\"972\":1,\"973\":2,\"1047\":1,\"1188\":2}}],[\"`patchconvey`外自动释放mock\",{\"1\":{\"958\":1}}],[\"`plateau\",{\"1\":{\"152\":1}}],[\"`中国人`\",{\"1\":{\"475\":1}}],[\"`index<\",{\"1\":{\"473\":1}}],[\"`s`\",{\"1\":{\"468\":1}}],[\"`string`\",{\"1\":{\"467\":1,\"473\":2}}],[\"`1`\",{\"1\":{\"460\":1}}],[\"`0`\",{\"1\":{\"460\":1}}],[\"`once\",{\"1\":{\"459\":1}}],[\"`optimal\",{\"1\":{\"152\":2}}],[\"`result`\",{\"1\":{\"481\":1}}],[\"`result\",{\"1\":{\"449\":1,\"481\":1}}],[\"`rust\",{\"1\":{\"447\":3,\"448\":1,\"475\":1}}],[\"`target\",{\"1\":{\"447\":3,\"448\":1}}],[\"`total\",{\"1\":{\"152\":1}}],[\"`\",{\"1\":{\"194\":1,\"449\":1,\"459\":1,\"467\":3,\"473\":2,\"481\":1,\"972\":3,\"973\":2,\"992\":1,\"1047\":1,\"1132\":1,\"1188\":2,\"1200\":1,\"1226\":3,\"1240\":2,\"1241\":8,\"1242\":6}}],[\"`$\",{\"1\":{\"194\":1}}],[\"`lazy\",{\"1\":{\"459\":1}}],[\"`loss\",{\"1\":{\"152\":2}}],[\"`lending\",{\"1\":{\"152\":1}}],[\"`max\",{\"1\":{\"152\":1}}],[\"曲线接近\",{\"1\":{\"152\":2}}],[\"秒数\",{\"1\":{\"417\":1}}],[\"秒\",{\"1\":{\"152\":1,\"377\":1,\"426\":1,\"1205\":1,\"1212\":1}}],[\"风险等级\",{\"1\":{\"152\":1}}],[\"预定义操作符\",{\"0\":{\"1239\":1},\"1\":{\"1222\":1}}],[\"预定义规则\",{\"0\":{\"1003\":1}}],[\"预测所有未来的扩展点是一件愚蠢的事情\",{\"1\":{\"725\":1}}],[\"预测一下中美关系\",{\"1\":{\"631\":1}}],[\"预测和考虑\",{\"1\":{\"586\":1}}],[\"预测市场是针对未来事件进行预测的方式\",{\"1\":{\"169\":1}}],[\"预测市场是什么\",{\"1\":{\"169\":1}}],[\"预测市场其实已经存在很久了\",{\"1\":{\"169\":1}}],[\"预测市场\",{\"0\":{\"169\":1}}],[\"预读的页就只需要加入到\",{\"1\":{\"377\":1}}],[\"预读失效\",{\"1\":{\"377\":1}}],[\"预处理阶段\",{\"1\":{\"349\":1}}],[\"预处理器会判断表名和字段是否存在\",{\"1\":{\"355\":1}}],[\"预处理器\",{\"0\":{\"347\":1}}],[\"预处理\",{\"1\":{\"341\":1}}],[\"预言机\",{\"0\":{\"165\":1}}],[\"预言机价格数据的最大有效时间\",{\"1\":{\"152\":1}}],[\"预言机密钥\",{\"1\":{\"152\":1}}],[\"预言机设置\",{\"1\":{\"152\":1}}],[\"预先设置好的全局通货膨胀率为分配给solana\",{\"1\":{\"118\":1}}],[\"利率越高\",{\"1\":{\"166\":1}}],[\"利率模型\",{\"0\":{\"166\":1}}],[\"利率计算代码\",{\"1\":{\"152\":1}}],[\"利率以年利率\",{\"1\":{\"152\":1}}],[\"利率配置\",{\"1\":{\"152\":1}}],[\"利用有限状态机编写易于维护的代码\",{\"0\":{\"1010\":1}}],[\"利用自己的生产性知识来销售的行为才可以致富=\",{\"1\":{\"776\":1}}],[\"利用率越高\",{\"1\":{\"166\":1}}],[\"利用率计算利息\",{\"1\":{\"152\":1}}],[\"利用率计算采用\",{\"1\":{\"152\":1}}],[\"利用率\",{\"1\":{\"152\":1,\"166\":1}}],[\"利用借贷平衡风险和回报\",{\"1\":{\"151\":1}}],[\"利用solana的高吞吐量和低费用提供了非常流畅的借贷体验\",{\"1\":{\"149\":1}}],[\"利用他们电脑的处理能力来验证和记录交易\",{\"1\":{\"94\":1}}],[\"利用命名空间来做权限的隔离控制\",{\"1\":{\"75\":1}}],[\"利用镜像创建并启动一个容器\",{\"1\":{\"64\":1}}],[\"利用\",{\"1\":{\"55\":1,\"75\":1}}],[\"维护堆的性质\",{\"1\":{\"950\":1}}],[\"维护成本并没有新增很多\",{\"1\":{\"385\":1}}],[\"维护成本\",{\"1\":{\"385\":1}}],[\"维护债务权重\",{\"1\":{\"152\":1}}],[\"维护资产权重\",{\"1\":{\"152\":1}}],[\"维护的数据的网络范围存储\",{\"1\":{\"125\":1}}],[\"界面展示为红色\",{\"1\":{\"731\":1}}],[\"界面设计\",{\"1\":{\"521\":1}}],[\"界面简洁无广告+深浅主题\",{\"1\":{\"494\":1}}],[\"界面\",{\"1\":{\"200\":1}}],[\"界面其实就是一个\",{\"1\":{\"152\":1}}],[\"界面没有我们熟悉的\",{\"1\":{\"68\":1}}],[\"核心逻辑在\",{\"1\":{\"1135\":1}}],[\"核心逻辑就是计算上次行为距今有多久\",{\"1\":{\"152\":1}}],[\"核心理由只有一个\",{\"1\":{\"804\":1}}],[\"核心网络模型使用单线程并没有什么问题\",{\"1\":{\"412\":1}}],[\"核心的一点是采用权益代币\",{\"1\":{\"169\":1}}],[\"核心代码交互\",{\"0\":{\"152\":1}}],[\"核心产品所有代币的借贷\",{\"1\":{\"151\":1}}],[\"币\",{\"1\":{\"151\":1}}],[\"杠杆交易平台\",{\"1\":{\"151\":1}}],[\"描述行为\",{\"1\":{\"988\":1}}],[\"描述了黑天鹅事件\",{\"1\":{\"528\":1}}],[\"描述\",{\"1\":{\"151\":10,\"403\":1,\"405\":1,\"407\":1,\"409\":1,\"410\":1,\"1132\":1,\"1134\":1,\"1161\":4}}],[\"收发操作均遵循了先进先出的设计\",{\"1\":{\"1136\":1}}],[\"收到后会进行解码\",{\"1\":{\"1093\":1,\"1094\":1,\"1095\":1}}],[\"收到sync命令的主服务器执行bgsave命令在后台生成一个rdb文件\",{\"1\":{\"425\":1}}],[\"收入有很大提升\",{\"1\":{\"718\":1}}],[\"收购\",{\"1\":{\"714\":1}}],[\"收音机和电视的脱口秀\",{\"1\":{\"627\":1}}],[\"收clustermsg\",{\"1\":{\"433\":1}}],[\"收\",{\"1\":{\"426\":3,\"434\":1}}],[\"收益聚合器\",{\"1\":{\"151\":1}}],[\"收藏\",{\"0\":{\"41\":1}}],[\"玩电子游戏\",{\"1\":{\"788\":1}}],[\"玩的开心\",{\"1\":{\"521\":1}}],[\"玩法策划\",{\"1\":{\"521\":1}}],[\"玩法\",{\"0\":{\"151\":1}}],[\"玩不出了新花样\",{\"1\":{\"9\":1}}],[\"获得写锁\",{\"1\":{\"1143\":1}}],[\"获得了写锁\",{\"1\":{\"1143\":1}}],[\"获得了互斥锁并且它在队列的末尾或者它等待的时间少于\",{\"1\":{\"1142\":1}}],[\"获得最多count个属于槽slot的键值对的键名\",{\"1\":{\"431\":1}}],[\"获得susdc\",{\"1\":{\"166\":1}}],[\"获得清算利润\",{\"1\":{\"163\":1}}],[\"获得对应的凭证代币\",{\"1\":{\"158\":1}}],[\"获得抵押品\",{\"1\":{\"150\":1}}],[\"获取结构体方法信息\",{\"1\":{\"1192\":1}}],[\"获取结构体字段信息\",{\"1\":{\"1192\":1}}],[\"获取字段的值并修改\",{\"1\":{\"1190\":1}}],[\"获取原始值\",{\"1\":{\"1189\":1}}],[\"获取原函数执行次数\",{\"1\":{\"956\":1}}],[\"获取每个命令行参数的索引和值\",{\"1\":{\"1163\":1}}],[\"获取了所有的命令行参数\",{\"1\":{\"1163\":1}}],[\"获取了程序能够同时运行的最大处理器数之后就会调用\",{\"1\":{\"1134\":1}}],[\"获取命令行参数\",{\"1\":{\"1163\":1}}],[\"获取加锁\",{\"1\":{\"1149\":1}}],[\"获取互斥锁\",{\"1\":{\"1145\":1}}],[\"获取写锁时会先阻塞写锁的获取\",{\"1\":{\"1143\":1}}],[\"获取指针指向的值\",{\"1\":{\"1190\":1}}],[\"获取指针指向的结构体\",{\"1\":{\"1138\":1}}],[\"获取指定偏移量上的位\",{\"1\":{\"403\":1}}],[\"获取指定\",{\"1\":{\"403\":1}}],[\"获取变量类型时会得到\",{\"1\":{\"1138\":1}}],[\"获取发送数据的goroutine\",{\"1\":{\"1137\":1}}],[\"获取第一个\",{\"1\":{\"1135\":1}}],[\"获取准备就绪的网络协程\",{\"1\":{\"1135\":2}}],[\"获取一个\",{\"1\":{\"1135\":1}}],[\"获取或者创建新的\",{\"1\":{\"1135\":1}}],[\"获取或初始化\",{\"1\":{\"463\":1}}],[\"获取details\",{\"1\":{\"1074\":2}}],[\"获取用户相关信息\",{\"1\":{\"978\":1}}],[\"获取子串\",{\"0\":{\"487\":1}}],[\"获取其实例\",{\"1\":{\"463\":1}}],[\"获取到了锁之后\",{\"1\":{\"436\":1}}],[\"获取从服务器信息\",{\"1\":{\"426\":1}}],[\"获取主服务器信息\",{\"1\":{\"426\":1}}],[\"获取有序集合的成员数\",{\"1\":{\"410\":1}}],[\"获取哈希表中字段的数量\",{\"1\":{\"407\":1}}],[\"获取哈希表中所有值\",{\"1\":{\"407\":1}}],[\"获取在哈希表中指定\",{\"1\":{\"407\":1}}],[\"获取存储在哈希表中指定字段的值\",{\"1\":{\"407\":1}}],[\"获取列表\",{\"1\":{\"405\":1}}],[\"获取列表长度\",{\"1\":{\"405\":1}}],[\"获取并移除列表的最后一个元素\",{\"1\":{\"405\":2}}],[\"获取并移除列表的第一个元素\",{\"1\":{\"405\":2}}],[\"获取所有哈希表中的字段\",{\"1\":{\"407\":1}}],[\"获取所有给定字段的值\",{\"1\":{\"407\":1}}],[\"获取所有\",{\"1\":{\"403\":1}}],[\"获取\",{\"1\":{\"166\":2,\"956\":1,\"1135\":4,\"1137\":1,\"1142\":1,\"1189\":1}}],[\"获取总资产和总债务\",{\"1\":{\"152\":1}}],[\"获取抵押品\",{\"1\":{\"150\":1}}],[\"获利结果\",{\"1\":{\"26\":2}}],[\"获利计算方式\",{\"1\":{\"26\":2}}],[\"清洁工也在经济学上学到了宝贵的一课\",{\"1\":{\"751\":1}}],[\"清晰地看到遥远的未来\",{\"1\":{\"674\":1}}],[\"清晰地思考是非常罕见的\",{\"1\":{\"626\":1}}],[\"清晰而诚实\",{\"1\":{\"572\":1}}],[\"清空字符串\",{\"1\":{\"480\":1}}],[\"清算时我们的本金可能会以市场折扣价被收购比如清算人会用\",{\"1\":{\"164\":1}}],[\"清算套利\",{\"1\":{\"163\":1}}],[\"清算等场景\",{\"1\":{\"163\":1}}],[\"清算机制保护协议的安全性\",{\"1\":{\"162\":1}}],[\"清算\",{\"0\":{\"162\":1},\"1\":{\"157\":1}}],[\"清算人通常可以获得一定折扣\",{\"1\":{\"162\":1}}],[\"清算人可以购买被清算用户的抵押品\",{\"1\":{\"162\":1}}],[\"清算人\",{\"1\":{\"150\":1}}],[\"清算已经相当保守了\",{\"1\":{\"150\":1}}],[\"清理所有处于终止状态的容器\",{\"0\":{\"72\":1}}],[\"清理了所有下载\",{\"1\":{\"58\":1}}],[\"借助插件\",{\"1\":{\"1072\":1}}],[\"借助\",{\"1\":{\"1010\":1}}],[\"借助反射包中的方法比较\",{\"1\":{\"967\":1}}],[\"借助了计算机去预测未来\",{\"1\":{\"528\":1}}],[\"借记\",{\"1\":{\"927\":1}}],[\"借口总是有的\",{\"1\":{\"551\":1}}],[\"借用的规则\",{\"1\":{\"468\":1}}],[\"借\",{\"1\":{\"153\":1}}],[\"借款利率快速上升以维持流动性\",{\"1\":{\"166\":1}}],[\"借款利率较低以刺激贷款\",{\"1\":{\"166\":1}}],[\"借款的比例\",{\"1\":{\"164\":1}}],[\"借款\",{\"0\":{\"159\":1},\"1\":{\"157\":1}}],[\"借款限额\",{\"1\":{\"152\":1}}],[\"借款人失去抵押品\",{\"1\":{\"150\":1}}],[\"借款人将承担\",{\"1\":{\"150\":1}}],[\"借贷协议通常采用动态利率模型\",{\"1\":{\"166\":1}}],[\"借贷利率套利\",{\"1\":{\"163\":1}}],[\"借贷lend官网\",{\"1\":{\"149\":1}}],[\"借贷等\",{\"1\":{\"94\":1}}],[\"经济下行只是表象\",{\"1\":{\"795\":1}}],[\"经济是起伏发展的有起有落\",{\"1\":{\"764\":1}}],[\"经历过的事构成了一个人在这个时代里最核心的价值\",{\"1\":{\"551\":1}}],[\"经常会遇到需要保证系统中只有一个对象的情况\",{\"1\":{\"894\":1}}],[\"经常会看到公民起了冲突\",{\"1\":{\"795\":1}}],[\"经常会看到一些采访\",{\"1\":{\"776\":1}}],[\"经常会需要将一些本地文件复制进镜像\",{\"1\":{\"60\":1}}],[\"经常听过去的人评价读某些书有种相见恨晚的感觉\",{\"1\":{\"767\":1}}],[\"经常\",{\"1\":{\"643\":1}}],[\"经常产生后一种效果\",{\"1\":{\"627\":1}}],[\"经常性的会有微博的博主账号被封掉\",{\"1\":{\"533\":1}}],[\"经常更新的字段不用创建索引\",{\"1\":{\"352\":1}}],[\"经常用于\",{\"1\":{\"351\":2}}],[\"经过简化\",{\"1\":{\"1009\":1}}],[\"经过这样的修改之后\",{\"1\":{\"981\":1}}],[\"经过这番改动之后\",{\"1\":{\"980\":1}}],[\"经过这些活动后大脑还是如往常一样运转\",{\"1\":{\"787\":1}}],[\"经过相当繁琐的盒子审查过程\",{\"1\":{\"584\":1}}],[\"经过大幅改进后的自己能够达到的最低成功标准的所有职业道路\",{\"1\":{\"584\":1}}],[\"经过一段时间之后\",{\"1\":{\"427\":1}}],[\"经过预处理阶段后\",{\"1\":{\"348\":1}}],[\"经过所有调整后\",{\"1\":{\"150\":2}}],[\"+0000\",{\"1\":{\"1212\":3}}],[\"+0800\",{\"1\":{\"1206\":4,\"1212\":4}}],[\"+0x31\",{\"1\":{\"1125\":1}}],[\"+v\",{\"1\":{\"1190\":1}}],[\"+value\",{\"1\":{\"236\":1}}],[\"+atomic\",{\"1\":{\"1135\":1}}],[\"+string\",{\"1\":{\"318\":1}}],[\"+stones\",{\"1\":{\"238\":1}}],[\"++\",{\"1\":{\"312\":1,\"320\":1,\"322\":1,\"325\":1}}],[\"+2\",{\"1\":{\"265\":1}}],[\"+publicerr+errorheaders+publicerr\",{\"1\":{\"1055\":2}}],[\"+prices\",{\"1\":{\"252\":1,\"254\":2}}],[\"+path\",{\"1\":{\"214\":3}}],[\"+nums\",{\"1\":{\"237\":1,\"249\":1,\"262\":1,\"315\":1}}],[\"+dp\",{\"1\":{\"228\":4,\"281\":1}}],[\"+=nums\",{\"1\":{\"315\":1}}],[\"+=\",{\"1\":{\"209\":1,\"211\":1,\"212\":2,\"232\":3,\"237\":1,\"238\":1,\"239\":3,\"242\":2,\"243\":3,\"255\":2,\"287\":1,\"307\":2,\"319\":3,\"323\":2,\"331\":1,\"334\":1,\"457\":1,\"481\":3,\"980\":4}}],[\"+1根据递推公式可以看出\",{\"1\":{\"259\":1}}],[\"+100\",{\"1\":{\"217\":1,\"292\":1}}],[\"+1\",{\"1\":{\"208\":2,\"228\":1,\"240\":1,\"244\":1,\"245\":1,\"246\":1,\"257\":2,\"258\":2,\"259\":3,\"260\":3,\"261\":1,\"263\":3,\"265\":3,\"266\":3}}],[\"+\",{\"1\":{\"150\":2,\"152\":2,\"163\":1,\"166\":1,\"169\":2,\"193\":1,\"210\":1,\"214\":3,\"226\":1,\"227\":2,\"229\":2,\"230\":1,\"235\":5,\"236\":6,\"237\":1,\"239\":4,\"240\":3,\"241\":2,\"242\":4,\"244\":4,\"248\":3,\"250\":3,\"252\":3,\"253\":1,\"254\":3,\"255\":6,\"257\":4,\"258\":2,\"259\":3,\"260\":2,\"262\":2,\"263\":1,\"264\":6,\"265\":11,\"266\":5,\"267\":2,\"268\":9,\"282\":1,\"283\":1,\"285\":3,\"292\":3,\"313\":2,\"317\":1,\"318\":1,\"323\":7,\"326\":2,\"328\":1,\"329\":1,\"332\":1,\"334\":1,\"356\":2,\"362\":1,\"370\":1,\"373\":1,\"383\":1,\"384\":4,\"386\":2,\"388\":4,\"447\":3,\"448\":1,\"481\":20,\"483\":1,\"512\":1,\"514\":4,\"731\":3,\"855\":3,\"948\":1,\"950\":4,\"973\":1,\"975\":1,\"976\":1,\"980\":2,\"992\":2,\"1047\":2,\"1053\":2,\"1054\":1,\"1063\":2,\"1161\":1,\"1193\":1,\"1207\":1}}],[\"置信区间的上限决定\",{\"1\":{\"150\":1}}],[\"置信区间的下限决定\",{\"1\":{\"150\":1}}],[\"置信区间为\",{\"1\":{\"150\":2}}],[\"置于一个空目录下\",{\"1\":{\"60\":1}}],[\"∞\",{\"1\":{\"150\":1}}],[\"提取你的钱\",{\"1\":{\"703\":1}}],[\"提取出信息中的sentinel\",{\"1\":{\"426\":1}}],[\"提练了时间对每个人的意义\",{\"1\":{\"660\":1}}],[\"提问方式可以改变一个人记忆中的细节\",{\"1\":{\"622\":1}}],[\"提高读写性能\",{\"1\":{\"1153\":1}}],[\"提高线程的利用率\",{\"1\":{\"1134\":1}}],[\"提高原生javascript方法的性能\",{\"1\":{\"1017\":1}}],[\"提高单元测试覆盖率的同时也保证了代码的健壮性\",{\"1\":{\"975\":1}}],[\"提高灵活性\",{\"1\":{\"926\":1,\"928\":1}}],[\"提高系统的可扩展性\",{\"1\":{\"909\":1}}],[\"提高系统的可维护性和可扩展性\",{\"1\":{\"832\":1,\"834\":1}}],[\"提高程序的灵活性\",{\"1\":{\"906\":1}}],[\"提高了类的复用性\",{\"1\":{\"906\":1}}],[\"提高了代码的可维护性和可扩展性\",{\"1\":{\"854\":1,\"866\":1}}],[\"提高了代码的可读性和可维护性\",{\"1\":{\"848\":1}}],[\"提高性能\",{\"1\":{\"889\":1}}],[\"提高复用性和灵活性\",{\"1\":{\"872\":1}}],[\"提高对象的可靠性和安全性\",{\"1\":{\"837\":1}}],[\"提高用户体验\",{\"1\":{\"709\":1}}],[\"提高工作效率和集中注意力在最重要和有价值的事情上\",{\"1\":{\"649\":1}}],[\"提高正念\",{\"1\":{\"611\":1}}],[\"提高健康因子\",{\"1\":{\"150\":1}}],[\"提出了几个方法来应对注意力缺失\",{\"1\":{\"611\":1}}],[\"提出问题却不去想办法解决问题是耍流氓的行为\",{\"1\":{\"500\":1}}],[\"提示\",{\"1\":{\"591\":1,\"614\":1,\"619\":1,\"627\":2,\"673\":1,\"683\":1,\"784\":1,\"989\":1,\"1219\":1}}],[\"提醒他们关于如何连接点以及点\",{\"1\":{\"586\":1}}],[\"提早返回的分支返回了一个\",{\"1\":{\"451\":1}}],[\"提交了事务\",{\"1\":{\"374\":1}}],[\"提交过程有两个阶段\",{\"1\":{\"360\":1}}],[\"提交事务\",{\"1\":{\"359\":1}}],[\"提交事务时也会刷盘\",{\"1\":{\"356\":1}}],[\"提升灵活性\",{\"1\":{\"398\":1}}],[\"提升\",{\"1\":{\"357\":1}}],[\"提升语句的执行性能\",{\"1\":{\"357\":1}}],[\"提升到了11\",{\"1\":{\"176\":1}}],[\"提现告诉你币确实存在\",{\"0\":{\"703\":1}}],[\"提现会销毁对应的凭证代币\",{\"1\":{\"160\":1}}],[\"提现\",{\"0\":{\"160\":1},\"1\":{\"157\":1}}],[\"提供帮助信息和用法说明\",{\"1\":{\"1160\":1}}],[\"提供的私有方法\",{\"1\":{\"1144\":1}}],[\"提供的信息并指明了源码中\",{\"1\":{\"447\":1}}],[\"提供一些特别强大的功能\",{\"1\":{\"988\":1}}],[\"提供一个返回迭代器对象的方法\",{\"1\":{\"828\":1}}],[\"提供实现整体业务的方法\",{\"1\":{\"914\":1}}],[\"提供多种遍历方式和操作方式\",{\"1\":{\"828\":1}}],[\"提供统一的访问接口\",{\"1\":{\"825\":1}}],[\"提供了许多日志相关的功能\",{\"1\":{\"1177\":1}}],[\"提供了带缓冲的\",{\"1\":{\"1153\":1}}],[\"提供了三类方法供用户消费\",{\"1\":{\"1034\":1}}],[\"提供了额外的功能\",{\"1\":{\"919\":1}}],[\"提供了一个全局访问点\",{\"1\":{\"896\":1}}],[\"提供了案例\",{\"1\":{\"721\":1}}],[\"提供了不同的字符串展现方式\",{\"1\":{\"474\":1}}],[\"提供了名为\",{\"1\":{\"451\":1}}],[\"提供了两个命令来生成\",{\"1\":{\"413\":1}}],[\"提供了\",{\"1\":{\"413\":1,\"436\":1,\"450\":1}}],[\"提供了运行态环境和其他系统环境\",{\"1\":{\"62\":1}}],[\"提供稳定回报\",{\"1\":{\"151\":1}}],[\"提供稳定的交换媒介\",{\"1\":{\"151\":1}}],[\"提供储蓄账户\",{\"1\":{\"151\":1}}],[\"连我们自身都会常常会有这样的想法\",{\"1\":{\"528\":1}}],[\"连\",{\"1\":{\"426\":4}}],[\"连锁更新\",{\"1\":{\"399\":2}}],[\"连接mock的redis\",{\"1\":{\"976\":1}}],[\"连接字符串\",{\"0\":{\"482\":1},\"1\":{\"481\":4}}],[\"连接的创建时间\",{\"1\":{\"427\":1}}],[\"连接各个节点的工作可以使用cluser\",{\"1\":{\"427\":1}}],[\"连接器会判断用户身份\",{\"1\":{\"355\":1}}],[\"连接器得工作完成后\",{\"1\":{\"343\":1}}],[\"连接器负责的工作有\",{\"1\":{\"342\":1}}],[\"连接器\",{\"0\":{\"342\":1},\"1\":{\"349\":1}}],[\"连接\",{\"0\":{\"481\":1},\"1\":{\"297\":1}}],[\"连接在一起\",{\"1\":{\"76\":1}}],[\"连续看几小时的色情片\",{\"1\":{\"788\":1}}],[\"连续子数组的最大和\",{\"0\":{\"315\":1}}],[\"连续子数组\",{\"1\":{\"262\":1,\"315\":1}}],[\"连续递增的子序列\",{\"1\":{\"258\":2}}],[\"连本带息拿回即可\",{\"1\":{\"150\":1}}],[\"没手让ai帮忙也行\",{\"1\":{\"1216\":1}}],[\"没事的时候上滑一下\",{\"1\":{\"631\":1}}],[\"没办法\",{\"1\":{\"446\":1,\"554\":1}}],[\"没错这就是二十年前年轻人群体之间最流行的造型\",{\"1\":{\"734\":1}}],[\"没错\",{\"1\":{\"387\":1}}],[\"没什么意思\",{\"1\":{\"1009\":1}}],[\"没什么不同\",{\"1\":{\"528\":1}}],[\"没什么好讲的了\",{\"1\":{\"276\":1}}],[\"没什么特殊讲的\",{\"1\":{\"150\":1}}],[\"没有获取到锁\",{\"1\":{\"1142\":1}}],[\"没有接收者能够处理数据时\",{\"1\":{\"1137\":1}}],[\"没有空闲\",{\"1\":{\"1135\":1}}],[\"没有被使用\",{\"1\":{\"1132\":1}}],[\"没有执行用户代码并且不在运行队列上\",{\"1\":{\"1132\":2}}],[\"没有执行用户代码\",{\"1\":{\"1132\":1,\"1134\":1}}],[\"没有执行代码\",{\"1\":{\"1132\":4}}],[\"没有栈的所有权\",{\"1\":{\"1132\":1}}],[\"没有触发上面的when\",{\"1\":{\"960\":1}}],[\"没有发展社区\",{\"0\":{\"801\":1}}],[\"没有eth提供的基础设施支持\",{\"1\":{\"799\":1}}],[\"没有抖音你的生活会变得更好\",{\"1\":{\"789\":1}}],[\"没有从书中学习到的编程知识和投资经验\",{\"1\":{\"758\":1}}],[\"没有人的产品就相当于产品不存在\",{\"1\":{\"801\":1}}],[\"没有人在乎你\",{\"1\":{\"773\":1}}],[\"没有人会因此而指责你\",{\"1\":{\"751\":1}}],[\"没有人可以验证这是否真的是黑客行为还是内部人员所为\",{\"1\":{\"706\":1}}],[\"没有人是你人生的首席执行官\",{\"1\":{\"570\":1}}],[\"没有勇气和毅力创业公司几乎无法生存\",{\"1\":{\"674\":1}}],[\"没有勇气是无法装出来的\",{\"1\":{\"674\":1}}],[\"没有知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"没有贬义\",{\"1\":{\"621\":1}}],[\"没有拼命思考的人\",{\"1\":{\"615\":1}}],[\"没有逃避责任\",{\"1\":{\"592\":1}}],[\"没有任何担任首席执行官的经验\",{\"1\":{\"570\":1}}],[\"没有任何意义\",{\"1\":{\"473\":1,\"474\":1}}],[\"没有了\",{\"1\":{\"551\":1}}],[\"没有自由就是奴隶\",{\"1\":{\"551\":1}}],[\"没有考虑到个人网站其实本身就是去中心化的网络\",{\"1\":{\"534\":1}}],[\"没有考虑coins\",{\"1\":{\"244\":1}}],[\"没有广告\",{\"1\":{\"532\":1}}],[\"没有广告就卖不出去产品\",{\"1\":{\"10\":1}}],[\"没有点击诱饵\",{\"1\":{\"532\":1}}],[\"没有搜索引擎\",{\"1\":{\"532\":1}}],[\"没有跟踪监视和算法分发\",{\"1\":{\"532\":1}}],[\"没有正儿八经地拿它当一个完整的语言\",{\"1\":{\"525\":1}}],[\"没有限制\",{\"1\":{\"483\":1}}],[\"没有超过锁的有效时间\",{\"1\":{\"437\":1}}],[\"没有一个平台可以多个平台去比价\",{\"1\":{\"739\":1}}],[\"没有一个sentinel被选举为领头sentinel\",{\"1\":{\"426\":1}}],[\"没有一个个体可以左右市场价格\",{\"1\":{\"8\":1}}],[\"没有包含非法或者无效的错误数据\",{\"1\":{\"424\":1}}],[\"没有则不加载\",{\"1\":{\"416\":1}}],[\"没有命中\",{\"1\":{\"386\":1}}],[\"没有\",{\"1\":{\"358\":1,\"1143\":1}}],[\"没有操作\",{\"1\":{\"254\":1}}],[\"没有交易完成\",{\"1\":{\"252\":1,\"253\":1}}],[\"没有用i+1\",{\"1\":{\"210\":1}}],[\"没有固定利率选项\",{\"1\":{\"150\":1}}],[\"没有之一\",{\"1\":{\"143\":1,\"680\":1}}],[\"没有额外的功能\",{\"1\":{\"138\":1}}],[\"没有父镜像\",{\"1\":{\"78\":1}}],[\"仅用于负责调度的\",{\"1\":{\"1133\":1}}],[\"仅会挑选其中的一部分\",{\"1\":{\"1132\":1}}],[\"仅仅是因为它是\",{\"1\":{\"771\":1}}],[\"仅仅是认为当前是购入腾讯\",{\"1\":{\"714\":1}}],[\"仅仅通过这一句话你就可以判断出屯币的价值\",{\"1\":{\"767\":1}}],[\"仅仅为了留下你现有的房屋清洁工\",{\"1\":{\"751\":1}}],[\"仅仅只给自己看的笔记\",{\"1\":{\"660\":2}}],[\"仅仅只能写出很普遍的代码\",{\"1\":{\"605\":1}}],[\"仅此而已\",{\"1\":{\"653\":1}}],[\"仅因生存环境较差就没那么走运\",{\"1\":{\"573\":1}}],[\"仅清算将账户健康因子恢复到\",{\"1\":{\"150\":1}}],[\"仅需要对某些隔离代币进行单独设置即可达到aave的隔离效果\",{\"1\":{\"150\":1}}],[\"仅数据卷为空时会复制\",{\"1\":{\"74\":1}}],[\"区分来自不同客户端的锁操作\",{\"1\":{\"436\":1}}],[\"区域前面\",{\"1\":{\"377\":1}}],[\"区域节点频繁移动到头部\",{\"1\":{\"377\":1}}],[\"区域其实做了一个优化\",{\"1\":{\"377\":1}}],[\"区域头部\",{\"1\":{\"377\":1}}],[\"区域停留时间超过\",{\"1\":{\"377\":1}}],[\"区域移动到\",{\"1\":{\"377\":1}}],[\"区域移除\",{\"1\":{\"377\":1}}],[\"区域条件增加了一个停留在\",{\"1\":{\"377\":1}}],[\"区域里的热点数据不会被替换掉\",{\"1\":{\"377\":1}}],[\"区域的缓存页进行第一次访问时\",{\"1\":{\"377\":1}}],[\"区域的时间判断\",{\"1\":{\"377\":1}}],[\"区域的门槛\",{\"1\":{\"377\":1}}],[\"区域的头部\",{\"1\":{\"377\":4}}],[\"区域就是热点数据\",{\"1\":{\"377\":1}}],[\"区域中的热点数据\",{\"1\":{\"377\":1}}],[\"区域比例是\",{\"1\":{\"377\":1}}],[\"区域与\",{\"1\":{\"377\":1}}],[\"区域占整个\",{\"1\":{\"377\":1}}],[\"区域则是在后半部分\",{\"1\":{\"377\":1}}],[\"区域在\",{\"1\":{\"377\":1}}],[\"区域\",{\"1\":{\"377\":3}}],[\"区间回文子串的长度\",{\"1\":{\"268\":1}}],[\"区别如下\",{\"1\":{\"358\":1}}],[\"区别在于添加换行符\",{\"1\":{\"1178\":1}}],[\"区别在于\",{\"1\":{\"427\":1,\"1168\":1}}],[\"区别在于flush链表都是脏页\",{\"1\":{\"377\":1}}],[\"区别在于这里不要求是连续的了\",{\"1\":{\"260\":1}}],[\"区别在哪\",{\"1\":{\"357\":1}}],[\"区别于\",{\"1\":{\"150\":1}}],[\"区块\",{\"1\":{\"99\":1}}],[\"区块链产品从不担心抄袭因为自带的社区属性可以巩固其已有的社区成员\",{\"1\":{\"801\":1}}],[\"区块链的所有代码都是开源的\",{\"1\":{\"801\":1}}],[\"区块链不属于大量早期投入获得市场\",{\"1\":{\"800\":1}}],[\"区块链不仅仅是计算机科学\",{\"1\":{\"509\":1}}],[\"区块链是21世纪最具革命性的技术之一\",{\"1\":{\"509\":1}}],[\"区块链投资笔记\",{\"1\":{\"503\":1,\"669\":1}}],[\"区块链上确认机制的整体理解\",{\"1\":{\"140\":1}}],[\"区块链上的每笔交易都需要列出作为交易一部分进行交互的每个地址\",{\"1\":{\"139\":1}}],[\"区块链发展了这么多年\",{\"1\":{\"109\":1}}],[\"区块链\",{\"1\":{\"94\":1,\"674\":1}}],[\"参\",{\"1\":{\"426\":2,\"433\":1,\"435\":2}}],[\"参考<https\",{\"1\":{\"1135\":1}}],[\"参考https\",{\"1\":{\"1098\":1}}],[\"参考链接\",{\"1\":{\"534\":1}}],[\"参考quorum\",{\"1\":{\"505\":1}}],[\"参考\",{\"1\":{\"388\":1,\"464\":1,\"1008\":1,\"1057\":1,\"1194\":1}}],[\"参考以下这颗二叉搜索树\",{\"1\":{\"306\":1}}],[\"参与者却给出了负面评价\",{\"1\":{\"622\":1}}],[\"参与者给出了积极的评价\",{\"1\":{\"622\":1}}],[\"参与\",{\"1\":{\"144\":1}}],[\"参数指定浮点数位数\",{\"1\":{\"1199\":1}}],[\"参数指定精度\",{\"1\":{\"1199\":1}}],[\"参数指定格式\",{\"1\":{\"1199\":1}}],[\"参数指定的格式将对应的值映射到\",{\"1\":{\"1171\":1}}],[\"参数指定某个文件作为\",{\"1\":{\"60\":1}}],[\"参数覆写给定\",{\"1\":{\"403\":1}}],[\"参数来设置\",{\"1\":{\"377\":1}}],[\"参数来控制数据库的\",{\"1\":{\"358\":1}}],[\"参数来实现\",{\"1\":{\"66\":1}}],[\"参数为2\",{\"1\":{\"357\":1}}],[\"参数为1\",{\"1\":{\"357\":1}}],[\"参数为0\",{\"1\":{\"357\":1}}],[\"参数控制的是什么\",{\"1\":{\"357\":1}}],[\"参数动态的调整大小\",{\"1\":{\"357\":1}}],[\"参数一起使用时\",{\"1\":{\"68\":1}}],[\"参数时如果本地目录不存在\",{\"1\":{\"74\":2}}],[\"参数时\",{\"1\":{\"68\":2}}],[\"参数启动后会返回一个唯一的\",{\"1\":{\"66\":1}}],[\"参数无关\",{\"1\":{\"66\":1}}],[\"参数运行容器\",{\"1\":{\"66\":2}}],[\"参数2\",{\"1\":{\"58\":1}}],[\"参数1\",{\"1\":{\"58\":1}}],[\"参数\",{\"1\":{\"53\":1,\"68\":2,\"71\":1,\"152\":1,\"206\":1,\"357\":6,\"358\":1,\"360\":1,\"1035\":1,\"1163\":5}}],[\"象征其隐形的去中心化金融服务\",{\"1\":{\"143\":1}}],[\"名字对吗\",{\"1\":{\"618\":1}}],[\"名称等信息\",{\"1\":{\"592\":1}}],[\"名称\",{\"1\":{\"353\":1}}],[\"名称来源于芬兰语中的\",{\"1\":{\"143\":1}}],[\"名为\",{\"1\":{\"57\":1}}],[\"旧版复制功能虽然也能让主从服务器重新回到一致状态\",{\"1\":{\"425\":1}}],[\"旧版复制功能能够很好地完成任务\",{\"1\":{\"425\":1}}],[\"旧版复制功能的缺陷\",{\"1\":{\"425\":1}}],[\"旧版复制功能的实现\",{\"1\":{\"425\":1}}],[\"旧主节点会降级为从节点\",{\"1\":{\"413\":1}}],[\"旧值\",{\"1\":{\"384\":2,\"386\":4}}],[\"旧的东西很好用\",{\"1\":{\"771\":1}}],[\"旧的资产份额价值乘以总资产份额\",{\"1\":{\"152\":1}}],[\"旧的交易版本\",{\"1\":{\"138\":1}}],[\"旧镜像名称被取消\",{\"1\":{\"52\":1}}],[\"允许向一个现有的对象添加新的功能\",{\"1\":{\"919\":1}}],[\"允许设备使用\",{\"1\":{\"494\":1}}],[\"允许我们在不联网的情况下\",{\"1\":{\"494\":1}}],[\"允许在\",{\"1\":{\"138\":1}}],[\"允许用户以nft作为抵押品进行借款\",{\"1\":{\"151\":1}}],[\"允许用户进行交互\",{\"1\":{\"64\":1}}],[\"允许用户管理镜像的\",{\"1\":{\"48\":1}}],[\"铸造\",{\"1\":{\"135\":1,\"166\":1}}],[\"铸币\",{\"1\":{\"135\":1}}],[\"铸币权限\",{\"1\":{\"134\":1}}],[\"铸币厂\",{\"1\":{\"133\":1}}],[\"铸币账户\",{\"1\":{\"132\":1}}],[\"铸币账户代表一种特定类型的代币\",{\"1\":{\"132\":1}}],[\"冻结权限\",{\"1\":{\"134\":1}}],[\"包实现了类似于c语言的格式化输入输出函数\",{\"1\":{\"1166\":1}}],[\"包进行格式化输入输出操作\",{\"1\":{\"1166\":1}}],[\"包应该如何解析和处理该类型的命令行参数\",{\"1\":{\"1163\":1}}],[\"包提供了灵活且简便的方法来处理字符串和基本数据类型之间的转换\",{\"1\":{\"1201\":1}}],[\"包提供了一些常用的函数\",{\"1\":{\"1178\":1}}],[\"包提供了简单易用的方法来解析和处理这些命令行参数\",{\"1\":{\"1161\":1}}],[\"包提升我们代码中的迭代质量\",{\"0\":{\"1017\":1}}],[\"包还支持以下几种常用的命令行参数类型\",{\"1\":{\"1161\":1}}],[\"包还提供了其他一些函数和类型\",{\"1\":{\"1153\":1}}],[\"包来定义和解析命令行参数\",{\"1\":{\"1161\":1}}],[\"包来定义并解析命令行参数\",{\"1\":{\"1161\":1}}],[\"包来实现这些功能\",{\"1\":{\"1156\":1}}],[\"包有助于在并发环境中进行任务管理\",{\"1\":{\"1156\":1}}],[\"包定义了\",{\"1\":{\"1156\":1}}],[\"包可以提高\",{\"1\":{\"1153\":1}}],[\"包的详细总结\",{\"1\":{\"1213\":1}}],[\"包的详细介绍以及一些示例\",{\"1\":{\"1153\":1}}],[\"包的常用操作总结\",{\"1\":{\"1213\":1}}],[\"包的常用函数以及如何配置和使用日志\",{\"1\":{\"1177\":1}}],[\"包的其他特性\",{\"1\":{\"1166\":1}}],[\"包的主要功能包括\",{\"1\":{\"1160\":1}}],[\"包的基本概念和用法\",{\"1\":{\"1156\":1}}],[\"包的基本用法后\",{\"1\":{\"994\":1}}],[\"包的简要介绍和示例\",{\"1\":{\"1153\":1}}],[\"包是go语言官方提供的基础日志库\",{\"1\":{\"1183\":1}}],[\"包是一个基础的标准库\",{\"1\":{\"1177\":1}}],[\"包是\",{\"1\":{\"1153\":1,\"1160\":1,\"1198\":1,\"1204\":1}}],[\"包详解\",{\"0\":{\"1153\":1,\"1159\":1,\"1166\":1,\"1177\":1,\"1204\":1}}],[\"包中一些常用函数和类型的示例\",{\"1\":{\"1212\":1}}],[\"包中还包含了其他一些用于时间操作和格式化的函数\",{\"1\":{\"1205\":1}}],[\"包中常用函数的示例\",{\"1\":{\"1205\":1}}],[\"包中常用的命令行参数类型\",{\"1\":{\"1161\":1}}],[\"包中常见的函数和使用方式\",{\"1\":{\"1174\":1}}],[\"包中\",{\"1\":{\"1173\":1}}],[\"包中用于自定义类型的命令行参数的函数\",{\"1\":{\"1163\":2}}],[\"包中的一组函数\",{\"0\":{\"1200\":1}}],[\"包中的\",{\"1\":{\"1162\":1,\"1172\":1}}],[\"包中的分析器会在编译期间检查被拷贝的变量中是否包含\",{\"1\":{\"1144\":1}}],[\"包中提供了用于同步的一些基本原语\",{\"1\":{\"1141\":1}}],[\"包\",{\"0\":{\"1088\":1},\"1\":{\"395\":2,\"426\":1,\"428\":1}}],[\"包含缓冲区并且\",{\"1\":{\"1137\":1}}],[\"包含对实施层\",{\"1\":{\"910\":1}}],[\"包含所有你认为吸引的职业\",{\"1\":{\"572\":1}}],[\"包含的键值对数量会只减不增\",{\"1\":{\"396\":1}}],[\"包含了所有\",{\"1\":{\"1009\":1}}],[\"包含了所有需要执行的用户脚本\",{\"1\":{\"426\":1}}],[\"包含了有限个\",{\"1\":{\"1009\":1}}],[\"包含了有限个状态\",{\"1\":{\"1009\":1}}],[\"包含了\",{\"1\":{\"358\":1}}],[\"包含min函数的栈\",{\"0\":{\"301\":1}}],[\"包含树\",{\"1\":{\"297\":1}}],[\"包含与网络上的代币\",{\"1\":{\"133\":1}}],[\"包括将基本类型转换为字符串的函数\",{\"1\":{\"1198\":1}}],[\"包括获取类型信息\",{\"1\":{\"1194\":1}}],[\"包括有符号整数和无符号整数\",{\"1\":{\"1173\":1}}],[\"包括程序名称本身\",{\"1\":{\"1163\":1}}],[\"包括常见的\",{\"1\":{\"1141\":1}}],[\"包括短版本和长版本\",{\"1\":{\"988\":1}}],[\"包括但不限于betxin\",{\"1\":{\"698\":1}}],[\"包括社交网络\",{\"1\":{\"673\":1}}],[\"包括开设在线课程\",{\"1\":{\"649\":1}}],[\"包括人力\",{\"1\":{\"648\":1}}],[\"包括所有情感信息和未曾和他人分享过的秘密等\",{\"1\":{\"618\":1}}],[\"包括通勤等等\",{\"1\":{\"571\":1}}],[\"包括序列\",{\"1\":{\"468\":1}}],[\"包括这个消息头的长度和消息正文的长度\",{\"1\":{\"435\":1}}],[\"包括myself节点\",{\"1\":{\"427\":1}}],[\"包括主服务器\",{\"1\":{\"426\":1}}],[\"包括run\",{\"1\":{\"426\":1}}],[\"包括指向命令实现函数的指针\",{\"1\":{\"424\":1}}],[\"包括的命令有multi\",{\"1\":{\"424\":1}}],[\"包括写入\",{\"1\":{\"417\":1}}],[\"包括元素成员和元素分值\",{\"1\":{\"410\":1}}],[\"包括事务进行的时候\",{\"1\":{\"361\":1}}],[\"包括整数和小数\",{\"1\":{\"292\":1}}],[\"包括下标i之前的最大连续子序列和为dp\",{\"1\":{\"262\":1}}],[\"包括i\",{\"1\":{\"248\":2}}],[\"包括id\",{\"1\":{\"195\":1}}],[\"包括j\",{\"1\":{\"239\":1}}],[\"包括服务端渲染\",{\"1\":{\"191\":1}}],[\"包括去中心化和中心化各种交易所\",{\"1\":{\"185\":1}}],[\"包括地址查找表\",{\"1\":{\"138\":1}}],[\"包括购买\",{\"1\":{\"94\":1}}],[\"包括信号量\",{\"1\":{\"76\":1}}],[\"包括客户端和服务端\",{\"1\":{\"75\":1}}],[\"包括内核\",{\"1\":{\"75\":1}}],[\"包括使用numfield\",{\"1\":{\"1194\":1}}],[\"包括使用\",{\"1\":{\"68\":1}}],[\"包括\",{\"1\":{\"49\":1,\"119\":1,\"994\":1,\"1002\":1,\"1073\":1,\"1132\":1,\"1133\":1,\"1198\":2}}],[\"包括力量训练\",{\"1\":{\"4\":1}}],[\"交由\",{\"1\":{\"406\":1,\"410\":1}}],[\"交换位置\",{\"1\":{\"967\":1}}],[\"交换两节点\",{\"1\":{\"296\":1}}],[\"交换\",{\"1\":{\"293\":1}}],[\"交互的所有指令逻辑\",{\"1\":{\"132\":1,\"133\":1}}],[\"交易所并没有损失任何东西\",{\"1\":{\"706\":1}}],[\"交易所通过\",{\"1\":{\"706\":1}}],[\"交易所会在没有任何提示的情况下消失\",{\"1\":{\"706\":1}}],[\"交易所会出于任何原因将您拒之门外\",{\"1\":{\"705\":1}}],[\"交易所关闭\",{\"0\":{\"706\":1}}],[\"交易所遭到黑客攻击\",{\"0\":{\"704\":1}}],[\"交易所可能只是说您拥有一定数量的比特币\",{\"1\":{\"703\":1}}],[\"交易所被黑客攻击\",{\"1\":{\"701\":1}}],[\"交易所需的签名数量\",{\"1\":{\"117\":1}}],[\"交易者可以通过杠杆借款放大收益\",{\"1\":{\"151\":1}}],[\"交易确认及到期\",{\"0\":{\"140\":1}}],[\"交易必须遵守的操作边界\",{\"1\":{\"119\":1}}],[\"交易必须至少有一个账户已签署交易并是可写入的\",{\"1\":{\"118\":1}}],[\"交易可以通过包含单个\",{\"1\":{\"122\":1}}],[\"交易可以通过包含一个setloadedaccountsdatasizelimit指令\",{\"1\":{\"120\":1}}],[\"交易可以消耗的最大计算单元数量\",{\"1\":{\"119\":1}}],[\"交易可能执行的不同类型操作所关联的计算成本\",{\"1\":{\"119\":1}}],[\"交易被处理之前\",{\"1\":{\"118\":1}}],[\"交易费用\",{\"0\":{\"118\":1},\"1\":{\"118\":2}}],[\"交易区块哈希的最长期限为\",{\"1\":{\"117\":1}}],[\"交易消息包括一个数组\",{\"1\":{\"117\":1}}],[\"交易指令所需的账户地址数组\",{\"1\":{\"116\":1}}],[\"交易中包含的签名数组\",{\"1\":{\"116\":1}}],[\"交易是原子性的\",{\"1\":{\"116\":1}}],[\"交易与指令\",{\"0\":{\"116\":1}}],[\"交易\",{\"1\":{\"99\":1,\"254\":1}}],[\"非阻塞地发送消息\",{\"1\":{\"1137\":1}}],[\"非空的有效输入\",{\"1\":{\"1009\":1}}],[\"非批判性思考者\",{\"1\":{\"627\":1}}],[\"非批判性思考者会接受他们自己最初的想法和他人陈述的表面价值\",{\"1\":{\"626\":1}}],[\"非营利性工作\",{\"1\":{\"578\":1}}],[\"非公司网站和其他网络充满着黑客\",{\"1\":{\"534\":1}}],[\"非对称风险\",{\"1\":{\"503\":1,\"669\":1}}],[\"非虚构类书籍\",{\"0\":{\"503\":1}}],[\"非\",{\"1\":{\"419\":1}}],[\"非递减\",{\"1\":{\"276\":3}}],[\"非同质化代币\",{\"1\":{\"132\":1}}],[\"非常简单\",{\"1\":{\"958\":1}}],[\"非常有帮助\",{\"1\":{\"721\":1}}],[\"非常中肯的问题\",{\"1\":{\"572\":1}}],[\"非常方便已有这些编程语言基础的程序员入门\",{\"1\":{\"109\":1}}],[\"非常多层的镜像\",{\"1\":{\"58\":1}}],[\"视剽窃为道德亵渎\",{\"1\":{\"628\":1}}],[\"视\",{\"1\":{\"424\":1,\"426\":1,\"689\":1}}],[\"视频讲过\",{\"1\":{\"1097\":1}}],[\"视频\",{\"1\":{\"393\":1,\"402\":1,\"709\":1,\"789\":1,\"977\":1}}],[\"视图等\",{\"1\":{\"341\":1}}],[\"视为一个\",{\"1\":{\"131\":1}}],[\"视野和思路不断开阔会有不一样的体验\",{\"1\":{\"11\":1}}],[\"端\",{\"1\":{\"424\":2,\"426\":1,\"435\":1}}],[\"端再根据\",{\"1\":{\"358\":1}}],[\"端口是nextjs服务的端口默认是3000\",{\"1\":{\"192\":1}}],[\"端口号\",{\"1\":{\"49\":2,\"494\":1}}],[\"端点\",{\"0\":{\"137\":1},\"1\":{\"131\":1}}],[\"伯克利包过滤器\",{\"0\":{\"129\":1}}],[\"搜索已验证的程序\",{\"1\":{\"128\":1}}],[\"搜索话题\",{\"1\":{\"23\":1}}],[\"余额比房东要求的金额还少很多\",{\"1\":{\"573\":1}}],[\"余额大于零的帐户将在称为垃圾回收的过程中从网络中删除\",{\"1\":{\"125\":1}}],[\"余额中扣留\",{\"1\":{\"124\":1}}],[\"未找到handleevent\",{\"1\":{\"1011\":1}}],[\"未找到具体的event\",{\"1\":{\"1011\":1}}],[\"未找到trans\",{\"1\":{\"1011\":1}}],[\"未公开文章未统计\",{\"1\":{\"505\":1}}],[\"未安裝\",{\"1\":{\"494\":1}}],[\"未提交事务修改过的数据\",{\"1\":{\"361\":1}}],[\"未保持\",{\"1\":{\"125\":1}}],[\"未来\",{\"1\":{\"806\":1}}],[\"未来规划\",{\"0\":{\"761\":1}}],[\"未来还是会不断重复\",{\"1\":{\"757\":1}}],[\"未来十年出现的科技进步场景\",{\"1\":{\"669\":1}}],[\"未来十年能产生的信息一定比过去十年能产生信息的很多倍\",{\"1\":{\"605\":1}}],[\"未来呼啸而来\",{\"0\":{\"806\":1},\"1\":{\"669\":1}}],[\"未来的学习能力和思考判断能力会比曾经以往任何时刻都变得更加重要\",{\"1\":{\"631\":1}}],[\"未来的点是未来的你在未来世界中担心的事情\",{\"1\":{\"585\":1}}],[\"未来的互联网似乎更可能两极化\",{\"1\":{\"534\":1}}],[\"未来的某一个不同的日子\",{\"1\":{\"252\":1}}],[\"未来互联网\",{\"0\":{\"534\":1}}],[\"未来互联网是由每个对垄断互联网感到厌倦个体去参与的\",{\"1\":{\"532\":1}}],[\"未来收获的事业\",{\"1\":{\"528\":1}}],[\"未来可能会有挤兑破产风险\",{\"1\":{\"184\":1}}],[\"未来可能会产生新的经济模型\",{\"1\":{\"28\":1}}],[\"未来会支持metamask\",{\"1\":{\"36\":1}}],[\"垃圾回收和计时器相关的字段\",{\"1\":{\"1134\":1}}],[\"垃圾回收\",{\"0\":{\"125\":1}}],[\"存在多个goroutine竞争的情况因此mcentral需要加锁\",{\"1\":{\"1149\":1}}],[\"存在缓冲区并且其中还有空闲的容量\",{\"1\":{\"1137\":1}}],[\"存在于网格中\",{\"1\":{\"284\":1}}],[\"存\",{\"1\":{\"419\":1,\"428\":1,\"435\":1}}],[\"存放在\",{\"1\":{\"393\":1,\"402\":1}}],[\"存放编号0的物品的时候\",{\"1\":{\"235\":1}}],[\"存放结果\",{\"1\":{\"206\":1}}],[\"存入的资产会成为借贷池的流动性\",{\"1\":{\"158\":1}}],[\"存入\",{\"1\":{\"153\":1}}],[\"存入每个solana\",{\"1\":{\"124\":1}}],[\"存款利率通常是借款利率的一定比例\",{\"1\":{\"166\":1}}],[\"存款\",{\"0\":{\"158\":1},\"1\":{\"157\":1}}],[\"存款份额价值\",{\"1\":{\"152\":1}}],[\"存款限额\",{\"1\":{\"152\":1}}],[\"存储着状态和信号量\",{\"1\":{\"1144\":1}}],[\"存储了一组函数指针\",{\"1\":{\"1139\":1}}],[\"存储了当前正在执行的读操作数量\",{\"1\":{\"1143\":1}}],[\"存储了当前\",{\"1\":{\"1137\":2}}],[\"存储在运行队列中\",{\"1\":{\"1132\":1}}],[\"存储在静态变量中的值必须实现sync\",{\"1\":{\"457\":1}}],[\"存储goroutine调度相关的数据\",{\"1\":{\"1132\":1}}],[\"存储不断变大的id等等\",{\"1\":{\"454\":1}}],[\"存储引擎提供了个\",{\"1\":{\"369\":1}}],[\"存储引擎提供了一种轻量级的锁来实现自增\",{\"1\":{\"369\":1}}],[\"存储引擎的数据库表\",{\"1\":{\"362\":1}}],[\"存储引擎是参与者\",{\"1\":{\"360\":1}}],[\"存储引擎实现的日志\",{\"1\":{\"358\":1}}],[\"存储引擎层生成的日志\",{\"1\":{\"355\":2}}],[\"存储引擎有\",{\"1\":{\"350\":1,\"357\":1}}],[\"存储可执行账户的地址\",{\"1\":{\"114\":1}}],[\"存储帐户状态的字节数组\",{\"1\":{\"111\":1}}],[\"存储空间等的限制外\",{\"1\":{\"75\":1}}],[\"支票很好用\",{\"1\":{\"771\":1}}],[\"支付服务申请中\",{\"1\":{\"1010\":2}}],[\"支付失败\",{\"1\":{\"1009\":1}}],[\"支付成功后进入处于\",{\"1\":{\"1009\":1}}],[\"支付成功\",{\"1\":{\"1009\":1,\"1010\":2}}],[\"支付\",{\"1\":{\"1009\":1}}],[\"支付金额以及操作类型即可\",{\"1\":{\"927\":1}}],[\"支付宝\",{\"1\":{\"614\":1,\"709\":1}}],[\"支付手段在校园内还是可以存活下去的\",{\"1\":{\"551\":1}}],[\"支付手段\",{\"1\":{\"551\":1,\"554\":1}}],[\"支付债务\",{\"1\":{\"150\":1}}],[\"支付这笔额外费用有助于提高交易在处理时优先于其他交易的方式\",{\"1\":{\"123\":1}}],[\"支持格式化输出\",{\"1\":{\"1167\":1}}],[\"支持多种语言\",{\"1\":{\"1073\":1}}],[\"支持多链部署\",{\"1\":{\"144\":1}}],[\"支持可以调整速率和桶大小\",{\"1\":{\"1038\":1}}],[\"支持特殊字符\",{\"1\":{\"1002\":5}}],[\"支持索引类型是\",{\"1\":{\"341\":1}}],[\"支持innodb\",{\"1\":{\"341\":1}}],[\"支持自带数据库\",{\"1\":{\"193\":1}}],[\"支持使用任何后端\",{\"1\":{\"193\":1}}],[\"支持的参数非常多已经稳定运行两年多算是\",{\"1\":{\"153\":1}}],[\"支持设置group\",{\"1\":{\"152\":1}}],[\"支持设置银行的weight与ltv\",{\"1\":{\"152\":1}}],[\"支持相当多的玩法\",{\"1\":{\"151\":1}}],[\"支持部分或全部偿还借款\",{\"1\":{\"150\":1}}],[\"支持为每一个成员目录\",{\"1\":{\"78\":1}}],[\"支持\",{\"1\":{\"58\":1,\"193\":2}}],[\"写操作使用\",{\"1\":{\"1143\":1}}],[\"写\",{\"1\":{\"1143\":2}}],[\"写写操作无法并行执行\",{\"1\":{\"1143\":1}}],[\"写写互斥的\",{\"1\":{\"368\":1}}],[\"写一个\",{\"1\":{\"1010\":1}}],[\"写一个守护线程\",{\"1\":{\"436\":1}}],[\"写下一种思想的行为本身看起来可产生其他的思想\",{\"1\":{\"627\":1}}],[\"写作可以有两个广泛的目标\",{\"1\":{\"627\":1}}],[\"写作可以创造知识\",{\"1\":{\"605\":1}}],[\"写作是迈向未来知识时代的通道\",{\"1\":{\"605\":1}}],[\"写出真正有思考力的\",{\"1\":{\"605\":1}}],[\"写这篇文章的感觉非常好\",{\"1\":{\"569\":1}}],[\"写代码\",{\"1\":{\"552\":1}}],[\"写了自己这段时间对时间\",{\"1\":{\"660\":1}}],[\"写了一些封装库\",{\"1\":{\"505\":1}}],[\"写了一个命令行可以直接下载网易云音乐ncm\",{\"1\":{\"505\":1}}],[\"写了一个底层论坛apiforum\",{\"1\":{\"505\":1}}],[\"写了一个可多音乐播放的安卓app深维\",{\"1\":{\"505\":1}}],[\"写了一个解释器monkey\",{\"1\":{\"505\":1}}],[\"写了一个解释器\",{\"1\":{\"500\":1}}],[\"写了公开文章60篇\",{\"1\":{\"505\":1}}],[\"写给女生的性高潮指南\",{\"1\":{\"502\":1}}],[\"写的示例确实好👍\",{\"1\":{\"446\":1}}],[\"写回策略有几种\",{\"1\":{\"413\":1}}],[\"写队列失败\",{\"1\":{\"385\":1}}],[\"写消息队列也有可能会失败啊\",{\"1\":{\"385\":1}}],[\"写缓存时间短\",{\"1\":{\"384\":1}}],[\"写请求并发\",{\"1\":{\"384\":1}}],[\"写请求只更新数据库\",{\"1\":{\"381\":1}}],[\"写锁的释放分以下几个执行\",{\"1\":{\"1143\":1}}],[\"写锁的释放会调用\",{\"1\":{\"1143\":1}}],[\"写锁\",{\"1\":{\"367\":4,\"1143\":1}}],[\"写成功了\",{\"1\":{\"360\":1}}],[\"写成功为事务提交成功的标识\",{\"1\":{\"360\":1}}],[\"写成了\",{\"1\":{\"345\":1}}],[\"写磁盘成功\",{\"1\":{\"360\":1}}],[\"写满一个文件\",{\"1\":{\"358\":1}}],[\"写到消息队列中\",{\"1\":{\"386\":1}}],[\"写到队列中的消息\",{\"1\":{\"385\":1}}],[\"写到缓存中的值\",{\"1\":{\"383\":1}}],[\"写到暂存日志中\",{\"1\":{\"359\":1}}],[\"写到末尾就又回到开头\",{\"1\":{\"357\":1}}],[\"写到\",{\"1\":{\"357\":1,\"358\":1,\"360\":1}}],[\"写入当前连接上下文的c\",{\"1\":{\"1055\":1}}],[\"写入quicksort快排程序函数\",{\"1\":{\"967\":1}}],[\"写入缓存的时间\",{\"1\":{\"386\":1}}],[\"写入缓存\",{\"1\":{\"386\":2}}],[\"写入文件\",{\"1\":{\"360\":1}}],[\"写入到\",{\"1\":{\"360\":2}}],[\"写入\",{\"1\":{\"359\":1}}],[\"写入方式不同\",{\"1\":{\"358\":1}}],[\"写入性能\",{\"1\":{\"357\":1}}],[\"写入磁盘的性能\",{\"1\":{\"357\":1}}],[\"写入帐户\",{\"1\":{\"121\":1}}],[\"写文章10篇\",{\"1\":{\"4\":1}}],[\"消除永久绑定关系\",{\"1\":{\"909\":1}}],[\"消极的分数表明厌恶\",{\"1\":{\"771\":1}}],[\"消费效率\",{\"0\":{\"743\":1}}],[\"消费着心态永远不会致富\",{\"1\":{\"739\":1}}],[\"消费信息的质量一定是可以选择的\",{\"1\":{\"677\":1}}],[\"消费者因此贫穷\",{\"1\":{\"738\":1}}],[\"消费者总是将自己的金钱付给生产者\",{\"1\":{\"738\":1}}],[\"消费者\",{\"1\":{\"411\":1}}],[\"消费者延时\",{\"1\":{\"386\":1}}],[\"消\",{\"1\":{\"434\":1}}],[\"消耗预算\",{\"1\":{\"121\":1}}],[\"消息可以是文本或二进制数据\",{\"1\":{\"1073\":1}}],[\"消息正文包含的节点信息数量\",{\"1\":{\"435\":1}}],[\"消息的正文\",{\"1\":{\"435\":1}}],[\"消息的类型\",{\"1\":{\"435\":1}}],[\"消息的长度\",{\"1\":{\"435\":1}}],[\"消息等各个方面进行介绍\",{\"1\":{\"427\":1}}],[\"消息不仅会被发送给这个频道的所有订阅者\",{\"1\":{\"423\":1}}],[\"消息队列保证消息成功投递\",{\"1\":{\"385\":1}}],[\"消息队列保证可靠性\",{\"1\":{\"385\":1}}],[\"消息队列\",{\"1\":{\"385\":3,\"388\":1}}],[\"消息队列和共享内存等\",{\"1\":{\"76\":1}}],[\"消息功能\",{\"1\":{\"193\":1}}],[\"消息包括说明\",{\"1\":{\"116\":1}}],[\"消息包含\",{\"1\":{\"116\":1}}],[\"消息头除了包含消息正文之外\",{\"1\":{\"435\":1}}],[\"消息头指定交易的帐户地址数组中包含的帐户的权限\",{\"1\":{\"117\":1}}],[\"消息头\",{\"0\":{\"435\":1},\"1\":{\"116\":1}}],[\"消息\",{\"0\":{\"117\":1,\"434\":1},\"1\":{\"116\":2}}],[\"值信息\",{\"1\":{\"1194\":1}}],[\"值就是10\",{\"1\":{\"1187\":1}}],[\"值得注意的是\",{\"1\":{\"1010\":1}}],[\"值得注意的是cron\",{\"1\":{\"1001\":1}}],[\"值得一提的是瑞达里奥还给出了普通人最简单的投资观念是\",{\"1\":{\"528\":1}}],[\"值是成员\",{\"1\":{\"449\":1}}],[\"值是一个链表\",{\"1\":{\"423\":1}}],[\"值的情况\",{\"1\":{\"448\":1}}],[\"值全为0的字节数组\",{\"1\":{\"435\":1}}],[\"值都大于或等于10秒时\",{\"1\":{\"425\":1}}],[\"值可以是以下常量的其中一个\",{\"1\":{\"420\":1}}],[\"值对\",{\"1\":{\"413\":1}}],[\"值为空\",{\"1\":{\"408\":1}}],[\"值为\",{\"1\":{\"395\":1}}],[\"值也是一个字符串对象sds\",{\"1\":{\"393\":1,\"402\":1}}],[\"值在\",{\"1\":{\"362\":1}}],[\"值大于等于\",{\"1\":{\"362\":1}}],[\"值小于\",{\"1\":{\"362\":1}}],[\"值\",{\"1\":{\"120\":1,\"362\":4,\"395\":2,\"407\":1,\"426\":1,\"432\":2,\"448\":1,\"450\":5,\"451\":2,\"1187\":1}}],[\"费用账户\",{\"1\":{\"152\":1}}],[\"费用支付者账户的余额扣除做为交易费\",{\"1\":{\"118\":1}}],[\"费用支付者\",{\"1\":{\"118\":1}}],[\"费用收取\",{\"1\":{\"118\":1}}],[\"被调度器唤醒后会执行一些收尾工作\",{\"1\":{\"1137\":1}}],[\"被调用的程序b也可以进一步对其他程序进行cpi\",{\"1\":{\"131\":1}}],[\"被线程\",{\"1\":{\"1134\":2}}],[\"被空闲队列或者改变其状态的结构持有\",{\"1\":{\"1134\":1}}],[\"被赋予了内核线程\",{\"1\":{\"1132\":2}}],[\"被映射为\",{\"1\":{\"1087\":1}}],[\"被映射到一个哈希槽中\",{\"1\":{\"413\":1}}],[\"被中间件与业务逻辑的handler处理\",{\"1\":{\"1056\":1}}],[\"被时时刻刻的当下所束缚\",{\"1\":{\"806\":1}}],[\"被证明是\",{\"1\":{\"721\":1}}],[\"被看法所影响\",{\"0\":{\"666\":1}}],[\"被动等待\",{\"1\":{\"1135\":3}}],[\"被动的方式获取知识\",{\"1\":{\"654\":1}}],[\"被动问题\",{\"1\":{\"554\":1}}],[\"被揭露抄袭了英国政治人物尼尔\",{\"1\":{\"628\":1}}],[\"被黑客窃取两亿的事件了\",{\"1\":{\"591\":1}}],[\"被人漠视\",{\"1\":{\"573\":1}}],[\"被批评和不被认同\",{\"1\":{\"573\":1}}],[\"被世界告知要去创造我们的生活\",{\"1\":{\"570\":1}}],[\"被迫回归\",{\"1\":{\"553\":1}}],[\"被发送的信息都不会保存在redis服务器里面\",{\"1\":{\"426\":1}}],[\"被复制的服务器叫主服务器\",{\"1\":{\"425\":1}}],[\"被写入aof文件的所有命令都是以redis的命令请求协议格式保存的\",{\"1\":{\"421\":1}}],[\"被载入到数据库中\",{\"1\":{\"414\":1}}],[\"被保存到新的\",{\"1\":{\"414\":1}}],[\"被设置为\",{\"1\":{\"403\":1}}],[\"被访问不会移动到链表头部\",{\"1\":{\"377\":1}}],[\"被访问\",{\"1\":{\"377\":1}}],[\"被\",{\"1\":{\"369\":1,\"424\":1,\"426\":3,\"1142\":1}}],[\"被拆开的时候\",{\"1\":{\"358\":1}}],[\"被修改\",{\"1\":{\"357\":1}}],[\"被重复一次\",{\"1\":{\"291\":1}}],[\"被授权将代币转出代币账户的账户\",{\"1\":{\"135\":1}}],[\"被授权创建代币新单位的账户\",{\"1\":{\"134\":1}}],[\"被烧毁\",{\"1\":{\"118\":1}}],[\"被称为程序\",{\"1\":{\"114\":1,\"126\":1}}],[\"被称为\",{\"1\":{\"60\":1}}],[\"通道会接收到一个时间值\",{\"1\":{\"1206\":4}}],[\"通用的占位符\",{\"1\":{\"1173\":1}}],[\"通信方式\",{\"1\":{\"1073\":1}}],[\"通知所有观察者\",{\"1\":{\"844\":1}}],[\"通知观察者\",{\"1\":{\"844\":1}}],[\"通\",{\"1\":{\"426\":1,\"435\":1}}],[\"通读nextauth文档\",{\"0\":{\"193\":1}}],[\"通过下面方式同样可行\",{\"1\":{\"1223\":1}}],[\"通过在源码中import\",{\"1\":{\"1223\":1}}],[\"通过在每个节点内维持多个指向其他节点的指针\",{\"1\":{\"397\":1}}],[\"通过定义特定的格式模板\",{\"1\":{\"1205\":1}}],[\"通过定义某个实例的一系列状态\",{\"1\":{\"1008\":1}}],[\"通过解析结构体的方法名称\",{\"1\":{\"1194\":1}}],[\"通过解析器对\",{\"1\":{\"349\":1}}],[\"通过示例代码展示了如何使用反射获取结构体的字段信息和方法信息\",{\"1\":{\"1194\":1}}],[\"通过示例代码展示了如何使用reflect\",{\"1\":{\"1194\":1}}],[\"通过示例代码演示了如何通过反射获取变量的指针值\",{\"1\":{\"1194\":1}}],[\"通过reflect自动注册http路由\",{\"0\":{\"1193\":1}}],[\"通过上面这个例子\",{\"1\":{\"1192\":1}}],[\"通过上下文对象的缓存池节省连接高并发时内存频繁申请与释放的代价\",{\"1\":{\"1057\":1}}],[\"通过反射自动注册http方法的功能\",{\"1\":{\"1194\":1}}],[\"通过反射来更改变量的底层值\",{\"0\":{\"1190\":1}}],[\"通过反射\",{\"1\":{\"1188\":1,\"1193\":1,\"1194\":1}}],[\"通过反复练习上滑行为来获取信息与巴甫洛夫的狗实验有很多相似之处\",{\"1\":{\"631\":1}}],[\"通过遍历\",{\"1\":{\"1163\":1}}],[\"通过传入一个实现了\",{\"1\":{\"1163\":1}}],[\"通过传授知识\",{\"1\":{\"647\":1,\"649\":1,\"686\":1}}],[\"通过实现\",{\"1\":{\"1163\":2}}],[\"通过调用\",{\"1\":{\"1162\":1}}],[\"通过修改命令行参数的值\",{\"1\":{\"1161\":1,\"1162\":1}}],[\"通过命令行指定的整数值会被解析并赋值给对应的整数变量\",{\"1\":{\"1161\":1}}],[\"通过命令连接向所有被监视的主服务器和从服务器发送以下格式的命令\",{\"1\":{\"426\":1}}],[\"通过对\",{\"1\":{\"1144\":1}}],[\"通过对比主从服务器的复制偏移量\",{\"1\":{\"425\":1}}],[\"通过信号量保证资源不会被两个\",{\"1\":{\"1142\":1}}],[\"通过自旋等待互斥锁的释放\",{\"1\":{\"1142\":1}}],[\"通过自我欺骗将自己的笔记包装成文章\",{\"1\":{\"660\":1}}],[\"通过一个算法\",{\"1\":{\"1135\":1}}],[\"通过一个具体的工厂来实现它\",{\"1\":{\"883\":1}}],[\"通过处理器\",{\"1\":{\"1134\":1}}],[\"通过指定\",{\"1\":{\"1088\":1}}],[\"通过我们刚刚下载的的protoc工具和插件去生成相应的go代码\",{\"1\":{\"1067\":1}}],[\"通过我们无聊的模块化单体\",{\"1\":{\"725\":1}}],[\"通过http\",{\"1\":{\"1054\":1}}],[\"通过http请求获取订单数据的方法\",{\"1\":{\"980\":1}}],[\"通过以上的讲解\",{\"1\":{\"1011\":1}}],[\"通过放入两个半截数组剩下的元素\",{\"1\":{\"948\":1}}],[\"通过比较两个半截数组的i和j\",{\"1\":{\"948\":1}}],[\"通过组合类提供功能扩展\",{\"1\":{\"922\":1}}],[\"通过装饰器可以在运行时扩展对象功能\",{\"1\":{\"920\":1}}],[\"通过装饰类提供额外的功能\",{\"1\":{\"920\":1}}],[\"通过适配器和适配接口\",{\"1\":{\"906\":1}}],[\"通过拷贝原型直接复制对象结构而不是通过单独的构造器来实现\",{\"1\":{\"889\":1}}],[\"通过子类改变算法中的某些步骤\",{\"1\":{\"862\":1}}],[\"通过中介者转发消息\",{\"1\":{\"833\":2}}],[\"通过链上转移产权也是有价值的\",{\"1\":{\"800\":1}}],[\"通过招聘可以招揽许多技术性人才\",{\"1\":{\"792\":1}}],[\"通过去公司工作的方式获得收入\",{\"1\":{\"776\":1}}],[\"通过使好的架构变得平易近人且富有成效\",{\"1\":{\"724\":1}}],[\"通过使用这些不同类型的命令行参数\",{\"1\":{\"1161\":1}}],[\"通过使用\",{\"1\":{\"360\":1,\"1161\":1}}],[\"通过数据挖掘\",{\"1\":{\"709\":1}}],[\"通过云+大数据的方式向大众提供各种方便的服务\",{\"1\":{\"709\":1}}],[\"通过大数据\",{\"1\":{\"709\":1}}],[\"通过提取您的coin\",{\"1\":{\"701\":1}}],[\"通过提出这样的问题\",{\"1\":{\"574\":1}}],[\"通过检验和论证或者通过推理主动地获取知识\",{\"1\":{\"654\":1}}],[\"通过生产和传播知识来影响和改变人们的思维和行为\",{\"1\":{\"649\":1}}],[\"通过生产知识来卖课\",{\"1\":{\"647\":1,\"686\":1}}],[\"通过工业时代的创新\",{\"1\":{\"649\":1}}],[\"通过掌握基础知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"通过吸引大多数人的注意力来赚取广告费\",{\"1\":{\"647\":1,\"686\":1}}],[\"通过吸引用户的注意力来卖广告商业模式就只能导致这种情况的发生\",{\"1\":{\"610\":1}}],[\"通过高效地规划和安排时间\",{\"1\":{\"646\":1}}],[\"通过各种渠道传播自己的观点和经验\",{\"1\":{\"646\":1}}],[\"通过学习和实践不断提升自己的能力\",{\"1\":{\"646\":1}}],[\"通过广告\",{\"1\":{\"646\":1}}],[\"通过互联网\",{\"1\":{\"646\":1}}],[\"通过物理实力与野生动物的斗争来获取食物和资源\",{\"1\":{\"646\":1}}],[\"通过培养批判性思考者的特性\",{\"1\":{\"627\":1}}],[\"通过不断尝试错误来求解问题\",{\"1\":{\"571\":1}}],[\"通过思考拼凑出结论\",{\"1\":{\"571\":1}}],[\"通过类比推理\",{\"1\":{\"571\":2}}],[\"通过确保它们prevhash中的每个block与hash前面的相同\",{\"1\":{\"513\":1}}],[\"通过本教程你可以在线上\",{\"1\":{\"497\":1}}],[\"通过这个简单的示例\",{\"1\":{\"1025\":1}}],[\"通过这个过程\",{\"1\":{\"571\":1}}],[\"通过这条ping消息节点b可以知道节点a已经成功地接收到了自己返回的pong消息\",{\"1\":{\"427\":1}}],[\"通过这条pong消息节点a可以知道节点b已经成功地接收到了自己发送的meet消息\",{\"1\":{\"427\":1}}],[\"通过这五个字符\",{\"1\":{\"418\":1}}],[\"通过分析主服务器返回的info命令回复\",{\"1\":{\"426\":1}}],[\"通过分数返回有序集合指定区间内的成员\",{\"1\":{\"410\":1}}],[\"通过向节点发送cluster\",{\"1\":{\"428\":1}}],[\"通过向节点a发送cluster\",{\"1\":{\"427\":1}}],[\"通过向主服务器发送info\",{\"1\":{\"425\":1}}],[\"通过向从服务器发送slaveof命令\",{\"1\":{\"425\":1}}],[\"通过发送ping命令可以检查主服务器能否正常处理命令请求\",{\"1\":{\"425\":1}}],[\"通过发送ping命令可以检查套接字的读写状态是否正常\",{\"1\":{\"425\":1}}],[\"通过watched\",{\"1\":{\"424\":1}}],[\"通过执行subscribe命令\",{\"1\":{\"423\":1}}],[\"通过该功能\",{\"1\":{\"422\":1}}],[\"通过字典区间返回有序集合的成员\",{\"1\":{\"410\":1}}],[\"通过索引\",{\"1\":{\"410\":1}}],[\"通过索引区间返回有序集合成指定区间内的成员\",{\"1\":{\"410\":1}}],[\"通过索引获取列表中的元素\",{\"1\":{\"405\":1}}],[\"通过加读写锁的方式来避免并行访问\",{\"1\":{\"362\":1}}],[\"通过加锁虽然完美地解决了顺序一致性的问题\",{\"1\":{\"360\":1}}],[\"通过虚拟节点搞事情\",{\"1\":{\"294\":1}}],[\"通过相邻的单元格内的字母构成\",{\"1\":{\"284\":1}}],[\"通过观察可以发现\",{\"1\":{\"276\":1}}],[\"通过删除一些\",{\"1\":{\"264\":1}}],[\"通过tmpk找到相对应的字符串\",{\"1\":{\"210\":1}}],[\"通过套利机会不仅仅可以为自己赚取利润\",{\"1\":{\"187\":1}}],[\"通过套利赚取利润\",{\"1\":{\"151\":1}}],[\"通过当时市场上的套利空间\",{\"1\":{\"177\":1}}],[\"通过利率调整市面上的货币数量也很熟悉\",{\"1\":{\"176\":1}}],[\"通过\",{\"1\":{\"174\":1,\"356\":1,\"377\":1,\"468\":1,\"483\":1,\"1135\":1,\"1137\":2,\"1138\":3,\"1143\":1,\"1163\":1}}],[\"通过超额抵押的加密贷款来维持价格稳定\",{\"1\":{\"151\":1}}],[\"通过协议设定的每笔交易的最低费用金额\",{\"1\":{\"118\":1}}],[\"通常用于在字符串与基本数据类型之间进行转换\",{\"1\":{\"1197\":1}}],[\"通常用于在微服务架构中进行服务间通信\",{\"1\":{\"1073\":1}}],[\"通常以map\",{\"1\":{\"1093\":1}}],[\"通常如下所示\",{\"1\":{\"1047\":1}}],[\"通常对应这样的线上场景\",{\"1\":{\"1036\":1}}],[\"通常不涉及并发情况下使用一般是\",{\"1\":{\"1018\":1}}],[\"通常不会经常去娱乐因为这并不是生产行为\",{\"1\":{\"734\":1}}],[\"通常可以定义为一张二维表\",{\"1\":{\"1009\":1}}],[\"通常在一般性的商业公司中有两个最重要的职位\",{\"1\":{\"792\":1}}],[\"通常我们\",{\"1\":{\"1170\":1}}],[\"通常我们有两种token\",{\"1\":{\"1047\":1}}],[\"通常我们写单测用例不会只写一个\",{\"1\":{\"968\":1}}],[\"通常我们在编写代码的时候\",{\"1\":{\"967\":1}}],[\"通常我们做事都有个成本\",{\"1\":{\"792\":1}}],[\"通常我们的表达的语言总不是凭空冒出来的\",{\"1\":{\"738\":1}}],[\"通常我们的很多想法与思考都是由身边人灌输的\",{\"1\":{\"734\":1}}],[\"通常这些公司能够保持垄断地位并不是技术有很高优势\",{\"1\":{\"714\":1}}],[\"通常情况下我们使用go的包都是通过go\",{\"1\":{\"1018\":1}}],[\"通常情况下我会关注一些科技媒体与一些技术类的kol\",{\"1\":{\"731\":1}}],[\"通常情况下\",{\"1\":{\"663\":1,\"723\":1,\"743\":1,\"1047\":1}}],[\"通常情况下话题规则会详细描述话题结束时的结算分配规则\",{\"1\":{\"27\":1}}],[\"通常一些观点如果与大众的观点截然不同\",{\"1\":{\"595\":1}}],[\"通常会伴随着一些内部的混乱\",{\"1\":{\"587\":1}}],[\"通常会发现以下三种情况之一\",{\"1\":{\"575\":1}}],[\"通常会发现很多人都会感到非常遗憾\",{\"1\":{\"570\":1}}],[\"通常会与两个本机程序进行交互\",{\"1\":{\"112\":1}}],[\"通常是源代码文件等\",{\"1\":{\"1025\":1}}],[\"通常是因为你忘记了思考你的恐惧所扮演的角色\",{\"1\":{\"577\":1}}],[\"通常是由它最强烈的声音组成的\",{\"1\":{\"574\":1}}],[\"通常是父母\",{\"1\":{\"573\":1}}],[\"通常是要比读数据库的时间更长的\",{\"1\":{\"384\":1}}],[\"通常是存款\",{\"1\":{\"164\":1}}],[\"通常是\",{\"1\":{\"162\":1}}],[\"通常是从其他协议swap交易获得需要偿还的代币\",{\"1\":{\"161\":1}}],[\"通常\",{\"1\":{\"48\":1,\"61\":1,\"614\":1}}],[\"租金\",{\"0\":{\"124\":1},\"1\":{\"118\":1,\"124\":1}}],[\"租金可以在账户关闭时全额退还\",{\"1\":{\"111\":1}}],[\"给这个结构体写几个方法\",{\"1\":{\"1193\":1}}],[\"给这个全局静态变量赋值\",{\"1\":{\"461\":1}}],[\"给用户最明显的体验感就是\",{\"1\":{\"710\":1}}],[\"给自己积极的心理暗示真的会影响一个人的行为\",{\"1\":{\"632\":1}}],[\"给予他正确的选择\",{\"1\":{\"588\":1}}],[\"给想离开微信圈朋友的几条建议\",{\"0\":{\"554\":1}}],[\"给出的简单建议都与普通人的想法完全相反\",{\"1\":{\"528\":1}}],[\"给出该镜像完整的\",{\"1\":{\"49\":1}}],[\"给\",{\"1\":{\"435\":1}}],[\"给节点负责\",{\"1\":{\"428\":1}}],[\"给下游的消息队列\",{\"1\":{\"385\":1}}],[\"给每个线程分配了一片内存用于缓冲\",{\"1\":{\"358\":1}}],[\"给客户端\",{\"1\":{\"343\":1}}],[\"给你的大脑足够的时间来保持最佳状态\",{\"1\":{\"789\":1}}],[\"给你们两分钟思考一下\",{\"1\":{\"626\":1}}],[\"给你二叉树的根节点\",{\"1\":{\"307\":1}}],[\"给你一根长度为\",{\"1\":{\"285\":1,\"286\":1}}],[\"给你一个字符串\",{\"1\":{\"267\":1,\"268\":1}}],[\"给你一个只包含正整数的非空数组nums\",{\"1\":{\"237\":1}}],[\"给你一个整数数组\",{\"1\":{\"228\":1,\"257\":1,\"262\":1}}],[\"给你一个整数\",{\"1\":{\"220\":1}}],[\"给你两个单词\",{\"1\":{\"266\":1}}],[\"给两个整数数组\",{\"1\":{\"259\":1}}],[\"给定一棵二叉搜索树\",{\"1\":{\"327\":1}}],[\"给定一个棋盘及其上面的礼物的价值\",{\"1\":{\"319\":1}}],[\"给定一个数字\",{\"1\":{\"318\":1}}],[\"给定一个数组\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"336\":1}}],[\"给定一个链表\",{\"1\":{\"294\":1}}],[\"给定一个\",{\"1\":{\"284\":1}}],[\"给定一个字符串\",{\"1\":{\"264\":1}}],[\"给定一个未经排序的整数数组\",{\"1\":{\"258\":1}}],[\"给定一个代表每个房屋存放金额的非负整数数组\",{\"1\":{\"249\":1}}],[\"给定一个整数数组\",{\"1\":{\"255\":1,\"256\":1}}],[\"给定一个整数\",{\"1\":{\"232\":1}}],[\"给定一个正整数\",{\"1\":{\"231\":1}}],[\"给定一个可包含重复数字的序列\",{\"1\":{\"219\":1}}],[\"给定二叉树\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"328\":1,\"329\":2}}],[\"给定的树\",{\"1\":{\"297\":2}}],[\"给定你链表中值为\",{\"1\":{\"290\":2}}],[\"给定单向链表的头指针和一个要删除的节点的值\",{\"1\":{\"290\":1}}],[\"给定\",{\"1\":{\"276\":2,\"403\":1}}],[\"给定两个单词\",{\"1\":{\"265\":1}}],[\"给定两个字符串\",{\"1\":{\"260\":1}}],[\"给定字符串\",{\"1\":{\"263\":1}}],[\"给定正整数\",{\"1\":{\"245\":1}}],[\"给验证者处理交易\",{\"1\":{\"118\":1}}],[\"帐户运行状况通常在\",{\"1\":{\"150\":1}}],[\"帐户和其他元数据\",{\"1\":{\"116\":1}}],[\"帐户数据\",{\"1\":{\"111\":1}}],[\"个字段\",{\"1\":{\"1143\":1,\"1146\":1}}],[\"个字节的长度\",{\"1\":{\"473\":1}}],[\"个字节内存空间\",{\"1\":{\"471\":1}}],[\"个字节\",{\"1\":{\"116\":1,\"473\":3,\"474\":1,\"480\":2}}],[\"个字节可用于数据包的数据\",{\"1\":{\"116\":1}}],[\"个处理器\",{\"1\":{\"1134\":1}}],[\"个域含义依次为\",{\"1\":{\"1002\":1}}],[\"个将报错\",{\"1\":{\"991\":1}}],[\"个位置参数\",{\"1\":{\"991\":3}}],[\"个性的本质是警惕\",{\"1\":{\"623\":1}}],[\"个性源于认识到不可能逃避他人和环境的影响\",{\"1\":{\"623\":1}}],[\"个不同的\",{\"1\":{\"579\":1}}],[\"个人可以非常方便地使用云服务\",{\"1\":{\"711\":1}}],[\"个人可以自由地在互联网上以任何方式去表达自己\",{\"1\":{\"532\":1}}],[\"个人议程\",{\"1\":{\"627\":1}}],[\"个人项目与mixin\",{\"0\":{\"602\":1}}],[\"个人大部分金钱应该存储在流动性强\",{\"1\":{\"598\":1}}],[\"个人触附和\",{\"1\":{\"573\":1}}],[\"个人触各种需求又不一定赚钱\",{\"1\":{\"573\":1}}],[\"个人触同时在两份基层职位挥余无比\",{\"1\":{\"573\":1}}],[\"个人触也可能通过此寻找意义满足\",{\"1\":{\"573\":1}}],[\"个人触须令成功人士总难以平心静气地选择海边享酒度日\",{\"1\":{\"573\":1}}],[\"个人需求触须可能是这里最难下定义的一个\",{\"1\":{\"573\":1}}],[\"个人的职业认同往往是形成主要身份的重要组成部分\",{\"1\":{\"571\":1}}],[\"个人在互联网上发表意见和对权力的争取其实是沉默的斗争\",{\"1\":{\"534\":1}}],[\"个体的反击\",{\"0\":{\"531\":1}}],[\"个clusternode结构\",{\"1\":{\"432\":2}}],[\"个哈希槽\",{\"1\":{\"413\":1}}],[\"个后台线程\",{\"1\":{\"411\":1}}],[\"个值与\",{\"1\":{\"405\":1}}],[\"个dictht哈希表\",{\"1\":{\"395\":1}}],[\"个docker\",{\"1\":{\"76\":1}}],[\"个问题的解决方案是这样的\",{\"1\":{\"386\":1}}],[\"个问题的核心在于\",{\"1\":{\"386\":1}}],[\"个问题\",{\"1\":{\"386\":1}}],[\"个条件\",{\"1\":{\"384\":1}}],[\"个线程\",{\"1\":{\"1134\":1}}],[\"个线程并发\",{\"1\":{\"384\":1}}],[\"个线程要并发\",{\"1\":{\"384\":1,\"386\":1}}],[\"个区域\",{\"1\":{\"377\":1}}],[\"个区块\",{\"1\":{\"117\":2}}],[\"个阶段\",{\"1\":{\"359\":1}}],[\"个事务一次性一起刷盘的时间成本则近似于\",{\"1\":{\"360\":1}}],[\"个事务依次排队刷盘的时间成本是\",{\"1\":{\"360\":1}}],[\"个事务后才\",{\"1\":{\"358\":1,\"360\":1}}],[\"个事务的\",{\"1\":{\"358\":1,\"360\":1}}],[\"个重做日志文件组\",{\"1\":{\"357\":1}}],[\"个骰子所能掷出的点数集合中第\",{\"1\":{\"337\":1}}],[\"个丑数\",{\"1\":{\"321\":2}}],[\"个数外\",{\"1\":{\"1034\":1}}],[\"个数\",{\"1\":{\"313\":1,\"1142\":1,\"1173\":2}}],[\"个数为dp\",{\"1\":{\"264\":1}}],[\"个节点是值为\",{\"1\":{\"294\":1}}],[\"个节点\",{\"1\":{\"294\":1,\"413\":1}}],[\"个\",{\"1\":{\"291\":1,\"357\":1,\"382\":1,\"395\":3,\"396\":1,\"404\":1,\"406\":1,\"408\":1,\"410\":1,\"413\":1,\"419\":1,\"426\":10,\"428\":3,\"431\":1,\"433\":1,\"434\":1,\"435\":2,\"437\":1,\"1002\":8,\"1034\":2,\"1036\":2,\"1135\":1}}],[\"个元素代表这\",{\"1\":{\"337\":1}}],[\"个元素代表了第\",{\"1\":{\"256\":1}}],[\"个元素是一支给定的股票在第\",{\"1\":{\"254\":1}}],[\"个元素是一支给定股票第\",{\"1\":{\"253\":1}}],[\"个元素\",{\"1\":{\"252\":1,\"255\":1}}],[\"个台阶向上爬需要支付的费用\",{\"1\":{\"228\":1}}],[\"个皇后放置在\",{\"1\":{\"220\":1}}],[\"个代币\",{\"1\":{\"169\":7}}],[\"个地址\",{\"1\":{\"139\":2}}],[\"签名的数量可能会有所不同\",{\"1\":{\"116\":1}}],[\"签名\",{\"1\":{\"116\":1,\"131\":1,\"967\":1}}],[\"若输入的槽有任何一个槽有节点\",{\"1\":{\"428\":1}}],[\"若在watch监视其间的事务\",{\"1\":{\"424\":1}}],[\"若不配置则默认条件是\",{\"1\":{\"417\":1}}],[\"若不是空格就加入s\",{\"1\":{\"277\":1}}],[\"若有则自动加载rdb文件\",{\"1\":{\"416\":1}}],[\"若大于1mb\",{\"1\":{\"393\":1,\"402\":1}}],[\"若树\",{\"1\":{\"297\":1}}],[\"若干空格\",{\"1\":{\"292\":2}}],[\"若\",{\"1\":{\"287\":3,\"326\":2}}],[\"若队列中没有元素\",{\"1\":{\"280\":1}}],[\"若要存储和修改其他数据\",{\"1\":{\"115\":1}}],[\"若没有购买者则手续费返还给平台方\",{\"1\":{\"28\":1}}],[\"缓冲区\",{\"1\":{\"1137\":1}}],[\"缓冲区帐户\",{\"1\":{\"114\":1}}],[\"缓解此问题的方案是\",{\"1\":{\"388\":1}}],[\"缓存数据量大到一台服务器无法缓存时\",{\"1\":{\"413\":1}}],[\"缓存资源浪费\",{\"1\":{\"388\":1}}],[\"缓存都是有\",{\"1\":{\"387\":1}}],[\"缓存都被回种了\",{\"1\":{\"386\":1}}],[\"缓存延迟双删策略\",{\"1\":{\"386\":1}}],[\"缓存和数据库一致性的问题\",{\"1\":{\"386\":1}}],[\"缓存刚好已失效\",{\"1\":{\"384\":1}}],[\"缓存中\",{\"1\":{\"384\":1}}],[\"缓存中是旧值\",{\"1\":{\"384\":1}}],[\"缓存中只保留最近访问的\",{\"1\":{\"382\":1}}],[\"缓存利用率\",{\"1\":{\"383\":1}}],[\"缓存利用率与一致性问题\",{\"0\":{\"382\":1},\"1\":{\"380\":1}}],[\"缓存\",{\"1\":{\"381\":1,\"386\":2,\"388\":1}}],[\"缓存一致性目录\",{\"0\":{\"380\":1},\"1\":{\"380\":1}}],[\"缓存页地址\",{\"1\":{\"376\":1}}],[\"缓存页的表空间\",{\"1\":{\"376\":1}}],[\"缓存内存\",{\"1\":{\"376\":1}}],[\"缓存在\",{\"1\":{\"357\":1,\"360\":1}}],[\"缓存文件\",{\"1\":{\"58\":1}}],[\"自旋的\",{\"1\":{\"1135\":1}}],[\"自由组合不同的处理器\",{\"1\":{\"813\":1}}],[\"自由和追求幸福的权利上平等\",{\"1\":{\"673\":1}}],[\"自由在局域网下传输文件\",{\"1\":{\"494\":1}}],[\"自控力\",{\"1\":{\"669\":1}}],[\"自媒体的终局\",{\"1\":{\"634\":1}}],[\"自从移动互联网时代到来\",{\"1\":{\"631\":1}}],[\"自然就形成了上述中间件的lifo的执行顺序\",{\"1\":{\"1056\":1}}],[\"自然就避免了单点故障\",{\"1\":{\"436\":1}}],[\"自然也就无法争辩了\",{\"1\":{\"683\":1}}],[\"自然也有信息的消费者\",{\"1\":{\"677\":1}}],[\"自然能力超越才华\",{\"1\":{\"583\":1}}],[\"自我成长类\",{\"1\":{\"669\":1}}],[\"自我中心显然产生对他人的无礼态度\",{\"1\":{\"627\":1}}],[\"自我批评\",{\"1\":{\"623\":1}}],[\"自我反省的目的是让这两个盒子都尽可能接近准确\",{\"1\":{\"578\":1}}],[\"自我感觉良好的那部分在个人触\",{\"1\":{\"573\":1}}],[\"自上而下\",{\"1\":{\"533\":1}}],[\"自古以来总有毫无疑问是正确的事情\",{\"1\":{\"528\":1}}],[\"自学是门手艺\",{\"1\":{\"502\":1,\"525\":1,\"669\":1}}],[\"自定义类型\",{\"1\":{\"1188\":1}}],[\"自定义类型解析\",{\"0\":{\"1163\":1}}],[\"自定义参数\",{\"1\":{\"1163\":1}}],[\"自定义设备名\",{\"1\":{\"494\":1}}],[\"自定义程序\",{\"0\":{\"114\":1}}],[\"自\",{\"1\":{\"433\":1}}],[\"自己主机端口号是27017\",{\"1\":{\"1219\":1}}],[\"自己敲一敲代码对这些熟悉起来\",{\"1\":{\"1089\":1}}],[\"自己在某些领域有与生俱来的天赋\",{\"1\":{\"674\":1}}],[\"自己在百度上随便找一个链接就以为自己吃透了包的内容\",{\"1\":{\"512\":1}}],[\"自己思考的地方\",{\"1\":{\"660\":1}}],[\"自己亲手做的笔记很大程度上是为了之后自己复习的\",{\"1\":{\"660\":1}}],[\"自己以为的事实\",{\"1\":{\"641\":1}}],[\"自己进步的\",{\"1\":{\"631\":1}}],[\"自己反思提炼\",{\"1\":{\"631\":1}}],[\"自己总结\",{\"1\":{\"631\":1}}],[\"自己试错\",{\"1\":{\"631\":1}}],[\"自己也紧锁眉头装装样子呢\",{\"1\":{\"626\":1}}],[\"自己是主要责任人损失也最大\",{\"1\":{\"592\":1}}],[\"自己当初的决策如此\",{\"1\":{\"592\":1}}],[\"自己生产数据\",{\"1\":{\"533\":1}}],[\"自己建站的目的也是为了兴趣\",{\"1\":{\"532\":1}}],[\"自己研究研究\",{\"1\":{\"494\":1}}],[\"自己目前正在负责处理哪些槽\",{\"1\":{\"428\":1}}],[\"自己写程序就可以订阅变更日志了\",{\"1\":{\"385\":1}}],[\"自己的长期持续赚钱的能力\",{\"1\":{\"754\":1}}],[\"自己的实践为主导\",{\"1\":{\"660\":1}}],[\"自己的判断其实只能是ai的判断\",{\"1\":{\"631\":1}}],[\"自己的日常生活不受任何影响\",{\"1\":{\"592\":1}}],[\"自己的效率又有哪里可以提升的空间\",{\"1\":{\"500\":1}}],[\"自己的进程空间\",{\"1\":{\"47\":1}}],[\"自己的网络配置\",{\"1\":{\"47\":1}}],[\"自适应哈希索引\",{\"1\":{\"376\":1}}],[\"自增锁还是要等语句结束后才被释放\",{\"1\":{\"369\":1}}],[\"自增锁在申请之后就马上释放\",{\"1\":{\"369\":1}}],[\"自带的引擎是\",{\"1\":{\"358\":1}}],[\"自动更新field和validation\",{\"1\":{\"1242\":1}}],[\"自动化\",{\"1\":{\"1241\":1}}],[\"自动化更新fields\",{\"0\":{\"1241\":1}}],[\"自动化更新的默认和定制fields\",{\"1\":{\"1222\":1}}],[\"自动化投资顾问\",{\"1\":{\"151\":1}}],[\"自动管理什么可以什么不可以\",{\"1\":{\"1011\":1}}],[\"自动完成功能\",{\"1\":{\"988\":1}}],[\"自动帮助标记识别\",{\"1\":{\"988\":1}}],[\"自动生成go文件\",{\"1\":{\"1072\":1}}],[\"自动生成命令和标志的帮助\",{\"1\":{\"988\":1}}],[\"自动生成对称签名和加密密钥\",{\"1\":{\"193\":1}}],[\"自动可以在一个界面屏中分出多个自页面\",{\"1\":{\"731\":1}}],[\"自动根据网页标签将网页逐个分类\",{\"1\":{\"731\":1}}],[\"自动处理\",{\"1\":{\"731\":1}}],[\"自动驾驶\",{\"1\":{\"674\":1}}],[\"自动接受所有文件传输请求\",{\"1\":{\"494\":1}}],[\"自动失效\",{\"1\":{\"436\":1}}],[\"自动将这个下线主服务器属下的某个从服务器升级为新的主服务器\",{\"1\":{\"426\":1}}],[\"自动将用户资金在各种借贷协议之间转移\",{\"1\":{\"151\":1}}],[\"自动间隔性保存\",{\"0\":{\"417\":1}}],[\"自动把数据库变更日志\",{\"1\":{\"385\":1}}],[\"自动投递到下游队列\",{\"1\":{\"385\":1}}],[\"程序申请内存的时候\",{\"1\":{\"1149\":1}}],[\"程序计数器\",{\"1\":{\"1132\":1}}],[\"程序添加了两个\",{\"1\":{\"990\":1}}],[\"程序中的对象应该是可以在不改变程序正确性的前提下被它的子类所替换的\",{\"1\":{\"982\":1}}],[\"程序输出的结果\",{\"1\":{\"967\":2}}],[\"程序员的思维修炼\",{\"1\":{\"504\":1}}],[\"程序员已经可以实现上面的所有需求\",{\"1\":{\"75\":1}}],[\"程序要检查槽i是否已经被指派\",{\"1\":{\"428\":1}}],[\"程序需要遍历clusterstate\",{\"1\":{\"428\":1}}],[\"程序就会对dirty计数器进行更新\",{\"1\":{\"417\":1}}],[\"程序并不是单线程的\",{\"1\":{\"411\":1}}],[\"程序都根据幂次定律随机生成一个介于1和32之间的值作为level数组的大小\",{\"1\":{\"397\":1}}],[\"程序会crash\",{\"1\":{\"447\":1}}],[\"程序会对文件中保存的键进行检查\",{\"1\":{\"414\":1}}],[\"程序会先在ht\",{\"1\":{\"396\":1}}],[\"程序会自动开始对哈希表执行扩展操作\",{\"1\":{\"395\":1}}],[\"程序将rehashidx属性的值增一\",{\"1\":{\"396\":1}}],[\"程序除了执行指定的操作以外\",{\"1\":{\"396\":1}}],[\"程序自动开始对哈希表执行收缩操作\",{\"1\":{\"395\":1}}],[\"程序在执行过程中发生异常\",{\"1\":{\"385\":1}}],[\"程序库\",{\"1\":{\"132\":1}}],[\"程序具有可组合性\",{\"1\":{\"131\":1}}],[\"程序派生地址\",{\"0\":{\"130\":1}}],[\"程序变为不可变\",{\"1\":{\"126\":1}}],[\"程序可以很容易地知道主从服务器是否处于一致状态\",{\"1\":{\"425\":1}}],[\"程序可以在载入文件时\",{\"1\":{\"418\":1}}],[\"程序可以通过层快速定位元素每次创建一个新跳跃表节点的时候\",{\"1\":{\"397\":1}}],[\"程序可以通过升级权限设定的账户来更新\",{\"1\":{\"126\":1}}],[\"程序可执行数据帐户\",{\"1\":{\"114\":1}}],[\"程序是无状态的\",{\"1\":{\"126\":1}}],[\"程序是包含可执行代码的链上账户\",{\"1\":{\"126\":1}}],[\"程序是包含可执行代码的帐户\",{\"1\":{\"114\":1}}],[\"程序部署时理论上会产生三个账户\",{\"1\":{\"114\":1}}],[\"程序账户\",{\"1\":{\"114\":1}}],[\"程序账户的owner的所有者才可以修改账户上的存储数据或转账\",{\"1\":{\"111\":1}}],[\"程序账户是存储可执行代码的无状态帐户\",{\"1\":{\"111\":1}}],[\"程序\",{\"0\":{\"126\":1},\"1\":{\"111\":1,\"117\":1,\"981\":1}}],[\"程序状态\",{\"1\":{\"111\":1}}],[\"链路上的任何一个网关都可能关闭这个连接\",{\"1\":{\"1073\":1}}],[\"链式编程\",{\"1\":{\"467\":1}}],[\"链表里面记录的是这个频道的客户端\",{\"1\":{\"423\":1}}],[\"链表所包含的节点数量\",{\"1\":{\"394\":1}}],[\"链表在redis中的应用非常广泛\",{\"1\":{\"394\":1}}],[\"链表中找到满足\",{\"1\":{\"1146\":1}}],[\"链表中所有的元素都是\",{\"1\":{\"1137\":1}}],[\"链表中记录了所有监视相应数据库键的客户端\",{\"1\":{\"424\":1}}],[\"链表中的每个节点都包含着一个pubsub\",{\"1\":{\"423\":1}}],[\"链表中\",{\"1\":{\"377\":2}}],[\"链表中倒数第k个节点\",{\"0\":{\"294\":1}}],[\"链表长度的比例可以通过\",{\"1\":{\"377\":1}}],[\"链表前排的位置\",{\"1\":{\"377\":1}}],[\"链表头部\",{\"1\":{\"377\":1}}],[\"链表和\",{\"1\":{\"377\":1}}],[\"链表末尾的节点\",{\"1\":{\"377\":1}}],[\"链表后\",{\"1\":{\"377\":1}}],[\"链表的特性\",{\"1\":{\"394\":1}}],[\"链表的前半部分\",{\"1\":{\"377\":1}}],[\"链表的头部\",{\"1\":{\"377\":2}}],[\"链表的节点也是控制块\",{\"1\":{\"377\":1}}],[\"链表的常规题\",{\"1\":{\"294\":1}}],[\"链表\",{\"0\":{\"394\":1},\"1\":{\"377\":5}}],[\"链表节点使用void\",{\"1\":{\"394\":1}}],[\"链表节点\",{\"1\":{\"376\":1}}],[\"链上的代币价格通常由预言机提供\",{\"1\":{\"165\":1}}],[\"链上每笔交易执行的所有操作都需要验证者在处理时消耗不同数量的计算资源\",{\"1\":{\"121\":1}}],[\"链上程序可以由被指定为\",{\"1\":{\"127\":1}}],[\"链上程序主账户\",{\"1\":{\"114\":1}}],[\"链上程序是公开的大家都可以使用的合约程序\",{\"1\":{\"110\":1}}],[\"链上程序开发\",{\"1\":{\"110\":1}}],[\"链下dapp是可以给用户使用的界面\",{\"1\":{\"110\":1}}],[\"链下dapp开发\",{\"1\":{\"110\":1}}],[\"特地在此记录下来学习到的知识和使用过程\",{\"1\":{\"1030\":1}}],[\"特殊字符的含义如下\",{\"1\":{\"1002\":1}}],[\"特殊到你的手机都可以运行一个比特币的全节点\",{\"1\":{\"94\":1}}],[\"特别是在需要将字符串或字符嵌入到源代码中时\",{\"1\":{\"1200\":1}}],[\"特别是在并发测试中\",{\"1\":{\"899\":1}}],[\"特别是在写字楼内工作的人\",{\"1\":{\"788\":1}}],[\"特别是在某些地区\",{\"1\":{\"784\":1}}],[\"特别是如果你为国家和社会奉献出自己的一份力而感到自豪的情况下\",{\"1\":{\"718\":1}}],[\"特别是有持续稳定业务的垄断科技公司\",{\"1\":{\"714\":1}}],[\"特别是\",{\"1\":{\"627\":1}}],[\"特别是长期持有的信念上\",{\"1\":{\"627\":1}}],[\"特别是暴力犯罪\",{\"1\":{\"626\":1}}],[\"特别是鉴于大家阅读这篇文章的利基点都有很多共同点\",{\"1\":{\"573\":1}}],[\"特别是发现自己在被欺骗之后\",{\"1\":{\"534\":1}}],[\"特别是智能合约的出现\",{\"1\":{\"109\":1}}],[\"特朗勃\",{\"1\":{\"505\":1}}],[\"特例处理\",{\"1\":{\"297\":1}}],[\"特点\",{\"1\":{\"185\":1}}],[\"特定于所调用程序的\",{\"1\":{\"117\":1}}],[\"开闭原则\",{\"1\":{\"982\":1}}],[\"开放核心\",{\"0\":{\"725\":1}}],[\"开刷\",{\"1\":{\"631\":1}}],[\"开灯的方法是首先确定你的意识思维对于你的渴望和恐惧的了解\",{\"1\":{\"574\":1}}],[\"开头\",{\"1\":{\"991\":1}}],[\"开头的参数记录的则是主服务器的信息\",{\"1\":{\"426\":1}}],[\"开头的参数记录的是sentinel本身的信息\",{\"1\":{\"426\":1}}],[\"开头为\",{\"1\":{\"413\":1}}],[\"开启事务\",{\"1\":{\"975\":1}}],[\"开启事务后\",{\"1\":{\"357\":1}}],[\"开启binlog的情况下\",{\"1\":{\"360\":1}}],[\"开始慢速解锁\",{\"1\":{\"1142\":1}}],[\"开始编写grpc的相关代码\",{\"1\":{\"1068\":1}}],[\"开始编写代码\",{\"1\":{\"1067\":1}}],[\"开始下载go的插件\",{\"1\":{\"1067\":1}}],[\"开始形成lifo的函数调用栈\",{\"1\":{\"1055\":1}}],[\"开始监听请求并提供http服务\",{\"1\":{\"1050\":1}}],[\"开始使用汽车\",{\"1\":{\"773\":1}}],[\"开始的最佳方式是回顾自己的过去\",{\"1\":{\"588\":1}}],[\"开始试图拨打911\",{\"1\":{\"587\":1}}],[\"开始行动\",{\"0\":{\"586\":1}}],[\"开始去遍历字符串来定位合法的字符\",{\"1\":{\"474\":1}}],[\"开始\",{\"0\":{\"510\":1,\"1225\":1},\"1\":{\"403\":1,\"447\":1}}],[\"开始事务\",{\"1\":{\"362\":1}}],[\"开始前\",{\"1\":{\"357\":1}}],[\"开始支持\",{\"1\":{\"77\":1}}],[\"开发时间应该\",{\"1\":{\"722\":1}}],[\"开发出具有商业价值的软件\",{\"1\":{\"646\":1}}],[\"开发者\",{\"1\":{\"505\":1}}],[\"开发者社区引入了支持可验证构建的工具\",{\"1\":{\"128\":1}}],[\"开发使用闪电贷款利用多个交易所之间价格差异的机器人\",{\"1\":{\"151\":1}}],[\"开发一个稳定币系统\",{\"1\":{\"151\":1}}],[\"开发入门\",{\"0\":{\"110\":1}}],[\"开发基础简介\",{\"0\":{\"108\":1}}],[\"学到的内容输出\",{\"1\":{\"660\":1}}],[\"学到docker\",{\"1\":{\"56\":1}}],[\"学会做生意\",{\"1\":{\"663\":1}}],[\"学会简单的编程知识后可以开发出节省时间的工具\",{\"1\":{\"647\":1,\"686\":1}}],[\"学会加减法后可以学习乘除法\",{\"1\":{\"647\":1,\"686\":1}}],[\"学校并不严格\",{\"1\":{\"759\":1}}],[\"学校所教授的价值观截然不同的价值观\",{\"1\":{\"621\":1}}],[\"学校里的孩子就像公司里的员工\",{\"1\":{\"570\":1}}],[\"学皮毛\",{\"1\":{\"525\":1}}],[\"学习了grpc的主要语法以及如何用protoc工具生成\",{\"1\":{\"1089\":1}}],[\"学习使用gateway\",{\"1\":{\"1080\":1}}],[\"学习\",{\"0\":{\"1044\":1}}],[\"学习工具可以提高我们的效率\",{\"1\":{\"1020\":1}}],[\"学习到了很多道理认知\",{\"1\":{\"810\":1}}],[\"学习新技术并使用它\",{\"1\":{\"773\":1}}],[\"学习所有国家的文化\",{\"1\":{\"764\":1}}],[\"学习投资让我有了对未来长远的判断\",{\"1\":{\"758\":1}}],[\"学习编程使我的人生有了目标感\",{\"1\":{\"758\":1}}],[\"学习某个东西\",{\"1\":{\"525\":1}}],[\"学习学习再学习\",{\"0\":{\"525\":1}}],[\"学习笔记\",{\"0\":{\"191\":1,\"340\":1,\"391\":1},\"1\":{\"206\":1,\"223\":1}}],[\"学习和使用借贷协议应该优先考虑正在活跃开发的\",{\"1\":{\"148\":1}}],[\"学习solidity\",{\"1\":{\"105\":1}}],[\"数量的\",{\"1\":{\"1135\":1}}],[\"数量越大\",{\"1\":{\"350\":1}}],[\"数学表达式\",{\"1\":{\"457\":1}}],[\"数学和加密函数等\",{\"1\":{\"341\":1}}],[\"数\",{\"1\":{\"395\":3,\"419\":1,\"424\":1,\"426\":3,\"428\":3,\"435\":3}}],[\"数值\",{\"1\":{\"292\":1}}],[\"数值的整数次方\",{\"0\":{\"288\":1}}],[\"数组及文档数组\",{\"1\":{\"1217\":1}}],[\"数组类型\",{\"1\":{\"1084\":1}}],[\"数组不足\",{\"1\":{\"1035\":1}}],[\"数组切片和字符串切片的工作方式是一样的\",{\"1\":{\"469\":1}}],[\"数组等其他类型也有\",{\"1\":{\"469\":1}}],[\"数组\",{\"1\":{\"435\":1}}],[\"数组每个元素指向的是dictentry结构的指针\",{\"1\":{\"395\":1}}],[\"数组里的数据\",{\"1\":{\"393\":1,\"402\":1}}],[\"数组长度\",{\"1\":{\"313\":1}}],[\"数组中存储的函数指针是如何被使用的\",{\"1\":{\"1139\":1}}],[\"数组中保存的元素数量是不确定的\",{\"1\":{\"1139\":1}}],[\"数组中每个元素是一个saveparam结构\",{\"1\":{\"417\":1}}],[\"数组中数字出现的次数\",{\"0\":{\"330\":1,\"331\":1}}],[\"数组中有一个数字出现的次数超过数组长度的一半\",{\"1\":{\"312\":1}}],[\"数组中出现次数超过一半的数字\",{\"0\":{\"312\":1}}],[\"数组中某些数字是重复的\",{\"1\":{\"275\":1}}],[\"数组中重复的数字\",{\"0\":{\"275\":1},\"1\":{\"274\":1}}],[\"数组中的每个multicmd结构都保存了一个已入队命令的相关信息\",{\"1\":{\"424\":1}}],[\"数组中的每条指令都指定以下信息\",{\"1\":{\"117\":1}}],[\"数组中的逆序对\",{\"0\":{\"323\":1}}],[\"数组中的一个或连续多个整数组成一个子数组\",{\"1\":{\"315\":1}}],[\"数组中的元素而不改变其余元素的顺序\",{\"1\":{\"257\":1}}],[\"数组candidates\",{\"1\":{\"212\":1}}],[\"数字经济远比实体经济发展要快\",{\"1\":{\"804\":1}}],[\"数字世界的发展是当今世界最快的领域没有之一\",{\"1\":{\"804\":1}}],[\"数字技术\",{\"1\":{\"649\":1}}],[\"数字技术让我们每个人可以看得见其他人的生活\",{\"1\":{\"611\":1}}],[\"数字技术的不幸\",{\"0\":{\"611\":1}}],[\"数字以0123456789101112131415\",{\"1\":{\"317\":1}}],[\"数字序列中某一位的数字\",{\"0\":{\"317\":1}}],[\"数字货币\",{\"1\":{\"528\":1}}],[\"数字货币超额抵押一般是使用btc\",{\"1\":{\"185\":1}}],[\"数字货币进行操作\",{\"1\":{\"176\":1}}],[\"数字资产可以摆脱某一地区经济增长停滞的束缚\",{\"1\":{\"804\":1}}],[\"数字资产的涨幅会远比实体经济的涨幅要快\",{\"1\":{\"804\":1}}],[\"数字资产全额\",{\"1\":{\"185\":1}}],[\"数字资产抵押铸造稳定币\",{\"1\":{\"183\":1}}],[\"数字公证等的公平性\",{\"1\":{\"95\":1}}],[\"数据字段\",{\"1\":{\"1218\":1}}],[\"数据记录行\",{\"1\":{\"1218\":1}}],[\"数据是自己生产的\",{\"1\":{\"533\":1}}],[\"数据核实\",{\"0\":{\"515\":1}}],[\"数据模型\",{\"0\":{\"513\":1}}],[\"数据完整的从服务器\",{\"1\":{\"426\":1}}],[\"数据完整性较低\",{\"1\":{\"357\":1}}],[\"数据不一致是难以避免的\",{\"1\":{\"413\":1}}],[\"数据不就不一致了\",{\"1\":{\"360\":1}}],[\"数据可能会丢失\",{\"1\":{\"413\":1}}],[\"数据类型底层数据结构就只由\",{\"1\":{\"404\":1}}],[\"数据结构由键值\",{\"1\":{\"1217\":1}}],[\"数据结构来实现了\",{\"1\":{\"406\":1,\"410\":1}}],[\"数据结构\",{\"0\":{\"1137\":1,\"1139\":1},\"1\":{\"399\":1,\"1131\":1}}],[\"数据结构与对象\",{\"0\":{\"392\":1}}],[\"数据\",{\"1\":{\"383\":2,\"384\":2,\"386\":1,\"1005\":1}}],[\"数据引擎读取是以页为单位进行的\",{\"1\":{\"376\":1}}],[\"数据库表\",{\"1\":{\"1218\":1}}],[\"数据库原理\",{\"1\":{\"670\":1}}],[\"数据库中的16384个槽都已经被指派给了相应的节点\",{\"1\":{\"428\":1}}],[\"数据库中的每个键都数据这些槽中的一个\",{\"1\":{\"428\":1}}],[\"数据库也应该仍然是一致的\",{\"1\":{\"424\":1}}],[\"数据库将事务中的多个操作当作一个整体来执行\",{\"1\":{\"424\":1}}],[\"数据库\",{\"1\":{\"384\":1,\"1218\":1}}],[\"数据库是最新值\",{\"1\":{\"384\":1}}],[\"数据库没有更新成功\",{\"1\":{\"384\":1}}],[\"数据库与reids的数据不一致\",{\"1\":{\"381\":1}}],[\"数据库的数据\",{\"1\":{\"381\":1}}],[\"数据库会自动给主键赋值递增的值\",{\"1\":{\"369\":1}}],[\"数据库允许多个并发事务同时对其数据进行读写和修改的能力\",{\"1\":{\"361\":1}}],[\"数据库在任何时候都保持一致性\",{\"1\":{\"361\":1}}],[\"数据库保持一致性状态\",{\"1\":{\"361\":1}}],[\"数据库这里开发测试时你可以随意使用\",{\"1\":{\"192\":1}}],[\"数据满足完整性约束\",{\"1\":{\"361\":1}}],[\"数据就会发生丢失\",{\"1\":{\"359\":1}}],[\"数据安全性\",{\"1\":{\"357\":1}}],[\"数据也写到磁盘\",{\"1\":{\"357\":1}}],[\"数据页\",{\"1\":{\"357\":1,\"358\":1}}],[\"数据页和\",{\"1\":{\"356\":1}}],[\"数据流中的中位数\",{\"0\":{\"314\":1}}],[\"数据账户\",{\"1\":{\"133\":1}}],[\"数据帐户可以存储所有者程序代码中定义的任何任意数据\",{\"1\":{\"115\":1}}],[\"数据帐户\",{\"0\":{\"115\":1},\"1\":{\"115\":1}}],[\"数据帐户由程序创建\",{\"1\":{\"111\":1}}],[\"数据将传输到程序可执行数据帐户\",{\"1\":{\"114\":1}}],[\"数据管理\",{\"0\":{\"74\":1},\"1\":{\"191\":1}}],[\"数据却不会丢失\",{\"1\":{\"47\":1}}],[\"数据卷所占用的空间\",{\"1\":{\"51\":1}}],[\"数据卷不会消亡\",{\"1\":{\"47\":1}}],[\"数据卷的生存周期独立于容器\",{\"1\":{\"47\":1}}],[\"数据卷\",{\"1\":{\"47\":1,\"74\":16}}],[\"资本主义是如此成功\",{\"1\":{\"648\":1}}],[\"资本家通过掌握资本\",{\"1\":{\"646\":1}}],[\"资本成为了最重要的生产资料\",{\"1\":{\"646\":1}}],[\"资金利用率\",{\"1\":{\"152\":1}}],[\"资产通过可以放贷\",{\"1\":{\"598\":1}}],[\"资产数额不大\",{\"1\":{\"592\":1}}],[\"资产种类划分\",{\"0\":{\"182\":1}}],[\"资产\",{\"1\":{\"169\":1}}],[\"资产权重为\",{\"1\":{\"150\":1}}],[\"资产登记\",{\"1\":{\"95\":1}}],[\"资源和人脉\",{\"1\":{\"584\":1}}],[\"资源和技能等其他因素也很重要\",{\"1\":{\"581\":1}}],[\"资源和配置外\",{\"1\":{\"46\":1}}],[\"资源有一个唯一的\",{\"1\":{\"76\":1}}],[\"资源申请时加入命名空间信息\",{\"1\":{\"76\":1}}],[\"代理模式提供访问原对象的替代者\",{\"1\":{\"940\":1}}],[\"代理模式提供了一个其他对象的替身或占位符来控制对这个对象的访问\",{\"1\":{\"937\":1}}],[\"代理模式一般用于控制访问\",{\"1\":{\"937\":1}}],[\"代理模式\",{\"0\":{\"937\":1}}],[\"代替下线主节点继续处理命令请求\",{\"1\":{\"433\":1}}],[\"代\",{\"1\":{\"426\":1}}],[\"代码就无法通过编译了\",{\"1\":{\"1138\":1}}],[\"代码就像这样\",{\"1\":{\"268\":1}}],[\"代码通过编译是理所应当的\",{\"1\":{\"1138\":1}}],[\"代码中的例子\",{\"1\":{\"1074\":1}}],[\"代码的实现是这样的\",{\"1\":{\"1019\":1}}],[\"代码仓库地址\",{\"1\":{\"1011\":1}}],[\"代码不直接实例化对象\",{\"1\":{\"879\":1}}],[\"代码复用\",{\"1\":{\"860\":1}}],[\"代码编辑器\",{\"1\":{\"731\":1}}],[\"代码必须结构良好\",{\"1\":{\"725\":1}}],[\"代码随想录\",{\"1\":{\"670\":1}}],[\"代码大全\",{\"1\":{\"504\":2}}],[\"代码运行结果\",{\"1\":{\"477\":1,\"480\":1,\"481\":1,\"482\":1}}],[\"代码已经没法再简单了哈哈哈\",{\"1\":{\"276\":1}}],[\"代码\",{\"1\":{\"244\":1,\"252\":1,\"447\":2,\"1026\":3}}],[\"代码如下\",{\"1\":{\"236\":1,\"264\":1,\"1055\":1,\"1056\":1}}],[\"代码初始化如下\",{\"1\":{\"235\":1}}],[\"代码里对应的discard登录的配置一律改为github登录的配置\",{\"1\":{\"192\":1}}],[\"代码可以看到lend\",{\"1\":{\"152\":1}}],[\"代码托管平台\",{\"1\":{\"48\":1}}],[\"代表\",{\"1\":{\"1034\":1}}],[\"代表每秒可以向\",{\"1\":{\"1034\":1}}],[\"代表只在\",{\"1\":{\"436\":1}}],[\"代表是第六版\",{\"1\":{\"418\":1}}],[\"代表整个\",{\"1\":{\"377\":1}}],[\"代表闭区间\",{\"1\":{\"326\":1}}],[\"代表着\",{\"1\":{\"283\":1}}],[\"代表最小值一定在\",{\"1\":{\"283\":2}}],[\"代表不可分割资产\",{\"1\":{\"132\":1}}],[\"代表了分布式计算领域的突破\",{\"1\":{\"95\":1}}],[\"代币帐户\",{\"1\":{\"135\":1}}],[\"代币账户当前持有的代币单位数量\",{\"1\":{\"135\":1}}],[\"代币账户持有的代币类型\",{\"1\":{\"135\":1}}],[\"代币账户\",{\"0\":{\"135\":1},\"1\":{\"134\":1,\"136\":1}}],[\"代币账户跟踪特定地址拥有特定类型代币\",{\"1\":{\"132\":1}}],[\"代币小数精度位数\",{\"1\":{\"134\":1}}],[\"代币精度\",{\"1\":{\"134\":1}}],[\"代币的总供应量\",{\"1\":{\"134\":1}}],[\"代币程序\",{\"0\":{\"133\":1},\"1\":{\"133\":1}}],[\"代币程序包含与网络上的代币\",{\"1\":{\"132\":1}}],[\"代币\",{\"1\":{\"132\":1}}],[\"代币化使产权的数字化成为可能\",{\"1\":{\"132\":1}}],[\"代币是代表不同类别资产所有权的数字资产\",{\"1\":{\"132\":1}}],[\"关注哦\",{\"1\":{\"517\":1}}],[\"关\",{\"1\":{\"494\":1}}],[\"关闭和切换频道的操作\",{\"1\":{\"820\":1}}],[\"关闭原本的redis\",{\"1\":{\"433\":1}}],[\"关闭文件\",{\"1\":{\"411\":1}}],[\"关联函数\",{\"1\":{\"463\":1}}],[\"关联到\",{\"1\":{\"403\":1}}],[\"关联代币账户是一种代币账户\",{\"1\":{\"136\":1}}],[\"关联代币账户\",{\"0\":{\"136\":1}}],[\"关键是容易出错\",{\"1\":{\"1010\":1}}],[\"关键是要自己封装一个优先级队列\",{\"1\":{\"336\":1}}],[\"关键要对于自己提出的解决方案有信心\",{\"1\":{\"674\":1}}],[\"关键在于总有人愿意挑战旧规则\",{\"1\":{\"731\":1}}],[\"关键在于不是让预感和假设操纵我们的思考\",{\"1\":{\"627\":1}}],[\"关键在于至多买卖两次\",{\"1\":{\"254\":1}}],[\"关键问题是\",{\"1\":{\"580\":1}}],[\"关键的区别在于\",{\"1\":{\"575\":1}}],[\"关键字可以向\",{\"1\":{\"1137\":1}}],[\"关键字的缓冲区大小进行检查\",{\"1\":{\"1137\":1}}],[\"关键字\",{\"1\":{\"1135\":1}}],[\"关键字时\",{\"1\":{\"1084\":1}}],[\"关键字修饰\",{\"1\":{\"477\":1,\"481\":1}}],[\"关键字是const\",{\"1\":{\"456\":1}}],[\"关键字提前结束整个函数\",{\"1\":{\"450\":1}}],[\"关键因素之一\",{\"1\":{\"356\":1}}],[\"关键逻辑就是看s\",{\"1\":{\"268\":1}}],[\"关键\",{\"1\":{\"210\":2}}],[\"关键点其实并不在于有没有给你带来新的生产力提高\",{\"1\":{\"731\":1}}],[\"关键点\",{\"1\":{\"111\":1,\"116\":1,\"118\":1,\"126\":1}}],[\"关键性创新是通过pow\",{\"1\":{\"95\":1}}],[\"关于将系统分解为模块时使用的标准\",{\"1\":{\"722\":1}}],[\"关于发泄愤怒的心理学原理经受不住实验的仔细考验\",{\"1\":{\"653\":1}}],[\"关于认知的一切\",{\"0\":{\"652\":1}}],[\"关于资产阶级\",{\"1\":{\"646\":1,\"677\":1}}],[\"关于为什么今天我决定开始长期写作\",{\"1\":{\"605\":1}}],[\"关于你会发生变化\",{\"1\":{\"585\":1}}],[\"关于你真正认为重要的东西\",{\"1\":{\"577\":1}}],[\"关于web3\",{\"1\":{\"534\":1}}],[\"关于未来\",{\"1\":{\"528\":1}}],[\"关于预测未来方面\",{\"1\":{\"528\":2}}],[\"关于剑指offer\",{\"1\":{\"274\":1}}],[\"关于初始化\",{\"1\":{\"235\":1,\"236\":1}}],[\"关于\",{\"0\":{\"3\":1}}],[\"创始人经常拉拢用户并窃取资金\",{\"0\":{\"705\":1}}],[\"创作和交流\",{\"1\":{\"677\":1}}],[\"创作者的个人网站往往是以创造性的方式去表达个性\",{\"1\":{\"532\":1}}],[\"创造有价值的内容以及开发商业化的软件和应用等\",{\"1\":{\"649\":1}}],[\"创造性和批判性\",{\"1\":{\"626\":1}}],[\"创造了完全去中心化的虚拟货币系统\",{\"1\":{\"95\":1}}],[\"创业等\",{\"1\":{\"669\":1}}],[\"创业公司成为独角兽的概率是非常低的\",{\"1\":{\"663\":1}}],[\"创业\",{\"1\":{\"578\":1}}],[\"创新\",{\"1\":{\"532\":1,\"534\":1}}],[\"创\",{\"1\":{\"426\":1}}],[\"创建索引\",{\"0\":{\"1226\":1,\"1227\":1}}],[\"创建索引和维护索引要耗费时间\",{\"1\":{\"350\":1}}],[\"创建和表示时间\",{\"1\":{\"1213\":1}}],[\"创建和发送\",{\"1\":{\"1095\":2}}],[\"创建自己的logger\",{\"0\":{\"1182\":1}}],[\"创建自己的区块\",{\"1\":{\"509\":1}}],[\"创建自定义类型的命令行参数\",{\"1\":{\"1163\":1}}],[\"创建带缓冲的读取器\",{\"1\":{\"1153\":1}}],[\"创建缓冲写入器\",{\"1\":{\"1153\":1}}],[\"创建缓冲读取器\",{\"1\":{\"1153\":1}}],[\"创建管道\",{\"1\":{\"1137\":1}}],[\"创建管理者对象\",{\"1\":{\"838\":1}}],[\"创建xxx分支\",{\"1\":{\"988\":1}}],[\"创建xin代币的银行等等\",{\"1\":{\"152\":1}}],[\"创建访问者对象\",{\"1\":{\"867\":1}}],[\"创建对象结构对象\",{\"1\":{\"867\":1}}],[\"创建上下文对象\",{\"1\":{\"849\":1,\"855\":1}}],[\"创建发起人对象\",{\"1\":{\"838\":1}}],[\"创建具体的建造者\",{\"1\":{\"873\":1}}],[\"创建具体观察者对象\",{\"1\":{\"844\":1}}],[\"创建具体主题对象\",{\"1\":{\"844\":1}}],[\"创建具体中介者对象\",{\"1\":{\"833\":1}}],[\"创建具体同事对象\",{\"1\":{\"833\":1}}],[\"创建两个文件夹\",{\"1\":{\"1067\":1}}],[\"创建两个不同的迭代器对象\",{\"1\":{\"827\":1}}],[\"创建两个指针\",{\"1\":{\"283\":1}}],[\"创建三个命令对象\",{\"1\":{\"820\":1}}],[\"创建你的渴望层次结构\",{\"1\":{\"577\":1}}],[\"创建节点的时间\",{\"1\":{\"427\":1}}],[\"创建连向其他sentinel的命令连接\",{\"1\":{\"426\":1}}],[\"创建连向主服务器的网络连接\",{\"1\":{\"426\":2}}],[\"创建连向主服务器的套接字连接\",{\"1\":{\"425\":1}}],[\"创建银行配置\",{\"1\":{\"152\":1}}],[\"创建银行的可配置项非常多\",{\"1\":{\"152\":1}}],[\"创建通过借出资金赚取利息来覆盖潜在索赔的保险平台\",{\"1\":{\"151\":1}}],[\"创建为去中心化交易所提供即时贷款的流动性池\",{\"1\":{\"151\":1}}],[\"创建特定类型代币的新单位\",{\"1\":{\"133\":1}}],[\"创建一个根上下文\",{\"1\":{\"1156\":1}}],[\"创建一个集合对象\",{\"1\":{\"828\":1}}],[\"创建一个书架对象\",{\"1\":{\"827\":1}}],[\"创建一个\",{\"1\":{\"821\":1}}],[\"创建一个命令调用者\",{\"1\":{\"820\":1}}],[\"创建一个电视机接收者\",{\"1\":{\"820\":1}}],[\"创建一个不带网络连接的伪客户端\",{\"1\":{\"422\":1}}],[\"创建一个slice空间大小是spacecount\",{\"1\":{\"277\":1}}],[\"创建一个平台\",{\"1\":{\"151\":1}}],[\"创建一个代币账户\",{\"1\":{\"135\":1}}],[\"创建一个新的代币账户来持有特定类型代币\",{\"1\":{\"133\":1}}],[\"创建一个新的铸币账户来代表一种新型的代币\",{\"1\":{\"133\":1}}],[\"创建一个数据卷\",{\"1\":{\"74\":1}}],[\"创建程序地址\",{\"1\":{\"121\":1}}],[\"创建新帐户\",{\"1\":{\"112\":1}}],[\"创建\",{\"0\":{\"1135\":1},\"1\":{\"75\":1,\"455\":1,\"1001\":1}}],[\"创建了\",{\"1\":{\"58\":1}}],[\"创建时间\",{\"1\":{\"51\":1}}],[\"共同的知识\",{\"1\":{\"653\":1}}],[\"共同抬高其产品或服务的价格\",{\"1\":{\"8\":1}}],[\"共享实例\",{\"1\":{\"933\":1}}],[\"共享锁\",{\"1\":{\"368\":1,\"370\":1}}],[\"共享表锁\",{\"1\":{\"366\":1}}],[\"共有三个阶段\",{\"1\":{\"349\":1}}],[\"共识协议\",{\"1\":{\"94\":1}}],[\"到自己本地队列中\",{\"1\":{\"1135\":1}}],[\"到自己的本地协程队列中\",{\"1\":{\"1135\":1}}],[\"到本地中\",{\"1\":{\"1135\":1}}],[\"到后面会到group\",{\"1\":{\"1053\":1}}],[\"到那时你的所有努力都会得到应有的回报\",{\"1\":{\"795\":1}}],[\"到了现代社会\",{\"1\":{\"746\":1}}],[\"到了今天web3\",{\"1\":{\"534\":1}}],[\"到时候你的架子就会升级\",{\"1\":{\"577\":1}}],[\"到现在会见证无数事物变化\",{\"1\":{\"571\":1}}],[\"到今天很多人都不以为这是实验了\",{\"1\":{\"534\":1}}],[\"到我们日常工具的使用\",{\"1\":{\"525\":1}}],[\"到然后再去全然巩固一遍javascript的全部概念\",{\"1\":{\"525\":1}}],[\"到此为止我们已经成功声明了一个区块\",{\"1\":{\"514\":1}}],[\"到主服务器\",{\"1\":{\"425\":1}}],[\"到目前为止\",{\"1\":{\"425\":1,\"570\":1,\"751\":1,\"990\":1}}],[\"到期时间\",{\"1\":{\"1047\":1}}],[\"到期时\",{\"1\":{\"414\":1}}],[\"到队列中\",{\"1\":{\"388\":1}}],[\"到底有什么不同点呢\",{\"1\":{\"525\":1}}],[\"到底能不能做到呢\",{\"1\":{\"387\":1}}],[\"到底是个什么东西\",{\"1\":{\"362\":1}}],[\"到这里我大概总结一下\",{\"1\":{\"525\":1}}],[\"到这里我们可以知道\",{\"1\":{\"377\":1}}],[\"到这里\",{\"1\":{\"386\":1}}],[\"到这里你可能会问\",{\"1\":{\"385\":1}}],[\"到文件系统的\",{\"1\":{\"360\":1}}],[\"到最大的\",{\"1\":{\"289\":1}}],[\"到最后普通人依然不会亲身使用defi\",{\"1\":{\"804\":1}}],[\"到最后如果以上逻辑判断没有发生错误\",{\"1\":{\"804\":1}}],[\"到最后可能一两代人就可以经历生产力的跃迁\",{\"1\":{\"646\":1}}],[\"到最后预测市场业务可以发展起来很大程度上是运营发展起来\",{\"1\":{\"169\":1}}],[\"到最后为什么是\",{\"1\":{\"169\":1}}],[\"到\",{\"1\":{\"150\":2,\"426\":2,\"434\":1,\"579\":1,\"751\":1}}],[\"到2140年\",{\"1\":{\"94\":1}}],[\"到容器的\",{\"1\":{\"74\":1}}],[\"平易近人和良好的架构\",{\"1\":{\"721\":1}}],[\"平易近人且黄油般流畅的\",{\"1\":{\"721\":1}}],[\"平衡和健康为代价\",{\"1\":{\"577\":1}}],[\"平衡二叉树\",{\"0\":{\"329\":1}}],[\"平台相关的黑客攻击\",{\"1\":{\"704\":1}}],[\"平台只是提供分发\",{\"1\":{\"533\":1}}],[\"平台利率\",{\"1\":{\"152\":1}}],[\"平台抽取1\",{\"1\":{\"26\":2}}],[\"平分\",{\"1\":{\"150\":1}}],[\"平均为10\",{\"1\":{\"585\":1}}],[\"平均分配\",{\"1\":{\"413\":1}}],[\"平均10分钟都会有一个矿工成功挖到矿\",{\"1\":{\"94\":1}}],[\"平均每隔10分钟\",{\"1\":{\"94\":1}}],[\"矿工在处理比特币交易时通过大量计算竞猜一个数学题的答案\",{\"1\":{\"94\":1}}],[\"已通知用户\",{\"1\":{\"1010\":2}}],[\"已完成\",{\"1\":{\"1009\":1}}],[\"已签收\",{\"1\":{\"1009\":2}}],[\"已发货\",{\"1\":{\"1009\":1}}],[\"已支付\",{\"1\":{\"1009\":2}}],[\"已创建\",{\"1\":{\"1009\":1}}],[\"已选择的文件在发送后不会取消选择\",{\"1\":{\"494\":1}}],[\"已过期的键不会被保存到重写后的\",{\"1\":{\"414\":1}}],[\"已过期\",{\"1\":{\"414\":1}}],[\"已被使用\",{\"1\":{\"377\":1}}],[\"已删除该模块\",{\"1\":{\"349\":1}}],[\"已借出金额\",{\"1\":{\"166\":1}}],[\"已然成为了当今世界上不可忽视的全球自由资本市场的子集\",{\"1\":{\"94\":1}}],[\"已经关闭并且缓冲区没有任何数据\",{\"1\":{\"1137\":1}}],[\"已经准备就绪\",{\"1\":{\"1132\":1}}],[\"已经是假期的第二天\",{\"1\":{\"695\":1}}],[\"已经不能用丑来解释了\",{\"1\":{\"660\":1}}],[\"已经收集了大量数据来支持这一观点\",{\"1\":{\"585\":1}}],[\"已经太久太久了\",{\"1\":{\"569\":1}}],[\"已经没有人怀疑比特币的价值了\",{\"1\":{\"534\":1}}],[\"已经没什么开发了\",{\"1\":{\"148\":1}}],[\"已经见到好几种从\",{\"1\":{\"472\":1}}],[\"已经成功了\",{\"1\":{\"450\":1}}],[\"已经过期\",{\"1\":{\"414\":1}}],[\"已经存在并且是一个字符串\",{\"1\":{\"403\":1}}],[\"已经被修改\",{\"1\":{\"377\":1}}],[\"已经被持久化磁盘了\",{\"1\":{\"360\":1}}],[\"已经对表加了一个范围\",{\"1\":{\"374\":1}}],[\"已经写入了\",{\"1\":{\"360\":1}}],[\"已经写入磁盘\",{\"1\":{\"360\":1}}],[\"已经刷入磁盘的数据都会从\",{\"1\":{\"358\":1}}],[\"已经相同了\",{\"1\":{\"267\":1}}],[\"已经有一个nums\",{\"1\":{\"239\":1}}],[\"已经选择的元素的个数为len\",{\"1\":{\"208\":1}}],[\"已经减脂3公斤\",{\"1\":{\"4\":1}}],[\"已经走路5公里\",{\"1\":{\"4\":1}}],[\"比最小位置还要小\",{\"1\":{\"944\":1}}],[\"比继承更灵活\",{\"1\":{\"922\":1}}],[\"比别人认知高一点并没有什么用\",{\"1\":{\"810\":1}}],[\"比邻居更大的汽车\",{\"1\":{\"648\":1}}],[\"比你从电视上看到的更加文明\",{\"1\":{\"627\":1}}],[\"比一辆以10英里\",{\"1\":{\"582\":1}}],[\"比被不喜欢更令它难以接受的是被忽视\",{\"1\":{\"573\":1}}],[\"比起以往的传统拨号电话有着更低的成本\",{\"1\":{\"528\":1}}],[\"比起http包mux可以使web服务更加简便\",{\"1\":{\"509\":1}}],[\"比起各个厂商\",{\"1\":{\"494\":1}}],[\"比起\",{\"1\":{\"446\":1}}],[\"比起aave的激进50\",{\"1\":{\"150\":1}}],[\"比\",{\"1\":{\"426\":1}}],[\"比5大\",{\"1\":{\"276\":1}}],[\"比较时间的先后顺序\",{\"1\":{\"1213\":1}}],[\"比较简单\",{\"1\":{\"1135\":1}}],[\"比较适合设置为\",{\"1\":{\"991\":1}}],[\"比较是分主观的还是客观的\",{\"1\":{\"683\":1}}],[\"比较勤奋\",{\"1\":{\"653\":1}}],[\"比较常见是\",{\"1\":{\"360\":1}}],[\"比较\",{\"1\":{\"257\":1}}],[\"比较的过程中被初始值覆盖\",{\"1\":{\"244\":1}}],[\"比较各个平台的贷款利率了\",{\"1\":{\"177\":1}}],[\"比特币作为社会性实验一直以反脆弱的形势不断获得大众的认可\",{\"1\":{\"534\":1}}],[\"比特币如何运行\",{\"0\":{\"99\":1}}],[\"比特币协议\",{\"1\":{\"94\":1}}],[\"比特币协议中内置了调用网络中挖矿方法的算法\",{\"1\":{\"94\":1}}],[\"比特币代表了数十年密码学和分布式系统研究的一个高峰\",{\"1\":{\"94\":1}}],[\"比特币货币本身只是这项创新的第一个应用\",{\"1\":{\"94\":1}}],[\"比特币的价格将会在2038年左右到达1\",{\"1\":{\"767\":1}}],[\"比特币的历史\",{\"0\":{\"95\":1}}],[\"比特币的发行速率都会减半\",{\"1\":{\"94\":1}}],[\"比特币的总量为2100个\",{\"1\":{\"94\":1}}],[\"比特币将中央银行的货币发行和清算功能进行了去中心化\",{\"1\":{\"94\":1}}],[\"比特币网络的任何参与者\",{\"1\":{\"94\":1}}],[\"比特币隐含在发起者向接受者的交易中的\",{\"1\":{\"94\":1}}],[\"比特币是协议的名称\",{\"1\":{\"94\":1}}],[\"比特币是货币通缩的\",{\"1\":{\"94\":1}}],[\"比特币是通过一个叫做挖矿\",{\"1\":{\"94\":1}}],[\"比特币是一个点对点的分布式系统\",{\"1\":{\"94\":1}}],[\"比特币是完全虚拟的\",{\"1\":{\"94\":1}}],[\"比特币是区块链技术的第一个应用\",{\"1\":{\"94\":1}}],[\"比如参考了mgo的链式调用\",{\"1\":{\"1220\":1}}],[\"比如处理布尔值\",{\"1\":{\"1198\":1}}],[\"比如mixin的logger就是自己封装一个log\",{\"1\":{\"1181\":1}}],[\"比如musk当时收购twitter\",{\"1\":{\"673\":1}}],[\"比如下面的示例\",{\"1\":{\"1188\":1}}],[\"比如下面这个例子\",{\"1\":{\"1188\":1,\"1192\":1}}],[\"比如下面这样\",{\"1\":{\"1180\":1}}],[\"比如下面定义的\",{\"1\":{\"991\":1}}],[\"比如llongfile可以看到整个文件在系统中的位置\",{\"1\":{\"1179\":1}}],[\"比如linux系统下最长文件名是255字节\",{\"1\":{\"455\":1}}],[\"比如list的底层对象是list或者quicklist\",{\"1\":{\"400\":1}}],[\"比如boolvar\",{\"1\":{\"1162\":1}}],[\"比如自旋锁的实现\",{\"1\":{\"1135\":1}}],[\"比如响应时间数据等\",{\"1\":{\"1096\":1}}],[\"比如身份信息token\",{\"1\":{\"1093\":1}}],[\"比如需要删除某个字段时\",{\"1\":{\"1084\":1}}],[\"比如如果一个项目过大\",{\"1\":{\"1063\":1}}],[\"比如如果我想为mixin生态的代币也建立一个mixin\",{\"1\":{\"152\":1}}],[\"比如eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9是由编码组成\",{\"1\":{\"1047\":1}}],[\"比如订单取消到订单退款的细节\",{\"1\":{\"1009\":1}}],[\"比如红绿灯的例子里\",{\"1\":{\"1009\":1}}],[\"比如红灯状态接受到了2\",{\"1\":{\"1009\":1}}],[\"比如每秒一次\",{\"1\":{\"1001\":1}}],[\"比如定时器执行时的时机\",{\"1\":{\"998\":1}}],[\"比如要让\",{\"1\":{\"991\":1}}],[\"比如要一个echo服务\",{\"1\":{\"989\":1}}],[\"比如控制输出的\",{\"1\":{\"991\":1}}],[\"比如常见的mysql和redis等\",{\"1\":{\"974\":1}}],[\"比如现在的巴以冲突\",{\"1\":{\"795\":1}}],[\"比如俯卧撑\",{\"1\":{\"789\":1}}],[\"比如看着被火炉烫伤过才知道烧着的火炉不能碰等等\",{\"1\":{\"782\":1}}],[\"比如看到一个主播在直播中使用过某样东西\",{\"1\":{\"680\":1}}],[\"比如到二十多岁后期\",{\"1\":{\"771\":1}}],[\"比如价格占50\",{\"1\":{\"683\":1}}],[\"比如品牌\",{\"1\":{\"683\":1}}],[\"比如空气中氧气的是21\",{\"1\":{\"683\":1}}],[\"比如某个明星又出什么事了\",{\"1\":{\"677\":1}}],[\"比如某个频道目前有多少订阅者\",{\"1\":{\"423\":1}}],[\"比如求职\",{\"1\":{\"674\":1}}],[\"比如未来第一个去火星的可能现在正在接受宇航员的训练\",{\"1\":{\"674\":1}}],[\"比如问父母某些事情\",{\"1\":{\"639\":1}}],[\"比如讨厌某个参与者或过于热衷一种观点\",{\"1\":{\"627\":1}}],[\"比如或多或少可能再次发生的大疫情\",{\"1\":{\"610\":1}}],[\"比如遥远的时代\",{\"1\":{\"605\":1}}],[\"比如很多人认为只是钱只是丢了一半\",{\"1\":{\"591\":1}}],[\"比如编码能力\",{\"1\":{\"580\":1}}],[\"比如编译环境\",{\"1\":{\"58\":1}}],[\"比如医学\",{\"1\":{\"578\":1}}],[\"比如财富或个人成就感\",{\"1\":{\"577\":1}}],[\"比如那些道德触角上的渴望\",{\"1\":{\"577\":1}}],[\"比如用轮询或者comet\",{\"1\":{\"1073\":1}}],[\"比如用五个小时重新读了一遍\",{\"1\":{\"552\":1}}],[\"比如用户修改了用户信息\",{\"1\":{\"199\":1}}],[\"比如用户可以放置一些程序到本地目录中\",{\"1\":{\"74\":1}}],[\"比如设计基因\",{\"1\":{\"528\":1}}],[\"比如gomock\",{\"1\":{\"977\":1}}],[\"比如go语言的错误处理一般就是\",{\"1\":{\"446\":1}}],[\"比如git\",{\"1\":{\"525\":1}}],[\"比如你现在看本文的显示器屏幕\",{\"1\":{\"1009\":1}}],[\"比如你需要比较几个选择哪个更好\",{\"1\":{\"683\":1}}],[\"比如你盖一栋房子是需要时间的\",{\"1\":{\"677\":1}}],[\"比如你要盖一栋房子吧\",{\"1\":{\"646\":1,\"677\":1}}],[\"比如你要学javascript\",{\"1\":{\"525\":1}}],[\"比如你让他做一道微积分它很容易就可以做出来\",{\"1\":{\"631\":1}}],[\"比如你用了\",{\"1\":{\"358\":1}}],[\"比如itoa函数的格式是将int格式转换为string格式\",{\"1\":{\"514\":1}}],[\"比如果我们需要创建一个哈希码\",{\"1\":{\"512\":1}}],[\"比如和亲人打电话\",{\"1\":{\"505\":1}}],[\"比如翻译了一本英文书\",{\"1\":{\"500\":1}}],[\"比如生命周期\",{\"1\":{\"467\":1}}],[\"比如上面的例子\",{\"1\":{\"461\":1}}],[\"比如可以选择消费那些能够提升自己技能和知识的信息\",{\"1\":{\"677\":1}}],[\"比如可以拿到自己在知乎上发表过的所有的文章\",{\"1\":{\"533\":1}}],[\"比如可以有一个静态的变量最大值\",{\"1\":{\"454\":1}}],[\"比如可以用\",{\"1\":{\"60\":1}}],[\"比如访问数组索引越界\",{\"1\":{\"447\":1}}],[\"比如项目初始化失败\",{\"1\":{\"446\":1}}],[\"比如socket描述符\",{\"1\":{\"427\":1}}],[\"比如set\",{\"1\":{\"424\":1}}],[\"比如主节点或者从节点\",{\"1\":{\"427\":1}}],[\"比如节点创建的时间\",{\"1\":{\"427\":1}}],[\"比如说可以在执行完毕后加一个do函数去做一些事情\",{\"1\":{\"977\":1}}],[\"比如说叫gomock\",{\"1\":{\"977\":1}}],[\"比如说人人生而平等这个词\",{\"1\":{\"673\":1}}],[\"比如说吸烟\",{\"1\":{\"626\":1}}],[\"比如说金钱是有生命力的观点\",{\"1\":{\"614\":1}}],[\"比如说会继续使用文件事件处理器来处理命令请求和返回命令请求\",{\"1\":{\"427\":1}}],[\"比如说\",{\"1\":{\"425\":1,\"426\":1,\"579\":1,\"1073\":1}}],[\"比如接收rdb文件\",{\"1\":{\"425\":1}}],[\"比如硬盘\",{\"1\":{\"424\":1}}],[\"比如命令不存在\",{\"1\":{\"424\":1}}],[\"比如集群中有\",{\"1\":{\"413\":1}}],[\"比如当我们给风景拍照时\",{\"1\":{\"413\":1}}],[\"比如列表键的底层实现之一就是链表\",{\"1\":{\"394\":1}}],[\"比如一座工厂\",{\"1\":{\"646\":1,\"677\":1}}],[\"比如一个问题\",{\"1\":{\"628\":1}}],[\"比如一个函数可以打开某个文件夹里的文件\",{\"1\":{\"448\":1}}],[\"比如一个指令是发送交易给a\",{\"1\":{\"116\":1}}],[\"比如一主二从的集群\",{\"1\":{\"359\":1}}],[\"比如有很多条语句\",{\"1\":{\"358\":1}}],[\"比如执行批量\",{\"1\":{\"358\":1}}],[\"比如对方法就是foo\",{\"1\":{\"960\":1}}],[\"比如对\",{\"1\":{\"357\":1,\"358\":1}}],[\"比如不要对电商项目的用户余额建立索引\",{\"1\":{\"352\":1}}],[\"比如性别字段\",{\"1\":{\"352\":1}}],[\"比如商品编码\",{\"1\":{\"351\":1}}],[\"比如在小红书学习健康烹饪知识\",{\"1\":{\"739\":1}}],[\"比如在煤炭用完之前找到了石油\",{\"1\":{\"500\":1}}],[\"比如在有些场景中\",{\"1\":{\"436\":1}}],[\"比如在线或者下线\",{\"1\":{\"427\":1}}],[\"比如在表里面有多个索引的时候\",{\"1\":{\"348\":1}}],[\"比如在游戏\",{\"1\":{\"188\":1}}],[\"比如输入\",{\"1\":{\"289\":1}}],[\"比如选择左下角的18为起始位置\",{\"1\":{\"276\":1}}],[\"比如之前使用nextjs的方式是安装了nextjs\",{\"1\":{\"191\":1}}],[\"比如最近paypal推出了自家的稳定币paypal\",{\"1\":{\"188\":1}}],[\"比如目前价值20000美元的eth可以铸造10000美元的稳定币\",{\"1\":{\"185\":1}}],[\"比如直接使用btc\",{\"1\":{\"185\":1}}],[\"比如挂钩美元\",{\"1\":{\"182\":1}}],[\"比如去看看币安\",{\"1\":{\"177\":1}}],[\"比如我有个结构体service\",{\"1\":{\"1193\":1}}],[\"比如我想实现一个每天凌晨\",{\"1\":{\"997\":1}}],[\"比如我今天穿的衣服比你的好看\",{\"1\":{\"683\":1}}],[\"比如我追求成为一名奥运花样滑冰运动员\",{\"1\":{\"584\":1}}],[\"比如我们可以打开一个log\",{\"1\":{\"1181\":1}}],[\"比如我们可以像其传入时区等等\",{\"1\":{\"1001\":1}}],[\"比如我们想让每次传输的字节数不超过3\",{\"1\":{\"1097\":1}}],[\"比如我们有一个person接口下的eat方法\",{\"1\":{\"977\":1}}],[\"比如我们现在可以读到2000年前的古诗\",{\"1\":{\"605\":1}}],[\"比如我们的篮球例子\",{\"1\":{\"580\":1}}],[\"比如我们需要了解下面这个包的内容crypto\",{\"1\":{\"512\":1}}],[\"比如我们常见的菜市场\",{\"1\":{\"8\":1}}],[\"比如我存入了\",{\"1\":{\"150\":1}}],[\"比如通过api调用其他服务获取返回值\",{\"1\":{\"973\":1}}],[\"比如通过\",{\"1\":{\"60\":1}}],[\"比如换行\",{\"1\":{\"58\":1}}],[\"比如这样\",{\"1\":{\"58\":1,\"959\":1,\"968\":1}}],[\"比如这里\",{\"1\":{\"55\":1}}],[\"比如ubuntu18\",{\"1\":{\"51\":1}}],[\"比如\",{\"1\":{\"46\":1,\"48\":2,\"49\":1,\"54\":1,\"55\":1,\"58\":1,\"192\":1,\"218\":1,\"245\":1,\"317\":1,\"335\":1,\"341\":1,\"345\":1,\"350\":1,\"358\":1,\"362\":1,\"364\":2,\"373\":1,\"413\":1,\"418\":1,\"424\":1,\"455\":1,\"504\":1,\"551\":1,\"574\":1,\"575\":1,\"577\":1,\"674\":1,\"677\":1,\"771\":1,\"967\":1,\"977\":1,\"1010\":1,\"1047\":1,\"1080\":1,\"1135\":1,\"1187\":1,\"1242\":1}}],[\"比如官方的ubuntu18\",{\"1\":{\"46\":1}}],[\"比如华为的一系列产品\",{\"1\":{\"9\":1}}],[\"意即\",{\"1\":{\"1217\":1}}],[\"意大利人是11\",{\"1\":{\"620\":1}}],[\"意思是信息的生产成本将大幅度减低\",{\"1\":{\"649\":1}}],[\"意思是\",{\"1\":{\"525\":1}}],[\"意\",{\"1\":{\"431\":1}}],[\"意向独占锁\",{\"1\":{\"368\":2}}],[\"意向共享锁和意向独占锁是表级锁\",{\"1\":{\"368\":1}}],[\"意向共享锁\",{\"1\":{\"368\":1}}],[\"意向锁的目的是为了快速判断表里是否有记录被加锁\",{\"1\":{\"368\":1}}],[\"意向锁\",{\"0\":{\"368\":1},\"1\":{\"365\":1,\"368\":2}}],[\"意图让大家快速理解比特币\",{\"1\":{\"93\":1}}],[\"意味着我们开启在main写入代码中的web服务监听8080端口\",{\"1\":{\"510\":1}}],[\"意味着可以操作共享资源\",{\"1\":{\"436\":1}}],[\"意味着不由\",{\"1\":{\"413\":1}}],[\"意味着写入到了操作系统的文件缓存\",{\"1\":{\"357\":1,\"360\":1}}],[\"意味着你不以任何镜像为基础\",{\"1\":{\"57\":1}}],[\"意味着所有对镜像的操作都是黑箱操作\",{\"1\":{\"55\":1}}],[\"概率可能1\",{\"1\":{\"663\":1}}],[\"概念\",{\"1\":{\"982\":1,\"1218\":2}}],[\"概念上将这种现象叫数据库状态一致\",{\"1\":{\"425\":1}}],[\"概念介绍\",{\"0\":{\"157\":1}}],[\"概括了投资组合的健康状况\",{\"1\":{\"150\":1}}],[\"概述\",{\"0\":{\"93\":1,\"102\":1}}],[\"概览\",{\"0\":{\"20\":1,\"35\":1}}],[\"=gap\",{\"1\":{\"947\":1}}],[\"=nil我们可以通过status\",{\"1\":{\"1074\":1}}],[\"=n\",{\"1\":{\"358\":1}}],[\"=nums\",{\"1\":{\"275\":1,\"293\":1}}],[\"=bottom\",{\"1\":{\"300\":1}}],[\"=top\",{\"1\":{\"300\":1}}],[\"=left\",{\"1\":{\"300\":1}}],[\"=len\",{\"1\":{\"252\":1}}],[\"=right\",{\"1\":{\"300\":1}}],[\"=re\",{\"1\":{\"286\":1}}],[\"=range\",{\"1\":{\"261\":1}}],[\"=3\",{\"1\":{\"277\":1}}],[\"=index\",{\"1\":{\"325\":1}}],[\"=i\",{\"1\":{\"275\":1}}],[\"=dp\",{\"1\":{\"254\":1,\"258\":1,\"261\":1}}],[\"=max\",{\"1\":{\"252\":2,\"254\":4,\"261\":1}}],[\"=make\",{\"1\":{\"252\":2,\"254\":2,\"261\":2}}],[\"=1\",{\"1\":{\"252\":1,\"254\":1,\"315\":1,\"319\":4}}],[\"=0\",{\"1\":{\"252\":2,\"254\":4,\"275\":1,\"293\":3,\"300\":1,\"322\":2,\"324\":1,\"325\":1}}],[\"=>\",{\"1\":{\"194\":1,\"195\":1,\"200\":1,\"448\":8,\"450\":4,\"1138\":2}}],[\"==有时\",{\"1\":{\"706\":1}}],[\"==当您将硬币留在交易所时\",{\"1\":{\"706\":1}}],[\"==那么你可能会回答\",{\"1\":{\"618\":1}}],[\"==你是如何变成现在这个样子\",{\"1\":{\"618\":1}}],[\"==到代码中\",{\"1\":{\"456\":1}}],[\"==1\",{\"1\":{\"322\":2,\"325\":1}}],[\"==0\",{\"1\":{\"300\":1,\"301\":1}}],[\"==nums\",{\"1\":{\"275\":1}}],[\"==text2\",{\"1\":{\"261\":1}}],[\"===\",{\"1\":{\"200\":2,\"959\":1,\"967\":3,\"972\":3,\"973\":1,\"975\":2,\"976\":1,\"978\":2}}],[\"==\",{\"1\":{\"90\":15,\"152\":3,\"208\":2,\"209\":1,\"210\":2,\"211\":1,\"212\":4,\"213\":1,\"214\":3,\"216\":2,\"218\":2,\"219\":4,\"230\":4,\"237\":2,\"239\":2,\"240\":1,\"244\":1,\"245\":1,\"249\":2,\"250\":1,\"255\":2,\"257\":1,\"258\":1,\"259\":3,\"260\":2,\"263\":4,\"264\":1,\"265\":2,\"266\":4,\"267\":2,\"268\":2,\"276\":1,\"277\":1,\"279\":1,\"280\":2,\"282\":2,\"284\":2,\"287\":1,\"288\":2,\"290\":1,\"291\":6,\"295\":2,\"296\":2,\"297\":5,\"298\":2,\"299\":9,\"302\":1,\"305\":1,\"307\":6,\"308\":1,\"311\":1,\"319\":2,\"320\":1,\"321\":3,\"325\":6,\"326\":1,\"327\":2,\"328\":1,\"329\":2,\"330\":1,\"334\":1,\"336\":2,\"395\":1,\"436\":1,\"814\":2,\"844\":1,\"867\":1,\"948\":4,\"958\":1,\"960\":2,\"967\":1,\"975\":1,\"980\":2,\"997\":1,\"1010\":5,\"1011\":4,\"1019\":1,\"1047\":2,\"1053\":3,\"1055\":6,\"1072\":4,\"1074\":1,\"1088\":1,\"1099\":1,\"1122\":1,\"1127\":1,\"1135\":1,\"1138\":2,\"1145\":2,\"1146\":1,\"1153\":1,\"1190\":3}}],[\"=\",{\"1\":{\"90\":23,\"150\":3,\"152\":34,\"164\":1,\"166\":1,\"169\":2,\"194\":6,\"195\":1,\"199\":3,\"200\":1,\"208\":11,\"209\":6,\"210\":9,\"211\":6,\"212\":16,\"213\":5,\"214\":7,\"215\":6,\"216\":15,\"217\":7,\"218\":9,\"219\":9,\"226\":5,\"227\":6,\"228\":8,\"229\":11,\"230\":12,\"231\":7,\"232\":4,\"235\":11,\"236\":7,\"237\":8,\"238\":7,\"239\":9,\"240\":11,\"241\":6,\"242\":7,\"243\":4,\"244\":10,\"245\":7,\"246\":8,\"248\":7,\"249\":6,\"250\":5,\"252\":18,\"253\":21,\"254\":21,\"255\":9,\"257\":13,\"258\":7,\"259\":17,\"260\":14,\"261\":4,\"262\":9,\"263\":13,\"264\":24,\"265\":30,\"266\":33,\"267\":10,\"268\":15,\"275\":4,\"276\":4,\"277\":11,\"278\":12,\"279\":8,\"280\":6,\"281\":6,\"282\":5,\"283\":5,\"284\":12,\"285\":10,\"286\":2,\"287\":1,\"288\":13,\"289\":1,\"290\":10,\"291\":16,\"293\":1,\"294\":13,\"295\":9,\"296\":11,\"297\":6,\"298\":3,\"299\":4,\"300\":3,\"301\":6,\"302\":9,\"303\":12,\"304\":15,\"305\":18,\"307\":15,\"308\":10,\"311\":11,\"312\":3,\"313\":14,\"315\":3,\"316\":2,\"317\":9,\"318\":9,\"319\":1,\"320\":6,\"321\":7,\"322\":2,\"323\":10,\"324\":15,\"325\":13,\"326\":11,\"327\":7,\"328\":2,\"329\":2,\"330\":6,\"331\":7,\"332\":6,\"334\":3,\"335\":6,\"336\":12,\"358\":2,\"360\":2,\"369\":3,\"370\":1,\"371\":1,\"372\":1,\"373\":2,\"374\":1,\"383\":4,\"384\":9,\"386\":10,\"395\":1,\"446\":2,\"447\":1,\"448\":5,\"449\":2,\"450\":3,\"451\":3,\"456\":1,\"457\":1,\"458\":5,\"459\":3,\"460\":4,\"461\":5,\"462\":5,\"463\":5,\"467\":1,\"468\":19,\"469\":2,\"470\":2,\"472\":1,\"473\":6,\"475\":2,\"477\":1,\"478\":1,\"479\":8,\"480\":12,\"481\":13,\"482\":3,\"483\":7,\"513\":1,\"514\":8,\"515\":3,\"516\":14,\"517\":6,\"580\":2,\"814\":7,\"820\":6,\"827\":8,\"833\":8,\"838\":6,\"844\":10,\"849\":2,\"855\":8,\"861\":1,\"867\":7,\"874\":15,\"875\":5,\"883\":2,\"890\":4,\"898\":2,\"899\":1,\"905\":4,\"910\":6,\"915\":7,\"927\":11,\"933\":1,\"944\":10,\"945\":5,\"946\":3,\"947\":13,\"948\":15,\"949\":6,\"950\":9,\"958\":1,\"959\":5,\"960\":2,\"967\":10,\"968\":4,\"970\":1,\"972\":11,\"973\":9,\"975\":23,\"976\":14,\"977\":13,\"978\":8,\"979\":8,\"980\":20,\"981\":2,\"991\":1,\"992\":3,\"993\":1,\"997\":8,\"1001\":3,\"1005\":1,\"1010\":14,\"1011\":12,\"1019\":7,\"1034\":3,\"1037\":1,\"1045\":10,\"1047\":17,\"1050\":1,\"1051\":1,\"1052\":1,\"1053\":16,\"1054\":2,\"1055\":95,\"1063\":13,\"1067\":20,\"1072\":37,\"1073\":9,\"1074\":12,\"1079\":7,\"1080\":10,\"1084\":18,\"1086\":1,\"1087\":2,\"1088\":10,\"1093\":2,\"1094\":4,\"1095\":20,\"1097\":5,\"1099\":18,\"1100\":2,\"1120\":2,\"1122\":2,\"1123\":1,\"1124\":2,\"1125\":1,\"1126\":2,\"1127\":7,\"1137\":1,\"1138\":3,\"1146\":4,\"1149\":1,\"1153\":14,\"1161\":11,\"1163\":5,\"1168\":3,\"1169\":3,\"1172\":7,\"1173\":9,\"1179\":2,\"1181\":3,\"1182\":1,\"1187\":2,\"1188\":8,\"1189\":7,\"1190\":5,\"1191\":2,\"1192\":9,\"1193\":9,\"1198\":12,\"1199\":2,\"1200\":8,\"1206\":2,\"1207\":5,\"1208\":8,\"1209\":1,\"1210\":3,\"1211\":2,\"1212\":14,\"1217\":1,\"1225\":7,\"1226\":1,\"1228\":1,\"1229\":2,\"1230\":1,\"1231\":2,\"1232\":1,\"1233\":1,\"1234\":2,\"1235\":1,\"1236\":3,\"1237\":3,\"1238\":6,\"1239\":3,\"1240\":2,\"1241\":5}}],[\"生效时间\",{\"1\":{\"1047\":1}}],[\"生命是有诞生\",{\"1\":{\"614\":1}}],[\"生命中重要的事情是什么\",{\"1\":{\"570\":1}}],[\"生活中的其他方面也可以进行不公平优势的积累\",{\"1\":{\"674\":1}}],[\"生活中最有趣和令人震惊的矛盾其实是\",{\"1\":{\"626\":1}}],[\"生活方式型创业公司\",{\"1\":{\"674\":1}}],[\"生活方式触租了看起来很高级的公寓\",{\"1\":{\"573\":1}}],[\"生活方式触须主要就是想要周二过得愉快\",{\"1\":{\"573\":1}}],[\"生活标准就提高\",{\"1\":{\"573\":1}}],[\"生活应充满乐趣与丰富体验\",{\"1\":{\"573\":1}}],[\"生活质量\",{\"1\":{\"571\":1}}],[\"生产性知识可以致富\",{\"1\":{\"776\":1}}],[\"生产性知识的作用是以做出可销售产品为主\",{\"1\":{\"776\":1}}],[\"生产性知识是可以致富的\",{\"1\":{\"776\":1}}],[\"生产力低下人们几乎只靠生存环境决定贫富差距\",{\"1\":{\"746\":1}}],[\"生产力工具\",{\"2\":{\"89\":1}}],[\"生产者和销售者\",{\"1\":{\"792\":1}}],[\"生产者心态\",{\"0\":{\"739\":1}}],[\"生产者因此致富\",{\"1\":{\"738\":1}}],[\"生产者把耗时任务丢到任务队列中\",{\"1\":{\"411\":1}}],[\"生产知识可以采用另一种商业模式\",{\"1\":{\"647\":1,\"686\":1}}],[\"生产线等就是生产资料\",{\"1\":{\"677\":1}}],[\"生产线等\",{\"1\":{\"646\":1}}],[\"生产资料是劳动者进行生产所需要的原材料\",{\"1\":{\"646\":1,\"677\":1}}],[\"生成代码\",{\"1\":{\"1086\":1}}],[\"生成\",{\"1\":{\"1067\":2}}],[\"生成二进制文件\",{\"1\":{\"1026\":1}}],[\"生成哈希值和新区块\",{\"0\":{\"514\":1}}],[\"生成rdb文件是用save或bgsave来生成\",{\"1\":{\"416\":1}}],[\"生成一个\",{\"1\":{\"362\":1}}],[\"生成一个随机的密钥\",{\"1\":{\"192\":1}}],[\"生成的镜像也被称为\",{\"1\":{\"55\":1}}],[\"生态的\",{\"1\":{\"148\":1}}],[\"生态系统中\",{\"1\":{\"126\":1}}],[\"编程工作\",{\"1\":{\"505\":1}}],[\"编程工具\",{\"0\":{\"88\":1}}],[\"编程\",{\"1\":{\"500\":1}}],[\"编译\",{\"1\":{\"1026\":1}}],[\"编译器不会无中生有创建一个新的指针\",{\"1\":{\"1138\":1}}],[\"编译器会提醒我们\",{\"1\":{\"1138\":1}}],[\"编译器会通过\",{\"1\":{\"1135\":1}}],[\"编译器会检查您定义的每个字段的编号是否与已保留的字段号冲突\",{\"1\":{\"1084\":1}}],[\"编译器会报错\",{\"1\":{\"467\":1,\"1084\":1}}],[\"编译器等等问题\",{\"1\":{\"525\":1}}],[\"编译器报错如下\",{\"1\":{\"468\":1}}],[\"编译期初始化\",{\"0\":{\"455\":1}}],[\"编译构建\",{\"1\":{\"55\":1}}],[\"编码以形成\",{\"1\":{\"1047\":1}}],[\"编码中仅占用\",{\"1\":{\"473\":1}}],[\"编码字符串\",{\"1\":{\"471\":1}}],[\"编码\",{\"1\":{\"400\":1,\"471\":2,\"475\":1,\"1093\":1,\"1094\":1,\"1095\":1}}],[\"编码方式\",{\"1\":{\"398\":1}}],[\"编码和解码\",{\"1\":{\"193\":1}}],[\"编写代码\",{\"1\":{\"1084\":1}}],[\"编写proto文件\",{\"1\":{\"1084\":1}}],[\"编写业务逻辑\",{\"1\":{\"1067\":1}}],[\"编写\",{\"1\":{\"1067\":1}}],[\"编写可测试的代码比写ut更重要\",{\"1\":{\"979\":1}}],[\"编写可测试的代码\",{\"0\":{\"979\":1}}],[\"编写了一个包含若干redis操作的dosomethingwithredis函数\",{\"1\":{\"976\":1}}],[\"编写测试代码和普通的go代码过程语法是类似的\",{\"1\":{\"966\":1}}],[\"编写的\",{\"1\":{\"724\":1}}],[\"编写一个函数\",{\"1\":{\"287\":1}}],[\"编写solana程序\",{\"1\":{\"126\":1}}],[\"编辑距离\",{\"0\":{\"266\":1}}],[\"快路径\",{\"1\":{\"1135\":1}}],[\"快路径就是获取当前\",{\"1\":{\"1135\":1}}],[\"快进5秒\",{\"1\":{\"976\":1}}],[\"快跑\",{\"1\":{\"703\":1}}],[\"快乐的linux命令行\",{\"1\":{\"504\":1}}],[\"快照就是记录某一个瞬间的内存数据\",{\"1\":{\"413\":1}}],[\"快照是如何实现的呢\",{\"1\":{\"413\":1}}],[\"快照\",{\"1\":{\"413\":2}}],[\"快照读语句\",{\"1\":{\"362\":1}}],[\"快速将计数器归零以唤醒等待的\",{\"1\":{\"1144\":1}}],[\"快速开始\",{\"0\":{\"958\":1}}],[\"快速排序\",{\"0\":{\"949\":1}}],[\"快速的搜索\",{\"1\":{\"731\":1}}],[\"快速变化的科学家\",{\"1\":{\"585\":1}}],[\"快速变化的科学实验室\",{\"1\":{\"585\":1}}],[\"快速保存\",{\"1\":{\"494\":1}}],[\"快速检查所载入的文件是否rdb文件\",{\"1\":{\"418\":1}}],[\"快速搭建t3\",{\"0\":{\"192\":1}}],[\"快速入门你需要了解的一切\",{\"1\":{\"81\":1}}],[\"快捷\",{\"1\":{\"45\":1}}],[\"剑指offer\",{\"0\":{\"274\":1}}],[\"剑指\",{\"0\":{\"81\":1}}],[\"zonebounds\",{\"1\":{\"1212\":1}}],[\"zone\",{\"1\":{\"1179\":3,\"1208\":3,\"1212\":1}}],[\"zap\",{\"1\":{\"1183\":1}}],[\"zaporozhets\",{\"1\":{\"721\":1}}],[\"zaif\",{\"1\":{\"704\":1}}],[\"zadd\",{\"1\":{\"410\":1}}],[\"zunionstore\",{\"1\":{\"410\":1}}],[\"zrevrank\",{\"1\":{\"410\":1}}],[\"zrevrangebyscore\",{\"1\":{\"410\":1}}],[\"zrevrange\",{\"1\":{\"410\":1}}],[\"zremrangebyscore\",{\"1\":{\"410\":1}}],[\"zremrangebyrank\",{\"1\":{\"410\":1}}],[\"zremrangebylex\",{\"1\":{\"410\":1}}],[\"zrem\",{\"1\":{\"410\":1,\"424\":1}}],[\"zrank\",{\"1\":{\"410\":1}}],[\"zrangebyscore\",{\"1\":{\"410\":1}}],[\"zrangebylex\",{\"1\":{\"410\":1}}],[\"zrange\",{\"1\":{\"410\":1}}],[\"zip\",{\"1\":{\"1067\":2}}],[\"ziplist\",{\"1\":{\"404\":2,\"406\":2,\"420\":3}}],[\"zinterstore\",{\"1\":{\"410\":1}}],[\"zincrby\",{\"1\":{\"410\":1}}],[\"zcount\",{\"1\":{\"410\":1}}],[\"zcard\",{\"1\":{\"410\":1}}],[\"zlexcount\",{\"1\":{\"410\":1}}],[\"zlend\",{\"1\":{\"399\":1}}],[\"zllen\",{\"1\":{\"399\":1}}],[\"zltail\",{\"1\":{\"399\":1}}],[\"zlbytes\",{\"1\":{\"399\":1}}],[\"zscan\",{\"1\":{\"410\":1}}],[\"zscore\",{\"1\":{\"410\":1}}],[\"zskiplist\",{\"1\":{\"397\":2}}],[\"zskiplistlevel\",{\"1\":{\"397\":1}}],[\"zskiplistnode\",{\"1\":{\"397\":5}}],[\"zset\",{\"0\":{\"410\":1},\"1\":{\"397\":1,\"410\":3,\"420\":2}}],[\"zzzzz\",{\"1\":{\"1047\":1}}],[\"zzz\",{\"1\":{\"357\":1,\"358\":1}}],[\"z\",{\"1\":{\"318\":1}}],[\"zhuanlan\",{\"1\":{\"569\":1,\"1135\":1}}],[\"zhihu\",{\"1\":{\"563\":1,\"569\":1,\"1135\":1}}],[\"zh\",{\"1\":{\"195\":1,\"523\":1}}],[\"zerolog是一个高性能\",{\"1\":{\"1112\":1}}],[\"zerolog\",{\"0\":{\"1295\":1},\"2\":{\"1062\":1,\"1114\":1}}],[\"zerolog日志库介绍\",{\"1\":{\"1060\":1}}],[\"zeronum++\",{\"1\":{\"240\":1}}],[\"zeronum\",{\"1\":{\"240\":5}}],[\"zero\",{\"1\":{\"152\":6,\"1055\":1,\"1122\":1,\"1127\":1,\"1188\":1}}],[\"zealous\",{\"1\":{\"68\":1}}],[\"zfs\",{\"1\":{\"78\":1}}],[\"里也不会介绍所有的字段\",{\"1\":{\"1132\":1}}],[\"里也有一句话\",{\"1\":{\"534\":1}}],[\"里式替换原则\",{\"1\":{\"982\":1}}],[\"里是需要变量提供地址的\",{\"1\":{\"959\":1}}],[\"里斯曼\",{\"1\":{\"653\":1}}],[\"里执行\",{\"1\":{\"413\":1}}],[\"里有一句话其实全然解释明白了这个问题\",{\"1\":{\"525\":1}}],[\"里有一个类似分层的概念\",{\"1\":{\"78\":1}}],[\"里有三种页和链表来管理数据\",{\"1\":{\"377\":1}}],[\"里面写的很详细\",{\"1\":{\"1174\":1}}],[\"里面就有我们上面提到的handlerfunc\",{\"1\":{\"1053\":1}}],[\"里面孕育着生活的智慧\",{\"1\":{\"669\":1}}],[\"里面说明了当下互联网中\",{\"1\":{\"611\":1}}],[\"里面说了一个词叫气候难民\",{\"1\":{\"609\":1}}],[\"里面的数字看起来很恐怖\",{\"1\":{\"609\":1}}],[\"里面的一句令人惊悚的话\",{\"1\":{\"533\":1}}],[\"里面有\",{\"1\":{\"579\":1}}],[\"里面有许多人生哲理\",{\"1\":{\"534\":1}}],[\"里面了\",{\"1\":{\"424\":1}}],[\"里面\",{\"1\":{\"396\":1}}],[\"里面进行查找\",{\"1\":{\"396\":2}}],[\"里面表级别的锁有这几种\",{\"1\":{\"365\":1}}],[\"里面不放物品i的最大价值\",{\"1\":{\"235\":1}}],[\"里除了普通查询是快照读\",{\"1\":{\"362\":1}}],[\"里除两个数字之外\",{\"1\":{\"330\":1}}],[\"里如何工作的\",{\"1\":{\"362\":2}}],[\"里\",{\"1\":{\"358\":1,\"426\":1}}],[\"里并没有\",{\"1\":{\"358\":1}}],[\"里用不到的字段\",{\"1\":{\"352\":1}}],[\"里查找缓存数据\",{\"1\":{\"343\":1}}],[\"里的小丑也重复过\",{\"1\":{\"534\":1}}],[\"里的所有页都替换出去\",{\"1\":{\"377\":1}}],[\"里的所有数字都在\",{\"1\":{\"275\":1}}],[\"里的时间尽可能长\",{\"1\":{\"377\":1}}],[\"里的时间要尽可能的短\",{\"1\":{\"377\":1}}],[\"里的完整事务写入到\",{\"1\":{\"358\":1}}],[\"里的\",{\"1\":{\"357\":4,\"360\":3}}],[\"里的信息\",{\"1\":{\"356\":1}}],[\"里的i和j表达的是什么了\",{\"1\":{\"236\":1}}],[\"里还有个卖肾买iphone6的角色\",{\"1\":{\"9\":1}}],[\"设想一下\",{\"1\":{\"1010\":1}}],[\"设定扼杀了我们的好奇心\",{\"1\":{\"657\":1}}],[\"设定和猜想\",{\"1\":{\"657\":1}}],[\"设定合理预期\",{\"1\":{\"627\":1}}],[\"设定只读\",{\"1\":{\"78\":1}}],[\"设置成\",{\"1\":{\"1134\":1}}],[\"设置header和trailer\",{\"0\":{\"1095\":1}}],[\"设置监听\",{\"1\":{\"1055\":1}}],[\"设置\",{\"1\":{\"976\":1}}],[\"设置新策略\",{\"1\":{\"855\":1}}],[\"设置新状态\",{\"1\":{\"844\":1,\"849\":1}}],[\"设置同事的中介者为自己\",{\"1\":{\"833\":1}}],[\"设置中介者\",{\"1\":{\"833\":1}}],[\"设置超时时间\",{\"1\":{\"437\":2}}],[\"设置一个超时时间\",{\"1\":{\"437\":1}}],[\"设置从节点\",{\"1\":{\"433\":1}}],[\"设置主服务器的地址和端口\",{\"1\":{\"425\":1}}],[\"设置服务器状态redisserver结构的saveparams属性\",{\"1\":{\"417\":1}}],[\"设置了过期时间时\",{\"1\":{\"414\":1}}],[\"设置过期时间的\",{\"1\":{\"414\":1}}],[\"设置哈希表字段的值\",{\"1\":{\"407\":1}}],[\"设置或清除指定偏移量上的位\",{\"1\":{\"403\":1}}],[\"设置指定\",{\"1\":{\"403\":1}}],[\"设置多少才合理\",{\"1\":{\"385\":1}}],[\"设置组提交的两个参数\",{\"1\":{\"360\":1}}],[\"设置为9\",{\"1\":{\"1002\":1}}],[\"设置为mon\",{\"1\":{\"1002\":1}}],[\"设置为3\",{\"1\":{\"1002\":1}}],[\"设置为大于\",{\"1\":{\"360\":1}}],[\"设置为\",{\"1\":{\"358\":1,\"360\":1,\"1002\":1}}],[\"设置的上限是\",{\"1\":{\"357\":1}}],[\"设置每个账户的数据字段的字节容量\",{\"1\":{\"112\":1}}],[\"设二进制数字\",{\"1\":{\"287\":1}}],[\"设计原理\",{\"1\":{\"1136\":1}}],[\"设计思想\",{\"1\":{\"948\":1}}],[\"设计师从可以说是现存最大的软件系统中汲取灵感是可以理解的\",{\"1\":{\"723\":1}}],[\"设计了一个框架来描述主厨如何作出重大职业决定\",{\"1\":{\"572\":1}}],[\"设计buffer\",{\"1\":{\"377\":1}}],[\"设计一个算法计算出最大利润\",{\"1\":{\"256\":1}}],[\"设计一个算法来计算你所能获取的最大利润\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1}}],[\"设计一个人工智能驱动的投资顾问\",{\"1\":{\"151\":1}}],[\"设计模式\",{\"0\":{\"203\":1}}],[\"设计\",{\"1\":{\"60\":1}}],[\"设计时\",{\"1\":{\"46\":1}}],[\"大对象直接通过mheap直接分配内存\",{\"1\":{\"1150\":1}}],[\"大于32kb内存分配\",{\"1\":{\"1149\":1}}],[\"大于等于\",{\"1\":{\"437\":1}}],[\"大锁\",{\"1\":{\"1147\":1}}],[\"大内存分配和\",{\"1\":{\"1133\":1}}],[\"大顶堆就是父节点比两个子孩子都大\",{\"1\":{\"950\":1}}],[\"大到决定命运的抉择\",{\"1\":{\"710\":1}}],[\"大脑随意思考可以让两个毫无关系的神经元之间有可能自然交流\",{\"1\":{\"698\":1}}],[\"大佬的自我修养\",{\"1\":{\"669\":1}}],[\"大胆的陈述\",{\"1\":{\"657\":1}}],[\"大意是生产力水平巨大提高的巨变\",{\"1\":{\"646\":1}}],[\"大意是我们失去了本应关心的东西\",{\"1\":{\"610\":1}}],[\"大语言模型会给你答案\",{\"1\":{\"605\":1}}],[\"大众的选择大多数都是错误的\",{\"1\":{\"717\":1}}],[\"大众的看法不会是正确的\",{\"1\":{\"528\":1}}],[\"大众文化让许多人无法形成成熟的注意力持续时间\",{\"1\":{\"621\":1}}],[\"大众文化对我们有什么影响呢\",{\"1\":{\"621\":1}}],[\"大众文化的影响\",{\"0\":{\"621\":1},\"1\":{\"618\":1}}],[\"大众都懒得讨论了\",{\"1\":{\"595\":1}}],[\"大厨的典型品质\",{\"1\":{\"583\":1}}],[\"大厨的策略可以实时演进并跟得上变化\",{\"1\":{\"581\":1}}],[\"大厨以全新的眼光看待世界\",{\"1\":{\"581\":1}}],[\"大厨水平\",{\"1\":{\"581\":1}}],[\"大约是25万小时\",{\"1\":{\"571\":1}}],[\"大二学生\",{\"1\":{\"551\":1}}],[\"大师就是大师\",{\"1\":{\"528\":1}}],[\"大部分都来揭示思考的错误\",{\"1\":{\"626\":1}}],[\"大部分人其实是属于高不上低不就的\",{\"1\":{\"611\":1}}],[\"大部分人做事时只想看方不方便\",{\"1\":{\"551\":1}}],[\"大部分网站的加载速度也不理想\",{\"1\":{\"533\":1}}],[\"大部分错误其实没有严重到需要程序立即退出\",{\"1\":{\"448\":1}}],[\"大部分情况下\",{\"1\":{\"377\":1}}],[\"大多数老年人把必应作为他们的搜索引擎\",{\"1\":{\"771\":1}}],[\"大多数不能\",{\"1\":{\"771\":1}}],[\"大多数代码库中只有一小部分实际上对性能至关重要\",{\"1\":{\"724\":1}}],[\"大多数系统的默认架构是\",{\"1\":{\"723\":1}}],[\"大多数人只给自己5\",{\"1\":{\"789\":1}}],[\"大多数人没有做好它\",{\"1\":{\"788\":1}}],[\"大多数人并不去思考真正重要的事情\",{\"1\":{\"754\":1}}],[\"大多数人的休息方式如下\",{\"1\":{\"788\":1}}],[\"大多数人的生活都已经完全处于数字空间了\",{\"1\":{\"764\":1}}],[\"大多数人的注意力也会被各种各样的热点所占据\",{\"1\":{\"734\":1}}],[\"大多数人的经历类似\",{\"1\":{\"626\":1}}],[\"大多数人连一个月\",{\"1\":{\"734\":1}}],[\"大多数人员早就应该被机器人取代了\",{\"1\":{\"717\":1}}],[\"大多数人仍然处于工作循环中\",{\"1\":{\"649\":1}}],[\"大多数人出卖劳动力来获取工资获得回报\",{\"1\":{\"648\":1}}],[\"大多数人都没有考虑到时间这个因素\",{\"1\":{\"646\":1,\"677\":1}}],[\"大多数人已经不具备选择判断能力了\",{\"1\":{\"631\":1}}],[\"大多数人甚至不相信自己应该在虚拟世界里建立自己的平台\",{\"1\":{\"532\":1}}],[\"大多数一般的速度和坚持品质也可以通过努力和改进来提高\",{\"1\":{\"583\":1}}],[\"大多数情况下你应该保持沉默\",{\"1\":{\"734\":1}}],[\"大多数情况下\",{\"1\":{\"571\":1}}],[\"大多数语言对于这两者的处理是很模糊的\",{\"1\":{\"446\":1}}],[\"大多数借贷协议使用\",{\"1\":{\"165\":1}}],[\"大\",{\"1\":{\"426\":1}}],[\"大事务\",{\"1\":{\"357\":1}}],[\"大的节点的值\",{\"1\":{\"327\":1}}],[\"大家都能够自己动手试一试\",{\"1\":{\"1089\":1}}],[\"大家的生活发生了翻天覆地的变化\",{\"1\":{\"764\":1}}],[\"大家谈论最多的不公平优势就是金钱\",{\"1\":{\"673\":1}}],[\"大家聊天不受影响\",{\"1\":{\"592\":1}}],[\"大家可以通过查看文档了解更多用法\",{\"1\":{\"976\":1}}],[\"大家可以根据之前我带大家去了解新包的方式去了解os包的内容\",{\"1\":{\"516\":1}}],[\"大家可以把\",{\"1\":{\"362\":1}}],[\"大家也可以去试一试\",{\"1\":{\"509\":1}}],[\"大家要撸清思路\",{\"1\":{\"265\":1}}],[\"大家看到\",{\"1\":{\"239\":1}}],[\"大家虽然都共用一个内核和某些运行时环境\",{\"1\":{\"75\":1}}],[\"大概率会获取不到锁\",{\"1\":{\"1142\":1}}],[\"大概率是你的配置不对或者哪个地方代码没有改\",{\"1\":{\"192\":1}}],[\"大概是这样\",{\"1\":{\"806\":1}}],[\"大概2022年前后\",{\"1\":{\"609\":1}}],[\"大概有几个部分我们需要仔细阅读一下\",{\"1\":{\"193\":1}}],[\"大小\",{\"1\":{\"116\":1}}],[\"大大提高了存储的效率\",{\"1\":{\"78\":1}}],[\"基准测试不会默认执行\",{\"1\":{\"970\":1}}],[\"基准测试必须要执行b\",{\"1\":{\"970\":1}}],[\"基准测试以benchmark为前缀\",{\"1\":{\"970\":1}}],[\"基准测试俗称压测\",{\"1\":{\"970\":1}}],[\"基准测试\",{\"0\":{\"970\":1}}],[\"基准测试函数和示例函数\",{\"1\":{\"966\":1}}],[\"基准函数\",{\"1\":{\"966\":1}}],[\"基本示例\",{\"0\":{\"1079\":1}}],[\"基本不用\",{\"1\":{\"946\":2}}],[\"基本上\",{\"1\":{\"771\":1}}],[\"基本上意味着如果你不把你的硬币放在你自己的钱包里\",{\"1\":{\"701\":1}}],[\"基本上无法预测点如何连接\",{\"1\":{\"585\":1}}],[\"基本上没法用\",{\"1\":{\"359\":1}}],[\"基本工作\",{\"0\":{\"505\":1}}],[\"基本是要分析两种情况\",{\"1\":{\"264\":1}}],[\"基本单位\",{\"1\":{\"169\":1}}],[\"基于tag的字段验证\",{\"0\":{\"1242\":1},\"1\":{\"1222\":1}}],[\"基于jwt实现认证的实践\",{\"1\":{\"1047\":1}}],[\"基于session的会话管理模式有很多缺点\",{\"1\":{\"1046\":1}}],[\"基于子命令的简单\",{\"1\":{\"988\":1}}],[\"基于内存的redis替代品\",{\"1\":{\"976\":1}}],[\"基于事实的比较可以让我们分析出更多的信息\",{\"1\":{\"683\":1}}],[\"基于\",{\"1\":{\"436\":3}}],[\"基于查询成本的考虑\",{\"1\":{\"349\":1}}],[\"基于角色的认证\",{\"0\":{\"200\":1}}],[\"基于角色的管理也比较重要\",{\"1\":{\"195\":1}}],[\"基于基础镜像\",{\"1\":{\"78\":1}}],[\"基础功能\",{\"1\":{\"956\":1}}],[\"基础之上放置了一个美丽\",{\"1\":{\"721\":1}}],[\"基础题目\",{\"0\":{\"225\":1},\"1\":{\"223\":1}}],[\"基础经济模型设计\",{\"1\":{\"118\":1}}],[\"基础solana交易费设定为每个签名5k\",{\"1\":{\"118\":1}}],[\"基础函数\",{\"1\":{\"105\":1}}],[\"基础镜像\",{\"1\":{\"57\":1}}],[\"基础镜像是必须指定的\",{\"1\":{\"57\":1}}],[\"联合创始人\",{\"1\":{\"721\":1}}],[\"联合索引要能正确使用需要遵循最左匹配原则\",{\"1\":{\"353\":1}}],[\"联合文件系统是\",{\"1\":{\"78\":1}}],[\"联合文件系统\",{\"0\":{\"78\":1}}],[\"联系我\",{\"1\":{\"3\":1}}],[\"磁盘\",{\"1\":{\"77\":1,\"360\":3}}],[\"主键\",{\"1\":{\"1218\":1}}],[\"主键索引最好是自增的\",{\"1\":{\"353\":2}}],[\"主键索引查询\",{\"1\":{\"349\":1}}],[\"主题\",{\"1\":{\"1047\":1}}],[\"主观上我的更好\",{\"1\":{\"683\":1}}],[\"主观下线时长选项的作用范围\",{\"1\":{\"426\":1}}],[\"主厨思考模式是极其浪费时间的\",{\"1\":{\"571\":1}}],[\"主厨需要投入巨量时间和精力\",{\"1\":{\"571\":1}}],[\"主厨最终能创造出新的食谱\",{\"1\":{\"571\":1}}],[\"主厨的推理方式类似于科学家\",{\"1\":{\"571\":1}}],[\"主厨\",{\"1\":{\"571\":1}}],[\"主动让出\",{\"1\":{\"1135\":3}}],[\"主动将一个变量从内存中泄漏到堆上\",{\"1\":{\"461\":1}}],[\"主动请求主服务器进行完整重同步\",{\"1\":{\"425\":1}}],[\"主节点依然可以获取锁\",{\"1\":{\"436\":1}}],[\"主节点宕机了\",{\"1\":{\"436\":1}}],[\"主节点获取到锁后\",{\"1\":{\"436\":1}}],[\"主节点a将向集群广播一条关于主节点b的fail消息\",{\"1\":{\"435\":1}}],[\"主节点a会在自己的clusterstate\",{\"1\":{\"433\":1}}],[\"主\",{\"1\":{\"426\":4}}],[\"主服务器的名字由用户在配置文件中设置\",{\"1\":{\"426\":1}}],[\"主服务器的复制积压缓冲区里面会保存着一部分最近传播的写命令\",{\"1\":{\"425\":1}}],[\"主服务器的复制积压缓冲区\",{\"1\":{\"425\":1}}],[\"主服务器的复制偏移量\",{\"1\":{\"425\":1}}],[\"主服务器传播给从服务器的写命令在半路丢失\",{\"1\":{\"425\":1}}],[\"主服务器会将自己的运行id传送给从服务器\",{\"1\":{\"425\":1}}],[\"主服务器会将自己执行的写命令\",{\"1\":{\"425\":1}}],[\"主服务器会根据这个复制偏移量来决定对从服务器执行何种同步操作\",{\"1\":{\"425\":1}}],[\"主服务器每次向从服务器传播n个字节的数据时\",{\"1\":{\"425\":1}}],[\"主服务器和从服务器会分别维护一个复制偏移量\",{\"1\":{\"425\":1}}],[\"主服务器可以继续尝试执行部分重同步操作\",{\"1\":{\"425\":1}}],[\"主服务器可以将主从服务器连接断开期间执行的写命令发送给从服务器\",{\"1\":{\"425\":1}}],[\"主服务器可以进行读写操作\",{\"1\":{\"413\":1}}],[\"主服务器需要对从服务器执行命令传播操作\",{\"1\":{\"425\":1}}],[\"主服务器将发觉从服务器当前的复制偏移量少于自己的复制偏移量\",{\"1\":{\"425\":1}}],[\"主服务器将拒绝执行写命令\",{\"1\":{\"425\":1}}],[\"主服务器将对从服务器执行完整重同步操作\",{\"1\":{\"425\":1}}],[\"主服务器将记录在缓冲区里的所有写命令发送给从服务器\",{\"1\":{\"425\":1}}],[\"主服务器将bgsave生成的rdb文件发送给从服务器\",{\"1\":{\"425\":1}}],[\"主服务器\",{\"1\":{\"414\":1}}],[\"主服务器并不会等到从服务器实际执行完命令后\",{\"1\":{\"413\":1}}],[\"主服务器收到新的写命令后\",{\"1\":{\"413\":1}}],[\"主线程调用\",{\"1\":{\"463\":1}}],[\"主线程\",{\"1\":{\"413\":1}}],[\"主线程就很容易发生阻塞\",{\"1\":{\"411\":1}}],[\"主线程卡顿\",{\"1\":{\"411\":2}}],[\"主从模式中\",{\"1\":{\"414\":1}}],[\"主从数据不同步\",{\"1\":{\"413\":1}}],[\"主从数据时时刻刻保持一致\",{\"1\":{\"413\":1}}],[\"主从服务的时候\",{\"1\":{\"413\":1}}],[\"主从服务器的连接状态master\",{\"1\":{\"426\":1}}],[\"主从服务器的数据库状态可能被修改\",{\"1\":{\"425\":1}}],[\"主从服务器可以通过发送和接收replconf\",{\"1\":{\"425\":1}}],[\"主从服务器就会进入命令传播阶段\",{\"1\":{\"425\":1}}],[\"主从服务器将再次回到一致状态\",{\"1\":{\"425\":1}}],[\"主从服务器状态将达成一致\",{\"1\":{\"425\":1}}],[\"主从服务器间的数据就不一致了\",{\"1\":{\"413\":1}}],[\"主从服务器之间的命令复制是异步进行的\",{\"1\":{\"413\":1}}],[\"主从库延迟\",{\"1\":{\"388\":1}}],[\"主从库延迟和延迟双删问题\",{\"0\":{\"386\":1},\"1\":{\"380\":1}}],[\"主从库\",{\"1\":{\"386\":1}}],[\"主从复制模式中的数据是异步复制的\",{\"1\":{\"436\":1}}],[\"主从复制是\",{\"1\":{\"413\":1}}],[\"主从复制是怎么实现\",{\"0\":{\"359\":1}}],[\"主从复制延迟\",{\"1\":{\"386\":1}}],[\"主从复制还有哪些模型\",{\"1\":{\"359\":1}}],[\"主从复制\",{\"1\":{\"358\":1,\"386\":2,\"413\":1}}],[\"主从复制中\",{\"1\":{\"358\":1}}],[\"主机掉电的时候会丢数据\",{\"1\":{\"360\":1}}],[\"主机掉电时会丢\",{\"1\":{\"360\":1}}],[\"主机上的一个进程\",{\"1\":{\"76\":1}}],[\"主库在\",{\"1\":{\"414\":1}}],[\"主库和备库的数据就保证了一致性\",{\"1\":{\"360\":1}}],[\"主库和所有从库任何一个数据库出问题\",{\"1\":{\"359\":1}}],[\"主库的事务线程就可以返回给客户端\",{\"1\":{\"359\":1}}],[\"主库提交事务的线程并不会等待\",{\"1\":{\"359\":1}}],[\"主库提交事务的线程要等待所有从库的复制成功响应\",{\"1\":{\"359\":1}}],[\"主库写\",{\"1\":{\"359\":1}}],[\"主要的调度逻辑就是这三段\",{\"1\":{\"1135\":1}}],[\"主要支持\",{\"1\":{\"1073\":1}}],[\"主要为\",{\"1\":{\"1055\":1}}],[\"主要步骤是\",{\"1\":{\"1055\":1}}],[\"主要流程为\",{\"1\":{\"1055\":1}}],[\"主要作用是对前面的部分进行加密防止数据篡改\",{\"1\":{\"1047\":1}}],[\"主要有两个方面的影响\",{\"1\":{\"360\":1}}],[\"主要有三种\",{\"1\":{\"359\":1}}],[\"主要就是两大情况\",{\"1\":{\"260\":1}}],[\"主要是出现下面两种情况会发生抢占\",{\"1\":{\"1135\":1}}],[\"主要是初始化\",{\"1\":{\"1135\":1}}],[\"主要是介绍了grpc\",{\"1\":{\"1080\":1}}],[\"主要是btc\",{\"1\":{\"591\":1}}],[\"主要是我不知道\",{\"1\":{\"579\":1}}],[\"主要是因为a和a\",{\"1\":{\"169\":1}}],[\"主要是杠杆交易\",{\"1\":{\"151\":1}}],[\"主要用于减少创建对象的数量\",{\"1\":{\"931\":1}}],[\"主要用于数据恢复和主从复制\",{\"1\":{\"355\":1}}],[\"主要用于数据备份和主从复制\",{\"1\":{\"355\":1}}],[\"主要用于事务的回滚\",{\"1\":{\"355\":1}}],[\"主要用于事务回滚和\",{\"1\":{\"355\":1}}],[\"主要用于掉电等故障恢复\",{\"1\":{\"355\":2}}],[\"主要用于套利\",{\"1\":{\"163\":1}}],[\"主要用来对共享资源进行隔离\",{\"1\":{\"77\":1}}],[\"同事对象通过中介者进行通信\",{\"1\":{\"833\":1}}],[\"同事相信凡事皆有可能\",{\"1\":{\"674\":1}}],[\"同心爱的人在一起\",{\"1\":{\"573\":1}}],[\"同步调用\",{\"1\":{\"1063\":1}}],[\"同步状态用作将从服务器的数据库状态更新至与主服务器当前所处的数据库状态\",{\"1\":{\"425\":1}}],[\"同步到所有的从库\",{\"1\":{\"414\":1}}],[\"同步到各从库\",{\"1\":{\"359\":1}}],[\"同步数据到多台从\",{\"1\":{\"413\":1}}],[\"同步将\",{\"1\":{\"413\":1}}],[\"同步复制\",{\"1\":{\"359\":1}}],[\"同步\",{\"1\":{\"359\":1,\"385\":1,\"386\":1,\"425\":2}}],[\"同一进程的线程共享内存\",{\"1\":{\"1147\":1}}],[\"同一目录\",{\"1\":{\"1079\":1}}],[\"同一代人\",{\"1\":{\"575\":1}}],[\"同一条\",{\"1\":{\"383\":2}}],[\"同一层的节点按照从左到右的顺序打印\",{\"1\":{\"303\":1}}],[\"同一个触内各需求也互相冲突\",{\"1\":{\"573\":1}}],[\"同一个单元格内的字母不允许被重复使用\",{\"1\":{\"284\":1}}],[\"同一个字符例如a\",{\"1\":{\"267\":1}}],[\"同理可推出剩下状态部分\",{\"1\":{\"254\":1}}],[\"同理dp\",{\"1\":{\"254\":1,\"260\":1,\"266\":1}}],[\"同样因为该函数无法识别空格\",{\"1\":{\"1172\":1}}],[\"同样实现虽然两种类型不同\",{\"1\":{\"1138\":1}}],[\"同样也可以放松大脑\",{\"1\":{\"789\":1}}],[\"同样适用于蜡烛\",{\"1\":{\"773\":1}}],[\"同样是函数中隐式依赖的问题\",{\"1\":{\"980\":1}}],[\"同样是方便我的自学\",{\"1\":{\"759\":1}}],[\"同样是做销售\",{\"1\":{\"689\":1}}],[\"同样\",{\"1\":{\"573\":1,\"577\":1,\"653\":1}}],[\"同样的做法我不仅仅做了一次\",{\"1\":{\"743\":1}}],[\"同样的实验表明\",{\"1\":{\"622\":1}}],[\"同样的\",{\"1\":{\"468\":1}}],[\"同样以多的为主\",{\"1\":{\"426\":1}}],[\"同样地\",{\"1\":{\"383\":1,\"384\":1,\"585\":1}}],[\"同样dp\",{\"1\":{\"252\":1}}],[\"同样leetcode上没有纯完全背包问题\",{\"1\":{\"241\":1}}],[\"同质化和非同质化\",{\"1\":{\"132\":1,\"133\":1}}],[\"同质化代币代表相同类型和价值的可互换和可分割资产\",{\"1\":{\"132\":1}}],[\"同\",{\"1\":{\"76\":1,\"426\":1}}],[\"同时使用了更简便易懂的接口设计\",{\"1\":{\"1220\":1}}],[\"同时使用响应记录器来记录server端返回的响应内容\",{\"1\":{\"972\":1}}],[\"同时从桶中消费\",{\"1\":{\"1036\":1}}],[\"同时还要递归交换的子节点\",{\"1\":{\"950\":1}}],[\"同时还获悉他在法学院读书时\",{\"1\":{\"628\":1}}],[\"同时又不改变其结构\",{\"1\":{\"919\":1}}],[\"同时又可以保证一致性呢\",{\"1\":{\"385\":1}}],[\"同时代码更简洁\",{\"1\":{\"873\":1}}],[\"同时有大多数消费者的注意力被掌握生产知识并会变现的人吸引\",{\"1\":{\"747\":1}}],[\"同时你也意识到了冯博士上的才是北大\",{\"1\":{\"669\":1}}],[\"同时通过教授知识的过程也可以进一步学习和创造更多的知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"同时考虑到渴望和恐惧\",{\"1\":{\"577\":1}}],[\"同时也方便我们编写\",{\"1\":{\"981\":1}}],[\"同时也不稳定\",{\"1\":{\"944\":1}}],[\"同时也惧怕尴尬\",{\"1\":{\"573\":1}}],[\"同时也要控制主从库延迟\",{\"1\":{\"388\":1}}],[\"同时我们用并行方式运行匿名函数\",{\"1\":{\"517\":1}}],[\"同时结合\",{\"1\":{\"413\":1}}],[\"同时可能存在线程切换\",{\"1\":{\"412\":1}}],[\"同时可以选择从下标为1或0的台阶开始爬\",{\"1\":{\"228\":1}}],[\"同时存在多个监听\",{\"1\":{\"412\":1}}],[\"同时设置一个或多个\",{\"1\":{\"403\":2}}],[\"同时失败\",{\"1\":{\"385\":1}}],[\"同时写入缓存的数据都要设置失效的时间\",{\"1\":{\"382\":1}}],[\"同时将多个\",{\"1\":{\"407\":1}}],[\"同时将\",{\"1\":{\"360\":1}}],[\"同时标记为脏页\",{\"1\":{\"357\":1}}],[\"同时当nums\",{\"1\":{\"293\":1}}],[\"同时不需要考虑大数问题\",{\"1\":{\"288\":1}}],[\"同时删word1\",{\"1\":{\"265\":1}}],[\"同时题目要求长度最长的子数组的长度\",{\"1\":{\"259\":1}}],[\"同时如果\",{\"1\":{\"239\":1}}],[\"同时保持他们的加密投资不变\",{\"1\":{\"151\":1}}],[\"同时其团队重心已经在sui生态倾斜\",{\"1\":{\"148\":1}}],[\"同时提供一些推荐的最佳实践\",{\"1\":{\"140\":1}}],[\"同时\",{\"1\":{\"78\":1,\"249\":1,\"252\":1,\"386\":1,\"646\":1}}],[\"同时再加上自己独有的改动层\",{\"1\":{\"78\":1}}],[\"同时由于允许嵌套\",{\"1\":{\"76\":1}}],[\"同时您也可以看到主页面有反馈和个人信息页面\",{\"1\":{\"39\":1}}],[\"然而这与\",{\"1\":{\"1136\":1}}],[\"然而当他们回到屋内\",{\"1\":{\"788\":1}}],[\"然而今天却是大众文化的影响更大\",{\"1\":{\"621\":1}}],[\"然而\",{\"1\":{\"531\":1,\"583\":1,\"647\":3,\"648\":1,\"649\":1,\"686\":3,\"899\":1,\"1183\":1,\"1188\":1}}],[\"然而对于\",{\"1\":{\"474\":1}}],[\"然而同\",{\"1\":{\"76\":1}}],[\"然后介绍了如何使用反射来更改变量的底层值\",{\"1\":{\"1194\":1}}],[\"然后这个程序就注册了get\",{\"1\":{\"1193\":1}}],[\"然后这个隐藏列是个指针\",{\"1\":{\"362\":1}}],[\"然后尽快适应它\",{\"1\":{\"1186\":1}}],[\"然后尽快适应\",{\"1\":{\"1186\":1}}],[\"然后让我们自己new出来的实例去打印日志\",{\"1\":{\"1181\":1}}],[\"然后放入当前\",{\"1\":{\"1135\":2}}],[\"然后与\",{\"1\":{\"1135\":1}}],[\"然后与当前系统时间进行比对\",{\"1\":{\"414\":1}}],[\"然后拿一部分协程\",{\"1\":{\"1135\":1}}],[\"然后通过\",{\"1\":{\"1135\":1,\"1137\":1}}],[\"然后通过metadata\",{\"1\":{\"1093\":1}}],[\"然后就是调度时机\",{\"1\":{\"1135\":1}}],[\"然后就是重点\",{\"1\":{\"1135\":1}}],[\"然后就是进入系统调用\",{\"1\":{\"1135\":1}}],[\"然后就是\",{\"1\":{\"1135\":2}}],[\"然后就绝望了\",{\"1\":{\"578\":1}}],[\"然后调用\",{\"1\":{\"1135\":1}}],[\"然后调用grpc的一方若err\",{\"1\":{\"1074\":1}}],[\"然后代码中我们怎么使用呢\",{\"1\":{\"1086\":1}}],[\"然后使用刚才的命令\",{\"1\":{\"1084\":1}}],[\"然后使用不同的交易所\",{\"1\":{\"703\":1}}],[\"然后呢\",{\"1\":{\"1084\":1}}],[\"然后接着我们再对剩下的40\",{\"1\":{\"1084\":1}}],[\"然后接着你再分别为你目前的选择中的每辆车依据权重进行打分\",{\"1\":{\"683\":1}}],[\"然后基本就可以搞定60\",{\"1\":{\"1084\":1}}],[\"然后给body传递msg参数\",{\"1\":{\"1080\":1}}],[\"然后给该字段赋值一个自增的值\",{\"1\":{\"369\":1}}],[\"然后加上body参数\",{\"1\":{\"1080\":1}}],[\"然后以固定的间隔给服务器发请求\",{\"1\":{\"1073\":1}}],[\"然后proto文件就变成了\",{\"1\":{\"1072\":1}}],[\"然后目录的结构就如下所示\",{\"1\":{\"1067\":1}}],[\"然后每次执行make\",{\"1\":{\"1025\":1}}],[\"然后每隔一秒将缓冲区里的内容写回到硬盘\",{\"1\":{\"413\":1}}],[\"然后提供一个非常简洁的接口供我们使用\",{\"1\":{\"1010\":1}}],[\"然后定义一个api类型\",{\"1\":{\"980\":1}}],[\"然后引入对应的gomock包\",{\"1\":{\"977\":1}}],[\"然后执行当前\",{\"1\":{\"1135\":1}}],[\"然后执行go\",{\"1\":{\"969\":1}}],[\"然后执行这条命令\",{\"1\":{\"413\":1}}],[\"然后填入我们希望返回的对应的return值==\",{\"1\":{\"958\":1}}],[\"然后为每种遍历方式创建一个实现了该接口的结构体\",{\"1\":{\"828\":1}}],[\"然后为每个具体的请求创建一个实现了该接口的结构体\",{\"1\":{\"821\":1}}],[\"然后为被\",{\"1\":{\"369\":1}}],[\"然后把机器状态转换为目标状态\",{\"1\":{\"1009\":1}}],[\"然后把剩下的\",{\"1\":{\"751\":1}}],[\"然后把该缓存页对应的控制块从free链表中移除\",{\"1\":{\"377\":1}}],[\"然后轰然\",{\"1\":{\"706\":1}}],[\"然后消失\",{\"0\":{\"706\":1}}],[\"然后围绕其扩大经营\",{\"1\":{\"663\":2}}],[\"然后收取费用\",{\"1\":{\"663\":2}}],[\"然后明确他们的痛点\",{\"1\":{\"663\":2}}],[\"然后不断地缩小范围\",{\"1\":{\"663\":2}}],[\"然后另一个人将这个消息逐字逐句地表达给另一个人\",{\"1\":{\"654\":1}}],[\"然后他们发现它可能有毒\",{\"1\":{\"643\":1}}],[\"然后什么都不做去free\",{\"1\":{\"631\":1}}],[\"然后决定如何扩展你的知识\",{\"1\":{\"627\":1}}],[\"然后找出根据来证明他们选择的正确性\",{\"1\":{\"627\":1}}],[\"然后找到你的父母\",{\"1\":{\"578\":1}}],[\"然后脑海中一直想着要思考\",{\"1\":{\"626\":1}}],[\"然后所有的金钱在这个社会上所有的人的手中流转\",{\"1\":{\"614\":1}}],[\"然后回到家里花费几个小时思考这个新人是否是她的真命天子\",{\"1\":{\"585\":1}}],[\"然后隧道把你吐出来\",{\"1\":{\"585\":1}}],[\"然后大厨们通过不断循环迅速提高\",{\"1\":{\"581\":1}}],[\"然后你也可以因此赚钱\",{\"1\":{\"663\":1}}],[\"然后你将这些想法铭刻在脑海中\",{\"1\":{\"575\":1}}],[\"然后你想\",{\"1\":{\"575\":1}}],[\"然后你会继续追问\",{\"1\":{\"575\":1}}],[\"然后得到某种原因\",{\"1\":{\"575\":1}}],[\"然后进行深入剖析\",{\"1\":{\"574\":1}}],[\"然后进一步添加新的层\",{\"1\":{\"46\":1}}],[\"然后是\",{\"1\":{\"1135\":1}}],[\"然后是每条具体的职业道路\",{\"1\":{\"579\":1}}],[\"然后是垃圾桶\",{\"1\":{\"577\":1}}],[\"然后是你的自尊心\",{\"1\":{\"573\":1}}],[\"然后是指令数组\",{\"1\":{\"117\":1}}],[\"然后照搬\",{\"1\":{\"571\":1}}],[\"然后开始长达\",{\"1\":{\"569\":1}}],[\"然后点击uninstall就结束了\",{\"1\":{\"552\":1}}],[\"然后发现还是由很多东西没有掌握明白\",{\"1\":{\"525\":1}}],[\"然后自己写一写\",{\"1\":{\"525\":1}}],[\"然后根据执行的情况修改\",{\"1\":{\"1010\":1}}],[\"然后根据他说的话做出重大的职业决定\",{\"1\":{\"569\":1}}],[\"然后根据缩进嵌套\",{\"1\":{\"516\":1}}],[\"然后根据时间\",{\"1\":{\"152\":1}}],[\"然后可以通过选择\",{\"1\":{\"494\":1}}],[\"然后返回一个新的\",{\"1\":{\"481\":1}}],[\"然后去判断锁的情况\",{\"1\":{\"436\":1}}],[\"然后启动一个守护线程\",{\"1\":{\"436\":1}}],[\"然后对其进行签名\",{\"1\":{\"1047\":1}}],[\"然后对payload进行\",{\"1\":{\"1047\":1}}],[\"然后对这些因素做一个权重大小的排序\",{\"1\":{\"683\":1}}],[\"然后对这五个节点中最长时间没有发送过ping消息的节点发送ping消息\",{\"1\":{\"434\":1}}],[\"然后对该记录加独占锁\",{\"1\":{\"368\":1}}],[\"然后节点会修改自己在clusterstate\",{\"1\":{\"433\":1}}],[\"然后按照以下规则\",{\"1\":{\"426\":1}}],[\"然后按照默认的16kb的大小划分出一个个的页\",{\"1\":{\"376\":1}}],[\"然后向这个从服务器发送slaveof\",{\"1\":{\"426\":1}}],[\"然后向源sentinel返回\",{\"1\":{\"426\":1}}],[\"然后向客户端返回queued回复\",{\"1\":{\"424\":1}}],[\"然后由新的主服务器代替已下线的主服务器处理请求\",{\"1\":{\"426\":1}}],[\"然后由专门的消费者来重试\",{\"1\":{\"385\":1}}],[\"然后主服务器就会根据从服务器提交的复制偏移量\",{\"1\":{\"425\":1}}],[\"然后才去处理其他客户端的命令请求\",{\"1\":{\"424\":1}}],[\"然后才能将新元素添加到整数集合里面\",{\"1\":{\"398\":1}}],[\"然后一次性顺序执行多个命令的过程\",{\"1\":{\"424\":1}}],[\"然后逐一执行命令的方式来进行数据恢复\",{\"1\":{\"413\":1}}],[\"然后后台线程将脏页写入到磁盘中\",{\"1\":{\"377\":1}}],[\"然后后面的权限逻辑判断都基于此时读取到的权限\",{\"1\":{\"342\":1}}],[\"然后设置锁的状态\",{\"1\":{\"374\":1}}],[\"然后整个事务执行期间都在用这个\",{\"1\":{\"364\":1}}],[\"然后整个事务期间都在用这个\",{\"1\":{\"356\":1,\"362\":2}}],[\"然后再转交给原对象进行处理\",{\"1\":{\"938\":1}}],[\"然后再考虑备用计划\",{\"1\":{\"582\":1}}],[\"然后再回到那个同样重要的问题\",{\"1\":{\"577\":1}}],[\"然后再分别介绍上面提到的五种不同类型的消息正文\",{\"1\":{\"434\":1}}],[\"然后再根据这条数据\",{\"1\":{\"385\":1}}],[\"然后再做进一步的操作\",{\"1\":{\"362\":1}}],[\"然后再来删除镜像\",{\"1\":{\"55\":1}}],[\"然后我们在server\",{\"1\":{\"1072\":1}}],[\"然后我们就成功执行了grpc代码\",{\"1\":{\"1067\":1}}],[\"然后我们要正确理解信息时代的商业模式\",{\"1\":{\"649\":1}}],[\"然后我们会遇到以下三种情况\",{\"1\":{\"283\":1}}],[\"然后我把这两个隐藏列也画出来\",{\"1\":{\"362\":1}}],[\"然后交由操作系统控制持久化到磁盘的时机\",{\"1\":{\"360\":1}}],[\"然后马上执行\",{\"1\":{\"358\":1}}],[\"然后标记\",{\"1\":{\"357\":2}}],[\"然后更新\",{\"1\":{\"355\":1}}],[\"然后更新每个份额的价值\",{\"1\":{\"152\":1}}],[\"然后构建语法树\",{\"1\":{\"349\":1}}],[\"然后迭代法不断迭代\",{\"1\":{\"296\":1}}],[\"然后计算出两指针之间的中间索引值\",{\"1\":{\"283\":1}}],[\"然后\",{\"1\":{\"278\":1,\"357\":1,\"413\":1,\"512\":1,\"570\":2,\"706\":2,\"771\":2,\"1088\":1,\"1161\":1,\"1163\":1,\"1193\":1}}],[\"然后反转数组\",{\"1\":{\"278\":1}}],[\"然后最后再减一下长度也可以求出来\",{\"1\":{\"265\":1}}],[\"然后dp\",{\"1\":{\"248\":1}}],[\"然后遍历背包重量的代码\",{\"1\":{\"235\":1}}],[\"然后将当前的\",{\"1\":{\"1135\":1}}],[\"然后将剩下的所有网络协程都加入到全局协程队列中\",{\"1\":{\"1135\":1}}],[\"然后将include目录\",{\"1\":{\"1067\":1}}],[\"然后将sessionid通过http响应头cookie发送给客户端\",{\"1\":{\"1045\":1}}],[\"然后将情绪宣泄一空后\",{\"1\":{\"592\":1}}],[\"然后将你的速度乘以你的坚持程度\",{\"1\":{\"584\":1}}],[\"然后将这个文件句柄赋值给变量\",{\"1\":{\"448\":1}}],[\"然后将最新的数据同步给从服务器\",{\"1\":{\"413\":1}}],[\"然后将键值对放置到ht\",{\"1\":{\"395\":1}}],[\"然后将其共享并反过来作为更多学习的基础\",{\"1\":{\"649\":1}}],[\"然后将其拆解得清清楚楚\",{\"1\":{\"573\":1}}],[\"然后将其生命周期改变为\",{\"1\":{\"461\":1}}],[\"然后将其页设置为脏页\",{\"1\":{\"377\":1}}],[\"然后将其设置为脏页\",{\"1\":{\"376\":1}}],[\"然后将锁的状态设置为等待状态\",{\"1\":{\"374\":1}}],[\"然后将\",{\"1\":{\"360\":2,\"1135\":1}}],[\"然后将本次对这个页的修改以\",{\"1\":{\"357\":1}}],[\"然后将client\",{\"1\":{\"192\":1}}],[\"然后将1000usdt在pando\",{\"1\":{\"177\":1}}],[\"然后在在\",{\"1\":{\"1135\":1}}],[\"然后在里面写入\",{\"1\":{\"1084\":1}}],[\"然后在之后调用的时候会依次调用\",{\"1\":{\"1052\":1}}],[\"然后在之后合适的时间再写到磁盘上\",{\"1\":{\"357\":1}}],[\"然后在对应的目录下输入\",{\"1\":{\"977\":1}}],[\"然后在此目录下创建对应的mod\",{\"1\":{\"977\":1}}],[\"然后在高点抛售啊\",{\"1\":{\"806\":1}}],[\"然后在交易所向人们出售纸币\",{\"1\":{\"703\":1}}],[\"然后在程序运行后\",{\"1\":{\"461\":1}}],[\"然后在src\",{\"1\":{\"192\":1}}],[\"然后在项目根目录下创建\",{\"1\":{\"192\":1}}],[\"然后上传给\",{\"1\":{\"60\":1}}],[\"常见用法是向文件中写入内容\",{\"1\":{\"1169\":1}}],[\"常见服务的资源读写比例会非常高\",{\"1\":{\"1143\":1}}],[\"常见的就是\",{\"1\":{\"1135\":1}}],[\"常见的进程间交互方法\",{\"1\":{\"76\":1}}],[\"常用框架工具\",{\"0\":{\"1291\":1}}],[\"常用的函数和类型包括\",{\"1\":{\"1205\":1}}],[\"常用的功能\",{\"0\":{\"23\":1}}],[\"常用函数\",{\"0\":{\"1178\":1}}],[\"常用于一些复杂的扩展需求\",{\"1\":{\"920\":1}}],[\"常识\",{\"0\":{\"596\":1}}],[\"常量竟然是写死的\",{\"1\":{\"1135\":1}}],[\"常量表达式\",{\"1\":{\"457\":1}}],[\"常量不允许重复定义\",{\"1\":{\"456\":1}}],[\"常量的赋值不可以用变量\",{\"1\":{\"456\":1}}],[\"常量的类型不可以省略\",{\"1\":{\"456\":1}}],[\"常量可以在任意作用域中使用\",{\"1\":{\"456\":1}}],[\"常量和普通变量的区别\",{\"1\":{\"456\":1}}],[\"常常用acid性质来检验事务功能的可靠性和安全性\",{\"1\":{\"424\":1}}],[\"网站获得的有价值的信息\",{\"1\":{\"808\":1}}],[\"网上的论坛开始兴起\",{\"1\":{\"631\":1}}],[\"网\",{\"1\":{\"426\":1}}],[\"网格中的障碍物和空位置分别用\",{\"1\":{\"230\":1}}],[\"网格的左上角\",{\"1\":{\"230\":1}}],[\"网页标签\",{\"1\":{\"128\":1}}],[\"网桥\",{\"1\":{\"76\":1}}],[\"网络i\",{\"1\":{\"1135\":2}}],[\"网络io\",{\"1\":{\"75\":1}}],[\"网络测试\",{\"0\":{\"971\":1}}],[\"网络设备\",{\"1\":{\"76\":1}}],[\"网络隔离是通过\",{\"1\":{\"76\":1}}],[\"网络\",{\"1\":{\"75\":2}}],[\"网络互联到进程隔离等等\",{\"1\":{\"45\":1}}],[\"守护进程来处理实际的\",{\"1\":{\"724\":1}}],[\"守护进程\",{\"1\":{\"75\":1}}],[\"架构良好\",{\"1\":{\"724\":1}}],[\"架构样式组合的微服务确实有助于通过操作系统强制实施模块边界\",{\"1\":{\"723\":1}}],[\"架构\",{\"1\":{\"75\":1}}],[\"让他们在时间到达之前取消任务\",{\"1\":{\"1156\":1}}],[\"让他们选择合适的处理方法\",{\"1\":{\"450\":1}}],[\"让出\",{\"1\":{\"1135\":1}}],[\"让\",{\"1\":{\"1084\":1}}],[\"让大家快速入门grpc\",{\"1\":{\"1083\":1}}],[\"让对应的http\",{\"1\":{\"1080\":1}}],[\"让浏览器和服务器之间可以建立无限制的全双工通信\",{\"1\":{\"1073\":1}}],[\"让server端处理mock请求并记录返回的响应内容\",{\"1\":{\"972\":1}}],[\"让session属性包含用户的id和role\",{\"1\":{\"194\":1}}],[\"让客户端可以使用一个简单的接口来处理众多组件\",{\"1\":{\"927\":1}}],[\"让多个观察者对象同时监听某一个主题对象\",{\"1\":{\"842\":1}}],[\"让迭代器作为一个中介\",{\"1\":{\"825\":1}}],[\"让每种操作都有一个专门的迭代器\",{\"1\":{\"825\":1}}],[\"让每种遍历方式都有一个专门的迭代器\",{\"1\":{\"825\":1}}],[\"让命令对象作为事务中的原子操作\",{\"1\":{\"819\":1}}],[\"让命令对象负责在执行操作之前保存状态\",{\"1\":{\"819\":1}}],[\"让命令对象充当请求的容器\",{\"1\":{\"819\":1}}],[\"让中间的命令对象充当他们之间的桥梁\",{\"1\":{\"819\":1}}],[\"让身边人都觉得情绪比较稳定\",{\"1\":{\"810\":1}}],[\"让神经元自由连接可以让大脑中的想法越来越多\",{\"1\":{\"698\":1}}],[\"让用户可以随时随地听到多个的轻音乐集合\",{\"1\":{\"698\":1}}],[\"让用户可以用自己的加密货币进行套利交易\",{\"1\":{\"698\":1}}],[\"让用户停留在围栏内\",{\"1\":{\"534\":1}}],[\"让话题订单可以作为一个交易对处于合约中运行可以很大程度保证交易的透明\",{\"1\":{\"698\":1}}],[\"让这个差距足以形成一个认知差瀑布的时候\",{\"1\":{\"689\":1}}],[\"让这个本应该特别简单的概念使用起来无比复杂\",{\"1\":{\"454\":1}}],[\"让未来的自己大概率不后悔\",{\"1\":{\"680\":1}}],[\"让别人觉得你在秀优越感是让人最讨厌的特征\",{\"1\":{\"680\":1}}],[\"让自己舒服一点的\",{\"1\":{\"683\":1}}],[\"让自己更具备生产力\",{\"1\":{\"677\":1}}],[\"让自己的创业公司尽可能可以活下去\",{\"1\":{\"674\":1}}],[\"让自己的思绪可以体系化\",{\"1\":{\"660\":1}}],[\"让自己的大脑吃到东西\",{\"1\":{\"631\":1}}],[\"让自己的内心抵消比较所带来的落差感\",{\"1\":{\"611\":1}}],[\"让人们通过与ai对话就能得到自己想要的东西\",{\"1\":{\"605\":1}}],[\"让世界变得更美好的人\",{\"1\":{\"577\":1}}],[\"让你在未来不因为自己当时的错误认知而后悔\",{\"1\":{\"680\":1}}],[\"让你的结论仍然保持相当的试探性\",{\"1\":{\"627\":1}}],[\"让你痛苦不堪\",{\"1\":{\"577\":1}}],[\"让你感觉自己甚至不知道自己到底是谁\",{\"1\":{\"575\":1}}],[\"让个人触自尊心下降\",{\"1\":{\"573\":1}}],[\"让社交触担心被评为自私\",{\"1\":{\"573\":1}}],[\"让道义触感到内疚多愁善感\",{\"1\":{\"573\":1}}],[\"让整个国家没有互联网或许是更加省事的做法\",{\"1\":{\"533\":1}}],[\"让我明显感受生产力提高的工具就是\",{\"1\":{\"731\":1}}],[\"让我可以只字不差地阅读\",{\"1\":{\"605\":1}}],[\"让我想想\",{\"1\":{\"521\":1}}],[\"让我们不必每次都输入相同的命令\",{\"1\":{\"1025\":1}}],[\"让我们的server端接收并处理我们mock的http请求\",{\"1\":{\"972\":1}}],[\"让我们的大脑以为通过不断的上滑动作就可以获取信息\",{\"1\":{\"631\":1}}],[\"让我们更容易去写unit\",{\"1\":{\"956\":1}}],[\"让我们试着用一个操作系统文件系统的例子来理解组合模式\",{\"1\":{\"915\":1}}],[\"让我们弄清楚它能做的一切\",{\"1\":{\"771\":1}}],[\"让我们做出错误判断\",{\"1\":{\"683\":1}}],[\"让我们看待事物的方式发生改变\",{\"1\":{\"677\":1}}],[\"让我们看看它的所有设置\",{\"1\":{\"771\":1}}],[\"让我们看看函数的返回值\",{\"1\":{\"450\":1}}],[\"让我们看看下面的代码示例\",{\"1\":{\"448\":1}}],[\"让我们仔细审视每一条\",{\"1\":{\"653\":1}}],[\"让我们回顾狩猎文明时代\",{\"1\":{\"646\":1}}],[\"让我们回顾一下\",{\"1\":{\"643\":1}}],[\"让我们回到你的\",{\"1\":{\"574\":1}}],[\"让我们在思考和感觉之间做一个重要的区分\",{\"1\":{\"626\":1}}],[\"让我们在临终前暂停\",{\"1\":{\"570\":1}}],[\"让我们可以踏着先人留下来的东西继续前行\",{\"1\":{\"609\":1}}],[\"让我们关注可能最终出现在你的选择池中的现实范围部分\",{\"1\":{\"584\":1}}],[\"让我们重新审视一下实力和弱点的概念\",{\"1\":{\"583\":1}}],[\"让我们来看看并使用它\",{\"1\":{\"771\":1}}],[\"让我们来看看另一个因为我们代码中的\",{\"1\":{\"447\":1}}],[\"让我们来讨论这两个方面\",{\"1\":{\"580\":1}}],[\"让我们集思广益\",{\"1\":{\"578\":1}}],[\"让我们尝试从第一原则出发\",{\"1\":{\"577\":1}}],[\"让我们鼓起勇气\",{\"1\":{\"576\":1}}],[\"让我们去大脑的地下室找到那个章鱼\",{\"1\":{\"574\":1}}],[\"让我们从每个触须着手\",{\"1\":{\"573\":1}}],[\"让我们从头开始思考\",{\"1\":{\"572\":1}}],[\"让我们继续\",{\"1\":{\"521\":1}}],[\"让我们把所有这些不同的区块链函数\",{\"1\":{\"517\":1}}],[\"让我们写一个isblockvalid函数来做所有这些事情并返回一个bool值\",{\"1\":{\"515\":1}}],[\"让我们调用一个返回\",{\"1\":{\"448\":1}}],[\"让我们将\",{\"1\":{\"447\":1}}],[\"让我们操作远程服务器的\",{\"1\":{\"60\":1}}],[\"让我们再回到之前定制的\",{\"1\":{\"59\":1}}],[\"让时间陪你慢慢便富\",{\"1\":{\"502\":1}}],[\"让守护线程在一段时间后\",{\"1\":{\"436\":1}}],[\"让源节点准备好将属于槽slot的键值对迁移\",{\"1\":{\"431\":1}}],[\"让其他节点也与节点b进行握手\",{\"1\":{\"427\":1}}],[\"让它成为server2的从服务器\",{\"1\":{\"426\":1}}],[\"让已下线主服务器属下的所有从服务器去复制新的主服务器\",{\"1\":{\"426\":1}}],[\"让已下线主服务器属下的所有从服务器改为复制新的主服务器\",{\"1\":{\"426\":1}}],[\"让主从服务器状态回到一致的状态\",{\"1\":{\"425\":1}}],[\"让字典同时持有ht\",{\"1\":{\"396\":1}}],[\"让真正被访问的页才移动到\",{\"1\":{\"377\":1}}],[\"让mysql有了crash\",{\"1\":{\"357\":1}}],[\"让计算机算出所有的可能\",{\"1\":{\"206\":1}}],[\"让所有存款人支付损失\",{\"1\":{\"152\":1}}],[\"让损失平摊在所有存款人上\",{\"1\":{\"150\":1}}],[\"让defi\",{\"1\":{\"109\":1}}],[\"让某些进程在彼此隔离的命名空间中运行\",{\"1\":{\"75\":1}}],[\"硬盘io\",{\"1\":{\"75\":1}}],[\"硬盘\",{\"1\":{\"75\":1}}],[\"底层\",{\"0\":{\"1136\":1,\"1297\":1}}],[\"底层架子或垃圾桶里\",{\"1\":{\"577\":1}}],[\"底层的核心技术包括\",{\"1\":{\"75\":1}}],[\"底层实现\",{\"0\":{\"75\":1}}],[\"底层技术\",{\"0\":{\"45\":1}}],[\"加载预定义的时区信息\",{\"1\":{\"1213\":1}}],[\"加载阶段时\",{\"1\":{\"414\":1}}],[\"加载阶段\",{\"1\":{\"414\":1}}],[\"加快程序处理的速度\",{\"1\":{\"1144\":1}}],[\"加工和传播信息\",{\"1\":{\"677\":1}}],[\"加锁和解锁\",{\"1\":{\"1142\":1}}],[\"加锁失败后\",{\"1\":{\"437\":1}}],[\"加锁成功后\",{\"1\":{\"437\":1}}],[\"加锁成功要同时满足两个条件\",{\"1\":{\"437\":1}}],[\"加锁操作\",{\"1\":{\"437\":2}}],[\"加锁操作使用\",{\"1\":{\"437\":1}}],[\"加锁\",{\"1\":{\"384\":1}}],[\"加锁时\",{\"1\":{\"374\":1}}],[\"加\",{\"1\":{\"367\":2,\"383\":1}}],[\"加的是\",{\"1\":{\"367\":2}}],[\"加表锁\",{\"1\":{\"366\":1}}],[\"加一个缓存就行了\",{\"1\":{\"376\":1}}],[\"加一\",{\"1\":{\"287\":1,\"1143\":1}}],[\"加入发送等待队列\",{\"1\":{\"1137\":1}}],[\"加入grpc\",{\"1\":{\"1097\":1}}],[\"加入问号的行列\",{\"1\":{\"585\":1}}],[\"加入s\",{\"1\":{\"268\":2}}],[\"加入当前连续子序列和\",{\"1\":{\"262\":1}}],[\"加上完整\",{\"1\":{\"360\":1}}],[\"加上一个替换元素的操作\",{\"1\":{\"266\":1}}],[\"加上第i房间偷到的钱\",{\"1\":{\"248\":1}}],[\"加上\",{\"1\":{\"236\":1}}],[\"加密处理\",{\"0\":{\"1098\":1}}],[\"加密后的payload\",{\"1\":{\"1047\":1}}],[\"加密领域讨论最多的就是\",{\"1\":{\"591\":1}}],[\"加密开\",{\"1\":{\"494\":1}}],[\"加密操作\",{\"1\":{\"121\":1}}],[\"加密货币储蓄账户\",{\"1\":{\"151\":1}}],[\"加密货币\",{\"1\":{\"19\":1,\"34\":1,\"703\":1,\"751\":1}}],[\"加了间隙锁\",{\"1\":{\"374\":1}}],[\"加了\",{\"1\":{\"74\":1}}],[\"读操作使用\",{\"1\":{\"1143\":1}}],[\"读\",{\"1\":{\"1143\":2}}],[\"读完就对中国社会结构有了大致清晰的了解\",{\"1\":{\"669\":1}}],[\"读过的代码足够多\",{\"1\":{\"605\":1}}],[\"读者朋友们好\",{\"1\":{\"569\":1}}],[\"读书另一个优点就是让我的注意力得到自我掌控\",{\"1\":{\"758\":1}}],[\"读书\",{\"1\":{\"500\":1}}],[\"读书3本并且将笔记记录到blog上\",{\"1\":{\"4\":1}}],[\"读取了\",{\"1\":{\"1173\":2}}],[\"读取的字符串是\",{\"1\":{\"1172\":4}}],[\"读取数据的\",{\"1\":{\"1136\":1}}],[\"读取数据库\",{\"1\":{\"384\":1,\"386\":1}}],[\"读取文件的内容\",{\"1\":{\"451\":1}}],[\"读请求\",{\"1\":{\"384\":1}}],[\"读请求先读取缓存\",{\"1\":{\"382\":1}}],[\"读+写\",{\"1\":{\"384\":1}}],[\"读缓存\",{\"1\":{\"384\":1,\"386\":1}}],[\"读锁直接解锁成功\",{\"1\":{\"1143\":1}}],[\"读锁的加锁方法\",{\"1\":{\"1143\":1}}],[\"读锁\",{\"1\":{\"367\":4,\"1143\":1}}],[\"读提交隔离级别是在每次读取数据时\",{\"1\":{\"362\":1}}],[\"读提交是如何工作的\",{\"1\":{\"362\":1}}],[\"读提交\",{\"1\":{\"361\":1,\"362\":2}}],[\"读未提交\",{\"1\":{\"361\":1,\"362\":1}}],[\"读到\",{\"1\":{\"361\":1}}],[\"读到这里估计大家都忘了\",{\"1\":{\"236\":1}}],[\"读了读这些协议的文档做了一些research\",{\"1\":{\"157\":1}}],[\"读写分离\",{\"1\":{\"386\":1,\"388\":1,\"413\":1}}],[\"读写互斥锁\",{\"1\":{\"1143\":1}}],[\"读写互斥\",{\"1\":{\"368\":1,\"370\":2}}],[\"读写\",{\"1\":{\"74\":2,\"78\":1,\"384\":2,\"386\":1}}],[\"本功能只对以下api有效\",{\"1\":{\"1242\":1}}],[\"本节会介绍在实现接口时使用指针类型和结构体类型的区别\",{\"1\":{\"1140\":1}}],[\"本节会在后面介绍类型转换的实现原理\",{\"1\":{\"1138\":1}}],[\"本节将对集群的节点\",{\"1\":{\"427\":1}}],[\"本节将介绍代币在\",{\"1\":{\"132\":1}}],[\"本篇教程我们来讲解grpc的元数据处理和拦截的中间件\",{\"1\":{\"1092\":1}}],[\"本篇文章分为三个部分\",{\"1\":{\"1216\":1}}],[\"本篇文章\",{\"1\":{\"1083\":1}}],[\"本篇文章开始\",{\"1\":{\"1071\":1}}],[\"本篇文章我们开始学习grpc\",{\"1\":{\"1066\":1}}],[\"本篇文章介绍一下rpc的概念以及在go语言如何使用标准库中的rpc\",{\"1\":{\"1063\":1}}],[\"本教程参考\",{\"1\":{\"1008\":1}}],[\"本部分就分别举例来演示如何在编写单元测试的时候对mysql和redis进行mock\",{\"1\":{\"974\":1}}],[\"本质上也就是一秒钟产生\",{\"1\":{\"1034\":1}}],[\"本质上上面的代码最核心的就这三行mockxx函数\",{\"1\":{\"958\":1}}],[\"本质是通过\",{\"1\":{\"388\":1}}],[\"本身并不能做到这一点\",{\"1\":{\"725\":1}}],[\"本书有提到\",{\"1\":{\"767\":1}}],[\"本书就是对这里的某些方面做一些总结\",{\"1\":{\"673\":1}}],[\"本书关注的焦点是后者\",{\"1\":{\"626\":1}}],[\"本来的想法是节省时间\",{\"1\":{\"525\":1}}],[\"本来想写eth生态的aave\",{\"1\":{\"147\":1}}],[\"本能\",{\"1\":{\"503\":1,\"669\":1}}],[\"本地协程队列获取协程返回\",{\"1\":{\"1135\":1}}],[\"本地协程队列\",{\"1\":{\"1135\":2}}],[\"本地协程队列中的协程调度\",{\"1\":{\"1135\":1}}],[\"本地调用的例子\",{\"1\":{\"1063\":1}}],[\"本地搭建一个三节点的mongo复制集\",{\"1\":{\"497\":1}}],[\"本地目录的路径必须是绝对路径\",{\"1\":{\"74\":1}}],[\"本章接下来将对sentinel实现主观下线检测和客观下线检测的原理进行介绍\",{\"1\":{\"426\":1}}],[\"本章在介绍psync命令时一直没有说明psync命令的参数以及返回值\",{\"1\":{\"425\":1}}],[\"本章将列举slaveof命令的具体实现步骤\",{\"1\":{\"425\":1}}],[\"本章将介绍redis从2\",{\"1\":{\"425\":1}}],[\"本题从1开始计数\",{\"1\":{\"294\":1}}],[\"本题要求把数字\",{\"1\":{\"287\":1}}],[\"本题要求的其实是排列数\",{\"1\":{\"243\":1}}],[\"本题要注意\",{\"1\":{\"279\":1}}],[\"本题的二维数组是有规律排列的\",{\"1\":{\"276\":1}}],[\"本题的难点在于区别2中\",{\"1\":{\"212\":1}}],[\"本题可以直接创建一个slice去做\",{\"1\":{\"277\":1}}],[\"本题可以直接俩for循环暴力去解题\",{\"1\":{\"276\":1}}],[\"本题可以直接用map做\",{\"1\":{\"275\":1}}],[\"本题还可以用原地交换去做\",{\"1\":{\"275\":1}}],[\"本题和动态规划\",{\"1\":{\"260\":1}}],[\"本题中只能买卖一次\",{\"1\":{\"252\":1}}],[\"本题中我们是外层for循环遍历物品\",{\"1\":{\"242\":1}}],[\"本题则是装满有几种方法\",{\"1\":{\"239\":1}}],[\"本题其实大致和上一题差不多\",{\"1\":{\"230\":1}}],[\"本题需要注意\",{\"1\":{\"227\":1}}],[\"本题一个关键点是可包含重复数字的序列\",{\"1\":{\"219\":1}}],[\"本题有两个关键问题\",{\"1\":{\"213\":1}}],[\"本题数组candidates的元素是有重复的\",{\"1\":{\"212\":1}}],[\"本题candidates\",{\"1\":{\"212\":1}}],[\"本层集合中元素\",{\"1\":{\"206\":1}}],[\"本位年化\",{\"1\":{\"166\":1}}],[\"本位收益是\",{\"1\":{\"166\":1}}],[\"本位的利差\",{\"1\":{\"153\":1}}],[\"本系列会介绍常见的借贷协议例如\",{\"1\":{\"156\":1}}],[\"本系列笔记有些地方会加入一些代码方便读者更深入理解原理\",{\"1\":{\"93\":1}}],[\"本文的顺序按照go\",{\"1\":{\"1204\":1}}],[\"本文的首要目标就是帮助大家在go语言中使用redis\",{\"1\":{\"1104\":1}}],[\"本文最后的反射示例是我们公司内部使用框架的一个小demo\",{\"1\":{\"1186\":1}}],[\"本文就来详细介绍fmt包\",{\"1\":{\"1166\":1}}],[\"本文就来使用zerolog来写一个gin的中间件\",{\"1\":{\"1060\":1}}],[\"本文章介绍了go语言中的反射包\",{\"1\":{\"1194\":1}}],[\"本文章视频已上传至b站\",{\"1\":{\"1112\":1}}],[\"本文章已录制b站视频\",{\"1\":{\"1030\":1,\"1060\":1}}],[\"本文以一个小案例为例\",{\"1\":{\"1050\":1}}],[\"本文则主要集中介绍下该组件的具体使用方法\",{\"1\":{\"1033\":1}}],[\"本文参考\",{\"1\":{\"1005\":1,\"1038\":1}}],[\"本文\",{\"1\":{\"992\":1}}],[\"本文介绍一下go语言里字节开源的的mockey框架\",{\"1\":{\"956\":1}}],[\"本文翻译自not\",{\"1\":{\"701\":1}}],[\"本文翻译自\",{\"1\":{\"569\":1,\"721\":1,\"751\":1,\"770\":1}}],[\"本文是我在使用nextauth过程中\",{\"1\":{\"191\":1}}],[\"本文将介绍单例模式的定义\",{\"1\":{\"894\":1}}],[\"本文将介绍\",{\"1\":{\"191\":1,\"1177\":1}}],[\"本文尝试去总结一下常见的稳定币以及我常用的pusd\",{\"1\":{\"180\":1}}],[\"本文不仅仅是pusd的套利介绍\",{\"1\":{\"172\":1}}],[\"本文涉及对marginfi源代码的解析\",{\"1\":{\"147\":1}}],[\"本文旨在加深对\",{\"1\":{\"140\":1}}],[\"本文基于solana官方文档而来\",{\"1\":{\"108\":1}}],[\"本机程序是solana链的原生程序\",{\"1\":{\"112\":1}}],[\"本机程序是solana运行时附带的内置程序\",{\"1\":{\"111\":1}}],[\"本机程序\",{\"0\":{\"112\":1}}],[\"本合约可看\",{\"1\":{\"105\":1}}],[\"本金的5\",{\"1\":{\"28\":1}}],[\"信号量将当前协程唤醒\",{\"1\":{\"1143\":1}}],[\"信号给容器\",{\"1\":{\"71\":1}}],[\"信仰是一种形式的知识吗\",{\"0\":{\"656\":1}}],[\"信仰都限制了你的经历\",{\"1\":{\"619\":1}}],[\"信念\",{\"1\":{\"575\":1}}],[\"信\",{\"1\":{\"426\":5}}],[\"信息交换\",{\"1\":{\"1047\":1}}],[\"信息\",{\"1\":{\"956\":1}}],[\"信息可以分为两类\",{\"1\":{\"647\":1,\"686\":1}}],[\"信息知识时代\",{\"1\":{\"646\":1}}],[\"信息时代的特点是信息的快速传播和广泛共享\",{\"1\":{\"646\":1}}],[\"信息成为了新的生产资料的核心\",{\"1\":{\"646\":1}}],[\"信息从未像近十年这样快速膨胀\",{\"1\":{\"631\":1}}],[\"信息似乎是以口口相传\",{\"1\":{\"631\":1}}],[\"信息传递过程中有些信息就不见了\",{\"1\":{\"512\":1}}],[\"信息的内容由多个参数组成\",{\"1\":{\"426\":1}}],[\"信息在\",{\"1\":{\"74\":1}}],[\"标出起点和成功标记\",{\"1\":{\"584\":1}}],[\"标\",{\"1\":{\"426\":1}}],[\"标sentinel\",{\"1\":{\"426\":1}}],[\"标sentinel会分析并取出命令请求中包含的各个参数\",{\"1\":{\"426\":1}}],[\"标准库学习\",{\"0\":{\"1299\":1}}],[\"标准库中就自带了限流算法的实现golang\",{\"1\":{\"1033\":1}}],[\"标准库中提供\",{\"1\":{\"463\":1}}],[\"标准库中的一个包\",{\"1\":{\"1153\":1,\"1198\":1}}],[\"标准库中的\",{\"0\":{\"463\":1},\"1\":{\"481\":1}}],[\"标准库代码或用到的\",{\"1\":{\"447\":1}}],[\"标准提出了四种隔离级别来规避这些现象\",{\"1\":{\"361\":1}}],[\"标准的标志\",{\"1\":{\"988\":1}}],[\"标准的抵押代币\",{\"1\":{\"169\":1}}],[\"标准的结果代币\",{\"1\":{\"169\":2}}],[\"标识值\",{\"1\":{\"426\":1}}],[\"标识\",{\"1\":{\"360\":1}}],[\"标识将处理指令的链上程序\",{\"1\":{\"117\":1}}],[\"标点符号和普通字母一样处理\",{\"1\":{\"333\":1,\"334\":1}}],[\"标志指示\",{\"1\":{\"114\":1}}],[\"标记着span中的page如何使用\",{\"1\":{\"1148\":1}}],[\"标记成可运行状态\",{\"1\":{\"1137\":1}}],[\"标记出来有特别含义的状态的集合\",{\"1\":{\"1009\":1}}],[\"标记压缩列表的结束点\",{\"1\":{\"399\":1}}],[\"标记可以指定挂载一个本地主机的目录到容器中去\",{\"1\":{\"74\":1}}],[\"标记来将\",{\"1\":{\"74\":1}}],[\"标签均为\",{\"1\":{\"52\":1}}],[\"标签\",{\"1\":{\"48\":1,\"49\":1,\"51\":1}}],[\"挂起当前\",{\"1\":{\"1137\":1}}],[\"挂载一个主机目录作为数据卷\",{\"1\":{\"74\":1}}],[\"挂载到容器里\",{\"1\":{\"74\":1}}],[\"挂载主机目录的默认权限是\",{\"1\":{\"74\":2}}],[\"挂载主机目录\",{\"1\":{\"74\":1}}],[\"挂到同一个目录下\",{\"1\":{\"61\":1}}],[\"内取得不错的结果\",{\"1\":{\"806\":1}}],[\"内心会有几种不同想法\",{\"1\":{\"573\":1}}],[\"内容大概是\",{\"1\":{\"776\":1}}],[\"内容涉及各种不同的主题\",{\"1\":{\"579\":1}}],[\"内容\",{\"1\":{\"435\":1}}],[\"内容以及是否有过期时间等条件的不同\",{\"1\":{\"419\":1}}],[\"内读取出命令回复的内容\",{\"1\":{\"425\":1}}],[\"内层for循环遍历a\",{\"1\":{\"259\":1}}],[\"内层for循环遍历b了\",{\"1\":{\"259\":1}}],[\"内层for循环遍历b\",{\"1\":{\"259\":1}}],[\"内层for循环遍历物品\",{\"1\":{\"242\":1}}],[\"内层for遍历背包\",{\"1\":{\"242\":1}}],[\"内置支持\",{\"1\":{\"193\":1}}],[\"内部调用u\",{\"1\":{\"978\":1}}],[\"内部状态\",{\"1\":{\"838\":1,\"844\":3}}],[\"内部开启一个\",{\"1\":{\"360\":1}}],[\"内部\",{\"1\":{\"360\":2}}],[\"内部的结构\",{\"1\":{\"341\":1}}],[\"内部的架构\",{\"1\":{\"341\":1}}],[\"内部处理没有这么简单\",{\"1\":{\"150\":1}}],[\"内部合约+继承本合约可看\",{\"1\":{\"105\":1}}],[\"内部以及容器之间管理数据\",{\"1\":{\"74\":1}}],[\"内核的一款非常优秀的浏览器\",{\"1\":{\"731\":1}}],[\"内核的一个特性\",{\"1\":{\"77\":1}}],[\"内核会一直监听这些\",{\"1\":{\"412\":1}}],[\"内核自\",{\"1\":{\"77\":1}}],[\"内核一个强大的特性\",{\"1\":{\"76\":1}}],[\"内核启动后\",{\"1\":{\"46\":1}}],[\"内存规格\",{\"1\":{\"1148\":1}}],[\"内存快\",{\"1\":{\"1148\":1}}],[\"内存块\",{\"1\":{\"1148\":1}}],[\"内存布局\",{\"0\":{\"1148\":1}}],[\"内存碎片\",{\"1\":{\"1147\":1}}],[\"内存分配\",{\"0\":{\"1147\":1}}],[\"内存中加载的所有数据都会丢失\",{\"1\":{\"416\":1}}],[\"内存数据和磁盘数据一致\",{\"1\":{\"377\":1}}],[\"内存\",{\"0\":{\"354\":1},\"1\":{\"75\":1,\"340\":1,\"411\":1}}],[\"|=\",{\"1\":{\"331\":1,\"424\":1}}],[\"||\",{\"1\":{\"152\":1,\"194\":3,\"217\":1,\"255\":1,\"279\":1,\"282\":1,\"284\":7,\"291\":4,\"295\":1,\"297\":4,\"299\":2,\"300\":1,\"301\":1,\"319\":1,\"329\":1,\"459\":1,\"463\":2,\"827\":1,\"976\":1,\"997\":1,\"1010\":1,\"1045\":1,\"1047\":1,\"1055\":1,\"1193\":1}}],[\"|\",{\"1\":{\"70\":1,\"467\":7,\"468\":9,\"473\":3,\"972\":8,\"1179\":1,\"1181\":2}}],[\"导入\",{\"1\":{\"1086\":1}}],[\"导入容器快照\",{\"0\":{\"70\":1}}],[\"导致代码增多\",{\"1\":{\"876\":1,\"884\":1}}],[\"导致你对跳槽的恐惧\",{\"1\":{\"574\":1}}],[\"导致声明全局变量的时候某些地方会有些坑\",{\"1\":{\"464\":1}}],[\"导致超过了锁的超时时间\",{\"1\":{\"436\":1}}],[\"导致redis服务器无法处理别的请求\",{\"1\":{\"416\":1}}],[\"导致每个元素的空间都要重新分配\",{\"1\":{\"399\":1}}],[\"导致不一致的场景么\",{\"1\":{\"386\":1}}],[\"导致数据解析失败\",{\"1\":{\"1084\":1}}],[\"导致数据不一致的问题\",{\"1\":{\"384\":1}}],[\"导致数据库操作抖动\",{\"1\":{\"377\":1}}],[\"导致大量热数据被淘汰了\",{\"1\":{\"377\":1}}],[\"导致索引结构不紧凑\",{\"1\":{\"353\":1}}],[\"导出容器\",{\"0\":{\"69\":1}}],[\"原理和使用过程基本相似\",{\"1\":{\"978\":1}}],[\"原对象和代理对象都实现该接口\",{\"1\":{\"938\":1}}],[\"原有功能\",{\"1\":{\"921\":1}}],[\"原型模式通过对象复制的方式实现对象的创建和克隆操作\",{\"1\":{\"891\":1}}],[\"原型模式大大简化了创建新对象的工作\",{\"1\":{\"889\":1}}],[\"原型模式的优点是\",{\"1\":{\"889\":1}}],[\"原型模式的问题在于有些对象不是很容易复制的\",{\"1\":{\"887\":1}}],[\"原型模式就是将clone的过程交给原有对象\",{\"1\":{\"887\":1}}],[\"原型模式是一种创建型设计模式\",{\"1\":{\"887\":1}}],[\"原型模式\",{\"0\":{\"887\":1}}],[\"原中北大学朔州校区\",{\"1\":{\"695\":1}}],[\"原材料\",{\"1\":{\"648\":1}}],[\"原创性或缺乏原创性应该是讨论的一个重要组成部分\",{\"1\":{\"583\":1}}],[\"原则ii\",{\"1\":{\"669\":1}}],[\"原则\",{\"1\":{\"503\":1,\"528\":1,\"669\":1}}],[\"原子类型\",{\"0\":{\"458\":1}}],[\"原子性是通过\",{\"1\":{\"361\":1}}],[\"原子性\",{\"1\":{\"116\":1,\"361\":1}}],[\"原\",{\"1\":{\"424\":1}}],[\"原来值的末尾\",{\"1\":{\"403\":1}}],[\"原来为\",{\"1\":{\"52\":1}}],[\"原值\",{\"1\":{\"384\":1,\"386\":2}}],[\"原节点\",{\"1\":{\"308\":1}}],[\"原地交换就是不断交换元素\",{\"1\":{\"275\":1}}],[\"原因之一就是这些场景已有的互联网应用都可以满足\",{\"1\":{\"800\":1}}],[\"原因之一就是这个在日常工作中用不到\",{\"1\":{\"271\":1}}],[\"原因之一就是技术不成熟\",{\"1\":{\"799\":1}}],[\"原因\",{\"1\":{\"714\":1}}],[\"原因也或许是当下产品设计就是这个样子\",{\"1\":{\"610\":1}}],[\"原因就是针对这些已经成熟的业务原有技术可以解决的很好\",{\"1\":{\"592\":1}}],[\"原因如下\",{\"1\":{\"585\":1}}],[\"原因有两个\",{\"1\":{\"359\":1}}],[\"原因是go的命令本身已经非常简单\",{\"1\":{\"1023\":1}}],[\"原因是我觉得不论玩得再开心\",{\"1\":{\"695\":1}}],[\"原因是时间的的确确是生产资料\",{\"1\":{\"646\":1,\"677\":1}}],[\"原因是它们在编译时就直接进入二进制可执行文件中了\",{\"1\":{\"454\":1}}],[\"原因是默认nextauth的第三方登录默认使用的是discard登录\",{\"1\":{\"192\":1}}],[\"原因是市面上的pusd变少了\",{\"1\":{\"176\":1}}],[\"原因是solana为了避免链上程序处理浮点数设计的\",{\"1\":{\"111\":1}}],[\"原因会在下面说明\",{\"1\":{\"68\":1}}],[\"某个状态下什么能做什么不能做\",{\"1\":{\"1009\":1,\"1010\":1}}],[\"某个人的歌怎么样这种主观性问题\",{\"1\":{\"631\":1}}],[\"某个职业可能会显得不那么艰巨\",{\"1\":{\"584\":1}}],[\"某一天\",{\"1\":{\"252\":1}}],[\"某种资产挂钩比如黄金\",{\"1\":{\"182\":1}}],[\"某些时候需要进入容器进行操作\",{\"1\":{\"68\":1}}],[\"某话题的已有购买者的情况如下\",{\"1\":{\"26\":1}}],[\"终身学习\",{\"1\":{\"674\":1}}],[\"终点是你达到成功的定义\",{\"1\":{\"580\":1}}],[\"终止条件\",{\"1\":{\"206\":1}}],[\"终止容器\",{\"0\":{\"67\":1}}],[\"终端\",{\"1\":{\"64\":1}}],[\"指代\",{\"1\":{\"982\":1}}],[\"指是一个人对自己的自我评价往往会高出自己的实际水平\",{\"1\":{\"683\":1}}],[\"指出当前仍然处于工业社会末尾阶段\",{\"1\":{\"649\":1}}],[\"指出时间在过去的时代中并不是最重要的生产资料\",{\"1\":{\"649\":1}}],[\"指出虽然回顾过去\",{\"1\":{\"585\":1}}],[\"指引客户端转向正在导入槽的目标节点\",{\"1\":{\"432\":1}}],[\"指引客户端转向至正在负责槽的节点\",{\"1\":{\"429\":1}}],[\"指引客户端转向\",{\"1\":{\"429\":1}}],[\"指\",{\"1\":{\"426\":1,\"428\":1,\"432\":2}}],[\"指的是数据符合数据库本身的定义和要求\",{\"1\":{\"424\":1}}],[\"指的是创建该\",{\"1\":{\"362\":1}}],[\"指的是在创建\",{\"1\":{\"362\":1}}],[\"指的是在创建read\",{\"1\":{\"362\":1}}],[\"指的就是\",{\"1\":{\"362\":1}}],[\"指的就是指把日志写入到\",{\"1\":{\"358\":1}}],[\"指一个事务执行过程中看到的数据\",{\"1\":{\"361\":1}}],[\"指一个事务提交之后\",{\"1\":{\"361\":1}}],[\"指一个事务还没提交时\",{\"1\":{\"361\":1}}],[\"指针等变量的\",{\"1\":{\"1188\":1}}],[\"指针类型和结构体类型都会实现该接口\",{\"1\":{\"1138\":1}}],[\"指针\",{\"1\":{\"1138\":1,\"1188\":1,\"1191\":1}}],[\"指针和接口\",{\"1\":{\"1138\":1}}],[\"指针来保存节点值\",{\"1\":{\"394\":1}}],[\"指针并没有安排上\",{\"1\":{\"308\":1}}],[\"指针指向一个clusternode结构\",{\"1\":{\"428\":1}}],[\"指针指向null\",{\"1\":{\"428\":1}}],[\"指针指向链表中的任意节点或者\",{\"1\":{\"308\":1}}],[\"指针指向下一个节点\",{\"1\":{\"308\":1}}],[\"指针递减\",{\"1\":{\"283\":1}}],[\"指针的值\",{\"1\":{\"283\":4}}],[\"指向的协程\",{\"1\":{\"1135\":1}}],[\"指向的位置是i其实是比pivot小的区域\",{\"1\":{\"949\":1}}],[\"指向当前节点的指针\",{\"1\":{\"427\":1}}],[\"指向底层实现数据结构的指针\",{\"1\":{\"400\":1}}],[\"指向多个元素\",{\"1\":{\"397\":1}}],[\"指向下个哈希表节点\",{\"1\":{\"395\":1}}],[\"指向每一个旧版本记录\",{\"1\":{\"362\":1}}],[\"指向让登录用户使用\",{\"1\":{\"199\":1}}],[\"指向指令所需的每个账户的账户地址数组的\",{\"1\":{\"117\":1}}],[\"指示帐户是否为程序的布尔标志\",{\"1\":{\"111\":1}}],[\"指定自定义field的field名\",{\"1\":{\"1241\":1}}],[\"指定时间过后\",{\"1\":{\"1206\":2}}],[\"指定mock行为\",{\"1\":{\"977\":1}}],[\"指定传入值必须等于x\",{\"1\":{\"977\":1}}],[\"指定需要实现的方法\",{\"1\":{\"873\":1}}],[\"指定每个节点上的哈希槽个数\",{\"1\":{\"413\":1}}],[\"指定的位数\",{\"1\":{\"1198\":1}}],[\"指定的字段是否存在\",{\"1\":{\"407\":1}}],[\"指定的命令有关\",{\"1\":{\"66\":1}}],[\"指定是取最大的\",{\"1\":{\"236\":1}}],[\"指定签名者和只读账户的数量\",{\"1\":{\"116\":1}}],[\"指定拥有帐户程序的公钥\",{\"1\":{\"111\":1}}],[\"指定为\",{\"1\":{\"74\":2}}],[\"指令来删除过期的\",{\"1\":{\"414\":1}}],[\"指令来请求更具体和最佳的计算单元限制\",{\"1\":{\"122\":1}}],[\"指令的费用\",{\"1\":{\"118\":1}}],[\"指令数组\",{\"1\":{\"117\":1}}],[\"指令等\",{\"1\":{\"60\":1}}],[\"指令完成\",{\"1\":{\"60\":1}}],[\"指令就是这种格式\",{\"1\":{\"58\":1}}],[\"指令在定制镜像时是最常用的指令之一\",{\"1\":{\"58\":1}}],[\"指令是用来执行命令行命令的\",{\"1\":{\"58\":1}}],[\"指令\",{\"1\":{\"56\":1,\"58\":1,\"60\":1,\"116\":1,\"414\":1,\"1142\":1}}],[\"打车\",{\"1\":{\"764\":1}}],[\"打工并不算\",{\"1\":{\"754\":1}}],[\"打开文件\",{\"1\":{\"990\":1}}],[\"打开安装https\",{\"1\":{\"977\":1}}],[\"打开绿色的微信\",{\"1\":{\"551\":1}}],[\"打开浏览器访问localhost\",{\"1\":{\"517\":1}}],[\"打开上方的packages你可以看到很多包\",{\"1\":{\"512\":1}}],[\"打开app界面工具就可以自动给你分配一个可自由修改的设备号\",{\"1\":{\"494\":1}}],[\"打开redis\",{\"1\":{\"433\":1}}],[\"打印信息到控制台\",{\"1\":{\"992\":1}}],[\"打印机\",{\"1\":{\"910\":1}}],[\"打印出s的所有可能的值出现的概率\",{\"1\":{\"337\":1}}],[\"打印出该字符串中字符的所有排列\",{\"1\":{\"311\":1}}],[\"打印从1到最大的n位数\",{\"0\":{\"289\":1}}],[\"打印到宿主机上面\",{\"1\":{\"66\":2}}],[\"打家劫舍ii\",{\"0\":{\"249\":1}}],[\"打家劫舍\",{\"0\":{\"247\":1,\"248\":1,\"250\":1},\"1\":{\"223\":1}}],[\"打破僵局往往需要不一样的创新\",{\"1\":{\"11\":1}}],[\"打破现状\",{\"0\":{\"11\":1}}],[\"虚拟机可以理解为模拟运行的一整套操作系统\",{\"1\":{\"62\":1}}],[\"虚悬镜像已经失去了存在的价值\",{\"1\":{\"52\":1}}],[\"虚悬镜像\",{\"0\":{\"52\":1},\"1\":{\"52\":1}}],[\"对代码的改动影响最小\",{\"1\":{\"1220\":1}}],[\"对组成\",{\"1\":{\"1217\":1}}],[\"对json的基准测试表明\",{\"1\":{\"1150\":1}}],[\"对外暴露的\",{\"1\":{\"1146\":1}}],[\"对外暴露了三个方法\",{\"1\":{\"1144\":1}}],[\"对外提供http服务\",{\"1\":{\"972\":1}}],[\"对齐以及种类等\",{\"1\":{\"1139\":1}}],[\"对了\",{\"1\":{\"989\":1}}],[\"对修改关闭\",{\"1\":{\"982\":1}}],[\"对指针类型方法就是\",{\"1\":{\"960\":1}}],[\"对指定节点进行复制\",{\"1\":{\"433\":1}}],[\"对类别函数就是a\",{\"1\":{\"960\":1}}],[\"对请求排队或记录请求日志\",{\"1\":{\"818\":1}}],[\"对请求的发送者和接收者解耦\",{\"1\":{\"813\":1}}],[\"对此我的想法倒是这样的\",{\"1\":{\"806\":1}}],[\"对趋势理解不深刻就是深刻不理解\",{\"1\":{\"804\":1}}],[\"对他们来说最大的体力活动应该就是从屋中到工作地点的活动\",{\"1\":{\"788\":1}}],[\"对吧\",{\"1\":{\"771\":1}}],[\"对人的感受都是瞬间而已\",{\"1\":{\"757\":1}}],[\"对自我的思考\",{\"1\":{\"660\":1}}],[\"对证据的权衡清晰地表明了相反的情形\",{\"1\":{\"653\":1}}],[\"对这两个问题的答案是加着重号的不\",{\"1\":{\"657\":1}}],[\"对这一看法感到好奇\",{\"1\":{\"653\":1}}],[\"对这些不同职业板块上的进步速度做出初步估计\",{\"1\":{\"584\":1}}],[\"对不起\",{\"1\":{\"631\":1}}],[\"对意识边缘的想法保持敏感\",{\"1\":{\"627\":1}}],[\"对复杂性缺乏耐心\",{\"1\":{\"627\":1}}],[\"对其保持好奇心和耐心\",{\"1\":{\"627\":1}}],[\"对其他并发事务是隔离的\",{\"1\":{\"361\":1}}],[\"对批判性思考的检验是看这些推理是不是好的推理\",{\"1\":{\"627\":1}}],[\"对批判性思考有不少误解\",{\"0\":{\"627\":1}}],[\"对条件反射的实验让操纵人的思想和行为成为一门科学\",{\"1\":{\"622\":1}}],[\"对并非危险的事物感到恐惧\",{\"1\":{\"585\":1}}],[\"对现实范围进行良好的反思将引发对想要的范围的另一次反思\",{\"1\":{\"584\":1}}],[\"对世界的信念和对自身潜力的信念\",{\"1\":{\"578\":1}}],[\"对底层架子最好的理解是\",{\"1\":{\"577\":1}}],[\"对失败的恐惧可能来自于章鱼的任何一根触角\",{\"1\":{\"574\":1}}],[\"对死亡的恐惧也可能出现在这个触须\",{\"1\":{\"573\":1}}],[\"对职业道路非常痴迷\",{\"1\":{\"572\":1}}],[\"对大多数人来说\",{\"1\":{\"571\":1}}],[\"对我们这样非过去收入\",{\"1\":{\"571\":1}}],[\"对我们中的许多人来说\",{\"1\":{\"570\":1}}],[\"对我们大多数人来说\",{\"1\":{\"570\":1}}],[\"对开发保持耐心\",{\"0\":{\"557\":1}}],[\"对被选中节点所对应的clusternode结构进行更新\",{\"1\":{\"435\":1}}],[\"对目标节点发送cluster\",{\"1\":{\"431\":1}}],[\"对具有相同最高优先级的所有从服务器进行排序\",{\"1\":{\"426\":1}}],[\"对列表中剩余的从服务器进行排序\",{\"1\":{\"426\":1}}],[\"对相应主服务器的实例结构进行更新\",{\"1\":{\"426\":1}}],[\"对主服务器进行复制的服务器叫从服务器\",{\"1\":{\"425\":1}}],[\"对过期键会如何处理\",{\"1\":{\"414\":1}}],[\"对过期键会如何处理的\",{\"1\":{\"414\":1}}],[\"对设置到哈希表\",{\"1\":{\"407\":1}}],[\"对一切保持耐心\",{\"0\":{\"557\":1}}],[\"对一个列表进行修剪\",{\"1\":{\"405\":1}}],[\"对一张表做结构变更操作的时候\",{\"1\":{\"367\":1}}],[\"对一张表进行\",{\"1\":{\"367\":1}}],[\"对二进制位进行操作\",{\"1\":{\"403\":1}}],[\"对象的字符串表示\",{\"1\":{\"1212\":1}}],[\"对象的形式安全地传输信息\",{\"1\":{\"1047\":1}}],[\"对象的addfunc来向管理器中添加定时任务\",{\"1\":{\"1001\":1}}],[\"对象的元素值\",{\"1\":{\"397\":1}}],[\"对象\",{\"0\":{\"400\":1},\"1\":{\"1001\":1,\"1037\":1,\"1088\":1,\"1211\":1,\"1212\":4,\"1217\":1}}],[\"对比键的函数\",{\"1\":{\"395\":1}}],[\"对比一下就会发现\",{\"1\":{\"240\":1}}],[\"对读取的记录加独占锁\",{\"1\":{\"370\":1}}],[\"对读取的记录加共享锁\",{\"1\":{\"370\":1}}],[\"对表结构的更改操作\",{\"1\":{\"364\":1}}],[\"对数据的修改就是永久的\",{\"1\":{\"361\":1}}],[\"对称的二叉树\",{\"0\":{\"299\":1}}],[\"对应结构体的链表\",{\"1\":{\"1132\":1}}],[\"对应本文中介绍的\",{\"1\":{\"991\":1}}],[\"对应时刻\",{\"1\":{\"360\":2}}],[\"对应\",{\"1\":{\"297\":3}}],[\"对应的实例会在全局变量\",{\"1\":{\"1133\":1}}],[\"对应的目标状态是什么\",{\"1\":{\"1009\":1}}],[\"对应的值\",{\"1\":{\"414\":1}}],[\"对应的事务状态设置为\",{\"1\":{\"360\":1}}],[\"对应的交易状态为\",{\"1\":{\"256\":1}}],[\"对应的就是一个代币\",{\"1\":{\"152\":1}}],[\"对应的\",{\"1\":{\"62\":1}}],[\"对word1里的元素全部做删除操作\",{\"1\":{\"266\":1}}],[\"对它们进行加密\",{\"1\":{\"193\":1}}],[\"对许多常用登录服务的内置支持\",{\"1\":{\"193\":1}}],[\"对用户来说贷款得来的pusd带来的价值小于11\",{\"1\":{\"176\":1}}],[\"对只读权限的分支可以逻辑上进行增量地修改\",{\"1\":{\"78\":1}}],[\"对\",{\"1\":{\"74\":2,\"356\":1,\"360\":1,\"395\":1,\"403\":4,\"426\":1,\"431\":1,\"433\":1,\"577\":1,\"646\":1,\"978\":1}}],[\"对于int类型的指针变量\",{\"1\":{\"1188\":1}}],[\"对于指针类型\",{\"1\":{\"1188\":1}}],[\"对于map类型\",{\"1\":{\"1188\":1}}],[\"对于数组和切片类型\",{\"1\":{\"1188\":1}}],[\"对于小于16字节的对象\",{\"1\":{\"1150\":1}}],[\"对于已签名的令牌来说\",{\"1\":{\"1047\":1}}],[\"对于以上例子来说\",{\"1\":{\"1034\":1}}],[\"对于一些全局性的选项\",{\"1\":{\"991\":1}}],[\"对于不方便直接请求的http\",{\"1\":{\"980\":1}}],[\"对于文件夹则会在其内部的所有文件中查找关键词\",{\"1\":{\"915\":1}}],[\"对于文件而言\",{\"1\":{\"915\":1}}],[\"对于迭代器的用法就不会陌生\",{\"1\":{\"826\":1}}],[\"对于经济体而言\",{\"1\":{\"804\":1}}],[\"对于大多数人来说\",{\"1\":{\"788\":1}}],[\"对于我们的目的来说是优秀的技术\",{\"1\":{\"724\":1}}],[\"对于我们来说\",{\"1\":{\"673\":1}}],[\"对于绝大多数人来说\",{\"1\":{\"695\":1}}],[\"对于绝大多数人而言\",{\"1\":{\"533\":2}}],[\"对于固守型思维的人来说失败会让自己无法面对周围的人\",{\"1\":{\"674\":1}}],[\"对于跳跃点的智慧化\",{\"1\":{\"588\":1}}],[\"对于完美主义者来说\",{\"1\":{\"585\":1}}],[\"对于这些道路\",{\"1\":{\"584\":1}}],[\"对于任何听起来稍微有趣的职业\",{\"1\":{\"584\":1}}],[\"对于传统观念来说\",{\"1\":{\"580\":1}}],[\"对于你的那个特定信念来说\",{\"1\":{\"575\":1}}],[\"对于那些还没有开始职业生涯\",{\"1\":{\"569\":1}}],[\"对于用户而言\",{\"1\":{\"533\":1}}],[\"对于全世界而言\",{\"1\":{\"533\":1}}],[\"对于字符串而言\",{\"1\":{\"468\":1}}],[\"对于前者而言\",{\"1\":{\"446\":1}}],[\"对于步骤3获得的每个键名\",{\"1\":{\"431\":1}}],[\"对于监视同一个主服务器的多个sentinel来说\",{\"1\":{\"426\":1}}],[\"对于监视同一个服务器的多个sentinel来说\",{\"1\":{\"426\":1}}],[\"对于每个配置纪元\",{\"1\":{\"433\":1}}],[\"对于每个与sentinel连接的服务器\",{\"1\":{\"426\":1}}],[\"对于每个被sentinel监视的主服务器来说\",{\"1\":{\"426\":1}}],[\"对于每一个dp\",{\"1\":{\"257\":1}}],[\"对于初次复制来说\",{\"1\":{\"425\":1}}],[\"对于redis的事务功能来说\",{\"1\":{\"424\":1}}],[\"对于网络\",{\"1\":{\"412\":1}}],[\"对于频繁访问的数据\",{\"1\":{\"377\":1}}],[\"对于快照读\",{\"1\":{\"362\":1}}],[\"对于使用\",{\"1\":{\"362\":1}}],[\"对于处于\",{\"1\":{\"360\":1}}],[\"对于可重复读隔离级别的事务是启动事务时生成一个\",{\"1\":{\"356\":1}}],[\"对于读提交隔离级别的事务而言\",{\"1\":{\"356\":1}}],[\"对于背包问题其实状态都是可以压缩的\",{\"1\":{\"236\":1}}],[\"对于背包问题有一种写法是用二维数组dp\",{\"1\":{\"235\":1}}],[\"对于组合而言\",{\"1\":{\"218\":1}}],[\"对于排除重复元素的一定要排序好\",{\"1\":{\"212\":1}}],[\"对于普通人来说就不需要担心稳定币的价格会突然下降\",{\"1\":{\"180\":1}}],[\"对于许多新开发者来说\",{\"1\":{\"140\":1}}],[\"对于帮助您降低交易费用并帮助在网络上更好地安排交易至关重要\",{\"1\":{\"122\":1}}],[\"对于更复杂的交易\",{\"1\":{\"122\":1}}],[\"对于运行时和用户\",{\"1\":{\"122\":1}}],[\"对于\",{\"1\":{\"49\":1,\"57\":1,\"360\":1,\"362\":3,\"473\":1,\"991\":1,\"1138\":2}}],[\"对于linux而言\",{\"1\":{\"46\":1}}],[\"简要介绍\",{\"0\":{\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1}}],[\"简而言之\",{\"1\":{\"723\":1}}],[\"简而言之solana的开发分为两部分\",{\"1\":{\"110\":1}}],[\"简述\",{\"1\":{\"437\":1}}],[\"简称dp\",{\"1\":{\"224\":1}}],[\"简化了系统接口\",{\"1\":{\"926\":1}}],[\"简化对象创建过程\",{\"1\":{\"889\":1}}],[\"简化设计\",{\"1\":{\"150\":1}}],[\"简化为了\",{\"1\":{\"58\":1}}],[\"简介\",{\"0\":{\"109\":1,\"144\":1}}],[\"简介以太坊\",{\"0\":{\"102\":1}}],[\"简介比特币\",{\"0\":{\"93\":1}}],[\"简单例子\",{\"0\":{\"1161\":1}}],[\"简单排序的总结\",{\"1\":{\"946\":1}}],[\"简单工厂\",{\"0\":{\"883\":1}}],[\"简单吧\",{\"1\":{\"451\":1}}],[\"简单动态字符串\",{\"0\":{\"393\":1},\"1\":{\"393\":1,\"402\":1}}],[\"简单的情况\",{\"1\":{\"1142\":1}}],[\"简单的将一些积极的形容词放在前面\",{\"1\":{\"622\":1}}],[\"简单的来讲就是在当时的电话大多数都是传统电话\",{\"1\":{\"528\":1}}],[\"简单的\",{\"1\":{\"377\":2}}],[\"简单的说\",{\"1\":{\"62\":1}}],[\"简单说\",{\"1\":{\"116\":1}}],[\"简单来说就是管理\",{\"1\":{\"1009\":1}}],[\"简单来说就是直接模拟我们需要测试方法中的一些接口\",{\"1\":{\"956\":1}}],[\"简单来说就是只要我们相互连同一个wifi\",{\"1\":{\"494\":1}}],[\"简单来说就是在局域网下可以自由传输文件\",{\"1\":{\"493\":1}}],[\"简单来说t3\",{\"1\":{\"191\":1}}],[\"简单来说\",{\"1\":{\"95\":1,\"412\":1,\"903\":1,\"946\":1,\"1008\":1,\"1009\":1,\"1033\":1}}],[\"正在等待该\",{\"1\":{\"1137\":1}}],[\"正在等待某些条件满足\",{\"1\":{\"1132\":1}}],[\"正在某个线程上运行\",{\"1\":{\"1132\":1}}],[\"正在扫描栈空间\",{\"1\":{\"1132\":1}}],[\"正在执行系统调用\",{\"1\":{\"1132\":1}}],[\"正在被利用的最新漏洞等等\",{\"1\":{\"584\":1}}],[\"正好实现orderinfogetter接口\",{\"1\":{\"980\":1}}],[\"正好符合我们的需求\",{\"1\":{\"385\":1}}],[\"正好符合递推公式逐步累加起来\",{\"1\":{\"259\":1}}],[\"正确\",{\"1\":{\"959\":1}}],[\"正确选择与判断从来都不是学校课程考试范围内可衡量的\",{\"1\":{\"735\":1}}],[\"正确比较\",{\"0\":{\"683\":1}}],[\"正确的提问应该是这个互联网究竟哪里出了问题\",{\"1\":{\"533\":1}}],[\"正确的写法应该是这样\",{\"1\":{\"58\":1}}],[\"正如\",{\"1\":{\"757\":1}}],[\"正如李笑来所说\",{\"1\":{\"646\":1}}],[\"正如我们先前注意到的\",{\"1\":{\"627\":1}}],[\"正如我们之前讨论过的\",{\"1\":{\"581\":1,\"586\":1}}],[\"正如我们稍后将讨论的那样\",{\"1\":{\"577\":1}}],[\"正是当我们认为自己已经完全搞清楚人生时\",{\"1\":{\"588\":1}}],[\"正是基于此方法可以允许在镜像不变的基础上允许用户在其上进行一些写操作\",{\"1\":{\"61\":1}}],[\"正则表达式匹配\",{\"0\":{\"291\":1}}],[\"正序遍历\",{\"1\":{\"235\":1}}],[\"正常模式下的互斥锁能够提供更好地性能\",{\"1\":{\"1142\":1}}],[\"正常模式和饥饿模式\",{\"1\":{\"1142\":1}}],[\"正常工作\",{\"1\":{\"1073\":1}}],[\"正常情况下\",{\"1\":{\"382\":1}}],[\"正常情况下不到一美分\",{\"1\":{\"109\":1}}],[\"正常关闭之前\",{\"1\":{\"377\":1}}],[\"正常\",{\"1\":{\"169\":1}}],[\"完整重同步的执行步骤和sync命令的执行步骤基本一样\",{\"1\":{\"425\":1}}],[\"完成的\",{\"1\":{\"1142\":1}}],[\"完成单元测试\",{\"1\":{\"981\":1}}],[\"完成本篇教程\",{\"1\":{\"508\":1}}],[\"完成了一个区块链底层系统rum\",{\"1\":{\"505\":1}}],[\"完成刷盘\",{\"1\":{\"360\":1}}],[\"完成后\",{\"1\":{\"357\":1}}],[\"完成\",{\"1\":{\"60\":1,\"386\":1}}],[\"完全符合\",{\"1\":{\"988\":1}}],[\"完全就不应该当作一个网站\",{\"1\":{\"660\":1}}],[\"完全可以\",{\"1\":{\"627\":1}}],[\"完全一样\",{\"1\":{\"405\":1}}],[\"完全解决幻读了吗\",{\"1\":{\"362\":1}}],[\"完全平方数\",{\"0\":{\"245\":1}}],[\"完全背包和01背包问题唯一不同的地方就是\",{\"1\":{\"241\":1}}],[\"完全背包问题\",{\"0\":{\"241\":1}}],[\"完全取决于算法\",{\"1\":{\"186\":1}}],[\"完全垄断意味着随意操纵价格\",{\"1\":{\"9\":1}}],[\"完全垄断市场\",{\"1\":{\"8\":2}}],[\"完全竞争市场\",{\"1\":{\"8\":1}}],[\"完全竞争假设\",{\"0\":{\"8\":1}}],[\"虽然大多数时候我们只会使用\",{\"1\":{\"1166\":1}}],[\"虽然该变量被声明成大小固定的数组\",{\"1\":{\"1139\":1}}],[\"虽然最多可以创建\",{\"1\":{\"1134\":1}}],[\"虽然最初意识到这样是一种重新构建\",{\"1\":{\"641\":1}}],[\"虽然body是\",{\"1\":{\"1080\":1}}],[\"虽然比特币已经出现几年了\",{\"1\":{\"799\":1}}],[\"虽然\",{\"1\":{\"724\":1,\"725\":1,\"1132\":1,\"1144\":1}}],[\"虽然完美的客观我们可能做不到\",{\"1\":{\"683\":1}}],[\"虽然拉里佩奇在创业之初并没有远大的愿景\",{\"1\":{\"674\":1}}],[\"虽然互联网上存在大量的无用信息\",{\"1\":{\"649\":1}}],[\"虽然数字技术正在被用来吸引我们越来越多的注意力\",{\"1\":{\"648\":1}}],[\"虽然有很多人在讨论这个事情\",{\"1\":{\"637\":1}}],[\"虽然有几天没有交\",{\"1\":{\"553\":1}}],[\"虽然确实理所应当\",{\"1\":{\"592\":1}}],[\"虽然自己的钱是切切实实损失了\",{\"1\":{\"592\":1}}],[\"虽然丢了几年间不断投入的钱\",{\"1\":{\"592\":1}}],[\"虽然过去几年一直在mixin上买btc\",{\"1\":{\"592\":1}}],[\"虽然上大学的一年里\",{\"1\":{\"552\":1}}],[\"虽然腾讯不是什么好果子\",{\"1\":{\"551\":1}}],[\"虽然我每天使用微信的时间不及半个小时\",{\"1\":{\"551\":1}}],[\"虽然我们在\",{\"1\":{\"1136\":1}}],[\"虽然我们可以通过加\",{\"1\":{\"387\":1}}],[\"虽然我们想通过重试的方式解决问题\",{\"1\":{\"385\":1}}],[\"虽然这些早期论坛随着移动互联网分走的流量\",{\"1\":{\"532\":1}}],[\"虽然这些网站的表达方式其实一直以来都没怎么变过\",{\"1\":{\"532\":1}}],[\"虽然明白未来会呼啸而来\",{\"1\":{\"531\":1}}],[\"虽然学习的复利效应巨大\",{\"1\":{\"525\":1}}],[\"虽然很简单\",{\"1\":{\"514\":1}}],[\"虽然很多教学视频已经做了这样的工作\",{\"1\":{\"93\":1}}],[\"虽然已白了头\",{\"1\":{\"505\":1}}],[\"虽然语言级别只有上述的\",{\"1\":{\"471\":1}}],[\"虽然主从服务器成功建立起了套接字连接\",{\"1\":{\"425\":1}}],[\"虽然redis将生成新aof文件替换旧aof文件的功能命名为\",{\"1\":{\"422\":1}}],[\"虽然intset结构将contents属性声明为int8\",{\"1\":{\"398\":1}}],[\"虽然先于\",{\"1\":{\"383\":1}}],[\"虽然说mysql的数据是存储在磁盘里的\",{\"1\":{\"376\":1}}],[\"虽然相同范围的间隙锁是多个事务相互兼容的\",{\"1\":{\"373\":1}}],[\"虽然每个线程有自己\",{\"1\":{\"358\":1}}],[\"虽然不是必选项\",{\"1\":{\"553\":1}}],[\"虽然不需要对链上程序进行更改来支持版本化交易的新功能\",{\"1\":{\"138\":1}}],[\"虽然不会看到这个文件\",{\"1\":{\"46\":1}}],[\"虽然交易的默认计算单位限制在大多数情况下适用于简单交易\",{\"1\":{\"122\":1}}],[\"虽然表面上我们好像是在本机执行各种\",{\"1\":{\"60\":1}}],[\"与加锁的过程正好相反\",{\"1\":{\"1143\":1}}],[\"与加锁过程相比就很简单\",{\"1\":{\"1142\":1}}],[\"与饥饿模式相比\",{\"1\":{\"1142\":1}}],[\"与新创建的\",{\"1\":{\"1142\":1}}],[\"与我们在前面章节提到的\",{\"1\":{\"1132\":1}}],[\"与命令行选项的区别\",{\"1\":{\"991\":1}}],[\"与之前做比较\",{\"1\":{\"946\":1,\"947\":3}}],[\"与之前的虚悬镜像不同\",{\"1\":{\"53\":1}}],[\"与身边人闲聊时总会进入讨论热点中\",{\"1\":{\"734\":1}}],[\"与热点类似\",{\"1\":{\"734\":1}}],[\"与封面图片类似\",{\"1\":{\"734\":1}}],[\"与十五年前不同\",{\"1\":{\"709\":1}}],[\"与传统的生产资料相比\",{\"1\":{\"646\":1}}],[\"与坚持相关的品质\",{\"1\":{\"583\":1}}],[\"与日常工作态度相对\",{\"1\":{\"582\":1}}],[\"与渴望本身同样重要的是它们的优先级\",{\"1\":{\"577\":1}}],[\"与你真实的自我重新连接\",{\"1\":{\"575\":1}}],[\"与具破坏欲望的你同在一触须\",{\"1\":{\"573\":1}}],[\"与那些让我感到更充实的决策过程并列起来看\",{\"1\":{\"572\":1}}],[\"与其毫无目的地消费着这些\",{\"1\":{\"739\":1}}],[\"与其听新鲜词\",{\"1\":{\"528\":1}}],[\"与其把dp\",{\"1\":{\"236\":1}}],[\"与字符串删除相关的方法有4个\",{\"1\":{\"480\":1}}],[\"与替换有关的方法有三个\",{\"1\":{\"479\":1}}],[\"与push方法不同\",{\"1\":{\"478\":1}}],[\"与被选中节点进行握手\",{\"1\":{\"435\":1}}],[\"与此相反\",{\"1\":{\"432\":1}}],[\"与此同时自己也会学到相应的知识\",{\"1\":{\"792\":1}}],[\"与此同时计算机方向毕业的学生也大受欢迎\",{\"1\":{\"764\":1}}],[\"与此同时\",{\"1\":{\"385\":1,\"581\":1,\"717\":1}}],[\"与这个连接相关联的节点\",{\"1\":{\"427\":1}}],[\"与客户端进行\",{\"1\":{\"342\":1}}],[\"与模式\",{\"1\":{\"291\":1}}],[\"与运算\",{\"1\":{\"287\":1}}],[\"与s\",{\"1\":{\"267\":6,\"268\":3}}],[\"与text2\",{\"1\":{\"260\":2}}],[\"与dp\",{\"1\":{\"257\":1}}],[\"与来自流行托管服务提供商的数据库配合使用效果很好\",{\"1\":{\"193\":1}}],[\"与黄金挂钩的有ekon\",{\"1\":{\"182\":1}}],[\"与欧元挂钩的有euroc\",{\"1\":{\"182\":1}}],[\"与美元挂钩的有泰达公司发布的usdt\",{\"1\":{\"182\":1}}],[\"与资产类似\",{\"1\":{\"150\":1}}],[\"与交易确认相关的问题很常见\",{\"1\":{\"140\":1}}],[\"与帐户地址数组非常相似\",{\"1\":{\"117\":1}}],[\"与btc的utxo模式不同\",{\"1\":{\"111\":1}}],[\"与存储的数据量成正比\",{\"1\":{\"111\":1}}],[\"与\",{\"1\":{\"60\":1,\"257\":1,\"260\":4,\"263\":1,\"264\":5,\"265\":5,\"266\":4,\"267\":4,\"297\":1,\"377\":1,\"424\":1,\"433\":1,\"449\":1,\"481\":1,\"571\":1,\"1135\":6}}],[\"好在go\",{\"1\":{\"981\":1}}],[\"好消息是\",{\"1\":{\"575\":1}}],[\"好让用户产生更多的数据\",{\"1\":{\"533\":1}}],[\"好吧我还是打开抖音去刷视频吧\",{\"1\":{\"739\":1}}],[\"好吧\",{\"1\":{\"521\":1,\"572\":1}}],[\"好像正好是21天\",{\"1\":{\"660\":1}}],[\"好像也是微信\",{\"1\":{\"553\":1}}],[\"好像不用也可以\",{\"1\":{\"493\":1}}],[\"好像没什么解释的\",{\"1\":{\"295\":1}}],[\"好\",{\"1\":{\"384\":2}}],[\"好处是不会覆盖之前ctx的metadata\",{\"1\":{\"1094\":1}}],[\"好处是不会导致\",{\"1\":{\"411\":1}}],[\"好处是可以作为goroutine池子用的时候拿\",{\"1\":{\"1055\":1}}],[\"好处\",{\"1\":{\"150\":1,\"151\":10,\"393\":1,\"402\":1,\"722\":1}}],[\"好了\",{\"1\":{\"59\":1,\"388\":1,\"510\":1,\"680\":1}}],[\"好评一下\",{\"1\":{\"8\":1}}],[\"注入do\",{\"1\":{\"1242\":1}}],[\"注释\",{\"1\":{\"1079\":1}}],[\"注释等\",{\"1\":{\"58\":1}}],[\"注册拦截器\",{\"0\":{\"1097\":1}}],[\"注册事件处理\",{\"0\":{\"1053\":1}}],[\"注册同事\",{\"1\":{\"833\":1}}],[\"注重隐私的人并等不断发展至今\",{\"1\":{\"798\":1}}],[\"注重隐私的人\",{\"1\":{\"551\":1}}],[\"注销\",{\"1\":{\"193\":1}}],[\"注\",{\"1\":{\"66\":1,\"293\":1}}],[\"注意这个集合可以是空的\",{\"1\":{\"1009\":1}}],[\"注意这里一定不能将for改为if\",{\"1\":{\"275\":1}}],[\"注意这里我没有列出当s\",{\"1\":{\"267\":1}}],[\"注意这里不是要dp\",{\"1\":{\"257\":1}}],[\"注意这里说的是\",{\"1\":{\"252\":1}}],[\"注意这里是考虑\",{\"1\":{\"248\":1}}],[\"注意第一天为周日\",{\"1\":{\"1003\":1}}],[\"注意导入版本\",{\"1\":{\"976\":1}}],[\"注意决策质量是未来自己的满意程度决定的无法由他人评价\",{\"1\":{\"759\":1}}],[\"注意力是时间加上意向性\",{\"1\":{\"610\":1}}],[\"注意我这里的一个名词传统互联网\",{\"1\":{\"532\":1}}],[\"注意到这些名字都以\",{\"1\":{\"471\":1}}],[\"注意与\",{\"1\":{\"448\":1}}],[\"注意是一个列表\",{\"1\":{\"362\":1}}],[\"注意是很大程度避免\",{\"1\":{\"361\":1}}],[\"注意是左闭右闭\",{\"1\":{\"267\":1}}],[\"注意写入到\",{\"1\":{\"357\":1,\"360\":1}}],[\"注意你不能在第\",{\"1\":{\"253\":1}}],[\"注意利润不能是\",{\"1\":{\"252\":1}}],[\"注意题目描述中是凑成总金额的硬币组合数\",{\"1\":{\"242\":1}}],[\"注意mixin用户没有email\",{\"1\":{\"195\":1}}],[\"注意填入\",{\"1\":{\"192\":1}}],[\"注意\",{\"1\":{\"4\":1,\"40\":1,\"68\":1,\"74\":1,\"192\":1,\"193\":1,\"253\":1,\"254\":1,\"255\":1,\"362\":1,\"377\":1,\"413\":1,\"418\":1,\"436\":1,\"525\":1,\"740\":1,\"959\":2,\"975\":1,\"1005\":1,\"1018\":1,\"1194\":1}}],[\"良好的格式\",{\"1\":{\"58\":1}}],[\"脚本就可以了\",{\"1\":{\"437\":1}}],[\"脚本\",{\"1\":{\"58\":1}}],[\"脚本一样把每个命令对应一个\",{\"1\":{\"58\":1}}],[\"脚本一样可以执行命令\",{\"1\":{\"58\":1}}],[\"要创建签名部分\",{\"1\":{\"1047\":1}}],[\"要连带修改不确定几处地方\",{\"1\":{\"1010\":1}}],[\"要使用cobra创建自定义命令行的程序\",{\"1\":{\"989\":1}}],[\"要使用全局锁flush\",{\"1\":{\"364\":1}}],[\"要尊重他人的价值观\",{\"1\":{\"666\":1}}],[\"要在浏览器中搞一个实时聊天\",{\"1\":{\"1073\":1}}],[\"要在竞争激烈的市场中取得成功\",{\"1\":{\"649\":1}}],[\"要在字典里面查找一个键的话\",{\"1\":{\"396\":1}}],[\"要解决这个问题\",{\"1\":{\"586\":1}}],[\"要做一个完整的\",{\"1\":{\"573\":1}}],[\"要去往何处\",{\"1\":{\"572\":1}}],[\"要组建一个真正可工作的集群\",{\"1\":{\"427\":1}}],[\"要求\",{\"0\":{\"1221\":1}}],[\"要求右边的参数必须为字符串的切片引用\",{\"1\":{\"481\":1}}],[\"要求所有收到这条消息\",{\"1\":{\"433\":1}}],[\"要求从服务器复制主服务器\",{\"1\":{\"425\":1}}],[\"要求时间复杂度是o\",{\"1\":{\"330\":1}}],[\"要求时间复杂度为o\",{\"1\":{\"315\":1}}],[\"要看服务器是主服务器还是从服务器\",{\"1\":{\"414\":1}}],[\"要\",{\"1\":{\"395\":1,\"426\":2}}],[\"要尽可能地保证\",{\"1\":{\"386\":1}}],[\"要比读数据库\",{\"1\":{\"384\":1}}],[\"要更新\",{\"1\":{\"384\":1,\"386\":1}}],[\"要避免预读失效带来影响\",{\"1\":{\"377\":1}}],[\"要避免这类特殊场景下发生幻读的现象的话\",{\"1\":{\"362\":1}}],[\"要加上\",{\"1\":{\"370\":1}}],[\"要释放表锁\",{\"1\":{\"366\":1}}],[\"要么结构合理而难以使用\",{\"1\":{\"721\":1}}],[\"要么没有批判性思考\",{\"1\":{\"627\":1}}],[\"要么这个观点错的离谱\",{\"1\":{\"595\":1}}],[\"要么是两者的某种结合\",{\"1\":{\"578\":1}}],[\"要么是先天天赋的基因彩票游戏\",{\"1\":{\"578\":1}}],[\"要么是运气的彩票游戏\",{\"1\":{\"578\":1}}],[\"要么是你这位厨师制造的\",{\"1\":{\"575\":1}}],[\"要么是外部的某人植入给我们的\",{\"1\":{\"575\":1}}],[\"要么直接panic\",{\"1\":{\"449\":1}}],[\"要么一直运行\",{\"1\":{\"449\":1}}],[\"要么就是慢路径\",{\"1\":{\"1135\":1}}],[\"要么就一个都不执行\",{\"1\":{\"424\":1}}],[\"要么就一个操作也不执行\",{\"1\":{\"424\":1}}],[\"要么就小于所有现有元素\",{\"1\":{\"398\":1}}],[\"要么全是新值\",{\"1\":{\"361\":1}}],[\"要么全部不完成\",{\"1\":{\"361\":1}}],[\"要么全部完成\",{\"1\":{\"361\":1}}],[\"要么完全失败\",{\"1\":{\"116\":1}}],[\"要不全部失败\",{\"1\":{\"360\":1}}],[\"要不然很容易看懵了\",{\"1\":{\"236\":1}}],[\"要搞清楚这两者之间的区别\",{\"1\":{\"268\":1}}],[\"要初始值\",{\"1\":{\"259\":1}}],[\"要从1开始\",{\"1\":{\"259\":1}}],[\"要dp\",{\"1\":{\"257\":1}}],[\"要取所有\",{\"1\":{\"244\":1}}],[\"要跟踪特定代币的每个单位的个人所有权\",{\"1\":{\"135\":1}}],[\"要快速检查已验证的程序\",{\"1\":{\"128\":1}}],[\"要执行的指令数组\",{\"1\":{\"116\":1}}],[\"要原子性处理的指令列表\",{\"1\":{\"116\":1}}],[\"要想准确评估这条道路是什么样的\",{\"1\":{\"579\":1}}],[\"要想达到很高的高度\",{\"1\":{\"578\":1}}],[\"要想在你的\",{\"1\":{\"578\":1}}],[\"要想设计一个高可用的\",{\"1\":{\"413\":1}}],[\"要想做到强一致\",{\"1\":{\"387\":1}}],[\"要想更深入就只能去翻源代码了\",{\"1\":{\"149\":1}}],[\"要想实现虚拟化\",{\"1\":{\"75\":1}}],[\"要想列出已经下载下来的镜像\",{\"1\":{\"51\":1}}],[\"要清理请使用以下命令\",{\"1\":{\"74\":1}}],[\"要经常提醒自己\",{\"1\":{\"58\":1}}],[\"层次结构很容易看出来\",{\"1\":{\"577\":1}}],[\"层的跨度span属性记录了两个节点之间的距离\",{\"1\":{\"397\":1}}],[\"层的\",{\"1\":{\"358\":1}}],[\"层还会生成一条\",{\"1\":{\"358\":1}}],[\"层更新记录前\",{\"1\":{\"357\":1}}],[\"层生成的日志\",{\"1\":{\"355\":1}}],[\"层实现的日志\",{\"1\":{\"358\":1}}],[\"层实现\",{\"1\":{\"341\":1}}],[\"层序遍历没啥好解释的\",{\"1\":{\"303\":1}}],[\"层\",{\"1\":{\"58\":4}}],[\"层镜像\",{\"1\":{\"58\":1}}],[\"结合对gin框架主干代码以及其调用的部分go源码的阅读\",{\"1\":{\"1057\":1}}],[\"结合go\",{\"1\":{\"977\":1}}],[\"结束状态\",{\"1\":{\"1009\":1}}],[\"结束temp数组\",{\"1\":{\"948\":1}}],[\"结束时得到的数额减少\",{\"1\":{\"28\":1}}],[\"结束时间\",{\"1\":{\"25\":1}}],[\"结构提类型和指针类型是不同的\",{\"1\":{\"1138\":1}}],[\"结构加入\",{\"1\":{\"1137\":1}}],[\"结构并将其加入\",{\"1\":{\"1137\":1}}],[\"结构并设置这一次阻塞发送的相关信息\",{\"1\":{\"1137\":1}}],[\"结构\",{\"1\":{\"1137\":1}}],[\"结构体反射\",{\"0\":{\"1192\":1}}],[\"结构体对外唯一暴露的方法\",{\"1\":{\"1145\":1}}],[\"结构体的\",{\"1\":{\"1143\":1}}],[\"结构体是接口类型的核心组成部分\",{\"1\":{\"1139\":1}}],[\"结构体在初始化时都需要传入一个互斥锁\",{\"1\":{\"1146\":1}}],[\"结构体在\",{\"1\":{\"1139\":1}}],[\"结构体表示不包含任何方法的\",{\"1\":{\"1139\":1}}],[\"结构体表示包含方法的接口\",{\"1\":{\"1139\":1}}],[\"结构体指针初始化变量\",{\"1\":{\"1138\":1}}],[\"结构体指针实现接口\",{\"1\":{\"1138\":1}}],[\"结构体初始化变量\",{\"1\":{\"1138\":1}}],[\"结构体实现接口\",{\"1\":{\"1138\":1}}],[\"结构体中都只包含一个用于标识代码块是否执行过的\",{\"1\":{\"1145\":1}}],[\"结构体中还包含一个总共占用\",{\"1\":{\"1144\":1}}],[\"结构体中迁移过来的\",{\"1\":{\"1139\":1}}],[\"结构体中重要字段的意思\",{\"1\":{\"1135\":1}}],[\"结构体中包含哪些内容\",{\"1\":{\"1132\":1}}],[\"结构体\",{\"1\":{\"821\":1,\"967\":1,\"1132\":2,\"1135\":3,\"1137\":1,\"1139\":1,\"1144\":1,\"1145\":1,\"1193\":1}}],[\"结构体定义了按照作者顺序遍历书架的迭代器\",{\"1\":{\"827\":1}}],[\"结构体定义了按照书名顺序遍历书架的迭代器\",{\"1\":{\"827\":1}}],[\"结构体定义了书架对象\",{\"1\":{\"827\":1}}],[\"结构体定义了书籍对象\",{\"1\":{\"827\":1}}],[\"结构体定义了命令的调用者\",{\"1\":{\"820\":1}}],[\"结构体定义了切换频道的命令\",{\"1\":{\"820\":1}}],[\"结构体定义了关闭电视机的命令\",{\"1\":{\"820\":1}}],[\"结构体定义了打开电视机的命令\",{\"1\":{\"820\":1}}],[\"结构体定义了电视机接收者\",{\"1\":{\"820\":1}}],[\"结构良好的\",{\"1\":{\"721\":1}}],[\"结实比特币也是缘于它攀升的价格\",{\"1\":{\"509\":1}}],[\"结\",{\"1\":{\"433\":1,\"435\":1}}],[\"结尾了吗\",{\"1\":{\"471\":1}}],[\"结尾\",{\"1\":{\"418\":1}}],[\"结尾t出现的次数\",{\"1\":{\"264\":1}}],[\"结尾s序列\",{\"1\":{\"264\":1}}],[\"结尾最长上升子序列的长度\",{\"1\":{\"257\":1}}],[\"结果群众的财富最终都落入了他的口袋中\",{\"1\":{\"738\":1}}],[\"结果好不容易到能够使用ai时\",{\"1\":{\"631\":1}}],[\"结果就是\",{\"1\":{\"552\":1}}],[\"结果就是产生非常臃肿\",{\"1\":{\"58\":1}}],[\"结果\",{\"1\":{\"478\":1,\"479\":3,\"480\":3,\"910\":1,\"967\":1}}],[\"结果当然是报错了\",{\"1\":{\"461\":1}}],[\"结果集合\",{\"1\":{\"213\":1}}],[\"结论\",{\"0\":{\"153\":1}}],[\"构造一个限流器\",{\"0\":{\"1034\":1}}],[\"构造函数newserver\",{\"1\":{\"981\":1}}],[\"构造函数\",{\"1\":{\"981\":3}}],[\"构造函数创建一个按照作者顺序遍历书架的迭代器\",{\"1\":{\"827\":1}}],[\"构造函数创建一个按照书名顺序遍历书架的迭代器\",{\"1\":{\"827\":1}}],[\"构造函数创建一个书架对象\",{\"1\":{\"827\":1}}],[\"构造函数创建一个书籍对象\",{\"1\":{\"827\":1}}],[\"构造函数创建一个命令的调用者\",{\"1\":{\"820\":1}}],[\"构造函数创建一个切换频道的命令\",{\"1\":{\"820\":1}}],[\"构造函数创建一个关闭电视机的命令\",{\"1\":{\"820\":1}}],[\"构造函数创建一个打开电视机的命令\",{\"1\":{\"820\":1}}],[\"构造函数创建一个电视机接收者\",{\"1\":{\"820\":1}}],[\"构\",{\"1\":{\"433\":1,\"435\":2}}],[\"构成一个包含多个节点的集群\",{\"1\":{\"427\":1}}],[\"构成新的镜像\",{\"1\":{\"58\":1}}],[\"构建属于我自己的世界\",{\"1\":{\"758\":1}}],[\"构建为一个整体对我们来说非常有益\",{\"1\":{\"724\":1}}],[\"构建出\",{\"1\":{\"345\":1}}],[\"构建一个允许用户借入资金以增加交易仓位规模的平台\",{\"1\":{\"151\":1}}],[\"构建成功后\",{\"1\":{\"59\":1}}],[\"构建镜像\",{\"0\":{\"59\":1}}],[\"构建\",{\"1\":{\"56\":1,\"57\":1}}],[\"构建新的镜像\",{\"1\":{\"46\":1}}],[\"xyz\",{\"1\":{\"1238\":1}}],[\"xm\",{\"1\":{\"1226\":1}}],[\"x86\",{\"1\":{\"1067\":2}}],[\"x3f\",{\"1\":{\"483\":3}}],[\"x74\",{\"1\":{\"483\":2}}],[\"x73\",{\"1\":{\"483\":2}}],[\"x75\",{\"1\":{\"483\":2}}],[\"x52\",{\"1\":{\"483\":2}}],[\"x锁\",{\"1\":{\"370\":1}}],[\"xin和box没有丢\",{\"1\":{\"591\":1}}],[\"xin\",{\"1\":{\"557\":1}}],[\"xin等\",{\"1\":{\"36\":1}}],[\"xiao\",{\"1\":{\"543\":1}}],[\"xiaolai\",{\"1\":{\"540\":1}}],[\"xid123\",{\"1\":{\"814\":1}}],[\"xid\",{\"1\":{\"360\":8}}],[\"xa\",{\"1\":{\"360\":6}}],[\"xx\",{\"1\":{\"353\":2,\"977\":1}}],[\"xxx的get服务\",{\"1\":{\"1193\":1}}],[\"xxx来获取\",{\"1\":{\"1018\":1}}],[\"xxx\",{\"1\":{\"192\":3,\"357\":1,\"358\":1,\"977\":2,\"988\":4,\"1181\":1,\"1193\":1}}],[\"xxxxx\",{\"1\":{\"1047\":1}}],[\"xxxx\",{\"1\":{\"60\":1,\"194\":1,\"988\":1}}],[\"xor\",{\"1\":{\"330\":4}}],[\"xn\",{\"1\":{\"288\":1}}],[\"x++\",{\"1\":{\"276\":1}}],[\"x\",{\"1\":{\"58\":1,\"164\":1,\"230\":1,\"239\":3,\"276\":4,\"284\":1,\"288\":12,\"301\":4,\"320\":3,\"330\":3,\"371\":9,\"372\":1,\"373\":7,\"383\":5,\"384\":12,\"386\":12,\"580\":2,\"754\":1,\"972\":1,\"973\":7,\"977\":4,\"1033\":1,\"1055\":1,\"1079\":1,\"1137\":2}}],[\"xzf\",{\"1\":{\"58\":2}}],[\"呢\",{\"1\":{\"58\":1,\"231\":1,\"236\":1,\"242\":1,\"254\":1,\"266\":1,\"945\":1}}],[\"格式化和解析时间\",{\"1\":{\"1213\":1}}],[\"格式化输出\",{\"1\":{\"1207\":1,\"1212\":1}}],[\"格式化\",{\"1\":{\"1026\":1}}],[\"格式为ip\",{\"1\":{\"426\":1}}],[\"格式的内容\",{\"1\":{\"413\":1}}],[\"格式下只会记录一个\",{\"1\":{\"358\":1}}],[\"格式\",{\"1\":{\"58\":2,\"966\":1}}],[\"它基于官方提供的mongo官方驱动器开发实现\",{\"1\":{\"1220\":1}}],[\"它接受一个表示整数的字符串\",{\"1\":{\"1198\":1}}],[\"它接受一个整数值\",{\"1\":{\"1198\":1}}],[\"它存储了程序启动时传递给程序的所有命令行参数\",{\"1\":{\"1163\":1}}],[\"它从指定的\",{\"1\":{\"1153\":2}}],[\"它从头开始设计\",{\"1\":{\"193\":1}}],[\"它封装了\",{\"1\":{\"1153\":1}}],[\"它由操作系统的调度器调度和管理\",{\"1\":{\"1131\":1}}],[\"它由三个字节组成\",{\"1\":{\"117\":1}}],[\"它包含的字段也非常多\",{\"1\":{\"1134\":1}}],[\"它包含一个字段列表\",{\"1\":{\"1088\":1}}],[\"它包含了秒数和纳秒数两个字段\",{\"1\":{\"1087\":1}}],[\"它包括建筑物\",{\"1\":{\"646\":1}}],[\"它允许像调用本地服务一样去调用远程服务\",{\"1\":{\"1063\":1}}],[\"它允许一个对象在其内部状态改变时\",{\"1\":{\"848\":1}}],[\"它用于描述项目如何编译\",{\"1\":{\"1023\":1}}],[\"它与具体的日志库程序强耦合\",{\"1\":{\"981\":1}}],[\"它与与现实接触有关\",{\"1\":{\"575\":1}}],[\"它拥有一个通过http请求获取订单数据的getorders方法\",{\"1\":{\"980\":1}}],[\"它完成的功能就像下面的示例函数\",{\"1\":{\"980\":1}}],[\"它在\",{\"1\":{\"1156\":1}}],[\"它在运行时调度器中的地位与线程在操作系统中差不多\",{\"1\":{\"1132\":1}}],[\"它在运行时通过汇编语言重写可执行文件\",{\"1\":{\"978\":1}}],[\"它在记录日志的时候不需要在堆上分配内存\",{\"1\":{\"1112\":1}}],[\"它在我们对数据表进行操作时会自动加\",{\"1\":{\"367\":1}}],[\"它支持为任意函数及方法进行打桩\",{\"1\":{\"978\":1}}],[\"它具有真正的tcp接口\",{\"1\":{\"976\":1}}],[\"它对应一个正则表达式\",{\"1\":{\"967\":1}}],[\"它对我们来说并不是禁区\",{\"1\":{\"574\":1}}],[\"它向现有的系统添加一个接口\",{\"1\":{\"925\":1}}],[\"它提供了许多函数和类型\",{\"1\":{\"1204\":1}}],[\"它提供了减少对象数量从而改善应用所需的对象结构的方式\",{\"1\":{\"931\":1}}],[\"它提供了比继承更有弹性的替代方案\",{\"1\":{\"920\":1}}],[\"它提供了一系列的函数\",{\"1\":{\"1198\":1}}],[\"它提供了一系列函数来处理字符串的解析\",{\"1\":{\"1197\":1}}],[\"它提供了一些常用的函数和配置选项\",{\"1\":{\"1183\":1}}],[\"它提供了一种方便的方式来定义和解析命令行参数\",{\"1\":{\"1160\":1}}],[\"它提供了一种优雅的方式来处理某些需要高度灵活性和可扩展性的问题\",{\"1\":{\"862\":1}}],[\"它提供了一种顺序访问集合元素的方法\",{\"1\":{\"824\":1}}],[\"它提供了一套完整的开发体验\",{\"1\":{\"191\":1}}],[\"它创建了一个装饰类\",{\"1\":{\"919\":1}}],[\"它能保证多个\",{\"1\":{\"1141\":1}}],[\"它能在\",{\"1\":{\"1134\":1}}],[\"它能提供线程需要的上下文环境\",{\"1\":{\"1134\":1}}],[\"它能将抽象部分与实现部分分离开来\",{\"1\":{\"909\":1}}],[\"它能使不兼容的接口匹配和工作\",{\"1\":{\"903\":1,\"906\":1}}],[\"它遵循单一责任原则\",{\"1\":{\"881\":1}}],[\"它为在超类中创建对象提供了一个接口\",{\"1\":{\"880\":1}}],[\"它非常适合需要运行时配置灵活性和多态性的场景\",{\"1\":{\"876\":1,\"884\":1}}],[\"它非常渴求满足\",{\"1\":{\"573\":1}}],[\"它定义了一种紧凑且独立的方式\",{\"1\":{\"1047\":1}}],[\"它定义了一种一对多的依赖关系\",{\"1\":{\"842\":1}}],[\"它定义了一个作用于某个对象结构中的各个元素的操作\",{\"1\":{\"865\":1}}],[\"它定义了一个算法的骨架\",{\"1\":{\"859\":1}}],[\"它定义了一个对象\",{\"1\":{\"831\":1}}],[\"它定义了一系列的算法\",{\"1\":{\"853\":1}}],[\"它模拟了一个书架上的书籍集合和两种不同的遍历方式\",{\"1\":{\"827\":1}}],[\"它看起来太可怕\",{\"1\":{\"771\":1}}],[\"它看到这个需要大力改革的世界\",{\"1\":{\"573\":1}}],[\"它有自己的成长属性\",{\"1\":{\"800\":1}}],[\"它有着独特的设计理念\",{\"1\":{\"731\":1}}],[\"它有result<t\",{\"1\":{\"446\":1}}],[\"它确实奠定了适当的基础\",{\"1\":{\"725\":1}}],[\"它必然是模块化的\",{\"1\":{\"723\":1}}],[\"它必须尽可能接近真实\",{\"1\":{\"572\":1}}],[\"它被\",{\"1\":{\"706\":1}}],[\"它被关闭了\",{\"1\":{\"706\":1}}],[\"它使得用户对单个对象和组合对象的使用具有一致性\",{\"1\":{\"914\":1}}],[\"它使我们易于非批判地接受被告知的事\",{\"1\":{\"654\":1}}],[\"它使神经紧张\",{\"1\":{\"627\":1}}],[\"它以零边际成本将全人类连接到知识循环中\",{\"1\":{\"649\":1}}],[\"它就会立刻返回\",{\"1\":{\"1142\":1}}],[\"它就会将当前互斥锁切换饥饿模式\",{\"1\":{\"1142\":1}}],[\"它就会成为新的主服务器的从服务器\",{\"1\":{\"426\":1}}],[\"它就是什么\",{\"1\":{\"643\":1}}],[\"它原本是什么就是什么\",{\"1\":{\"637\":2}}],[\"它通常是自发形成的\",{\"1\":{\"626\":1}}],[\"它通常是以引用类型出现\",{\"1\":{\"471\":1}}],[\"它让转行感觉非常冒险和尴尬\",{\"1\":{\"585\":1}}],[\"它加剧了这样一种错觉\",{\"1\":{\"585\":1}}],[\"它只从成功的狭义方面来考虑\",{\"1\":{\"580\":1}}],[\"它只是一个具有特定地址代币帐户\",{\"1\":{\"136\":1}}],[\"它涉及整个游戏\",{\"1\":{\"580\":1}}],[\"它并不是向你展示现实\",{\"1\":{\"578\":1}}],[\"它不限制资源的并发读\",{\"1\":{\"1143\":1}}],[\"它不需要建立真正的数据库连接就可以在测试中模拟任何\",{\"1\":{\"975\":1}}],[\"它不能以任何其他方式运行\",{\"1\":{\"723\":1}}],[\"它不再存在了\",{\"1\":{\"706\":1}}],[\"它不是你在图表上的位置有多靠右\",{\"1\":{\"575\":1}}],[\"它不关心手段\",{\"1\":{\"573\":1}}],[\"它不仅可以成为我们个人的财富\",{\"1\":{\"647\":1,\"686\":1}}],[\"它不仅想被接受\",{\"1\":{\"573\":1}}],[\"它不仅涵盖当前的我们\",{\"1\":{\"573\":1}}],[\"它不仅会为新sentinel在sentinels字典中创建相应的实例结构\",{\"1\":{\"426\":1}}],[\"它也可能是错误的选择\",{\"1\":{\"588\":1}}],[\"它也可以用来改变\",{\"1\":{\"575\":1}}],[\"它也不能不注意\",{\"1\":{\"573\":1}}],[\"它也希望整体来看\",{\"1\":{\"573\":1}}],[\"它也会成为新节点的从节点\",{\"1\":{\"433\":1}}],[\"它想要一天充满惬意\",{\"1\":{\"573\":1}}],[\"它最大的心愿就是取悦主人\",{\"1\":{\"573\":1}}],[\"它认为人人都应该清楚它自认为多聪明多有才华\",{\"1\":{\"573\":1}}],[\"它渴求被视为重要和广为人知\",{\"1\":{\"573\":1}}],[\"它渴求被接受和包容\",{\"1\":{\"573\":1}}],[\"它相当可爱\",{\"1\":{\"573\":1}}],[\"它真的非常非常想成为内群\",{\"1\":{\"573\":1}}],[\"它承载着人类最复杂也最重要的需求\",{\"1\":{\"573\":1}}],[\"它取决于每个人的个性和价值视及\",{\"1\":{\"573\":1}}],[\"它关系的太深远了\",{\"1\":{\"571\":1}}],[\"它无法找到另一种代替资源\",{\"1\":{\"500\":1}}],[\"它底层的字节数组如下形式\",{\"1\":{\"474\":1}}],[\"它实现了和上面代码相同的功能\",{\"1\":{\"451\":1}}],[\"它现在位于被封装进\",{\"1\":{\"450\":1}}],[\"它储存了一个包含更多这个问题相关信息的\",{\"1\":{\"450\":1}}],[\"它将非图形字符进行转义\",{\"1\":{\"1200\":1}}],[\"它将非\",{\"1\":{\"1200\":1}}],[\"它将特殊字符进行转义\",{\"1\":{\"1200\":1}}],[\"它将数据写入指定的\",{\"1\":{\"1153\":1}}],[\"它将数据分布在不同的服务器上\",{\"1\":{\"413\":1}}],[\"它将一个请求封装为一个对象\",{\"1\":{\"818\":1}}],[\"它将返回true\",{\"1\":{\"515\":1}}],[\"它将更新自己对节点e和节点f的认识\",{\"1\":{\"435\":1}}],[\"它将更新自己对节点b和节点c的认识\",{\"1\":{\"435\":1}}],[\"它正在负责处理槽\",{\"1\":{\"433\":1}}],[\"它需要休息\",{\"1\":{\"789\":1}}],[\"它需要足够简单以供人们使用\",{\"1\":{\"521\":1}}],[\"它需要足够简洁\",{\"1\":{\"521\":1}}],[\"它需要执行以下步骤\",{\"1\":{\"426\":1}}],[\"它需要为特定类型的代币\",{\"1\":{\"135\":1}}],[\"它识别不了psync命令\",{\"1\":{\"425\":1}}],[\"它会返回错误信息\",{\"1\":{\"1198\":2}}],[\"它会根据值的类型自动选择适当的格式\",{\"1\":{\"1173\":1}}],[\"它会根据不同的情况自动使用\",{\"1\":{\"358\":1}}],[\"它会在命令行中查找定义的参数\",{\"1\":{\"1161\":1}}],[\"它会直接让出当前处理器的使用权并等待调度器的唤醒\",{\"1\":{\"1146\":1}}],[\"它会完成\",{\"1\":{\"1135\":1}}],[\"它会获取\",{\"1\":{\"1135\":1}}],[\"它会深度参与运行时的调度过程\",{\"1\":{\"1133\":1}}],[\"它会通知所有观察者对象\",{\"1\":{\"842\":1}}],[\"它会给你很好的表现\",{\"1\":{\"789\":1}}],[\"它会把自己节流到一个较低的智力水平\",{\"1\":{\"789\":1}}],[\"它会提高你的睡眠质量\",{\"1\":{\"789\":1}}],[\"它会缓解你身体的紧张和压力\",{\"1\":{\"789\":1}}],[\"它会打开文件\",{\"1\":{\"451\":1}}],[\"它会向同样监视这一主服务器的其他sentinel进行询问\",{\"1\":{\"426\":1}}],[\"它会将事务中的所有命令都执行完毕\",{\"1\":{\"424\":1}}],[\"它还提供了其他函数用于更复杂的转换操作\",{\"1\":{\"1198\":1}}],[\"它还让各种多才多艺\",{\"1\":{\"585\":1}}],[\"它还会向集群广播一条publish消息\",{\"1\":{\"435\":1}}],[\"它还会将自己的slots数组通过消息发送给集群中的其他节点\",{\"1\":{\"428\":1}}],[\"它还会被发送给所有与这个频道相匹配的模式的订阅者\",{\"1\":{\"423\":1}}],[\"它还有更多的用法\",{\"1\":{\"54\":1}}],[\"它知道要实例化哪些具体类\",{\"1\":{\"880\":1}}],[\"它知道周四存了支票\",{\"1\":{\"573\":1}}],[\"它知道接下来要读入的将是一个数据库号码\",{\"1\":{\"419\":1}}],[\"它知道所有数据库的键值对都录入完毕\",{\"1\":{\"418\":1}}],[\"它所占用的内存就不会释放\",{\"1\":{\"414\":1}}],[\"它记录了rehash目前的进度\",{\"1\":{\"395\":1}}],[\"它改进了\",{\"1\":{\"377\":1}}],[\"它跟free链表类似\",{\"1\":{\"377\":1}}],[\"它是处理时间和日期相关操作的重要工具\",{\"1\":{\"1213\":1}}],[\"它是要给程序分配内存时的分配单元\",{\"1\":{\"1149\":1}}],[\"它是实现同步机制的核心结构\",{\"1\":{\"1146\":1}}],[\"它是go语言在用户态提供的线程\",{\"1\":{\"1132\":1}}],[\"它是一个用于动态派发的虚函数表\",{\"1\":{\"1139\":1}}],[\"它是一个待执行的任务\",{\"1\":{\"1131\":1}}],[\"它是一个可以根据proto文件的定义生成一个反向代理器的\",{\"1\":{\"1078\":1}}],[\"它是一个简单易用的\",{\"1\":{\"976\":1}}],[\"它是一个包含书籍对象的切片\",{\"1\":{\"827\":1}}],[\"它是一份用浅色铅笔写成的初稿\",{\"1\":{\"577\":1}}],[\"它是一种特殊的间隙锁\",{\"1\":{\"374\":1}}],[\"它是基于多个\",{\"1\":{\"437\":1}}],[\"它是redis\",{\"1\":{\"418\":1}}],[\"它是放在buffer\",{\"1\":{\"376\":1}}],[\"它是由原字符串在不改变字符的相对顺序的情况下删除某些字符\",{\"1\":{\"260\":1}}],[\"它做的变更才能被其他事务看到\",{\"1\":{\"361\":1}}],[\"它做的变更就能被其他事务看到\",{\"1\":{\"361\":1}}],[\"它什么时候刷新到磁盘\",{\"1\":{\"357\":1}}],[\"它一般会忽略索引\",{\"1\":{\"352\":1}}],[\"它旨在与任意\",{\"1\":{\"193\":1}}],[\"它可以帮助我们记录和追踪程序的运行状态和错误信息\",{\"1\":{\"1177\":1}}],[\"它可以帮助你实现用户认证\",{\"1\":{\"191\":1}}],[\"它可以让一组的\",{\"1\":{\"1146\":1}}],[\"它可以被看做运行在线程上的本地调度器\",{\"1\":{\"1131\":1}}],[\"它可以将一个复杂对象的构建与它的表示分离\",{\"1\":{\"871\":1}}],[\"它可以在不破坏对象的封装性的前提下\",{\"1\":{\"837\":1}}],[\"它可以在exec命令执行之前\",{\"1\":{\"424\":1}}],[\"它可以简化对象之间的通信\",{\"1\":{\"834\":1}}],[\"它可以实现对象结构和操作的分离\",{\"1\":{\"868\":1}}],[\"它可以实现对象在运行时根据不同的条件选择不同的算法来完成相同的功能\",{\"1\":{\"856\":1}}],[\"它可以实现对象在运行时根据不同的状态切换不同的行为\",{\"1\":{\"850\":1}}],[\"它可以实现对象之间的动态联动\",{\"1\":{\"845\":1}}],[\"它可以实现对象状态的历史记录和回溯\",{\"1\":{\"839\":1}}],[\"它可以实现集合和遍历的分离\",{\"1\":{\"828\":1}}],[\"它可以实现请求的参数化\",{\"1\":{\"821\":1}}],[\"它可以向主服务器发送命令\",{\"1\":{\"426\":1}}],[\"它可以保存类型为int16\",{\"1\":{\"398\":1}}],[\"它可以保证多个逻辑操作要不全部成功\",{\"1\":{\"360\":1}}],[\"它可以用于在去中心化网络中达成共识\",{\"1\":{\"95\":1}}],[\"它的名称是\",{\"1\":{\"1188\":1}}],[\"它的名称是加上指针指向的类型的名称\",{\"1\":{\"1188\":1}}],[\"它的名称是map\",{\"1\":{\"1188\":1}}],[\"它的功能相对简单\",{\"1\":{\"1183\":1}}],[\"它的参数包括一个整数变量的指针\",{\"1\":{\"1162\":1}}],[\"它的参数包括一个布尔变量的指针\",{\"1\":{\"1162\":1}}],[\"它的执行过程分成以下两个步骤\",{\"1\":{\"1146\":1}}],[\"它的处理逻辑也很简单\",{\"1\":{\"1135\":1}}],[\"它的目的主要是为了更公平是实现调度\",{\"1\":{\"1135\":1}}],[\"它的目的是在浏览器和服务器之间建立一个不受限的双向通信的通道\",{\"1\":{\"1073\":1}}],[\"它的目标是保证用户的隐私交易数据\",{\"1\":{\"185\":1}}],[\"它的作用是为所有的mcache提供切割好的mspan资源\",{\"1\":{\"1149\":1}}],[\"它的作用是什么呢\",{\"1\":{\"493\":1}}],[\"它的作用和有限状态机的具体类型及面对的问题有关\",{\"1\":{\"1009\":1}}],[\"它的实现就类似于\",{\"1\":{\"449\":1}}],[\"它的初始值为0\",{\"1\":{\"433\":1}}],[\"它的值是一个字符串表示的整数\",{\"1\":{\"418\":1}}],[\"它的工作之一就是检查save选项所设置的保存条件是否已经满足\",{\"1\":{\"417\":1}}],[\"它的聚簇索引记录中都包含下面两个隐藏列\",{\"1\":{\"362\":1}}],[\"它的长度为\",{\"1\":{\"260\":1}}],[\"它的第\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1}}],[\"它的本质其实就是穷举\",{\"1\":{\"206\":1}}],[\"它的价值相对比较稳定\",{\"1\":{\"180\":1}}],[\"它的生命周期独立于容器\",{\"1\":{\"74\":1}}],[\"它们在go语言中都被视为类型的底层实现或衍生类型\",{\"1\":{\"1188\":1}}],[\"它们只会在队列的末尾等待\",{\"1\":{\"1142\":1}}],[\"它们分别使用\",{\"1\":{\"1142\":1}}],[\"它们分别用\",{\"1\":{\"1139\":1}}],[\"它们分别对应的是具有所有权和被借用的变量\",{\"1\":{\"471\":1}}],[\"它们都会先获取指向的结构体再执行对应的方法\",{\"1\":{\"1138\":1}}],[\"它们都处于一个只包含自己的集群当中\",{\"1\":{\"427\":1}}],[\"它们会在大脑中释放出来\",{\"1\":{\"789\":1}}],[\"它们会想知道自己对自己想要的东西是否一直都错了\",{\"1\":{\"587\":1}}],[\"它们是人体所能体验到的所有快乐的源泉\",{\"1\":{\"789\":1}}],[\"它们是你大脑的\",{\"1\":{\"789\":1}}],[\"它们是独立的轴\",{\"1\":{\"721\":1}}],[\"它们是通过\",{\"1\":{\"362\":1}}],[\"它们就成了\",{\"1\":{\"628\":1}}],[\"它们往往也证明是宝贵的\",{\"1\":{\"627\":1}}],[\"它们也不会去读需要它们思考的书\",{\"1\":{\"621\":1}}],[\"它们依然会影响你的反应模式\",{\"1\":{\"619\":1}}],[\"它们使你能够分析冲动的来源\",{\"1\":{\"588\":1}}],[\"它们令人敬畏\",{\"1\":{\"587\":1}}],[\"它们有时真的会毁了你的生活\",{\"1\":{\"577\":1}}],[\"它们通常会要求你给予关注\",{\"1\":{\"577\":1}}],[\"它们值得你关注\",{\"1\":{\"577\":1}}],[\"它们可能会持续发酵\",{\"1\":{\"577\":1}}],[\"它们可能会开始浮现出来\",{\"1\":{\"576\":1}}],[\"它们可以独立地变化\",{\"1\":{\"909\":1}}],[\"它们可以强制让操作系统立即将缓冲区中的数据写入到硬盘里面\",{\"1\":{\"422\":1}}],[\"它们可以分为几种特定类型\",{\"1\":{\"118\":1}}],[\"它们容易在我们的潜意识中找到\",{\"1\":{\"576\":1}}],[\"它们位于地下室的地下室的地下室\",{\"1\":{\"575\":1}}],[\"它们要么是你这位主厨创造的\",{\"1\":{\"575\":1}}],[\"它们要么是我们内在意识随着观察和生活经验的积累逐渐形成的\",{\"1\":{\"575\":1}}],[\"它们所作的仍然是探索\",{\"1\":{\"534\":1}}],[\"它们指引着我的编程方向\",{\"1\":{\"504\":1}}],[\"它们用来存储堆上的信息\",{\"1\":{\"463\":1}}],[\"它们的名称在go语言中是以表达式形式表示的\",{\"1\":{\"1188\":1}}],[\"它们的功能类似\",{\"1\":{\"1178\":1}}],[\"它们的实现有一些细微的差别\",{\"1\":{\"1146\":1}}],[\"它们的执行顺序如下\",{\"1\":{\"993\":1}}],[\"它们的区别在于创建\",{\"1\":{\"362\":1}}],[\"它们的值依次是\",{\"1\":{\"294\":1}}],[\"它们共同指定\",{\"1\":{\"117\":1}}],[\"它负责部署\",{\"1\":{\"112\":1}}],[\"它绕过\",{\"1\":{\"74\":1}}],[\"它表示一个空白的镜像\",{\"1\":{\"57\":1}}],[\"官方标准库学习\",{\"0\":{\"1298\":1}}],[\"官方教程\",{\"1\":{\"1084\":1}}],[\"官方提供7个字段\",{\"1\":{\"1047\":1}}],[\"官方公告是所有资产损失50\",{\"1\":{\"592\":1}}],[\"官方已经设计了一个分布式锁算法\",{\"1\":{\"437\":1}}],[\"官方镜像\",{\"1\":{\"48\":1}}],[\"官网的功能描述\",{\"1\":{\"988\":1}}],[\"官网的get\",{\"1\":{\"193\":1}}],[\"官网质押\",{\"1\":{\"153\":1}}],[\"官网列出的有\",{\"1\":{\"151\":1}}],[\"官网入口\",{\"1\":{\"144\":1}}],[\"官网镜像中还提供了一些更为基础的操作系统镜像\",{\"1\":{\"57\":1}}],[\"等函数对时间进行加减运算\",{\"1\":{\"1213\":1}}],[\"等函数创建和获取时间对象\",{\"1\":{\"1213\":1}}],[\"等函数用于进行时间的加减运算\",{\"1\":{\"1205\":1}}],[\"等函数用于创建和获取时间对象\",{\"1\":{\"1205\":1}}],[\"等函数\",{\"1\":{\"1198\":6}}],[\"等方法\",{\"1\":{\"1194\":1}}],[\"等方法修改结构体的字段值\",{\"1\":{\"1194\":1}}],[\"等方法报告结果\",{\"1\":{\"967\":1}}],[\"等占位符后可以加上一些附加参数来控制格式化的方式\",{\"1\":{\"1173\":1}}],[\"等少数函数\",{\"1\":{\"1166\":1}}],[\"等问题\",{\"1\":{\"1141\":1}}],[\"等都会进入这里面\",{\"1\":{\"1135\":1}}],[\"等到有消息了再回复\",{\"1\":{\"1073\":1}}],[\"等到缓冲区的空间被填满\",{\"1\":{\"422\":1}}],[\"等价于0\",{\"1\":{\"1003\":5}}],[\"等应用的命令行工具的格式\",{\"1\":{\"994\":1}}],[\"等待当前\",{\"1\":{\"1144\":1}}],[\"等待其他\",{\"1\":{\"1137\":2,\"1146\":1}}],[\"等待被唤醒\",{\"1\":{\"1135\":1}}],[\"等待中\",{\"1\":{\"1132\":2}}],[\"等待唤醒\",{\"1\":{\"1132\":1}}],[\"等待补充\",{\"1\":{\"965\":1}}],[\"等待下次重试\",{\"1\":{\"383\":1}}],[\"等智能眼镜发明出来的时候\",{\"1\":{\"631\":1}}],[\"等查清账款的来龙去脉损失大小再做决策\",{\"1\":{\"592\":1}}],[\"等压力重重的宏观问题\",{\"1\":{\"570\":1}}],[\"等着看好戏\",{\"1\":{\"570\":1}}],[\"等我\",{\"1\":{\"521\":1}}],[\"等网络恢复\",{\"1\":{\"413\":1}}],[\"等命令\",{\"1\":{\"411\":1}}],[\"等操作会在两个哈希表上进行\",{\"1\":{\"396\":1}}],[\"等于sds所保存字符串的长度\",{\"1\":{\"393\":1,\"402\":1}}],[\"等这些热数据又被再次访问的时候\",{\"1\":{\"377\":1}}],[\"等插入语句执行完成后\",{\"1\":{\"369\":1}}],[\"等语句\",{\"1\":{\"361\":1,\"362\":1,\"364\":1}}],[\"等之后事务提交的时候\",{\"1\":{\"358\":1}}],[\"等擦除完旧记录腾出了空间\",{\"1\":{\"357\":1}}],[\"等执行完后\",{\"1\":{\"343\":1}}],[\"等知名预言机服务\",{\"1\":{\"165\":1}}],[\"等资源的限制和审计管理\",{\"1\":{\"77\":1}}],[\"等等以此类推\",{\"1\":{\"683\":1}}],[\"等等\",{\"1\":{\"75\":1,\"243\":1,\"317\":1,\"500\":1,\"626\":1,\"648\":2,\"994\":1}}],[\"等\",{\"1\":{\"57\":3,\"193\":2,\"376\":1,\"424\":2,\"471\":1,\"698\":1,\"704\":1,\"804\":1,\"873\":1,\"967\":1,\"988\":1,\"1009\":1,\"1073\":1,\"1183\":1,\"1194\":1}}],[\">speak\",{\"1\":{\"1138\":1}}],[\">self\",{\"1\":{\"458\":1}}],[\">walk\",{\"1\":{\"1138\":1}}],[\">goexit0\",{\"1\":{\"1135\":1}}],[\">`\",{\"1\":{\"473\":1}}],[\">usize\",{\"1\":{\"458\":1}}],[\">>\",{\"1\":{\"325\":1,\"447\":1}}],[\">>=1\",{\"1\":{\"330\":1}}],[\">>=\",{\"1\":{\"287\":2,\"288\":1,\"331\":1}}],[\">新节点\",{\"1\":{\"308\":1}}],[\">1\",{\"1\":{\"295\":1,\"296\":1}}],[\">null\",{\"1\":{\"295\":2}}],[\">nums\",{\"1\":{\"258\":1}}],[\">5\",{\"1\":{\"294\":2,\"295\":1}}],[\">4\",{\"1\":{\"294\":1,\"295\":2,\"296\":4}}],[\">3\",{\"1\":{\"294\":1,\"295\":2,\"296\":2}}],[\">2\",{\"1\":{\"294\":1,\"295\":2,\"296\":2}}],[\">marginfiresult\",{\"1\":{\"152\":1}}],[\">=\",{\"1\":{\"152\":4,\"208\":1,\"216\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":2,\"241\":1,\"243\":1,\"267\":1,\"268\":1,\"276\":1,\"277\":1,\"284\":2,\"291\":1,\"296\":1,\"313\":1,\"318\":1,\"323\":1,\"331\":1,\"334\":3,\"827\":1,\"838\":1,\"950\":1,\"967\":1,\"979\":4,\"1135\":1}}],[\">d\",{\"1\":{\"131\":1}}],[\">c\",{\"1\":{\"131\":1}}],[\">\",{\"1\":{\"56\":1,\"58\":1,\"59\":1,\"69\":1,\"152\":5,\"192\":2,\"209\":1,\"211\":1,\"212\":4,\"214\":1,\"217\":2,\"219\":1,\"231\":2,\"239\":2,\"250\":1,\"252\":1,\"257\":1,\"258\":2,\"259\":1,\"266\":3,\"268\":1,\"276\":1,\"283\":2,\"287\":1,\"288\":1,\"290\":4,\"294\":1,\"301\":3,\"302\":7,\"303\":1,\"304\":1,\"305\":1,\"312\":1,\"313\":1,\"315\":2,\"319\":1,\"321\":1,\"324\":1,\"325\":1,\"332\":1,\"336\":1,\"357\":3,\"362\":2,\"371\":2,\"447\":1,\"450\":1,\"451\":3,\"458\":2,\"462\":2,\"463\":1,\"468\":3,\"477\":4,\"478\":4,\"481\":3,\"483\":1,\"739\":2,\"804\":1,\"945\":4,\"946\":1,\"947\":4,\"950\":1,\"972\":1,\"997\":1,\"1037\":1,\"1053\":3,\"1055\":4,\"1072\":1,\"1100\":1,\"1135\":14}}],[\"添加选项\",{\"0\":{\"991\":1}}],[\"添加额外功能\",{\"1\":{\"921\":1}}],[\"添加观察者\",{\"1\":{\"844\":1}}],[\"添加元素去哪了\",{\"1\":{\"266\":1}}],[\"添加session会话\",{\"0\":{\"199\":1}}],[\"添加到clusternode结构的fail\",{\"1\":{\"433\":1}}],[\"添加到\",{\"1\":{\"194\":1}}],[\"添加以下内容\",{\"1\":{\"192\":2}}],[\"添加了对地址查找表的支持\",{\"1\":{\"138\":1}}],[\"添加\",{\"1\":{\"55\":1,\"476\":1}}],[\"慎用\",{\"1\":{\"55\":1}}],[\"再来说一说接收metadata的方法\",{\"1\":{\"1094\":1}}],[\"再来看数据一致性问题\",{\"1\":{\"382\":1}}],[\"再来看dp\",{\"1\":{\"264\":1}}],[\"再检查表中\",{\"1\":{\"1009\":1}}],[\"再接着继续想想\",{\"1\":{\"1193\":1}}],[\"再接着需要一个mergesort的函数\",{\"1\":{\"948\":1}}],[\"再接着进行去重\",{\"1\":{\"216\":1}}],[\"再分配两个数组分别指向另外两个子数组的第一个位置\",{\"1\":{\"948\":1}}],[\"再遍历一次找到第二小的数放到第二个位置\",{\"1\":{\"944\":1}}],[\"再遍历物品\",{\"1\":{\"235\":1}}],[\"再次改变上下文对象的策略\",{\"1\":{\"855\":1}}],[\"再次改变发起人的状态\",{\"1\":{\"838\":1}}],[\"再次进行续约加锁\",{\"1\":{\"436\":1}}],[\"再到泡沫挤干再重新形成泡沫到最后价值终将体现需要相当长的时间\",{\"1\":{\"804\":1}}],[\"再做出选择\",{\"1\":{\"683\":1}}],[\"再做决策\",{\"1\":{\"680\":1}}],[\"再开始\",{\"1\":{\"663\":1}}],[\"再仔细想想\",{\"1\":{\"646\":1}}],[\"再去看\",{\"1\":{\"994\":1}}],[\"再去尝试建立新的秩序\",{\"1\":{\"609\":1}}],[\"再去学习\",{\"1\":{\"525\":1}}],[\"再重新审视你\",{\"1\":{\"577\":1}}],[\"再重新质押\",{\"1\":{\"166\":1}}],[\"再也没有质疑的需要\",{\"1\":{\"575\":1}}],[\"再也唤不回温柔\",{\"1\":{\"505\":1}}],[\"再向前看看这条路似乎要去哪里\",{\"1\":{\"570\":1}}],[\"再声明一个变量互斥锁\",{\"1\":{\"513\":1}}],[\"再下载下面的三个包\",{\"1\":{\"509\":1}}],[\"再背诵新的单词\",{\"1\":{\"505\":1}}],[\"再不会进行任何初始化操作\",{\"1\":{\"460\":1}}],[\"再进行客观分析进而进行选择\",{\"1\":{\"683\":1}}],[\"再进行转向\",{\"1\":{\"429\":1}}],[\"再进行修改一样\",{\"1\":{\"57\":1}}],[\"再与新主节点进行同步复制的时候\",{\"1\":{\"413\":1}}],[\"再使用\",{\"1\":{\"413\":1}}],[\"再使用docker\",{\"1\":{\"55\":1}}],[\"再由操作系统决定何时将缓冲区内容写回硬盘\",{\"1\":{\"413\":1}}],[\"再\",{\"1\":{\"386\":1}}],[\"再操作缓存\",{\"1\":{\"385\":1}}],[\"再删除缓存\",{\"1\":{\"384\":1,\"385\":1,\"386\":2,\"388\":2}}],[\"再经过一系列\",{\"1\":{\"383\":1}}],[\"再更新数据库\",{\"1\":{\"383\":1,\"386\":1,\"388\":1}}],[\"再更新缓存\",{\"1\":{\"383\":1}}],[\"再写入磁盘\",{\"1\":{\"377\":1}}],[\"再执行该命令的话\",{\"1\":{\"413\":1}}],[\"再执行\",{\"1\":{\"362\":1}}],[\"再把数据发送给浏览器\",{\"1\":{\"1073\":1}}],[\"再把数据写入日志呢\",{\"1\":{\"413\":1}}],[\"再把结果返回给客户端\",{\"1\":{\"413\":1}}],[\"再把\",{\"1\":{\"358\":1}}],[\"再通过页里的页目录去定位到某条具体的记录\",{\"1\":{\"376\":1}}],[\"再通过\",{\"1\":{\"357\":1}}],[\"再转后面的\",{\"1\":{\"335\":1}}],[\"再继续10\",{\"1\":{\"276\":1}}],[\"再者也可以让读者查看作者的写题思路\",{\"1\":{\"274\":1}}],[\"再加上无与伦比的创新速度和可扩展性\",{\"1\":{\"725\":1}}],[\"再加上一个操作\",{\"1\":{\"266\":2}}],[\"再加一层容器存储层\",{\"1\":{\"55\":1}}],[\"再回头来看\",{\"1\":{\"532\":1}}],[\"再回归到01背包问题\",{\"1\":{\"239\":1}}],[\"再回顾一下dp\",{\"1\":{\"235\":1,\"266\":1}}],[\"再抵押\",{\"1\":{\"166\":1}}],[\"再用\",{\"1\":{\"153\":1,\"413\":1}}],[\"回忆我们之前提到的\",{\"1\":{\"1010\":1}}],[\"回答这个问题也很简单\",{\"1\":{\"631\":1}}],[\"回答有关该议题关键问题的资料\",{\"1\":{\"627\":1}}],[\"回想一下你是如何思考的呢\",{\"1\":{\"626\":1}}],[\"回到当时\",{\"1\":{\"571\":1}}],[\"回到微信朋友圈赫然出现那个物品的广告\",{\"1\":{\"533\":1}}],[\"回到了二十世纪初的状态\",{\"1\":{\"11\":1}}],[\"回头一看\",{\"1\":{\"531\":1}}],[\"回家的诱惑\",{\"1\":{\"505\":1}}],[\"回\",{\"1\":{\"426\":1}}],[\"回复中的leader\",{\"1\":{\"426\":1}}],[\"回复之后\",{\"1\":{\"425\":1}}],[\"回复\",{\"1\":{\"425\":2}}],[\"回放\",{\"1\":{\"359\":2}}],[\"回滚\",{\"1\":{\"837\":1,\"839\":1}}],[\"回滚事务\",{\"1\":{\"357\":1}}],[\"回滚日志\",{\"1\":{\"355\":3,\"361\":1}}],[\"回文子序列都是动态规划经典题目\",{\"1\":{\"268\":1}}],[\"回文子序列可不是连续的\",{\"1\":{\"268\":1}}],[\"回文子串是要连续的\",{\"1\":{\"268\":1}}],[\"回文子串\",{\"0\":{\"267\":1},\"1\":{\"267\":1,\"268\":4}}],[\"回文字符串\",{\"1\":{\"267\":1}}],[\"回溯\",{\"1\":{\"206\":1}}],[\"回溯法解决的问题都可以抽象为树形结构\",{\"1\":{\"206\":1}}],[\"回溯法\",{\"1\":{\"206\":1}}],[\"回溯算法其实是一个非常低效率的算法\",{\"1\":{\"206\":1}}],[\"回溯算法\",{\"0\":{\"206\":1}}],[\"回顾了狩猎文明\",{\"1\":{\"649\":1}}],[\"回顾我迄今为止的道路\",{\"1\":{\"588\":1}}],[\"回顾我的过去\",{\"1\":{\"588\":1}}],[\"回顾之前提及的镜像所使用的分层存储的概念\",{\"1\":{\"55\":1}}],[\"回顾一下之前我们学到的知识\",{\"1\":{\"55\":1}}],[\"qmgo的hook\",{\"1\":{\"1242\":1}}],[\"qmgo会在支持的操作执行前后调用do\",{\"1\":{\"1242\":1}}],[\"qmgo支持2种方式来自动化更新特定的字段\",{\"1\":{\"1241\":1}}],[\"qmgo\",{\"1\":{\"1223\":2,\"1225\":5,\"1240\":1,\"1241\":2},\"2\":{\"1244\":1}}],[\"qmgo是从mgo迁移到新mongodb\",{\"1\":{\"1220\":1}}],[\"qmgo是一款go语言的mongodb驱动器\",{\"1\":{\"1220\":1}}],[\"qmgo让您以更优雅的姿势使用mongodb的新特性\",{\"1\":{\"1220\":1}}],[\"qcount\",{\"1\":{\"1137\":2}}],[\"q0\",{\"1\":{\"1009\":1}}],[\"qiniu\",{\"1\":{\"973\":4,\"980\":2,\"1223\":2,\"1225\":1}}],[\"qq和市面上几乎所有的软件都会使用到中心化的数据库来做这些事情\",{\"1\":{\"592\":1}}],[\"qq\",{\"1\":{\"533\":1,\"547\":3}}],[\"quite\",{\"1\":{\"1123\":1}}],[\"quiet\",{\"1\":{\"557\":1}}],[\"quietly\",{\"1\":{\"523\":2}}],[\"quickstart\",{\"1\":{\"1067\":1}}],[\"quicksort\",{\"1\":{\"212\":1,\"216\":2,\"967\":14,\"968\":3,\"969\":2,\"970\":9,\"972\":2,\"973\":1,\"975\":1,\"976\":1}}],[\"quickly\",{\"1\":{\"523\":3,\"560\":1,\"989\":1}}],[\"quicklist\",{\"1\":{\"404\":1}}],[\"quack\",{\"1\":{\"1138\":10}}],[\"quantum\",{\"1\":{\"523\":2}}],[\"quanta\",{\"1\":{\"523\":3}}],[\"quay\",{\"1\":{\"48\":1}}],[\"quoted\",{\"1\":{\"1200\":8}}],[\"quotexxx\",{\"0\":{\"1200\":2},\"1\":{\"1200\":2}}],[\"quoterunetographic\",{\"1\":{\"1200\":4}}],[\"quoterunetoascii\",{\"1\":{\"1198\":1,\"1200\":4}}],[\"quoterune\",{\"1\":{\"1198\":1,\"1200\":4}}],[\"quote\",{\"1\":{\"1198\":2,\"1200\":4}}],[\"quotes\",{\"1\":{\"483\":2}}],[\"quota\",{\"1\":{\"1074\":1}}],[\"quotafailure\",{\"1\":{\"1074\":1}}],[\"quorum\",{\"1\":{\"426\":1,\"547\":1}}],[\"question\",{\"1\":{\"547\":2}}],[\"questions\",{\"1\":{\"519\":1}}],[\"queen\",{\"1\":{\"543\":1}}],[\"query参数就没有效果了\",{\"1\":{\"1080\":1}}],[\"query参数去访问对应的grpc服务\",{\"1\":{\"1080\":1}}],[\"query\",{\"1\":{\"343\":1,\"353\":1,\"1080\":1}}],[\"queue\",{\"1\":{\"304\":12,\"305\":12,\"336\":19,\"426\":1}}],[\"q\",{\"1\":{\"55\":2,\"220\":1,\"1009\":1,\"1135\":1}}],[\"像slice\",{\"1\":{\"1188\":1}}],[\"像学校\",{\"1\":{\"792\":1}}],[\"像贝佐斯\",{\"1\":{\"746\":1}}],[\"像笑来经常也会在北京绕五环开车等等我认识的很多其他人也一样\",{\"1\":{\"698\":1}}],[\"像中美关系\",{\"1\":{\"631\":1}}],[\"像铁匠那样专注于打磨手中的铁器\",{\"1\":{\"631\":1}}],[\"像一个幼儿园教师一样思考\",{\"1\":{\"586\":1}}],[\"像未过期的键值对一样返回\",{\"1\":{\"414\":1}}],[\"像前面这种全表扫描的查询\",{\"1\":{\"377\":1}}],[\"像dai\",{\"1\":{\"185\":1}}],[\"像其它可以承接多个实体的命令一样\",{\"1\":{\"55\":1}}],[\"像素更高的相机时\",{\"1\":{\"9\":1}}],[\"看一遍\",{\"1\":{\"1084\":1}}],[\"看一下最终的测试结果\",{\"1\":{\"975\":1}}],[\"看一下测试结果\",{\"1\":{\"973\":1}}],[\"看一下递归公式\",{\"1\":{\"236\":1}}],[\"看搞笑视频\",{\"1\":{\"788\":1}}],[\"看电视\",{\"1\":{\"787\":1}}],[\"看似坚定的成功动力\",{\"1\":{\"577\":1}}],[\"看很多东西也都看得懂\",{\"1\":{\"525\":1}}],[\"看起来很合理\",{\"1\":{\"979\":1}}],[\"看起来有点抄袭的意思了\",{\"1\":{\"525\":1}}],[\"看起来像这样\",{\"1\":{\"468\":1}}],[\"看影视剧\",{\"1\":{\"505\":1}}],[\"看键key所属的槽i是否正在进行迁移\",{\"1\":{\"432\":1}}],[\"看它们是否也认为主服务器已经进入了下线状态\",{\"1\":{\"426\":1}}],[\"看到很多人热衷于办海外的信用卡\",{\"1\":{\"754\":1}}],[\"看到无数同样值得幸福生活的人\",{\"1\":{\"573\":1}}],[\"看到了个校园内的女孩\",{\"1\":{\"553\":1}}],[\"看到了么\",{\"1\":{\"385\":1,\"386\":1}}],[\"看到mixin群里有几位朋友聊天\",{\"1\":{\"551\":1}}],[\"看到的广告也不同\",{\"1\":{\"533\":1}}],[\"看到的层数不一样的原因\",{\"1\":{\"55\":1}}],[\"看到这里你可能会想\",{\"1\":{\"387\":1}}],[\"看作无符号数\",{\"1\":{\"287\":1}}],[\"看了代码就知道了\",{\"1\":{\"277\":1}}],[\"看看苹果在美国的市值有多高了\",{\"1\":{\"714\":1}}],[\"看看它究竟是如何运作的\",{\"1\":{\"578\":1}}],[\"看看它是真正的你\",{\"1\":{\"575\":1}}],[\"看看他们多么有才华\",{\"1\":{\"578\":1}}],[\"看看我们会发现什么\",{\"1\":{\"576\":1}}],[\"看看main函数做了什么\",{\"1\":{\"517\":1}}],[\"看看\",{\"1\":{\"447\":1}}],[\"看看之前有没有执行过这一条命令\",{\"1\":{\"343\":1}}],[\"看看是什么类型的语句\",{\"1\":{\"343\":1}}],[\"看看内部里的每一个\",{\"1\":{\"341\":1}}],[\"看看哪一个可以组成最长的回文子序列\",{\"1\":{\"268\":1}}],[\"看看结果\",{\"1\":{\"50\":1}}],[\"看s\",{\"1\":{\"263\":1}}],[\"才行\",{\"1\":{\"1033\":1}}],[\"才有人真正看得出任正非当时决策深谋远虑的地方\",{\"1\":{\"806\":1}}],[\"才华和努力\",{\"1\":{\"580\":1}}],[\"才发现无人等候\",{\"1\":{\"505\":1}}],[\"才进行懒加载\",{\"1\":{\"460\":1}}],[\"才对\",{\"1\":{\"436\":1}}],[\"才真正地将缓冲区中的数据写入到磁盘里面\",{\"1\":{\"422\":1}}],[\"才把这个值才写到缓存中\",{\"1\":{\"383\":1}}],[\"才将页插入\",{\"1\":{\"377\":1}}],[\"才代表事务成功获取到了锁\",{\"1\":{\"374\":1}}],[\"才会通过\",{\"1\":{\"1144\":1}}],[\"才会被排除在外\",{\"1\":{\"584\":1}}],[\"才会被插入到\",{\"1\":{\"377\":1}}],[\"才会检查\",{\"1\":{\"414\":1}}],[\"才会将命令记录到\",{\"1\":{\"413\":1}}],[\"才会有磁盘中的页面加载入buffer\",{\"1\":{\"376\":1}}],[\"才会把\",{\"1\":{\"369\":1}}],[\"才会真实的删除当前层\",{\"1\":{\"55\":1}}],[\"才是关键\",{\"1\":{\"792\":1}}],[\"才是事务真正启动的时机\",{\"1\":{\"362\":1}}],[\"才是将数据持久化到磁盘的操作\",{\"1\":{\"358\":1}}],[\"才返回客户端结果\",{\"1\":{\"359\":1}}],[\"才能进行接下来的工作\",{\"1\":{\"1037\":1}}],[\"才能学到你需要学到的东西\",{\"1\":{\"585\":1}}],[\"才能与这个\",{\"1\":{\"451\":1}}],[\"才能继续执行\",{\"1\":{\"361\":1}}],[\"才能和word2相同呢\",{\"1\":{\"265\":1}}],[\"才能说把动态规划真的掌握了\",{\"1\":{\"224\":1}}],[\"才能避免当多个容器同时运行时的对系统资源的竞争\",{\"1\":{\"77\":1}}],[\"才可参与\",{\"1\":{\"23\":1}}],[\"才可以持久化到磁盘\",{\"1\":{\"360\":1}}],[\"才可以卖得出去产品\",{\"1\":{\"10\":1}}],[\"才可以建立优势\",{\"1\":{\"10\":1}}],[\"直至\",{\"1\":{\"1035\":1}}],[\"直至誓死方休\",{\"1\":{\"505\":1}}],[\"直播正常说明情况\",{\"1\":{\"592\":1}}],[\"直到遇到指定的分隔符为止\",{\"1\":{\"1172\":1}}],[\"直到关闭\",{\"1\":{\"1072\":1}}],[\"直到接收到请求时\",{\"1\":{\"1055\":1}}],[\"直到分钟大于\",{\"1\":{\"1002\":1}}],[\"直到有下一轮融资进来才得以舒缓\",{\"1\":{\"663\":1}}],[\"直到你的愤怒平息下来\",{\"1\":{\"653\":1}}],[\"直到我们到达了家庭债务可承受的极限\",{\"1\":{\"648\":1}}],[\"直到十年后被他人问起只能说出一句\",{\"1\":{\"566\":1}}],[\"直到人们意识到自己的权力不容侵犯\",{\"1\":{\"534\":1}}],[\"直到98年年底重新开审\",{\"1\":{\"528\":1}}],[\"直到选出新的主节点为止\",{\"1\":{\"433\":1}}],[\"直到选出领头sentinel为止\",{\"1\":{\"426\":1}}],[\"直到找到负责处理槽i的节点为止\",{\"1\":{\"428\":1}}],[\"直到将事务队列中的所有命令都执行完毕为止\",{\"1\":{\"424\":1}}],[\"直到aof文件中的所有写命令都被处理完毕为止\",{\"1\":{\"422\":1}}],[\"直到成功\",{\"1\":{\"385\":1}}],[\"直到事务\",{\"1\":{\"374\":1}}],[\"直到拥有间隙锁的那个事务提交为止\",{\"1\":{\"374\":1}}],[\"直到表结构变更完成\",{\"1\":{\"367\":1}}],[\"直到执行完\",{\"1\":{\"367\":1}}],[\"直到锁被释放\",{\"1\":{\"366\":1}}],[\"直到到达棋盘的右下角\",{\"1\":{\"319\":1}}],[\"直到nums\",{\"1\":{\"275\":1}}],[\"直到\",{\"1\":{\"243\":1,\"721\":1}}],[\"直到没有任何层依赖当前层时\",{\"1\":{\"55\":1}}],[\"直接输出内容\",{\"1\":{\"1168\":1}}],[\"直接从本地协程队列获取协程\",{\"1\":{\"1135\":1}}],[\"直接从内存中读取\",{\"1\":{\"376\":1}}],[\"直接读取缓存或改为rpc调用\",{\"1\":{\"980\":1}}],[\"直接在相应的目录下执行以下命令\",{\"1\":{\"977\":1}}],[\"直接在函数体中定义一个history数组就可以\",{\"1\":{\"217\":1}}],[\"直接表述问题上\",{\"1\":{\"692\":1}}],[\"直接影响他们的生存和生活水平\",{\"1\":{\"646\":1}}],[\"直接面对你的心智劳动\",{\"1\":{\"627\":1}}],[\"直接运行\",{\"1\":{\"512\":1,\"1026\":1}}],[\"直接删除第二个汉字\",{\"1\":{\"480\":1}}],[\"直接执行客户端发送的命令\",{\"1\":{\"432\":1}}],[\"直接放到消息队列中\",{\"1\":{\"385\":1}}],[\"直接查该表是否有意向独占锁\",{\"1\":{\"368\":1}}],[\"直接持久化到磁盘\",{\"1\":{\"357\":2}}],[\"直接拷贝到当前层\",{\"1\":{\"236\":1}}],[\"直接copy就可以\",{\"1\":{\"215\":1}}],[\"直接带来的影响是通过pando\",{\"1\":{\"176\":1}}],[\"直接返回\",{\"1\":{\"152\":1,\"275\":1,\"297\":1}}],[\"直接将数据发送给阻塞的接收者\",{\"1\":{\"1137\":1}}],[\"直接将常量字段赋值\",{\"1\":{\"456\":1}}],[\"直接将其==内联\",{\"1\":{\"456\":1}}],[\"直接将一个已经终止\",{\"1\":{\"65\":1}}],[\"直接将可执行文件复制进镜像的做法并不罕见\",{\"1\":{\"57\":1}}],[\"直接使用这些镜像是可以满足一定的需求\",{\"1\":{\"55\":1}}],[\"直接对宿主\",{\"1\":{\"47\":1}}],[\"都使用传入的sessctx参数\",{\"1\":{\"1238\":1}}],[\"都占\",{\"1\":{\"1139\":1}}],[\"都加入到全局协程队列中\",{\"1\":{\"1135\":1}}],[\"都返回\",{\"1\":{\"978\":1}}],[\"都将变得不可能\",{\"1\":{\"648\":1}}],[\"都能体会到心智努力会是多么艰辛\",{\"1\":{\"628\":1}}],[\"都附着在这个触须上\",{\"1\":{\"573\":1}}],[\"都应该仔细思考自己的注意力与数字技术的贴合度\",{\"1\":{\"610\":1}}],[\"都应该抽时间反思自己的职业道路选型\",{\"1\":{\"572\":1}}],[\"都应该使用\",{\"1\":{\"47\":1}}],[\"都不影响另一方\",{\"1\":{\"909\":1}}],[\"都不到\",{\"1\":{\"663\":1}}],[\"都不需要我们的手去滑来滑去了\",{\"1\":{\"631\":1}}],[\"都不需要鼠标这个外设来下滑了\",{\"1\":{\"631\":1}}],[\"都不及机器来的精巧\",{\"1\":{\"551\":1}}],[\"都不存在\",{\"1\":{\"403\":1}}],[\"都执行一次原子指令确认静态变量的初始化是否完成\",{\"1\":{\"460\":1}}],[\"都检测\",{\"1\":{\"414\":1}}],[\"都记录到磁盘中\",{\"1\":{\"413\":1}}],[\"都\",{\"1\":{\"383\":1,\"395\":1,\"419\":1,\"424\":1,\"426\":1,\"428\":1,\"433\":1}}],[\"都设置为\",{\"1\":{\"360\":1}}],[\"都处于\",{\"1\":{\"360\":1}}],[\"都已经完成了刷盘\",{\"1\":{\"360\":1}}],[\"都已经写入磁盘\",{\"1\":{\"360\":1}}],[\"都已经初始化了\",{\"1\":{\"235\":1}}],[\"都要持久化到磁盘\",{\"1\":{\"360\":1}}],[\"都要回顾一下dp\",{\"1\":{\"264\":1}}],[\"都可以让两者保持一致\",{\"1\":{\"382\":1}}],[\"都可以恢复\",{\"1\":{\"358\":1}}],[\"都可以成为矿工\",{\"1\":{\"94\":1}}],[\"都只是缓存在\",{\"1\":{\"357\":1,\"360\":1}}],[\"都需要通过\",{\"1\":{\"356\":1}}],[\"都需要进行动态维护\",{\"1\":{\"350\":1}}],[\"都会有一个自己的\",{\"1\":{\"1133\":1}}],[\"都会有自己的运行id\",{\"1\":{\"425\":1}}],[\"都会第一个创建的\",{\"1\":{\"1133\":1}}],[\"都会返回一个\",{\"1\":{\"1037\":1}}],[\"都会购买不同的消费品\",{\"1\":{\"743\":1}}],[\"都会带来影响\",{\"1\":{\"571\":1}}],[\"都会以处理二进制的方式来处理\",{\"1\":{\"393\":1,\"402\":1}}],[\"都会被阻塞\",{\"1\":{\"364\":1}}],[\"都会被记录到\",{\"1\":{\"358\":1}}],[\"都会生成一个新的\",{\"1\":{\"362\":1}}],[\"都会把旧版本的记录写入到\",{\"1\":{\"362\":1}}],[\"都会重新生成一个\",{\"1\":{\"362\":1}}],[\"都会至少调用\",{\"1\":{\"360\":1}}],[\"都会影响业务\",{\"1\":{\"359\":1}}],[\"都会将缓存在\",{\"1\":{\"357\":1}}],[\"都会记录下回滚所需要的信息到一个日志里\",{\"1\":{\"356\":1}}],[\"都会产生删除镜像的行为\",{\"1\":{\"55\":1}}],[\"都在满足特定条件时被唤醒\",{\"1\":{\"1146\":1}}],[\"都在一个\",{\"1\":{\"1135\":1}}],[\"都在拼命维护自己家生态的花园\",{\"1\":{\"494\":1}}],[\"都在\",{\"1\":{\"341\":1}}],[\"都相同了指定要匹配啊\",{\"1\":{\"264\":1}}],[\"都有其各自的优势和适用场景\",{\"1\":{\"1073\":1}}],[\"都有哪些原因呢\",{\"1\":{\"798\":1}}],[\"都有一个属于我们自己的\",{\"1\":{\"573\":1}}],[\"都有可能查到\",{\"1\":{\"387\":1}}],[\"都有可能发生崩溃\",{\"1\":{\"360\":1}}],[\"都有\",{\"1\":{\"258\":1}}],[\"都是用于实现客户端和服务器之间的双向通信\",{\"1\":{\"1073\":1}}],[\"都是你的选择\",{\"1\":{\"773\":1}}],[\"都是需要读书去作为基础的\",{\"1\":{\"758\":1}}],[\"都是需要完全背包的各种应用\",{\"1\":{\"241\":1}}],[\"都是被告知这个世界是怎样的\",{\"1\":{\"639\":1}}],[\"都是因为他或她认为它是真理\",{\"1\":{\"637\":1}}],[\"都是熟悉的味道\",{\"1\":{\"528\":1}}],[\"都是通过让主服务器创建并发送rdb文件\",{\"1\":{\"425\":1}}],[\"都是把内存中的\",{\"1\":{\"413\":1}}],[\"都是为了把缓存清掉\",{\"1\":{\"386\":1}}],[\"都是追加操作\",{\"1\":{\"353\":1}}],[\"都是根据左上方和正上方推出来的\",{\"1\":{\"264\":1}}],[\"都是依赖于dp\",{\"1\":{\"263\":1}}],[\"都是\",{\"1\":{\"242\":1}}],[\"都是类似这种\",{\"1\":{\"239\":1}}],[\"都是一样的\",{\"1\":{\"232\":1}}],[\"都初始为0就可以了\",{\"1\":{\"236\":1}}],[\"都一样一开始需要排序一下\",{\"1\":{\"219\":1}}],[\"都构成的树的深度\",{\"1\":{\"206\":1}}],[\"都以为系统中只有自己的存在\",{\"1\":{\"75\":1}}],[\"都被装进了镜像里\",{\"1\":{\"58\":1}}],[\"另\",{\"1\":{\"426\":1}}],[\"另外择时重新送货\",{\"1\":{\"1009\":1}}],[\"另外还有两台打印机\",{\"1\":{\"910\":1}}],[\"另外对于类而言有些类内的内容是有私有内容并且不希望对外暴露的\",{\"1\":{\"887\":1}}],[\"另外就是腾讯的价格远低于实际的价值\",{\"1\":{\"714\":1}}],[\"另外就是eth\",{\"1\":{\"109\":1}}],[\"另外一点是\",{\"1\":{\"810\":1}}],[\"另外一些人哪怕额外付出许多\",{\"1\":{\"710\":1}}],[\"另外一个是将在终止状态\",{\"1\":{\"63\":1}}],[\"另外一个需要注意的问题是\",{\"1\":{\"51\":1}}],[\"另外solana的优点就是的链上程序是二进制应用\",{\"1\":{\"109\":1}}],[\"另外\",{\"1\":{\"78\":1,\"356\":1,\"362\":1,\"366\":1,\"377\":1,\"396\":1,\"416\":1,\"426\":1,\"430\":1,\"1073\":1,\"1172\":1}}],[\"另一点就是不论当前的生活如何\",{\"1\":{\"760\":1}}],[\"另一类人会看见地图上清晰指示着他们自信正确的方向\",{\"1\":{\"572\":1}}],[\"另一类是\",{\"1\":{\"55\":1}}],[\"另一种无法通过编译呢\",{\"1\":{\"1138\":1}}],[\"另一种是指针接受者\",{\"1\":{\"1138\":1}}],[\"另一种是refresh\",{\"1\":{\"1047\":1}}],[\"另一种是自己手动panic\",{\"1\":{\"447\":1}}],[\"另一种实现\",{\"0\":{\"875\":1}}],[\"另一种情况则让人难以接受\",{\"1\":{\"595\":1}}],[\"另一种推理方式\",{\"1\":{\"571\":1}}],[\"另一方面会在工作上继续精进\",{\"1\":{\"761\":1}}],[\"另一方面一些小选择对命运好像也影响不大\",{\"1\":{\"666\":1}}],[\"另一方面即使找到了可能也是打鸡血的事业\",{\"1\":{\"634\":1}}],[\"另一方面他们却不能表现出这种能力\",{\"1\":{\"626\":1}}],[\"另一方面却妄想把这些职业看作是昨日世界的40年隧道\",{\"1\":{\"585\":1}}],[\"另一方面是关于主服务器属下所有从服务器的信息\",{\"1\":{\"426\":1}}],[\"另一方面\",{\"1\":{\"426\":1,\"577\":1,\"642\":1,\"647\":1,\"686\":1,\"721\":1}}],[\"另一次是\",{\"1\":{\"360\":1}}],[\"另一个用于表示接口的结构体是\",{\"1\":{\"1139\":1}}],[\"另一个字段stackguard0可以用于调度器抢占式调度\",{\"1\":{\"1132\":1}}],[\"另一个就是读书\",{\"1\":{\"758\":1}}],[\"另一个原因是每天新发生的情况无先例可寻\",{\"1\":{\"655\":1}}],[\"另一个控制人的心智活动\",{\"1\":{\"627\":1}}],[\"另一个误解是批判性思考者从不模仿他人的思想和行动\",{\"1\":{\"627\":1}}],[\"另一个论点是由于写作思考\",{\"1\":{\"605\":1}}],[\"另一个是订阅连接\",{\"1\":{\"426\":1}}],[\"另一个是在集群节点中用作内部数据结构\",{\"1\":{\"397\":1}}],[\"另一个和rehash有关的属性就是rehashidx\",{\"1\":{\"395\":1}}],[\"另一个拥有该间隙区间内的插入意向锁\",{\"1\":{\"374\":1}}],[\"另一个事务已经\",{\"1\":{\"362\":1}}],[\"另一个方向比自己小\",{\"1\":{\"276\":1}}],[\"另一个指令是与b程序进行交互\",{\"1\":{\"116\":1}}],[\"另一个更常用的就是将一个只读的分支和一个可写的分支联合在一起\",{\"1\":{\"61\":1}}],[\"了解规则之后\",{\"1\":{\"1002\":1}}],[\"了解历史\",{\"0\":{\"783\":1}}],[\"了解后就明白这是大学生里罕见的生存指南指南书\",{\"1\":{\"669\":1}}],[\"了解自己和了解世界\",{\"1\":{\"585\":1}}],[\"了解真实的自我非常困难\",{\"1\":{\"575\":1}}],[\"了解到你的章鱼的复杂性\",{\"1\":{\"574\":1}}],[\"了解\",{\"1\":{\"512\":1}}],[\"了解一个包最应该查看的资料就是官方资料\",{\"1\":{\"512\":1}}],[\"了解完切片\",{\"1\":{\"470\":1}}],[\"了另一个\",{\"1\":{\"361\":1}}],[\"了\",{\"1\":{\"55\":1,\"74\":1,\"169\":1,\"266\":1,\"360\":1,\"385\":2,\"393\":1,\"399\":1,\"402\":1,\"426\":1,\"435\":1,\"552\":1,\"758\":1,\"959\":1}}],[\"短期的结论\",{\"1\":{\"680\":1}}],[\"短\",{\"1\":{\"55\":1}}],[\"长远来看每个人都会死\",{\"1\":{\"695\":1}}],[\"长江中下游\",{\"1\":{\"609\":1}}],[\"长期以来\",{\"1\":{\"643\":1}}],[\"长期的意思是大概是5到10年\",{\"1\":{\"605\":1}}],[\"长期写作\",{\"0\":{\"605\":1}}],[\"长期增长的资产内\",{\"1\":{\"598\":1}}],[\"长期主义\",{\"0\":{\"560\":1}}],[\"长期来看开始会变得更好\",{\"1\":{\"795\":1}}],[\"长期来看\",{\"1\":{\"94\":1}}],[\"长度是\",{\"1\":{\"474\":1}}],[\"长度为1字节\",{\"1\":{\"420\":1}}],[\"长度为\",{\"1\":{\"260\":1}}],[\"长度为3\",{\"1\":{\"258\":1}}],[\"长度最长的公共子数组是\",{\"1\":{\"259\":1}}],[\"长度最长的子数组的长度\",{\"1\":{\"259\":1}}],[\"长\",{\"1\":{\"55\":1,\"426\":1}}],[\"用起来很简单\",{\"1\":{\"1219\":1}}],[\"用起来也相当方便\",{\"1\":{\"153\":1}}],[\"用curl去测试一下\",{\"1\":{\"1080\":1}}],[\"用处\",{\"0\":{\"873\":1,\"881\":1,\"889\":1,\"896\":1,\"904\":1},\"1\":{\"894\":1}}],[\"用法等\",{\"1\":{\"988\":1}}],[\"用法\",{\"0\":{\"825\":1,\"832\":1,\"843\":1,\"849\":1,\"854\":1,\"860\":1,\"866\":1,\"915\":1,\"920\":1,\"927\":1,\"932\":1,\"938\":1},\"1\":{\"1161\":4}}],[\"用文字来表述自己的思想\",{\"1\":{\"605\":1}}],[\"用过mixin的都知道在mixin内部转账是不需要gas费用的\",{\"1\":{\"592\":1}}],[\"用回顾和积累的智慧之光来研究自己过去的决策\",{\"1\":{\"588\":1}}],[\"用嘴去说话的\",{\"1\":{\"551\":1}}],[\"用手机去编程也不是一个理想的方式\",{\"1\":{\"532\":1}}],[\"用sha256包创建哈希码\",{\"1\":{\"512\":1}}],[\"用vue写了mixin深维机器人mixinid\",{\"1\":{\"505\":1}}],[\"用一个半月把一本四级单词背诵完了\",{\"1\":{\"505\":1}}],[\"用go写解释器\",{\"1\":{\"504\":1}}],[\"用理工科思维理解世界\",{\"1\":{\"503\":1}}],[\"用redis\",{\"1\":{\"426\":1}}],[\"用multi\",{\"1\":{\"424\":1}}],[\"用全小写字母标识变量和数据\",{\"1\":{\"418\":1}}],[\"用途不同\",{\"1\":{\"358\":1}}],[\"用来存储一个变量数据内存空间\",{\"1\":{\"1148\":1}}],[\"用来存放我们的proto文件和生成的go文件\",{\"1\":{\"1084\":1}}],[\"用来保存对应的路由节点\",{\"1\":{\"1053\":1}}],[\"用来代替\",{\"1\":{\"1002\":1}}],[\"用来表示范围\",{\"1\":{\"1002\":1}}],[\"用来列举一些离散的值和多个范围\",{\"1\":{\"1002\":1}}],[\"用来指定范围的步长\",{\"1\":{\"1002\":1}}],[\"用来控制\",{\"1\":{\"991\":1}}],[\"用来处理用户请求\",{\"1\":{\"972\":1}}],[\"用来包装原有的类\",{\"1\":{\"919\":1}}],[\"用来装你完全拒绝的驱动力和恐惧\",{\"1\":{\"577\":1}}],[\"用来异步释放\",{\"1\":{\"411\":1}}],[\"用来记录新的更新操作\",{\"1\":{\"357\":1}}],[\"用来计算一个数字有多少种不同的翻译方法\",{\"1\":{\"318\":1}}],[\"用来判断一棵二叉树是不是对称的\",{\"1\":{\"299\":1}}],[\"用两个栈实现一个队列\",{\"1\":{\"280\":1}}],[\"用两个栈实现队列\",{\"0\":{\"280\":1}}],[\"用数组返回\",{\"1\":{\"278\":1}}],[\"用到了迪杰斯特拉算法\",{\"1\":{\"271\":1}}],[\"用错误信息去问ai就可以解决了\",{\"1\":{\"192\":1}}],[\"用官网的介绍\",{\"1\":{\"150\":1}}],[\"用于以固定时间间隔触发重复事件\",{\"1\":{\"1205\":1}}],[\"用于在指定的时间后触发单个事件\",{\"1\":{\"1205\":1}}],[\"用于在各方之间以\",{\"1\":{\"1047\":1}}],[\"用于处理字符串和浮点数类型之间的转换\",{\"1\":{\"1198\":1}}],[\"用于处理字符串和整数类型之间的转换\",{\"1\":{\"1198\":1}}],[\"用于将基本类型的值转换为其在\",{\"0\":{\"1200\":1},\"1\":{\"1198\":1}}],[\"用于将基本类型的值追加到字节切片中\",{\"1\":{\"1198\":1}}],[\"用于将基本类型的值格式化为字符串的表示形式\",{\"1\":{\"1198\":1}}],[\"用于将字符串解析为基本类型的值\",{\"1\":{\"1198\":1}}],[\"用于将数据写入缓冲区\",{\"1\":{\"1153\":1}}],[\"用于进行字符串和基本数据类型之间的相互转换\",{\"1\":{\"1198\":1}}],[\"用于判断反射值是否有效或为nil\",{\"1\":{\"1194\":1}}],[\"用于格式化指针类型\",{\"1\":{\"1173\":1}}],[\"用于格式化字符类型\",{\"1\":{\"1173\":1}}],[\"用于格式化字符串类型\",{\"1\":{\"1173\":1}}],[\"用于格式化布尔类型\",{\"1\":{\"1173\":1}}],[\"用于格式化浮点数类型\",{\"1\":{\"1173\":1}}],[\"用于格式化整数类型\",{\"1\":{\"1173\":1}}],[\"用于映射对应的换行符\",{\"1\":{\"1172\":1}}],[\"用于访问命令行参数\",{\"1\":{\"1163\":1}}],[\"用于自定义类型的命令行参数\",{\"1\":{\"1161\":1}}],[\"用于表示和操作时间\",{\"1\":{\"1204\":1}}],[\"用于表示价格\",{\"1\":{\"1161\":1}}],[\"用于表示姓名\",{\"1\":{\"1161\":1}}],[\"用于表示重试次数\",{\"1\":{\"1161\":1}}],[\"用于表示是否显示详细信息\",{\"1\":{\"1161\":1}}],[\"用于表示\",{\"1\":{\"1161\":1}}],[\"用于表示时间段的类型\",{\"1\":{\"1161\":1}}],[\"用于计算两个整数的和\",{\"1\":{\"1161\":1}}],[\"用于计算索引值\",{\"1\":{\"395\":1}}],[\"用于解析命令行参数\",{\"1\":{\"1160\":1}}],[\"用于传递截止时间和取消信号\",{\"1\":{\"1156\":1}}],[\"用于从指定的\",{\"1\":{\"1172\":1}}],[\"用于从缓冲区读取数据\",{\"1\":{\"1153\":1}}],[\"用于从表头向表尾方向遍历节点\",{\"1\":{\"397\":1}}],[\"用于给mcentral切割成小对象\",{\"1\":{\"1149\":1}}],[\"用于禁止运行期间发生的拷贝\",{\"1\":{\"1146\":1}}],[\"用于保护内部的\",{\"1\":{\"1146\":1}}],[\"用于保证结构体不会在编译期间拷贝\",{\"1\":{\"1146\":1}}],[\"用于保存字符串\",{\"1\":{\"393\":1,\"402\":1}}],[\"用于标识该字段的类型和位置\",{\"1\":{\"1084\":1}}],[\"用于接收一个json对象来分析\",{\"1\":{\"905\":1}}],[\"用于接受一个对象的调用将其转换为另一个接口对象可以识别的接口\",{\"1\":{\"903\":1}}],[\"用于抽象对象创建过程\",{\"1\":{\"879\":1}}],[\"用于封装一组对象之间的交互\",{\"1\":{\"831\":1}}],[\"用于输入工人的总成本是巨大的\",{\"1\":{\"653\":1}}],[\"用于全局数据的统计\",{\"1\":{\"457\":1}}],[\"用于实现故障转移\",{\"1\":{\"426\":2,\"427\":2}}],[\"用于控制单个线程内\",{\"1\":{\"358\":1}}],[\"用于掉电等故障恢复\",{\"1\":{\"358\":1}}],[\"用于备份恢复\",{\"1\":{\"358\":1}}],[\"用于存储可执行逻辑\",{\"1\":{\"126\":1}}],[\"用于存储和管理程序状态\",{\"1\":{\"111\":1}}],[\"用于提高\",{\"1\":{\"1153\":1}}],[\"用于提高交易被处理的顺序\",{\"1\":{\"118\":1}}],[\"用于提升开发者效率\",{\"1\":{\"1017\":1}}],[\"用于提交data时\",{\"1\":{\"513\":1}}],[\"用于提供对集群状态数据的访问\",{\"1\":{\"113\":1}}],[\"用下面的命令可以清理掉所有处于终止状态的容器\",{\"1\":{\"72\":1}}],[\"用这个脚本来构建\",{\"1\":{\"56\":1}}],[\"用\",{\"1\":{\"55\":2,\"72\":1,\"357\":2,\"403\":1,\"426\":2,\"721\":1}}],[\"用户登录后\",{\"1\":{\"1047\":1}}],[\"用户的认证和鉴权是非常重要的一环\",{\"1\":{\"1044\":1}}],[\"用户和其他第三方开发人员可以并且确实为核心产品做出了贡献\",{\"1\":{\"725\":1}}],[\"用户之一\",{\"1\":{\"591\":1}}],[\"用户几乎放弃了自己所有的隐私\",{\"1\":{\"533\":1}}],[\"用户提到字符串时\",{\"1\":{\"471\":1}}],[\"用户设置的down\",{\"1\":{\"426\":1}}],[\"用户使用slaveof命令或者设置slaveof选项\",{\"1\":{\"425\":1}}],[\"用户\",{\"1\":{\"169\":2}}],[\"用户需要通过lend行为先存入抵押品\",{\"1\":{\"159\":1}}],[\"用户将资产存入借贷池中\",{\"1\":{\"158\":1}}],[\"用户获得个性化的投资建议\",{\"1\":{\"151\":1}}],[\"用户无需手动跟踪和转移资金\",{\"1\":{\"151\":1}}],[\"用户无法在此日期后将已购入的话题份额售出\",{\"1\":{\"25\":1}}],[\"用户存入资产后不会获得独立的代币凭证\",{\"1\":{\"150\":1}}],[\"用户可以每次消费一个\",{\"1\":{\"1034\":1}}],[\"用户可以自己制定配置文件\",{\"1\":{\"417\":1}}],[\"用户可以自己参与存款和借款\",{\"1\":{\"144\":1}}],[\"用户可以随时提取存入的资产\",{\"1\":{\"160\":1}}],[\"用户可以享受与传统银行储蓄账户类似的安全可预测的加密资产回报\",{\"1\":{\"151\":1}}],[\"用户可以存入加密资产赚取稳定的利率\",{\"1\":{\"151\":1}}],[\"用户可以通过抵押他们的加密资产借出稳定币\",{\"1\":{\"151\":1}}],[\"用户可以通过比特币完成传统货币可以完成的任何事情\",{\"1\":{\"94\":1}}],[\"用户可以更频繁地进行小额偿还\",{\"1\":{\"150\":1}}],[\"用户可以借出任何支持的资产\",{\"1\":{\"150\":1}}],[\"用户可以在\",{\"1\":{\"128\":1}}],[\"用户通过自己掌握的私钥来证明自己拥有比特币的所有权\",{\"1\":{\"94\":1}}],[\"用户也可以通过增加\",{\"1\":{\"74\":2}}],[\"用户会指定构建镜像上下文的路径\",{\"1\":{\"60\":1}}],[\"用户等\",{\"1\":{\"46\":1}}],[\"用户必须在此话题截止售出时间点之前完成话题份额的售出\",{\"1\":{\"28\":1}}],[\"只包含指向底层数据和类型的两个指针\",{\"1\":{\"1139\":1}}],[\"只包含小写字母\",{\"1\":{\"322\":1}}],[\"只做最基本功能的话也不是很难\",{\"1\":{\"1010\":1}}],[\"只接受\",{\"1\":{\"1138\":1}}],[\"只接受json格式的输入\",{\"1\":{\"905\":1}}],[\"只接受一个参数\",{\"1\":{\"480\":1}}],[\"只学习并不能致富\",{\"1\":{\"776\":1}}],[\"只知道使用的mixin\",{\"1\":{\"592\":1}}],[\"只留下你那个小小的真实自我\",{\"1\":{\"588\":1}}],[\"只发现哲学思想来源于一部著名小说\",{\"1\":{\"575\":1}}],[\"只是指向其他类型的引用\",{\"1\":{\"1188\":1}}],[\"只是对\",{\"1\":{\"1144\":1}}],[\"只是向\",{\"1\":{\"1144\":1}}],[\"只是程度不同而已\",{\"1\":{\"795\":1}}],[\"只是为了放松大脑\",{\"1\":{\"789\":1}}],[\"只是为我们相信的东西寻找理由\",{\"1\":{\"626\":1}}],[\"只是因为植物\",{\"1\":{\"789\":1}}],[\"只是因为我妈妈有点强迫我\",{\"1\":{\"575\":1}}],[\"只是假设事物是危险的\",{\"1\":{\"722\":1}}],[\"只是可能需要为隐私保护付出额外的staking\",{\"1\":{\"711\":1}}],[\"只是用户群体会比notion少许多\",{\"1\":{\"710\":1}}],[\"只是发现它可能对病人也有毒性作用\",{\"1\":{\"643\":1}}],[\"只是说需要判断哪个选择更好更加符合自己价值观\",{\"1\":{\"631\":1}}],[\"只是曾经2018年时上高中时经常使用\",{\"1\":{\"631\":1}}],[\"只是论证大众文化对人对影响\",{\"1\":{\"621\":1}}],[\"只是不愿迁徙的人群\",{\"1\":{\"609\":1}}],[\"只是整个底层交易网络受到了影响\",{\"1\":{\"592\":1}}],[\"只是看起来是那样\",{\"1\":{\"585\":1}}],[\"只是意识到有多少选择实际上对你敞开\",{\"1\":{\"584\":1}}],[\"只是在地下室里\",{\"1\":{\"574\":1}}],[\"只是系统程序拥有的帐户\",{\"1\":{\"112\":1}}],[\"只想确保基本需求\",{\"1\":{\"573\":1}}],[\"只在未来可预测时感到舒服的那一面\",{\"1\":{\"573\":1}}],[\"只在发送meet\",{\"1\":{\"435\":1}}],[\"只剩下我们站在那里\",{\"1\":{\"570\":1}}],[\"只不过会在遍历过程中有阻塞过程\",{\"1\":{\"1019\":1}}],[\"只不过是思考的结果\",{\"1\":{\"810\":1}}],[\"只不过曾经读过的书可以让我在日常生活中会变得更加平和\",{\"1\":{\"810\":1}}],[\"只不过\",{\"1\":{\"569\":1}}],[\"只不过物品的重量有了两个维度而已\",{\"1\":{\"240\":1}}],[\"只为多卖点广告\",{\"1\":{\"533\":1}}],[\"只允许讨论自己认同的观点\",{\"1\":{\"528\":1}}],[\"只允许登录用户访问\",{\"1\":{\"199\":1}}],[\"只拥有很少的特性\",{\"1\":{\"525\":1}}],[\"只会从\",{\"1\":{\"1146\":1}}],[\"只会出现一个领头sentinel\",{\"1\":{\"426\":1}}],[\"只会和共享表锁\",{\"1\":{\"368\":1}}],[\"只\",{\"1\":{\"426\":2}}],[\"只运行单线程的情况下\",{\"1\":{\"412\":1}}],[\"只保留列表中的\",{\"1\":{\"405\":1}}],[\"只能做多处理一个goroutinen\",{\"1\":{\"1149\":1}}],[\"只能借助flash这些插件\",{\"1\":{\"1073\":1}}],[\"只能依赖客户端删除本地的jwt\",{\"1\":{\"1047\":1}}],[\"只能用在月历和周历的域中\",{\"1\":{\"1002\":1}}],[\"只能忍气吞声并承担损失\",{\"1\":{\"706\":1}}],[\"只能问\",{\"1\":{\"631\":1}}],[\"只能一步步变坏下去\",{\"1\":{\"609\":1}}],[\"只能将\",{\"1\":{\"481\":1}}],[\"只能逐个查找\",{\"1\":{\"399\":1}}],[\"只能尽可能地降低不一致的概率\",{\"1\":{\"386\":1}}],[\"只能使用\",{\"1\":{\"358\":1}}],[\"只需把它们全部记录下来\",{\"1\":{\"627\":1}}],[\"只需向此文件添加一行\",{\"1\":{\"510\":1}}],[\"只需\",{\"1\":{\"385\":1,\"574\":1}}],[\"只需要在独立的mcentral中使用锁\",{\"1\":{\"1149\":1}}],[\"只需要在文件里编写逻辑就好\",{\"1\":{\"989\":1}}],[\"只需要指定需要的属性就可以构建一个复杂对象\",{\"1\":{\"872\":1}}],[\"只需要定义一个\",{\"1\":{\"821\":1,\"828\":1}}],[\"只需要眼皮子动一下就可以实现下滑的练习\",{\"1\":{\"631\":1}}],[\"只需要努力工作\",{\"1\":{\"578\":1}}],[\"只需要访问clusterstate\",{\"1\":{\"428\":1}}],[\"只需要\",{\"1\":{\"360\":1}}],[\"只存在于可重复读隔离级别\",{\"1\":{\"372\":1}}],[\"只针对\",{\"1\":{\"360\":1}}],[\"只记录未被刷入磁盘的数据的物理日志\",{\"1\":{\"358\":1}}],[\"只读\",{\"1\":{\"74\":3}}],[\"只用手就可以了诶\",{\"1\":{\"631\":1}}],[\"只用一次\",{\"1\":{\"239\":1}}],[\"只用dp\",{\"1\":{\"236\":1}}],[\"只用\",{\"1\":{\"68\":1}}],[\"只要在这个结构体下写get\",{\"1\":{\"1193\":1}}],[\"只要在以往的不可再生资源在未消耗完之前\",{\"1\":{\"500\":1}}],[\"只要将方法名称写成一定的格式\",{\"1\":{\"1193\":1}}],[\"只要他工作出色\",{\"1\":{\"751\":1}}],[\"只要你在这类短视频上停留的时间足够长\",{\"1\":{\"689\":1}}],[\"只要你愿意做就一定能赚钱\",{\"1\":{\"669\":1}}],[\"只要你有足够的可作为抵押的抵押品\",{\"1\":{\"150\":1}}],[\"只要有足够多的消费者\",{\"1\":{\"647\":1,\"686\":1}}],[\"只要有其中任意一个满足\",{\"1\":{\"417\":1}}],[\"只要有其它请求可以进来\",{\"1\":{\"387\":1}}],[\"只要可能\",{\"1\":{\"627\":1}}],[\"只要证据不充分就推迟判断\",{\"1\":{\"627\":1}}],[\"只要一个人开始比较\",{\"1\":{\"611\":1}}],[\"只要一开始抱怨\",{\"1\":{\"592\":1}}],[\"只要一部分复制成功响应回来就行\",{\"1\":{\"359\":1}}],[\"只要我们能摆脱自我\",{\"1\":{\"573\":1}}],[\"只要我们提高进入到\",{\"1\":{\"377\":1}}],[\"只要执行释放锁的\",{\"1\":{\"437\":1}}],[\"只要执行失败\",{\"1\":{\"385\":1}}],[\"只要总共有两个sentinel认为主服务器已经进入下线状态\",{\"1\":{\"426\":1}}],[\"只要总体健康因子保持在安全范围内\",{\"1\":{\"150\":1}}],[\"只要写\",{\"1\":{\"385\":1}}],[\"只要第二步发生失败\",{\"1\":{\"385\":1}}],[\"只要系统没有宕机\",{\"1\":{\"360\":1}}],[\"只要数据成功复制到任意一个从库上\",{\"1\":{\"359\":1}}],[\"只要存储空间足够\",{\"1\":{\"94\":1}}],[\"只要足够区分于别的镜像就可以了\",{\"1\":{\"55\":1}}],[\"只要删除那些依赖它们的镜像后\",{\"1\":{\"53\":1}}],[\"只有指针类型的变量才会实现该接口\",{\"1\":{\"1138\":1}}],[\"只有跟函数名对的上的才会被\",{\"1\":{\"967\":1}}],[\"只有你的认知与其他人的认知差到一定程\",{\"1\":{\"810\":1}}],[\"只有认知差才是有价值的\",{\"1\":{\"810\":1}}],[\"只有思绪在遥远的未来才可能彻底解脱\",{\"1\":{\"806\":1}}],[\"只有合格投资人的钱才是被投资公司可管理的\",{\"1\":{\"754\":1}}],[\"只有那些显然对你来说太过漫长\",{\"1\":{\"584\":1}}],[\"只有通过深入挖掘我们的潜意识\",{\"1\":{\"574\":1}}],[\"只有在依赖更新后\",{\"1\":{\"1025\":1}}],[\"只有在aof持久化功能处于关闭状态时\",{\"1\":{\"416\":1}}],[\"只有在字段\",{\"1\":{\"407\":1}}],[\"只有在\",{\"1\":{\"403\":1}}],[\"只有在执行这个命令后\",{\"1\":{\"362\":1}}],[\"只有后面的\",{\"1\":{\"377\":1}}],[\"只有同时满足\",{\"1\":{\"377\":1}}],[\"只有当锁状态为正常状态时\",{\"1\":{\"374\":1}}],[\"只有男女\",{\"1\":{\"352\":1}}],[\"只有一小部分当今可用的游戏棋盘的说明手册\",{\"1\":{\"579\":1}}],[\"只有一种字符串类型\",{\"1\":{\"471\":1}}],[\"只有一部分组成\",{\"1\":{\"264\":1}}],[\"只有一个来源\",{\"1\":{\"244\":1}}],[\"只有一个卖家主导的市场\",{\"1\":{\"8\":1}}],[\"只有两个方向可以推出来\",{\"1\":{\"262\":1}}],[\"只有dp\",{\"1\":{\"259\":1}}],[\"只有单一的可变利率模式\",{\"1\":{\"150\":1}}],[\"只有系统程序可以创建新帐户\",{\"1\":{\"112\":1}}],[\"只有账户所有者程序才能修改余额\",{\"1\":{\"111\":1}}],[\"只有能控制分配到容器的资源\",{\"1\":{\"77\":1}}],[\"只有提高广告费\",{\"1\":{\"10\":1}}],[\"重视日志的记录和分析对于程序开发和维护都是至关重要的\",{\"1\":{\"1183\":1}}],[\"重置迭代次数并重新执行获取锁的循环\",{\"1\":{\"1142\":1}}],[\"重做\",{\"1\":{\"837\":1}}],[\"重做日志文件组是以循环写的方式工作的\",{\"1\":{\"357\":1}}],[\"重做日志文件组\",{\"1\":{\"357\":1}}],[\"重做日志\",{\"1\":{\"355\":2,\"361\":1}}],[\"重生\",{\"1\":{\"669\":1}}],[\"重大突破\",{\"1\":{\"578\":1}}],[\"重要\",{\"1\":{\"1238\":1}}],[\"重要的还有随时间可以进步\",{\"1\":{\"605\":1}}],[\"重要的是他工作有多努力\",{\"1\":{\"751\":1}}],[\"重要的是对自己的选择负责\",{\"1\":{\"674\":1}}],[\"重要的是对这个概念有清楚明白的理解后就不会有由于这个概念所导致的心理不平衡\",{\"1\":{\"673\":1}}],[\"重要的是这样相当于向人们坦然自己的无知\",{\"1\":{\"657\":1}}],[\"重要的是考虑你在这个范围中的倾向\",{\"1\":{\"588\":1}}],[\"重要的是要记住\",{\"1\":{\"577\":1}}],[\"重要的是要了解关联的代币账户不是不同类型的代币账户\",{\"1\":{\"136\":1}}],[\"重要的是明白自己的时间都花在了哪里\",{\"1\":{\"500\":1}}],[\"重要到可能成为被喷的点比如\",{\"1\":{\"446\":1}}],[\"重写造成任何影响\",{\"1\":{\"414\":1}}],[\"重写时\",{\"1\":{\"414\":1}}],[\"重写阶段\",{\"1\":{\"414\":2}}],[\"重写机制\",{\"1\":{\"413\":2}}],[\"重试等\",{\"1\":{\"455\":1}}],[\"重试的方案依旧不严谨\",{\"1\":{\"385\":1}}],[\"重试会一直\",{\"1\":{\"385\":1}}],[\"重试次数\",{\"1\":{\"385\":1,\"1161\":2,\"1162\":1}}],[\"重试\",{\"1\":{\"385\":1,\"388\":1}}],[\"重点\",{\"1\":{\"384\":1}}],[\"重启时\",{\"1\":{\"413\":1}}],[\"重启项目也不担心\",{\"1\":{\"385\":1}}],[\"重启\",{\"1\":{\"385\":1}}],[\"重启会进行回滚操作\",{\"1\":{\"360\":1}}],[\"重启就提交事务\",{\"1\":{\"360\":1}}],[\"重启后\",{\"1\":{\"360\":1}}],[\"重启后会按顺序扫描\",{\"1\":{\"360\":1}}],[\"重启后会通过\",{\"1\":{\"357\":2}}],[\"重启后之前已提交的记录都不会丢失\",{\"1\":{\"357\":1}}],[\"重建二叉树\",{\"0\":{\"279\":1}}],[\"重量为\",{\"1\":{\"237\":1}}],[\"重量\",{\"1\":{\"235\":1,\"241\":1}}],[\"重复mock问题\",{\"0\":{\"962\":1}}],[\"重复上滑动作会让我们获取信息\",{\"1\":{\"631\":1}}],[\"重复这种简单的上滑动作到底会出现什么影响呢\",{\"1\":{\"631\":1}}],[\"重复3\",{\"1\":{\"431\":1}}],[\"重复流程\",{\"1\":{\"166\":1}}],[\"重复利用资源\",{\"1\":{\"53\":1}}],[\"重新放入当前\",{\"1\":{\"1135\":1}}],[\"重新执行\",{\"1\":{\"1135\":1}}],[\"重新生成gw\",{\"1\":{\"1080\":1}}],[\"重新定义算法的某些步骤\",{\"1\":{\"859\":1}}],[\"重新进行一次排名\",{\"1\":{\"577\":1}}],[\"重新审视厨师与主厨\",{\"0\":{\"571\":1}}],[\"重新设置这个锁的超时时间\",{\"1\":{\"436\":1}}],[\"重新分片的实现原理\",{\"1\":{\"431\":1}}],[\"重新分片操作可以在线进行\",{\"1\":{\"431\":1}}],[\"重新分片\",{\"0\":{\"431\":1},\"1\":{\"427\":1}}],[\"重新平衡选举\",{\"1\":{\"413\":1}}],[\"重新\",{\"1\":{\"52\":1}}],[\"可自定义插件化编程\",{\"1\":{\"1222\":1}}],[\"可根据实际需求使用其中的函数和类型\",{\"1\":{\"1213\":1}}],[\"可运行\",{\"1\":{\"1132\":2}}],[\"可提供更好的性能和安全性\",{\"1\":{\"1073\":1}}],[\"可变参数方法\",{\"1\":{\"956\":1}}],[\"可变参数函数\",{\"1\":{\"956\":1}}],[\"可扩展性和灵活性\",{\"1\":{\"876\":1,\"884\":1}}],[\"可即便到今天我也无法发挥出全部了解到的知识\",{\"1\":{\"810\":1}}],[\"可即便如此\",{\"1\":{\"810\":1}}],[\"可是用了快半年才把乘法口诀了然于心\",{\"1\":{\"810\":1}}],[\"可现实不会瞬间改变\",{\"0\":{\"810\":1}}],[\"可问题在于公司作为一个商业机构必须能够活在竞争非常激烈的社会中\",{\"1\":{\"792\":1}}],[\"可惜只学习并不能致富\",{\"0\":{\"776\":1}}],[\"可如果是生产者呢\",{\"1\":{\"739\":1}}],[\"可如果你想保护自己的隐私\",{\"1\":{\"711\":1}}],[\"可用的源代码必须对贡献者来说是平易近人的\",{\"1\":{\"725\":1}}],[\"可元可编程的\",{\"1\":{\"721\":1}}],[\"可接近性和崩溃性实际上并没有联系\",{\"1\":{\"721\":1}}],[\"可靠\",{\"1\":{\"653\":1}}],[\"可谓是世世代代被水淹\",{\"1\":{\"609\":1}}],[\"可预见的未来是在这种互联网上是不可能拿到属于自己的数据的\",{\"1\":{\"533\":1}}],[\"可改变且具有所有权的\",{\"1\":{\"471\":1}}],[\"可对于后者\",{\"1\":{\"446\":1}}],[\"可恢复的\",{\"1\":{\"446\":1}}],[\"可\",{\"1\":{\"419\":1}}],[\"可维护性高\",{\"1\":{\"412\":1}}],[\"可由\",{\"1\":{\"404\":2,\"406\":2}}],[\"可见随着时间的推移\",{\"1\":{\"646\":1}}],[\"可见\",{\"1\":{\"384\":1}}],[\"可重复读隔离级别下虽然很大程度上避免了幻读\",{\"1\":{\"362\":1}}],[\"可重复读隔离级别\",{\"1\":{\"362\":1}}],[\"可重复读隔离级别是启动事务时生成一个\",{\"1\":{\"362\":1}}],[\"可重复读是如何工作的\",{\"1\":{\"362\":1}}],[\"可重复读\",{\"1\":{\"361\":3,\"362\":3}}],[\"可选类型\",{\"1\":{\"1084\":1}}],[\"可选的方案有\",{\"1\":{\"388\":1}}],[\"可选\",{\"1\":{\"292\":3,\"731\":1}}],[\"可支持短期会话\",{\"1\":{\"193\":1}}],[\"可与任何数据库一起使用\",{\"1\":{\"193\":1}}],[\"可让您保持对数据的控制\",{\"1\":{\"193\":1}}],[\"可验证程序\",{\"0\":{\"128\":1}}],[\"可验证的构建使用户能够验证链上程序是否与公开可用的源代码匹配\",{\"1\":{\"126\":1}}],[\"可执行\",{\"1\":{\"114\":1}}],[\"可执行文件\",{\"1\":{\"58\":2}}],[\"可能处于以下\",{\"1\":{\"1132\":1}}],[\"可能创建session服务和验证sesion不是同一个服务资源消耗大\",{\"1\":{\"1045\":1}}],[\"可能导致代码维护困难\",{\"1\":{\"899\":1}}],[\"可能导致这种情况\",{\"1\":{\"52\":1}}],[\"可能感觉就会偏向某一方面\",{\"1\":{\"680\":1}}],[\"可能更适合我们\",{\"1\":{\"674\":1}}],[\"可能只有5\",{\"1\":{\"663\":1}}],[\"可能与我两个月之前的判断一样是由ai生成的\",{\"1\":{\"605\":1}}],[\"可能正是因为个人需求触须未能实现所致\",{\"1\":{\"573\":1}}],[\"可能你已经看完了整篇文章不知云里雾里\",{\"1\":{\"517\":1}}],[\"可能你会希望保持字符串的原样\",{\"1\":{\"483\":1}}],[\"可能需要了解许多细节\",{\"1\":{\"653\":1}}],[\"可能需要进行使命性的跳跃\",{\"1\":{\"588\":1}}],[\"可能需要从\",{\"1\":{\"474\":1}}],[\"可能需要等待或只能提取部分\",{\"1\":{\"160\":1}}],[\"可能有分配的栈\",{\"1\":{\"1132\":1}}],[\"可能有相应的对应方法\",{\"1\":{\"500\":1}}],[\"可能有以下情况出现\",{\"1\":{\"424\":1}}],[\"可能有安全风险\",{\"1\":{\"153\":1}}],[\"可能阻塞其他操作\",{\"1\":{\"413\":1}}],[\"可能大家担心\",{\"1\":{\"377\":1}}],[\"可能是你内心的厨师决定\",{\"1\":{\"588\":1}}],[\"可能是频繁访问的页\",{\"1\":{\"377\":1}}],[\"可能是确实效率低\",{\"1\":{\"343\":1}}],[\"可能出现半成功的状态\",{\"1\":{\"360\":1}}],[\"可能会造成资源浪费\",{\"1\":{\"898\":1}}],[\"可能会觉得某个职业不那么吸引人\",{\"1\":{\"584\":1}}],[\"可能会出现这样一种情况\",{\"1\":{\"432\":1}}],[\"可能会对\",{\"1\":{\"413\":1}}],[\"可能会导致后续元素的\",{\"1\":{\"399\":1}}],[\"可能会发生以下场景\",{\"1\":{\"384\":1,\"386\":1}}],[\"可能会发生丢失数据\",{\"1\":{\"357\":1}}],[\"可能会将\",{\"1\":{\"377\":1}}],[\"可能会看到一些依赖的中间层镜像\",{\"1\":{\"53\":1}}],[\"可能的最大乘积是多少\",{\"1\":{\"285\":1,\"286\":1}}],[\"可能等于\",{\"1\":{\"283\":1}}],[\"可能应监管要求就无法正常流通了\",{\"1\":{\"184\":1}}],[\"可能还有别的标签指向了这个镜像\",{\"1\":{\"55\":1}}],[\"可以自定义field名\",{\"1\":{\"1241\":1}}],[\"可以加载系统预定义的时区或自定义的时区\",{\"1\":{\"1205\":1}}],[\"可以按照需要格式化或解析时间\",{\"1\":{\"1205\":1}}],[\"可以确保它们的表示形式是正确的\",{\"1\":{\"1200\":1}}],[\"可以动态地获取类型信息\",{\"1\":{\"1194\":1}}],[\"可以方便地记录和输出日志信息\",{\"1\":{\"1183\":1}}],[\"可以方便地打印日志信息\",{\"1\":{\"1178\":1}}],[\"可以方便地控制对象的生命周期\",{\"1\":{\"896\":1}}],[\"可以访问和处理命令行参数\",{\"1\":{\"1163\":1}}],[\"可以满足各种不同类型数据的需求\",{\"1\":{\"1161\":1}}],[\"可以解析包含时间单位的字符串\",{\"1\":{\"1161\":1}}],[\"可以减少系统调用次数\",{\"1\":{\"1153\":1}}],[\"可以减少修改字符串带来的内存重分配次数\",{\"1\":{\"393\":1,\"402\":1}}],[\"可以同时有多个\",{\"1\":{\"1144\":1}}],[\"可以同时对新的主服务器进行同步的从服务器数量\",{\"1\":{\"426\":1}}],[\"可以等待一组\",{\"1\":{\"1144\":1}}],[\"可以获取信号量\",{\"1\":{\"1142\":1}}],[\"可以获取5\",{\"1\":{\"153\":1}}],[\"可以与其他状态同时存在\",{\"1\":{\"1132\":1}}],[\"可以以完全零分配的方式使用\",{\"1\":{\"1112\":1}}],[\"可以放在元数据中\",{\"1\":{\"1093\":1}}],[\"可以我们的服务端可以类似这样的去写\",{\"1\":{\"1088\":1}}],[\"可以找到对应的文件\",{\"1\":{\"1067\":1}}],[\"可以像调用本地方法一样去调用另一个进程上的服务\",{\"1\":{\"1066\":1}}],[\"可以体会到\",{\"1\":{\"1057\":1}}],[\"可以缓解资源分配和释放的代价\",{\"1\":{\"1055\":1}}],[\"可以进行签名\",{\"1\":{\"1047\":1}}],[\"可以进入本节的正题了\",{\"1\":{\"470\":1}}],[\"可以调用\",{\"1\":{\"1037\":1}}],[\"可以极大简化项目编译的过程\",{\"1\":{\"1023\":1}}],[\"可以实现这样的形式\",{\"1\":{\"1019\":1}}],[\"可以定时来处理我们的任务\",{\"1\":{\"997\":1}}],[\"可以这样写\",{\"1\":{\"1172\":1}}],[\"可以这样初始化它\",{\"1\":{\"991\":1}}],[\"可以这么说\",{\"1\":{\"532\":1}}],[\"可以这么理解\",{\"1\":{\"231\":1}}],[\"可以把选项分为两类\",{\"1\":{\"991\":1}}],[\"可以发现就在对应的mocks目录下里有一个mock\",{\"1\":{\"977\":1}}],[\"可以手动检查redis中的值是否复合预期\",{\"1\":{\"976\":1}}],[\"可以作为代码与遗留类\",{\"1\":{\"904\":1}}],[\"可以保证系统中只有一个对象\",{\"1\":{\"900\":1}}],[\"可以更新\",{\"1\":{\"1144\":1}}],[\"可以更精细地控制对象的创建过程\",{\"1\":{\"872\":1}}],[\"可以更快的启动\",{\"1\":{\"413\":1}}],[\"可以恢复到之前的状态时\",{\"1\":{\"837\":1}}],[\"可以根据现有环境和条件以及我们的需求\",{\"1\":{\"1038\":1}}],[\"可以根据需要构造链\",{\"1\":{\"813\":1}}],[\"可以根据需要在链中增加或者删除处理器\",{\"1\":{\"813\":1}}],[\"可以根据之前计算出来的数值进行计算\",{\"1\":{\"264\":1}}],[\"可以快速在google\",{\"1\":{\"731\":1}}],[\"可以帮助我们编写更加健壮和可靠的代码\",{\"1\":{\"1088\":1}}],[\"可以帮助我们更好的管理依赖注入的代码\",{\"1\":{\"981\":1}}],[\"可以帮助你快速完成任务\",{\"1\":{\"731\":1}}],[\"可以帮助职业道路反思者更好地看到自己的情况\",{\"1\":{\"572\":1}}],[\"可以当做qifm的替代品\",{\"1\":{\"698\":1}}],[\"可以顺利完成某些工作\",{\"1\":{\"674\":1}}],[\"可以生产的信息是指知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"可以生产的信息和无法生产的信息\",{\"1\":{\"647\":1,\"686\":1}}],[\"可以生成一条\",{\"1\":{\"386\":1}}],[\"可以创造有价值的内容\",{\"1\":{\"646\":1}}],[\"可以影响更多的人\",{\"1\":{\"646\":1}}],[\"可以积累财富并成为社会的统治者\",{\"1\":{\"646\":1}}],[\"可以考虑长期持有垄断企业的股票债权\",{\"1\":{\"598\":1}}],[\"可以考虑尝试下这个库\",{\"1\":{\"487\":1}}],[\"可以有一定的现金量\",{\"1\":{\"598\":1}}],[\"可以有两部分组成\",{\"1\":{\"264\":1}}],[\"可以置之不理一次两次\",{\"1\":{\"551\":1}}],[\"可以吗\",{\"1\":{\"533\":1}}],[\"可以读取同一个目录下的env文件\",{\"1\":{\"509\":1}}],[\"可以继续增加\",{\"1\":{\"483\":1}}],[\"可以输出一个\",{\"1\":{\"483\":1}}],[\"可以用于表示以纳秒\",{\"1\":{\"1205\":1}}],[\"可以用于格式化任意类型的值\",{\"1\":{\"1173\":1}}],[\"可以用于在运行期初始化\",{\"1\":{\"461\":1}}],[\"可以用各种ai辅助翻译\",{\"1\":{\"764\":1}}],[\"可以用手机登录淘宝时\",{\"1\":{\"551\":1}}],[\"可以用如下方式\",{\"1\":{\"468\":1}}],[\"可以用下面的命令\",{\"1\":{\"54\":1}}],[\"可以用下面的命令删除\",{\"1\":{\"52\":1}}],[\"可以用下面的命令专门显示这类镜像\",{\"1\":{\"52\":1}}],[\"可以来保存分布式锁\",{\"1\":{\"436\":1}}],[\"可以让原本不兼容的类工作在一起\",{\"1\":{\"906\":1}}],[\"可以让我们获取任意对象的type和value\",{\"1\":{\"1187\":1}}],[\"可以让我们在控制台查看struct和slices理论上log包和fmt包也可以查看这些信息\",{\"1\":{\"509\":1}}],[\"可以让我们在运行期再初始化静态变量\",{\"1\":{\"460\":1}}],[\"可以让我自由骑行\",{\"1\":{\"698\":1}}],[\"可以让商品能够被大规模生产和加工\",{\"1\":{\"677\":1}}],[\"可以让接收命令的节点成为node\",{\"1\":{\"433\":1}}],[\"可以让一个服务器去复制另一个服务器\",{\"1\":{\"425\":1}}],[\"可以引入\",{\"1\":{\"388\":1}}],[\"可以做到强一致吗\",{\"0\":{\"387\":1},\"1\":{\"380\":1}}],[\"可以做这两题\",{\"1\":{\"268\":1}}],[\"可以直接用链表结构将空闲的缓冲页作为链表节点\",{\"1\":{\"377\":1}}],[\"可以不指定主键的值\",{\"1\":{\"369\":1}}],[\"可以称为逻辑日志\",{\"1\":{\"358\":1}}],[\"可以说是一步错步步错\",{\"1\":{\"927\":1}}],[\"可以说这是wal技术的另一个优点\",{\"1\":{\"357\":1}}],[\"可以说基于eth发展出的生态已经让eth基于区块链开发的垄断地位了\",{\"1\":{\"109\":1}}],[\"可以避免回表的操作\",{\"1\":{\"353\":1}}],[\"可以避免浪费空间\",{\"1\":{\"50\":1}}],[\"可以增加一个索引页中存储的索引值\",{\"1\":{\"353\":1}}],[\"可以建立联合索引\",{\"1\":{\"351\":1}}],[\"可以拿到最多价值的礼物\",{\"1\":{\"319\":1}}],[\"可以声明一个虚拟头节点\",{\"1\":{\"296\":1}}],[\"可以分成以下几个部分\",{\"1\":{\"292\":3}}],[\"可以初始化为true么\",{\"1\":{\"267\":1}}],[\"可以删除任意一个字符串中的一个字符\",{\"1\":{\"265\":1}}],[\"可以删除0个元素\",{\"1\":{\"264\":1}}],[\"可以买卖两次\",{\"1\":{\"254\":1}}],[\"可以由两个下标\",{\"1\":{\"258\":1}}],[\"可以由两个状态推出来\",{\"1\":{\"252\":1}}],[\"可以由前一个strs里的字符串推导出来\",{\"1\":{\"240\":1}}],[\"可以通过类型断言将其转换为具体类型\",{\"1\":{\"1189\":1}}],[\"可以通过方法名自动注册http方法\",{\"1\":{\"1186\":1}}],[\"可以通过init函数在包被加载的时候创建对象\",{\"1\":{\"883\":1}}],[\"可以通过不同的建造者创建不同的产品对象\",{\"1\":{\"872\":1}}],[\"可以通过载入和执行aof文件中保存的命令来还原服务器关闭之前的数据库状态\",{\"1\":{\"421\":1}}],[\"可以通过表头三个字段的⻓度直接定位\",{\"1\":{\"399\":1}}],[\"可以通过\",{\"1\":{\"357\":1}}],[\"可以通过辅助stack做\",{\"1\":{\"302\":1}}],[\"可以通过dp\",{\"1\":{\"236\":1}}],[\"可以通过添加\",{\"1\":{\"66\":1}}],[\"可以看到它的类型是map\",{\"1\":{\"1093\":1}}],[\"可以看到我们传递的data\",{\"1\":{\"1080\":1}}],[\"可以看到我们修改了对应的\",{\"1\":{\"1080\":1}}],[\"可以看到获取到了对应的name字段\",{\"1\":{\"1080\":1}}],[\"可以看到结果是\",{\"1\":{\"1063\":1}}],[\"可以看到这样的实现及其优雅\",{\"1\":{\"1019\":1}}],[\"可以看到当我们不想使用第三方库来实现cron的时候\",{\"1\":{\"998\":1}}],[\"可以看到两个测试用例的结果都符合预期\",{\"1\":{\"975\":1}}],[\"可以看到一下信息\",{\"1\":{\"516\":1}}],[\"可以看到具体出现问题的行数\",{\"1\":{\"447\":1}}],[\"可以看到\",{\"1\":{\"360\":2,\"463\":1,\"1080\":2,\"1135\":3}}],[\"可以看到mysql的架构总共分为两层\",{\"1\":{\"341\":1}}],[\"可以看到pando\",{\"1\":{\"174\":1}}],[\"可以看出来\",{\"1\":{\"265\":1,\"357\":1,\"474\":1}}],[\"可以看出相对于二维dp数组的写法\",{\"1\":{\"236\":1}}],[\"可以看出\",{\"1\":{\"235\":1,\"248\":1,\"252\":1}}],[\"可以看出dp\",{\"1\":{\"235\":1}}],[\"可以看出i\",{\"1\":{\"235\":1}}],[\"可以得到的最大乘积为dp\",{\"1\":{\"231\":1}}],[\"可以重新获取session信息\",{\"1\":{\"199\":1}}],[\"可以搭配react\",{\"1\":{\"194\":1}}],[\"可以很大程度上避免幻读现象的发生\",{\"1\":{\"361\":1}}],[\"可以很方便的集成到nextauth中\",{\"1\":{\"194\":1}}],[\"可以很容易的在当前宿主机上运行\",{\"1\":{\"48\":1}}],[\"可以和mixpay合作来拓展使用的场景\",{\"1\":{\"188\":1}}],[\"可以选择部分偿还或全部偿还\",{\"1\":{\"161\":1}}],[\"可以赚取存款利息\",{\"1\":{\"158\":1}}],[\"可以将\",{\"1\":{\"1156\":1}}],[\"可以将两个连续的未使用的内存块合并\",{\"1\":{\"1147\":1}}],[\"可以将服务给分离成很多服务\",{\"1\":{\"1063\":1}}],[\"可以将接口通过逗号连接起来\",{\"1\":{\"977\":1}}],[\"可以将相关信息输入到一个文件中\",{\"1\":{\"969\":1}}],[\"可以将业务逻辑拆分为不同的结构层次\",{\"1\":{\"911\":1}}],[\"可以将目标类和适配者类解耦\",{\"1\":{\"906\":1}}],[\"可以将目标节点clusterstate\",{\"1\":{\"432\":1}}],[\"可以将这两个方面封装在独立的对象中\",{\"1\":{\"843\":1}}],[\"可以将限制提高到每笔交易\",{\"1\":{\"139\":1}}],[\"可以将指定的程序所有者重新分配给其他程序帐户\",{\"1\":{\"112\":1}}],[\"可以理解为unix世界里的文件\",{\"1\":{\"111\":1}}],[\"可以验证过去10分钟的交易\",{\"1\":{\"94\":1}}],[\"可以制作各种具体的应用镜像\",{\"1\":{\"78\":1}}],[\"可以提供很多有用的特性\",{\"1\":{\"74\":1}}],[\"可以添加任何额外的优先级费用\",{\"1\":{\"118\":1}}],[\"可以添加\",{\"1\":{\"71\":1}}],[\"可以在某些场景下提供灵活性和便利性\",{\"1\":{\"1194\":1}}],[\"可以在线程运行\",{\"1\":{\"1132\":1}}],[\"可以在不修改原对象的情况下对访问进行控制和扩展\",{\"1\":{\"940\":1}}],[\"可以在不影响其他模块的情况下增加或者修改系统\",{\"1\":{\"926\":1}}],[\"可以在不改变各个元素的类的前提下\",{\"1\":{\"865\":1}}],[\"可以在一开始投入啊\",{\"1\":{\"806\":1}}],[\"可以在一台服务器上启动多个节点或者采用分片集群的方式\",{\"1\":{\"412\":1}}],[\"可以在开头和结尾加\",{\"1\":{\"483\":1}}],[\"可以在事务没提交之前持久化到磁盘\",{\"1\":{\"360\":1}}],[\"可以在pando各种场景下使用\",{\"1\":{\"187\":1}}],[\"可以在删除容器的时候使用\",{\"1\":{\"74\":1}}],[\"可以在容器之间共享和重用\",{\"1\":{\"74\":1}}],[\"可以在伪终端中利用\",{\"1\":{\"65\":1}}],[\"可以在其中寻找一个最符合我们最终目标的镜像为基础镜像进行定制\",{\"1\":{\"57\":1}}],[\"可以利用技术和创新\",{\"1\":{\"646\":1}}],[\"可以利用自己的专业知识开设在线课程\",{\"1\":{\"646\":1}}],[\"可以利用\",{\"1\":{\"65\":1,\"356\":1}}],[\"可以执行代码\",{\"1\":{\"1132\":1}}],[\"可以执行\",{\"1\":{\"55\":1}}],[\"可以执行下面的命令\",{\"1\":{\"50\":1}}],[\"可以是完整接口的替换\",{\"1\":{\"956\":1}}],[\"可以是主观下线或者客观下线\",{\"1\":{\"426\":1}}],[\"可以是上限或下限\",{\"1\":{\"122\":1}}],[\"可以是\",{\"1\":{\"55\":1}}],[\"可以使用reflect\",{\"1\":{\"1188\":1}}],[\"可以使用以下代码\",{\"1\":{\"1172\":1}}],[\"可以使用该字段快速判断目标类型和具体类型\",{\"1\":{\"1139\":1}}],[\"可以使用密钥\",{\"1\":{\"1047\":1}}],[\"可以使用when\",{\"1\":{\"960\":1}}],[\"可以使用饿汉式或懒汉式单例模式来实现\",{\"1\":{\"900\":1}}],[\"可以使用单例模式来解决问题\",{\"1\":{\"894\":1}}],[\"可以使用单机模式的redis\",{\"1\":{\"432\":1}}],[\"可以使用访问者模式来封装这些遍历方式\",{\"1\":{\"866\":1}}],[\"可以使用访问者模式\",{\"1\":{\"866\":2}}],[\"可以使用模板方法模式\",{\"1\":{\"859\":1}}],[\"可以使用策略模式来封装和复用这些算法\",{\"1\":{\"854\":1}}],[\"可以使用策略模式来避免多重条件分支语句\",{\"1\":{\"854\":1}}],[\"可以使用策略模式\",{\"1\":{\"854\":1}}],[\"可以使用状态模式来消除冗余的条件分支语句\",{\"1\":{\"848\":1}}],[\"可以使用状态模式来管理这些状态和转换逻辑\",{\"1\":{\"848\":1}}],[\"可以使用状态模式\",{\"1\":{\"848\":1}}],[\"可以使用观察者模式\",{\"1\":{\"843\":3}}],[\"可以使用备忘录模式\",{\"1\":{\"837\":3}}],[\"可以使用中介者模式来实现灵活的变化\",{\"1\":{\"832\":1}}],[\"可以使用中介者模式来减少对象之间的依赖关系\",{\"1\":{\"832\":1}}],[\"可以使用中介者模式来简化它们之间的交互\",{\"1\":{\"832\":1}}],[\"可以使用insert\",{\"1\":{\"478\":1}}],[\"可以使用下面这两个方式\",{\"1\":{\"370\":1}}],[\"可以使用下面这条命令\",{\"1\":{\"366\":1}}],[\"可以使用下面的命令\",{\"1\":{\"366\":1}}],[\"可以使用保险金库进行清算\",{\"1\":{\"152\":1}}],[\"可以使用\",{\"1\":{\"51\":1,\"55\":2,\"67\":1,\"69\":1,\"70\":1,\"71\":1,\"413\":1,\"1205\":1}}],[\"时区相关操作\",{\"1\":{\"1212\":1}}],[\"时区处理\",{\"1\":{\"1205\":1,\"1213\":1}}],[\"时经常会使用的方法\",{\"1\":{\"1146\":1}}],[\"时的\",{\"1\":{\"1002\":1}}],[\"时的阅读概要\",{\"1\":{\"93\":1}}],[\"时光如白驹过隙\",{\"1\":{\"757\":1}}],[\"时冷时热\",{\"1\":{\"609\":1}}],[\"时不我予的哀愁\",{\"1\":{\"505\":2}}],[\"时提供的错误信息\",{\"1\":{\"449\":1}}],[\"时刻\",{\"1\":{\"362\":3}}],[\"时当前数据库中应该给下一个事务的\",{\"1\":{\"362\":1}}],[\"时间计算\",{\"1\":{\"1212\":1}}],[\"时间计算和比较\",{\"1\":{\"1205\":1,\"1213\":1}}],[\"时间比较\",{\"1\":{\"1212\":1}}],[\"时间表示和创建函数\",{\"1\":{\"1205\":1}}],[\"时间到了就发信号给有限状态机切换状态\",{\"1\":{\"1009\":1}}],[\"时间格式化和解析\",{\"1\":{\"1205\":1}}],[\"时间格式\",{\"0\":{\"1002\":1}}],[\"时间等\",{\"1\":{\"967\":1}}],[\"时间结束后依然要回到原先的生活轨迹\",{\"1\":{\"695\":1}}],[\"时间是最重要的生产资料了\",{\"1\":{\"686\":1}}],[\"时间是不变的生产资料\",{\"1\":{\"646\":1}}],[\"时间被用来进行研究\",{\"1\":{\"677\":1}}],[\"时间作为不变的生产资料在信息时代依然至关重要\",{\"1\":{\"649\":1}}],[\"时间都是关键的生产资料\",{\"1\":{\"646\":1}}],[\"时间的管理也是财富创造的关键\",{\"1\":{\"646\":1}}],[\"时间的灵活性\",{\"1\":{\"571\":1}}],[\"时间也的确重要\",{\"1\":{\"646\":1}}],[\"时间对于每个人都是公平的\",{\"1\":{\"646\":1,\"677\":1}}],[\"时间加上意向性\",{\"1\":{\"621\":1}}],[\"时间和地点的影响\",{\"0\":{\"619\":1}}],[\"时间地点的影响\",{\"1\":{\"618\":1}}],[\"时间发生了\",{\"1\":{\"570\":1}}],[\"时间段有特殊意义\",{\"1\":{\"566\":1}}],[\"时间戳创建一个\",{\"1\":{\"1212\":1}}],[\"时间戳\",{\"1\":{\"514\":1,\"1212\":1}}],[\"时间最友好\",{\"1\":{\"414\":1}}],[\"时间复杂度\",{\"1\":{\"950\":1}}],[\"时间复杂度有o\",{\"1\":{\"944\":1}}],[\"时间复杂度就是o\",{\"1\":{\"393\":1,\"402\":1}}],[\"时间复杂度是o\",{\"1\":{\"393\":1,\"402\":1}}],[\"时间\",{\"1\":{\"341\":1,\"571\":1,\"580\":1,\"583\":1,\"979\":1,\"1142\":1,\"1205\":1}}],[\"时循环\",{\"1\":{\"326\":1}}],[\"时跳出\",{\"1\":{\"287\":1}}],[\"时取最小的\",{\"1\":{\"266\":1}}],[\"时会连本带息将所有的资金都拿回\",{\"1\":{\"150\":1}}],[\"时至今日\",{\"1\":{\"94\":1}}],[\"时\",{\"1\":{\"52\":1,\"131\":1,\"152\":1,\"235\":1,\"297\":1,\"362\":1,\"368\":2,\"373\":2,\"414\":2,\"423\":1,\"426\":3,\"435\":1,\"448\":1,\"578\":2,\"721\":1,\"771\":1,\"789\":1,\"1002\":1,\"1035\":1,\"1080\":1,\"1142\":1,\"1144\":1,\"1212\":1}}],[\"时常常会混淆容器和虚拟机\",{\"1\":{\"47\":1}}],[\"发行人\",{\"1\":{\"1047\":1}}],[\"发展产品一定要注重社区\",{\"1\":{\"801\":1}}],[\"发展是硬道理\",{\"1\":{\"528\":1,\"534\":1}}],[\"发泄愤怒的效果是减弱它\",{\"1\":{\"653\":1}}],[\"发送数据会被下游阻塞\",{\"1\":{\"1137\":1}}],[\"发送数据时并没有找到接收方并且缓冲区已经满了\",{\"1\":{\"1137\":1}}],[\"发送数据时发现\",{\"1\":{\"1137\":1}}],[\"发送数据时遇到的几种情况\",{\"1\":{\"1137\":1}}],[\"发送数据时会调用\",{\"1\":{\"1137\":1}}],[\"发送数据时会调用runtime\",{\"1\":{\"1137\":1}}],[\"发送数据时\",{\"1\":{\"1137\":1}}],[\"发送数据\",{\"1\":{\"1137\":2}}],[\"发送数据的过程中包含几个会触发\",{\"1\":{\"1137\":1}}],[\"发送数据的\",{\"1\":{\"1136\":1}}],[\"发送接收元数据\",{\"0\":{\"1094\":1}}],[\"发送\",{\"1\":{\"1010\":1}}],[\"发送消息通知\",{\"1\":{\"927\":1}}],[\"发送消息\",{\"1\":{\"833\":1}}],[\"发送文件可以给多个接收者\",{\"1\":{\"494\":1}}],[\"发送者和接收者不需要知道彼此\",{\"1\":{\"813\":1}}],[\"发送者所处集群的状态\",{\"1\":{\"435\":1}}],[\"发送者所处的配置纪元\",{\"1\":{\"435\":1}}],[\"发送者的标识值\",{\"1\":{\"435\":1}}],[\"发送者的端口号\",{\"1\":{\"435\":1}}],[\"发送者的名字\",{\"1\":{\"435\":1}}],[\"发送者目前的槽指派信息\",{\"1\":{\"435\":1}}],[\"发送者会向接收者发送meet消息\",{\"1\":{\"434\":1}}],[\"发送sentinel\",{\"1\":{\"426\":2}}],[\"发送replconf\",{\"1\":{\"425\":1}}],[\"发送端口信息\",{\"1\":{\"425\":1}}],[\"发送的命令请求\",{\"1\":{\"425\":1}}],[\"发送ping命令\",{\"1\":{\"425\":1,\"426\":1}}],[\"发送给从服务器执行\",{\"1\":{\"425\":1}}],[\"发送给模式的订阅者就是遍历所有模式\",{\"1\":{\"423\":1}}],[\"发送给客户端这个过程是一个线程完成的\",{\"1\":{\"411\":1}}],[\"发\",{\"1\":{\"424\":1,\"426\":2,\"431\":2,\"435\":1}}],[\"发现是生成失败的\",{\"1\":{\"1084\":1}}],[\"发现了没有\",{\"1\":{\"1055\":1}}],[\"发现这个原因是我自己造成的\",{\"1\":{\"660\":2}}],[\"发现思想和交流思想\",{\"1\":{\"627\":1}}],[\"发现证据\",{\"1\":{\"627\":1}}],[\"发现没什么用接着继续抱怨\",{\"1\":{\"592\":1}}],[\"发现它并不一定是基于你实际想要的东西\",{\"1\":{\"578\":1}}],[\"发现它是别人植入给你的一个最初的原因\",{\"1\":{\"575\":1}}],[\"发现自己走上了父母\",{\"1\":{\"570\":1}}],[\"发现不存在\",{\"1\":{\"384\":1,\"386\":1}}],[\"发现某用户健康因子接近1\",{\"1\":{\"163\":1}}],[\"发生curl网络请求\",{\"1\":{\"972\":1}}],[\"发生关键性转折\",{\"1\":{\"605\":1}}],[\"发生的概率其实是非常低的\",{\"1\":{\"384\":1}}],[\"发生\",{\"1\":{\"383\":1}}],[\"发生不一致\",{\"1\":{\"383\":1,\"384\":2,\"386\":1}}],[\"发生冲突\",{\"1\":{\"368\":1}}],[\"发生了什么\",{\"1\":{\"355\":1}}],[\"发生索引失效的情况\",{\"1\":{\"353\":1}}],[\"发生读写\",{\"1\":{\"47\":1}}],[\"发布于\",{\"1\":{\"1047\":1}}],[\"发布消息\",{\"1\":{\"423\":1}}],[\"发布与订阅\",{\"0\":{\"423\":1}}],[\"发布的最新指南\",{\"1\":{\"193\":1}}],[\"发布了新版本后\",{\"1\":{\"52\":1}}],[\"随机漫步的傻瓜\",{\"1\":{\"503\":1,\"669\":1}}],[\"随机写\",{\"1\":{\"357\":2}}],[\"随后需要重新加上grpc\",{\"1\":{\"1079\":1}}],[\"随后又会有相当多的新事物出现\",{\"1\":{\"731\":1}}],[\"随后\",{\"1\":{\"253\":1,\"254\":1,\"1067\":1}}],[\"随着内存的不断分配申请释放\",{\"1\":{\"1147\":1}}],[\"随着年龄增长\",{\"1\":{\"771\":1}}],[\"随着年龄的增长\",{\"1\":{\"586\":1}}],[\"随着挖矿的递减市场上流通的比特币是越来越少的\",{\"1\":{\"767\":1}}],[\"随着美国经济的增长\",{\"1\":{\"648\":1}}],[\"随着互联网和数字技术的发展\",{\"1\":{\"646\":1}}],[\"随着互联网的广泛传播后\",{\"1\":{\"532\":1}}],[\"随着科技和社会的进步\",{\"1\":{\"646\":1}}],[\"随着社会的发展\",{\"1\":{\"646\":1,\"746\":1}}],[\"随着时间推移\",{\"1\":{\"620\":1}}],[\"随着时间可以进步\",{\"1\":{\"605\":2}}],[\"随着时间能够进步的东西\",{\"1\":{\"605\":1}}],[\"随着你变得更加智慧\",{\"1\":{\"587\":1}}],[\"随着字典操作的不断执行\",{\"1\":{\"396\":1}}],[\"随着\",{\"1\":{\"75\":1}}],[\"随着官方镜像维护\",{\"1\":{\"52\":1}}],[\"随便摆个地摊\",{\"1\":{\"11\":1}}],[\"相关概念\",{\"0\":{\"1218\":1}}],[\"相关的字段\",{\"1\":{\"1133\":1}}],[\"相关的状态之外\",{\"1\":{\"1132\":1}}],[\"相关信息\",{\"1\":{\"52\":1,\"152\":1,\"383\":2,\"393\":1,\"397\":1,\"425\":1,\"447\":1,\"454\":1,\"468\":1,\"494\":1,\"572\":1,\"605\":2,\"614\":1,\"626\":1,\"631\":1,\"637\":1,\"646\":1,\"673\":1,\"677\":1,\"680\":1,\"739\":1,\"789\":1,\"806\":1,\"1047\":1,\"1063\":1,\"1066\":1,\"1071\":1,\"1078\":1,\"1153\":1,\"1156\":1,\"1160\":2,\"1166\":2,\"1177\":1,\"1197\":1,\"1201\":1,\"1205\":1,\"1225\":1}}],[\"相对应的就是本地调用\",{\"1\":{\"1063\":1}}],[\"相对于中心化稳定币\",{\"1\":{\"185\":1}}],[\"相比建造者模式\",{\"1\":{\"873\":1}}],[\"相比之下抱怨真的是一切的良药\",{\"1\":{\"592\":1}}],[\"相比之下\",{\"1\":{\"571\":1,\"581\":1}}],[\"相信很多人入坑go语言都是从官网的fmt\",{\"1\":{\"1166\":1}}],[\"相信没有多少人能够接受\",{\"1\":{\"709\":1}}],[\"相信或多或少都听过这句话\",{\"1\":{\"701\":1}}],[\"相信人是可以通过花费时间和精力去提升自己某一方面的能力\",{\"1\":{\"674\":1}}],[\"相信我\",{\"1\":{\"586\":1,\"754\":1}}],[\"相信关于世界和我们潜力的不准确观念\",{\"1\":{\"585\":1}}],[\"相信正朝着那个方向前进\",{\"1\":{\"572\":1}}],[\"相信不远的将来\",{\"1\":{\"385\":1}}],[\"相较于第三个学习\",{\"1\":{\"525\":1}}],[\"相较于其他币更便宜\",{\"1\":{\"175\":1}}],[\"相互通信\",{\"1\":{\"494\":1}}],[\"相兼容\",{\"1\":{\"451\":1}}],[\"相\",{\"1\":{\"424\":1,\"426\":1}}],[\"相反如果你在2018年做这样一件事那么你大概率会获得成功\",{\"1\":{\"799\":1}}],[\"相反如果让他们回忆起十年前的热点\",{\"1\":{\"734\":1}}],[\"相反如果源节点没能在自己的数据库里找到\",{\"1\":{\"432\":1}}],[\"相反它通过我们所说的知识循环中出现的\",{\"1\":{\"649\":1}}],[\"相反若有一个槽没有被处理\",{\"1\":{\"428\":1}}],[\"相反地\",{\"1\":{\"425\":2}}],[\"相反\",{\"1\":{\"387\":1,\"425\":2,\"446\":1,\"572\":1,\"574\":1,\"577\":1,\"583\":1,\"626\":1,\"680\":1}}],[\"相邻\",{\"1\":{\"284\":1}}],[\"相邻的房屋装有相互连通的防盗系统\",{\"1\":{\"249\":1}}],[\"相当多数企业高管\",{\"1\":{\"532\":1}}],[\"相当长时间以来我都没有深入学习过图论算法\",{\"1\":{\"271\":1}}],[\"相当于调用了\",{\"1\":{\"481\":1}}],[\"相当于这个预读是白做了\",{\"1\":{\"377\":1}}],[\"相当于延迟了\",{\"1\":{\"360\":1}}],[\"相当于记录了逻辑操作\",{\"1\":{\"358\":1}}],[\"相当于一个环形\",{\"1\":{\"357\":2}}],[\"相当于word1删除一个元素\",{\"1\":{\"266\":1}}],[\"相当于t要删除元素\",{\"1\":{\"263\":1}}],[\"相当于\",{\"1\":{\"236\":1,\"480\":1,\"1037\":1}}],[\"相当于利息不用付了\",{\"1\":{\"177\":1}}],[\"相当于是所有存款人来平均支付坏账\",{\"1\":{\"150\":1}}],[\"相等的元素\",{\"1\":{\"405\":1}}],[\"相等了\",{\"1\":{\"266\":1}}],[\"相等时\",{\"1\":{\"264\":2,\"267\":1}}],[\"相等\",{\"1\":{\"264\":1,\"267\":1,\"1099\":1}}],[\"相加\",{\"1\":{\"242\":1}}],[\"相同所需的最小步数\",{\"1\":{\"265\":1}}],[\"相同子序列长度自然要在dp\",{\"1\":{\"263\":1}}],[\"相同子序列的长度为dp\",{\"1\":{\"263\":2}}],[\"相同\",{\"1\":{\"260\":2,\"266\":1,\"268\":1}}],[\"相同的\",{\"1\":{\"360\":2}}],[\"相同的时候\",{\"1\":{\"265\":2}}],[\"相同的话\",{\"1\":{\"259\":1}}],[\"相同的层只会存一遍\",{\"1\":{\"53\":1}}],[\"相同的层只需要保存一份即可\",{\"1\":{\"51\":1}}],[\"相同之处\",{\"1\":{\"157\":1}}],[\"更高级的缓冲写入器等\",{\"1\":{\"1153\":1}}],[\"更高的分辨率\",{\"1\":{\"9\":1}}],[\"更好地划分访问层次\",{\"1\":{\"926\":1}}],[\"更抽象的接口\",{\"1\":{\"926\":1}}],[\"更推荐函数选项模式\",{\"1\":{\"875\":1}}],[\"更推荐使用函数选项模式\",{\"1\":{\"873\":1}}],[\"更符合go语言的简洁风格\",{\"1\":{\"873\":1}}],[\"更符合普通大众的使用习惯\",{\"1\":{\"180\":1}}],[\"更喜欢马\",{\"1\":{\"773\":1}}],[\"更重要的是\",{\"1\":{\"751\":1}}],[\"更重要的东西总不会明码标价\",{\"1\":{\"648\":1}}],[\"更不因我们的一厢情愿而改变\",{\"1\":{\"637\":1}}],[\"更合适的措辞可能是\",{\"1\":{\"580\":1}}],[\"更勇敢的山谷居民或持续攀登者感到糟糕\",{\"1\":{\"575\":1}}],[\"更想被人钦佩\",{\"1\":{\"573\":1}}],[\"更有可能的是\",{\"1\":{\"575\":1}}],[\"更有有可能具备独立思考能力\",{\"1\":{\"551\":1}}],[\"更有效地管理其财库\",{\"1\":{\"151\":1}}],[\"更挑战着我们对这个世界的认知方式\",{\"1\":{\"531\":1}}],[\"更在于其广度\",{\"1\":{\"509\":1}}],[\"更\",{\"1\":{\"426\":1}}],[\"更多地用于实时通信应用程序\",{\"1\":{\"1073\":1}}],[\"更多是站在研究的角度\",{\"1\":{\"509\":1}}],[\"更多的还是即使当前明白这样的道理\",{\"1\":{\"757\":1}}],[\"更多的其实是从累计资本层面保持垄断优势\",{\"1\":{\"714\":1}}],[\"更多的其实不是锻炼\",{\"1\":{\"698\":1}}],[\"更多的是让心灵放松\",{\"1\":{\"698\":1}}],[\"更多的是作为buidler的想法\",{\"1\":{\"698\":1}}],[\"更多的需要我们在实战中不断积累\",{\"1\":{\"464\":1}}],[\"更多的时候\",{\"1\":{\"66\":1}}],[\"更多情况下是受到内存大小和网络i\",{\"1\":{\"412\":1}}],[\"更新成\",{\"1\":{\"1145\":1}}],[\"更新互斥锁的状态并获取锁\",{\"1\":{\"1142\":1}}],[\"更新程序中处理器的数量\",{\"1\":{\"1134\":1}}],[\"更新products表\",{\"1\":{\"975\":1}}],[\"更新状态\",{\"1\":{\"844\":1,\"1142\":1}}],[\"更新和重写\",{\"1\":{\"575\":1}}],[\"更新sentinels字典\",{\"1\":{\"426\":1}}],[\"更新等操作\",{\"1\":{\"417\":1}}],[\"更新完数据库之后\",{\"1\":{\"386\":1}}],[\"更新主库\",{\"1\":{\"386\":1}}],[\"更新缓存方案\",{\"1\":{\"388\":1}}],[\"更新缓存\",{\"1\":{\"383\":4,\"388\":1}}],[\"更新数据库\",{\"1\":{\"383\":3,\"384\":2,\"388\":3}}],[\"更新到缓存中\",{\"1\":{\"381\":1}}],[\"更新了一条事务\",{\"1\":{\"362\":1}}],[\"更新多少行数据就会产生多少条记录\",{\"1\":{\"358\":1}}],[\"更新\",{\"1\":{\"357\":1,\"358\":1,\"368\":1,\"396\":1,\"1135\":1}}],[\"更新资产份额价值\",{\"1\":{\"152\":1}}],[\"更新资产和债务份额价值\",{\"1\":{\"152\":1}}],[\"更新收集的保险费\",{\"1\":{\"152\":1}}],[\"更新收集的费用\",{\"1\":{\"152\":1}}],[\"更新最后更新时间\",{\"1\":{\"152\":1}}],[\"更新的软件包等等\",{\"1\":{\"58\":1}}],[\"更精确的是使用\",{\"1\":{\"55\":1}}],[\"更关心的是本地磁盘空间占用的大小\",{\"1\":{\"51\":1}}],[\"中读取一行字符串\",{\"1\":{\"1172\":1}}],[\"中读取数据并提供缓冲机制\",{\"1\":{\"1153\":1}}],[\"中读取数据\",{\"1\":{\"1153\":1}}],[\"中并发执行\",{\"1\":{\"1144\":1}}],[\"中总共包含以下\",{\"1\":{\"1143\":1}}],[\"中止当前程序\",{\"1\":{\"1142\":1}}],[\"中接收数据时可能会发生的五种情况\",{\"1\":{\"1137\":1}}],[\"中和待发送数据的内存地址等\",{\"1\":{\"1137\":1}}],[\"中没有\",{\"1\":{\"1135\":1}}],[\"中没有当前内部\",{\"1\":{\"360\":1}}],[\"中已经说了\",{\"1\":{\"1135\":1}}],[\"中一半协程\",{\"1\":{\"1135\":1}}],[\"中是线程下一个需要执行的\",{\"1\":{\"1134\":1}}],[\"中指定的字段来执行正确的操作\",{\"1\":{\"1088\":1}}],[\"中通过引用全局变量的方式将依赖项硬编码到代码中\",{\"1\":{\"981\":1}}],[\"中介者模式适用于对象之间的交互方式复杂且难以理解\",{\"1\":{\"834\":1}}],[\"中介者模式是一种将对象之间的交互封装到一个中心对象的设计模式\",{\"1\":{\"834\":1}}],[\"中介者模式是一种行为型设计模式\",{\"1\":{\"831\":1}}],[\"中介者模式可以实现对象之间的一致性和协调性\",{\"1\":{\"832\":1}}],[\"中介者模式可以实现对象之间的松耦合\",{\"1\":{\"832\":1}}],[\"中介者模式可以降低系统的复杂度\",{\"1\":{\"832\":1}}],[\"中介者模式的优点有以下几种\",{\"1\":{\"832\":1}}],[\"中介者模式的用法有以下几种\",{\"1\":{\"832\":1}}],[\"中介者模式使得各个对象不需要显式地相互引用\",{\"1\":{\"831\":1}}],[\"中介者模式\",{\"0\":{\"831\":1}}],[\"中提到的一样\",{\"1\":{\"757\":1}}],[\"中学到的知识的概念\",{\"1\":{\"605\":1}}],[\"中途职业的人感觉自己太老了\",{\"1\":{\"585\":1}}],[\"中国的充电器接口和插座电源标准都不太一样\",{\"1\":{\"903\":1}}],[\"中国大陆很多地区发生一些恶性事件\",{\"1\":{\"795\":1}}],[\"中国大陆网络热点事件列表\",{\"1\":{\"734\":1}}],[\"中国正在开发一种全新的互联网协议\",{\"1\":{\"533\":1}}],[\"中国人\",{\"1\":{\"468\":1,\"473\":1,\"475\":1,\"485\":1,\"486\":1}}],[\"中县干部\",{\"1\":{\"503\":1,\"669\":1}}],[\"中文的\",{\"1\":{\"1200\":1}}],[\"中文翻译\",{\"1\":{\"569\":1}}],[\"中文版本\",{\"0\":{\"521\":1}}],[\"中文\",{\"1\":{\"480\":1}}],[\"中就会报错\",{\"1\":{\"473\":1}}],[\"中就够了\",{\"1\":{\"360\":1}}],[\"中占用三个字节\",{\"1\":{\"468\":1}}],[\"中创建了一个新\",{\"1\":{\"450\":1}}],[\"中储存的数字值减一\",{\"1\":{\"403\":1}}],[\"中储存的数字值增一\",{\"1\":{\"403\":1}}],[\"中字符串值的子字符\",{\"1\":{\"403\":1}}],[\"中数据所在的页\",{\"1\":{\"377\":1}}],[\"中事务\",{\"1\":{\"362\":1}}],[\"中四个字段作用\",{\"1\":{\"362\":1}}],[\"中查找到与\",{\"1\":{\"360\":2}}],[\"中有讲过时间其实是检验正确的良药\",{\"1\":{\"528\":1}}],[\"中有了一个文件句柄\",{\"1\":{\"450\":1}}],[\"中有当前内部\",{\"1\":{\"360\":1}}],[\"中有\",{\"1\":{\"356\":1}}],[\"中除一个数字只出现一次之外\",{\"1\":{\"331\":1}}],[\"中找出第一个只出现一次的字符\",{\"1\":{\"322\":1}}],[\"中找到符合条件的职业选择\",{\"1\":{\"578\":1}}],[\"中找到\",{\"1\":{\"128\":1}}],[\"中得到\",{\"1\":{\"264\":1}}],[\"中最小的\",{\"1\":{\"244\":1}}],[\"中i的维度去掉了\",{\"1\":{\"236\":1}}],[\"中心化交易所\",{\"1\":{\"698\":1}}],[\"中心化与去中心化的对抗也是一场旷日持久的斗争\",{\"1\":{\"534\":1}}],[\"中心化稳定币主要有两个问题\",{\"1\":{\"184\":1}}],[\"中心化稳定币一般是由中央机构\",{\"1\":{\"184\":1}}],[\"中心化稳定币\",{\"0\":{\"184\":1}}],[\"中心化现实资产挂钩稳定币\",{\"1\":{\"183\":1}}],[\"中间件与业务逻辑的执行过程实际上就是函数序列依序调用形成的函数调用栈的执行过程\",{\"1\":{\"1057\":1}}],[\"中间件与handler\",{\"0\":{\"1056\":1}}],[\"中间件中屡屡调用的c\",{\"1\":{\"1056\":1}}],[\"中间件\",{\"1\":{\"1055\":1}}],[\"中间也有不同的操作可以进行\",{\"1\":{\"1009\":1}}],[\"中间税\",{\"0\":{\"728\":1}}],[\"中间状态\",{\"1\":{\"387\":1}}],[\"中间的架子适合那些你决定接受的并不高尚的品质\",{\"1\":{\"577\":1}}],[\"中间的部分叫碎片空间\",{\"1\":{\"376\":1}}],[\"中间的差价一般由项目方\",{\"1\":{\"166\":1}}],[\"中间再穿插写入binlog\",{\"1\":{\"360\":1}}],[\"中间发生了什么\",{\"1\":{\"341\":1}}],[\"中间层镜像\",{\"0\":{\"53\":1},\"1\":{\"53\":1}}],[\"中本聪的proof\",{\"1\":{\"95\":1}}],[\"中本聪的发明也是一个分布式计算问题的实践和创新\",{\"1\":{\"95\":1}}],[\"中使用的\",{\"1\":{\"78\":1}}],[\"中可以看出dp\",{\"1\":{\"264\":2}}],[\"中可以挂载多个\",{\"1\":{\"74\":1}}],[\"中可以包含多个仓库\",{\"1\":{\"48\":1}}],[\"中这么写\",{\"1\":{\"60\":1}}],[\"中每一个指令都会建立一层\",{\"1\":{\"58\":1}}],[\"中的计数器\",{\"1\":{\"1144\":1}}],[\"中的不同位分别表示了不同的状态\",{\"1\":{\"1142\":1}}],[\"中的数据没有装满\",{\"1\":{\"1137\":1}}],[\"中的数据从主库传输到从库上\",{\"1\":{\"359\":1}}],[\"中的循环队列的长度\",{\"1\":{\"1137\":1}}],[\"中的实体和传递信息的媒介\",{\"1\":{\"1136\":1}}],[\"中的本地\",{\"1\":{\"1135\":1}}],[\"中的内容修改\",{\"1\":{\"1135\":1}}],[\"中的所有元素\",{\"1\":{\"1135\":1}}],[\"中的所有键值对rehash到ht\",{\"1\":{\"395\":1}}],[\"中的协程等待太久\",{\"1\":{\"1135\":1}}],[\"中的长度是\",{\"1\":{\"473\":1}}],[\"中的字符是\",{\"1\":{\"471\":1}}],[\"中的字段\",{\"1\":{\"407\":1}}],[\"中的文件句柄就变成了可变变量\",{\"1\":{\"450\":1}}],[\"中的值\",{\"1\":{\"449\":1,\"450\":1}}],[\"中的键值对进行检查\",{\"1\":{\"414\":1}}],[\"中的过期键不会对生成新\",{\"1\":{\"414\":1}}],[\"中的指定字段的浮点数值加上增量\",{\"1\":{\"407\":1}}],[\"中的指定字段的整数值加上增量\",{\"1\":{\"407\":1}}],[\"中的页就叫做缓存页\",{\"1\":{\"376\":1}}],[\"中的某个数值\",{\"1\":{\"358\":1}}],[\"中的脏页刷新到磁盘中\",{\"1\":{\"357\":1}}],[\"中的历史数据将数据恢复到事务开始之前的状态\",{\"1\":{\"356\":1}}],[\"中的记录都是排序好的\",{\"1\":{\"351\":1}}],[\"中的每个字母在\",{\"1\":{\"473\":1}}],[\"中的每个空格替换成\",{\"1\":{\"277\":1}}],[\"中的每个数字在每个组合中只能使用一次\",{\"1\":{\"212\":1}}],[\"中的进程所看到的文件目录就被隔离开了\",{\"1\":{\"76\":1}}],[\"中的父进程为\",{\"1\":{\"76\":1}}],[\"中的这个\",{\"1\":{\"60\":1}}],[\"中的\",{\"1\":{\"58\":1,\"347\":1,\"349\":1,\"357\":1,\"360\":2,\"362\":2,\"481\":1,\"981\":1}}],[\"中\",{\"1\":{\"57\":1,\"68\":1,\"150\":1,\"254\":1,\"326\":2,\"353\":1,\"358\":1,\"385\":2,\"395\":1,\"406\":1,\"407\":2,\"409\":2,\"410\":3,\"414\":1,\"419\":1,\"424\":1,\"426\":1,\"428\":1,\"431\":1,\"448\":1,\"450\":3,\"468\":1,\"473\":1,\"475\":2,\"480\":1,\"485\":1,\"722\":1,\"1073\":2,\"1087\":2,\"1088\":1,\"1133\":1,\"1135\":5,\"1199\":3}}],[\"中显示的体积是压缩后的体积\",{\"1\":{\"51\":1}}],[\"688674\",{\"1\":{\"1181\":1}}],[\"68eef66df23420a5862208ef5b1a7005b806f2ff\",{\"1\":{\"428\":1}}],[\"61\",{\"1\":{\"1135\":1}}],[\"6小时睡眠时间\",{\"1\":{\"789\":1}}],[\"6亿人民币\",{\"1\":{\"767\":1}}],[\"6亿人民币就可以实现财富自由\",{\"1\":{\"767\":1}}],[\"6行\",{\"1\":{\"517\":1}}],[\"6行代码就是我们之前在官网中所看到的代码\",{\"1\":{\"514\":1}}],[\"64mb\",{\"1\":{\"1149\":1}}],[\"642\",{\"1\":{\"980\":1}}],[\"64k\",{\"1\":{\"804\":1}}],[\"64\",{\"1\":{\"404\":1,\"406\":1,\"410\":1,\"1055\":1,\"1067\":2,\"1135\":1,\"1144\":1,\"1198\":2,\"1199\":1}}],[\"647\",{\"0\":{\"267\":1},\"1\":{\"268\":1}}],[\"673s\",{\"1\":{\"970\":1}}],[\"67\",{\"1\":{\"447\":1}}],[\"674\",{\"0\":{\"258\":1}}],[\"671987a1c3f4\",{\"1\":{\"51\":1}}],[\"624s\",{\"1\":{\"975\":1}}],[\"625µs\",{\"1\":{\"972\":1}}],[\"6257\",{\"1\":{\"429\":1}}],[\"62\",{\"0\":{\"229\":1},\"1\":{\"166\":1}}],[\"651s\",{\"1\":{\"972\":1}}],[\"65\",{\"1\":{\"166\":1,\"751\":1,\"970\":1}}],[\"60\",{\"0\":{\"337\":1},\"1\":{\"150\":1,\"332\":1,\"417\":1,\"571\":1,\"751\":1}}],[\"60k\",{\"1\":{\"26\":4}}],[\"69d1\",{\"1\":{\"68\":2}}],[\"69d137adef7a\",{\"1\":{\"68\":2}}],[\"69d137adef7a8a689cbcb059e94da5489d3cddd240ff675c640c8d96e84fe1f6\",{\"1\":{\"68\":1}}],[\"6e0c4c8e3913\",{\"1\":{\"55\":1}}],[\"6335\",{\"1\":{\"1055\":1}}],[\"6379\",{\"1\":{\"425\":1,\"426\":4}}],[\"63\",{\"0\":{\"230\":1},\"1\":{\"51\":1,\"377\":1}}],[\"6\",{\"0\":{\"163\":1,\"1092\":1},\"1\":{\"51\":3,\"77\":1,\"163\":2,\"166\":1,\"210\":1,\"252\":5,\"253\":4,\"254\":2,\"257\":2,\"262\":2,\"274\":1,\"276\":1,\"289\":1,\"294\":2,\"298\":4,\"300\":4,\"306\":3,\"313\":1,\"315\":2,\"316\":1,\"321\":1,\"323\":1,\"325\":1,\"326\":1,\"327\":2,\"330\":3,\"335\":1,\"336\":9,\"388\":1,\"411\":1,\"412\":2,\"427\":1,\"433\":1,\"447\":2,\"468\":1,\"478\":1,\"523\":1,\"543\":1,\"560\":1,\"944\":1,\"967\":3,\"968\":2,\"970\":1,\"977\":1,\"1002\":5,\"1072\":1,\"1084\":1,\"1125\":2,\"1127\":2,\"1138\":1,\"1219\":1,\"1221\":1,\"1231\":4,\"1232\":1,\"1233\":1,\"1234\":1}}],[\"列出特定的某个镜像\",{\"1\":{\"54\":1}}],[\"列出部分镜像\",{\"0\":{\"54\":1}}],[\"列出容器\",{\"0\":{\"51\":1}}],[\"列表的最后一个元素\",{\"1\":{\"405\":1}}],[\"列表每个元素的值都小于\",{\"1\":{\"404\":1}}],[\"列表对象\",{\"1\":{\"400\":1}}],[\"列表\",{\"1\":{\"362\":1,\"1134\":1,\"1137\":2}}],[\"列表中的每个字段表示需要更新的一个字段的路径\",{\"1\":{\"1088\":1}}],[\"列表中的镜像体积总和并非是所有镜像实际硬盘消耗\",{\"1\":{\"51\":1}}],[\"列表中剩余的从服务器保存的数据都是比较新的\",{\"1\":{\"426\":1}}],[\"列表中\",{\"1\":{\"362\":2}}],[\"列表中只会显示顶层镜像\",{\"1\":{\"53\":1}}],[\"列表包含了\",{\"1\":{\"51\":1}}],[\"退出后就要要么马上执行当前\",{\"1\":{\"1135\":1}}],[\"退出系统调用\",{\"1\":{\"1135\":3}}],[\"退出的容器并不会立即删除\",{\"1\":{\"50\":1}}],[\"退订模式频道的退订差不多\",{\"1\":{\"423\":1}}],[\"退订的话其实就是遍历链表删除操作\",{\"1\":{\"423\":1}}],[\"退款将扣除5\",{\"1\":{\"40\":1}}],[\"默认使用空格作为分隔符\",{\"1\":{\"1172\":1}}],[\"默认提供了一些验证方法\",{\"1\":{\"991\":1}}],[\"默认大小为1mb\",{\"1\":{\"425\":1}}],[\"默认会提供以下配置\",{\"1\":{\"413\":1}}],[\"默认会一直存在\",{\"1\":{\"74\":1}}],[\"默认值和帮助信息\",{\"1\":{\"1161\":1}}],[\"默认值\",{\"1\":{\"404\":2,\"406\":2,\"408\":1}}],[\"默认是lstdflags\",{\"1\":{\"1179\":1}}],[\"默认是\",{\"1\":{\"377\":2}}],[\"默认模型\",{\"1\":{\"359\":1}}],[\"默认格式\",{\"1\":{\"358\":1}}],[\"默认安全\",{\"1\":{\"193\":1}}],[\"默认\",{\"1\":{\"136\":1,\"193\":1,\"1241\":1}}],[\"默认采用\",{\"1\":{\"76\":1}}],[\"默认列出的就已经是短\",{\"1\":{\"55\":1}}],[\"默认的\",{\"1\":{\"53\":1}}],[\"默认情况下logger只会返回对应的日志的时间信息\",{\"1\":{\"1179\":1}}],[\"默认情况下是jwt来记录用户信息\",{\"1\":{\"194\":1}}],[\"默认情况下会使用\",{\"1\":{\"193\":1}}],[\"默认情况下设计为安全\",{\"1\":{\"193\":1}}],[\"默认情况下所有新账户都归系统程序所有\",{\"1\":{\"112\":1}}],[\"默认情况下\",{\"1\":{\"50\":1,\"357\":1}}],[\"默认地址是\",{\"1\":{\"49\":1}}],[\"位的机器上表现也非常不同\",{\"1\":{\"1144\":1}}],[\"位与\",{\"1\":{\"1144\":1}}],[\"位置成\",{\"1\":{\"1142\":1}}],[\"位置和运气\",{\"1\":{\"673\":1}}],[\"位置的值设置为\",{\"1\":{\"405\":1}}],[\"位置i的最长上升子序列的长度等于j从0到i\",{\"1\":{\"257\":1}}],[\"位于gin\",{\"1\":{\"1056\":1}}],[\"位于值\",{\"1\":{\"405\":1}}],[\"位于lru\",{\"1\":{\"377\":1}}],[\"位于\",{\"1\":{\"377\":1}}],[\"位数\",{\"1\":{\"289\":1}}],[\"位十进制数\",{\"1\":{\"289\":1}}],[\"位带符号整数范围\",{\"1\":{\"264\":1}}],[\"位\",{\"1\":{\"49\":1,\"76\":1}}],[\"上存在等待接收数据的\",{\"1\":{\"1137\":1}}],[\"上存在已经被阻塞的\",{\"1\":{\"1137\":1}}],[\"上等待执行\",{\"1\":{\"1137\":1}}],[\"上分配\",{\"1\":{\"1133\":1}}],[\"上都持有两个分别存储\",{\"1\":{\"1132\":1}}],[\"上述方法也会立刻返回\",{\"1\":{\"1144\":1}}],[\"上述两个加起来只占\",{\"1\":{\"1142\":1}}],[\"上述结构体中的另外两个字段也有自己的作用\",{\"1\":{\"1139\":1}}],[\"上述函数不接受任意类型的参数\",{\"1\":{\"1138\":1}}],[\"上述四个字段中\",{\"1\":{\"1132\":1}}],[\"上述handlehttprequest函数执行到c\",{\"1\":{\"1056\":1}}],[\"上述提到的程序账户就可以处理solana网络的交互逻辑\",{\"1\":{\"116\":1}}],[\"上图所示\",{\"1\":{\"1009\":1}}],[\"上海人民广场旗舰店\",{\"1\":{\"779\":1}}],[\"上海交通大学生存指南\",{\"1\":{\"669\":1}}],[\"上海交通大学生存手册\",{\"1\":{\"552\":1}}],[\"上海交通大学学生生存指南\",{\"1\":{\"503\":1}}],[\"上阅读书籍\",{\"1\":{\"772\":1}}],[\"上滑\",{\"1\":{\"631\":1}}],[\"上滑学\",{\"0\":{\"631\":1}}],[\"上诉\",{\"1\":{\"528\":1}}],[\"上搜索\",{\"1\":{\"487\":1}}],[\"上面基本上完整实现了流程控制的部分\",{\"1\":{\"1010\":1}}],[\"上面记载了从95年至今约30年时间里\",{\"1\":{\"734\":1}}],[\"上面这些论述了我为什么不想用ai工具来证明我的思想\",{\"1\":{\"605\":1}}],[\"上面这两条语句必须在一个事务中\",{\"1\":{\"370\":1}}],[\"上面\",{\"1\":{\"395\":1}}],[\"上面的分析解释了指针类型的现象\",{\"1\":{\"1138\":1}}],[\"上面的代码片段中就通过在构造函数中隐式创建依赖项\",{\"1\":{\"981\":1}}],[\"上面的代码就很容易\",{\"1\":{\"981\":1}}],[\"上面的代码中\",{\"1\":{\"975\":1,\"981\":1}}],[\"上面的示例介绍了如何在http\",{\"1\":{\"973\":1}}],[\"上面的静态变量其实不具备线程安全性\",{\"1\":{\"458\":1}}],[\"上面的命令加载主机的\",{\"1\":{\"74\":1}}],[\"上面的命令没有给出docker镜像仓库地址\",{\"1\":{\"49\":1}}],[\"上面的\",{\"1\":{\"58\":1,\"991\":1}}],[\"上面的镜像列表中\",{\"1\":{\"52\":1}}],[\"上质押\",{\"1\":{\"166\":1}}],[\"上借出资产时\",{\"1\":{\"150\":1}}],[\"上如何表示的基础知识\",{\"1\":{\"132\":1}}],[\"上\",{\"1\":{\"114\":1,\"236\":2,\"481\":1,\"1137\":1}}],[\"上具有相同\",{\"1\":{\"76\":1}}],[\"上的连接请求或数据请求\",{\"1\":{\"412\":1}}],[\"上的所有变化并以二进制形式保存在磁盘上\",{\"1\":{\"359\":1}}],[\"上的数据\",{\"1\":{\"358\":1}}],[\"上的债务也进行调整\",{\"1\":{\"150\":1}}],[\"上的\",{\"1\":{\"150\":2}}],[\"上的代币由代币计划拥有的铸币账户\",{\"1\":{\"134\":1}}],[\"上的一\",{\"1\":{\"76\":1}}],[\"上的命名空间\",{\"1\":{\"75\":1}}],[\"上构建的容器也是利用了类似的原理\",{\"1\":{\"61\":1}}],[\"上下文\",{\"1\":{\"60\":1}}],[\"上下文路径\",{\"1\":{\"60\":1}}],[\"上有非常多的高质量的官方镜像\",{\"1\":{\"57\":1}}],[\"上有大量的高质量的镜像可以用\",{\"1\":{\"49\":1}}],[\"上看到的镜像大小不同\",{\"1\":{\"51\":1}}],[\"9e\",{\"1\":{\"1140\":1}}],[\"9小时深度睡眠才能真正休息\",{\"1\":{\"789\":1}}],[\"99\",{\"1\":{\"447\":5,\"547\":1,\"1161\":2}}],[\"999\",{\"1\":{\"289\":1,\"1238\":1}}],[\"9dfb4c4e016e627d9769e4c9bb0d4fa208e65c26\",{\"1\":{\"428\":1}}],[\"9d37a6082e97\",{\"1\":{\"70\":1}}],[\"96\",{\"0\":{\"232\":1}}],[\"96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899b\",{\"1\":{\"55\":1}}],[\"93\",{\"0\":{\"214\":1}}],[\"97时进行兑换\",{\"1\":{\"177\":1}}],[\"9或者1\",{\"1\":{\"177\":1}}],[\"9\",{\"0\":{\"166\":1},\"1\":{\"150\":1,\"163\":1,\"209\":1,\"210\":1,\"245\":1,\"257\":1,\"274\":1,\"276\":1,\"279\":3,\"288\":1,\"289\":1,\"290\":6,\"298\":4,\"300\":4,\"303\":3,\"304\":3,\"305\":3,\"317\":2,\"321\":1,\"326\":1,\"328\":2,\"329\":2,\"331\":3,\"332\":1,\"413\":2,\"433\":1,\"447\":2,\"473\":1,\"543\":4,\"591\":1,\"595\":1,\"1002\":2,\"1072\":1,\"1084\":1,\"1098\":1,\"1127\":2,\"1132\":1,\"1161\":1}}],[\"90年代早期\",{\"1\":{\"532\":1}}],[\"906\",{\"1\":{\"449\":1}}],[\"9000000000000\",{\"1\":{\"1207\":1}}],[\"9000000000\",{\"1\":{\"1207\":1}}],[\"9000000\",{\"1\":{\"1207\":1}}],[\"9000\",{\"1\":{\"1207\":1}}],[\"900\",{\"1\":{\"417\":2}}],[\"90\",{\"1\":{\"150\":2,\"1188\":1}}],[\"90k\",{\"1\":{\"26\":1}}],[\"95\",{\"1\":{\"150\":4}}],[\"92dc2a97ff99\",{\"1\":{\"49\":1}}],[\"$age\",{\"1\":{\"1236\":1,\"1239\":1}}],[\"$sum\",{\"1\":{\"1236\":1}}],[\"$set\",{\"1\":{\"1234\":2}}],[\"$name\",{\"1\":{\"1236\":1,\"1239\":1}}],[\"$group\",{\"1\":{\"1236\":1}}],[\"$gt\",{\"1\":{\"1236\":1}}],[\"$match\",{\"1\":{\"1236\":1}}],[\"$path\",{\"1\":{\"1067\":1}}],[\"$your\",{\"1\":{\"194\":1}}],[\"$800\",{\"1\":{\"164\":1}}],[\"$1k\",{\"1\":{\"164\":1}}],[\"$100k\",{\"1\":{\"164\":1}}],[\"$10k\",{\"1\":{\"164\":2}}],[\"$50k其他资产\",{\"1\":{\"164\":1}}],[\"$builddeps\",{\"1\":{\"58\":2}}],[\"$\",{\"1\":{\"49\":1,\"50\":1,\"52\":1,\"54\":3,\"55\":6,\"56\":3,\"60\":1,\"66\":2,\"68\":7,\"69\":2,\"70\":2,\"71\":1,\"72\":1,\"74\":10,\"90\":1,\"194\":2,\"425\":2,\"447\":1,\"448\":1,\"992\":2,\"1026\":3,\"1067\":2,\"1138\":2,\"1146\":1,\"1161\":2,\"1162\":1,\"1163\":2}}],[\"$65000\",{\"1\":{\"27\":1}}],[\"也支持我们自行配置每行日志的前缀信息\",{\"1\":{\"1180\":1}}],[\"也只会用到一些常见的占位符\",{\"1\":{\"1166\":1}}],[\"也只是尽可能保证一致性而已\",{\"1\":{\"386\":1}}],[\"也降低了上下文切换的开销\",{\"1\":{\"1132\":1}}],[\"也缺点\",{\"1\":{\"1047\":1}}],[\"也适用于所有事物\",{\"1\":{\"771\":1}}],[\"也更加有趣\",{\"1\":{\"698\":1}}],[\"也更容易有加密领域的破圈\",{\"1\":{\"188\":1}}],[\"也很少有人注意到知识可以改变人的观念从而改变人的行为\",{\"1\":{\"647\":1,\"686\":1}}],[\"也很容易出错\",{\"1\":{\"58\":1}}],[\"也比较值得享受\",{\"1\":{\"627\":1}}],[\"也应该是重要的考虑因素\",{\"1\":{\"583\":1}}],[\"也应该是讨论的重要部分\",{\"1\":{\"583\":1}}],[\"也应该停下来问自己\",{\"1\":{\"572\":1}}],[\"也无法像你一样理解全局\",{\"1\":{\"577\":1}}],[\"也无法被修改\",{\"1\":{\"471\":1}}],[\"也许只有一件事能得到它\",{\"1\":{\"577\":1}}],[\"也许这对你来说是正确的\",{\"1\":{\"577\":1}}],[\"也许你可以用省下来的钱买一辆新车或者其他东西\",{\"1\":{\"751\":1}}],[\"也许你会发现一种被压抑的教学热情\",{\"1\":{\"576\":1}}],[\"也许你会发现\",{\"1\":{\"574\":1}}],[\"也许你渴望致富\",{\"1\":{\"574\":1}}],[\"也许你并不认为阻止你的是对失败的恐惧\",{\"1\":{\"574\":1}}],[\"也许是惯性的沉重负担\",{\"1\":{\"574\":1}}],[\"也许是对身份变化的恐惧\",{\"1\":{\"574\":1}}],[\"也许文件不存在\",{\"1\":{\"448\":1}}],[\"也看到未来悬而未决\",{\"1\":{\"573\":1}}],[\"也难全面满足\",{\"1\":{\"573\":1}}],[\"也非常不想成为外群\",{\"1\":{\"573\":1}}],[\"也被吓了一跳\",{\"1\":{\"609\":1}}],[\"也被喜欢\",{\"1\":{\"573\":1}}],[\"也被称为\",{\"1\":{\"287\":1}}],[\"也在持续衰落\",{\"1\":{\"532\":1}}],[\"也即是偏移量offset+1开始的数据\",{\"1\":{\"425\":1}}],[\"也即是造成主从服务器不一致的那条写命令\",{\"1\":{\"425\":1}}],[\"也采用了多个\",{\"1\":{\"412\":1}}],[\"也\",{\"1\":{\"395\":1,\"426\":1,\"428\":1}}],[\"也发生不一致\",{\"1\":{\"384\":1,\"386\":1}}],[\"也要去做\",{\"1\":{\"773\":1}}],[\"也要注意\",{\"1\":{\"723\":1}}],[\"也要保证自己的隐私安全\",{\"1\":{\"710\":1}}],[\"也要保证一次性写入\",{\"1\":{\"358\":1}}],[\"也要使用方便的服务\",{\"1\":{\"710\":1}}],[\"也要连带缓存一起更新\",{\"1\":{\"382\":1}}],[\"也希望淘汰掉\",{\"1\":{\"377\":1}}],[\"也属于间隙锁\",{\"1\":{\"374\":1}}],[\"也包含间隙锁\",{\"1\":{\"374\":1}}],[\"也会陷入阻塞等待其他的协程从\",{\"1\":{\"1137\":1}}],[\"也会负责调度线程上的等待队列\",{\"1\":{\"1134\":1}}],[\"也会死\",{\"1\":{\"800\":1}}],[\"也会有比自己强的\",{\"1\":{\"611\":1}}],[\"也会有类似问题\",{\"1\":{\"383\":1}}],[\"也会深深影响非工作时光的质量\",{\"1\":{\"571\":1}}],[\"也会导致缓存和数据库不一致\",{\"1\":{\"388\":1}}],[\"也会造成\",{\"1\":{\"377\":1}}],[\"也会释放所有表锁\",{\"1\":{\"366\":1}}],[\"也会限制本线程接下来的读写操作\",{\"1\":{\"366\":1}}],[\"也会被用于更新其他sentinel对被监视服务器的认知\",{\"1\":{\"426\":1}}],[\"也会被\",{\"1\":{\"360\":1}}],[\"也会被视作不同的子串\",{\"1\":{\"267\":1}}],[\"也意味着\",{\"1\":{\"362\":1}}],[\"也没有父类字类一说\",{\"1\":{\"883\":1}}],[\"也没有关心过所有这些热点\",{\"1\":{\"734\":1}}],[\"也没有关系\",{\"1\":{\"360\":1}}],[\"也没有查看兑换情况\",{\"1\":{\"706\":1}}],[\"也没有提及好的思考者具备什么品质\",{\"1\":{\"626\":1}}],[\"也没有人是你职业道路的首席执行官\",{\"1\":{\"570\":1}}],[\"也没有知识\",{\"1\":{\"570\":1}}],[\"也没有能力和动力去解决这个问题\",{\"1\":{\"533\":1}}],[\"也没有丢失数据的风险\",{\"1\":{\"360\":1}}],[\"也没有标签\",{\"1\":{\"52\":1}}],[\"也就不需要\",{\"1\":{\"959\":1}}],[\"也就不可能致富了\",{\"1\":{\"776\":1}}],[\"也就说\",{\"1\":{\"377\":1}}],[\"也就减少了大量的\",{\"1\":{\"353\":1}}],[\"也就是当前的\",{\"1\":{\"1137\":1}}],[\"也就是我们下载proto时\",{\"1\":{\"1079\":1}}],[\"也就是我们手动panic\",{\"1\":{\"447\":1}}],[\"也就是不断分割数组的过程\",{\"1\":{\"948\":1}}],[\"也就是从此刻开始正式的计算机科学领域内的学习\",{\"1\":{\"759\":1}}],[\"也就是检索各种主张和论据\",{\"1\":{\"680\":1}}],[\"也就是大众认为的\",{\"1\":{\"653\":1}}],[\"也就是工作循环上\",{\"1\":{\"648\":1}}],[\"也就是数字技术快速膨胀的十年发生的\",{\"1\":{\"610\":1}}],[\"也就是人类过去在某方面积累知识的巅峰\",{\"1\":{\"605\":1}}],[\"也就是你的速度可能能够加快多少\",{\"1\":{\"584\":1}}],[\"也就是固执的表现\",{\"1\":{\"576\":1}}],[\"也就是在审问过程中被证明是真实的那些\",{\"1\":{\"576\":1}}],[\"也就是高手的境界\",{\"1\":{\"525\":1}}],[\"也就是上面图片中的代码\",{\"1\":{\"514\":1}}],[\"也就是上文提到的字符串切片\",{\"1\":{\"471\":1}}],[\"也就是字符串中的字符所占的字节数是变化的\",{\"1\":{\"471\":1}}],[\"也就是连\",{\"1\":{\"468\":1}}],[\"也就是将从服务器的数据库状态更新至主服务器当前所处的数据库状态\",{\"1\":{\"425\":1}}],[\"也就是若rdb文件生成一天后断了电\",{\"1\":{\"416\":1}}],[\"也就是即使从库中的\",{\"1\":{\"414\":1}}],[\"也就是每次写操作命令执行完后\",{\"1\":{\"413\":1}}],[\"也就是列表尾的偏移量\",{\"1\":{\"399\":1}}],[\"也就是仅仅把一条记录锁上\",{\"1\":{\"370\":1}}],[\"也就是写锁\",{\"1\":{\"366\":1}}],[\"也就是读锁\",{\"1\":{\"366\":1}}],[\"也就是全局事务中最大的事务\",{\"1\":{\"362\":1}}],[\"也就是主库上执行事务操作的线程不会等待复制\",{\"1\":{\"359\":1}}],[\"也就是记录\",{\"1\":{\"359\":1}}],[\"也就是保存了所有数据变更的情况\",{\"1\":{\"358\":1}}],[\"也就是要生成一条\",{\"1\":{\"357\":1}}],[\"也就是按照最左优先的方式进行索引的匹配\",{\"1\":{\"353\":1}}],[\"也就是如上4种情况\",{\"1\":{\"266\":1}}],[\"也就是可以放入背包多次\",{\"1\":{\"241\":1}}],[\"也就是容量为j的背包\",{\"1\":{\"236\":1}}],[\"也就是dp\",{\"1\":{\"228\":1}}],[\"也就是现实世界资产在虚拟世界映射的领域\",{\"1\":{\"188\":1}}],[\"也就是说当我们意识到我们的思维里有\",{\"1\":{\"683\":1}}],[\"也就是说我的理由是用来说服自己的\",{\"1\":{\"680\":1}}],[\"也就是说下次思考做选择的时候可能会认真考虑更多的方面\",{\"1\":{\"680\":1}}],[\"也就是说每次执行快照\",{\"1\":{\"413\":1}}],[\"也就是说如果本线程对学生表加了\",{\"1\":{\"366\":1}}],[\"也就是说\",{\"1\":{\"357\":1,\"360\":1,\"383\":1,\"413\":1,\"414\":1,\"706\":1}}],[\"也就是说在数据表中创建的主键索引和二级索引默认使用的是\",{\"1\":{\"341\":1}}],[\"也就是说可以在容器内用容器内部的用户执行程序而非主机上的用户\",{\"1\":{\"76\":1}}],[\"也就是说指定仓库名和标签\",{\"1\":{\"54\":1}}],[\"也就是\",{\"1\":{\"60\":1,\"353\":1,\"362\":1,\"368\":1,\"411\":1,\"468\":1}}],[\"也就是服务端守护进程\",{\"1\":{\"60\":1}}],[\"也就是官方镜像\",{\"1\":{\"49\":1}}],[\"也行\",{\"1\":{\"259\":1}}],[\"也可以向终端输出内容\",{\"1\":{\"1169\":1}}],[\"也可以一次性消费多个\",{\"1\":{\"1034\":1}}],[\"也可以写作\",{\"1\":{\"1003\":2}}],[\"也可以制作市场上人们需要的产品来获取收入\",{\"1\":{\"776\":1}}],[\"也可以问ai\",{\"1\":{\"731\":1}}],[\"也可以选择打磨一项技能\",{\"1\":{\"677\":1}}],[\"也可以实现信息的生产\",{\"1\":{\"647\":1,\"686\":1}}],[\"也可以使用这些占位符\",{\"1\":{\"1173\":1}}],[\"也可以使用docker启动一个redis\",{\"1\":{\"1104\":1}}],[\"也可以使用帮助工具检查\",{\"1\":{\"976\":1}}],[\"也可以使用go\",{\"1\":{\"975\":1}}],[\"也可以使用insert\",{\"1\":{\"478\":1}}],[\"也可以使用push\",{\"1\":{\"477\":1}}],[\"也可以使用递归法\",{\"1\":{\"296\":1}}],[\"也可以说是事务队列的长度\",{\"1\":{\"424\":1}}],[\"也可以回滚事务\",{\"1\":{\"360\":1}}],[\"也可以不删除\",{\"1\":{\"263\":1,\"264\":1}}],[\"也可以不删除任何字符\",{\"1\":{\"260\":1}}],[\"也可以不买卖\",{\"1\":{\"254\":1}}],[\"也可以不与数据库一起使用\",{\"1\":{\"193\":1}}],[\"也可以由两个状态推出来\",{\"1\":{\"252\":1}}],[\"也可以理解是一个滚动数组\",{\"1\":{\"236\":1}}],[\"也可以理解是i的不同元素节点组成的二叉搜索树的个数为dp\",{\"1\":{\"232\":1}}],[\"也可以在没有数据库的情况下使用\",{\"1\":{\"193\":1}}],[\"也可以帮助pusd的更稳定\",{\"1\":{\"187\":1}}],[\"也可以通过innodb\",{\"1\":{\"376\":1}}],[\"也可以通过redo\",{\"1\":{\"357\":1}}],[\"也可以通过\",{\"1\":{\"66\":1}}],[\"也可能是偶然的\",{\"1\":{\"721\":1}}],[\"也可能没有凭证代币\",{\"1\":{\"160\":1}}],[\"也可能不会\",{\"1\":{\"158\":1}}],[\"也有千丝万缕的联系\",{\"1\":{\"1132\":1}}],[\"也有人说\",{\"1\":{\"1073\":1}}],[\"也有机会去通过短视频得到新的认知\",{\"1\":{\"689\":1}}],[\"也有些处于平均水平线以上啊\",{\"1\":{\"683\":1}}],[\"也有白手起家的世界首富musk\",{\"1\":{\"673\":1}}],[\"也有了更多的余地去发展更具体的兴趣\",{\"1\":{\"570\":1}}],[\"也有我们需要了解的一下新知识比如http包的内容\",{\"1\":{\"516\":1}}],[\"也有运行时才初始化的全局变量\",{\"1\":{\"454\":1}}],[\"也有两个操作\",{\"1\":{\"254\":1}}],[\"也有可能是昨天就买入了\",{\"1\":{\"252\":1}}],[\"也有很多简单的套利机会\",{\"1\":{\"153\":1}}],[\"也有一些方便开发\",{\"1\":{\"57\":1}}],[\"也是通过\",{\"1\":{\"1135\":2}}],[\"也是操作系统线程唯一关心的两个goroutine\",{\"1\":{\"1133\":1}}],[\"也是一个json对象\",{\"1\":{\"1047\":1}}],[\"也是不断减少的\",{\"1\":{\"947\":1}}],[\"也是不太推荐的\",{\"1\":{\"383\":1}}],[\"也是腾讯股票值得购买的原因之一\",{\"1\":{\"714\":1}}],[\"也是对自己思想的提炼以及research\",{\"1\":{\"605\":1}}],[\"也是优先化\",{\"1\":{\"577\":1}}],[\"也是唯一一个你自己的版本\",{\"1\":{\"575\":1}}],[\"也是我们度过余生的地方\",{\"1\":{\"570\":1}}],[\"也是难逃其咎的\",{\"1\":{\"551\":1}}],[\"也是web3\",{\"1\":{\"534\":1}}],[\"也是可以对记录加共享锁和独占锁的\",{\"1\":{\"368\":1}}],[\"也是可以的\",{\"1\":{\"235\":1}}],[\"也是可能被持久化到磁盘的\",{\"1\":{\"360\":1}}],[\"也是直接写在\",{\"1\":{\"360\":1}}],[\"也是正确的答案之一\",{\"1\":{\"293\":1}}],[\"也是回文子串\",{\"1\":{\"267\":1}}],[\"也是0\",{\"1\":{\"260\":1}}],[\"也是升序的子序列\",{\"1\":{\"258\":1}}],[\"也是默认将一个数强制拆成4份以及4份以上了\",{\"1\":{\"231\":1}}],[\"也是mixin生态原生的稳定币\",{\"1\":{\"187\":1}}],[\"也是分布式计算的创新\",{\"1\":{\"94\":1}}],[\"也是为什么有时候会发现所删除的层数和自己\",{\"1\":{\"55\":1}}],[\"也不容易编写单元测试\",{\"1\":{\"981\":1}}],[\"也不会进入自旋状态\",{\"1\":{\"1142\":1}}],[\"也不会提高生产力\",{\"1\":{\"804\":1}}],[\"也不会影响备份数据库时的\",{\"1\":{\"364\":1}}],[\"也不必所有事情都生产\",{\"1\":{\"739\":1}}],[\"也不必这样做\",{\"1\":{\"725\":1}}],[\"也不因我们的无知而改变\",{\"1\":{\"637\":1}}],[\"也不善于从大局出发\",{\"1\":{\"577\":1}}],[\"也不是你真正想要的\",{\"1\":{\"576\":1}}],[\"也不是复制\",{\"1\":{\"60\":1}}],[\"也不单单挑战对技术的理解\",{\"1\":{\"531\":1}}],[\"也不知道将通往何方\",{\"1\":{\"528\":1}}],[\"也不知道每个数字重复了几次\",{\"1\":{\"275\":1}}],[\"也不使用box\",{\"1\":{\"461\":1}}],[\"也不能修改\",{\"1\":{\"373\":1}}],[\"也不可以对该记录加\",{\"1\":{\"371\":1}}],[\"也不小于\",{\"1\":{\"283\":1}}],[\"也不例外\",{\"1\":{\"58\":1}}],[\"也因为这种\",{\"1\":{\"60\":1}}],[\"也因为这种隔离的特性\",{\"1\":{\"47\":1}}],[\"也称为\",{\"1\":{\"55\":1}}],[\"也同样可以导致这种现象\",{\"1\":{\"52\":1}}],[\"命运的左右\",{\"1\":{\"505\":1}}],[\"命\",{\"1\":{\"424\":1,\"425\":1,\"426\":2,\"434\":1,\"435\":1}}],[\"命令设置了\",{\"1\":{\"992\":1}}],[\"命令添加行为\",{\"1\":{\"992\":1}}],[\"命令默认生成\",{\"1\":{\"990\":1}}],[\"命令行中指定的浮点数值会被解析并赋值给对应的浮点数变量\",{\"1\":{\"1161\":1}}],[\"命令行中指定的字符串值会被解析并赋值给对应的字符串变量\",{\"1\":{\"1161\":1}}],[\"命令行具体执行的命令\",{\"1\":{\"1025\":1}}],[\"命令行必须使用tab缩进\",{\"1\":{\"1025\":1}}],[\"命令行选项\",{\"1\":{\"988\":1}}],[\"命令行参数的默认值以及对该命令行参数的简短描述\",{\"1\":{\"1162\":2}}],[\"命令行参数的名称\",{\"1\":{\"1162\":2}}],[\"命令行参数\",{\"1\":{\"988\":1,\"991\":1}}],[\"命令别名\",{\"1\":{\"988\":1}}],[\"命令模式可以降低系统的耦合度\",{\"1\":{\"821\":1}}],[\"命令模式是一种将请求封装为对象的设计模式\",{\"1\":{\"821\":1}}],[\"命令模式通常用于以下场景\",{\"1\":{\"819\":1}}],[\"命令模式\",{\"0\":{\"818\":1},\"1\":{\"818\":1}}],[\"命令执行\",{\"1\":{\"427\":1}}],[\"命令传播\",{\"1\":{\"425\":2}}],[\"命令传播操作则用于主从服务器状态不一致\",{\"1\":{\"425\":1}}],[\"命令入队\",{\"1\":{\"424\":1}}],[\"命令修改了多少次数据库\",{\"1\":{\"417\":1}}],[\"命令手动建立节点间的连接\",{\"1\":{\"413\":1}}],[\"命令创建\",{\"1\":{\"413\":1}}],[\"命令删除\",{\"1\":{\"411\":1}}],[\"命令将指定的\",{\"1\":{\"403\":1}}],[\"命令相似\",{\"1\":{\"403\":1}}],[\"命令后\",{\"1\":{\"362\":1}}],[\"命令的\",{\"1\":{\"966\":1}}],[\"命令的参数为从服务器masterauth选项的值\",{\"1\":{\"425\":1}}],[\"命令的参数\",{\"1\":{\"424\":1}}],[\"命令的时候\",{\"1\":{\"74\":1}}],[\"命令的输出结果最后一行给出了镜像的完整名称\",{\"1\":{\"49\":1}}],[\"命令可以查看所有已经创建的包括终止状态的容器\",{\"1\":{\"72\":1}}],[\"命令提示符\",{\"1\":{\"68\":2}}],[\"命令或\",{\"1\":{\"68\":1}}],[\"命令会将该目录下的内容打包交给\",{\"1\":{\"60\":1}}],[\"命令所在的目录下的\",{\"1\":{\"60\":1}}],[\"命令得知这个路径后\",{\"1\":{\"60\":1}}],[\"命令构建镜像\",{\"1\":{\"60\":1}}],[\"命令这样的客户端工具\",{\"1\":{\"60\":1}}],[\"命令最后有一个\",{\"1\":{\"60\":1}}],[\"命令虽然可以比较直观的帮助理解镜像分层存储的概念\",{\"1\":{\"55\":1}}],[\"命令来说\",{\"1\":{\"991\":1}}],[\"命令来显式地删除该键值\",{\"1\":{\"414\":1}}],[\"命令来异步删除大key\",{\"1\":{\"411\":1}}],[\"命令来查看容器信息\",{\"1\":{\"66\":1}}],[\"命令来配合\",{\"1\":{\"55\":1}}],[\"命令来便捷的查看镜像\",{\"1\":{\"51\":1}}],[\"命令\",{\"0\":{\"403\":1,\"405\":1,\"407\":1,\"409\":1},\"1\":{\"51\":1,\"55\":1,\"65\":1,\"68\":5,\"69\":1,\"362\":4,\"403\":1,\"405\":1,\"407\":2,\"409\":1,\"410\":1,\"413\":4,\"425\":1,\"437\":1,\"967\":1,\"1071\":1}}],[\"命令看到\",{\"1\":{\"49\":1}}],[\"命名空间允许每个容器拥有独立的\",{\"1\":{\"76\":1}}],[\"命名空间允许不同命名空间的进程看到的文件结构不同\",{\"1\":{\"76\":1}}],[\"命名空间中的进程间交互\",{\"1\":{\"76\":1}}],[\"命名空间有独立的\",{\"1\":{\"76\":1}}],[\"命名空间实现的\",{\"1\":{\"76\":1}}],[\"命名空间隔离开的\",{\"1\":{\"76\":1}}],[\"命名空间保证了容器之间彼此互不影响\",{\"1\":{\"76\":1}}],[\"命名空间是\",{\"1\":{\"76\":1}}],[\"命名空间\",{\"0\":{\"76\":1},\"1\":{\"47\":1,\"76\":7}}],[\"选举新的主节点\",{\"1\":{\"433\":1}}],[\"选举领头sentinel\",{\"1\":{\"426\":1}}],[\"选出新的主服务器\",{\"1\":{\"426\":1}}],[\"选\",{\"1\":{\"426\":3,\"433\":1}}],[\"选转前面的\",{\"1\":{\"335\":1}}],[\"选取最后一位当对比数字\",{\"1\":{\"967\":1}}],[\"选取b之后在cdef中在选组第三个\",{\"1\":{\"213\":1}}],[\"选取一个a之后\",{\"1\":{\"213\":1}}],[\"选择哪种技术应该根据应用程序的需求和设计来决定\",{\"1\":{\"1073\":1}}],[\"选择哪种公司没有对错\",{\"1\":{\"674\":1}}],[\"选择一个最小的数并且把它放到正确的位置上\",{\"1\":{\"944\":1}}],[\"选择排序即\",{\"1\":{\"944\":1}}],[\"选择排序的思路特别简单\",{\"1\":{\"944\":1}}],[\"选择排序\",{\"0\":{\"944\":1}}],[\"选择不同的算法来完成相同的功能\",{\"1\":{\"853\":1}}],[\"选择自然的地方\",{\"1\":{\"789\":1}}],[\"选择轻松的方式\",{\"1\":{\"773\":1}}],[\"选择你的毒药\",{\"1\":{\"721\":1}}],[\"选择决定命运\",{\"1\":{\"666\":1}}],[\"选择国外而非本地的劳工的主要原因在于外国劳工\",{\"1\":{\"653\":1}}],[\"选择的中国工人也超过殖民地的马来西亚人\",{\"1\":{\"653\":1}}],[\"选择池\",{\"1\":{\"572\":1}}],[\"选择下面一种\",{\"1\":{\"436\":1}}],[\"选择单线程的原因也有下面的考虑\",{\"1\":{\"412\":1}}],[\"选择查询成本最小的执行计划\",{\"1\":{\"349\":1}}],[\"选择列表\",{\"1\":{\"206\":1}}],[\"选择\",{\"1\":{\"206\":1,\"946\":1}}],[\"选择您想支付的数额\",{\"1\":{\"40\":1}}],[\"选项让docker分配一个伪终端\",{\"1\":{\"64\":1}}],[\"选项\",{\"1\":{\"49\":1,\"55\":1,\"59\":1,\"437\":1,\"991\":3}}],[\"推测\",{\"1\":{\"627\":1}}],[\"推翻了一审的判决结果\",{\"1\":{\"528\":1}}],[\"推荐方式是使用go\",{\"1\":{\"1223\":1}}],[\"推荐一个网站\",{\"1\":{\"808\":1}}],[\"推荐给你的视频内容会开始慢慢变得有质量起来\",{\"1\":{\"689\":1}}],[\"推荐采用\",{\"1\":{\"385\":1}}],[\"推荐大家使用\",{\"1\":{\"68\":1}}],[\"推导而来\",{\"1\":{\"257\":1}}],[\"推导出来的\",{\"1\":{\"257\":1}}],[\"推导出来\",{\"1\":{\"235\":1,\"236\":1,\"259\":1}}],[\"推出\",{\"1\":{\"235\":2}}],[\"推出的\",{\"1\":{\"48\":1}}],[\"推个小车只能叫谋生\",{\"1\":{\"11\":1}}],[\"还提到了isvalid\",{\"1\":{\"1194\":1}}],[\"还提供了额外的几个方法\",{\"1\":{\"993\":1}}],[\"还提供了很多实用的帮助函数\",{\"1\":{\"976\":1}}],[\"还支持直接解析覆盖值的形式来解析命令行数据\",{\"1\":{\"1162\":1}}],[\"还支持强大的过滤器参数\",{\"1\":{\"54\":1}}],[\"还包括你的态度\",{\"1\":{\"618\":1}}],[\"还包含许多过去的我们\",{\"1\":{\"573\":1}}],[\"还包含了一些为运行时准备的配置参数\",{\"1\":{\"46\":1}}],[\"还涉及了政治经济制度\",{\"1\":{\"509\":1}}],[\"还未如愿见着不朽\",{\"1\":{\"505\":1}}],[\"还在github上写了不少小东西\",{\"1\":{\"500\":1}}],[\"还记录了消息发送者自身的一些信息\",{\"1\":{\"435\":1}}],[\"还记得我对注意力的定义吗\",{\"1\":{\"621\":1}}],[\"还记得我们的\",{\"1\":{\"517\":1}}],[\"还记得我们刚刚说过的mysql刚开始运行时会加载一些空闲的缓冲页吗\",{\"1\":{\"377\":1}}],[\"还记得前面讲到的\",{\"1\":{\"386\":1}}],[\"还会有其他你之前没有考虑过的职业道路\",{\"1\":{\"584\":1}}],[\"还会成为sentinel判断master属下所有从服务器\",{\"1\":{\"426\":1}}],[\"还会被用于判断主服务器属下的所有从服务器\",{\"1\":{\"426\":1}}],[\"还会创建一个连向新sentinel\",{\"1\":{\"426\":1}}],[\"还会顺带将ht\",{\"1\":{\"396\":1}}],[\"还会失败\",{\"1\":{\"385\":1}}],[\"还会造成机器性能的浪费\",{\"1\":{\"383\":1}}],[\"还能提高写性能\",{\"1\":{\"377\":1}}],[\"还缓存undo页\",{\"1\":{\"376\":1}}],[\"还没有完全采用现代清洁中使用的新型高效工具\",{\"1\":{\"751\":1}}],[\"还没有刷盘\",{\"1\":{\"360\":1}}],[\"还没等执行成功\",{\"1\":{\"385\":1}}],[\"还没提交的时候\",{\"1\":{\"374\":1}}],[\"还没提交事务\",{\"1\":{\"362\":1}}],[\"还没提交事务的\",{\"1\":{\"360\":1}}],[\"还没写入\",{\"1\":{\"360\":1}}],[\"还没写入磁盘\",{\"1\":{\"360\":1}}],[\"还要将自己拿了近十年的btc拿出来还钱\",{\"1\":{\"592\":1}}],[\"还要注意\",{\"1\":{\"514\":1}}],[\"还要考虑各种容错问题\",{\"1\":{\"387\":1}}],[\"还要淘汰\",{\"1\":{\"377\":1}}],[\"还要有\",{\"1\":{\"358\":1}}],[\"还要实现文件系统\",{\"1\":{\"75\":1}}],[\"还不如不要索引\",{\"1\":{\"352\":1}}],[\"还需要你亲自维护自己的数据\",{\"1\":{\"710\":1}}],[\"还需要把末尾的页淘汰掉\",{\"1\":{\"377\":1}}],[\"还需要加一个锁来保证提交的原子性\",{\"1\":{\"360\":1}}],[\"还需要为\",{\"1\":{\"348\":1}}],[\"还需要查看是否平衡\",{\"1\":{\"329\":1}}],[\"还需要注意的是容器对镜像的依赖\",{\"1\":{\"55\":1}}],[\"还是\",{\"1\":{\"1138\":1}}],[\"还是会以每年\",{\"1\":{\"751\":1}}],[\"还是会毫不犹豫地换掉他们以节省开支\",{\"1\":{\"751\":1}}],[\"还是会阻塞后续的操作无法执行\",{\"1\":{\"413\":1}}],[\"还是街边卖唱的艺人又或是送外卖的小哥\",{\"1\":{\"677\":1}}],[\"还是街边乞讨的艺人又或是送外卖的小哥\",{\"1\":{\"646\":1}}],[\"还是过于急于放弃的偏见\",{\"1\":{\"588\":1}}],[\"还是仅仅来自于你不安和优先级降低的渴望\",{\"1\":{\"588\":1}}],[\"还是因为你听别人谈论他们想要或害怕的东西\",{\"1\":{\"575\":1}}],[\"还是这些影响实际上就在你的大脑中\",{\"1\":{\"575\":1}}],[\"还是别人伪装成你\",{\"1\":{\"575\":1}}],[\"还是放假\",{\"1\":{\"552\":1}}],[\"还是手工匠人\",{\"1\":{\"551\":1}}],[\"还是普通的聊天\",{\"1\":{\"551\":1}}],[\"还是生命周期引起的\",{\"1\":{\"462\":1}}],[\"还是已下线状态\",{\"1\":{\"433\":1}}],[\"还是有可能发生不一致\",{\"1\":{\"386\":1}}],[\"还是先操作数据库\",{\"1\":{\"385\":1}}],[\"还是存在数据不一致的情况\",{\"1\":{\"384\":1}}],[\"还是轻量级的锁\",{\"1\":{\"369\":1}}],[\"还是时刻\",{\"1\":{\"360\":1}}],[\"还是在你仍然走在正确道路上的漫长跋涉中感到疲惫\",{\"1\":{\"588\":1}}],[\"还是在内存中\",{\"1\":{\"357\":1}}],[\"还是在书的目录去找呢\",{\"1\":{\"350\":1}}],[\"还是dp\",{\"1\":{\"254\":1}}],[\"还是外层for遍历背包\",{\"1\":{\"242\":1}}],[\"还可以用\",{\"1\":{\"1034\":1}}],[\"还可以使用各种打桩工具对具体方法进行打桩\",{\"1\":{\"976\":1}}],[\"还可以再\",{\"1\":{\"967\":1}}],[\"还可以运行大多数手机和智能手表\",{\"1\":{\"721\":1}}],[\"还可以推动社会的进步\",{\"1\":{\"647\":1,\"686\":1}}],[\"还可以选择让调用者知道这个错误并决定该如何处理\",{\"1\":{\"450\":1}}],[\"还可以通过配置文件的选项来实现每隔一段时间自动执行一次\",{\"1\":{\"413\":1}}],[\"还可以通过顺序性操作来批量处理节点\",{\"1\":{\"397\":1}}],[\"还可以保存二进制数据\",{\"1\":{\"393\":1,\"402\":1}}],[\"还可以自己定义邮件内容\",{\"1\":{\"194\":1}}],[\"还可以看到这一组命令的最后添加了清理工作的命令\",{\"1\":{\"58\":1}}],[\"还可以看到一个特殊的镜像\",{\"1\":{\"52\":1}}],[\"还假设结果代币和抵押资产具有相同的小数位数\",{\"1\":{\"169\":1}}],[\"还存在一个特殊的镜像\",{\"1\":{\"57\":1}}],[\"还以之前定制\",{\"1\":{\"56\":1}}],[\"还有其他的函数如\",{\"1\":{\"1173\":1}}],[\"还有unpatch能力\",{\"1\":{\"959\":1}}],[\"还有避免分散注意力的讲话习惯\",{\"1\":{\"627\":1}}],[\"还有另一种常见的观念\",{\"1\":{\"578\":1}}],[\"还有另一篇文章我特别喜欢https\",{\"1\":{\"569\":1}}],[\"还有很多其他的东西\",{\"1\":{\"570\":1}}],[\"还有很多文件被改动或添加了\",{\"1\":{\"55\":1}}],[\"还有就是一个家庭中的一份子\",{\"1\":{\"551\":1}}],[\"还有需要定义一个类型是message\",{\"1\":{\"513\":1}}],[\"还有一大堆操作的函数\",{\"1\":{\"1010\":1}}],[\"还有一系列操作没有展开\",{\"1\":{\"1009\":1}}],[\"还有一种超越大多数人的责任\",{\"1\":{\"592\":1}}],[\"还有一些交易所虽然没有被黑客攻击\",{\"1\":{\"705\":1}}],[\"还有一些不那么传统的职业\",{\"1\":{\"578\":1}}],[\"还有一些不是书籍的\",{\"1\":{\"504\":1}}],[\"还有一些被动原因\",{\"1\":{\"551\":1}}],[\"还有一些小东西\",{\"1\":{\"505\":1}}],[\"还有一些工具的文档\",{\"1\":{\"504\":1}}],[\"还有一个mheap申请\",{\"1\":{\"1149\":1}}],[\"还有一个误解是批判性思考不能通过学习来获得\",{\"1\":{\"627\":1}}],[\"还有一个论点就是未来二十年\",{\"1\":{\"605\":1}}],[\"还有一个更大的问题\",{\"1\":{\"570\":1}}],[\"还有一个原因导致了\",{\"1\":{\"474\":1}}],[\"还有一个头节点\",{\"1\":{\"377\":1}}],[\"还有一个作用\",{\"1\":{\"356\":1}}],[\"还有一个查询优化器\",{\"1\":{\"352\":1}}],[\"还有一个\",{\"1\":{\"308\":1}}],[\"还有一个是反转链表\",{\"1\":{\"278\":1}}],[\"还有多种不同用途的字符串类型\",{\"1\":{\"471\":1}}],[\"还有下面这个场景也会发生幻读现象\",{\"1\":{\"362\":1}}],[\"还有rwa领域\",{\"1\":{\"188\":1}}],[\"还有\",{\"1\":{\"48\":1,\"386\":1}}],[\"除非经过加密\",{\"1\":{\"1047\":1}}],[\"除非你依赖抖音赚钱\",{\"1\":{\"789\":1}}],[\"除非你每天需要大量体力去工作\",{\"1\":{\"788\":1}}],[\"除非你是那些擅长分析潜意识的人之一\",{\"1\":{\"574\":1}}],[\"除非有人怀疑最初作者作为其观点依据的事实或质疑他对这些事实所作的解释\",{\"1\":{\"654\":1}}],[\"除非有教育使我们察觉到这一点\",{\"1\":{\"639\":1}}],[\"除非气候出现让整个人类都意识到不可不解决的时候\",{\"1\":{\"609\":1}}],[\"除非手动\",{\"1\":{\"50\":1}}],[\"除\",{\"1\":{\"396\":1}}],[\"除以总资产份额\",{\"1\":{\"152\":1}}],[\"除此之外社区里还有一些其他打桩工具如gostub等\",{\"1\":{\"978\":1}}],[\"除此之外\",{\"1\":{\"65\":1,\"383\":1}}],[\"除此以外\",{\"1\":{\"48\":1,\"54\":1}}],[\"除当前层外\",{\"1\":{\"55\":1}}],[\"除了将当前\",{\"1\":{\"1146\":1}}],[\"除了将键值对保存在数据库里面之外\",{\"1\":{\"430\":1}}],[\"除了向方法传入参数之外\",{\"1\":{\"1138\":1}}],[\"除了几个已经不被使用的以及与\",{\"1\":{\"1132\":1}}],[\"除了stackguard0外\",{\"1\":{\"1132\":1}}],[\"除了saveparams数组外\",{\"1\":{\"417\":1}}],[\"除了这几个\",{\"1\":{\"1047\":1}}],[\"除了这些\",{\"1\":{\"188\":1}}],[\"除了直接指定每秒产生的\",{\"1\":{\"1034\":1}}],[\"除了具体业务执行的代码\",{\"1\":{\"1010\":1}}],[\"除了对函数进行mock外monkey也支持对方法进行mock\",{\"1\":{\"978\":1}}],[\"除了经常用到mysql外\",{\"1\":{\"976\":1}}],[\"除了网络依赖之外\",{\"1\":{\"974\":1}}],[\"除了以上所述\",{\"1\":{\"789\":1}}],[\"除了历史偶然性之外\",{\"1\":{\"721\":1}}],[\"除了让我们渴望我们实际上不想要的事物\",{\"1\":{\"585\":1}}],[\"除了我自己的故事之外\",{\"1\":{\"572\":1}}],[\"除了职业占据您很多时间和支撑其他时间外\",{\"1\":{\"571\":1}}],[\"除了你自己\",{\"1\":{\"570\":1}}],[\"除了在这个函数中处理错误外\",{\"1\":{\"450\":1}}],[\"除了复制偏移量和复制积压缓冲区之外\",{\"1\":{\"425\":1}}],[\"除了订阅频道之外\",{\"1\":{\"423\":1,\"426\":1}}],[\"除了rdb持久化功能外\",{\"1\":{\"421\":1}}],[\"除了上面的官方回答\",{\"1\":{\"412\":1}}],[\"除了上面这一种场景会发生幻读现象之外\",{\"1\":{\"362\":1}}],[\"除了ht\",{\"1\":{\"395\":1}}],[\"除了除了要把页放入到\",{\"1\":{\"377\":1}}],[\"除了要实现对内存\",{\"1\":{\"75\":1}}],[\"除了选择现有镜像为基础镜像外\",{\"1\":{\"57\":1}}],[\"除了镜像依赖以外\",{\"1\":{\"55\":1}}],[\"除了\",{\"1\":{\"52\":1,\"471\":1,\"1005\":1,\"1139\":1,\"1144\":1,\"1173\":1}}],[\"除了提供容器运行时所需的程序\",{\"1\":{\"46\":1}}],[\"多线程编程时\",{\"1\":{\"1141\":1}}],[\"多线程模型虽然在某些方面表现优异\",{\"1\":{\"412\":1}}],[\"多巴胺和血清素\",{\"1\":{\"789\":1}}],[\"多试几个看看\",{\"1\":{\"517\":1}}],[\"多路复用机制是指一个线程处理多个\",{\"1\":{\"412\":1}}],[\"多路复用机制处理大量的客户端\",{\"1\":{\"412\":1}}],[\"多态\",{\"1\":{\"394\":1}}],[\"多个线程传递数据的方式一般都是共享内存\",{\"1\":{\"1136\":1}}],[\"多个space\",{\"1\":{\"731\":1}}],[\"多个sentinel设置的主观下线时长可能不同\",{\"1\":{\"426\":1}}],[\"多个区块链媒体报道mixin云服务提供商数据库被黑客攻破盗取加密货币价值两亿美元\",{\"1\":{\"591\":1}}],[\"多个listnode可以通过prev和next指针组成双端链表\",{\"1\":{\"394\":1}}],[\"多个事务的\",{\"1\":{\"360\":1}}],[\"多个事务按进入的顺序将\",{\"1\":{\"360\":1}}],[\"多事务\",{\"1\":{\"360\":1}}],[\"多版本并发控制\",{\"1\":{\"356\":3,\"361\":1,\"362\":1}}],[\"多次买卖一支股票\",{\"1\":{\"253\":1,\"256\":1}}],[\"多次套利协议\",{\"1\":{\"151\":1}}],[\"多用户环境下的用户名\",{\"1\":{\"48\":1}}],[\"多思考为什么这样的产品可以成功\",{\"1\":{\"11\":1}}],[\"jti\",{\"1\":{\"1047\":1}}],[\"jan\",{\"1\":{\"1002\":1}}],[\"java\",{\"1\":{\"721\":2,\"1073\":1,\"1118\":1}}],[\"javascript\",{\"1\":{\"192\":1,\"1073\":1}}],[\"javascipt\",{\"1\":{\"3\":1}}],[\"j是比pivot大的区域\",{\"1\":{\"949\":1}}],[\"j是背包容量\",{\"1\":{\"236\":1}}],[\"jiaotong\",{\"1\":{\"548\":1}}],[\"jitosol\",{\"1\":{\"153\":2}}],[\"jhuo\",{\"1\":{\"534\":3}}],[\"jun\",{\"1\":{\"1002\":1}}],[\"jungle\",{\"1\":{\"523\":1}}],[\"judgeratebytime\",{\"1\":{\"979\":5}}],[\"judgerate\",{\"1\":{\"979\":2}}],[\"judgment\",{\"1\":{\"543\":1}}],[\"jumped\",{\"1\":{\"543\":1}}],[\"just\",{\"1\":{\"90\":1,\"523\":1,\"543\":2,\"547\":1,\"548\":1,\"1119\":1}}],[\"jewelry\",{\"1\":{\"523\":1}}],[\"jog\",{\"1\":{\"1116\":1}}],[\"jogging\",{\"1\":{\"1116\":1,\"1117\":3}}],[\"job\",{\"0\":{\"1005\":1},\"1\":{\"1005\":1}}],[\"john\",{\"1\":{\"827\":3,\"1045\":1,\"1047\":1,\"1084\":1,\"1088\":1,\"1161\":1,\"1192\":1}}],[\"johnson\",{\"1\":{\"827\":3}}],[\"joho\",{\"1\":{\"509\":1,\"511\":1}}],[\"joseph\",{\"1\":{\"628\":1}}],[\"joy\",{\"1\":{\"543\":1}}],[\"joys\",{\"1\":{\"523\":2}}],[\"journey\",{\"1\":{\"523\":1,\"563\":2}}],[\"joins\",{\"1\":{\"1218\":1}}],[\"join\",{\"1\":{\"463\":1,\"992\":2,\"1093\":1,\"1193\":1}}],[\"j+1\",{\"1\":{\"334\":1,\"945\":6}}],[\"j++\",{\"1\":{\"216\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"235\":3,\"241\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"257\":1,\"259\":2,\"260\":1,\"261\":1,\"263\":1,\"264\":3,\"265\":3,\"266\":3,\"267\":1,\"268\":1,\"284\":1,\"285\":1,\"291\":2,\"319\":2,\"323\":2,\"944\":2,\"945\":1,\"948\":4,\"949\":1,\"967\":1}}],[\"j<n\",{\"1\":{\"319\":2}}],[\"j<=\",{\"1\":{\"264\":1}}],[\"j往前走\",{\"1\":{\"293\":1}}],[\"j双指针\",{\"1\":{\"293\":1}}],[\"j相差大于1的时候\",{\"1\":{\"267\":1}}],[\"j相差为1\",{\"1\":{\"267\":1}}],[\"j相同\",{\"1\":{\"267\":1}}],[\"j为\",{\"1\":{\"254\":1}}],[\"j的总路径有几条\",{\"1\":{\"229\":1}}],[\"j\",{\"1\":{\"216\":5,\"229\":12,\"230\":8,\"231\":19,\"232\":8,\"235\":40,\"236\":38,\"237\":11,\"238\":6,\"239\":11,\"240\":18,\"241\":11,\"242\":10,\"243\":7,\"244\":21,\"245\":5,\"246\":4,\"254\":2,\"255\":13,\"257\":11,\"259\":29,\"260\":29,\"261\":8,\"263\":27,\"264\":46,\"265\":46,\"266\":63,\"267\":27,\"268\":32,\"277\":7,\"284\":4,\"285\":6,\"291\":21,\"293\":9,\"319\":7,\"323\":7,\"326\":2,\"331\":4,\"334\":2,\"905\":1,\"944\":10,\"945\":13,\"946\":9,\"947\":27,\"948\":13,\"949\":6,\"967\":6}}],[\"jkl\",{\"1\":{\"210\":1}}],[\"js可以与数据库一起使用\",{\"1\":{\"193\":1}}],[\"js应用程序的完整开源身份验证解决方案\",{\"1\":{\"193\":1}}],[\"js中的discard所有字段都改为github\",{\"1\":{\"192\":1}}],[\"js\",{\"1\":{\"192\":2,\"193\":2}}],[\"jsonformat\",{\"1\":{\"905\":5}}],[\"json\",{\"1\":{\"60\":5,\"193\":3,\"195\":3,\"511\":1,\"516\":6,\"905\":10,\"972\":4,\"973\":10,\"980\":2,\"1047\":4,\"1050\":1,\"1078\":2,\"1080\":1,\"1100\":2,\"1188\":4,\"1217\":1}}],[\"jwe\",{\"1\":{\"193\":1}}],[\"jwtkey\",{\"1\":{\"1047\":3}}],[\"jwt代码逻辑实现\",{\"1\":{\"1047\":1}}],[\"jwt\",{\"0\":{\"194\":1,\"1044\":1,\"1047\":1},\"1\":{\"191\":1,\"193\":1,\"194\":2,\"1047\":22}}],[\"jwilder\",{\"1\":{\"48\":1}}],[\"来自动安装依赖\",{\"1\":{\"1223\":1}}],[\"来自思想还是感觉\",{\"1\":{\"626\":1}}],[\"来限制浮点数只保留两位小数\",{\"1\":{\"1173\":1}}],[\"来区分值\",{\"1\":{\"1171\":1}}],[\"来执行任务时\",{\"1\":{\"1135\":1}}],[\"来执行触发回调\",{\"1\":{\"1005\":1}}],[\"来请求更新我们的person\",{\"1\":{\"1088\":1}}],[\"来方便我们进行查看如何去使用http\",{\"1\":{\"1080\":1}}],[\"来方便我们构建get和post方法\",{\"1\":{\"516\":1}}],[\"来降低服务之间的耦合度\",{\"1\":{\"1063\":1}}],[\"来介绍在gin的项目中如何配置和使用zerolog并日志归档\",{\"1\":{\"1060\":1}}],[\"来决定此次\",{\"1\":{\"1035\":1}}],[\"来决定选择使用哪个索引\",{\"1\":{\"348\":1}}],[\"来为我们的类实现定时任务逻辑\",{\"1\":{\"1005\":1}}],[\"来获得原始值信息\",{\"1\":{\"1189\":1}}],[\"来获得内存分配的统计数据\",{\"1\":{\"970\":1}}],[\"来获取和遍历命令行参数\",{\"1\":{\"1163\":1}}],[\"来获取系统的当前时间作为判断的依据\",{\"1\":{\"979\":1}}],[\"来组成最终代码依赖的东西\",{\"1\":{\"967\":1}}],[\"来不断放入到temp数组中\",{\"1\":{\"948\":1}}],[\"来隐藏系统的复杂性\",{\"1\":{\"925\":1}}],[\"来连接目标接口和适配的接口\",{\"1\":{\"906\":1}}],[\"来拽下一个渴望的面具\",{\"1\":{\"575\":1}}],[\"来源于我们祖先部落时代的进化历史\",{\"1\":{\"573\":1}}],[\"来代替\",{\"1\":{\"521\":1}}],[\"来代替yes\",{\"1\":{\"169\":1}}],[\"来寻找想要的功能\",{\"1\":{\"487\":1}}],[\"来将其全局化\",{\"1\":{\"461\":1}}],[\"来处理非仓库持久性\",{\"1\":{\"724\":1}}],[\"来处理这个\",{\"1\":{\"450\":1}}],[\"来处理数据和节点之间的映射关系\",{\"1\":{\"413\":1}}],[\"来进行通信\",{\"1\":{\"434\":1}}],[\"来进行数据共享\",{\"1\":{\"427\":1}}],[\"来进行定价\",{\"1\":{\"169\":1}}],[\"来压缩\",{\"1\":{\"413\":1}}],[\"来操作数据库和缓存\",{\"1\":{\"384\":1}}],[\"来提高读性能\",{\"1\":{\"381\":1}}],[\"来提高数据库的读写性能\",{\"1\":{\"376\":1}}],[\"来控制并发事务访问同一个记录时的行为就叫\",{\"1\":{\"362\":1}}],[\"来保证的\",{\"1\":{\"361\":2}}],[\"来解决哈系碰撞问题\",{\"1\":{\"395\":1}}],[\"来解决\",{\"1\":{\"360\":1,\"388\":1}}],[\"来实现分布式锁\",{\"1\":{\"436\":1}}],[\"来实现的\",{\"1\":{\"360\":1,\"362\":1}}],[\"来实现\",{\"1\":{\"358\":1,\"1010\":1}}],[\"来完成的\",{\"1\":{\"348\":1}}],[\"来一个一个找最小值了\",{\"1\":{\"283\":1}}],[\"来匹配\",{\"1\":{\"264\":6}}],[\"来看一下对应的dp数组的数值\",{\"1\":{\"235\":1}}],[\"来表示\",{\"1\":{\"230\":1}}],[\"来取得\",{\"1\":{\"229\":1}}],[\"来指定它允许加载的账户数据的最大字节数\",{\"1\":{\"120\":1}}],[\"来做资源分配\",{\"1\":{\"75\":1}}],[\"来查看容器是否正常工作\",{\"1\":{\"74\":1}}],[\"来查看进程信息\",{\"1\":{\"65\":1}}],[\"来说是可能发生的\",{\"1\":{\"384\":1}}],[\"来说\",{\"1\":{\"73\":1,\"1138\":2}}],[\"来删除一个处于终止状态的容器\",{\"1\":{\"71\":1}}],[\"来删除镜像\",{\"1\":{\"55\":2}}],[\"来终止一个运行中的容器\",{\"1\":{\"67\":1}}],[\"来创建容器时\",{\"1\":{\"64\":1}}],[\"来\",{\"1\":{\"59\":1,\"360\":1,\"426\":1,\"1079\":1}}],[\"来定制\",{\"1\":{\"56\":1}}],[\"来讲解镜像是如何构建的\",{\"1\":{\"55\":1}}],[\"来配合使用\",{\"1\":{\"55\":1}}],[\"来具体指定所需哪个版本的镜像\",{\"1\":{\"48\":1}}],[\"来选择退款\",{\"1\":{\"40\":1}}],[\"是设置容器以守护进程方式运行\",{\"1\":{\"1219\":1}}],[\"是非关系数据库当中功能最丰富\",{\"1\":{\"1217\":1}}],[\"是程序的名称\",{\"1\":{\"1163\":1}}],[\"是自定义的类型\",{\"1\":{\"1163\":1}}],[\"是自然界生物普遍固有的权力\",{\"1\":{\"551\":1}}],[\"是go内存管理的起源\",{\"1\":{\"1147\":1}}],[\"是细粒度的互斥锁\",{\"1\":{\"1143\":1}}],[\"是处理器的运行时表示\",{\"1\":{\"1134\":1}}],[\"是线程和\",{\"1\":{\"1134\":1}}],[\"是每次启动一个\",{\"1\":{\"1133\":1}}],[\"是启动程序后的编号为\",{\"1\":{\"1133\":1}}],[\"是定义二进制文件名称\",{\"1\":{\"1026\":1}}],[\"是怎么定义的了\",{\"1\":{\"1009\":1}}],[\"是命令行的选项\",{\"1\":{\"988\":1}}],[\"是appname\",{\"1\":{\"988\":1}}],[\"是稳定的\",{\"1\":{\"948\":1}}],[\"是二十年前年轻人群体最流行的造型\",{\"1\":{\"735\":1}}],[\"是接受还是视若无睹\",{\"1\":{\"731\":1}}],[\"是基于\",{\"1\":{\"731\":1,\"1073\":1}}],[\"是当时的自己不认真仔细考虑未来\",{\"1\":{\"680\":1}}],[\"是什么让我们能够坐在家里\",{\"1\":{\"647\":1,\"686\":1}}],[\"是什么因素导致一个人在职业游戏中提高速度变慢或变快\",{\"1\":{\"581\":1}}],[\"是互联网中的无用信息才可以变现\",{\"1\":{\"647\":1,\"686\":1}}],[\"是那些对跳跃持谨慎态度的人\",{\"1\":{\"588\":1}}],[\"是你职业选择的主要驱动力\",{\"1\":{\"577\":1}}],[\"是重要的东西和你自己的东西之间的取舍\",{\"1\":{\"577\":1}}],[\"是我们真实自我的一部分\",{\"1\":{\"576\":1}}],[\"是我们没有重点分析过的\",{\"1\":{\"386\":1}}],[\"是生活方式触角害怕降低生活水平\",{\"1\":{\"574\":1}}],[\"是个人触角害怕损害自我形象\",{\"1\":{\"574\":1}}],[\"是社交触角害怕尴尬或被别人认为不够聪明\",{\"1\":{\"574\":1}}],[\"是大规模的\",{\"1\":{\"573\":1}}],[\"是他们陪伴我们度过了这段缓慢的时期\",{\"1\":{\"569\":1}}],[\"是日复一日\",{\"1\":{\"500\":1}}],[\"是无趣的\",{\"1\":{\"500\":1}}],[\"是无锁的\",{\"1\":{\"368\":1}}],[\"是返回一个新的字符串\",{\"1\":{\"481\":1}}],[\"是元素中0\",{\"1\":{\"468\":1}}],[\"是如此的常见\",{\"1\":{\"450\":1}}],[\"是如何存储数据的\",{\"1\":{\"353\":1}}],[\"是成员\",{\"1\":{\"449\":1}}],[\"是因为什么原因失败都会\",{\"1\":{\"448\":1}}],[\"是因为这些任务的操作都是很耗时的\",{\"1\":{\"411\":1}}],[\"是因为这里回溯的其实是digits第二个数字\",{\"1\":{\"210\":1}}],[\"是泛型类型参数\",{\"1\":{\"448\":1}}],[\"是让客户端和多个独立的\",{\"1\":{\"437\":1}}],[\"是跨集群部署的\",{\"1\":{\"436\":1}}],[\"是客户端生成的唯一的标识\",{\"1\":{\"436\":1}}],[\"是空时\",{\"1\":{\"405\":1}}],[\"是redis用于保存整数值的集合抽象数据结构\",{\"1\":{\"398\":1}}],[\"是ht\",{\"1\":{\"395\":1}}],[\"是对\",{\"1\":{\"1139\":1}}],[\"是对程序中一组的状态进行管理的工具\",{\"1\":{\"1011\":1}}],[\"是对c语言字符串封装了一层\",{\"1\":{\"393\":1,\"402\":1}}],[\"是对称的\",{\"1\":{\"299\":1}}],[\"是关于\",{\"1\":{\"386\":1}}],[\"是比较合适的\",{\"1\":{\"385\":1}}],[\"是这样做的\",{\"1\":{\"377\":2}}],[\"是这两个字符串所共同拥有的子序列\",{\"1\":{\"260\":1}}],[\"是先生成锁结构\",{\"1\":{\"374\":1}}],[\"是包含间隙锁+记录锁的\",{\"1\":{\"373\":1}}],[\"是用户传递给程序的自定义命令行参数\",{\"1\":{\"1163\":1}}],[\"是用于从字符串中读取数据并格式化到指定变量中的函数\",{\"1\":{\"1173\":1}}],[\"是用于控制锁状态的信号量\",{\"1\":{\"1142\":1}}],[\"是用于next\",{\"1\":{\"193\":1}}],[\"是用来定期执行程序的命令\",{\"1\":{\"997\":1}}],[\"是用来控制选择用\",{\"1\":{\"369\":1}}],[\"是为了保证当用户对表执行\",{\"1\":{\"367\":1}}],[\"是为了避免回溯到自己或者之前的\",{\"1\":{\"284\":1}}],[\"是查询不出来这条数据的\",{\"1\":{\"361\":1,\"362\":1}}],[\"是查询语句\",{\"1\":{\"343\":1}}],[\"是还没持久化到磁盘的\",{\"1\":{\"360\":1}}],[\"是会启动后台线程\",{\"1\":{\"411\":1}}],[\"是会被阻塞的\",{\"1\":{\"366\":1,\"373\":1}}],[\"是会边写边擦除日志的\",{\"1\":{\"358\":1}}],[\"是会把整个表的查询缓存清空的\",{\"1\":{\"355\":1}}],[\"是循环写\",{\"1\":{\"358\":1}}],[\"是循环写的方式\",{\"1\":{\"357\":1}}],[\"是追加写\",{\"1\":{\"358\":1}}],[\"是物理日志\",{\"1\":{\"358\":1}}],[\"是没有\",{\"1\":{\"358\":1}}],[\"是另一个公司以插件形式引入\",{\"1\":{\"358\":1}}],[\"是专门用来缓存文件数据的\",{\"1\":{\"357\":1}}],[\"是直接写入磁盘的吗\",{\"1\":{\"357\":1}}],[\"是通过\",{\"1\":{\"356\":1,\"361\":2,\"362\":2}}],[\"是slots数组中值为1的二进制位的数量\",{\"1\":{\"428\":1}}],[\"是server生成的日志\",{\"1\":{\"355\":1}}],[\"是solana生态上的去中心化借贷协议\",{\"1\":{\"149\":1}}],[\"是innodb存储引擎层生成的日志\",{\"1\":{\"355\":2}}],[\"是主键索引\",{\"1\":{\"355\":1}}],[\"是在线还是下线\",{\"1\":{\"427\":1}}],[\"是在主线程处理的\",{\"1\":{\"411\":1}}],[\"是在事务提交后才会释放\",{\"1\":{\"367\":1}}],[\"是在\",{\"1\":{\"350\":1}}],[\"是在以镜像为基础层\",{\"1\":{\"55\":1}}],[\"是前\",{\"1\":{\"321\":1}}],[\"是减去的树\",{\"1\":{\"317\":1}}],[\"是该压栈序列对应的一个弹出序列\",{\"1\":{\"302\":1}}],[\"是某栈的压栈序列\",{\"1\":{\"302\":1}}],[\"是树\",{\"1\":{\"297\":1}}],[\"是字符串中的由连续字符组成的一个序列\",{\"1\":{\"267\":1}}],[\"是正着读和倒过来读一样的字符串\",{\"1\":{\"267\":1}}],[\"是相同的\",{\"1\":{\"264\":1}}],[\"是否一致\",{\"1\":{\"1139\":1}}],[\"是否充足\",{\"1\":{\"1037\":1}}],[\"是否充分\",{\"1\":{\"627\":1}}],[\"是否真的是由我自己决定的\",{\"1\":{\"572\":1}}],[\"是否相等\",{\"1\":{\"436\":1}}],[\"是否相同\",{\"1\":{\"268\":1}}],[\"是否进入了tilt模式\",{\"1\":{\"426\":1}}],[\"是否过期\",{\"1\":{\"414\":2}}],[\"是否存在于过期字典中\",{\"1\":{\"414\":1}}],[\"是否有更简单的方案\",{\"1\":{\"385\":1}}],[\"是否在\",{\"1\":{\"362\":1,\"1137\":1}}],[\"是否为true\",{\"1\":{\"267\":1}}],[\"是否为\",{\"1\":{\"263\":1}}],[\"是否是隔离资产\",{\"1\":{\"152\":1}}],[\"是依赖于dp\",{\"1\":{\"262\":1}}],[\"是以下标i\",{\"1\":{\"259\":1}}],[\"是以dp\",{\"1\":{\"258\":1}}],[\"是以镜像为基础层\",{\"1\":{\"47\":1}}],[\"是dp\",{\"1\":{\"257\":1}}],[\"是有问题的\",{\"1\":{\"358\":1}}],[\"是有几位树\",{\"1\":{\"317\":1}}],[\"是有0到i\",{\"1\":{\"257\":1}}],[\"是有最大层数限制的\",{\"1\":{\"58\":1}}],[\"是可以越过去的\",{\"1\":{\"674\":1}}],[\"是可以对\",{\"1\":{\"414\":1}}],[\"是可以保证数据一致性的\",{\"1\":{\"384\":1}}],[\"是可以根据dp\",{\"1\":{\"257\":1}}],[\"是可以随意删除的\",{\"1\":{\"52\":1}}],[\"是数组中的一个连续部分\",{\"1\":{\"262\":1}}],[\"是数组\",{\"1\":{\"257\":1}}],[\"是一本书中给了你赚钱的方法\",{\"1\":{\"669\":1}}],[\"是一本很严肃的书籍\",{\"1\":{\"534\":1}}],[\"是一种独立的协议\",{\"1\":{\"1073\":1}}],[\"是一种开放标准\",{\"1\":{\"1047\":1}}],[\"是一种常见的设计模式\",{\"1\":{\"940\":1}}],[\"是一种常见和有效的优化设计模式\",{\"1\":{\"934\":1}}],[\"是一种常用的结构型设计模式\",{\"1\":{\"928\":1}}],[\"是一种常用的设计模式\",{\"1\":{\"922\":1}}],[\"是一种结构型设计模式\",{\"1\":{\"919\":1}}],[\"是一种行为型设计模式\",{\"1\":{\"818\":1,\"824\":1}}],[\"是一种探究\",{\"1\":{\"626\":1}}],[\"是一种智慧\",{\"1\":{\"577\":1}}],[\"是一直持有的\",{\"1\":{\"367\":1}}],[\"是一定要初始化的\",{\"1\":{\"263\":1,\"264\":1,\"265\":1}}],[\"是一支给定的股票在第\",{\"1\":{\"255\":1}}],[\"是一个介于关系数据库和非关系数据库之间的产品\",{\"1\":{\"1217\":1}}],[\"是一个基于分布式文件存储的数据库\",{\"1\":{\"1217\":1}}],[\"是一个字符串切片\",{\"1\":{\"1163\":1}}],[\"是一个字符串类型的参数\",{\"1\":{\"1161\":1}}],[\"是一个浮点数类型的参数\",{\"1\":{\"1161\":1}}],[\"是一个整数类型的参数\",{\"1\":{\"1161\":1}}],[\"是一个布尔类型的参数\",{\"1\":{\"1161\":1}}],[\"是一个特殊的私有结构体\",{\"1\":{\"1144\":1}}],[\"是一个动态大小的数组\",{\"1\":{\"1139\":1}}],[\"是一个运行时中比较特殊的\",{\"1\":{\"1133\":1}}],[\"是一个二进制协议\",{\"1\":{\"1073\":1}}],[\"是一个非常实用\",{\"1\":{\"994\":1}}],[\"是一个实现\",{\"1\":{\"975\":1}}],[\"是一个抽象类\",{\"1\":{\"861\":1}}],[\"是一个不允许提款的交易所\",{\"1\":{\"706\":1}}],[\"是一个不可变引用\",{\"1\":{\"470\":1}}],[\"是一个类似但更需要满足的角色\",{\"1\":{\"573\":1}}],[\"是一个执行到目前位置所有被调用的函数的列表\",{\"1\":{\"447\":1}}],[\"是一个开源的流动性借贷协议\",{\"1\":{\"148\":1}}],[\"是一个开源的流动性协议\",{\"1\":{\"144\":1}}],[\"是一个点对点网络\",{\"1\":{\"94\":1}}],[\"是一个可供一个或多个容器使用的特殊目录\",{\"1\":{\"74\":1}}],[\"是一个文本文件\",{\"1\":{\"56\":1}}],[\"是不是就很容易理解了\",{\"1\":{\"994\":1}}],[\"是不是也值得我们深思呢\",{\"1\":{\"677\":1}}],[\"是不允许其他函数进行访问的\",{\"1\":{\"516\":1}}],[\"是不可变的\",{\"1\":{\"481\":1}}],[\"是不会加行级锁的\",{\"1\":{\"368\":1}}],[\"是不能被拆开的\",{\"1\":{\"358\":1}}],[\"是不能对原数组经行排序的\",{\"1\":{\"217\":1}}],[\"是不必写入磁盘\",{\"1\":{\"357\":1}}],[\"是不持有股票的最大现金\",{\"1\":{\"253\":1}}],[\"是0的话\",{\"1\":{\"243\":1}}],[\"是递归中一切数值的基础所在\",{\"1\":{\"243\":1}}],[\"是5\",{\"1\":{\"239\":1,\"317\":1}}],[\"是由个人去经营的网站\",{\"1\":{\"534\":1}}],[\"是由多种类型组合到一起形成的\",{\"1\":{\"490\":1}}],[\"是由一系列特殊编码的连续内存块组成的顺序型\",{\"1\":{\"399\":1}}],[\"是由数组派生而来的序列\",{\"1\":{\"257\":1}}],[\"是由左上方数值推导出来了\",{\"1\":{\"235\":1}}],[\"是由\",{\"1\":{\"235\":1}}],[\"是由短期美元国债\",{\"1\":{\"188\":1}}],[\"是拆分成两个以及两个以上的个数相乘\",{\"1\":{\"231\":1}}],[\"是单纯的把整数拆分为两个数相乘\",{\"1\":{\"231\":1}}],[\"是从楼梯第i个台阶向上爬所需支付的费用\",{\"1\":{\"228\":1}}],[\"是从楼梯第\",{\"1\":{\"228\":1}}],[\"是很重要\",{\"1\":{\"224\":1}}],[\"是两个不一样的集合\",{\"1\":{\"218\":1}}],[\"是的我有了两双一模一样的跑鞋了\",{\"1\":{\"743\":1}}],[\"是的\",{\"1\":{\"206\":1,\"385\":1,\"448\":1,\"533\":1,\"573\":1,\"631\":1,\"703\":1,\"709\":1,\"738\":1,\"751\":2,\"776\":1,\"795\":2}}],[\"是的一个链用的人多了gas自然就贵了\",{\"1\":{\"109\":1}}],[\"是\",{\"1\":{\"152\":1,\"169\":1,\"191\":1,\"260\":2,\"263\":1,\"264\":1,\"297\":2,\"317\":1,\"355\":3,\"358\":2,\"373\":1,\"395\":2,\"405\":1,\"414\":2,\"424\":2,\"426\":3,\"428\":1,\"432\":2,\"435\":1,\"481\":1,\"861\":1,\"988\":2,\"1132\":1,\"1133\":1,\"1138\":1,\"1139\":1,\"1145\":1,\"1163\":2}}],[\"是marginfi协议最全的资料\",{\"1\":{\"149\":1}}],[\"是同一个团队在做\",{\"1\":{\"148\":1}}],[\"是管理可替代和不可替代资产的基本组成部分\",{\"1\":{\"132\":1}}],[\"是指在正确的时间出现在正确的地点\",{\"1\":{\"673\":1}}],[\"是指事务操作前和操作后\",{\"1\":{\"361\":1}}],[\"是指没有子节点的节点\",{\"1\":{\"307\":1}}],[\"是指\",{\"1\":{\"264\":1}}],[\"是指这样一个新的字符串\",{\"1\":{\"260\":1}}],[\"是指一个程序调用另一个程序的指令\",{\"1\":{\"131\":1}}],[\"是指定\",{\"1\":{\"60\":1}}],[\"是被设计用来持久化数据的\",{\"1\":{\"74\":1}}],[\"是仓库名\",{\"1\":{\"73\":1}}],[\"是仓库的名字\",{\"1\":{\"48\":1}}],[\"是注册服务器地址\",{\"1\":{\"73\":1}}],[\"是集中存放镜像的地方\",{\"1\":{\"73\":1}}],[\"是和\",{\"1\":{\"66\":1}}],[\"是特别适合容器微服务架构的语言的原因之一\",{\"1\":{\"57\":1}}],[\"是必备的指令\",{\"1\":{\"57\":1}}],[\"是其它镜像所依赖的镜像\",{\"1\":{\"53\":1}}],[\"是展开后的各层所占空间的总和\",{\"1\":{\"51\":1}}],[\"为当前\",{\"1\":{\"1145\":1}}],[\"为内存空间的分配提供信息\",{\"1\":{\"1139\":1}}],[\"为对应的新状态\",{\"1\":{\"1010\":1}}],[\"为对象方法打桩\",{\"1\":{\"978\":1}}],[\"为命令添加具体的功能\",{\"0\":{\"990\":1}}],[\"为您的应用程序自动生成手册页\",{\"1\":{\"988\":1}}],[\"为您的应用程序自动生成\",{\"1\":{\"988\":1}}],[\"为go语言程序提供现代强大的命令行程序\",{\"1\":{\"988\":1}}],[\"为改造后的judgeratebytime编写单元测试也更方便了\",{\"1\":{\"979\":1}}],[\"为这个接口生成mock代码\",{\"1\":{\"977\":1}}],[\"为这个包生成mock代码\",{\"1\":{\"977\":1}}],[\"为文档提供示例文档\",{\"1\":{\"966\":1}}],[\"为处于公司中最重要的就是让自己对公司的价值远超于薪水\",{\"1\":{\"792\":1}}],[\"为公司工作最重要的事情\",{\"0\":{\"792\":1}}],[\"为你所关心的人群提供解决问题的方式\",{\"1\":{\"663\":1}}],[\"为你剥夺它们的那块看起来更绿的草唱情歌\",{\"1\":{\"587\":1}}],[\"为的是省钱\",{\"1\":{\"653\":1}}],[\"为人类提供丰富的食物和原材料\",{\"1\":{\"646\":1}}],[\"为自己的投资决策100\",{\"1\":{\"592\":1}}],[\"为自己的决策负责\",{\"1\":{\"592\":1}}],[\"为使图式发挥作用\",{\"1\":{\"572\":1}}],[\"为区块链提供web服务\",{\"1\":{\"509\":1}}],[\"为每个区块添加哈希码\",{\"1\":{\"509\":1}}],[\"为每条记录保存多份历史数据\",{\"1\":{\"356\":1}}],[\"为何记不得上一次是谁给的拥抱\",{\"1\":{\"505\":1}}],[\"为何是使用lamports\",{\"1\":{\"111\":1}}],[\"为哈希表\",{\"1\":{\"407\":2}}],[\"为ht\",{\"1\":{\"396\":1}}],[\"为字典的ht\",{\"1\":{\"395\":1}}],[\"为创建多态字典而设置的\",{\"1\":{\"395\":1}}],[\"为此我们必须揭开潜意识质的面纱\",{\"1\":{\"572\":1}}],[\"为此\",{\"1\":{\"376\":1,\"422\":1}}],[\"为简单起见\",{\"1\":{\"333\":1,\"334\":1}}],[\"为向下取整除法\",{\"1\":{\"326\":1}}],[\"为根节点的子树\",{\"1\":{\"297\":1}}],[\"为空时\",{\"1\":{\"1137\":1}}],[\"为空时跳出\",{\"1\":{\"326\":1}}],[\"为空\",{\"1\":{\"297\":2,\"1137\":1}}],[\"为奇数\",{\"1\":{\"293\":1}}],[\"为奇数时\",{\"1\":{\"293\":1}}],[\"为偶数\",{\"1\":{\"293\":2}}],[\"为true\",{\"1\":{\"267\":1}}],[\"为啥要即dp\",{\"1\":{\"266\":1}}],[\"为结尾的数组的连续递增的子序列的长度\",{\"1\":{\"258\":1}}],[\"为背包容量为j\",{\"1\":{\"235\":1}}],[\"为以j为头结点右子树节点数量\",{\"1\":{\"232\":1}}],[\"为j为头结点左子树节点数量\",{\"1\":{\"232\":1}}],[\"为节点组成的二叉搜索树有多少种\",{\"1\":{\"232\":1}}],[\"为障碍物的情况\",{\"1\":{\"230\":1}}],[\"为网络提供长期的经济稳定性\",{\"1\":{\"118\":1}}],[\"为网络提供核心功能\",{\"1\":{\"112\":1}}],[\"为提供节点资源的验证者补偿\",{\"1\":{\"118\":1}}],[\"为什么直接传递一个person\",{\"1\":{\"1088\":1}}],[\"为什么传统的http协议不能做到websocket实现的功能\",{\"1\":{\"1073\":1}}],[\"为什么是\",{\"1\":{\"945\":1}}],[\"为什么是01背包呢\",{\"1\":{\"239\":1}}],[\"为什么那些去中心化产品都死了\",{\"0\":{\"798\":1}}],[\"为什么今天的老一辈人不能使用电脑呢\",{\"1\":{\"771\":1}}],[\"为什么贫富差距会越来越大\",{\"0\":{\"747\":1}}],[\"为什么选择模块化\",{\"0\":{\"722\":1}}],[\"为什么2024年的当下\",{\"0\":{\"717\":1}}],[\"为什么你应该购入腾讯股票\",{\"0\":{\"714\":1}}],[\"为什么你应该提现你的coin\",{\"0\":{\"702\":1}}],[\"为什么你会成为现在的样子\",{\"1\":{\"575\":1}}],[\"为什么认知是困难的\",{\"0\":{\"655\":1}}],[\"为什么我购买持有并将长期购买持有数字资产\",{\"0\":{\"804\":1}}],[\"为什么我们坚持使用\",{\"0\":{\"721\":1},\"1\":{\"721\":1}}],[\"为什么我们的想法有时往往不是真理\",{\"0\":{\"638\":1}}],[\"为什么我想要这个\",{\"1\":{\"575\":1}}],[\"为什么这个具体的原因导致你想要你现在想要的东西\",{\"1\":{\"575\":1}}],[\"为什么游戏\",{\"1\":{\"575\":1}}],[\"为什么历史很重要\",{\"1\":{\"528\":1}}],[\"为什么有两个连接\",{\"1\":{\"426\":1}}],[\"为什么有了\",{\"1\":{\"358\":1}}],[\"为什么bgrewriteaof和bgsave两个命令不能同时进行\",{\"1\":{\"416\":1}}],[\"为什么先执行命令\",{\"1\":{\"413\":1}}],[\"为什么会这样呢\",{\"1\":{\"771\":1}}],[\"为什么会有混合持久化\",{\"1\":{\"413\":1}}],[\"为什么会有碎片空间呢\",{\"1\":{\"376\":1}}],[\"为什么会出现负溢价\",{\"0\":{\"175\":1}}],[\"为什么锁竞争激烈\",{\"1\":{\"360\":1}}],[\"为什么两阶段提交的磁盘\",{\"1\":{\"360\":1}}],[\"为什么要这样做呢呢\",{\"1\":{\"1188\":1}}],[\"为什么要这么设计\",{\"1\":{\"360\":1}}],[\"为什么要将restful\",{\"1\":{\"1078\":1}}],[\"为什么要根据proto文件生成反向代理器\",{\"1\":{\"1078\":1}}],[\"为什么要独立思考\",{\"0\":{\"680\":1}}],[\"为什么要有buffer\",{\"0\":{\"376\":1}}],[\"为什么要交易费\",{\"1\":{\"118\":1}}],[\"为什么需要\",{\"0\":{\"357\":1,\"358\":1}}],[\"为什么需要两阶段提交\",{\"0\":{\"360\":1},\"1\":{\"355\":1}}],[\"为什么需要bin\",{\"1\":{\"355\":1}}],[\"为什么需要buffer\",{\"1\":{\"355\":1}}],[\"为什么需要redo\",{\"1\":{\"355\":1}}],[\"为什么需要undo\",{\"0\":{\"356\":1},\"1\":{\"355\":1}}],[\"为什么\",{\"1\":{\"353\":1,\"528\":1,\"575\":1,\"722\":1}}],[\"为什么用字节数组做\",{\"1\":{\"277\":1}}],[\"为什么还要考虑\",{\"1\":{\"264\":1}}],[\"为什么还要比较dp\",{\"1\":{\"231\":1}}],[\"为什么强调是组合数呢\",{\"1\":{\"242\":1}}],[\"为什么明明没有别的标签指向这个镜像\",{\"1\":{\"55\":1}}],[\"为\",{\"0\":{\"991\":1},\"1\":{\"116\":1,\"150\":1,\"169\":1,\"236\":1,\"262\":1,\"287\":2,\"291\":1,\"315\":1,\"343\":2,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"411\":1,\"419\":1,\"426\":1,\"428\":2,\"432\":2,\"721\":1,\"992\":1}}],[\"为基础镜像的话\",{\"1\":{\"57\":1}}],[\"为了获取该锁进入自旋的次数小于四次\",{\"1\":{\"1142\":1}}],[\"为了获得开源的真正好处\",{\"1\":{\"725\":1}}],[\"为了获得成效\",{\"1\":{\"627\":1}}],[\"为了减少这种情况的出现\",{\"1\":{\"1142\":1}}],[\"为了支持我们在\",{\"1\":{\"993\":1}}],[\"为了便于举例\",{\"1\":{\"751\":1}}],[\"为了在面对来自各种来源的贡献时保持架构的完整性\",{\"1\":{\"725\":1}}],[\"为了在链上存储数据而预留的余额\",{\"1\":{\"118\":1}}],[\"为了写这些内容\",{\"1\":{\"660\":1}}],[\"为了完成我们带有这个条件的现实范围审查\",{\"1\":{\"584\":1}}],[\"为了更高效一些\",{\"1\":{\"584\":1}}],[\"为了更好管理这些在buffer\",{\"1\":{\"376\":1}}],[\"为了正确对待这个问题\",{\"1\":{\"577\":1}}],[\"为了使教程简便易懂\",{\"1\":{\"509\":1}}],[\"为了保护程序远离这类漏洞\",{\"1\":{\"447\":1}}],[\"为了保证在这种情况下\",{\"1\":{\"437\":1}}],[\"为了保证两步都成功执行\",{\"1\":{\"388\":1}}],[\"为了保证这两个日志的一致性\",{\"1\":{\"360\":1}}],[\"为了保证每个物品仅被添加一次\",{\"1\":{\"241\":1}}],[\"为了向发送者确认这条meet消息或者ping消息已到达\",{\"1\":{\"434\":1}}],[\"为了确认这个主服务器是否真的下线了\",{\"1\":{\"426\":1}}],[\"为了不丢失\",{\"1\":{\"426\":1}}],[\"为了让所有这些都井然有序\",{\"1\":{\"577\":1}}],[\"为了让7000\",{\"1\":{\"428\":1}}],[\"为了让主从服务器再次回到一致状态\",{\"1\":{\"425\":1}}],[\"为了让钱包拥有某个代币的单位数量\",{\"1\":{\"135\":1}}],[\"为了解决线程竞争\",{\"1\":{\"1136\":1}}],[\"为了解决旧版复制功能在处理断线重复制情况时的低效问题\",{\"1\":{\"425\":1}}],[\"为了解决aof文件体积膨胀的问题\",{\"1\":{\"422\":1}}],[\"为了解决这个问题\",{\"1\":{\"413\":2}}],[\"为了区分变量常量数据\",{\"1\":{\"418\":1}}],[\"为了方便你的理解\",{\"1\":{\"413\":1}}],[\"为了方便递归公式dp\",{\"1\":{\"259\":1}}],[\"为了避免\",{\"1\":{\"413\":1}}],[\"为了避免第二步执行失败\",{\"1\":{\"385\":1}}],[\"为了避免出现两份日志之间的逻辑不一致的问题\",{\"1\":{\"360\":1}}],[\"为了提高写入的性能\",{\"1\":{\"358\":1}}],[\"为了防止\",{\"1\":{\"377\":1}}],[\"为了防止断电后导致的数据丢失问题\",{\"1\":{\"357\":1}}],[\"为了防止计算资源的滥用\",{\"1\":{\"119\":1}}],[\"为了符合大多数人的习惯\",{\"1\":{\"294\":1}}],[\"为了简化为特定铸币和所有者查找代币账户地址的过程\",{\"1\":{\"136\":1}}],[\"为了加速镜像构建\",{\"1\":{\"53\":1}}],[\"为了排障需求\",{\"1\":{\"50\":1}}],[\"为了开始在betxin上交易\",{\"1\":{\"36\":1}}],[\"为例\",{\"1\":{\"48\":1,\"50\":1}}],[\"作者曾使用go\",{\"1\":{\"1017\":1}}],[\"作者也是全球著名的创业孵化机构yc的创始人\",{\"1\":{\"669\":1}}],[\"作者的认知和财富思维高度绝对是人类历史上罕见的\",{\"1\":{\"669\":1}}],[\"作者对它们所拥有的权利跟他或她拥有如房子或汽车等实物的权利是一样的\",{\"1\":{\"628\":1}}],[\"作\",{\"1\":{\"395\":1,\"426\":1}}],[\"作用以及运行期间可能的状态\",{\"1\":{\"1131\":1}}],[\"作用于一个\",{\"1\":{\"451\":1}}],[\"作用的值相兼容的函数\",{\"1\":{\"451\":1}}],[\"作用\",{\"1\":{\"139\":1,\"966\":1}}],[\"作为\",{\"1\":{\"1207\":2}}],[\"作为指针的\",{\"1\":{\"1138\":1}}],[\"作为调度器的内部实现\",{\"1\":{\"1134\":1}}],[\"作为粒度更细的资源调度单元\",{\"1\":{\"1132\":1}}],[\"作为后续serve对象处理网络请求时调用的函数\",{\"1\":{\"1055\":1}}],[\"作为行为模式\",{\"1\":{\"812\":1}}],[\"作为雇主\",{\"1\":{\"751\":1}}],[\"作为单个进程运行\",{\"1\":{\"724\":1}}],[\"作为大佬\",{\"1\":{\"669\":1}}],[\"作为最主要负责人愿意还钱\",{\"1\":{\"592\":1}}],[\"作为其糟糕经历的点缀\",{\"1\":{\"585\":1}}],[\"作为我们自身进化的否认的一部分\",{\"1\":{\"576\":1}}],[\"作为一个适中的数字\",{\"1\":{\"751\":1}}],[\"作为一个联合索引\",{\"1\":{\"353\":1}}],[\"作为一名学生\",{\"1\":{\"570\":1}}],[\"作为函数的错误值传回给调用者\",{\"1\":{\"450\":1}}],[\"作为函数的返回值是因为它正好是函数体中那两个可能会失败的操作的错误返回值\",{\"1\":{\"450\":1}}],[\"作为协调者\",{\"1\":{\"360\":1}}],[\"作为抵押品的价格为\",{\"1\":{\"150\":1}}],[\"作为开发平台的灵活性\",{\"1\":{\"129\":1}}],[\"作为计算预算的一部分\",{\"1\":{\"123\":1}}],[\"作为服务端接受来自客户端的请求\",{\"1\":{\"75\":1}}],[\"作为默认标签\",{\"1\":{\"48\":1}}],[\"作品有betxin\",{\"1\":{\"3\":1}}],[\"<test\",{\"1\":{\"1182\":2}}],[\"<tab>命令\",{\"1\":{\"1025\":1}}],[\"<tab>\",{\"1\":{\"1025\":1}}],[\"<target\",{\"1\":{\"432\":1}}],[\"<duration>\",{\"1\":{\"1004\":1}}],[\"<<\",{\"1\":{\"516\":1,\"959\":1,\"1055\":1,\"1179\":1}}],[\"<<=\",{\"1\":{\"330\":1,\"331\":1}}],[\"<alloc\",{\"1\":{\"447\":1}}],[\"<arpa\",{\"1\":{\"90\":2}}],[\"<usize\",{\"1\":{\"447\":1}}],[\"<unistd\",{\"1\":{\"90\":2}}],[\"<channel>\",{\"1\":{\"435\":1}}],[\"<current\",{\"1\":{\"426\":1}}],[\"<impl\",{\"1\":{\"447\":1}}],[\"<i>\",{\"1\":{\"432\":2}}],[\"<ip>\",{\"1\":{\"90\":2,\"426\":2,\"427\":1,\"429\":1}}],[\"<message>\",{\"1\":{\"435\":1}}],[\"<m\",{\"1\":{\"426\":4}}],[\"<ms>选项的值\",{\"1\":{\"426\":1}}],[\"<master\",{\"1\":{\"426\":3}}],[\"<node\",{\"1\":{\"433\":1}}],[\"<number>选项的值\",{\"1\":{\"426\":1}}],[\"<netinet\",{\"1\":{\"90\":2}}],[\"<quorum>选项中的quorum参数\",{\"1\":{\"426\":1}}],[\"<port\",{\"1\":{\"425\":1}}],[\"<port>命令来完成\",{\"1\":{\"427\":1}}],[\"<port>\",{\"1\":{\"90\":4,\"426\":2,\"429\":1}}],[\"<runid>\",{\"1\":{\"425\":2,\"426\":1}}],[\"<f64>\",{\"1\":{\"152\":2}}],[\"<=t2\",{\"1\":{\"261\":1}}],[\"<=\",{\"1\":{\"152\":1,\"208\":2,\"209\":1,\"226\":1,\"227\":1,\"228\":1,\"231\":1,\"232\":2,\"235\":2,\"241\":1,\"242\":1,\"243\":1,\"244\":2,\"245\":3,\"246\":1,\"258\":1,\"259\":4,\"260\":2,\"261\":1,\"263\":2,\"264\":5,\"265\":8,\"266\":6,\"267\":2,\"281\":1,\"282\":1,\"285\":1,\"291\":3,\"318\":1,\"323\":6,\"325\":1,\"326\":1,\"329\":1,\"948\":9,\"978\":1,\"979\":2,\"1120\":2,\"1135\":1}}],[\"<source\",{\"1\":{\"432\":1}}],[\"<slot>\",{\"1\":{\"428\":1,\"429\":1}}],[\"<s\",{\"1\":{\"426\":4}}],[\"<sys\",{\"1\":{\"90\":2}}],[\"<string\",{\"1\":{\"90\":2}}],[\"<stdlib\",{\"1\":{\"90\":2}}],[\"<stdio\",{\"1\":{\"90\":2}}],[\"<上下文路径\",{\"1\":{\"59\":1}}],[\"<命令>\",{\"1\":{\"58\":1}}],[\"<\",{\"1\":{\"56\":1,\"58\":1,\"208\":2,\"210\":1,\"211\":1,\"212\":2,\"213\":2,\"214\":1,\"215\":1,\"216\":3,\"217\":2,\"218\":1,\"219\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":4,\"230\":4,\"231\":1,\"235\":4,\"236\":1,\"237\":1,\"238\":2,\"239\":3,\"241\":2,\"242\":1,\"243\":1,\"244\":2,\"245\":1,\"246\":1,\"249\":2,\"252\":1,\"253\":1,\"255\":3,\"257\":6,\"258\":5,\"262\":1,\"267\":1,\"268\":2,\"275\":1,\"276\":1,\"279\":2,\"281\":1,\"283\":3,\"284\":4,\"285\":2,\"288\":1,\"301\":1,\"303\":1,\"304\":1,\"305\":3,\"311\":1,\"312\":1,\"313\":4,\"318\":2,\"320\":3,\"321\":1,\"324\":1,\"325\":1,\"328\":1,\"329\":2,\"331\":1,\"332\":2,\"335\":1,\"336\":2,\"483\":1,\"827\":3,\"838\":1,\"944\":5,\"945\":3,\"946\":2,\"947\":6,\"948\":3,\"949\":2,\"950\":4,\"967\":2,\"970\":1,\"972\":1,\"979\":2,\"992\":1,\"997\":2,\"1019\":1,\"1055\":2,\"1056\":1,\"1063\":1,\"1072\":5,\"1099\":1,\"1123\":2,\"1124\":6,\"1125\":2,\"1126\":5,\"1127\":6,\"1137\":3,\"1146\":2,\"1188\":1,\"1192\":2,\"1193\":2,\"1206\":3}}],[\"<h1>hello\",{\"1\":{\"56\":1,\"58\":1}}],[\"<镜像>\",{\"1\":{\"55\":1}}],[\"<镜像2>\",{\"1\":{\"55\":1}}],[\"<镜像1>\",{\"1\":{\"55\":1}}],[\"<软件名>\",{\"1\":{\"49\":1}}],[\"<用户名>\",{\"1\":{\"49\":1}}],[\"<域名\",{\"1\":{\"49\":1}}],[\"<标签>\",{\"1\":{\"48\":1}}],[\"<仓库名>\",{\"1\":{\"48\":1}}],[\"仓库去访问元数据\",{\"1\":{\"1093\":1}}],[\"仓库可以被认为是一个具体的项目或目录\",{\"1\":{\"73\":1}}],[\"仓库中标签为\",{\"1\":{\"49\":1}}],[\"仓库名\",{\"1\":{\"49\":2,\"51\":1}}],[\"仓库名经常以\",{\"1\":{\"48\":1}}],[\"仓库\",{\"0\":{\"48\":1,\"73\":1},\"1\":{\"73\":1}}],[\"或metadata\",{\"1\":{\"1093\":1}}],[\"或使用rsa或ecdsa的公钥\",{\"1\":{\"1047\":1}}],[\"或名字缩写\",{\"1\":{\"1002\":1}}],[\"或位置参数\",{\"1\":{\"991\":1}}],[\"或任何其他原因\",{\"1\":{\"705\":1}}],[\"或是你自己的一段支持或质疑作者所说内容的经验\",{\"1\":{\"628\":1}}],[\"或是长期等待成功后的喜悦\",{\"1\":{\"587\":1}}],[\"或可创造\",{\"1\":{\"584\":1}}],[\"或微妙地操纵他人\",{\"1\":{\"581\":1}}],[\"或你这一代的主流文化或你最亲密的朋友圈子中的直接文化认为什么是酷的\",{\"1\":{\"575\":1}}],[\"或你更直接的社区的观点\",{\"1\":{\"575\":1}}],[\"或许有人提到这样的观点\",{\"1\":{\"806\":1}}],[\"或许是曾经大部分时间都在自己探索\",{\"1\":{\"660\":1}}],[\"或许你真正想要的是一种过度安全的程度\",{\"1\":{\"574\":1}}],[\"或许这种对生活水平下降的恐惧实际上并不来自于你的生活方式触角\",{\"1\":{\"574\":1}}],[\"或许在心底里向世界宣告\",{\"1\":{\"552\":1}}],[\"或许我们可能又回到过去贫穷落后的状态\",{\"1\":{\"534\":1}}],[\"或许当我们身处未来\",{\"1\":{\"532\":1}}],[\"或许早已被安排为美利坚合众国总统\",{\"1\":{\"528\":1}}],[\"或许\",{\"1\":{\"500\":1}}],[\"或许哪里又可以有所改进\",{\"1\":{\"500\":1}}],[\"或锁机制来保证的\",{\"1\":{\"361\":1}}],[\"或不删除\",{\"1\":{\"257\":1}}],[\"或下标为\",{\"1\":{\"228\":1}}],[\"或以下时\",{\"1\":{\"150\":1}}],[\"或向后兼容\",{\"1\":{\"138\":1}}],[\"或\",{\"1\":{\"65\":1,\"265\":1,\"275\":1,\"292\":3,\"297\":1,\"330\":2,\"385\":1,\"388\":1,\"705\":1,\"772\":2,\"991\":1,\"1135\":1,\"1153\":1,\"1156\":1,\"1225\":1}}],[\"或网络存储\",{\"1\":{\"47\":1}}],[\"或者实现了\",{\"1\":{\"1144\":1}}],[\"或者电脑上可以下载下postman去测试一下\",{\"1\":{\"1079\":1}}],[\"或者没有任何操作则停在本状态\",{\"1\":{\"1009\":1}}],[\"或者使用月份名字缩写\",{\"1\":{\"1002\":1}}],[\"或者这个库要经过内网请求但你现在没这能力\",{\"1\":{\"978\":1}}],[\"或者有多种实现方式时\",{\"1\":{\"854\":1}}],[\"或者对象有多个状态\",{\"1\":{\"850\":1}}],[\"或者需要提供多种不同的遍历方式的场景\",{\"1\":{\"868\":1}}],[\"或者需要提供对象的快照的场景\",{\"1\":{\"839\":1}}],[\"或者需要增加新的操作\",{\"1\":{\"868\":1}}],[\"或者需要通知其他对象\",{\"1\":{\"845\":1}}],[\"或者需要在运行时动态地改变对象之间的交互方式的场景\",{\"1\":{\"834\":1}}],[\"或者打破了你习惯的工作流程\",{\"1\":{\"773\":1}}],[\"或者认为\",{\"1\":{\"773\":1}}],[\"或者想买美股\",{\"1\":{\"754\":1}}],[\"或者其他任何东西\",{\"1\":{\"751\":1}}],[\"或者其中几个因素结合在一起\",{\"1\":{\"574\":1}}],[\"或者每年多休几次假\",{\"1\":{\"751\":1}}],[\"或者怎样才能做自己的贡献\",{\"1\":{\"739\":1}}],[\"或者间接被周围的人带入过这些热点\",{\"1\":{\"734\":1}}],[\"或者特别稳定\",{\"1\":{\"718\":1}}],[\"或者只是开始要求您提供太多文件\",{\"1\":{\"705\":1}}],[\"或者只是第2种情况的另一种表现\",{\"1\":{\"575\":1}}],[\"或者交流时候\",{\"1\":{\"692\":1}}],[\"或者可以先创建一个md\",{\"1\":{\"1093\":1}}],[\"或者可以直接应用起新认知\",{\"1\":{\"810\":1}}],[\"或者可以轻易筹集到的资本\",{\"1\":{\"673\":1}}],[\"或者可以间接对政治产生巨大的影响\",{\"1\":{\"646\":1}}],[\"或者可能没有权限访问这个文件\",{\"1\":{\"448\":1}}],[\"或者换句话说你的选择违背了人类发展的趋势\",{\"1\":{\"718\":1}}],[\"或者换句话说\",{\"1\":{\"639\":1}}],[\"或者换句话讲叫中心化的互联网厂商没有中立的义务\",{\"1\":{\"533\":1}}],[\"或者看着其他同学苦思冥想的样子\",{\"1\":{\"626\":1}}],[\"或者未来可能让这个人类族群灭绝的小行星撞击\",{\"1\":{\"610\":1}}],[\"或者在线多人游戏的话就没法实现了\",{\"1\":{\"1073\":1}}],[\"或者在某些状态转换的前后添加一些操作\",{\"1\":{\"1010\":1}}],[\"或者在看到一幅饥饿儿童图片时感到同情怜悯\",{\"1\":{\"626\":1}}],[\"或者在我还在学校时的职业规划调整\",{\"1\":{\"588\":1}}],[\"或者在这段跋涉中\",{\"1\":{\"588\":1}}],[\"或者也许有一些根本性的进化\",{\"1\":{\"588\":1}}],[\"或者两三件\",{\"1\":{\"577\":1}}],[\"或者哪种恐惧最明显\",{\"1\":{\"577\":1}}],[\"或者哪些触角受到惯性的驱使\",{\"1\":{\"574\":1}}],[\"或者哪些职业价值更有意义或更无意义的文章\",{\"1\":{\"572\":1}}],[\"或者试图逃避嫉妒或不被欣赏等情绪\",{\"1\":{\"577\":1}}],[\"或者是对于长时间的自由开放休闲的深深热爱\",{\"1\":{\"576\":1}}],[\"或者是你的一位教授反复强调的强烈观点\",{\"1\":{\"575\":1}}],[\"或者是你心目中的名人英雄在一次采访中说过的话\",{\"1\":{\"575\":1}}],[\"或者一个算法有多种实现方式的场景\",{\"1\":{\"856\":1}}],[\"或者一个包含\",{\"1\":{\"450\":1}}],[\"或者一种渴望成名但被你所属的群体所耻笑的欲望\",{\"1\":{\"576\":1}}],[\"或者至少有很多模糊不清的地方\",{\"1\":{\"575\":1}}],[\"或者你目前有一些无法放弃的财务承诺\",{\"1\":{\"574\":1}}],[\"或者担心带来压力和不稳定性\",{\"1\":{\"574\":1}}],[\"或者担心在你的恋爱对象眼中显得不够成功\",{\"1\":{\"574\":1}}],[\"或者确认心中困扰你的怀疑\",{\"1\":{\"574\":1}}],[\"或者正摆在头脑前面\",{\"1\":{\"572\":1}}],[\"或者做一些细微的个人改动\",{\"1\":{\"571\":1}}],[\"或者那些目前正处于职业生涯中期\",{\"1\":{\"569\":1}}],[\"或者干脆默认开启摄像头去直白侵犯隐私\",{\"1\":{\"534\":1}}],[\"或者干脆fork一份\",{\"1\":{\"494\":1}}],[\"或者默认监听用户的聊天内容\",{\"1\":{\"534\":1}}],[\"或者要是\",{\"1\":{\"528\":1}}],[\"或者直接在quorum里建一个群组\",{\"1\":{\"551\":1}}],[\"或者直接在middleware中执行页面跳转\",{\"1\":{\"200\":1}}],[\"或者直接去看别人的代码都可以\",{\"1\":{\"525\":1}}],[\"或者槽i被指派给了哪个节点\",{\"1\":{\"428\":1}}],[\"或者三个从服务器的延迟\",{\"1\":{\"425\":1}}],[\"或者之前执行过slaveof\",{\"1\":{\"425\":1}}],[\"或者从服务器当前要复制的主服务器和上一次复制的主服务器不同\",{\"1\":{\"425\":1}}],[\"或者命令格式不对\",{\"1\":{\"424\":1}}],[\"或者客户端没有监视任何键\",{\"1\":{\"424\":1}}],[\"或者超过了指定的时限之后\",{\"1\":{\"422\":1}}],[\"或者更好的是\",{\"1\":{\"725\":1}}],[\"或者更可怕你看不懂就直接使用了\",{\"1\":{\"605\":1}}],[\"或者更准确地说\",{\"1\":{\"573\":1}}],[\"或者更新已存在成员的分数\",{\"1\":{\"410\":1}}],[\"或者更直接的做法\",{\"1\":{\"385\":1}}],[\"或者用这个\",{\"1\":{\"360\":1}}],[\"或者用二分法做\",{\"1\":{\"325\":1}}],[\"或者事物执行后将数据被修改后的数据记录到log里\",{\"1\":{\"357\":1}}],[\"或者事务执行失败\",{\"1\":{\"356\":1}}],[\"或者项目根目录下\",{\"1\":{\"60\":1}}],[\"或者简写\",{\"1\":{\"54\":1}}],[\"或者\",{\"1\":{\"47\":1,\"48\":1,\"55\":1,\"60\":1,\"283\":1,\"292\":1,\"313\":1,\"332\":2,\"353\":1,\"358\":1,\"370\":1,\"471\":1,\"481\":2,\"1035\":1,\"1037\":1,\"1144\":1,\"1146\":1}}],[\"或者说肯定其存在的人与否认其存在的人一样是正确的\",{\"1\":{\"637\":1}}],[\"或者说\",{\"1\":{\"46\":1,\"435\":1}}],[\"绑定宿主目录\",{\"1\":{\"47\":1}}],[\"v持有的值的分类必须是通道\",{\"1\":{\"1191\":1}}],[\"vgqj3glr6lt\",{\"1\":{\"1019\":1}}],[\"v8\",{\"1\":{\"976\":2}}],[\"v参数\",{\"1\":{\"967\":1}}],[\"vlissides\",{\"1\":{\"827\":3}}],[\"vr\",{\"1\":{\"772\":1}}],[\"vtalink\",{\"1\":{\"169\":1}}],[\"vscode\",{\"1\":{\"557\":1}}],[\"vsui\",{\"1\":{\"166\":2}}],[\"vs\",{\"0\":{\"148\":1}}],[\"v0\",{\"1\":{\"138\":1,\"447\":2,\"448\":1}}],[\"vice\",{\"1\":{\"1126\":1}}],[\"vicissitudes\",{\"1\":{\"523\":1}}],[\"vim\",{\"1\":{\"1026\":1}}],[\"visibility\",{\"1\":{\"1120\":1}}],[\"visible\",{\"1\":{\"523\":1}}],[\"visits\",{\"1\":{\"867\":8}}],[\"visitconcreteelementb\",{\"1\":{\"867\":4}}],[\"visitconcreteelementa\",{\"1\":{\"867\":4}}],[\"visitor\",{\"1\":{\"867\":12}}],[\"video\",{\"1\":{\"563\":1,\"977\":1}}],[\"violation\",{\"1\":{\"547\":1}}],[\"violated\",{\"1\":{\"547\":1}}],[\"violate\",{\"1\":{\"523\":1}}],[\"violently\",{\"1\":{\"523\":1}}],[\"vitality\",{\"1\":{\"523\":2}}],[\"virtue\",{\"1\":{\"537\":1}}],[\"virtual\",{\"1\":{\"70\":1,\"547\":1}}],[\"virus\",{\"1\":{\"523\":1}}],[\"viruses\",{\"1\":{\"523\":1}}],[\"vigorously\",{\"1\":{\"523\":1}}],[\"views\",{\"1\":{\"975\":2}}],[\"viewers\",{\"1\":{\"975\":3}}],[\"viewers表中插入一条数据\",{\"1\":{\"975\":1}}],[\"viewers表中记录浏览当前商品的用户id\",{\"1\":{\"975\":1}}],[\"viewers两张表\",{\"1\":{\"975\":1}}],[\"view时\",{\"1\":{\"362\":1}}],[\"view里有四个重要字段\",{\"1\":{\"362\":1}}],[\"view里的字段和记录中的两个隐藏列\",{\"1\":{\"356\":1}}],[\"view\",{\"0\":{\"1118\":1},\"1\":{\"356\":3,\"362\":23,\"364\":3,\"547\":1,\"1118\":1}}],[\"view不会消耗gas\",{\"1\":{\"105\":1}}],[\"vacation\",{\"1\":{\"548\":1}}],[\"vals\",{\"1\":{\"1093\":2}}],[\"validnextproto\",{\"1\":{\"1055\":1}}],[\"validate\",{\"1\":{\"1242\":4}}],[\"validatestacksequences\",{\"1\":{\"302\":1}}],[\"validator包实现了基于tags的对结构和体字段的验证器\",{\"1\":{\"1245\":1}}],[\"validator库学习\",{\"0\":{\"1245\":1}}],[\"validator\",{\"1\":{\"1242\":1,\"1245\":1},\"2\":{\"1247\":1}}],[\"validator实现\",{\"1\":{\"1242\":1}}],[\"validation\",{\"0\":{\"1242\":1},\"1\":{\"1222\":1}}],[\"validargs\",{\"1\":{\"991\":2}}],[\"valid\",{\"1\":{\"976\":1,\"1047\":2,\"1053\":1,\"1055\":1,\"1099\":3,\"1122\":1,\"1188\":1}}],[\"valuable\",{\"1\":{\"537\":1,\"543\":1,\"557\":1}}],[\"value类型的常用方法\",{\"1\":{\"1194\":1}}],[\"valueof函数\",{\"1\":{\"1194\":1}}],[\"valueof函数用于获取变量的值信息\",{\"1\":{\"1194\":1}}],[\"valueof\",{\"1\":{\"1189\":6,\"1190\":1,\"1191\":6,\"1192\":1,\"1193\":1}}],[\"value持有的值的类型\",{\"1\":{\"1189\":1}}],[\"value持有的原始值\",{\"1\":{\"1189\":1}}],[\"value接口\",{\"1\":{\"1163\":1}}],[\"value是\",{\"1\":{\"1093\":1}}],[\"values\",{\"1\":{\"420\":1,\"537\":1,\"547\":1,\"975\":1,\"1045\":6,\"1119\":1,\"1120\":1,\"1127\":1,\"1179\":1}}],[\"value三部分组成\",{\"1\":{\"420\":1}}],[\"value2\",{\"1\":{\"405\":2,\"407\":1,\"1084\":1}}],[\"value1\",{\"1\":{\"405\":2,\"407\":1,\"1084\":1,\"1094\":1,\"1095\":1}}],[\"valueint\",{\"1\":{\"152\":1}}],[\"value\",{\"0\":{\"420\":1,\"1189\":1},\"1\":{\"90\":1,\"152\":16,\"235\":6,\"236\":6,\"237\":1,\"240\":2,\"241\":2,\"280\":4,\"343\":3,\"394\":1,\"403\":18,\"404\":1,\"405\":8,\"406\":1,\"407\":4,\"419\":3,\"420\":1,\"436\":4,\"449\":1,\"543\":2,\"547\":3,\"557\":1,\"973\":5,\"976\":1,\"1047\":2,\"1054\":1,\"1055\":11,\"1086\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1122\":1,\"1127\":4,\"1144\":3,\"1161\":5,\"1163\":7,\"1187\":1,\"1189\":4,\"1191\":2,\"1194\":1,\"1212\":2},\"2\":{\"538\":1,\"539\":1,\"780\":1,\"781\":1,\"785\":1,\"786\":1,\"790\":1,\"791\":1,\"793\":1,\"794\":1,\"796\":1,\"797\":1}}],[\"valdestructor\",{\"1\":{\"395\":1}}],[\"valdup\",{\"1\":{\"395\":1}}],[\"val>l2\",{\"1\":{\"296\":1}}],[\"val2\",{\"1\":{\"250\":2}}],[\"val\",{\"1\":{\"250\":1,\"278\":1,\"279\":1,\"290\":4,\"296\":3,\"297\":4,\"299\":2,\"303\":1,\"304\":1,\"305\":1,\"307\":8,\"308\":2,\"327\":1,\"336\":5,\"395\":1,\"458\":2,\"480\":1,\"976\":6}}],[\"val1\",{\"1\":{\"250\":2,\"1093\":1,\"1094\":1,\"1095\":1}}],[\"var形式\",{\"0\":{\"1162\":1}}],[\"varys\",{\"1\":{\"978\":6}}],[\"various\",{\"1\":{\"523\":5,\"543\":1,\"1118\":1}}],[\"variants\",{\"1\":{\"459\":1}}],[\"variables\",{\"1\":{\"1123\":1}}],[\"variable\",{\"1\":{\"447\":2,\"448\":1,\"464\":1,\"475\":1,\"1124\":1,\"1127\":1}}],[\"var\",{\"1\":{\"58\":1,\"74\":2,\"209\":1,\"211\":1,\"212\":1,\"213\":1,\"217\":1,\"278\":1,\"284\":1,\"286\":1,\"288\":1,\"295\":1,\"297\":1,\"298\":1,\"299\":1,\"322\":1,\"324\":2,\"327\":2,\"330\":3,\"331\":2,\"334\":1,\"513\":2,\"514\":1,\"516\":1,\"861\":1,\"898\":2,\"899\":1,\"958\":1,\"959\":2,\"967\":1,\"972\":2,\"973\":1,\"978\":1,\"980\":4,\"981\":1,\"991\":4,\"992\":3,\"993\":1,\"997\":1,\"1019\":2,\"1045\":1,\"1047\":1,\"1055\":1,\"1063\":2,\"1073\":1,\"1095\":2,\"1099\":1,\"1122\":1,\"1138\":3,\"1146\":1,\"1161\":1,\"1162\":2,\"1163\":3,\"1170\":1,\"1171\":4,\"1172\":2,\"1173\":1,\"1181\":1,\"1187\":1,\"1188\":5,\"1191\":3,\"1199\":2,\"1226\":1,\"1231\":1,\"1236\":1,\"1239\":1}}],[\"void\",{\"1\":{\"90\":4,\"394\":7,\"395\":19,\"400\":1}}],[\"volumn\",{\"1\":{\"1219\":1}}],[\"volumes\",{\"1\":{\"74\":3}}],[\"volume\",{\"1\":{\"47\":1,\"74\":7}}],[\"vol\",{\"1\":{\"74\":10}}],[\"ve\",{\"1\":{\"1055\":1}}],[\"vet\",{\"1\":{\"1026\":2}}],[\"veth\",{\"1\":{\"76\":1}}],[\"vendors\",{\"1\":{\"563\":1}}],[\"versa\",{\"1\":{\"1126\":1}}],[\"version是长度为4字节\",{\"1\":{\"418\":1}}],[\"version\",{\"0\":{\"547\":1,\"551\":1},\"1\":{\"90\":2,\"418\":2}}],[\"verification\",{\"1\":{\"1099\":1}}],[\"very\",{\"1\":{\"523\":7,\"537\":2,\"540\":1,\"543\":2,\"557\":1,\"560\":3,\"563\":3}}],[\"verbose\",{\"1\":{\"447\":1,\"991\":5,\"1161\":9,\"1162\":7}}],[\"vec<t\",{\"1\":{\"447\":1}}],[\"vector\",{\"1\":{\"447\":1}}],[\"vector<int>\",{\"1\":{\"265\":1}}],[\"vector<vector<int>>\",{\"1\":{\"265\":1}}],[\"vector<vector<long\",{\"1\":{\"264\":1}}],[\"vector<long\",{\"1\":{\"264\":1}}],[\"vec\",{\"1\":{\"447\":3}}],[\"vfs\",{\"1\":{\"78\":1}}],[\"vm\",{\"1\":{\"76\":1}}],[\"v\",{\"1\":{\"74\":5,\"240\":2,\"277\":2,\"279\":2,\"302\":2,\"312\":2,\"395\":1,\"447\":2,\"459\":2,\"460\":3,\"867\":4,\"890\":2,\"899\":1,\"933\":2,\"959\":2,\"960\":1,\"961\":1,\"967\":6,\"968\":2,\"972\":1,\"973\":1,\"975\":1,\"976\":1,\"978\":2,\"979\":2,\"980\":4,\"991\":1,\"993\":5,\"1011\":4,\"1055\":12,\"1072\":2,\"1097\":1,\"1099\":2,\"1127\":5,\"1138\":7,\"1170\":1,\"1173\":1,\"1178\":9,\"1188\":2,\"1189\":2,\"1190\":4,\"1191\":2,\"1192\":1,\"1219\":1}}],[\"v10\",{\"1\":{\"1245\":1}}],[\"v1\",{\"1\":{\"70\":2,\"973\":1,\"977\":1,\"1018\":1,\"1067\":2,\"1079\":3,\"1080\":11}}],[\"v2版本正在开发中\",{\"1\":{\"1018\":1}}],[\"v2\",{\"1\":{\"59\":2,\"976\":2,\"1079\":2}}],[\"v3是go目前社区最受欢迎的cron库\",{\"1\":{\"999\":1}}],[\"v3\",{\"1\":{\"59\":2,\"60\":2,\"1000\":1,\"1001\":1}}],[\"vuepress\",{\"1\":{\"55\":1}}],[\"vuejs\",{\"1\":{\"3\":1}}],[\"所信即所见\",{\"1\":{\"639\":1}}],[\"所见即所信\",{\"1\":{\"639\":1}}],[\"所罗门阿希的实验表明\",{\"1\":{\"622\":1}}],[\"所能做的仅仅就只能是与它做朋友\",{\"1\":{\"500\":1}}],[\"所储存的值减去给定的减量值\",{\"1\":{\"403\":1}}],[\"所储存的值加上给定的浮点增量值\",{\"1\":{\"403\":1}}],[\"所储存的值加上给定的增量值\",{\"1\":{\"403\":1}}],[\"所储存的字符串值的长度\",{\"1\":{\"403\":1}}],[\"所储存的字符串值\",{\"1\":{\"403\":3}}],[\"所\",{\"1\":{\"396\":1,\"426\":1,\"433\":1,\"434\":1}}],[\"所占内存的大小\",{\"1\":{\"358\":1}}],[\"所占用的空间\",{\"1\":{\"51\":1}}],[\"所谓无状态就是服务器端不再存储状态\",{\"1\":{\"1046\":1}}],[\"所谓的快照\",{\"1\":{\"413\":1}}],[\"所谓的存储引擎\",{\"1\":{\"350\":1}}],[\"所谓定制镜像\",{\"1\":{\"57\":1}}],[\"所使用的最少操作数\",{\"1\":{\"266\":1}}],[\"所得现金就是按照今天股票佳价格卖出后所得现金即\",{\"1\":{\"252\":1}}],[\"所得现金就是昨天不持有股票的所得现金\",{\"1\":{\"252\":1}}],[\"所得现金就是昨天持有股票的所得现金\",{\"1\":{\"252\":1}}],[\"所得现金就是买入今天的股票后所得现金即\",{\"1\":{\"252\":1}}],[\"所背的物品价值可以最大为dp\",{\"1\":{\"236\":1}}],[\"所有从它派生的上下文也会被取消\",{\"1\":{\"1156\":1}}],[\"所有mcentral的集合是存放于mheap中的\",{\"1\":{\"1149\":1}}],[\"所有网络协程\",{\"1\":{\"1135\":1}}],[\"所有以\",{\"1\":{\"966\":1}}],[\"所有这些意外的复杂性都建立在问题的原始基本复杂性之上\",{\"1\":{\"723\":1}}],[\"所有这些用户基本上没有真正的追索权\",{\"1\":{\"706\":1}}],[\"所有这些不公平优势的基础都是思维模式\",{\"1\":{\"673\":1}}],[\"所有这些问题的答案都在你的渴望章鱼的各个触角上\",{\"1\":{\"574\":1}}],[\"所有人都会犯这个错误\",{\"1\":{\"575\":1}}],[\"所有迹象表明\",{\"1\":{\"534\":1}}],[\"所有动物都是平等的\",{\"1\":{\"533\":1}}],[\"所有代码还是开源的\",{\"1\":{\"494\":1}}],[\"所有引用都会指向同一个地址\",{\"1\":{\"457\":1}}],[\"所有接收到这条publish消息的节点都会向channel频道发送message消息\",{\"1\":{\"435\":1}}],[\"所有接收到这条fail消息的节点都会将主节点b标记为已下线\",{\"1\":{\"435\":1}}],[\"所有收到这条消息的节点都会立即将节点b标记为已下线\",{\"1\":{\"434\":1}}],[\"所有收到这条fail消息的节点都会立即将主节点x标记为已下线\",{\"1\":{\"433\":1}}],[\"所有sentinel都有一次将某个sentinel设置为局部领头sentinel的机会\",{\"1\":{\"426\":1}}],[\"所有在线的sentinel都有被选为领头sentinel的资格\",{\"1\":{\"426\":1}}],[\"所有同样监视这个主服务器的其他sentinel的资料\",{\"1\":{\"426\":1}}],[\"所有对数据库进行修改的命令\",{\"1\":{\"424\":1}}],[\"所有数据都通过\",{\"1\":{\"494\":1}}],[\"所有数据\",{\"1\":{\"413\":1}}],[\"所有给定集合的并集存储在\",{\"1\":{\"409\":1}}],[\"所有值小于\",{\"1\":{\"406\":1}}],[\"所有存储引擎都可以使用\",{\"1\":{\"358\":1}}],[\"所有存入的资产共同作为借款的抵押品\",{\"1\":{\"150\":1}}],[\"所有骰子朝上一面的点数之和为s\",{\"1\":{\"337\":1}}],[\"所有偶数在数组的后半部分\",{\"1\":{\"293\":1}}],[\"所有pusd都是通过pando\",{\"1\":{\"173\":1}}],[\"所有指令都成功处理\",{\"1\":{\"116\":1}}],[\"所有链上程序交互都是以整数计算\",{\"1\":{\"111\":1}}],[\"所有者\",{\"1\":{\"111\":1,\"112\":1,\"135\":1}}],[\"所有比特币发行完毕\",{\"1\":{\"94\":1}}],[\"所有的实现部分都有一个通用接口\",{\"1\":{\"911\":1}}],[\"所有的价值观都是有价值的吗\",{\"1\":{\"626\":1}}],[\"所有的一切都在欺瞒着用户\",{\"1\":{\"534\":1}}],[\"所有的事物都是正确的\",{\"1\":{\"528\":1}}],[\"所有的数据修改只在主服务器上进行\",{\"1\":{\"413\":1}}],[\"所有的pusd都是通过pando\",{\"1\":{\"187\":1}}],[\"所有的借贷协议都一定有五种行为\",{\"1\":{\"157\":1}}],[\"所有的\",{\"1\":{\"76\":1,\"1135\":1}}],[\"所有的资源都是应用进程直接共享的\",{\"1\":{\"75\":1}}],[\"所有的文件写入操作\",{\"1\":{\"47\":1}}],[\"所需要删除元素的最少次数\",{\"1\":{\"265\":1}}],[\"所需要的资源都是应用程序运行所必需的\",{\"1\":{\"65\":1}}],[\"所需要的命令主要为\",{\"1\":{\"64\":1}}],[\"所需的支持投票数量\",{\"1\":{\"426\":1}}],[\"所需的元素个数就是k\",{\"1\":{\"208\":1}}],[\"所需的最小金额的资产\",{\"1\":{\"150\":1}}],[\"所需的一切库都已经在可执行文件里了\",{\"1\":{\"57\":1}}],[\"所在的位置上\",{\"1\":{\"1137\":1}}],[\"所在的内存地址上\",{\"1\":{\"1137\":1}}],[\"所在目录呢\",{\"1\":{\"60\":1}}],[\"所在目录下的\",{\"1\":{\"60\":1}}],[\"所在路径\",{\"1\":{\"60\":1}}],[\"所删除的上一层的东西并不会丢失\",{\"1\":{\"55\":1}}],[\"所显示的大小是网络传输中更关心的流量大小\",{\"1\":{\"51\":1}}],[\"所以qmgo支持所有go\",{\"1\":{\"1242\":1}}],[\"所以理论上我们也可以自己new出来一个logger实例\",{\"1\":{\"1181\":1}}],[\"所以理解\",{\"1\":{\"425\":1}}],[\"所以变量\",{\"1\":{\"1138\":1}}],[\"所以变量声明可以不需要\",{\"1\":{\"481\":1}}],[\"所以能在结构体上调用\",{\"1\":{\"1138\":1}}],[\"所以找不到pb目录\",{\"1\":{\"1084\":1}}],[\"所以下面我们接着再来修改一下proto文件\",{\"1\":{\"1080\":1}}],[\"所以下标非0的元素都是应该是最大值\",{\"1\":{\"244\":1}}],[\"所以您可以确定发送者就是他们所说的人\",{\"1\":{\"1047\":1}}],[\"所以基于session会话管理做进一步提升的token无状态会话管理就诞生了\",{\"1\":{\"1046\":1}}],[\"所以数据量很大会导致性能问题\",{\"1\":{\"1018\":1}}],[\"所以很简陋\",{\"1\":{\"1011\":1}}],[\"所以parseduration支持的格式都可以\",{\"1\":{\"1004\":1}}],[\"所以mocktimes是\",{\"1\":{\"960\":1}}],[\"所以mysql在存储引擎层面有buffer\",{\"1\":{\"376\":1}}],[\"所以mysql8\",{\"1\":{\"355\":1}}],[\"所以事实上你也是不可以mock来修改常量的\",{\"1\":{\"959\":1}}],[\"所以事实上我们可以直接使用github登录\",{\"1\":{\"192\":1}}],[\"所以相应的你也可以新创建一个proto目录去试试这个命令\",{\"1\":{\"1084\":1}}],[\"所以相当于所有的普通人都参与到数字经济世界中\",{\"1\":{\"804\":1}}],[\"所以相比在此事件之外在过去七年间没怎么用过mixin的人来说\",{\"1\":{\"591\":1}}],[\"所以从这个角度来讲\",{\"1\":{\"800\":1}}],[\"所以才会雇佣此人\",{\"1\":{\"792\":1}}],[\"所以极致的产出\",{\"1\":{\"792\":1}}],[\"所以提高自己的决策质量非常重要\",{\"1\":{\"760\":1}}],[\"所以综合以上\",{\"1\":{\"759\":1}}],[\"所以人群之间的贫富差距会越来越大\",{\"1\":{\"747\":1}}],[\"所以照此发展来看\",{\"1\":{\"746\":1}}],[\"所以选择适合自己的消费习惯才是最重要的\",{\"1\":{\"743\":1}}],[\"所以正确的想法是\",{\"1\":{\"717\":1}}],[\"所以十年\",{\"1\":{\"717\":1}}],[\"所以anytype这样的产品不会死\",{\"1\":{\"710\":1}}],[\"所以大多数人对于这种自己可能处于平均水平以下的情况\",{\"1\":{\"683\":1}}],[\"所以大家不要误解\",{\"1\":{\"412\":1}}],[\"所以也不需要垃圾回收\",{\"1\":{\"1112\":1}}],[\"所以也就没有好坏上下之分的\",{\"1\":{\"683\":1}}],[\"所以也会对你的问题答非所问\",{\"1\":{\"605\":1}}],[\"所以打住\",{\"1\":{\"673\":1}}],[\"所以换句话说\",{\"1\":{\"660\":1}}],[\"所以至少从时间作为生产资料的维度上\",{\"1\":{\"646\":1}}],[\"所以她们用职业课程取代了学术课程\",{\"1\":{\"620\":1}}],[\"所以金钱就有了生命力的属性\",{\"1\":{\"614\":1,\"615\":1}}],[\"所以金钱在使用层面只用现金是绝对不应该考虑的\",{\"1\":{\"596\":1}}],[\"所以通过文字来积累知识是一项不错的自我投资\",{\"1\":{\"605\":1}}],[\"所以分辨有用信息以及保护好自己的大脑\",{\"1\":{\"605\":1}}],[\"所以可能有时我会写一些编程文章\",{\"1\":{\"605\":1}}],[\"所以可以用它实现分布式锁\",{\"1\":{\"436\":1}}],[\"所以可以通过配置文件的save选项设置多个保存条件\",{\"1\":{\"417\":1}}],[\"所以网上目前有很多人写的prompt教程\",{\"1\":{\"605\":1}}],[\"所以记录在媒介中很重要\",{\"1\":{\"605\":1}}],[\"所以到今天2023\",{\"1\":{\"605\":1}}],[\"所以经过了一段时间的努力在这一方面有所积累\",{\"1\":{\"602\":1}}],[\"所以加个具体的时间会比较好\",{\"1\":{\"591\":1}}],[\"所以请思考一下你的图表\",{\"1\":{\"588\":1}}],[\"所以开始行动吧\",{\"1\":{\"587\":1}}],[\"所以抓住机会\",{\"1\":{\"587\":1}}],[\"所以让我们专注于第一个点\",{\"1\":{\"585\":1}}],[\"所以现在是时候进行一些驱逐了\",{\"1\":{\"575\":1}}],[\"所以一开始的入口是第二段\",{\"1\":{\"1135\":1}}],[\"所以一个典型职业生涯将占据我们20\",{\"1\":{\"571\":1}}],[\"所以一般来说\",{\"1\":{\"414\":1}}],[\"所以2022年的今天\",{\"1\":{\"534\":1}}],[\"所以只能将问题的背景传给ai\",{\"1\":{\"631\":1}}],[\"所以只能在起初买很多广告\",{\"1\":{\"10\":1}}],[\"所以只需要发展\",{\"1\":{\"528\":1}}],[\"所以以发展的眼光看待事物\",{\"1\":{\"528\":1}}],[\"所以若以未来的视角来看\",{\"1\":{\"528\":1}}],[\"所以若aof文件和rdb文件同时存在\",{\"1\":{\"416\":1}}],[\"所以未来的列车事实上也是加速度向我们驶来的\",{\"1\":{\"528\":1}}],[\"所以他们避免它们\",{\"1\":{\"627\":1}}],[\"所以他们说工作很无聊没有成就感\",{\"1\":{\"621\":1}}],[\"所以他们修改了移民法\",{\"1\":{\"620\":1}}],[\"所以他们的特点就是全面\",{\"1\":{\"525\":1}}],[\"所以他们也知道遇到的问题去如何解决\",{\"1\":{\"525\":1}}],[\"所以他认为没有必要为redis开发事务回滚功能\",{\"1\":{\"424\":1}}],[\"所以对于绝大多数问题都能够解决\",{\"1\":{\"525\":1}}],[\"所以三天前\",{\"1\":{\"521\":1}}],[\"所以仅仅记录所作的每类事情花费的时间就好\",{\"1\":{\"500\":1}}],[\"所以统计一下过去的一年里的数据可以近似地用之后的三个月的时间记录来显示\",{\"1\":{\"500\":1}}],[\"所以字符串也必须是mut\",{\"1\":{\"478\":1}}],[\"所以介绍一下对rust字符串的修改\",{\"1\":{\"476\":1}}],[\"所以编译器可以隐式的对变量解引用\",{\"1\":{\"1138\":1}}],[\"所以编译器可能会在别的地方使用常量时\",{\"1\":{\"456\":1}}],[\"所以编译无法通过\",{\"1\":{\"468\":1}}],[\"所以它与timeinnewyork表示相同的时间点\",{\"1\":{\"1208\":1}}],[\"所以它的\",{\"1\":{\"1188\":2}}],[\"所以它的结构也相对来说比较简单\",{\"1\":{\"1139\":1}}],[\"所以它的意思是每次写操作命令执行完后\",{\"1\":{\"413\":2}}],[\"所以它们的\",{\"1\":{\"1188\":1}}],[\"所以它们的经营过程就像是在水里扑腾\",{\"1\":{\"663\":1}}],[\"所以它们都不能通往知识\",{\"1\":{\"657\":1}}],[\"所以它需要一个可变借用\",{\"1\":{\"468\":1}}],[\"所以贴心的rust给我们提供了box\",{\"1\":{\"461\":1}}],[\"所以定义的静态变量都是不可变的引用\",{\"1\":{\"460\":1}}],[\"所以将所有的成功或失败信息向上传播\",{\"1\":{\"450\":1}}],[\"所以会有潜在的安全漏洞\",{\"1\":{\"447\":1}}],[\"所以会有一定的信用风险\",{\"1\":{\"184\":1}}],[\"所以多个应用服务就可以同时获取到锁\",{\"1\":{\"436\":1}}],[\"所以必须为\",{\"1\":{\"992\":1}}],[\"所以必须合并到一步\",{\"1\":{\"436\":1}}],[\"所以必然是一棵高度有限的树\",{\"1\":{\"206\":1}}],[\"所以恰好是一个共享存储系统\",{\"1\":{\"436\":1}}],[\"所以fail消息里面只需要保存下线节点的名字\",{\"1\":{\"435\":1}}],[\"所以严格来讲\",{\"1\":{\"435\":1}}],[\"所以严格来说\",{\"1\":{\"46\":1}}],[\"所以sentinel使用的是异步连接\",{\"1\":{\"426\":1}}],[\"所以sentinel还必须向主服务器创建命令连接\",{\"1\":{\"426\":1}}],[\"所以sentinel的初始化过程和普通redis服务器的初始化过程并不完全相同\",{\"1\":{\"426\":1}}],[\"所以初始化sentinel时就不会载入rdb文件或者aof文件\",{\"1\":{\"426\":1}}],[\"所以第一步其实是先初始化一个普通redis服务器\",{\"1\":{\"426\":1}}],[\"所以第一个分类标准就是资产种类\",{\"1\":{\"181\":1}}],[\"所以新aof文件的体积通常会比旧aof文件的体积要小得多\",{\"1\":{\"422\":1}}],[\"所以随着服务器运行时间的流逝\",{\"1\":{\"422\":1}}],[\"所以服务器会拒绝执行客户端提交的事务\",{\"1\":{\"424\":1}}],[\"所以服务器使用了一个没有网络连接的伪客户端来执行aof文件保存的写命令\",{\"1\":{\"422\":1}}],[\"所以服务器只需要读入并重新执行一遍aof文件里面保存的写命令就好了\",{\"1\":{\"422\":1}}],[\"所以服务器在每次循环结束时会调用flushappendonlyfile函数\",{\"1\":{\"422\":1}}],[\"所以过期键不会对载入\",{\"1\":{\"414\":1}}],[\"所以导致之前客户端写入的数据丢失了\",{\"1\":{\"413\":1}}],[\"所以执行快照是一个比较重的操作\",{\"1\":{\"413\":1}}],[\"所以用户在使用sentinel的时候并不需要提供各个sentinel的地址信息\",{\"1\":{\"426\":1}}],[\"所以用\",{\"1\":{\"413\":1}}],[\"所以redis事务的耐久性由redis所使用的持久化模式决定\",{\"1\":{\"424\":1}}],[\"所以redis有rdb持久化过程\",{\"1\":{\"416\":1}}],[\"所以redis采用渐进式rehash\",{\"1\":{\"396\":1}}],[\"所以redo\",{\"1\":{\"357\":1}}],[\"所以链表可以用于保存各种不同类型的值\",{\"1\":{\"394\":1}}],[\"所以如果想尽可能赢在未来\",{\"1\":{\"680\":1}}],[\"所以如果想获取字符串长度就直接返回len\",{\"1\":{\"393\":1,\"402\":1}}],[\"所以如果一个人一开始的判断就是借助ai之手完成的\",{\"1\":{\"631\":1}}],[\"所以如果他们说x是正确的\",{\"1\":{\"575\":1}}],[\"所以如果你也想快速熟悉起localsent\",{\"1\":{\"494\":1}}],[\"所以如果\",{\"1\":{\"450\":1}}],[\"所以如果有n个主节点进行投票\",{\"1\":{\"433\":1}}],[\"所以如果写入\",{\"1\":{\"413\":1}}],[\"所以如果非要追求强一致\",{\"1\":{\"387\":1}}],[\"所以如果不小心整个数据库的数据被删除了\",{\"1\":{\"358\":1}}],[\"所以实际使用中\",{\"1\":{\"386\":1}}],[\"所以实际上\",{\"1\":{\"804\":1}}],[\"所以实际上这也是在mixin\",{\"1\":{\"592\":1}}],[\"所以实际上在sign\",{\"1\":{\"200\":1}}],[\"所以实际上也可能出现正溢价\",{\"1\":{\"175\":1}}],[\"所以你在示例里看到mock的函数\",{\"1\":{\"960\":1}}],[\"所以你是不可以取到一个常量的地址的\",{\"1\":{\"959\":1}}],[\"所以你有两个选择\",{\"1\":{\"773\":1}}],[\"所以你要一定要时刻要提醒自己不要被自己输入的内容\",{\"1\":{\"689\":1}}],[\"所以你所出生环境的文化习俗\",{\"1\":{\"619\":1}}],[\"所以你看\",{\"1\":{\"386\":1,\"710\":1}}],[\"所以你需要去discard\",{\"1\":{\"192\":1}}],[\"所以写数据库\",{\"1\":{\"384\":1}}],[\"所以写入\",{\"1\":{\"357\":1,\"360\":1}}],[\"所以此策略只会使用很少的系统资源\",{\"1\":{\"414\":1}}],[\"所以此时我们需要考虑另外一种方案\",{\"1\":{\"383\":1}}],[\"所以此厂商可以控制和操纵市场价格\",{\"1\":{\"8\":1}}],[\"所以lru算法是最合适的\",{\"1\":{\"377\":1}}],[\"所以设计mysql的人为了尽快找到空闲的缓冲页面\",{\"1\":{\"377\":1}}],[\"所以innodb\",{\"1\":{\"369\":1}}],[\"所以该版本的记录对当前事务不可见\",{\"1\":{\"362\":2}}],[\"所以该版本的记录对当前事务可见\",{\"1\":{\"362\":2}}],[\"所以直接读取最新的数据就好了\",{\"1\":{\"362\":1}}],[\"所以就不需要在\",{\"1\":{\"448\":1}}],[\"所以就不用像中心化的稳定币那样去担心抵押的资产无法按照抵押比例取出来的\",{\"1\":{\"185\":1}}],[\"所以就发生幻读\",{\"1\":{\"362\":1}}],[\"所以就很好了避免幻读问题\",{\"1\":{\"361\":2,\"362\":2}}],[\"所以说\",{\"1\":{\"360\":1}}],[\"所以说查询缓存很鸡肋\",{\"1\":{\"355\":1}}],[\"所以频繁的\",{\"1\":{\"358\":1}}],[\"所以每当执行一个\",{\"1\":{\"358\":1}}],[\"所以每笔交易都需要给构建solana的去中心化节点费用\",{\"1\":{\"118\":1}}],[\"所以针对这种格式\",{\"1\":{\"358\":1}}],[\"所以为了提高网络\",{\"1\":{\"412\":1}}],[\"所以为了不避免回家等通知\",{\"1\":{\"276\":1}}],[\"所以为什么要有redo\",{\"1\":{\"357\":1}}],[\"所以决定要使用\",{\"1\":{\"355\":1}}],[\"所以索引是以空间换时间的设计思想\",{\"1\":{\"350\":1}}],[\"所以其长度为\",{\"1\":{\"320\":2}}],[\"所以其实和组合总和ii的去重逻辑差不多\",{\"1\":{\"219\":1}}],[\"所以遍历的起始位置也有讲究\",{\"1\":{\"276\":1}}],[\"所以遍历的时候一定是从上到下\",{\"1\":{\"264\":1}}],[\"所以c++代码如下\",{\"1\":{\"266\":1}}],[\"所以还是加上了\",{\"1\":{\"264\":1}}],[\"所以还需要定义一个used数组去重\",{\"1\":{\"218\":1}}],[\"所以最近思考了一个问题\",{\"1\":{\"792\":1}}],[\"所以最重要的其实是内容\",{\"1\":{\"660\":1}}],[\"所以最后的代码是这样的\",{\"1\":{\"260\":1,\"266\":1}}],[\"所以最大利润为\",{\"1\":{\"252\":1,\"253\":1}}],[\"所以代码是像这样的\",{\"1\":{\"267\":1}}],[\"所以代码是这样的\",{\"1\":{\"259\":1,\"263\":1,\"265\":1,\"276\":1}}],[\"所以代码应该是这样\",{\"1\":{\"264\":1}}],[\"所以代码应该是这样的\",{\"1\":{\"262\":1}}],[\"所以代码应该是下面这个样子\",{\"1\":{\"213\":1}}],[\"所以代码如下\",{\"1\":{\"257\":1,\"265\":1}}],[\"所以表达式是这样的if\",{\"1\":{\"257\":1}}],[\"所以dp\",{\"1\":{\"244\":1,\"252\":3,\"254\":1,\"257\":1,\"259\":1,\"260\":2,\"262\":1,\"263\":1,\"267\":1}}],[\"所以dp数组初始化的时候\",{\"1\":{\"236\":1}}],[\"所以本题是\",{\"1\":{\"242\":1}}],[\"所以本文想用大白话来总结一下solana开发需要的知识\",{\"1\":{\"108\":1}}],[\"所以要从小到大去遍历\",{\"1\":{\"241\":1}}],[\"所以要在\",{\"1\":{\"148\":1}}],[\"所以我在2024年初又买了一双同色同配置的nike\",{\"1\":{\"743\":1}}],[\"所以我去考公是比较安全的\",{\"1\":{\"717\":1}}],[\"所以我根本没有提现\",{\"1\":{\"706\":1}}],[\"所以我决定以后写文章而不是自己给自己写随笔或者笔记\",{\"1\":{\"660\":1}}],[\"所以我认为它也可能对其他人有所帮助\",{\"1\":{\"572\":1}}],[\"所以我的解决方案也与很多人不同\",{\"1\":{\"554\":1}}],[\"所以我为以上问题做了一个图示\",{\"1\":{\"510\":1}}],[\"所以我觉得最好的方式是下一次你需要跨设备传输文件时\",{\"1\":{\"494\":1}}],[\"所以我这里还是以纯完全背包问题进行讲解理论和原理\",{\"1\":{\"241\":1}}],[\"所以我们重点分析另外两个方法\",{\"1\":{\"1144\":1}}],[\"所以我们可以分离读写操作\",{\"1\":{\"1143\":1}}],[\"所以我们可以直接打开一个aof文件\",{\"1\":{\"421\":1}}],[\"所以我们会看到某个类型实现接口的两种方式\",{\"1\":{\"1138\":1}}],[\"所以我们这里将该函数的执行过程分成以下的三个部分\",{\"1\":{\"1137\":1}}],[\"所以我们只要找到该函数的调用方就能找到所有触发调度的时间点\",{\"1\":{\"1135\":1}}],[\"所以我们把cobra\",{\"1\":{\"989\":1}}],[\"所以我们似乎应该不止为人类否则\",{\"1\":{\"609\":1}}],[\"所以我们天真的以为空气可以点火是因为空气中有一个燃素的概念\",{\"1\":{\"605\":1}}],[\"所以我们不容易在传统职业上这样做\",{\"1\":{\"578\":1}}],[\"所以我们都像厨师一样推理\",{\"1\":{\"578\":1}}],[\"所以我们很简单调用一下函数\",{\"1\":{\"516\":1}}],[\"所以我们用变量blockchain来构建我们的类型block\",{\"1\":{\"513\":1}}],[\"所以我们最初就选择了艰苦的道路\",{\"1\":{\"451\":1}}],[\"所以我们需要去跟github上去下载\",{\"1\":{\"1079\":1}}],[\"所以我们需要另一个\",{\"1\":{\"450\":1}}],[\"所以我们需要在左侧+1\",{\"1\":{\"208\":1}}],[\"所以我们需要在项目根目录下创建\",{\"1\":{\"192\":1}}],[\"所以我们是看不见节点返回的moved错误的\",{\"1\":{\"429\":1}}],[\"所以我们要求x\",{\"1\":{\"239\":1}}],[\"所以我们后续使用t3\",{\"1\":{\"191\":1}}],[\"所以有一个对应的matcher来代表一个mock方法可以接受的参数范围\",{\"1\":{\"977\":1}}],[\"所以有时候直接从外部复制并不可行\",{\"1\":{\"887\":1}}],[\"所以有了\",{\"1\":{\"357\":1}}],[\"所以有dp\",{\"1\":{\"239\":1}}],[\"所以有很大的发展潜力\",{\"1\":{\"185\":1}}],[\"所以\",{\"1\":{\"239\":1,\"254\":1,\"283\":2,\"353\":1,\"357\":1,\"358\":1,\"360\":3,\"361\":1,\"362\":1,\"368\":1,\"373\":1,\"384\":2,\"385\":2,\"387\":1,\"393\":1,\"402\":1,\"412\":1,\"413\":2,\"414\":1,\"451\":1,\"474\":1,\"481\":1,\"533\":1,\"551\":1,\"573\":2,\"574\":1,\"576\":1,\"605\":1,\"674\":1,\"710\":1,\"731\":1,\"795\":1,\"944\":1,\"947\":1,\"1073\":1,\"1134\":1,\"1139\":1}}],[\"所以递归公式为\",{\"1\":{\"236\":1}}],[\"所以递归公式\",{\"1\":{\"235\":1}}],[\"所以递推公式可简化为\",{\"1\":{\"265\":1}}],[\"所以递推公式为\",{\"1\":{\"264\":1}}],[\"所以递推公式\",{\"1\":{\"231\":1,\"232\":1,\"242\":1}}],[\"所以被背包内的价值依然和前面相同\",{\"1\":{\"235\":1}}],[\"所以需要的话可以重新开一个patch去mock\",{\"1\":{\"962\":1}}],[\"所以需要lua脚本支持\",{\"1\":{\"436\":1}}],[\"所以需要考虑当dp\",{\"1\":{\"230\":1}}],[\"所以需要used数组去重\",{\"1\":{\"218\":1}}],[\"所以不要把它用到并发的单元测试中\",{\"1\":{\"978\":1}}],[\"所以不稳定\",{\"1\":{\"947\":1}}],[\"所以不如就像往常一样每天学习工作度过\",{\"1\":{\"695\":1}}],[\"所以不得不使用的原因还有一个就是\",{\"1\":{\"551\":1}}],[\"所以不用多说\",{\"1\":{\"525\":1}}],[\"所以不会阻塞当前命令的执行\",{\"1\":{\"413\":1}}],[\"所以不会导致缓冲区溢出的问题\",{\"1\":{\"393\":1,\"402\":1}}],[\"所以不难推出dp\",{\"1\":{\"228\":1}}],[\"所以不需要在递归函数中传used属性\",{\"1\":{\"217\":1}}],[\"所以不需要startindex去回溯\",{\"1\":{\"210\":1}}],[\"所以不能使用之前的去重逻辑\",{\"1\":{\"217\":1}}],[\"所以之后的回溯代码为\",{\"1\":{\"208\":1}}],[\"所以又时候可能会发生价格偏离\",{\"1\":{\"187\":1}}],[\"所以目前的算法稳定币模式还是没有走通\",{\"1\":{\"186\":1}}],[\"所以eusd是现在唯一的隐私稳定币\",{\"1\":{\"185\":1}}],[\"所以中心化稳定币是需要的\",{\"1\":{\"184\":1}}],[\"所以某些特殊情况下\",{\"1\":{\"184\":1}}],[\"所以这个简单的makefile展示了makefile的基本语法结构\",{\"1\":{\"1025\":1}}],[\"所以这个新元素的值要么就大于所有现有元素\",{\"1\":{\"398\":1}}],[\"所以这四台机器的排列组合值是4个\",{\"1\":{\"910\":1}}],[\"所以这些事情没必要使用去中心化技术来实现\",{\"1\":{\"592\":1}}],[\"所以这是一个零和妥协\",{\"1\":{\"577\":1}}],[\"所以这并不是一个具体的分析\",{\"1\":{\"574\":1}}],[\"所以这里就遇到了一个典型的前置引用\",{\"1\":{\"467\":1}}],[\"所以这里我们的剪枝代码就是n\",{\"1\":{\"208\":1}}],[\"所以这种设置是保存在server1对应的实例结构里面的\",{\"1\":{\"426\":1}}],[\"所以这两个命令在操作方面并没有什么冲突的地方\",{\"1\":{\"416\":1}}],[\"所以这会成为性能瓶颈\",{\"1\":{\"360\":1}}],[\"所以这次小林就带大家拆解一下\",{\"1\":{\"341\":1}}],[\"所以这样的定义也就意味着我们需要从1开始遍历\",{\"1\":{\"259\":1}}],[\"所以这也叫做美元稳定币\",{\"1\":{\"182\":1}}],[\"所以这就是大家感到疑惑的地方\",{\"1\":{\"175\":1}}],[\"所以许多稳定币都是可以直接兑换美元的\",{\"1\":{\"182\":1}}],[\"所以根据供求关系\",{\"1\":{\"176\":1}}],[\"所以当需要为超过32kb的内存申请时\",{\"1\":{\"1149\":1}}],[\"所以当周围人谈论热点时\",{\"1\":{\"734\":1}}],[\"所以当\",{\"1\":{\"413\":1}}],[\"所以当数据从磁盘中取出来后\",{\"1\":{\"376\":1}}],[\"所以当word1\",{\"1\":{\"265\":1}}],[\"所以当s\",{\"1\":{\"264\":1}}],[\"所以当这样的用户发现无法超过11\",{\"1\":{\"176\":1}}],[\"所以当用户归还pando\",{\"1\":{\"176\":1}}],[\"所以总的来说\",{\"1\":{\"175\":1}}],[\"所以去各个借贷协议上去玩了玩\",{\"1\":{\"157\":1}}],[\"所以无论网络中有多少矿工\",{\"1\":{\"94\":1}}],[\"所以并非所有的\",{\"1\":{\"55\":1}}],[\"所以首先需要做的是将满足我们要求的所有镜像标签都取消\",{\"1\":{\"55\":1}}],[\"所以更多的时候是用\",{\"1\":{\"55\":1}}],[\"所以在实现时使用了特殊的类型\",{\"1\":{\"1138\":1}}],[\"所以在go语言中实现复杂对象的创建\",{\"1\":{\"873\":1}}],[\"所以在我看来\",{\"1\":{\"695\":1}}],[\"所以在对待会反向影响自己认知的事情上一定要重\",{\"1\":{\"689\":1}}],[\"所以在说注意力有多强的时候\",{\"1\":{\"610\":1}}],[\"所以在坚决不背负债务的理念下\",{\"1\":{\"592\":1}}],[\"所以在选择职业时我们不要像她那样\",{\"1\":{\"585\":1}}],[\"所以在一个配置纪元里面\",{\"1\":{\"426\":1}}],[\"所以在执行了bgsave的情况下redis服务器还能够接受客户端的命令\",{\"1\":{\"416\":1}}],[\"所以在使用这两条语句的时候\",{\"1\":{\"370\":1}}],[\"所以在使用一段时间后\",{\"1\":{\"53\":1}}],[\"所以在遍历的时候顺便把dp\",{\"1\":{\"259\":1}}],[\"所以在这个时候存在套利机会\",{\"1\":{\"187\":1}}],[\"所以在完全竞争市场里\",{\"1\":{\"8\":1}}],[\"所以话题退款者需要向其他本话题的购买者补偿对应的损失\",{\"1\":{\"28\":1}}],[\"所以广告费的效益并不大\",{\"1\":{\"10\":1}}],[\"所以情况出乎我们的意料\",{\"1\":{\"10\":1}}],[\"最像关系数据库的\",{\"1\":{\"1217\":1}}],[\"最新的\",{\"1\":{\"1142\":1}}],[\"最内侧的延迟函数结构体\",{\"1\":{\"1132\":1}}],[\"最内侧的\",{\"1\":{\"1132\":1}}],[\"最主要的其实是gin的engine\",{\"1\":{\"1055\":1}}],[\"最起码不会变得比现在更差\",{\"1\":{\"734\":1}}],[\"最起码比90\",{\"1\":{\"605\":1}}],[\"最小可行产品\",{\"1\":{\"674\":1}}],[\"最小的事务\",{\"1\":{\"362\":1}}],[\"最小的k个数\",{\"0\":{\"313\":1}}],[\"最可靠的方式就是直接说明自己对某事采取怀疑态度\",{\"1\":{\"657\":1}}],[\"最受人尊重的头脑在某日视为真理的事\",{\"1\":{\"643\":1}}],[\"最重要的依然是时间\",{\"1\":{\"646\":1}}],[\"最重要的讨论模式\",{\"1\":{\"627\":1}}],[\"最重要的是让自己变得富有\",{\"1\":{\"748\":1}}],[\"最重要的是\",{\"1\":{\"583\":1}}],[\"最疏忽\",{\"1\":{\"627\":1}}],[\"最著名的是测试确定\",{\"1\":{\"620\":1}}],[\"最让我困扰的错误是因为别人掌控了我的思维\",{\"1\":{\"588\":1}}],[\"最不能接受就是让他失望\",{\"1\":{\"573\":1}}],[\"最好一开始在投入一些早期成本就迅速盈利\",{\"1\":{\"663\":1}}],[\"最好的做法是过好自己的生活\",{\"1\":{\"795\":1}}],[\"最好的方式就是听他们对热点的看法\",{\"1\":{\"734\":1}}],[\"最好的方式就是让它在自己的领域内消失\",{\"1\":{\"533\":1}}],[\"最好的办法是使用\",{\"1\":{\"485\":1}}],[\"最好是在一个web浏览器中\",{\"1\":{\"515\":1}}],[\"最好就是让预读的页停留在\",{\"1\":{\"377\":1}}],[\"最先向目标sentinel发送设置要求的源sentinel将成为目标sentinel的局部领头sentinel\",{\"1\":{\"426\":1}}],[\"最坏o\",{\"1\":{\"397\":1}}],[\"最常见的场景\",{\"1\":{\"1047\":1}}],[\"最常见的方案是\",{\"1\":{\"387\":1}}],[\"最常使用的\",{\"1\":{\"48\":1}}],[\"最有效的办法就是\",{\"1\":{\"386\":1}}],[\"最为合适\",{\"1\":{\"385\":1}}],[\"最为关键就是正确理解dp\",{\"1\":{\"266\":1}}],[\"最简单直接的方案是数据直接放到到缓存\",{\"1\":{\"381\":1}}],[\"最简单的方式是写一堆if\",{\"1\":{\"1010\":1}}],[\"最简单的方式就是在创建类的时候附加一个clone的方法\",{\"1\":{\"887\":1}}],[\"最简单的方式就是通过在线的remix学习\",{\"1\":{\"105\":1}}],[\"最简单的就是造谣\",{\"1\":{\"611\":1}}],[\"最简单的解决办法是什么\",{\"1\":{\"385\":1}}],[\"最简单的动态规划题了\",{\"1\":{\"281\":1}}],[\"最开始\",{\"1\":{\"358\":1}}],[\"最右一位是否为\",{\"1\":{\"287\":1}}],[\"最右一位\",{\"1\":{\"287\":2}}],[\"最少操作次数为dp\",{\"1\":{\"265\":2}}],[\"最长路径的长度为树的深度\",{\"1\":{\"328\":1}}],[\"最长不含重复字符的子字符串\",{\"0\":{\"320\":1}}],[\"最长回文子串\",{\"1\":{\"268\":1}}],[\"最长回文子序列\",{\"0\":{\"268\":1}}],[\"最长公共子序列是\",{\"1\":{\"260\":1}}],[\"最长公共子序列\",{\"0\":{\"260\":1}}],[\"最长重复子数组的长度为dp\",{\"1\":{\"259\":1}}],[\"最长重复子数组\",{\"0\":{\"259\":1},\"1\":{\"260\":1}}],[\"最长连续递增序列是\",{\"1\":{\"258\":1}}],[\"最长连续递增序列\",{\"0\":{\"258\":1}}],[\"最长上升子序列是动规的经典题目\",{\"1\":{\"257\":1}}],[\"最长递增子序列是\",{\"1\":{\"257\":1}}],[\"最长递增子序列\",{\"0\":{\"257\":1}}],[\"最佳策略是选择合作伙伴的时候选择的对象拥有你没有的不公平优势\",{\"1\":{\"673\":1}}],[\"最佳买卖股票时机含冷冻期\",{\"0\":{\"256\":1}}],[\"最佳实践的要求\",{\"1\":{\"47\":1}}],[\"最多拿走\",{\"1\":{\"1135\":1}}],[\"最多只有gomaxprocs个活跃的线程能正常运行\",{\"1\":{\"1133\":1}}],[\"最多\",{\"1\":{\"585\":1}}],[\"最多可以偷窃的金额为dp\",{\"1\":{\"248\":2}}],[\"最多有i个0和j个1的strs的最大子集的大小为dp\",{\"1\":{\"240\":1}}],[\"最多能装多少\",{\"1\":{\"239\":1}}],[\"最大有4m\",{\"1\":{\"1149\":1}}],[\"最大车龄等等\",{\"1\":{\"683\":1}}],[\"最大的原因是这俩玩意太消耗磁盘容量\",{\"1\":{\"494\":1}}],[\"最大id\",{\"1\":{\"456\":1}}],[\"最大化\",{\"1\":{\"382\":1}}],[\"最大值\",{\"1\":{\"336\":1}}],[\"最大子数组和\",{\"0\":{\"262\":1}}],[\"最大利润\",{\"1\":{\"252\":1}}],[\"最大利率\",{\"1\":{\"152\":1}}],[\"最大可以凑成j的子集总和为dp\",{\"1\":{\"237\":1}}],[\"最后就是\",{\"1\":{\"1135\":1}}],[\"最后就要看一个特殊位置了\",{\"1\":{\"264\":1}}],[\"最后通过\",{\"1\":{\"1135\":1}}],[\"最后通过r\",{\"1\":{\"1050\":1}}],[\"最后从其他\",{\"1\":{\"1135\":1}}],[\"最后分别在两个目录下执行go\",{\"1\":{\"1067\":1}}],[\"最后释放资源engine\",{\"1\":{\"1055\":1}}],[\"最后其实是到了engine\",{\"1\":{\"1052\":1}}],[\"最后三部分合起来就组成了jwt\",{\"1\":{\"1047\":1}}],[\"最后补充一个程序设计的solid原则\",{\"1\":{\"982\":1}}],[\"最后要接受贫富差距是社会发展的必然结果\",{\"1\":{\"748\":1}}],[\"最后但并非最不重要的一点是\",{\"1\":{\"725\":1}}],[\"最后对这篇文章做一个总结\",{\"1\":{\"649\":1}}],[\"最后总结一下我为什么决定开始长期写作\",{\"1\":{\"605\":1}}],[\"最后总有一些用户留在这个系统中\",{\"1\":{\"169\":1}}],[\"最后我们调用build就可以完成\",{\"1\":{\"958\":1}}],[\"最后我们的区块链就构建完成了\",{\"1\":{\"517\":1}}],[\"最后我期望从区块链中获得能证明我自己的文字的确存在\",{\"1\":{\"605\":1}}],[\"最后运行web服务\",{\"1\":{\"517\":1}}],[\"最后运行服务\",{\"1\":{\"516\":1}}],[\"最后是我们的main函数\",{\"1\":{\"517\":1}}],[\"最后在web浏览器中可以打开来查看自己区块链\",{\"1\":{\"509\":1}}],[\"最后两行是panic调用的错误信息\",{\"1\":{\"447\":1}}],[\"最后节点会调用复制代码\",{\"1\":{\"433\":1}}],[\"最后\",{\"0\":{\"711\":1},\"1\":{\"426\":1,\"427\":1,\"428\":1,\"515\":1,\"569\":1,\"572\":1,\"573\":1,\"577\":1,\"627\":1,\"649\":1,\"821\":1,\"828\":1,\"1088\":1,\"1132\":1,\"1161\":1,\"1163\":1,\"1194\":1}}],[\"最后一部分就是signature\",{\"1\":{\"1047\":1}}],[\"最后一个人得到的信息往往与最开始的信息有巨大的改变\",{\"1\":{\"654\":1}}],[\"最后一点\",{\"1\":{\"605\":1}}],[\"最后一次执行时间处理器的时间\",{\"1\":{\"426\":1}}],[\"最后一块石头的重量\",{\"0\":{\"238\":1}}],[\"最后将执行命令所得的结果全部返回给客户端\",{\"1\":{\"424\":1}}],[\"最后bgrewriteaof和bgsave两个命令不能同时执行\",{\"1\":{\"416\":1}}],[\"最后由后台线程将脏页写入到磁盘\",{\"1\":{\"376\":1}}],[\"最后全转\",{\"1\":{\"335\":1}}],[\"最后还会给出一些收益不错\",{\"1\":{\"156\":1}}],[\"最终都会调用\",{\"1\":{\"1135\":1}}],[\"最终原因是趋势不站在你的一方\",{\"1\":{\"718\":1}}],[\"最终我能想象到的可能是\",{\"1\":{\"648\":1}}],[\"最终我们可能去星空旅行\",{\"1\":{\"648\":1}}],[\"最终决定\",{\"1\":{\"575\":1}}],[\"最终你会发现\",{\"1\":{\"500\":1}}],[\"最终得到\",{\"1\":{\"481\":1}}],[\"最终集群中的所有节点都会知槽slot已经指派给了目标节点\",{\"1\":{\"431\":1}}],[\"最终监视同一主服务器的多个sentinel将形成相\",{\"1\":{\"426\":1}}],[\"最终在某个时间点上\",{\"1\":{\"396\":1}}],[\"最终这条数据结果是不符合预期的\",{\"1\":{\"383\":1}}],[\"最终\",{\"1\":{\"383\":1,\"384\":2,\"386\":2,\"427\":1}}],[\"最终结果就是dp\",{\"1\":{\"235\":1}}],[\"最终结果是\",{\"1\":{\"150\":1}}],[\"最终可以到\",{\"1\":{\"166\":1}}],[\"最终的操作数是一样\",{\"1\":{\"266\":1}}],[\"最终的dp公式是dp\",{\"1\":{\"227\":1}}],[\"最终的\",{\"1\":{\"166\":1}}],[\"最差情况下的坏账处理\",{\"1\":{\"152\":1}}],[\"最优利用率\",{\"1\":{\"152\":1}}],[\"最成熟的借贷协议\",{\"1\":{\"143\":1}}],[\"最初是50\",{\"1\":{\"118\":1}}],[\"最近在公司做监控方面的工作\",{\"1\":{\"1030\":1}}],[\"最近在刷\",{\"1\":{\"754\":1}}],[\"最近cobra的api发生了变化\",{\"1\":{\"989\":1}}],[\"最近从新闻上看到\",{\"1\":{\"795\":1}}],[\"最近实习结束准备离开上海了\",{\"1\":{\"779\":1}}],[\"最近和年长的几位朋友闲聊\",{\"1\":{\"764\":1}}],[\"最近几年\",{\"1\":{\"689\":1}}],[\"最近半个星期重新用vite的vuepress做了个博客\",{\"1\":{\"660\":1}}],[\"最近半年ai可谓风头正盛\",{\"1\":{\"605\":1}}],[\"最近打算将betxin重做一遍\",{\"1\":{\"602\":1}}],[\"最近两天\",{\"1\":{\"591\":1}}],[\"最近也流行gin框架做web服务\",{\"1\":{\"509\":1}}],[\"最近编辑距离为dp\",{\"1\":{\"266\":3}}],[\"最近对借贷协议非常感兴趣\",{\"1\":{\"157\":1}}],[\"最近区块哈希\",{\"1\":{\"116\":1,\"117\":1}}],[\"最近出了个python的解释器有待观望\",{\"1\":{\"109\":1}}],[\"最近沉迷solana生态\",{\"1\":{\"108\":1}}],[\"最近听说了okr的工作方式在提升工作效率方面有很大的提升\",{\"1\":{\"4\":1}}],[\"前提是你得有proto目录\",{\"1\":{\"1084\":1}}],[\"前提是知识储备足够\",{\"1\":{\"698\":1}}],[\"前端领域比较火的nextjs等等\",{\"1\":{\"731\":1}}],[\"前进的道路会遇到各种陷阱\",{\"1\":{\"674\":1}}],[\"前进指针\",{\"1\":{\"397\":1}}],[\"前往其他太阳系的行星\",{\"1\":{\"648\":1}}],[\"前天和今天的天气差不多\",{\"1\":{\"609\":1}}],[\"前两年俄罗斯通过了一些法律条规\",{\"1\":{\"533\":1}}],[\"前两个和replace一样\",{\"1\":{\"479\":1}}],[\"前段时间甚至有警察说如果你没有干违法的事情\",{\"1\":{\"533\":1}}],[\"前段时间的负溢价是如何消除的\",{\"0\":{\"176\":1}}],[\"前文提到了几种使用\",{\"1\":{\"484\":1}}],[\"前文提到过\",{\"1\":{\"475\":1}}],[\"前⼀个节点\",{\"1\":{\"399\":1}}],[\"前\",{\"1\":{\"395\":1}}],[\"前面我们分析到\",{\"1\":{\"385\":1}}],[\"前面也提到\",{\"1\":{\"370\":1}}],[\"前面讲过镜像使用的是分层存储\",{\"1\":{\"47\":1}}],[\"前后两次查询的记录条目就不一样了\",{\"1\":{\"362\":1}}],[\"前后两次读的数据可能会出现不一致\",{\"1\":{\"362\":1}}],[\"前后两次读取的数据可能不一致可能会发生不可重复读\",{\"1\":{\"356\":1}}],[\"前已经提交的事务生成的\",{\"1\":{\"362\":1}}],[\"前的条件列是索引列\",{\"1\":{\"353\":1}}],[\"前缀索引有一定的局限性\",{\"1\":{\"353\":1}}],[\"前缀索引顾名思义就是使用某个字段中字符串的前几个字符建立索引\",{\"1\":{\"353\":1}}],[\"前缀索引优化\",{\"1\":{\"353\":2}}],[\"前序遍历\",{\"1\":{\"279\":1}}],[\"前者稳定但难以使用\",{\"1\":{\"721\":1}}],[\"前者也可以是非常有用的\",{\"1\":{\"627\":1}}],[\"前者是生成\",{\"1\":{\"1078\":1}}],[\"前者是主厨所做的\",{\"1\":{\"575\":1}}],[\"前者是不可能转变为后者的\",{\"1\":{\"534\":1}}],[\"前者用于单线程\",{\"1\":{\"463\":1}}],[\"前者相对容易实现一些\",{\"1\":{\"75\":1}}],[\"前者往往意味着\",{\"1\":{\"48\":1}}],[\"前一层是后一层的基础\",{\"1\":{\"46\":1}}],[\"很方便在字段验证时使用\",{\"1\":{\"1245\":1}}],[\"很有可能成为明天的技术文盲老年人\",{\"1\":{\"772\":1}}],[\"很有可能是先查询数据库\",{\"1\":{\"383\":1}}],[\"很长时间以来我认为是这个世界都\",{\"1\":{\"758\":1}}],[\"很容易就会引发大的问题\",{\"1\":{\"927\":1}}],[\"很容易导致我们对这个世界的理解有所偏差\",{\"1\":{\"673\":2}}],[\"很容易劝退读者\",{\"1\":{\"660\":1}}],[\"很适合一开始就读\",{\"1\":{\"669\":1}}],[\"很大程度都是自己选择的\",{\"1\":{\"760\":1}}],[\"很大程度上都是被\",{\"1\":{\"642\":1}}],[\"很大程度上\",{\"1\":{\"642\":1}}],[\"很大比例的人都完全无法掌控自己的注意力\",{\"1\":{\"758\":1}}],[\"很大成分上是因为\",{\"1\":{\"436\":1}}],[\"很少见\",{\"1\":{\"1169\":1}}],[\"很少有人提到知识作为一种资产的论调\",{\"1\":{\"647\":1,\"686\":1}}],[\"很少正确\",{\"1\":{\"627\":1}}],[\"很少或根本没有考虑到它们的相关含义\",{\"1\":{\"620\":1}}],[\"很了解ai的短板\",{\"1\":{\"605\":1}}],[\"很不幸我也是其中受损失的\",{\"1\":{\"591\":1}}],[\"很难相信我们两个人点了四盘硬菜才吃了80\",{\"1\":{\"779\":1}}],[\"很难轻易赶上\",{\"1\":{\"771\":1}}],[\"很难得到上述因素的确切值\",{\"1\":{\"584\":1}}],[\"很难看清楚你的章鱼\",{\"1\":{\"574\":1}}],[\"很可能有几十种很棒的职业道路与你的天赋优势完美契合\",{\"1\":{\"579\":1}}],[\"很可能有信息缺失\",{\"1\":{\"512\":1}}],[\"很快\",{\"1\":{\"574\":1}}],[\"很幸运\",{\"1\":{\"573\":1}}],[\"很明显微信的后台是可以监视每个人的聊天数据\",{\"1\":{\"551\":1}}],[\"很明显dp\",{\"1\":{\"262\":1,\"265\":1}}],[\"很显然这不是一个成熟的人应该做的事情\",{\"1\":{\"592\":1}}],[\"很显然如果在这件事情上与大众认为是正确的想法相反\",{\"1\":{\"528\":1}}],[\"很显然时代是发展的\",{\"1\":{\"528\":1}}],[\"很显然没什么不同\",{\"1\":{\"528\":1}}],[\"很低\",{\"1\":{\"384\":1}}],[\"很高的现象\",{\"1\":{\"360\":1}}],[\"很高\",{\"1\":{\"360\":1}}],[\"很多优秀的开源应用都在使用它\",{\"1\":{\"994\":1}}],[\"很多应聘者在面试时经常说我虽然不会\",{\"1\":{\"792\":1}}],[\"很多好玩的东西就是这么搞出来的\",{\"1\":{\"698\":1}}],[\"很多内心冲突都来自于人们的垃圾桶\",{\"1\":{\"577\":1}}],[\"很多体制内的人都得看关于爱国爱党的青年学习\",{\"1\":{\"552\":1}}],[\"很多研发工程师选择使用\",{\"1\":{\"436\":1}}],[\"很多时候\",{\"1\":{\"386\":1,\"532\":1}}],[\"很多时候用户都是随时删除和新创建容器\",{\"1\":{\"63\":1}}],[\"很多缓冲页其实只会被访问一次\",{\"1\":{\"377\":1}}],[\"很多人玩游戏过后甚至更累了\",{\"1\":{\"787\":1}}],[\"很多人认为休息就是让身体休息\",{\"1\":{\"787\":1}}],[\"很多人认识区块链是因为比特币\",{\"1\":{\"509\":1}}],[\"很多人研究学习的问题都不是生产性的\",{\"1\":{\"776\":1}}],[\"很多人都在做去中心化社交\",{\"1\":{\"800\":1}}],[\"很多人都在讨论认知变现\",{\"1\":{\"689\":1}}],[\"很多人都认为是是短视频中影响自己让自己变得无法集中注意力的\",{\"1\":{\"689\":1}}],[\"很多人对上述提到的不屑一顾\",{\"1\":{\"648\":1}}],[\"很多人对加密货币感兴趣\",{\"1\":{\"180\":1}}],[\"很多人不法分子甚至用来犯罪了\",{\"1\":{\"605\":1}}],[\"很多人觉得拿出所有钱来赔付理所应当\",{\"1\":{\"592\":1}}],[\"很多人依然不是很了解细节\",{\"1\":{\"591\":1}}],[\"很多人没有意识到\",{\"1\":{\"551\":1}}],[\"很多人想要去了解一个包就先去别人的博客\",{\"1\":{\"512\":1}}],[\"很多人初学\",{\"1\":{\"47\":1,\"58\":1}}],[\"很简单的代码\",{\"1\":{\"514\":1}}],[\"很简单\",{\"1\":{\"56\":1,\"511\":1,\"1050\":1,\"1143\":1}}],[\"很杂\",{\"1\":{\"8\":1}}],[\"使字符串可以直接在源代码中使用\",{\"1\":{\"1200\":1}}],[\"使客户端和子系统松耦合\",{\"1\":{\"928\":1}}],[\"使子系统更易于使用\",{\"1\":{\"926\":1}}],[\"使原本接口不兼容的类可以一起工作\",{\"1\":{\"906\":1}}],[\"使我们可以基于已有对象复制一个又一个新对象\",{\"1\":{\"887\":1}}],[\"使我的编程学习成本够低\",{\"1\":{\"759\":1}}],[\"使它们可以各自独立地改变和复用时\",{\"1\":{\"843\":1}}],[\"使它们能够自动更新自己\",{\"1\":{\"842\":1}}],[\"使命本身需要一个战略性的跳跃点\",{\"1\":{\"588\":1}}],[\"使\",{\"1\":{\"358\":1,\"426\":1,\"724\":1}}],[\"使其支持模块化的数据源配置\",{\"1\":{\"980\":1}}],[\"使其与word2\",{\"1\":{\"266\":1}}],[\"使其在网络上可以被视作一个独立的节点而非\",{\"1\":{\"76\":1}}],[\"使借款人和存款人之间的支付对称化\",{\"1\":{\"152\":1}}],[\"使dao能够通过出借闲置资金赚取利息\",{\"1\":{\"151\":1}}],[\"使开发者和用户能够验证链上程序是否准确反映了他们公开共享的源代码\",{\"1\":{\"128\":1}}],[\"使整个网络的交易状态达成共识\",{\"1\":{\"95\":1}}],[\"使用docker启动mongodb\",{\"1\":{\"1216\":1}}],[\"使用反射获取变量的指针值\",{\"1\":{\"1190\":1}}],[\"使用其他方法获取原始值\",{\"1\":{\"1189\":1}}],[\"使用类型断言将原始值转换为具体类型\",{\"1\":{\"1189\":1}}],[\"使用setflags函数即可\",{\"1\":{\"1179\":1}}],[\"使用sentinel专用代码\",{\"1\":{\"426\":1}}],[\"使用tiny对象减少了12\",{\"1\":{\"1150\":1}}],[\"使用t3\",{\"1\":{\"191\":1}}],[\"使用结构体初始化变量无法通过编译\",{\"1\":{\"1138\":1}}],[\"使用runtime\",{\"1\":{\"1138\":1}}],[\"使用简单的json\",{\"1\":{\"1079\":1}}],[\"使用http2作为传输协议\",{\"1\":{\"1066\":1}}],[\"使用hmac算法\",{\"1\":{\"1047\":1}}],[\"使用公钥\",{\"1\":{\"1047\":1}}],[\"使用限流器是非常有必要的\",{\"1\":{\"1033\":1}}],[\"使用不当可能还会导致panic\",{\"1\":{\"1017\":1}}],[\"使用codes时\",{\"1\":{\"1074\":1}}],[\"使用conn的serve函数进行处理\",{\"1\":{\"1055\":1}}],[\"使用cobra\",{\"1\":{\"989\":1}}],[\"使用cluster\",{\"1\":{\"429\":1}}],[\"使用依赖注入的方式能够让我们的代码看起来更清晰\",{\"1\":{\"981\":1}}],[\"使用传入的依赖项完成初始化\",{\"1\":{\"981\":1}}],[\"使用这个库可以很方便的根据uid获取用户相关信息\",{\"1\":{\"978\":1}}],[\"使用这种方案的优点在于\",{\"1\":{\"385\":1}}],[\"使用参数匹配\",{\"1\":{\"977\":1}}],[\"使用方法\",{\"1\":{\"977\":1}}],[\"使用方式和上面一样\",{\"1\":{\"199\":1}}],[\"使用方式\",{\"1\":{\"191\":1}}],[\"使用示例\",{\"1\":{\"975\":1,\"978\":1}}],[\"使用它可以很方便的在编写单元测试的时候mock\",{\"1\":{\"975\":1}}],[\"使用gock对外部api进行mock\",{\"1\":{\"973\":1}}],[\"使用monkey打桩\",{\"0\":{\"978\":1}}],[\"使用monkey\",{\"1\":{\"961\":1}}],[\"使用数组来存储heap\",{\"1\":{\"950\":1}}],[\"使用数据卷后\",{\"1\":{\"47\":1}}],[\"使用原型模式实现对象的构造通常比直接调用构造函数更快一些\",{\"1\":{\"889\":1}}],[\"使用工厂模式有几个主要好处\",{\"1\":{\"881\":1}}],[\"使用工厂模式的一些优点是降低耦合度\",{\"1\":{\"876\":1,\"884\":1}}],[\"使用迭代器对象进行遍历\",{\"1\":{\"827\":1}}],[\"使用单独的进程组织本地软件系统\",{\"1\":{\"723\":1}}],[\"使用的就是这个包名\",{\"1\":{\"1084\":1}}],[\"使用的域可以匹配任何值\",{\"1\":{\"1002\":1}}],[\"使用的交易所甚至不允许取款\",{\"1\":{\"706\":1}}],[\"使用的过期删除策略是\",{\"1\":{\"414\":1}}],[\"使用标准库你是做不到的\",{\"1\":{\"487\":1}}],[\"使用索引的方式访问字符串的某个字符或者子串是很正常的行为\",{\"1\":{\"473\":1}}],[\"使用当前时间\",{\"1\":{\"456\":1}}],[\"使用protobuf编程的方式\",{\"1\":{\"1084\":1}}],[\"使用protobuf的时候\",{\"1\":{\"1079\":1}}],[\"使用panic\",{\"1\":{\"446\":1}}],[\"使用psync命令代替sync命令来执行复制时的同步操作\",{\"1\":{\"425\":1}}],[\"使用各种不同的标识值记录节点的角色\",{\"1\":{\"427\":1}}],[\"使用命令连接相连的各个sentinel可以通过向其他sentinel发送命令请求来进行信息交换\",{\"1\":{\"426\":1}}],[\"使用aof文件来进行数据还原所需的时间就越多\",{\"1\":{\"422\":1}}],[\"使用伪客户端执行被读出的写命令\",{\"1\":{\"422\":1}}],[\"使用全大写单词标示常量\",{\"1\":{\"418\":1}}],[\"使用全局锁会影响业务\",{\"1\":{\"364\":1}}],[\"使用哈希表作为\",{\"1\":{\"408\":1}}],[\"使用了单线程后\",{\"1\":{\"412\":1}}],[\"使用了\",{\"1\":{\"360\":1}}],[\"使用覆盖索引的好处就是\",{\"1\":{\"353\":1}}],[\"使用前缀索引可以帮助我们减小索引项的大小\",{\"1\":{\"353\":1}}],[\"使用前缀索引是为了减小索引字段大小\",{\"1\":{\"353\":1}}],[\"使用最小花费爬楼梯\",{\"0\":{\"228\":1}}],[\"使用一个适配器作为中间件\",{\"1\":{\"906\":1}}],[\"使用一个默认的用户名或者从文件之外的地方寻找用户名\",{\"1\":{\"450\":1}}],[\"使用一个dp数组就可以解决\",{\"1\":{\"226\":1}}],[\"使用一个设备运营比特币完整协议栈的用户\",{\"1\":{\"94\":1}}],[\"使用动态规划是最有效的\",{\"1\":{\"224\":1}}],[\"使用openssl\",{\"1\":{\"192\":1}}],[\"使用借贷策略优化用户投资组合\",{\"1\":{\"151\":1}}],[\"使用地址查找表的话\",{\"1\":{\"139\":1}}],[\"使用系统变量\",{\"1\":{\"121\":1}}],[\"使用脚本的时候可能会用长\",{\"1\":{\"55\":1}}],[\"使用\",{\"0\":{\"56\":1,\"482\":1,\"999\":1,\"1001\":1,\"1019\":1},\"1\":{\"51\":1,\"55\":2,\"57\":1,\"61\":1,\"66\":1,\"74\":2,\"121\":1,\"358\":1,\"360\":1,\"377\":1,\"393\":1,\"402\":1,\"447\":1,\"468\":1,\"481\":2,\"483\":1,\"723\":1,\"1067\":1,\"1071\":1,\"1088\":2,\"1138\":1,\"1139\":2,\"1153\":1,\"1156\":2,\"1163\":1,\"1189\":1,\"1213\":6}}],[\"使用镜像\",{\"0\":{\"49\":1}}],[\"使用起来很简单\",{\"1\":{\"920\":1}}],[\"使用起来也更方便\",{\"1\":{\"528\":1}}],[\"使用起来\",{\"1\":{\"47\":1}}],[\"使得我们可以方便地进行数据格式转换和处理\",{\"1\":{\"1201\":1}}],[\"使得我们可以灵活地通过命令行来控制程序的行为\",{\"1\":{\"1161\":1}}],[\"使得我们能够在运行时动态地获取类型信息\",{\"1\":{\"1186\":1}}],[\"使得我们能够生产出各种形式的信息资料\",{\"1\":{\"677\":1}}],[\"使得开发命令行工具和应用程序更加简单和灵活\",{\"1\":{\"1160\":1}}],[\"使得上层应用与底层实现之间互不依赖\",{\"1\":{\"1057\":1}}],[\"使得接口使用起来更容易\",{\"1\":{\"926\":1}}],[\"使得两者可以独立变化\",{\"1\":{\"909\":1}}],[\"使得两个子集的元素和相等\",{\"1\":{\"237\":1}}],[\"使得系统中的其他对象可以访问该对象\",{\"1\":{\"896\":1}}],[\"使得同样的构建过程可以创建不同的表示\",{\"1\":{\"871\":1}}],[\"使得对象可以在运行时切换不同的状态\",{\"1\":{\"848\":1}}],[\"使得商品能够被大规模生产和加工\",{\"1\":{\"646\":1}}],[\"使得你地图上的一个问号似乎成了一个存在主义灾难\",{\"1\":{\"585\":1}}],[\"使得灵活性和谦逊\",{\"1\":{\"583\":1}}],[\"使得一些内容被追加到aof\",{\"1\":{\"422\":1}}],[\"使得之后读入的键值对可以载入到正确的数据库中\",{\"1\":{\"419\":1}}],[\"使得它们的和正好是s\",{\"1\":{\"332\":1}}],[\"使得它们的和等于\",{\"1\":{\"245\":1}}],[\"使得所有奇数在数组的前半部分\",{\"1\":{\"293\":1}}],[\"使得\",{\"1\":{\"45\":1,\"413\":2}}],[\"甚至比如我可以通过构建一个结构体\",{\"1\":{\"1193\":1}}],[\"甚至通过类型的实例来获得类型的方法\",{\"1\":{\"1192\":1}}],[\"甚至我们还可以自己来关闭mock代理\",{\"1\":{\"960\":1}}],[\"甚至公民开车到体育场撞死了很多人\",{\"1\":{\"795\":1}}],[\"甚至屯币的动作就可以被认定是中本聪了\",{\"1\":{\"767\":1}}],[\"甚至可能会更新一些我们根本不想更新的字段\",{\"1\":{\"1088\":1}}],[\"甚至可能做得不好呢\",{\"1\":{\"767\":1}}],[\"甚至可以和ai一起创作艺术作品\",{\"1\":{\"764\":1}}],[\"甚至可以让我们产生积累\",{\"1\":{\"677\":1}}],[\"甚至可以一点代码都不用改\",{\"1\":{\"238\":1}}],[\"甚至可以用之前构建好的镜像作为基础层\",{\"1\":{\"46\":1}}],[\"甚至可以这么说当时的iphone引领了移动互联网的浪潮\",{\"1\":{\"9\":1}}],[\"甚至你知道了明白了\",{\"1\":{\"767\":1}}],[\"甚至很多时候也包括我自己\",{\"1\":{\"759\":1}}],[\"甚至很可能会超过引入缓存带来的性能提升\",{\"1\":{\"387\":1}}],[\"甚至包括收购你的竞争对手\",{\"1\":{\"714\":1}}],[\"甚至还会帮助我们理解和吸收和运用更多有价值的信息\",{\"1\":{\"677\":1}}],[\"甚至知识领域也不例外\",{\"1\":{\"654\":1}}],[\"甚至当告诉我们的只是些传闻和谣言的时候也是如此\",{\"1\":{\"654\":1}}],[\"甚至当我们看向我们自己也往往是同样的想法\",{\"1\":{\"528\":1}}],[\"甚至被机构开除\",{\"1\":{\"628\":1}}],[\"甚至让一个人记住一些从未发生的事\",{\"1\":{\"622\":1}}],[\"甚至不局限于人类\",{\"1\":{\"609\":1}}],[\"甚至不觉得这是个问题\",{\"1\":{\"533\":1}}],[\"甚至是生命危险\",{\"1\":{\"784\":1}}],[\"甚至是自学都可以积累不公平优势\",{\"1\":{\"674\":1}}],[\"甚至是指数函数的那个j型图的勾勾尾\",{\"1\":{\"605\":1}}],[\"甚至是直接反对的\",{\"1\":{\"577\":1}}],[\"甚至是存在危机\",{\"1\":{\"575\":1}}],[\"甚至连妈妈和爸爸也一样\",{\"1\":{\"575\":1}}],[\"甚至表示蔑视\",{\"1\":{\"573\":1}}],[\"甚至一个需求内也有矛盾\",{\"1\":{\"573\":1}}],[\"甚至人类基本权利的保障\",{\"1\":{\"551\":1}}],[\"甚至有卷土重来的迹象\",{\"1\":{\"534\":1}}],[\"甚至没有法律去监管黑客\",{\"1\":{\"532\":1}}],[\"甚至视频电话也是很普通寻常的事情在当时竟然是个案件\",{\"1\":{\"528\":1}}],[\"甚至notion的应用这些工具完整地学习长期来看更节省时间\",{\"1\":{\"525\":1}}],[\"甚至底层的垃圾回收算法\",{\"1\":{\"525\":1}}],[\"甚至整个宿主计算机造成影响\",{\"1\":{\"422\":1}}],[\"甚至加锁解锁\",{\"1\":{\"412\":1}}],[\"甚至需要从一个页面复制数据到另外一个页面\",{\"1\":{\"353\":1}}],[\"甚至代码都一样\",{\"1\":{\"261\":1}}],[\"甚至自己的用户\",{\"1\":{\"47\":1}}],[\"暂时没有详细说明任何技术问题\",{\"1\":{\"592\":1}}],[\"暂时而言\",{\"1\":{\"575\":1}}],[\"暂时放弃别的工具优先使用localsent\",{\"1\":{\"494\":1}}],[\"暂时还没有做\",{\"1\":{\"4\":1}}],[\"暂停等\",{\"1\":{\"47\":1}}],[\"停止\",{\"1\":{\"47\":1,\"1211\":1}}],[\"类型进行定时触发事件\",{\"1\":{\"1213\":1}}],[\"类型表示时区\",{\"1\":{\"1213\":1}}],[\"类型表示时间间隔\",{\"1\":{\"1213\":1}}],[\"类型表示地点的意思\",{\"1\":{\"1208\":1}}],[\"类型表示一个时间戳\",{\"1\":{\"1087\":1}}],[\"类型用于定时触发事件\",{\"1\":{\"1205\":1}}],[\"类型用于表示时区信息\",{\"1\":{\"1205\":1}}],[\"类型用于表示时间间隔或持续时间\",{\"1\":{\"1205\":1}}],[\"类型用于指定在更新一个资源时需要更新哪些字段\",{\"1\":{\"1088\":1}}],[\"类型里不仅仅有type\",{\"1\":{\"1188\":1}}],[\"类型提供了\",{\"1\":{\"1153\":2}}],[\"类型提供了方便的方法来逐行或逐个词读取数据\",{\"1\":{\"1153\":1}}],[\"类型不包含任何方法\",{\"1\":{\"1139\":1}}],[\"类型不是任意类型\",{\"1\":{\"1138\":1}}],[\"类型没有实现\",{\"1\":{\"1138\":1}}],[\"类型来说\",{\"1\":{\"474\":1}}],[\"类型呢\",{\"1\":{\"472\":1}}],[\"类型转换\",{\"0\":{\"1140\":1}}],[\"类型转换成具体类型时\",{\"1\":{\"1139\":1}}],[\"类型转换成\",{\"1\":{\"1138\":1}}],[\"类型转换操作\",{\"1\":{\"353\":1}}],[\"类型转为\",{\"1\":{\"472\":1}}],[\"类型生成\",{\"1\":{\"472\":1}}],[\"类型和\",{\"1\":{\"471\":1}}],[\"类型是硬编码进可执行文件\",{\"1\":{\"471\":1}}],[\"类型的错误\",{\"1\":{\"1210\":1}}],[\"类型的时间间隔\",{\"1\":{\"1207\":1}}],[\"类型的常用方法示例\",{\"1\":{\"1207\":1,\"1212\":1}}],[\"类型的大小\",{\"1\":{\"1139\":1}}],[\"类型的变量\",{\"1\":{\"1138\":1}}],[\"类型的选项只能设置给指定的\",{\"1\":{\"991\":1}}],[\"类型的选项\",{\"1\":{\"991\":1}}],[\"类型的\",{\"1\":{\"481\":4,\"1139\":1}}],[\"类型的操作\",{\"1\":{\"472\":1}}],[\"类型的字符串表示形式\",{\"1\":{\"1209\":1}}],[\"类型的字符串切片添加到\",{\"1\":{\"481\":1}}],[\"类型的字符串\",{\"1\":{\"471\":1,\"481\":1}}],[\"类型的值\",{\"1\":{\"450\":1,\"1138\":1,\"1189\":1}}],[\"类型的底层数据结构是由压缩列表或跳表实现的\",{\"1\":{\"410\":1}}],[\"类型的底层数据结构是由压缩列表或哈希表实现的\",{\"1\":{\"406\":1}}],[\"类型的底层数据结构是由哈希表或整数集合实现的\",{\"1\":{\"408\":1}}],[\"类型的底层数据结构\",{\"1\":{\"404\":2,\"406\":2,\"408\":2,\"410\":2}}],[\"类型定义了很多辅助方法来处理各种情况\",{\"1\":{\"449\":1}}],[\"类型内部实现\",{\"0\":{\"404\":1,\"406\":1,\"408\":1,\"410\":1}}],[\"类型特定函数\",{\"1\":{\"395\":1}}],[\"类型\",{\"1\":{\"345\":1,\"400\":1,\"419\":1,\"471\":3,\"481\":3,\"966\":1,\"991\":1,\"1087\":1,\"1138\":2,\"1139\":1,\"1156\":1,\"1187\":1,\"1188\":3,\"1207\":3}}],[\"类似protoc\",{\"1\":{\"1078\":1}}],[\"类似的\",{\"1\":{\"739\":1}}],[\"类似\",{\"1\":{\"76\":1,\"78\":1,\"369\":1,\"407\":1}}],[\"类似于整数类型\",{\"1\":{\"1161\":1}}],[\"类似于你向一个进程发送信号\",{\"1\":{\"1156\":1}}],[\"类似于我们调用http方法的头和尾一样属于元数据的一部分\",{\"1\":{\"1095\":1}}],[\"类似于下图所示\",{\"1\":{\"508\":1}}],[\"类似于\",{\"1\":{\"74\":1,\"1170\":1,\"1172\":1}}],[\"类的行尾添加\",{\"1\":{\"58\":1}}],[\"类\",{\"1\":{\"47\":1}}],[\"和格式化\",{\"1\":{\"1197\":1}}],[\"和methodbyname\",{\"1\":{\"1194\":1}}],[\"和message\",{\"1\":{\"435\":1}}],[\"和isnil\",{\"1\":{\"1194\":1}}],[\"和include\",{\"1\":{\"1079\":1}}],[\"和field\",{\"1\":{\"1192\":1}}],[\"和flag一样\",{\"1\":{\"1180\":1}}],[\"和是否触发程序的退出或崩溃\",{\"1\":{\"1178\":1}}],[\"和缓冲区分配内存\",{\"1\":{\"1137\":1}}],[\"和底层的数组分配一块连续的内存空间\",{\"1\":{\"1137\":1}}],[\"和栈指针\",{\"1\":{\"1135\":1}}],[\"和处理器\",{\"1\":{\"1132\":1}}],[\"和我们可以在codes找到\",{\"1\":{\"1074\":1}}],[\"和之前我们写的普通的rpc服务写入直接返回不同\",{\"1\":{\"1072\":1}}],[\"和之前的变量一样通过patch和unpatch来关闭mocker\",{\"1\":{\"960\":1}}],[\"和帮助检查key过期时间的s\",{\"1\":{\"976\":1}}],[\"和原函数的调用次数times\",{\"1\":{\"960\":1}}],[\"和您的\",{\"1\":{\"721\":1}}],[\"和代币被盗\",{\"1\":{\"704\":1}}],[\"和dex\",{\"1\":{\"698\":1}}],[\"和dp\",{\"1\":{\"259\":3,\"263\":1,\"264\":1}}],[\"和罗伯特\",{\"1\":{\"628\":1}}],[\"和星星的位置\",{\"1\":{\"580\":1}}],[\"和你的渴望一样需要彻底揭开面具\",{\"1\":{\"578\":1}}],[\"和b\",{\"1\":{\"574\":1}}],[\"和母亲通话\",{\"1\":{\"551\":1}}],[\"和百分之一的天才\",{\"1\":{\"551\":1}}],[\"和普通人想的30\",{\"1\":{\"528\":1}}],[\"和这位朋友的关系\",{\"1\":{\"500\":1}}],[\"和其他语言一样\",{\"1\":{\"468\":1}}],[\"和其他服务应确保其计算单元请求是最佳的\",{\"1\":{\"122\":1}}],[\"和常量相同\",{\"1\":{\"457\":1}}],[\"和消息正文\",{\"1\":{\"434\":1}}],[\"和从节点\",{\"1\":{\"433\":1}}],[\"和从服务器的复制偏移量\",{\"1\":{\"425\":1}}],[\"和接到moved错误时的情况类似\",{\"1\":{\"432\":1}}],[\"和客户端操作系统\",{\"1\":{\"721\":1}}],[\"和客户端\",{\"1\":{\"425\":1}}],[\"和客户端工具\",{\"1\":{\"60\":1}}],[\"和隔离性\",{\"1\":{\"424\":1}}],[\"和已连接\",{\"1\":{\"412\":1}}],[\"和ht\",{\"1\":{\"396\":2}}],[\"和前面提到的问题类似\",{\"1\":{\"384\":1}}],[\"和线程\",{\"1\":{\"383\":1}}],[\"和独占表锁\",{\"1\":{\"368\":1}}],[\"和时刻\",{\"1\":{\"360\":1}}],[\"和数据页的刷盘策略是一样的\",{\"1\":{\"356\":1}}],[\"和数字2\",{\"1\":{\"335\":1}}],[\"和所有跨存储引擎的功能\",{\"1\":{\"341\":1}}],[\"和滑动窗口的大小\",{\"1\":{\"336\":1}}],[\"和为s的两个数字\",{\"0\":{\"332\":1}}],[\"和一个整数目标和\",{\"1\":{\"307\":1}}],[\"和一个字符串单词\",{\"1\":{\"284\":1}}],[\"和一个字符串\",{\"1\":{\"264\":1}}],[\"和链表的常规操作一样需要定义虚拟头节点\",{\"1\":{\"290\":1}}],[\"和上一题差不多\",{\"1\":{\"286\":1}}],[\"和上一题是一样的dp\",{\"1\":{\"253\":1}}],[\"和setint\",{\"1\":{\"1194\":1}}],[\"和sema组成\",{\"1\":{\"1142\":1}}],[\"和string\",{\"1\":{\"1194\":1}}],[\"和s\",{\"1\":{\"268\":1}}],[\"和空字符串word2\",{\"1\":{\"266\":1}}],[\"和空串的最长公共子序列自然是0\",{\"1\":{\"260\":1}}],[\"和word2\",{\"1\":{\"265\":1}}],[\"和以下标j\",{\"1\":{\"263\":2,\"266\":2}}],[\"和以j\",{\"1\":{\"259\":1,\"265\":1}}],[\"和nums\",{\"1\":{\"248\":1}}],[\"和无服务器\",{\"1\":{\"193\":1}}],[\"和程序的更新权限\",{\"1\":{\"114\":1}}],[\"和写出\",{\"1\":{\"78\":1}}],[\"和跑在上面的应用\",{\"1\":{\"62\":1}}],[\"和摘要\",{\"1\":{\"55\":1}}],[\"和\",{\"0\":{\"1232\":1},\"1\":{\"47\":1,\"55\":1,\"56\":1,\"66\":1,\"76\":1,\"78\":1,\"148\":1,\"150\":1,\"152\":1,\"192\":1,\"193\":2,\"220\":1,\"229\":1,\"230\":1,\"235\":1,\"248\":1,\"252\":1,\"258\":2,\"259\":2,\"260\":2,\"263\":2,\"264\":4,\"265\":3,\"266\":3,\"267\":1,\"280\":1,\"291\":3,\"294\":1,\"297\":2,\"318\":1,\"321\":1,\"326\":2,\"336\":1,\"351\":1,\"357\":3,\"358\":3,\"360\":10,\"362\":2,\"377\":1,\"384\":1,\"388\":1,\"405\":2,\"413\":3,\"414\":1,\"426\":2,\"435\":1,\"448\":2,\"463\":1,\"471\":1,\"482\":1,\"483\":1,\"552\":1,\"571\":1,\"580\":1,\"626\":1,\"828\":1,\"991\":1,\"994\":1,\"1002\":1,\"1009\":1,\"1073\":2,\"1132\":3,\"1134\":1,\"1135\":5,\"1136\":1,\"1138\":3,\"1139\":3,\"1141\":1,\"1142\":3,\"1143\":3,\"1144\":3,\"1146\":1,\"1153\":1,\"1161\":4,\"1162\":2,\"1163\":3,\"1166\":1,\"1173\":2,\"1178\":1,\"1193\":2,\"1205\":3,\"1213\":2,\"1225\":2,\"1241\":1}}],[\"和容器格式\",{\"1\":{\"75\":1}}],[\"和容器\",{\"1\":{\"47\":1}}],[\"和传统虚拟化方式的不同之处\",{\"1\":{\"45\":1}}],[\"实践有多种可用方案\",{\"1\":{\"1044\":1}}],[\"实施层是打印机\",{\"1\":{\"910\":1}}],[\"实力应该更多地与速度和坚持的品质有关\",{\"1\":{\"583\":1}}],[\"实力和弱点\",{\"1\":{\"583\":1}}],[\"实用触难为继\",{\"1\":{\"573\":1}}],[\"实用触本质上就是希望确保您能吃饭\",{\"1\":{\"573\":1}}],[\"实现以下方法\",{\"1\":{\"1242\":1}}],[\"实现有限状态机\",{\"0\":{\"1008\":1}}],[\"实现如下\",{\"1\":{\"967\":1}}],[\"实现灵活的生成对象的功能\",{\"1\":{\"889\":1}}],[\"实现复杂\",{\"1\":{\"876\":1,\"884\":1}}],[\"实现创建过程与表示分离\",{\"1\":{\"873\":1}}],[\"实现创建方法\",{\"1\":{\"838\":1}}],[\"实现builder接口\",{\"1\":{\"873\":1}}],[\"实现移除元素方法\",{\"1\":{\"867\":1}}],[\"实现移除观察者方法\",{\"1\":{\"844\":1}}],[\"实现添加元素方法\",{\"1\":{\"867\":1}}],[\"实现添加观察者方法\",{\"1\":{\"844\":1}}],[\"实现访问具体元素b方法\",{\"1\":{\"867\":2}}],[\"实现访问具体元素a方法\",{\"1\":{\"867\":2}}],[\"实现接口方法时可能会进行一些附加操作\",{\"1\":{\"938\":1}}],[\"实现接口中的方法以构建产品的各个部件\",{\"1\":{\"873\":1}}],[\"实现接受访问者方法\",{\"1\":{\"867\":3}}],[\"实现接收消息方法\",{\"1\":{\"833\":2}}],[\"实现对复杂对象结构的扩展\",{\"1\":{\"865\":1,\"868\":1}}],[\"实现对象的撤销\",{\"1\":{\"839\":1}}],[\"实现执行策略方法\",{\"1\":{\"855\":1}}],[\"实现算法接口\",{\"1\":{\"855\":3}}],[\"实现请求方法\",{\"1\":{\"849\":1}}],[\"实现请求的多重接收和灵活处理\",{\"1\":{\"815\":1}}],[\"实现处理状态逻辑方法\",{\"1\":{\"849\":2}}],[\"实现更新状态方法\",{\"1\":{\"844\":2}}],[\"实现设置策略方法\",{\"1\":{\"855\":1}}],[\"实现设置状态方法\",{\"1\":{\"844\":1,\"849\":1}}],[\"实现设置中介者方法\",{\"1\":{\"833\":2}}],[\"实现获取名称方法\",{\"1\":{\"867\":2}}],[\"实现获取状态方法\",{\"1\":{\"844\":1}}],[\"实现获取备忘录方法\",{\"1\":{\"838\":1}}],[\"实现通知观察者方法\",{\"1\":{\"844\":1}}],[\"实现数据的实时更新和同步\",{\"1\":{\"843\":1,\"845\":1}}],[\"实现保存备忘录方法\",{\"1\":{\"838\":1}}],[\"实现显示状态方法\",{\"1\":{\"838\":1}}],[\"实现恢复备忘录方法\",{\"1\":{\"838\":1}}],[\"实现转发消息方法\",{\"1\":{\"833\":1}}],[\"实现注册同事方法\",{\"1\":{\"833\":1}}],[\"实现发送消息方法\",{\"1\":{\"833\":2}}],[\"实现商业成功\",{\"1\":{\"646\":1}}],[\"实现自我的需要\",{\"1\":{\"573\":1}}],[\"实现方法和区别\",{\"1\":{\"894\":1}}],[\"实现方式就是\",{\"1\":{\"436\":1}}],[\"实现方便\",{\"1\":{\"436\":1}}],[\"实现方案就是将从前的一台\",{\"1\":{\"413\":1}}],[\"实现分布式锁的缺点\",{\"1\":{\"436\":1}}],[\"实现分布式锁的优点\",{\"1\":{\"436\":1}}],[\"实现分布式锁很方便\",{\"1\":{\"436\":1}}],[\"实现分布式锁有什么优缺点\",{\"1\":{\"436\":1}}],[\"实现部分重同步还需要用到服务器运行id\",{\"1\":{\"425\":1}}],[\"实现一个简单的全局id\",{\"1\":{\"458\":1}}],[\"实现一个函数来调整该数组中数字的顺序\",{\"1\":{\"293\":1}}],[\"实现一致性读\",{\"1\":{\"368\":1}}],[\"实现事务的持久性\",{\"1\":{\"357\":1}}],[\"实现事务回滚\",{\"1\":{\"356\":1}}],[\"实现的\",{\"1\":{\"356\":1,\"1033\":1}}],[\"实现了\",{\"1\":{\"404\":1}}],[\"实现了日志的原子性\",{\"1\":{\"355\":1}}],[\"实现了事务中的持久性\",{\"1\":{\"355\":2}}],[\"实现了事务中的原子性\",{\"1\":{\"355\":1}}],[\"实现\",{\"0\":{\"874\":1,\"882\":1,\"890\":1,\"897\":1,\"905\":1,\"910\":1},\"1\":{\"288\":1,\"356\":2}}],[\"实现机制划分\",{\"0\":{\"183\":1}}],[\"实质上就失去了实现梦想的机会\",{\"1\":{\"582\":1}}],[\"实质上\",{\"1\":{\"94\":1}}],[\"实际业务系统中状态和转换的规则相当复杂\",{\"1\":{\"1009\":1}}],[\"实际的步骤就是令人讨厌的\",{\"1\":{\"586\":1}}],[\"实际的长度由保存的内容决定\",{\"1\":{\"435\":1}}],[\"实际上reflect不仅仅只有type还有一个kind\",{\"1\":{\"1188\":1}}],[\"实际上应该是这样创建\",{\"1\":{\"1187\":1}}],[\"实际上许多项目就是这么做的\",{\"1\":{\"1181\":1}}],[\"实际上创建的是如下的结构体\",{\"1\":{\"1137\":1}}],[\"实际上就是把中间件添加到handlerschain类型其实就是数组\",{\"1\":{\"1052\":1}}],[\"实际上就是\",{\"1\":{\"1035\":1,\"1036\":1}}],[\"实际上就是在得知利息会提升的时间点\",{\"1\":{\"177\":1}}],[\"实际上有很多成熟的项目在使用cobra\",{\"1\":{\"988\":1}}],[\"实际上编写可测试的代码需要我们在写代码的时候就注意\",{\"1\":{\"979\":1}}],[\"实际上不仅仅有patch\",{\"1\":{\"959\":1}}],[\"实际上如果你熟悉c++的stl的话\",{\"1\":{\"826\":1}}],[\"实际上我们注释了\",{\"1\":{\"959\":1}}],[\"实际上我们还可以对错误信息进行处理\",{\"1\":{\"448\":1}}],[\"实际上我认为真正的休息策略这些\",{\"1\":{\"788\":1}}],[\"实际上社交媒体放大了这种原本不应被看到的贫富差距\",{\"1\":{\"747\":1}}],[\"实际上这个世界上绝大多数人都可以做到\",{\"1\":{\"740\":1}}],[\"实际上这种灵活用法是因为\",{\"1\":{\"472\":1}}],[\"实际上的具体意思呢\",{\"1\":{\"701\":1}}],[\"实际上每个人都有自己的推理\",{\"1\":{\"627\":1}}],[\"实际上可能是一个人在逃避消极的自我形象\",{\"1\":{\"577\":1}}],[\"实际上s的类型是\",{\"1\":{\"470\":1}}],[\"实际上在执行一个事务的过程中\",{\"1\":{\"357\":1}}],[\"实际上是以函数数组的方式存储了一个函数序列\",{\"1\":{\"1052\":1}}],[\"实际上是\",{\"1\":{\"1034\":1}}],[\"实际上是进行了一次套利\",{\"1\":{\"177\":1}}],[\"实际上是在指定上下文的目录\",{\"1\":{\"60\":1}}],[\"实际上是在要求删除某个标签的镜像\",{\"1\":{\"55\":1}}],[\"实际上适合所有的稳定币套利模式\",{\"1\":{\"172\":1}}],[\"实际上注册服务器是管理仓库的具体服务器\",{\"1\":{\"73\":1}}],[\"实际上\",{\"1\":{\"53\":1,\"60\":1,\"585\":1}}],[\"实际不是真的删除前一层的文件\",{\"1\":{\"46\":1}}],[\"实例化一个匿名结构体\",{\"1\":{\"1191\":1}}],[\"实例中\",{\"1\":{\"981\":1}}],[\"实例无响应多少毫秒之后才会被判断为主观下线\",{\"1\":{\"426\":1}}],[\"实例的地址\",{\"1\":{\"426\":1}}],[\"实例的运行id\",{\"1\":{\"426\":1}}],[\"实例的名字\",{\"1\":{\"426\":1}}],[\"实例\",{\"1\":{\"47\":1,\"448\":2,\"450\":1}}],[\"实事等\",{\"1\":{\"19\":1,\"34\":1}}],[\"后跟一个字母表示\",{\"1\":{\"1173\":1}}],[\"后跟一个或多个缩进副本\",{\"1\":{\"516\":1}}],[\"后阻塞读锁的获取\",{\"1\":{\"1143\":1}}],[\"后的\",{\"1\":{\"1135\":1}}],[\"后的条件列不是索引列\",{\"1\":{\"353\":1}}],[\"后加run参数\",{\"1\":{\"967\":1}}],[\"后执行原函数\",{\"1\":{\"956\":1}}],[\"后期可以收回成本大幅获利的市场\",{\"1\":{\"800\":1}}],[\"后资本时代\",{\"1\":{\"648\":1,\"669\":1}}],[\"后资本世界\",{\"1\":{\"605\":1,\"611\":1}}],[\"后真相时代\",{\"1\":{\"611\":1}}],[\"后来在\",{\"1\":{\"722\":1}}],[\"后来我了解到其实不止我一个人这样\",{\"1\":{\"698\":1}}],[\"后来尝试回想发生了什么\",{\"1\":{\"641\":1}}],[\"后来东哥在群里的几句话\",{\"1\":{\"551\":1}}],[\"后来这俩兄弟不服\",{\"1\":{\"528\":1}}],[\"后来福州的陈氏兄弟通过提供互联网ip电话服务\",{\"1\":{\"528\":1}}],[\"后者易于理解\",{\"1\":{\"721\":1}}],[\"后者是当你成为一个顺从的机器人时所做的\",{\"1\":{\"575\":1}}],[\"后者却有机会转变为前者\",{\"1\":{\"534\":1}}],[\"后者用于多线程\",{\"1\":{\"463\":1}}],[\"后者则需要宿主机系统的深入支持\",{\"1\":{\"75\":1}}],[\"后者则往往是对应的软件名\",{\"1\":{\"48\":1}}],[\"后向指针\",{\"1\":{\"397\":1}}],[\"后删除缓存\",{\"1\":{\"384\":3}}],[\"后更新缓存\",{\"1\":{\"382\":1}}],[\"后更新数据库\",{\"1\":{\"382\":1,\"384\":4}}],[\"后才启动的事务生成的\",{\"1\":{\"362\":1}}],[\"后访问的事务必须等前一个事务执行完成\",{\"1\":{\"361\":1}}],[\"后台就可以自动执行bgsave\",{\"1\":{\"417\":1}}],[\"后台线程相当于一个消费者\",{\"1\":{\"411\":1}}],[\"后台线程回定期将适量的脏页刷入到磁盘\",{\"1\":{\"377\":1}}],[\"后台线程就可以遍历\",{\"1\":{\"377\":1}}],[\"后台线程\",{\"1\":{\"360\":1}}],[\"后台运行\",{\"0\":{\"66\":1}}],[\"后组成的新字符串\",{\"1\":{\"260\":1}}],[\"后遍历物品就是排列问题\",{\"1\":{\"242\":1}}],[\"后遍历背包就是组合问题\",{\"1\":{\"242\":1}}],[\"后续操作都基于cli而不用再关心\",{\"1\":{\"1225\":1}}],[\"后续方便去做单测\",{\"1\":{\"977\":1}}],[\"后续的访问仅仅获取值\",{\"1\":{\"460\":1}}],[\"后续线程\",{\"1\":{\"436\":1}}],[\"后续交由操作系统决定何时将数据持久化到磁盘\",{\"1\":{\"358\":1}}],[\"后续会持久化\",{\"1\":{\"357\":1}}],[\"后续会有更新\",{\"1\":{\"11\":1}}],[\"后续innodb会进行更新\",{\"1\":{\"357\":1}}],[\"后续我们将扩展使用mixin登录和email\",{\"1\":{\"192\":1}}],[\"后总结而来的学习笔记\",{\"1\":{\"191\":1}}],[\"后面都会基于cli来举例\",{\"1\":{\"1225\":1}}],[\"后面陆陆续续也体验过affine\",{\"1\":{\"710\":1}}],[\"后面就是业务\",{\"1\":{\"674\":1}}],[\"后面应该会再写一篇文章详细说明如何找到让自己充满激情的事业\",{\"1\":{\"634\":1}}],[\"后面再拿起来说\",{\"1\":{\"633\":1}}],[\"后面再跟着至少一位数字\",{\"1\":{\"292\":1}}],[\"后面或许会填上\",{\"1\":{\"631\":1}}],[\"后面简称\",{\"1\":{\"426\":1}}],[\"后面有时间再改\",{\"1\":{\"311\":1}}],[\"后面跟着至少一位数字\",{\"1\":{\"292\":1}}],[\"后面跟着一个点\",{\"1\":{\"292\":2}}],[\"后面跟着一个\",{\"1\":{\"292\":1}}],[\"后面如果某个用户的健康不足且无人清算的情况下\",{\"1\":{\"152\":1}}],[\"后面会有代码分析\",{\"1\":{\"150\":1}}],[\"后端的编程语言\",{\"1\":{\"129\":1}}],[\"后\",{\"1\":{\"116\":1,\"125\":1,\"362\":1,\"371\":1,\"376\":1,\"377\":1,\"424\":1,\"425\":1,\"426\":2}}],[\"后边可以跟多个参数\",{\"1\":{\"68\":1}}],[\"后一层上的任何改变只发生在自己这一层\",{\"1\":{\"46\":1}}],[\"会带来一定的性能损耗\",{\"1\":{\"1194\":1}}],[\"会通过成员变量\",{\"1\":{\"1145\":1}}],[\"会减少获取锁的写操作等待的读操作数\",{\"1\":{\"1143\":1}}],[\"会调用runtime\",{\"1\":{\"1149\":1}}],[\"会调用如下所示的\",{\"1\":{\"1143\":1}}],[\"会调用\",{\"1\":{\"1143\":1,\"1145\":1}}],[\"会调用退出系统调用的函数\",{\"1\":{\"1135\":1}}],[\"会获得互斥锁\",{\"1\":{\"1142\":1}}],[\"会触发\",{\"1\":{\"1137\":1}}],[\"会触发什么机制\",{\"1\":{\"413\":1}}],[\"会直接在堆上分配对应数量的内存页给程序\",{\"1\":{\"1149\":1}}],[\"会直接返回\",{\"1\":{\"1137\":1,\"1145\":1}}],[\"会直接造成崩溃\",{\"1\":{\"475\":1}}],[\"会创建一个\",{\"1\":{\"1137\":1}}],[\"会创建一个子进程来生成\",{\"1\":{\"413\":1}}],[\"会得到先发送数据的权利\",{\"1\":{\"1136\":1}}],[\"会先校验锁状态的合法性\",{\"1\":{\"1142\":1}}],[\"会先接收到数据\",{\"1\":{\"1136\":1}}],[\"会先创建\",{\"1\":{\"364\":1}}],[\"会进入下一个状态\",{\"1\":{\"1009\":2}}],[\"会有很多碎片\",{\"1\":{\"1147\":1}}],[\"会有很多一个个的小函数\",{\"1\":{\"967\":1}}],[\"会有一定的性能损失\",{\"1\":{\"460\":1}}],[\"会有一个从节点被选中\",{\"1\":{\"433\":1}}],[\"会有一个问题\",{\"1\":{\"413\":1}}],[\"会有一个矿工计算出数学题的答案\",{\"1\":{\"94\":1}}],[\"会使当前测试直接失败并停止\",{\"1\":{\"967\":1}}],[\"会使用\",{\"1\":{\"1142\":1}}],[\"会使用跳表作为\",{\"1\":{\"410\":1}}],[\"会使用整数集合作为\",{\"1\":{\"408\":1}}],[\"会使用哈希表作为\",{\"1\":{\"406\":1}}],[\"会使用双向链表作为\",{\"1\":{\"404\":1}}],[\"会使用压缩列表作为\",{\"1\":{\"404\":1,\"406\":1,\"410\":1}}],[\"会成为照片里的杀马特\",{\"1\":{\"735\":1}}],[\"会促使一个人的观念发生改变\",{\"1\":{\"649\":1}}],[\"会拒绝可能带来长远自由的道路\",{\"1\":{\"573\":1}}],[\"会阻止你努力打拼建立长期灵活的事业和足以享乐的财富\",{\"1\":{\"573\":1}}],[\"会阻塞主线程\",{\"1\":{\"413\":1}}],[\"会阻塞列表直到超时或有元素可弹出为止\",{\"1\":{\"405\":1}}],[\"会杀死其他人\",{\"1\":{\"534\":1}}],[\"会为当前的\",{\"1\":{\"1137\":1}}],[\"会为我们调用\",{\"1\":{\"449\":1}}],[\"会为被\",{\"1\":{\"369\":1}}],[\"会返回这样的错误\",{\"1\":{\"1170\":1}}],[\"会返回\",{\"1\":{\"449\":1}}],[\"会检查回复中leader\",{\"1\":{\"426\":1}}],[\"会以每十秒一次的频率通过命令连接向从服务器发送info命令\",{\"1\":{\"426\":1}}],[\"会以协议格式命令将被写命令追加到服务器状态的aof\",{\"1\":{\"422\":1}}],[\"会遇上怎样的低效情况\",{\"1\":{\"425\":1}}],[\"会\",{\"1\":{\"424\":2,\"426\":5,\"433\":1,\"447\":1}}],[\"会在内容后面添加一个换行符\",{\"1\":{\"1168\":1}}],[\"会在计数器大于\",{\"1\":{\"1144\":1}}],[\"会在方法中不断尝试获取锁并陷入休眠等待信号量的释放\",{\"1\":{\"1142\":1}}],[\"会在极短时间内改变社会的格局\",{\"1\":{\"717\":1}}],[\"会在\",{\"1\":{\"414\":1}}],[\"会向\",{\"1\":{\"414\":1}}],[\"会对\",{\"1\":{\"414\":2}}],[\"会对记录加上读写锁\",{\"1\":{\"361\":1}}],[\"会自动更新并插入db\",{\"1\":{\"1241\":1}}],[\"会自动在更新和插入操作时更新他们\",{\"1\":{\"1241\":1}}],[\"会自动在更新和插入操作时更新\",{\"1\":{\"1241\":1}}],[\"会自动把所有哈希槽平均分布到集群节点上\",{\"1\":{\"413\":1}}],[\"会自动为你创建一个文件夹\",{\"1\":{\"74\":1}}],[\"会读取该文件记录的命令\",{\"1\":{\"413\":1}}],[\"会读取该用户的权限\",{\"1\":{\"342\":1}}],[\"会把该\",{\"1\":{\"414\":1}}],[\"会把这些删除操作交给后台线程来执行\",{\"1\":{\"411\":1}}],[\"会把所有的脏页刷入到磁盘\",{\"1\":{\"377\":1}}],[\"会启动\",{\"1\":{\"411\":1}}],[\"会发现终端打印了这些\",{\"1\":{\"1193\":1}}],[\"会发生这样的场景\",{\"1\":{\"383\":1}}],[\"会发送给从服务器\",{\"1\":{\"413\":1}}],[\"会发送\",{\"1\":{\"71\":1}}],[\"会出现一些无法高效地解决的问题\",{\"1\":{\"428\":1}}],[\"会出现一些用时稍长的\",{\"1\":{\"377\":1}}],[\"会出现同时处理多个事务的情况\",{\"1\":{\"361\":1}}],[\"会主动触发脏页刷新到磁盘\",{\"1\":{\"377\":1}}],[\"会提前把它相邻的数据页一并加载进来\",{\"1\":{\"377\":1}}],[\"会生成一个插入意向锁\",{\"1\":{\"374\":1}}],[\"会影响性能\",{\"1\":{\"436\":1}}],[\"会影响插入性能\",{\"1\":{\"369\":1}}],[\"会影响并发性能\",{\"1\":{\"366\":1}}],[\"会加一个表级别的\",{\"1\":{\"369\":1}}],[\"会加上\",{\"1\":{\"361\":1,\"362\":1}}],[\"会释放当前会话的所有表锁\",{\"1\":{\"366\":1}}],[\"会的\",{\"1\":{\"360\":1}}],[\"会被自动更新\",{\"1\":{\"1241\":1}}],[\"会被切割成一堆等大的object\",{\"1\":{\"1148\":1}}],[\"会被同时唤醒\",{\"1\":{\"1144\":1}}],[\"会被唤醒\",{\"1\":{\"1144\":1}}],[\"会被抢占\",{\"1\":{\"1135\":1}}],[\"会被\",{\"1\":{\"448\":1}}],[\"会被回滚到事务开始前的状态\",{\"1\":{\"361\":1}}],[\"会被持久化到磁盘吗\",{\"1\":{\"360\":1}}],[\"会被阻塞\",{\"1\":{\"357\":1}}],[\"会包含提交\",{\"1\":{\"360\":1}}],[\"会导致redis服务直接卡停\",{\"1\":{\"416\":1}}],[\"会导致磁盘的\",{\"1\":{\"358\":1}}],[\"会导致容器的停止\",{\"1\":{\"68\":1}}],[\"会写到\",{\"1\":{\"358\":1}}],[\"会写入\",{\"1\":{\"357\":1}}],[\"会不会麻烦\",{\"1\":{\"357\":1}}],[\"会每秒刷盘\",{\"1\":{\"356\":1}}],[\"会根据传入参数初始化一个\",{\"1\":{\"1135\":1}}],[\"会根据事务的\",{\"1\":{\"356\":1}}],[\"会根据你输入的字符串识别出关键字出来\",{\"1\":{\"345\":1}}],[\"会降低表的增删改的效率\",{\"1\":{\"350\":1}}],[\"会重定向到sign\",{\"1\":{\"200\":1}}],[\"会话\",{\"1\":{\"193\":1}}],[\"会更多进行pusd的还款\",{\"1\":{\"176\":1}}],[\"会列举出他们的一些常见行为\",{\"1\":{\"156\":1}}],[\"会列出所有顶层镜像\",{\"1\":{\"54\":1}}],[\"会显示如下错误\",{\"1\":{\"74\":1}}],[\"会报错\",{\"1\":{\"74\":1}}],[\"会将\",{\"1\":{\"1137\":1}}],[\"会将载入数据所计算出的校验和与check\",{\"1\":{\"418\":1}}],[\"会将多个\",{\"1\":{\"360\":1}}],[\"会将该事物执行过程中产生的所有\",{\"1\":{\"358\":1}}],[\"会将上下文目录下的名为\",{\"1\":{\"60\":1}}],[\"会将路径下的所有内容打包\",{\"1\":{\"60\":1}}],[\"会看到\",{\"1\":{\"60\":1}}],[\"会让你对选择的数量感到兴奋\",{\"1\":{\"585\":1}}],[\"会让你对包的理解和使用更加流畅\",{\"1\":{\"512\":1}}],[\"会让程序直接退出\",{\"1\":{\"447\":1}}],[\"会让维护\",{\"1\":{\"58\":1}}],[\"会让镜像体积更加小巧\",{\"1\":{\"57\":1}}],[\"会一直跟随着镜像\",{\"1\":{\"58\":1}}],[\"会一直如影随形的跟着这个镜像\",{\"1\":{\"55\":1}}],[\"会一层层构建\",{\"1\":{\"46\":1}}],[\"会利用\",{\"1\":{\"53\":1}}],[\"会挂在root文件系统为其提供用户空间的支持\",{\"1\":{\"46\":1}}],[\"由mheap结构构建全局管理\",{\"1\":{\"1150\":1}}],[\"由两个\",{\"1\":{\"1047\":1}}],[\"由过去的自己所选择\",{\"1\":{\"760\":1}}],[\"由一个有五个域的字符串组成\",{\"1\":{\"1002\":1}}],[\"由一个真实的内心你所持有和考虑\",{\"1\":{\"575\":1}}],[\"由一个或多个sentinel实例组成的sentineli系统可以监视任意多个服务器\",{\"1\":{\"426\":1}}],[\"由chatgpt3\",{\"1\":{\"569\":1}}],[\"由此你也发现了\",{\"1\":{\"958\":1}}],[\"由此我们可以理解\",{\"1\":{\"956\":1}}],[\"由此我们可以分类一下\",{\"1\":{\"454\":1}}],[\"由此观点促使研究人员设计出了智力测试\",{\"1\":{\"620\":1}}],[\"由此可推\",{\"1\":{\"481\":1}}],[\"由此可见\",{\"1\":{\"383\":1}}],[\"由40个十六进制字符组成\",{\"1\":{\"427\":1}}],[\"由\",{\"1\":{\"426\":1,\"1217\":1}}],[\"由操作系统决定\",{\"1\":{\"422\":1}}],[\"由消费者来操作缓存\",{\"1\":{\"385\":1}}],[\"由有\",{\"1\":{\"357\":1}}],[\"由后台线程将缓存在buffer\",{\"1\":{\"357\":1}}],[\"由递推公式\",{\"1\":{\"252\":1}}],[\"由dp\",{\"1\":{\"235\":2}}],[\"由数字资产超额抵押产生的稳定币\",{\"1\":{\"187\":1}}],[\"由其他稳定币抵押铸造稳定币\",{\"1\":{\"185\":1}}],[\"由清算人\",{\"1\":{\"150\":1}}],[\"由价格预言机\",{\"1\":{\"150\":2}}],[\"由于反射使用了运行时信息\",{\"1\":{\"1194\":1}}],[\"由于指针类型本身没有具体的命名\",{\"1\":{\"1188\":1}}],[\"由于指针的零值是\",{\"1\":{\"1138\":1}}],[\"由于这些类型是通过表达式定义的\",{\"1\":{\"1188\":1}}],[\"由于陷入等待无法获取锁而造成的高尾延时\",{\"1\":{\"1142\":1}}],[\"由于接收空间不足而阻塞的\",{\"1\":{\"1137\":1}}],[\"由于缓冲区空间不足而阻塞的\",{\"1\":{\"1137\":1}}],[\"由于缓存未命中\",{\"1\":{\"377\":1}}],[\"由于抢占而被阻塞\",{\"1\":{\"1132\":1}}],[\"由于运行时而被阻塞\",{\"1\":{\"1132\":1}}],[\"由于有效期存储在token中\",{\"1\":{\"1047\":1}}],[\"由于签名是使用标头和有效负载计算的\",{\"1\":{\"1047\":1}}],[\"由于单例模式的全局性质\",{\"1\":{\"899\":1}}],[\"由于金额很小\",{\"1\":{\"706\":1}}],[\"由于金钱是在人手里流通的\",{\"1\":{\"614\":1}}],[\"由于劳资关系的变化\",{\"1\":{\"648\":1}}],[\"由于我们刚开始摆脱它\",{\"1\":{\"648\":1}}],[\"由于我的职业是程序员\",{\"1\":{\"605\":1}}],[\"由于过去没有训练过判断能力\",{\"1\":{\"631\":1}}],[\"由于某种原因\",{\"1\":{\"627\":1}}],[\"由于气候危机导致的一些地区以及不适合人类居住\",{\"1\":{\"609\":1}}],[\"由于人类是整个地球上的超级物种\",{\"1\":{\"609\":1}}],[\"由于字符串插入操作需要修改原来的字符串\",{\"1\":{\"478\":1}}],[\"由于字符串追加操作要修改原来的字符串\",{\"1\":{\"477\":1}}],[\"由于string是可变的字符串\",{\"1\":{\"476\":1}}],[\"由于rust的语言特性\",{\"1\":{\"464\":1}}],[\"由于生命周期特性\",{\"1\":{\"454\":1}}],[\"由于业务代码执行时间可能比较长\",{\"1\":{\"436\":1}}],[\"由于会从节点会清空自己的缓冲区\",{\"1\":{\"413\":1}}],[\"由于网络问题\",{\"1\":{\"413\":1}}],[\"由于和执行操作命令在同一个线程\",{\"1\":{\"413\":1}}],[\"由于写操作命令执行成功后才记录到\",{\"1\":{\"413\":1}}],[\"由于在对记录加独占锁前\",{\"1\":{\"368\":1}}],[\"由于每个人一开始的选择判断能力都是需要自己积累\",{\"1\":{\"631\":1}}],[\"由于每次插入主键的索引值都是随机的\",{\"1\":{\"353\":1}}],[\"由于每条指令执行不同的逻辑\",{\"1\":{\"121\":1}}],[\"由于要维护\",{\"1\":{\"352\":1}}],[\"由于比特币的发行速度递减\",{\"1\":{\"94\":1}}],[\"由于没有分配伪终端\",{\"1\":{\"68\":1}}],[\"由于命令行的强大能力\",{\"1\":{\"58\":1}}],[\"由于命令的执行\",{\"1\":{\"55\":1}}],[\"由于新旧镜像同名\",{\"1\":{\"52\":1}}],[\"由于\",{\"1\":{\"51\":2,\"139\":1,\"148\":1,\"150\":1,\"1139\":1}}],[\"由多层文件系统联合组成\",{\"1\":{\"46\":1}}],[\"由少数几个卖家主导的市场\",{\"1\":{\"8\":1}}],[\"将cli替换成client\",{\"1\":{\"1225\":1}}],[\"将数据存储为一个文档\",{\"1\":{\"1217\":1}}],[\"将整数或浮点数转换为字符串\",{\"1\":{\"1198\":1}}],[\"将整数转换为字符串\",{\"1\":{\"1198\":1}}],[\"将字符串转换为浮点数\",{\"1\":{\"1198\":1}}],[\"将字符串转换为整数\",{\"1\":{\"1198\":1}}],[\"将满足特定命名格式的方法自动注册为相应的http服务\",{\"1\":{\"1194\":1}}],[\"将后面的内容映射到对应的占位符\",{\"1\":{\"1168\":1}}],[\"将mspan加入到nonempty链表\",{\"1\":{\"1149\":1}}],[\"将mspan从empty中删除\",{\"1\":{\"1149\":1}}],[\"将mspan返回给工作线程\",{\"1\":{\"1149\":1}}],[\"将mock的db对象传入我们的函数中\",{\"1\":{\"975\":1}}],[\"将取出的mspan加入到empty链表中\",{\"1\":{\"1149\":1}}],[\"将当前\",{\"1\":{\"1146\":1}}],[\"将当前的\",{\"1\":{\"1137\":1}}],[\"将等待计数器加一并解锁\",{\"1\":{\"1146\":1}}],[\"将等待接收数据的\",{\"1\":{\"1137\":1}}],[\"将成员变量\",{\"1\":{\"1145\":1}}],[\"将原本顺序执行的代码在多个\",{\"1\":{\"1144\":1}}],[\"将原来的\",{\"1\":{\"980\":1,\"1138\":1}}],[\"将刚刚创建并初始化的\",{\"1\":{\"1137\":1}}],[\"将发送的数据拷贝到缓冲区中并增加\",{\"1\":{\"1137\":1}}],[\"将发送的数据直接拷贝到\",{\"1\":{\"1137\":1}}],[\"将发送的数据写入\",{\"1\":{\"1137\":1}}],[\"将协程状态从\",{\"1\":{\"1135\":3}}],[\"将传入的参数移到\",{\"1\":{\"1135\":1}}],[\"将body修改为\",{\"1\":{\"1080\":1}}],[\"将err转为status\",{\"1\":{\"1074\":2}}],[\"将http状态码写入响应头\",{\"1\":{\"1055\":1}}],[\"将查询出的处理函数链\",{\"1\":{\"1055\":1}}],[\"将gin遇到的无法处理的请求按http\",{\"1\":{\"1050\":1}}],[\"将构造函数中的依赖作为参数传递给构造函数\",{\"1\":{\"981\":1}}],[\"将依赖项注入\",{\"1\":{\"981\":1}}],[\"将目标函数或方法的实现跳转到桩实现\",{\"1\":{\"978\":1}}],[\"将生成的mock代码放置到mocks包中\",{\"1\":{\"977\":1}}],[\"将自动生成的mock代码存储到文件mocks\",{\"1\":{\"977\":1}}],[\"将自己的注意力投入在自己的事业上\",{\"1\":{\"754\":1}}],[\"将自己的数据库状态更新至主服务器所处的状态\",{\"1\":{\"425\":1}}],[\"将自己的数据库状态更新至主服务器执行bgsave命令时的数据库状态\",{\"1\":{\"425\":1}}],[\"将最后一个子节点和堆顶的元素进行交换\",{\"1\":{\"950\":1}}],[\"将小于等于pivot的数据放到左边\",{\"1\":{\"949\":1}}],[\"将对象组合成树状结构以表示\",{\"1\":{\"914\":1}}],[\"将对象创建代码与其他业务逻辑分开\",{\"1\":{\"881\":1}}],[\"将复杂对象的创建代码与业务逻辑代码分离\",{\"1\":{\"872\":1}}],[\"将元素添加到切片中\",{\"1\":{\"867\":1}}],[\"将它们封装在一个个的策略类中\",{\"1\":{\"853\":1}}],[\"将它设置为新的主服务器的从服务器\",{\"1\":{\"426\":1}}],[\"将观察者添加到切片中\",{\"1\":{\"844\":1}}],[\"将备忘录添加到切片中\",{\"1\":{\"838\":1}}],[\"将各个命令对象传入\",{\"1\":{\"821\":1}}],[\"将各个所需命令串联起来\",{\"1\":{\"58\":1}}],[\"将命令对象传入\",{\"1\":{\"820\":1}}],[\"将硬币保留在交易所上完全是用户的错\",{\"1\":{\"706\":1}}],[\"将每日写文章变成一个我的必须项\",{\"1\":{\"660\":1}}],[\"将注意力集中在劳动和消费上\",{\"1\":{\"649\":1}}],[\"将注意力集中在最重要和有价值的事情上\",{\"1\":{\"646\":1}}],[\"将使我在未来更不可能重蹈覆辙\",{\"1\":{\"588\":1}}],[\"将你所拥有的一切投入到你选择的点上\",{\"1\":{\"587\":1}}],[\"将你的下一个重大职业抉择重塑为一个风险小得多的选择\",{\"1\":{\"585\":1}}],[\"将你的职业视为一条隧道不仅没有生产力\",{\"1\":{\"585\":1}}],[\"将你的职业视为一系列点并不是为了帮助你做出决策的心理技巧\",{\"1\":{\"585\":1}}],[\"将所有的精力都投入其中\",{\"1\":{\"587\":1}}],[\"将点连接成线\",{\"0\":{\"585\":1}}],[\"将是非常错误的\",{\"1\":{\"583\":1}}],[\"将占用五万到十五万小时\",{\"1\":{\"571\":1}}],[\"将`c`从内存中泄漏\",{\"1\":{\"461\":1}}],[\"将变量改变为全局静态分配\",{\"1\":{\"461\":1}}],[\"将文件读取到一个字符串是相当常见的操作\",{\"1\":{\"451\":1}}],[\"将导致集群中的所有节点都向channel频道发送message消息\",{\"1\":{\"435\":1}}],[\"将槽slot指派给目标节点\",{\"1\":{\"431\":1}}],[\"将槽5001至槽10000指派给节点7001负责\",{\"1\":{\"428\":1}}],[\"将被选中的键原子地从源节点迁移至目标节点\",{\"1\":{\"431\":1}}],[\"将已下线的主服务器设置为新的主服务器的从服务器因为旧的主服务器已经下线\",{\"1\":{\"426\":1}}],[\"将已下线主服务器设置为新的主服务器的从服务器\",{\"1\":{\"426\":1}}],[\"将旧的主服务器变为从服务器\",{\"1\":{\"426\":1}}],[\"将旧值写入缓存\",{\"1\":{\"384\":2,\"386\":1}}],[\"将这个从服务器转换为主服务器\",{\"1\":{\"426\":1}}],[\"将这些不同的层结合到一个镜像中去\",{\"1\":{\"61\":1}}],[\"将向源sentinel返回一条命令回复\",{\"1\":{\"426\":1}}],[\"将普通redis服务器使用的代码替换成sentinel专用代码\",{\"1\":{\"426\":1}}],[\"将为该套接字创建相应的客户端状态\",{\"1\":{\"425\":1}}],[\"将消息message发送给channel频道的所有订阅者\",{\"1\":{\"423\":1}}],[\"将消息message发送给频道channel时\",{\"1\":{\"423\":1}}],[\"将一些属性置零并且释放\",{\"1\":{\"1137\":1}}],[\"将一些步骤延迟到子类中实现\",{\"1\":{\"859\":1}}],[\"将一些数据写入到文件的时候\",{\"1\":{\"422\":1}}],[\"将一个值插入到已存在的列表尾部\",{\"1\":{\"405\":1}}],[\"将一个值插入到已存在的列表头部\",{\"1\":{\"405\":1}}],[\"将一个或多个值插入到列表尾部\",{\"1\":{\"405\":1}}],[\"将一个或多个值插入到列表头部\",{\"1\":{\"405\":1}}],[\"将一个进程放到一个特定的目录执行\",{\"1\":{\"76\":1}}],[\"将某一时刻的内存数据\",{\"1\":{\"413\":1}}],[\"将哈希表\",{\"1\":{\"407\":1}}],[\"将列表索引\",{\"1\":{\"405\":1}}],[\"将值\",{\"1\":{\"403\":1,\"405\":1}}],[\"将给定\",{\"1\":{\"403\":1}}],[\"将保存在ht\",{\"1\":{\"395\":1}}],[\"将新值写入数据库\",{\"1\":{\"384\":1,\"386\":1}}],[\"将新节点串起来\",{\"1\":{\"308\":1}}],[\"将脏页写入到磁盘\",{\"1\":{\"377\":1}}],[\"将页加载到\",{\"1\":{\"376\":1}}],[\"将redo\",{\"1\":{\"357\":1}}],[\"将写操作从\",{\"1\":{\"357\":1}}],[\"将反转后单词间的空格减少到只含一个\",{\"1\":{\"333\":1}}],[\"将二进制数字\",{\"1\":{\"287\":1}}],[\"将其加入处理器的运行队列并在满足条件时调用\",{\"1\":{\"1135\":1}}],[\"将其从交易所取出并放入您自己的钱包中\",{\"1\":{\"703\":1}}],[\"将其拆分为至少两个正整数的和\",{\"1\":{\"231\":1}}],[\"将其设计为分层存储的架构\",{\"1\":{\"46\":1}}],[\"将用户的name和email一起创建到数据库中\",{\"1\":{\"194\":1}}],[\"将着重点放在nextauth的使用上\",{\"1\":{\"191\":1}}],[\"将providers字段中的discord改为github\",{\"1\":{\"192\":1}}],[\"将pando\",{\"1\":{\"177\":1}}],[\"将pusd的贷款置换成了其他平台的usdt贷款\",{\"1\":{\"177\":1}}],[\"将钱包指定为代币账户的所有者\",{\"1\":{\"135\":1}}],[\"将特定类型代币的单位从一个代币账户转移到另一个代币账户\",{\"1\":{\"133\":1}}],[\"将\",{\"1\":{\"131\":1,\"152\":1,\"153\":2,\"194\":1,\"266\":1,\"287\":1,\"347\":1,\"349\":1,\"360\":5,\"377\":1,\"386\":1,\"403\":4,\"409\":1,\"424\":1,\"425\":1,\"433\":1,\"481\":1,\"1067\":1,\"1135\":11,\"1137\":1,\"1142\":1,\"1143\":1}}],[\"将程序编译成可执行和可链接格式\",{\"1\":{\"129\":1}}],[\"将容器中的虚拟网卡同\",{\"1\":{\"76\":1}}],[\"将多个\",{\"1\":{\"61\":1}}],[\"将之前的\",{\"1\":{\"58\":1}}],[\"将会接收trailer\",{\"1\":{\"1095\":1}}],[\"将会接收header\",{\"1\":{\"1095\":1}}],[\"将会导致镜像极为臃肿\",{\"1\":{\"55\":1}}],[\"将会均分给其他已购买者\",{\"1\":{\"28\":1}}],[\"将以\",{\"1\":{\"48\":1}}],[\"其包含4m个区域\",{\"1\":{\"1149\":1}}],[\"其令牌桶大小为\",{\"1\":{\"1034\":1}}],[\"其构造出的限流器含义为\",{\"1\":{\"1034\":1}}],[\"其命令行的格式为\",{\"1\":{\"991\":1}}],[\"其原理类似于热补丁\",{\"1\":{\"978\":1}}],[\"其只会查看文件的内容\",{\"1\":{\"915\":1}}],[\"其目的是确保系统中只有一个对象\",{\"1\":{\"895\":1}}],[\"其关键在于定义一个工厂接口\",{\"1\":{\"883\":1}}],[\"其背后更深层次的原因是社会矛盾的激化\",{\"1\":{\"795\":1}}],[\"其代币也不会被盗\",{\"1\":{\"704\":1}}],[\"其余的大部分都会被束之高阁\",{\"1\":{\"577\":1}}],[\"其余部分保持不变\",{\"1\":{\"192\":1}}],[\"其核心是一个简单的重叠图式\",{\"1\":{\"572\":1}}],[\"其本质上都可以分为主厨式或厨师式的推理模式\",{\"1\":{\"571\":1}}],[\"其次我们给gin定义了一个get请求方法\",{\"1\":{\"1050\":1}}],[\"其次要接受贫富差距会越来越大\",{\"1\":{\"748\":1}}],[\"其次当事物收缩时\",{\"1\":{\"648\":1}}],[\"其次\",{\"1\":{\"521\":1}}],[\"其次bgsave命令执行期间客户端发送bgsave命令会被服务器直接拒绝\",{\"1\":{\"416\":1}}],[\"其返回值是删除位置的字符串\",{\"1\":{\"480\":1}}],[\"其生命周期可能会贯穿整个程序的生命周期\",{\"1\":{\"456\":1}}],[\"其\",{\"1\":{\"426\":3,\"428\":1}}],[\"其数据和磁盘上的数据已经不一致\",{\"1\":{\"377\":1}}],[\"其他类型\",{\"1\":{\"1161\":1}}],[\"其他\",{\"1\":{\"1143\":2}}],[\"其他域都是表示任意\",{\"1\":{\"1002\":1}}],[\"其他事情都会变得简单\",{\"1\":{\"754\":1}}],[\"其他事务既不可以对该记录加\",{\"1\":{\"371\":1}}],[\"其他事务也可以继续对该记录加\",{\"1\":{\"371\":1}}],[\"其他事务的如果要向该表插入语句都会被阻塞\",{\"1\":{\"369\":1}}],[\"其他人看了很难看懂\",{\"1\":{\"660\":2}}],[\"其他人并没有遇到\",{\"1\":{\"605\":1}}],[\"其他声音永远不会停止激烈地试图替你过活\",{\"1\":{\"588\":1}}],[\"其他时候\",{\"1\":{\"588\":1}}],[\"其他触须自然无法理解精神上的慈善\",{\"1\":{\"573\":1}}],[\"其他两个是动词\",{\"1\":{\"525\":1}}],[\"其他切片\",{\"0\":{\"469\":1}}],[\"其他的三种情况都可以正常执行\",{\"1\":{\"1138\":1}}],[\"其他的部分例如前台\",{\"1\":{\"792\":1}}],[\"其他的事情\",{\"1\":{\"577\":1}}],[\"其他的可能是rust标准库\",{\"1\":{\"447\":1}}],[\"其他的值类型部分不赘述了\",{\"1\":{\"420\":1}}],[\"其他消息的正文\",{\"1\":{\"435\":2}}],[\"其他sentinel可能仍然会认为主服务器处于在线状态\",{\"1\":{\"426\":1}}],[\"其他sentinel在内\",{\"1\":{\"426\":1}}],[\"其他都是当前读\",{\"1\":{\"362\":1}}],[\"其他数字都出现了三次\",{\"1\":{\"331\":1}}],[\"其他数字都出现了两次\",{\"1\":{\"330\":1}}],[\"其他数值都是0了\",{\"1\":{\"243\":1}}],[\"其他行以此类推\",{\"1\":{\"304\":1,\"305\":1}}],[\"其他下标都是随着递推公式逐步覆盖\",{\"1\":{\"260\":1}}],[\"其他下标对应的数值呢\",{\"1\":{\"244\":1}}],[\"其他下标应该初始化多少呢\",{\"1\":{\"236\":1}}],[\"其他下标初始为什么数值都可以\",{\"1\":{\"235\":1}}],[\"其他provider\",{\"1\":{\"195\":1}}],[\"其他oauth也是类似的接入方式\",{\"1\":{\"195\":1}}],[\"其他稳定币抵押铸造稳定币\",{\"1\":{\"185\":1}}],[\"其他还有比如frx\",{\"1\":{\"182\":1}}],[\"其借贷模型很多参考了solend\",{\"1\":{\"147\":1}}],[\"其地址是使用所有者的地址和铸币账户的地址确定派生的\",{\"1\":{\"136\":1}}],[\"其实只是使用log包下new出来的一个\",{\"1\":{\"1181\":1}}],[\"其实只需要一句话总结\",{\"1\":{\"534\":1}}],[\"其实你打开具体的setoutput\",{\"1\":{\"1181\":1}}],[\"其实整个log包内的这些函数都是由一个logger类型配置的\",{\"1\":{\"1179\":1}}],[\"其实mcache持有的一系列mspan并不是固定大小的\",{\"1\":{\"1149\":1}}],[\"其实和我们刚刚的代码是一样的\",{\"1\":{\"1053\":1}}],[\"其实和上一个题差不多\",{\"1\":{\"282\":1}}],[\"其实和上一个题差不多哈哈\",{\"1\":{\"245\":1}}],[\"其实和上一题一样都初始化为1就可以了\",{\"1\":{\"258\":1}}],[\"其实我们身边到处都是有限状态机的例子\",{\"1\":{\"1009\":1}}],[\"其实我在上面论述上滑行为时有一个点没说\",{\"1\":{\"634\":1}}],[\"其实还是快了不少的\",{\"1\":{\"948\":1}}],[\"其实认知这个东西你学到一点其实压根没什么用\",{\"1\":{\"689\":1}}],[\"其实就相当于告诉算法\",{\"1\":{\"689\":1}}],[\"其实就是我们刚刚handler实现的servehttp方法\",{\"1\":{\"1055\":1}}],[\"其实就是实现了handler接口方法\",{\"1\":{\"1055\":1}}],[\"其实就是从最后一个节点的父节点\",{\"1\":{\"950\":1}}],[\"其实就是递归函数\",{\"1\":{\"948\":1}}],[\"其实就是递归过程\",{\"1\":{\"279\":1}}],[\"其实就是把重试请求写到\",{\"1\":{\"385\":1}}],[\"其实就是当物品i的重量大于背包j的重量时\",{\"1\":{\"235\":1}}],[\"其实重写自己曾经的项目是意识到自己进步最明显的方式\",{\"1\":{\"602\":1}}],[\"其实\",{\"1\":{\"569\":1}}],[\"其实不是这样的\",{\"1\":{\"566\":1}}],[\"其实不同组可以创建相同的银行代币\",{\"1\":{\"152\":1}}],[\"其实更有理由去更大的互联网世界去探索\",{\"1\":{\"534\":1}}],[\"其实更浪费时间\",{\"1\":{\"525\":2}}],[\"其实有描述过数据垄断下的企业成为了最庞大的机构\",{\"1\":{\"533\":1}}],[\"其实经常用的就那么几个\",{\"1\":{\"531\":1}}],[\"其实学习是有成本的\",{\"1\":{\"525\":1}}],[\"其实过去的一年里\",{\"1\":{\"500\":1}}],[\"其实当调用\",{\"1\":{\"481\":1}}],[\"其实很难\",{\"1\":{\"387\":1}}],[\"其实也有各种各样的功能\",{\"1\":{\"1019\":1}}],[\"其实也可以通过parallel\",{\"1\":{\"1019\":1}}],[\"其实也描述了这种现象\",{\"1\":{\"531\":1}}],[\"其实也发生不一致\",{\"1\":{\"386\":1}}],[\"其实也不是\",{\"1\":{\"357\":1}}],[\"其实概率\",{\"1\":{\"384\":1}}],[\"其实需要做的事情\",{\"1\":{\"280\":1}}],[\"其实今年前半年刷过一次\",{\"1\":{\"274\":1}}],[\"其实这一个图就可以解释\",{\"1\":{\"1078\":1}}],[\"其实这个概念理解了\",{\"1\":{\"988\":1}}],[\"其实这些选择之间就没有对错\",{\"1\":{\"631\":1}}],[\"其实这是幻觉\",{\"1\":{\"534\":1}}],[\"其实这种情况已经很普遍了\",{\"1\":{\"533\":2}}],[\"其实这里我们也可以这样做\",{\"1\":{\"385\":1}}],[\"其实这行代码可以和dp数组初始化的时候放在一起\",{\"1\":{\"264\":1}}],[\"其实这就是一个组合问题了\",{\"1\":{\"239\":1}}],[\"其实都是配置一个已经在log包下创建好的logger结构体\",{\"1\":{\"1181\":1}}],[\"其实都是没有意义的\",{\"1\":{\"259\":1}}],[\"其实都可以\",{\"1\":{\"235\":1}}],[\"其实一开始现金是0\",{\"1\":{\"252\":1}}],[\"其实可以通过遍历一次计算空格的个数spacecount\",{\"1\":{\"277\":1}}],[\"其实可以通过map映射或者直接用mapmap\",{\"1\":{\"210\":1}}],[\"其实可以发现如果把dp\",{\"1\":{\"236\":1}}],[\"其实在前面的题目中我们已经用到过滚动数组了\",{\"1\":{\"236\":1}}],[\"其实从递归公式\",{\"1\":{\"235\":1}}],[\"其实切割问题类似组合问题\",{\"1\":{\"213\":1}}],[\"其实稳定币领域更多关注的还是如何在实际生活中使用\",{\"1\":{\"188\":1}}],[\"其实中央银行的加息也是同样的原理\",{\"1\":{\"176\":1}}],[\"其实是protobuf的包\",{\"1\":{\"1084\":1}}],[\"其实是需要这样做的\",{\"1\":{\"944\":1}}],[\"其实是说这个人没有正事去做\",{\"1\":{\"634\":1}}],[\"其实是相对于现在而言的\",{\"1\":{\"532\":1}}],[\"其实是相当灵活的协议\",{\"1\":{\"153\":1}}],[\"其实是很难评估的\",{\"1\":{\"386\":1}}],[\"其实是一样的\",{\"1\":{\"218\":1}}],[\"其实是因为电话号码的每个集合都不相互影响\",{\"1\":{\"211\":1}}],[\"其实是将每个人的份额减少\",{\"1\":{\"152\":1}}],[\"其实并非在本地构建\",{\"1\":{\"60\":1}}],[\"其实际体现并非由一个文件组成\",{\"1\":{\"46\":1}}],[\"其结果会和\",{\"1\":{\"59\":1}}],[\"其格式有两种\",{\"1\":{\"58\":1}}],[\"其格式为\",{\"1\":{\"49\":1,\"55\":1}}],[\"其中最低三位分别表示mutexlocked\",{\"1\":{\"1142\":1}}],[\"其中主要的逻辑就是\",{\"1\":{\"1135\":1}}],[\"其中主节点用于处理槽\",{\"1\":{\"433\":1}}],[\"其中可以看到如果\",{\"1\":{\"1135\":1}}],[\"其中存储着待执行的\",{\"1\":{\"1134\":1}}],[\"其中包括与性能追踪\",{\"1\":{\"1134\":1}}],[\"其中包含了\",{\"1\":{\"1193\":1}}],[\"其中包含了很多类型的元信息\",{\"1\":{\"1139\":1}}],[\"其中包含我们需要的所有元素\",{\"1\":{\"514\":1}}],[\"其中包含交易内指令所需的所有账户地址\",{\"1\":{\"117\":1}}],[\"其中node里面有各种属性\",{\"1\":{\"1053\":1}}],[\"其中每一种http方法\",{\"1\":{\"1053\":1}}],[\"其中每个space的color\",{\"1\":{\"731\":1}}],[\"其中的栈指针和程序计数器会用来存储或者恢复寄存器中的值\",{\"1\":{\"1132\":1}}],[\"其中的\",{\"1\":{\"991\":1}}],[\"其中的转换费用需要您自己承担\",{\"1\":{\"37\":1}}],[\"其中我们只需要理解三个核心的概念就可以完全掌握cobra了\",{\"1\":{\"988\":1}}],[\"其中miniredis不仅支持mock常用的redis操作\",{\"1\":{\"976\":1}}],[\"其中参数t是用于报告和附加日志信息的作用\",{\"1\":{\"967\":1}}],[\"其中抽象层\",{\"1\":{\"910\":1}}],[\"其中一个方面依赖于另一个方面\",{\"1\":{\"843\":1}}],[\"其中一些性能和可靠性问题记录在众所周知的分布式计算谬误中\",{\"1\":{\"723\":1}}],[\"其中就不得不了闲逛的好处了\",{\"1\":{\"698\":1}}],[\"其中就包括\",{\"1\":{\"191\":1}}],[\"其中使用最广的即是\",{\"1\":{\"471\":1}}],[\"其中泛型参数\",{\"1\":{\"450\":1}}],[\"其中之一就是性能\",{\"1\":{\"724\":1}}],[\"其中之一叫做\",{\"1\":{\"449\":1}}],[\"其中之一是btc\",{\"1\":{\"109\":1}}],[\"其中gossip协议由meet\",{\"1\":{\"435\":1}}],[\"其中crc16\",{\"1\":{\"429\":1}}],[\"其中以s\",{\"1\":{\"426\":1}}],[\"其中replication\",{\"1\":{\"425\":1}}],[\"其中runid是这个主服务器的运行id\",{\"1\":{\"425\":1}}],[\"其中runid是上一次复制的主服务器的运行id\",{\"1\":{\"425\":1}}],[\"其中完整重同步用于处理初次复制情况\",{\"1\":{\"425\":1}}],[\"其中pattern参数是可选的\",{\"1\":{\"423\":1}}],[\"其中sds保留了c字符串中最后一个字符是\",{\"1\":{\"393\":1,\"402\":1}}],[\"其中第\",{\"1\":{\"256\":1,\"337\":1}}],[\"其中第一个始终用作\",{\"1\":{\"118\":1}}],[\"其中a\",{\"1\":{\"169\":1}}],[\"其中签名需要64字节\",{\"1\":{\"116\":1}}],[\"其中\",{\"1\":{\"55\":1,\"64\":1,\"228\":1,\"284\":1,\"326\":1,\"350\":1,\"393\":1,\"402\":1,\"448\":1,\"970\":1,\"1025\":1,\"1026\":1,\"1142\":1,\"1143\":1}}],[\"其内容为\",{\"1\":{\"56\":1}}],[\"其内容在构建之后也不会被改变\",{\"1\":{\"46\":1}}],[\"其内包含了一条条的\",{\"1\":{\"56\":1}}],[\"其内包含有不同的版本标签\",{\"1\":{\"48\":1}}],[\"其性能和稳定性更高\",{\"1\":{\"47\":1}}],[\"其体积往往是庞大的\",{\"1\":{\"46\":1}}],[\"库\",{\"0\":{\"999\":1},\"1\":{\"46\":1,\"419\":1}}],[\"镜像输出\",{\"1\":{\"298\":1}}],[\"镜像可以通过分层来进行继承\",{\"1\":{\"78\":1}}],[\"镜像中的被指定为挂载点的目录中的文件会复制到数据卷中\",{\"1\":{\"74\":1}}],[\"镜像为例\",{\"1\":{\"56\":1}}],[\"镜像为基础来启动容器\",{\"1\":{\"50\":1}}],[\"镜像列表\",{\"1\":{\"55\":1}}],[\"镜像的基础\",{\"1\":{\"78\":1}}],[\"镜像的实现原理\",{\"0\":{\"61\":1}}],[\"镜像的\",{\"1\":{\"59\":1}}],[\"镜像的容器\",{\"1\":{\"57\":1}}],[\"镜像的制作就是为每一层添加所需的配置\",{\"1\":{\"56\":1}}],[\"镜像的多层结构让镜像复用变得非常容易\",{\"1\":{\"55\":1}}],[\"镜像的唯一标识是其\",{\"1\":{\"55\":1}}],[\"镜像摘要\",{\"1\":{\"55\":2}}],[\"镜像长\",{\"1\":{\"55\":1}}],[\"镜像短\",{\"1\":{\"55\":1}}],[\"镜像名\",{\"1\":{\"55\":2}}],[\"镜像是怎么实现增量的修改和维护的\",{\"1\":{\"61\":1}}],[\"镜像是多层存储\",{\"1\":{\"55\":1,\"58\":1}}],[\"镜像是多层存储结构\",{\"1\":{\"51\":1,\"55\":1}}],[\"镜像是容器的基础\",{\"1\":{\"55\":1}}],[\"镜像是由多层存储所构成\",{\"1\":{\"49\":1}}],[\"镜像是静态的定义\",{\"1\":{\"47\":1}}],[\"镜像仓库地址\",{\"1\":{\"49\":1}}],[\"镜像构建上下文\",{\"0\":{\"60\":1}}],[\"镜像构建透明性的问题\",{\"1\":{\"56\":1}}],[\"镜像构建完成后\",{\"1\":{\"48\":1}}],[\"镜像构建时\",{\"1\":{\"46\":1}}],[\"镜像只是一个虚拟的概念\",{\"1\":{\"46\":1}}],[\"镜像并非是像一个\",{\"1\":{\"46\":1}}],[\"镜像\",{\"0\":{\"46\":1},\"1\":{\"47\":1,\"48\":1,\"51\":1,\"55\":1}}],[\"因这样做而很受欢迎\",{\"1\":{\"705\":1}}],[\"因而从这个角度来说\",{\"1\":{\"374\":1}}],[\"因此您还可以验证内容是否未被篡改\",{\"1\":{\"1047\":1}}],[\"因此第\",{\"1\":{\"1002\":1}}],[\"因此它们能在抽象部分内部相互替换\",{\"1\":{\"911\":1}}],[\"因此它是复合类型\",{\"1\":{\"490\":1}}],[\"因此人类的大部分注意力都在工业活动上\",{\"1\":{\"648\":1}}],[\"因此我的关注点不仅在于深度\",{\"1\":{\"509\":1}}],[\"因此我们可以将批判性思考用来检验各种理论和主张\",{\"1\":{\"626\":1}}],[\"因此我们可以在浏览器中查看新添加的block\",{\"1\":{\"509\":1}}],[\"因此我们可以这样声明一个函数\",{\"1\":{\"468\":1}}],[\"因此我们这里简单说明下\",{\"1\":{\"481\":1}}],[\"因此我们在使用\",{\"1\":{\"481\":1}}],[\"因此我们应该使用\",{\"1\":{\"411\":1}}],[\"因此我们需要交互式终端\",{\"1\":{\"50\":1}}],[\"因此后面不能再使用s1\",{\"1\":{\"481\":1}}],[\"因此你无法保证索引的字节刚好落在字符的边界上\",{\"1\":{\"475\":1}}],[\"因此这种情况下对\",{\"1\":{\"473\":1}}],[\"因此这种插入数据的方法效率非常高\",{\"1\":{\"353\":1}}],[\"因此实际上可以这样声明\",{\"1\":{\"470\":1}}],[\"因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多\",{\"1\":{\"51\":1}}],[\"因此没有落在边界处\",{\"1\":{\"468\":1}}],[\"因此没有必要建立很多层\",{\"1\":{\"58\":1}}],[\"因此数据总是一致的\",{\"1\":{\"424\":1}}],[\"因此需要有相应的机制将已过期的键值对删除\",{\"1\":{\"414\":1}}],[\"因此需要在\",{\"1\":{\"76\":1}}],[\"因此压缩列表不适合保存过多的元素\",{\"1\":{\"399\":1}}],[\"因此一般都会在一定时机进行批量刷盘\",{\"1\":{\"377\":1}}],[\"因此一个\",{\"1\":{\"57\":1}}],[\"因此可能会增加语句的响应时间\",{\"1\":{\"360\":1}}],[\"因此可以匹配字符串\",{\"1\":{\"291\":1}}],[\"因此可以很方便的实现嵌套的\",{\"1\":{\"76\":1}}],[\"因此无论这个事务有多大\",{\"1\":{\"358\":1}}],[\"因此所以针对并发量大的系统\",{\"1\":{\"357\":1}}],[\"因此返回\",{\"1\":{\"326\":1}}],[\"因此执行\",{\"1\":{\"326\":2}}],[\"因此用或\",{\"1\":{\"297\":1}}],[\"因此用的是\",{\"1\":{\"50\":1}}],[\"因此长度为\",{\"1\":{\"257\":1}}],[\"因此置信区间调整后的市场美元价格为\",{\"1\":{\"150\":2}}],[\"因此每个字符占据\",{\"1\":{\"471\":1}}],[\"因此每次插入新的数据时\",{\"1\":{\"353\":1}}],[\"因此每条指令可能消耗不同数量的计算单元\",{\"1\":{\"121\":1}}],[\"因此每一条指令的内容\",{\"1\":{\"56\":1}}],[\"因此不是类型安全的\",{\"1\":{\"1017\":1}}],[\"因此不会对\",{\"1\":{\"414\":1}}],[\"因此不少初学者以为这个路径是在指定\",{\"1\":{\"60\":1}}],[\"因此不同镜像可能会因为使用相同的基础镜像\",{\"1\":{\"51\":1}}],[\"因此镜像构建时\",{\"1\":{\"58\":1}}],[\"因此直接\",{\"1\":{\"57\":1}}],[\"因此该镜像如果被这个容器所依赖的\",{\"1\":{\"55\":1}}],[\"因此很有可能某个其它镜像正依赖于当前镜像的某一层\",{\"1\":{\"55\":1}}],[\"因此会触发删除行为\",{\"1\":{\"55\":1}}],[\"因此当我们删除了所指定的标签后\",{\"1\":{\"55\":1}}],[\"因此当我们使用上面命令删除镜像的时候\",{\"1\":{\"55\":1}}],[\"因此并不会因为它们被列出来而多存了一份\",{\"1\":{\"53\":1}}],[\"因此使用\",{\"1\":{\"50\":1,\"287\":1}}],[\"因此将会获取官方镜像\",{\"1\":{\"49\":1}}],[\"因此将会从docker\",{\"1\":{\"49\":1}}],[\"因此容器可以拥有自己的\",{\"1\":{\"47\":1}}],[\"因此容器要比传统虚拟机更为轻便\",{\"1\":{\"45\":1}}],[\"因此\",{\"1\":{\"46\":1,\"47\":2,\"51\":1,\"58\":1,\"60\":2,\"360\":1,\"377\":1,\"411\":1,\"412\":1,\"414\":2,\"424\":2,\"426\":2,\"428\":1,\"468\":1,\"570\":1,\"572\":1,\"575\":1,\"578\":1,\"580\":1,\"584\":1,\"585\":1,\"647\":1,\"686\":1,\"721\":1,\"723\":1,\"1047\":1,\"1084\":1,\"1088\":1}}],[\"因此在性能敏感的场景中需要谨慎使用\",{\"1\":{\"1194\":1}}],[\"因此在通过索引区间来访问字符串时\",{\"1\":{\"475\":1}}],[\"因此在删除的时候也是从上层向基础层方向依次进行判断删除\",{\"1\":{\"55\":1}}],[\"因此在\",{\"1\":{\"46\":1,\"413\":1}}],[\"因为映射类型在go语言中是一种内置类型\",{\"1\":{\"1188\":1}}],[\"因为其中的\",{\"1\":{\"1144\":1}}],[\"因为其内容涵盖很广泛\",{\"1\":{\"467\":1}}],[\"因为其内部实现了一个底层的sync\",{\"1\":{\"460\":1}}],[\"因为互斥锁已经被获取\",{\"1\":{\"1143\":1}}],[\"因为大多数的读请求之间不会相互影响\",{\"1\":{\"1143\":1}}],[\"因为大部分常用汉字在\",{\"1\":{\"473\":1}}],[\"因为方法的参数是\",{\"1\":{\"1138\":1}}],[\"因为调度器的\",{\"1\":{\"1135\":1}}],[\"因为调度器在启动时就会创建\",{\"1\":{\"1134\":1}}],[\"因为有grp以grpc开头的数据\",{\"1\":{\"1093\":1}}],[\"因为有超额抵押和mtg多签机制\",{\"1\":{\"187\":1}}],[\"因为插入排序是连续比较到0\",{\"1\":{\"947\":1}}],[\"因为希尔排序就是根据插入排序来的\",{\"1\":{\"947\":1}}],[\"因为效率太低\",{\"1\":{\"946\":1}}],[\"因为最后一个比较j+1会越界\",{\"1\":{\"945\":1}}],[\"因为函数选项模式可以实现类似的功能\",{\"1\":{\"873\":1}}],[\"因为c++的标准库stl的设计模式几乎就是基于iterator来的\",{\"1\":{\"826\":1}}],[\"因为clear需要清空string\",{\"1\":{\"468\":1}}],[\"因为时间点不允许\",{\"1\":{\"799\":1}}],[\"因为公司还有董事会\",{\"1\":{\"792\":1}}],[\"因为恐惧\",{\"1\":{\"771\":1}}],[\"因为到了屯币者手中就不会售出了\",{\"1\":{\"767\":1}}],[\"因为贫富差距是社会发展的必然结果\",{\"1\":{\"746\":1}}],[\"因为需要纳秒且永远不会失败的函数调用被慢三到六个数量级的网络操作所取代\",{\"1\":{\"723\":1}}],[\"因为加密货币交易是不可逆转的\",{\"1\":{\"705\":1}}],[\"因为选择会决定一个人是否拥有真正的勇气\",{\"1\":{\"674\":1}}],[\"因为思维模式是这些所有的基础\",{\"1\":{\"673\":1}}],[\"因为知识是最关键的一点\",{\"1\":{\"649\":1}}],[\"因为一段时间以来\",{\"1\":{\"648\":1}}],[\"因为一个人的身体状态会影响精神状态这个道理似乎不是几句话能说明白的\",{\"1\":{\"633\":1}}],[\"因为一个sentinel可以通过分析接收到的频道信息来获知其他sentinel的存在\",{\"1\":{\"426\":1}}],[\"因为一个镜像可以对应多个标签\",{\"1\":{\"55\":1}}],[\"因为过去几个世纪我们已经明确了就业对经济和个人尊严都是必不可少的\",{\"1\":{\"648\":1}}],[\"因为问的问题压根就不是ai擅长的\",{\"1\":{\"631\":1}}],[\"因为气候危机对于我们每个人都很重要\",{\"1\":{\"609\":1}}],[\"因为2020年后\",{\"1\":{\"609\":1}}],[\"因为只字不差地阅读对人的思考质量是巨大的\",{\"1\":{\"605\":1}}],[\"因为只要\",{\"1\":{\"360\":1}}],[\"因为曾经的自己对xx方面不太熟悉\",{\"1\":{\"602\":1}}],[\"因为曾经的基础大概会了\",{\"1\":{\"525\":1}}],[\"因为那是你唯一能够弄清楚的点\",{\"1\":{\"585\":1}}],[\"因为那时我们还未了解服务器运行id\",{\"1\":{\"425\":1}}],[\"因为他们会在睡前刷2小时的短视频不断刺激自己的大脑\",{\"1\":{\"788\":1}}],[\"因为他们仍然可以使用自己习惯的工具应付\",{\"1\":{\"771\":1}}],[\"因为他们已经被训练成没有耐心的人了\",{\"1\":{\"621\":1}}],[\"因为他们的策略只是按照食谱进行操作\",{\"1\":{\"581\":1}}],[\"因为他们中的大多数人都会把传统智慧当作他们的指导手册\",{\"1\":{\"579\":1}}],[\"因为他们根本不明白了解自己是如何运作的\",{\"1\":{\"575\":1}}],[\"因为他们不是在改进轮子\",{\"1\":{\"571\":1}}],[\"因为你认为现有的技术\",{\"1\":{\"771\":1}}],[\"因为你没有将宝贵的注意力置入终将毫无意义的热点中\",{\"1\":{\"734\":1}}],[\"因为你没有将它们视为真正的选择\",{\"1\":{\"584\":1}}],[\"因为你真的躺在家里刷一天手机你就知道了\",{\"1\":{\"695\":1}}],[\"因为你是被出生的\",{\"1\":{\"619\":1}}],[\"因为你现在无法做到这一点\",{\"1\":{\"585\":1}}],[\"因为你听他们谈论过\",{\"1\":{\"575\":1}}],[\"因为你不是你七岁时的自己\",{\"1\":{\"575\":1}}],[\"因为你取不到它的地址\",{\"1\":{\"959\":1}}],[\"因为你取不到\",{\"1\":{\"473\":1}}],[\"因为个人触须容易在职业早期被其他触须强烈的动物性情绪压下\",{\"1\":{\"573\":1}}],[\"因为追求它往往令人觉得难以面对\",{\"1\":{\"573\":1}}],[\"因为生命中时间是极其宝贵的\",{\"1\":{\"571\":1}}],[\"因为很明显他根本不知道自己在说什么\",{\"1\":{\"569\":1}}],[\"因为我并不属于富裕的那批人\",{\"1\":{\"746\":1}}],[\"因为我很怀念在这里的日子\",{\"1\":{\"569\":1}}],[\"因为我很确定社会对这些知之甚少\",{\"1\":{\"569\":1}}],[\"因为我们是通过底层指针去更改值的\",{\"1\":{\"1190\":1}}],[\"因为我们定义的\",{\"1\":{\"1084\":1}}],[\"因为我们只在客户端加一个拦截器\",{\"1\":{\"1097\":1}}],[\"因为我们只要知道http\",{\"1\":{\"1054\":1}}],[\"因为我们只取\",{\"1\":{\"468\":1}}],[\"因为我们为\",{\"1\":{\"992\":1}}],[\"因为我们会多加一系列接口和类\",{\"1\":{\"904\":1}}],[\"因为我们更了解传统职业的发展轨迹\",{\"1\":{\"578\":1}}],[\"因为我们极度痛苦地承认或思考它们\",{\"1\":{\"576\":1}}],[\"因为我们都已经知道了建立索引之后在\",{\"1\":{\"351\":1}}],[\"因为几乎所有人都在使用微信\",{\"1\":{\"553\":1}}],[\"因为没有微信怎么看呢\",{\"1\":{\"552\":1}}],[\"因为学校里面通知的事情都是通过qq来通知的\",{\"1\":{\"551\":1}}],[\"因为身边所有人都用微信\",{\"1\":{\"551\":1}}],[\"因为要健康码\",{\"1\":{\"551\":1}}],[\"因为要复制到所有节点才返回响应\",{\"1\":{\"359\":1}}],[\"因为中心化的互联网\",{\"1\":{\"533\":1}}],[\"因为即使知道了这个问题\",{\"1\":{\"533\":1}}],[\"因为对于当时的政府而言\",{\"1\":{\"532\":1}}],[\"因为对于他们来讲我们的时代就是毫无疑问的正确\",{\"1\":{\"528\":1}}],[\"因为政府甚至意识不到这些是问题\",{\"1\":{\"532\":1}}],[\"因为自己在熟悉的领域中更清楚自己所处的位置以及知晓如何继续下去\",{\"1\":{\"531\":1}}],[\"因为投资是一项当下埋进去的种子\",{\"1\":{\"528\":1}}],[\"因为发展对应的就是未来\",{\"1\":{\"528\":1}}],[\"因为绝对的正确不存在\",{\"1\":{\"528\":1}}],[\"因为已然达到了全面的境界\",{\"1\":{\"525\":1}}],[\"因为第二个遇到问题解决问题其实是一种解决现实问题的思路\",{\"1\":{\"525\":1}}],[\"因为之前的哈希值不存在\",{\"1\":{\"517\":1}}],[\"因为之前说过\",{\"1\":{\"53\":1}}],[\"因为别人翻译过的资料\",{\"1\":{\"512\":1}}],[\"因为该方法涉及到更复杂的特征功能\",{\"1\":{\"481\":1}}],[\"因为切片的索引是通过字节来进行\",{\"1\":{\"475\":1}}],[\"因为比起你代码所拥有的上下文\",{\"1\":{\"450\":1}}],[\"因为比较简单😜\",{\"1\":{\"446\":1}}],[\"因为任何其他原因失败\",{\"1\":{\"448\":1}}],[\"因为文件不存在而失败\",{\"1\":{\"448\":1}}],[\"因为集群里的所有节点都有一个独一无二的名字\",{\"1\":{\"435\":1}}],[\"因为集群中的节点都会将自己的slots数组通过消息发送给集群中的其他节点\",{\"1\":{\"428\":1}}],[\"因为gossip协议消息通常需要一段时间才能传播至整个集群\",{\"1\":{\"435\":1}}],[\"因为两者都是基于raft算法的领头选举leade\",{\"1\":{\"433\":1}}],[\"因为领头sentinel的产生需要半数以上sentinel的支持\",{\"1\":{\"426\":1}}],[\"因为slice不能比较直接\",{\"1\":{\"967\":1}}],[\"因为sentinel需要与多个实例创建多个网络连接\",{\"1\":{\"426\":1}}],[\"因为sentinel执行的工作和普通redis服务器执行的工作不同\",{\"1\":{\"426\":1}}],[\"因为sds内部有个len属性\",{\"1\":{\"393\":1,\"402\":1}}],[\"因为复制工作接下来的几个步骤都必须在主服务器可以正常处理命令请求的状态下才能进行\",{\"1\":{\"425\":1}}],[\"因为复制工作接下来的几个步骤都会以从服务器向主服务器发送命令请求的形式来进行\",{\"1\":{\"425\":1}}],[\"因为服务器可以根据现有的aof文件来恢复数据\",{\"1\":{\"424\":1}}],[\"因为服务器可以根据现有的rdb文件来恢复数据\",{\"1\":{\"424\":1}}],[\"因为服务器在处理文件事件时可能会执行写命令\",{\"1\":{\"422\":1}}],[\"因为aof持久化是通过保存被执行的写命令来记录数据库状态的\",{\"1\":{\"422\":1}}],[\"因为aof文件是持久化比rdb频繁\",{\"1\":{\"416\":1}}],[\"因为redis的事务不过是简单地用队列包裹起了一组redis命令\",{\"1\":{\"424\":1}}],[\"因为redis的命令只能在客户端上下文中执行\",{\"1\":{\"422\":1}}],[\"因为redis的命令请求协议是纯文本格式\",{\"1\":{\"421\":1}}],[\"因为redis使用单线程的方式来执行事务\",{\"1\":{\"424\":1}}],[\"因为res前面的元素顺序对应为abcd\",{\"1\":{\"322\":1}}],[\"因为bgsave可以创建一个新的子进程来保存数据\",{\"1\":{\"417\":1}}],[\"因为bgrewriteaof和bgsave两个命令的实际工作都由子进程执行\",{\"1\":{\"416\":1}}],[\"因为同时执行两个bgsave也会产生竞争条件\",{\"1\":{\"416\":1}}],[\"因为哨兵模式做到了可以监控主从服务器\",{\"1\":{\"413\":1}}],[\"因为直接将\",{\"1\":{\"413\":1}}],[\"因为如果他辞职但短期内找不到另一份工作\",{\"1\":{\"751\":1}}],[\"因为如果你在地图上画的箭头只是指向你未来的1号点\",{\"1\":{\"585\":1}}],[\"因为如果计算机发生停机\",{\"1\":{\"422\":1}}],[\"因为如果先将写操作命令记录到\",{\"1\":{\"413\":1}}],[\"因为如果只剩下一个元素就会出错\",{\"1\":{\"300\":1}}],[\"因为引发升级的新元素的长度总是比整数集合现有所有元素的长度都大\",{\"1\":{\"398\":1}}],[\"因为写数据库一般会先\",{\"1\":{\"384\":1}}],[\"因为简单的\",{\"1\":{\"377\":1}}],[\"因为间隙锁的目的是防止插入幻影记录而提出的\",{\"1\":{\"372\":1}}],[\"因为它的开销很小并且能够轻松地跨不同域使用\",{\"1\":{\"1047\":1}}],[\"因为它是经过数字签名的\",{\"1\":{\"1047\":1}}],[\"因为它解决某些问题真是太好用了\",{\"1\":{\"1008\":1}}],[\"因为它限制了并发访问实例的能力\",{\"1\":{\"899\":1}}],[\"因为它既盗窃又欺骗\",{\"1\":{\"628\":1}}],[\"因为它不可靠\",{\"1\":{\"626\":1}}],[\"因为它误解了星星的含义\",{\"1\":{\"580\":1}}],[\"因为它应该很少使用\",{\"1\":{\"577\":1}}],[\"因为它体现在你的行动中\",{\"1\":{\"577\":1}}],[\"因为它们生活在你的潜意识深处的一个几乎不存在的低层\",{\"1\":{\"576\":1}}],[\"因为它们经常出现在我们的思维中\",{\"1\":{\"576\":1}}],[\"因为它们位于你潜意识更深的层面\",{\"1\":{\"575\":1}}],[\"因为它带来的恐惧不是立即的\",{\"1\":{\"573\":1}}],[\"因为它可能会失败\",{\"1\":{\"450\":1}}],[\"因为它打开一个文件\",{\"1\":{\"448\":1}}],[\"因为它属于快照读\",{\"1\":{\"370\":1}}],[\"因为它会对记录加\",{\"1\":{\"362\":1}}],[\"因为另一个事务中的插入会被阻塞\",{\"1\":{\"369\":1}}],[\"因为表锁的颗粒度太大\",{\"1\":{\"366\":1}}],[\"因为当添加新块时\",{\"1\":{\"516\":1}}],[\"因为当写操作命令执行成功后\",{\"1\":{\"413\":1}}],[\"因为当事务提交了\",{\"1\":{\"370\":1}}],[\"因为当事务\",{\"1\":{\"362\":1}}],[\"因为当执行\",{\"1\":{\"361\":1,\"362\":1}}],[\"因为可收割的注意力是有限的\",{\"1\":{\"647\":1,\"686\":1}}],[\"因为可能刚设置了锁\",{\"1\":{\"436\":1}}],[\"因为可能控制块分配到最后剩下的最后一点点分配不到了\",{\"1\":{\"376\":1}}],[\"因为可能这期间另外一个事务修改了该记录\",{\"1\":{\"362\":1}}],[\"因为可以读到未提交事务修改的数据\",{\"1\":{\"362\":1}}],[\"因为可重复读隔离级别下\",{\"1\":{\"361\":1,\"362\":1}}],[\"因为使用\",{\"1\":{\"361\":1,\"1088\":1}}],[\"因为多个事务同时使用相同的数据时\",{\"1\":{\"361\":1}}],[\"因为事务没提交的时候\",{\"1\":{\"360\":1}}],[\"因为不了解历史\",{\"1\":{\"528\":1}}],[\"因为不涉及磁盘\",{\"1\":{\"358\":1}}],[\"因为不可能有前一天推出来\",{\"1\":{\"252\":1}}],[\"因为数据还缓存在文件系统的\",{\"1\":{\"358\":1}}],[\"因为操作系统的文件系统中有个\",{\"1\":{\"357\":1,\"360\":1}}],[\"因为索引操作\",{\"1\":{\"474\":1}}],[\"因为索引从\",{\"1\":{\"447\":1}}],[\"因为索引只能定位到磁盘中的页\",{\"1\":{\"376\":1}}],[\"因为索引字段频繁修改\",{\"1\":{\"352\":1}}],[\"因为索引是会占用物理空间的\",{\"1\":{\"352\":1}}],[\"因为每个模块上都有独立的团队工作\",{\"1\":{\"722\":1}}],[\"因为每个物品\",{\"1\":{\"239\":1}}],[\"因为每天活在网络虚拟世界里的时间几乎比现实世界里更多\",{\"1\":{\"551\":1}}],[\"因为每次经济危机时\",{\"1\":{\"596\":1}}],[\"因为每次访问时\",{\"1\":{\"414\":1}}],[\"因为每次插入一条新记录\",{\"1\":{\"353\":1}}],[\"因为每次增删改索引\",{\"1\":{\"350\":1}}],[\"因为无重复字符的最长子串是\",{\"1\":{\"320\":2}}],[\"因为字节数组比较方便比较\",{\"1\":{\"277\":1}}],[\"因为情况少了一点\",{\"1\":{\"268\":1}}],[\"因为在测试过程中可以对具体类型进行模拟或存根测试\",{\"1\":{\"881\":1}}],[\"因为在这里投资人可以收获丰厚\",{\"1\":{\"674\":1}}],[\"因为在每一个配置纪元里面\",{\"1\":{\"433\":1}}],[\"因为在进行渐进式rehash的过程中\",{\"1\":{\"396\":1}}],[\"因为在可重复读的隔离级别下\",{\"1\":{\"364\":1}}],[\"因为在下面dp\",{\"1\":{\"267\":1}}],[\"因为在递推公式推导的过程中\",{\"1\":{\"231\":1}}],[\"因为dp\",{\"1\":{\"265\":1}}],[\"因为也就是把以i\",{\"1\":{\"264\":1}}],[\"因为找到了一个相同的字符\",{\"1\":{\"263\":1}}],[\"因为卖出价格需要大于买入价格\",{\"1\":{\"252\":1}}],[\"因为物品价值不会是负数\",{\"1\":{\"240\":1}}],[\"因为都会被覆盖\",{\"1\":{\"235\":1}}],[\"因为背包容量为0所背的物品的最大价值就是0\",{\"1\":{\"236\":1}}],[\"因为背包容量放足够放编号0物品\",{\"1\":{\"235\":1}}],[\"因为背包容量比编号0的物品重量还小\",{\"1\":{\"235\":1}}],[\"因为i是可以被重复选取的\",{\"1\":{\"211\":1}}],[\"因为起始位置是从1开始的而不是0\",{\"1\":{\"208\":1}}],[\"因为回溯法解决的都是在集合中递归查找子集\",{\"1\":{\"206\":1}}],[\"因为目前pusd的发行量相对于usdt\",{\"1\":{\"187\":1}}],[\"因为是超额抵押\",{\"1\":{\"185\":1}}],[\"因为是中心化的\",{\"1\":{\"184\":1}}],[\"因为美元是全球储备的稳定币\",{\"1\":{\"182\":1}}],[\"因为稳定币会和现实世界的某些资产相挂钩\",{\"1\":{\"181\":1}}],[\"因为这会给国家和社会继续添乱\",{\"1\":{\"795\":1}}],[\"因为这会给你带来危险\",{\"1\":{\"795\":1}}],[\"因为这里完全满足我当初的判断\",{\"1\":{\"759\":1}}],[\"因为这意味着收获需要等许久之后\",{\"1\":{\"674\":1}}],[\"因为这段时间气候很奇怪\",{\"1\":{\"609\":1}}],[\"因为这么点小事成为一个抱怨的键盘侠实在得不偿失\",{\"1\":{\"592\":1}}],[\"因为这似乎是人为了人最基本的权力所作出的斗争\",{\"1\":{\"534\":1}}],[\"因为这就是一个典型的因为发展而得到正确的事件\",{\"1\":{\"528\":1}}],[\"因为这也更能达到全面的境界\",{\"1\":{\"525\":1}}],[\"因为这种使用方式不安全\",{\"1\":{\"457\":1}}],[\"因为这是市场行为\",{\"1\":{\"709\":1}}],[\"因为这是主观比较\",{\"1\":{\"683\":1}}],[\"因为这是函数的最后一个表达式\",{\"1\":{\"450\":1}}],[\"因为这是一条update语句\",{\"1\":{\"355\":1}}],[\"因为这些信息也会被消息接收者用到\",{\"1\":{\"435\":1}}],[\"因为这些路径已经超出了上下文的范围\",{\"1\":{\"60\":1}}],[\"因为这时不可能执行部分重同步\",{\"1\":{\"425\":1}}],[\"因为这样做才可以在一开始没有反馈的情况下坚持下去\",{\"1\":{\"740\":1}}],[\"因为这样可以让我们人类的知识可以跨越时间和空间传承下来\",{\"1\":{\"605\":1}}],[\"因为这样会产生大量的\",{\"1\":{\"357\":1}}],[\"因为这样属于同时参与了多笔交易\",{\"1\":{\"253\":1}}],[\"因为这样的调整过程是和传统金融领域的过程相似的\",{\"1\":{\"176\":1}}],[\"因为市场的供求关系\",{\"1\":{\"175\":1}}],[\"因为pusd相较于usdt总的流通量更少\",{\"1\":{\"175\":1}}],[\"因为\",{\"1\":{\"63\":1,\"258\":1,\"259\":1,\"291\":1,\"297\":1,\"352\":1,\"355\":1,\"358\":1,\"360\":2,\"393\":2,\"402\":2,\"411\":1,\"413\":1,\"436\":1,\"451\":1,\"470\":1,\"473\":1,\"474\":1,\"575\":1,\"1047\":1,\"1137\":1,\"1172\":2}}],[\"因为镜像到本地后\",{\"1\":{\"51\":1}}],[\"因为镜像包含操作系统完整的\",{\"1\":{\"46\":1}}],[\"因为各个厂家都差不多类似的情况\",{\"1\":{\"9\":1}}],[\"而第三个参数是用于帮助信息的描述\",{\"1\":{\"1161\":1}}],[\"而第一个向主节点要求投票的从节点将获得主节点的投票\",{\"1\":{\"433\":1}}],[\"而后加入的可能\",{\"1\":{\"1146\":1}}],[\"而初始化的变量是结构体指针\",{\"1\":{\"1138\":1}}],[\"而剩下的两种方式为什么一种能够通过编译\",{\"1\":{\"1138\":1}}],[\"而网关是我们不可控的\",{\"1\":{\"1073\":1}}],[\"而网络通信功能完全采用go语言的net\",{\"1\":{\"1057\":1}}],[\"而网上转账是即时的\",{\"1\":{\"771\":1}}],[\"而c\",{\"1\":{\"1055\":1}}],[\"而clusterstate\",{\"1\":{\"428\":1}}],[\"而client属性则记录了订阅模式的客户端\",{\"1\":{\"423\":1}}],[\"而handler接口只有一个servehttp方法\",{\"1\":{\"1055\":1}}],[\"而ht\",{\"1\":{\"396\":1}}],[\"而access\",{\"1\":{\"1047\":1}}],[\"而用户则从桶中取\",{\"1\":{\"1033\":1}}],[\"而foreach在代码库中这是这样的形式\",{\"1\":{\"1019\":1}}],[\"而剪头上标注的文字代表触发状态转换的\",{\"1\":{\"1009\":1}}],[\"而晚上则减小发送速率\",{\"1\":{\"979\":1}}],[\"而红色表示没有\",{\"1\":{\"969\":1}}],[\"而希尔则是比较gap\",{\"1\":{\"947\":1}}],[\"而懒汉式单例模式更加适合于对象创建后可能会被修改的场景\",{\"1\":{\"900\":1}}],[\"而无需更改客户端代码\",{\"1\":{\"881\":1}}],[\"而无需关心对象是如何创建的\",{\"1\":{\"881\":1}}],[\"而无需去管字符串从人类语言角度看长什么样\",{\"1\":{\"474\":1}}],[\"而作出这样决策的人显然不会只冒险一次\",{\"1\":{\"806\":1}}],[\"而有些信息则是几乎没有衍生价值\",{\"1\":{\"677\":1}}],[\"而应该叫做笔记\",{\"1\":{\"660\":2}}],[\"而应该将其看作是一个后天获得的东西\",{\"1\":{\"623\":1}}],[\"而猜想拒绝了证据的重要性\",{\"1\":{\"657\":1}}],[\"而互联网上充斥着大量的无用信息\",{\"1\":{\"647\":1,\"686\":1}}],[\"而信息也分为有繁殖\",{\"1\":{\"646\":1}}],[\"而生产资料是什么\",{\"1\":{\"646\":1,\"677\":1}}],[\"而命运也从一次次的选择中决定\",{\"1\":{\"631\":1}}],[\"而反过来说\",{\"1\":{\"631\":1}}],[\"而批判的思考着会有下面的方式质疑所有想法\",{\"1\":{\"626\":1}}],[\"而思考有助于超越自身而达成知识或采取行动的目标\",{\"1\":{\"626\":1}}],[\"而聪明排在后面\",{\"1\":{\"622\":1}}],[\"而会背离那些对金钱没有认知\",{\"1\":{\"615\":1}}],[\"而会背离那些对金钱没有认真对待的人\",{\"1\":{\"614\":1}}],[\"而集体注意力的缺失又是数字技术所带来的不幸\",{\"1\":{\"611\":1}}],[\"而想让读过的信息整理成有用的知识需要反向地塑造我成为一个可以只字不差地阅读的人\",{\"1\":{\"605\":1}}],[\"而持续不断地为自己创造人生地图的负担也从未轻松\",{\"1\":{\"588\":1}}],[\"而老年人最常给出的建议是\",{\"1\":{\"588\":1}}],[\"而采取大胆\",{\"1\":{\"586\":1}}],[\"而急于迅速显露成功的社交触手则应该被视为明显的警示信号\",{\"1\":{\"583\":1}}],[\"而顽固或智力懒散\",{\"1\":{\"583\":1}}],[\"而喜欢社交的人会随着时间的推移投入更多的社交时间\",{\"1\":{\"581\":1}}],[\"而他们却对此毫不知情\",{\"1\":{\"581\":1}}],[\"而他人再以相同方式影响更多人\",{\"1\":{\"571\":1}}],[\"而厨师们的进步速度非常缓慢\",{\"1\":{\"581\":1}}],[\"而厨师们通过不断循环迅速提高\",{\"1\":{\"581\":1}}],[\"而厨师则通过按照别人的食谱来得出结论\",{\"1\":{\"581\":1}}],[\"而大多数人类似的看法就组成了大众的看法\",{\"1\":{\"614\":1}}],[\"而大多数试图在这些道路上取得成功的人可能都在用过时的规则手册和策略指南玩游戏\",{\"1\":{\"579\":1}}],[\"而大公司也在尽可能地多获得用户所创造的数据\",{\"1\":{\"533\":1}}],[\"而控制垃圾桶是正直和内心力量的重要组成部分\",{\"1\":{\"577\":1}}],[\"而对底层架子过于吝啬\",{\"1\":{\"577\":1}}],[\"而每种方法代表了当\",{\"1\":{\"1034\":1}}],[\"而每种渴望的反面都伴随着对相反事物的恐惧\",{\"1\":{\"577\":1}}],[\"而每一天过去\",{\"1\":{\"587\":1}}],[\"而每个人的审美不一样\",{\"1\":{\"683\":1}}],[\"而每个哈希表节点就保存了字典中的多个键值对\",{\"1\":{\"395\":1}}],[\"而每个控制块包含着对应的缓冲页地址\",{\"1\":{\"377\":1}}],[\"而每个仓库下面有多个镜像\",{\"1\":{\"73\":1}}],[\"而更多来自于你的社交触角\",{\"1\":{\"574\":1}}],[\"而实际上每个月拮据\",{\"1\":{\"573\":1}}],[\"而实际的复制工作将在ok返回之后才真正开始执行\",{\"1\":{\"425\":1}}],[\"而其他触须都在设想如果有十亿资产后自己会怎么浪\",{\"1\":{\"573\":1}}],[\"而某些动机与其他动机存在冲突\",{\"1\":{\"573\":1}}],[\"而我也并不想用独立思考能让人生更完善这种看起来比较虚的理由\",{\"1\":{\"680\":1}}],[\"而我并不是其中之一\",{\"1\":{\"572\":1}}],[\"而我们大多数人在成年后也并没有在路径规划方面取得多大进步\",{\"1\":{\"570\":1}}],[\"而我们就像蝌蚪\",{\"1\":{\"570\":1}}],[\"而选择职业路径\",{\"1\":{\"571\":1}}],[\"而现在我们所接受的信息\",{\"1\":{\"642\":1}}],[\"而现在的比赛更偏重速度而不是身高和力量\",{\"1\":{\"579\":1}}],[\"而现在的生活却相对稳定\",{\"1\":{\"574\":1}}],[\"而现在\",{\"1\":{\"570\":1}}],[\"而你对此无能为力\",{\"1\":{\"705\":1}}],[\"而你不仅仅是网站上的一个数字\",{\"1\":{\"703\":1}}],[\"而你没有优先考虑的渴望会拿出吉他\",{\"1\":{\"587\":1}}],[\"而你优先考虑的渴望可能不会感到太多满足\",{\"1\":{\"587\":1}}],[\"而你并不认为自己真的那么在乎这些渴望\",{\"1\":{\"577\":1}}],[\"而你更加贪婪\",{\"1\":{\"576\":1}}],[\"而你更希望对当地社区产生切实的积极影响的一面则被那部分对今天数以百万计没有清洁水可用的人们感到冷漠和无情\",{\"1\":{\"573\":1}}],[\"而你可以纠正它\",{\"1\":{\"575\":1}}],[\"而你一生都在做一名职业学生\",{\"1\":{\"570\":1}}],[\"而你几乎从头到尾都听不进去\",{\"1\":{\"569\":1}}],[\"而你若与这位朋友一起虚度\",{\"1\":{\"500\":1}}],[\"而又不会向客户端暴露其内部的复杂性\",{\"1\":{\"927\":1}}],[\"而又不想与其他对象产生紧密的耦合的场景\",{\"1\":{\"845\":1}}],[\"而又不想与其他对象产生紧密的耦合时\",{\"1\":{\"843\":1}}],[\"而又无需使代码依赖它们所属的类\",{\"1\":{\"887\":1}}],[\"而又为什么他们都死了\",{\"1\":{\"798\":1}}],[\"而又因为ai时代的到来\",{\"1\":{\"631\":1}}],[\"而又\",{\"1\":{\"551\":1}}],[\"而历史上这样的斗争都旷日持久\",{\"1\":{\"534\":1}}],[\"而那些书架上的说明手册通常会告诉你过去的游戏是怎么玩的\",{\"1\":{\"579\":1}}],[\"而那些创造了旧互联网网站的人也正在行动\",{\"1\":{\"534\":1}}],[\"而那个人懂\",{\"1\":{\"575\":1}}],[\"而那之下政府几乎荡然无存\",{\"1\":{\"533\":1}}],[\"而自己熟知的领域却不过是整个世界的一瞥\",{\"1\":{\"531\":1}}],[\"而随之而来的现实世界并没有最优解\",{\"1\":{\"531\":1}}],[\"而时间记录这个东西如果把每天的过程都写上\",{\"1\":{\"500\":1}}],[\"而时间事件则负责执行像servercron函数这样需要定时运行的函数\",{\"1\":{\"422\":1}}],[\"而之后的println\",{\"1\":{\"468\":1}}],[\"而之后接收到的所有设置要求都会被目标sentinel拒绝\",{\"1\":{\"426\":1}}],[\"而reflect\",{\"1\":{\"1194\":1}}],[\"而redis\",{\"1\":{\"431\":1}}],[\"而rust没有异常\",{\"1\":{\"446\":1}}],[\"而结\",{\"1\":{\"435\":1}}],[\"而发送fail消息可以让集群里的所有节点立即知道某个主节点已下线\",{\"1\":{\"435\":1}}],[\"而从节点则用于复制某个主节点\",{\"1\":{\"433\":1}}],[\"而从服务器只要一直接收并执行主服务器发来的写命令\",{\"1\":{\"425\":1}}],[\"而从服务器则会将这个运行id保存起来\",{\"1\":{\"425\":1}}],[\"而从服务器一般是只读\",{\"1\":{\"413\":1}}],[\"而槽i又没有指派给这个节点的话\",{\"1\":{\"432\":1}}],[\"而另一部分键值对则保存在目标节点里面\",{\"1\":{\"432\":1}}],[\"而另一些访问很少的数据\",{\"1\":{\"377\":1}}],[\"而所谓的节点转向实际上就是换一个socket来发送命令\",{\"1\":{\"429\":1}}],[\"而通过将所有槽的指派信息保存在clusterstate\",{\"1\":{\"428\":1}}],[\"而删除断开时长超过down\",{\"1\":{\"426\":1}}],[\"而sentinel1却认为master仍然在\",{\"1\":{\"426\":1}}],[\"而sentinel2则载入了以下配置\",{\"1\":{\"426\":1}}],[\"而sentinel\",{\"1\":{\"426\":1}}],[\"而m\",{\"1\":{\"426\":1}}],[\"而主服务器则会向从服务器返回命令回复\",{\"1\":{\"425\":1}}],[\"而主服务器在接受\",{\"1\":{\"425\":1}}],[\"而offset则是主服务器当前的复制偏移量\",{\"1\":{\"425\":1}}],[\"而offset则是从服务器当前的复制偏移量\",{\"1\":{\"425\":1}}],[\"而空白数据库总是一致的\",{\"1\":{\"424\":2}}],[\"而很少会在实际的生产环境中出现\",{\"1\":{\"424\":1}}],[\"而字典的值则是一个链表\",{\"1\":{\"424\":1}}],[\"而载入aof文件时所使用的命令直接来源于aof文件而不是网络连接\",{\"1\":{\"422\":1}}],[\"而这种能力的提升将进一步增加他们在知识经济中的竞争力和市场价值\",{\"1\":{\"646\":1}}],[\"而这种影响力和创造力也成为了他们获取经济回报和财富的来源\",{\"1\":{\"646\":1}}],[\"而这种集体注意力的缺失导致的危害可能让整个人类群体都遭受目前无法想象的灾难\",{\"1\":{\"610\":1}}],[\"而这些生产资料对于社会的发展和个人的财富创造起着至关重要的作用\",{\"1\":{\"646\":1}}],[\"而这些品质并不总是与纯粹的智力相关\",{\"1\":{\"581\":1}}],[\"而这些广告其实是基于用户数据产生的分发\",{\"1\":{\"533\":1}}],[\"而这些镜像是别的镜像的依赖\",{\"1\":{\"53\":1}}],[\"而这个特质通常与女人联系在一起\",{\"1\":{\"653\":1}}],[\"而这个食谱本身几乎没有变化\",{\"1\":{\"581\":1}}],[\"而这个\",{\"1\":{\"414\":1}}],[\"而做这个工作的就是过期键值删除策略\",{\"1\":{\"414\":1}}],[\"而并非\",{\"1\":{\"412\":1}}],[\"而privdata属性则保存了需要传给那些类型特定函数的可选参数\",{\"1\":{\"395\":1}}],[\"而将预读机制去掉\",{\"1\":{\"377\":1}}],[\"而末尾淘汰的页\",{\"1\":{\"377\":1}}],[\"而当\",{\"1\":{\"377\":1}}],[\"而当这些镜像无法直接满足需求时\",{\"1\":{\"55\":1}}],[\"而链表尾节点是最久最没被使用的\",{\"1\":{\"377\":1}}],[\"而普通的\",{\"1\":{\"368\":1}}],[\"而出现备份文件的数据与预期的不一样\",{\"1\":{\"364\":1}}],[\"而写入数据则是随机写\",{\"1\":{\"357\":1}}],[\"而在student包里却是import\",{\"1\":{\"1084\":1}}],[\"而在其他领域则毫无天赋\",{\"1\":{\"674\":1}}],[\"而在1982年\",{\"1\":{\"643\":1}}],[\"而在移民中俄罗斯人的平均心理年龄是11\",{\"1\":{\"620\":1}}],[\"而在谱系的右侧\",{\"1\":{\"588\":1}}],[\"而在改变你对运气实际上涉及多少的看法后\",{\"1\":{\"584\":1}}],[\"而在\",{\"1\":{\"353\":1,\"358\":1,\"1073\":1}}],[\"而本题要求的是回文子序列\",{\"1\":{\"268\":1}}],[\"而本题求自增子序列\",{\"1\":{\"217\":1}}],[\"而完全背包的物品是可以添加多次的\",{\"1\":{\"241\":1}}],[\"而不包含具体的键类型和值类型信息\",{\"1\":{\"1188\":1}}],[\"而不用到处找哪里还要改\",{\"1\":{\"1010\":1}}],[\"而不用饮用整个集合\",{\"1\":{\"468\":1}}],[\"而不改变其他模块\",{\"1\":{\"722\":1}}],[\"而不由我们的一厢情愿而改变\",{\"1\":{\"637\":1}}],[\"而不太天赋的人则进步较慢\",{\"1\":{\"581\":1}}],[\"而不仅仅是对巨额财富的追求\",{\"1\":{\"574\":1}}],[\"而不需要在集合中添加新的方法\",{\"1\":{\"825\":1}}],[\"而不需要修改集合的代码\",{\"1\":{\"825\":1}}],[\"而不需要暴露集合的内部表示\",{\"1\":{\"824\":1}}],[\"而不需要等待整个插入语句执行完后才释放锁\",{\"1\":{\"369\":1}}],[\"而不需要通过聚簇索引查询获得\",{\"1\":{\"353\":1}}],[\"而不是具体的命名类型\",{\"1\":{\"1188\":2}}],[\"而不是所有字段\",{\"1\":{\"1088\":1}}],[\"而不是某个具体示例\",{\"1\":{\"982\":1}}],[\"而不是它的初始化代码中引用外部或自行创建依赖项\",{\"1\":{\"981\":1}}],[\"而不是在现有的字节切片中修改值\",{\"1\":{\"1199\":1}}],[\"而不是在其内部隐式调用全局变量\",{\"1\":{\"981\":1}}],[\"而不是在消费内容\",{\"1\":{\"738\":1}}],[\"而不是直接通过构造函数创建对象\",{\"1\":{\"880\":1}}],[\"而不是直接的宏调用\",{\"1\":{\"447\":1}}],[\"而不是较重且复杂的建造者模式\",{\"1\":{\"873\":1}}],[\"而不是使用现代工具如\",{\"1\":{\"772\":1}}],[\"而不是使用网上银行\",{\"1\":{\"771\":1}}],[\"而不是消费者\",{\"1\":{\"738\":1}}],[\"而不是相反\",{\"1\":{\"724\":1}}],[\"而不是抱有这样的幻想\",{\"1\":{\"717\":1}}],[\"而不是将它们留在交易所\",{\"1\":{\"701\":1}}],[\"而不是公开出去给其他人看的\",{\"1\":{\"660\":1}}],[\"而不是被创造的\",{\"0\":{\"637\":1}}],[\"而不是被初始值覆盖了\",{\"1\":{\"236\":1}}],[\"而不是借助有意识的精神活动产生的\",{\"1\":{\"626\":1}}],[\"而不是仅仅声称自己是一个独立的人\",{\"1\":{\"623\":1}}],[\"而不是对ai说\",{\"1\":{\"605\":1}}],[\"而不是压力\",{\"1\":{\"585\":1}}],[\"而不是一条直线和可预测的隧道\",{\"1\":{\"585\":1}}],[\"而不是别人告诉你什么是垃圾\",{\"1\":{\"577\":1}}],[\"而不是不同的\",{\"1\":{\"528\":1}}],[\"而不是操作原来的字符串\",{\"1\":{\"479\":1}}],[\"而不是让整个进程中止\",{\"1\":{\"448\":1}}],[\"而不是实际的数据\",{\"1\":{\"413\":1}}],[\"而不是旧值和新值的混合\",{\"1\":{\"361\":1}}],[\"而不会改动上一层\",{\"1\":{\"55\":1}}],[\"而j\",{\"1\":{\"231\":1}}],[\"而39\",{\"1\":{\"212\":1}}],[\"而市场上相较于其他稳定币更少\",{\"1\":{\"175\":1}}],[\"而usdt的数量不断减少\",{\"1\":{\"175\":1}}],[\"而交易者则受益于改善的市场流动性和减少的滑点\",{\"1\":{\"151\":1}}],[\"而贷款人则可以从提供的资金中赚取利息\",{\"1\":{\"151\":1}}],[\"而如果mheap没有资源了\",{\"1\":{\"1149\":1}}],[\"而如\",{\"1\":{\"60\":1}}],[\"而上面的这种写法\",{\"1\":{\"58\":1}}],[\"而容器同样也是多层存储\",{\"1\":{\"55\":1}}],[\"而容器内的应用进程直接运行于宿主的内核\",{\"1\":{\"45\":1}}],[\"而一个镜像可以有多个标签\",{\"1\":{\"55\":1}}],[\"而旧的镜像上的这个名称则被取消\",{\"1\":{\"52\":1}}],[\"而\",{\"1\":{\"51\":1,\"57\":1,\"60\":2,\"263\":1,\"264\":1,\"291\":1,\"358\":1,\"362\":1,\"370\":1,\"413\":1,\"426\":2,\"429\":1,\"432\":2,\"450\":1,\"578\":1,\"721\":1,\"991\":1,\"1073\":3,\"1134\":1,\"1142\":1,\"1173\":1}}],[\"而镜像名称是\",{\"1\":{\"49\":1}}],[\"而标签就常用于对应该软件的各个版本\",{\"1\":{\"48\":1}}],[\"而是按照大小从8b到32kb分配了大概67\",{\"1\":{\"1149\":1}}],[\"而是应该通过通信的方式共享内存\",{\"1\":{\"1136\":1}}],[\"而是应该先开始再学习\",{\"1\":{\"663\":1}}],[\"而是让大家有个印象\",{\"1\":{\"1084\":1}}],[\"而是让我犯的错误成为我自己的错误\",{\"1\":{\"588\":1}}],[\"而是去执行这个目标下面的命令\",{\"1\":{\"1026\":1}}],[\"而是通过依赖注入的方式引入依赖\",{\"1\":{\"981\":1}}],[\"而是通过原始的写作方式来证明自己思想\",{\"1\":{\"605\":1}}],[\"而是用ut\",{\"1\":{\"968\":1}}],[\"而是向工厂对象请求实例\",{\"1\":{\"879\":1}}],[\"而是他们在互联网上浪费太多时间\",{\"1\":{\"789\":1}}],[\"而是彻底放松大脑的活动\",{\"1\":{\"787\":1}}],[\"而是陷入了大家这样那我这样也没错的误区\",{\"1\":{\"743\":1}}],[\"而是选择了\",{\"1\":{\"721\":1}}],[\"而是是否有选择的问题\",{\"1\":{\"709\":1}}],[\"而是强迫用户承担损失\",{\"1\":{\"706\":1}}],[\"而是放松身心\",{\"1\":{\"698\":1}}],[\"而是说独立思考可以让你意识到这一点\",{\"1\":{\"680\":1}}],[\"而是说真实性不能被确定\",{\"1\":{\"656\":1}}],[\"而是说每个人都可以实现引人注目的改善\",{\"1\":{\"627\":1}}],[\"而是因为金钱是在社会中流通的\",{\"1\":{\"615\":1}}],[\"而是有更重要的事情要做\",{\"1\":{\"609\":1}}],[\"而是传承\",{\"1\":{\"598\":1}}],[\"而是坚持的一部分\",{\"1\":{\"588\":1}}],[\"而是一系列长期的科学实验\",{\"1\":{\"585\":1}}],[\"而是一个庞大\",{\"1\":{\"585\":1}}],[\"而是一个对你有巨大心理影响力的人\",{\"1\":{\"573\":1}}],[\"而是要考虑到你在每个项目上的改进潜力\",{\"1\":{\"583\":1}}],[\"而是要从零开始创造轮子\",{\"1\":{\"571\":1}}],[\"而是我们对待它的方式存在问题\",{\"1\":{\"583\":1}}],[\"而是我们要取dp\",{\"1\":{\"257\":1}}],[\"而是点a的位置的一部分\",{\"1\":{\"581\":1}}],[\"而是意味着在整个演员游戏中变得像大多数电影明星在他们获得突破时变得优秀\",{\"1\":{\"580\":1}}],[\"而是展示你对现实的最佳理解\",{\"1\":{\"578\":1}}],[\"而是基于你认为你想要的东西\",{\"1\":{\"578\":1}}],[\"而是被冒名顶替者取代了\",{\"1\":{\"576\":1}}],[\"而是你离橙色线有多近\",{\"1\":{\"575\":1}}],[\"而是其他原因\",{\"1\":{\"574\":1}}],[\"而是随时间积聚\",{\"1\":{\"573\":1}}],[\"而是\",{\"1\":{\"571\":1}}],[\"而是根据为我们定义的成功方式\",{\"1\":{\"570\":1}}],[\"而是根据moved错误自动进行节点转向\",{\"1\":{\"429\":1}}],[\"而是全神贯注地聆听他的每一句话\",{\"1\":{\"569\":1}}],[\"而是时间\",{\"1\":{\"566\":1}}],[\"而是假装它们不存在\",{\"1\":{\"534\":1}}],[\"而是这一年里每天的生活都差不多\",{\"1\":{\"500\":1}}],[\"而是取到了这个字符三个字节中的第一个字节\",{\"1\":{\"473\":1}}],[\"而是引用了s的一部分\",{\"1\":{\"468\":1}}],[\"而是使用\",{\"1\":{\"450\":1}}],[\"而是对实际情况的准确描述\",{\"1\":{\"585\":1}}],[\"而是对应你的生活方式触角或社交触角所要求的一定水平的奢华的保证\",{\"1\":{\"574\":1}}],[\"而是对\",{\"1\":{\"437\":1}}],[\"而是自动根据错误提供的ip地址和端口进行转向动作\",{\"1\":{\"432\":1}}],[\"而是将这个命令放入一个事务队列里面\",{\"1\":{\"424\":1}}],[\"而是将buffer\",{\"1\":{\"377\":1}}],[\"而是主服务器自己在本地执行完命令后\",{\"1\":{\"413\":1}}],[\"而是需要\",{\"1\":{\"386\":1}}],[\"而是再执行完插入语句后就会立即释放\",{\"1\":{\"369\":1}}],[\"而是创建\",{\"1\":{\"362\":1}}],[\"而是先写日志\",{\"1\":{\"357\":1}}],[\"而是沿用前一天买入的状态\",{\"1\":{\"254\":1}}],[\"而是直接由数字资产抵押\",{\"1\":{\"185\":1}}],[\"而是复制\",{\"1\":{\"60\":1}}],[\"而是在协议内部记录用户的存款份额\",{\"1\":{\"150\":1}}],[\"而是在服务端\",{\"1\":{\"60\":1}}],[\"而是在定义每一层该如何构建\",{\"1\":{\"58\":1}}],[\"而是仅仅使用一个\",{\"1\":{\"58\":1}}],[\"而是仅在当前层标记为该文件已删除\",{\"1\":{\"46\":1}}],[\"而是由一组文件系统组成\",{\"1\":{\"46\":1}}],[\"而docker镜像就先当于是一个\",{\"1\":{\"46\":1}}],[\"而且需要存储在内存数据库中快速查找\",{\"1\":{\"1045\":1}}],[\"而且需要对这些对象执行不同的操作\",{\"1\":{\"868\":1}}],[\"而且需要对这些对象执行不同的操作时\",{\"1\":{\"866\":1}}],[\"而且易于维护\",{\"1\":{\"1010\":1}}],[\"而且学会了就爱不释手\",{\"1\":{\"1008\":1}}],[\"而且还扩展了函数的功能\",{\"1\":{\"979\":1}}],[\"而且还会各种商业知识\",{\"1\":{\"746\":1}}],[\"而且还会时不时觉得不应该这样堕落下去\",{\"1\":{\"695\":1}}],[\"而且我们还可以统计被mock的函数\",{\"1\":{\"960\":1}}],[\"而且有序的时候效率比较高\",{\"1\":{\"946\":1}}],[\"而且有一个趋势\",{\"1\":{\"631\":1}}],[\"而且可以对它们进行保存\",{\"1\":{\"819\":1}}],[\"而且在区块链领域尤其如此\",{\"1\":{\"801\":1}}],[\"而且在计算机编程领域有着绝对的专长\",{\"1\":{\"673\":1}}],[\"而且使用区块链来做并不会使之前的效率更高\",{\"1\":{\"800\":1}}],[\"而且相对来看管理者的重要性比底下的员工高得多\",{\"1\":{\"792\":1}}],[\"而且不能举一反三\",{\"1\":{\"776\":1}}],[\"而且不需要联网\",{\"1\":{\"493\":1}}],[\"而且落后太多\",{\"1\":{\"771\":1}}],[\"而且所有交易所流通的币最终都会归屯币者所有\",{\"1\":{\"767\":1}}],[\"而且当前的生产力远比十年前高\",{\"1\":{\"764\":1}}],[\"而且为了证明某个消费品比另一个哪方面更好下很足的功夫\",{\"1\":{\"743\":1}}],[\"而且它们往往过于严格地执行架构约束\",{\"1\":{\"725\":1}}],[\"而且从长远来看是自己的命运并不掌握在自己的手中\",{\"1\":{\"717\":1}}],[\"而且你不是一个慈善机构\",{\"1\":{\"751\":1}}],[\"而且你每天都要面对这个事实\",{\"1\":{\"683\":1}}],[\"而且你还是一个处于特定时间特定地点的人类\",{\"1\":{\"619\":1}}],[\"而且他们会很感激能为你打扫房子\",{\"1\":{\"751\":1}}],[\"而且他还有一座属于自己的图书馆\",{\"1\":{\"669\":1}}],[\"而且他还通过他的知识财富自由\",{\"1\":{\"669\":1}}],[\"而且他说的每一句话都已经过时\",{\"1\":{\"569\":1}}],[\"而且知识可以作为一种资产并且具有增值潜力\",{\"1\":{\"649\":1}}],[\"而且会变得越来越重要\",{\"1\":{\"646\":1}}],[\"而且会涉及许多前置引用\",{\"1\":{\"467\":1}}],[\"而且更可怕的是这一切似乎是无解\",{\"1\":{\"631\":1}}],[\"而且更关键的是大部分情况下还没办法完全删除\",{\"1\":{\"494\":1}}],[\"而且是完全不需要经过自己大脑的刻意训练的练习就让我们的手自动去习惯这样一个动作\",{\"1\":{\"631\":1}}],[\"而且是一种错觉\",{\"1\":{\"585\":1}}],[\"而且激发新思想的流淌\",{\"1\":{\"627\":1}}],[\"而且表述不完备\",{\"1\":{\"605\":1}}],[\"而且几乎损失了我所有的比特币和以太坊\",{\"1\":{\"591\":1}}],[\"而且永远不会完全完成\",{\"1\":{\"575\":1}}],[\"而且随着时间的增长\",{\"1\":{\"551\":1}}],[\"而且比以前更好地回来\",{\"1\":{\"534\":1}}],[\"而且即便是网速已经不是问题的今天\",{\"1\":{\"533\":1}}],[\"而且推荐是英文版\",{\"1\":{\"512\":1}}],[\"而且这些操作不依赖于对象结构的具体类型时\",{\"1\":{\"866\":1}}],[\"而且这些行为可以根据不同的条件进行选择时\",{\"1\":{\"854\":1}}],[\"而且这些状态之间的转换逻辑复杂时\",{\"1\":{\"848\":1}}],[\"而且这些方案也比较复杂\",{\"1\":{\"387\":1}}],[\"而且这个列表不包括与\",{\"1\":{\"704\":1}}],[\"而且这项技术还尚在发展中\",{\"1\":{\"509\":1}}],[\"而且redis的读写性能很高\",{\"1\":{\"436\":1}}],[\"而且源节点和目标节点都可以继续处理命令请求\",{\"1\":{\"431\":1}}],[\"而且也不会导致死锁问题\",{\"1\":{\"412\":1}}],[\"而且也没有进行硬件虚拟\",{\"1\":{\"45\":1}}],[\"而且能保存图片\",{\"1\":{\"393\":1,\"402\":1}}],[\"而且很多mixin用户完全不了解底层的mixin\",{\"1\":{\"592\":1}}],[\"而且很多情况下\",{\"1\":{\"383\":1}}],[\"而且很多运行时不需要的东西\",{\"1\":{\"58\":1}}],[\"而且记录锁是有\",{\"1\":{\"371\":1}}],[\"而且意向锁之间也不会发生冲突\",{\"1\":{\"368\":1}}],[\"而且由于\",{\"1\":{\"364\":1}}],[\"而且事务在执行过程中发生错误\",{\"1\":{\"361\":1}}],[\"而且磁盘的运行速度远慢于内存\",{\"1\":{\"357\":1}}],[\"而且本题的去重去除的其实是同一树层下相同的元素\",{\"1\":{\"217\":1}}],[\"而且无抵押资产\",{\"1\":{\"186\":1}}],[\"而且具体的抵押代码是通过区块链上的智能合约实现的\",{\"1\":{\"185\":1}}],[\"而且并不要求必须位于上下文目录中\",{\"1\":{\"60\":1}}],[\"而且\",{\"1\":{\"55\":2,\"385\":1,\"387\":1,\"627\":2,\"628\":1,\"647\":1,\"686\":1,\"723\":1,\"751\":1}}],[\"而且因为市场规模足够大\",{\"1\":{\"8\":1}}],[\"下的一个定时任务调度工具\",{\"1\":{\"997\":1}}],[\"下表为i的右子节点下表是i2\",{\"1\":{\"950\":1}}],[\"下表为i的左子节点下表是i2\",{\"1\":{\"950\":1}}],[\"下表为i的父节点下表是\",{\"1\":{\"950\":1}}],[\"下午吃了一家在市中心的苍蝇小店\",{\"1\":{\"779\":1}}],[\"下\",{\"1\":{\"426\":1,\"1079\":1}}],[\"下一次服务器就不知道这个请求是谁发送过来的了\",{\"1\":{\"1044\":1}}],[\"下一次希望不止三天\",{\"1\":{\"553\":1}}],[\"下一个点呢\",{\"0\":{\"588\":1}}],[\"下一个章节将详细讲解aave协议在这些方面的具体含义\",{\"1\":{\"166\":1}}],[\"下一步要做的就是决定是否进行身份验证\",{\"1\":{\"425\":1}}],[\"下次回家时可能需要手把手教他们怎么用新生大学这个软件\",{\"1\":{\"551\":1}}],[\"下次就可以从数据库读取到最新值\",{\"1\":{\"386\":1}}],[\"下次查询同样的数据的时候\",{\"1\":{\"376\":1}}],[\"下游从队列拉取消息\",{\"1\":{\"385\":1}}],[\"下个事务才可以继续进行\",{\"1\":{\"360\":1}}],[\"下图中有时刻\",{\"1\":{\"360\":1}}],[\"下动态函数的问题\",{\"1\":{\"358\":1}}],[\"下大于等于上\",{\"1\":{\"300\":1}}],[\"下述格式之一\",{\"1\":{\"292\":1}}],[\"下述功能需要登陆账户\",{\"1\":{\"23\":1}}],[\"下标\",{\"1\":{\"267\":1}}],[\"下标i\",{\"1\":{\"248\":1,\"267\":2}}],[\"下对目录或文件进行\",{\"1\":{\"74\":1}}],[\"下面我就按照在go官方的time包下的类型\",{\"1\":{\"1205\":1}}],[\"下面我们做个示例去使用metadata\",{\"1\":{\"1095\":1}}],[\"下面我们再修改一下proto文件\",{\"1\":{\"1080\":1}}],[\"下面我们分别来看过期键在这两种格式中的呈现状态\",{\"1\":{\"414\":1}}],[\"下面就是一个示例\",{\"1\":{\"1193\":1}}],[\"下面这个例子\",{\"1\":{\"1189\":1}}],[\"下面接着来讲一下更多的匹配规则\",{\"1\":{\"1080\":1}}],[\"下面你就可以开始go\",{\"1\":{\"989\":1}}],[\"下面你就可以看懂文档具体的内容了\",{\"1\":{\"169\":1}}],[\"下面你的程序应该长这个样子\",{\"1\":{\"989\":1}}],[\"下面是strconv包中一些常用的函数和其功能的简要介绍\",{\"1\":{\"1198\":1}}],[\"下面是在命令行中运行该程序并指定不同的命令行参数的示例\",{\"1\":{\"1162\":1}}],[\"下面是一些示例\",{\"1\":{\"1156\":1}}],[\"下面是一个使用reflect\",{\"1\":{\"1188\":1}}],[\"下面是一个使用go语言实现的迭代器模式的例子\",{\"1\":{\"827\":1}}],[\"下面是一个示例\",{\"1\":{\"1161\":1}}],[\"下面是一个比较典型的流程设计\",{\"1\":{\"1009\":1}}],[\"下面是对\",{\"1\":{\"1153\":1}}],[\"下面是运行时包中的结构体\",{\"1\":{\"1139\":1}}],[\"下面是调度策略函数\",{\"1\":{\"1135\":1}}],[\"下面是客户端接收请求的header和trailer\",{\"1\":{\"1095\":1}}],[\"下面是更新后的\",{\"1\":{\"992\":1}}],[\"下面是其中的一部分\",{\"1\":{\"927\":1}}],[\"下面说说集体注意力的缺失\",{\"1\":{\"610\":1}}],[\"下面让我们写一个函数来获取我们的block数据并创建一个sha256哈希值\",{\"1\":{\"514\":1}}],[\"下面来一一说明\",{\"1\":{\"484\":1}}],[\"下面代码会发生错误\",{\"1\":{\"480\":1}}],[\"下面展示了一个使用\",{\"1\":{\"451\":1}}],[\"下面几种情况会触发脏页的刷新\",{\"1\":{\"377\":1}}],[\"下面讲解一下基础的概念\",{\"1\":{\"157\":1}}],[\"下面对应的所有\",{\"1\":{\"152\":1}}],[\"下面对上面的公式进行概念介绍\",{\"1\":{\"150\":1}}],[\"下面\",{\"1\":{\"74\":1}}],[\"下面创建一个名为\",{\"1\":{\"74\":1}}],[\"下面示例如何使用\",{\"1\":{\"68\":1}}],[\"下面举两个例子来说明一下\",{\"1\":{\"66\":1}}],[\"下面的示例中使用会docker启动一个redis实例\",{\"1\":{\"1104\":1}}],[\"下面的示例借鉴\",{\"1\":{\"446\":1}}],[\"下面的代码在\",{\"1\":{\"1138\":1}}],[\"下面的代码是我使用miniredis库为dosomethingwithredis函数编写的单元测试代码\",{\"1\":{\"976\":1}}],[\"下面的代码中mock了两组数据\",{\"1\":{\"973\":1}}],[\"下面的代码就会崩溃\",{\"1\":{\"468\":1}}],[\"下面的内容\",{\"1\":{\"618\":1}}],[\"下面的语句如果去掉注释\",{\"1\":{\"481\":1}}],[\"下面的说明\",{\"1\":{\"447\":1}}],[\"下面的命令则启动一个\",{\"1\":{\"64\":1}}],[\"下面的命令输出一个\",{\"1\":{\"64\":1}}],[\"下面的图片比较了\",{\"1\":{\"45\":1}}],[\"下静态编译的程序来说\",{\"1\":{\"57\":1}}],[\"下操作\",{\"1\":{\"50\":1}}],[\"下载gatwway插件\",{\"1\":{\"1080\":1}}],[\"下载安装压缩grpc的环境\",{\"1\":{\"1068\":1}}],[\"下载protobuf\",{\"1\":{\"1067\":1}}],[\"下载也非常简单\",{\"1\":{\"988\":1}}],[\"下载也是一层层的去下载\",{\"1\":{\"49\":1}}],[\"下载\",{\"0\":{\"1018\":1},\"1\":{\"64\":1,\"1067\":1}}],[\"下载过程中给出了每一层的\",{\"1\":{\"49\":1}}],[\"下载公开的镜像\",{\"1\":{\"48\":1}}],[\"技术栈\",{\"1\":{\"1073\":1}}],[\"技术文盲的一些迹象\",{\"0\":{\"772\":1}}],[\"技术和方法时\",{\"1\":{\"771\":1}}],[\"技术不难\",{\"1\":{\"771\":1}}],[\"技术技能相当于今天的老年人\",{\"1\":{\"771\":1}}],[\"技术采用是基于年龄的\",{\"1\":{\"771\":1}}],[\"技术采用与年龄相关\",{\"0\":{\"771\":1}}],[\"技术的发展在不断加快\",{\"1\":{\"674\":1}}],[\"技术进步的曲线变得越来越陡峭\",{\"1\":{\"674\":1}}],[\"技术类书籍有\",{\"1\":{\"552\":1}}],[\"技术类书籍\",{\"0\":{\"504\":1}}],[\"技术是fluter跨平台web框架\",{\"1\":{\"494\":1}}],[\"技术\",{\"1\":{\"357\":1}}],[\"技术比虚拟机技术更为轻便\",{\"1\":{\"45\":1}}],[\"技能\",{\"1\":{\"3\":1}}],[\"从nonempty链表里面找到一个可用的mspan\",{\"1\":{\"1149\":1}}],[\"从本地mcache里分配内存不需要加锁\",{\"1\":{\"1149\":1}}],[\"从上述结构我们也能推断出\",{\"1\":{\"1139\":1}}],[\"从上到下打印出二叉树的每个节点\",{\"1\":{\"303\":1}}],[\"从上到下打印二叉树\",{\"0\":{\"303\":1,\"304\":1,\"305\":1}}],[\"从阻塞的发送者或者缓冲区中获取数据\",{\"1\":{\"1137\":1}}],[\"从中可以看到\",{\"1\":{\"1135\":1}}],[\"从中本聪在2008年发表的比特币白皮书开始比特币白皮书\",{\"1\":{\"95\":1}}],[\"从该处理树中\",{\"1\":{\"1055\":1}}],[\"从engine\",{\"1\":{\"1055\":1}}],[\"从源码角度分析gin的启动过程\",{\"1\":{\"1050\":1}}],[\"从配置文件中加载配置\",{\"1\":{\"981\":1}}],[\"从小到大拿着\",{\"1\":{\"946\":1}}],[\"从小就是数字化的忠实用户\",{\"1\":{\"534\":1}}],[\"从小就面对着不断贬值的主权货币\",{\"1\":{\"534\":1}}],[\"从切片中移除该元素\",{\"1\":{\"867\":1}}],[\"从切片中移除该观察者\",{\"1\":{\"844\":1}}],[\"从主题对象中获取新状态\",{\"1\":{\"844\":2}}],[\"从管理者对象中获取备忘录\",{\"1\":{\"838\":1}}],[\"从备忘录中恢复状态\",{\"1\":{\"838\":1}}],[\"从过去三个重大决策中我感受颇深的一点是人们所做的重大决策会对未来两三年的自己产生影响\",{\"1\":{\"759\":1}}],[\"从过去的这些时代来看\",{\"1\":{\"646\":1}}],[\"从现在看过去\",{\"1\":{\"757\":1}}],[\"从他的角度来看\",{\"1\":{\"751\":1}}],[\"从清洁工\",{\"1\":{\"751\":1}}],[\"从商业想法\",{\"1\":{\"740\":1}}],[\"从消费者流入生产者\",{\"1\":{\"738\":1}}],[\"从长远趋势来看\",{\"1\":{\"717\":1}}],[\"从长远来看也会变得杀马特\",{\"1\":{\"734\":1}}],[\"从长远来看\",{\"1\":{\"647\":1,\"686\":1}}],[\"从另一个角度看ai的价值\",{\"0\":{\"692\":1}}],[\"从来不思考未来可能会是怎样的\",{\"1\":{\"680\":1}}],[\"从来不思考未来的自己可能会是怎样的\",{\"1\":{\"680\":1}}],[\"从短视频中大部分都是被动学习\",{\"1\":{\"654\":1}}],[\"从二十世纪七十年代中期开始\",{\"1\":{\"648\":1}}],[\"从二级索引中查询得到记录\",{\"1\":{\"353\":1}}],[\"从生产角度出发\",{\"1\":{\"648\":1}}],[\"从生活方式触须看\",{\"1\":{\"573\":1}}],[\"从赚钱的角度来看\",{\"1\":{\"647\":1,\"686\":1}}],[\"从问出这样的问题就能看出来\",{\"1\":{\"631\":1}}],[\"从今年年初ai的兴起\",{\"1\":{\"631\":1}}],[\"从最坏的方面看\",{\"1\":{\"627\":1}}],[\"从最好的方面说\",{\"1\":{\"627\":1}}],[\"从理论上讲\",{\"1\":{\"585\":1}}],[\"从资格上来说\",{\"1\":{\"585\":1}}],[\"从一个错误的箭头变成一个问号总是重大进步\",{\"1\":{\"585\":1}}],[\"从一个函数返回一个全局变量该如何做\",{\"1\":{\"462\":1}}],[\"从首要原理的角度审查现实范围可能会让一些过于乐观的人回到现实\",{\"1\":{\"584\":1}}],[\"从天真的过度自信到明智\",{\"1\":{\"575\":1}}],[\"从第一原则出发\",{\"1\":{\"572\":1}}],[\"从第一原理推理\",{\"1\":{\"571\":1}}],[\"从写完那篇文章开始\",{\"1\":{\"571\":1}}],[\"从这里我们可以看到\",{\"1\":{\"1009\":1}}],[\"从这方面来讲\",{\"1\":{\"801\":1}}],[\"从这方面来说\",{\"1\":{\"73\":1}}],[\"从这个角度来看\",{\"1\":{\"792\":1}}],[\"从这个角度来看他们的精神还活在我们每个记得他们的人的精神世界里\",{\"1\":{\"695\":1}}],[\"从这样的角度看待问题\",{\"1\":{\"534\":1}}],[\"从vscode快捷键\",{\"1\":{\"525\":1}}],[\"从0开始递增\",{\"1\":{\"512\":1}}],[\"从0到1便是\",{\"1\":{\"11\":1}}],[\"从0到1\",{\"1\":{\"11\":1}}],[\"从包的名字就可以看出\",{\"1\":{\"509\":1}}],[\"从函数中返回全局变量\",{\"0\":{\"462\":1}}],[\"从节点会向集群广播一条clustermsg\",{\"1\":{\"433\":1}}],[\"从节点将开始对下线主节点进行故障转移\",{\"1\":{\"433\":1}}],[\"从ai辅助到自己的命运完全由ai接手\",{\"1\":{\"631\":1}}],[\"从aof文件中分析并读取出一条写命令\",{\"1\":{\"422\":1}}],[\"从aave闪贷借出10000\",{\"1\":{\"163\":1}}],[\"从aave闪贷借出1000\",{\"1\":{\"163\":1}}],[\"从服务器以及sentinel的名字由sentinel自动设置\",{\"1\":{\"426\":1}}],[\"从服务器以前没有复制过任何主服务器\",{\"1\":{\"425\":1}}],[\"从服务器默认会以每秒一次的频率\",{\"1\":{\"425\":1}}],[\"从服务器在收到主服务器返回的\",{\"1\":{\"425\":1}}],[\"从服务器在发送ping命令之后将遇到以下三种情况的其中一种\",{\"1\":{\"425\":1}}],[\"从服务器可以继续执行复制工作的下个步骤\",{\"1\":{\"425\":1}}],[\"从服务器可以向主服务器发送命令请求\",{\"1\":{\"425\":1}}],[\"从服务器断开并重新创建连向主服务器的套接字\",{\"1\":{\"425\":2}}],[\"从服务器成为主服务器的客户端之后\",{\"1\":{\"425\":1}}],[\"从服务器是主服务器的客户端\",{\"1\":{\"425\":1}}],[\"从服务器的复制偏移量slave\",{\"1\":{\"426\":1}}],[\"从服务器的优先级slave\",{\"1\":{\"426\":1}}],[\"从服务器的角色role\",{\"1\":{\"426\":1}}],[\"从服务器的运行id\",{\"1\":{\"426\":1}}],[\"从服务器的套接字连接之后\",{\"1\":{\"425\":1}}],[\"从服务器的数据会被清空\",{\"1\":{\"414\":1}}],[\"从服务器将收到主服务器返回的busy\",{\"1\":{\"425\":1}}],[\"从服务器将根据命令所设置的ip地址和端口\",{\"1\":{\"425\":1}}],[\"从服务器将向主服务器发送psync命令\",{\"1\":{\"425\":1}}],[\"从服务器将向主服务器发送一条auth命令\",{\"1\":{\"425\":1}}],[\"从服务器将向主服务器发送sync命令\",{\"1\":{\"425\":1}}],[\"从服务器将向发送slaveof命令的客户端返回ok\",{\"1\":{\"425\":1}}],[\"从服务器将向当前连接的主服务器发送之前保存的运行id\",{\"1\":{\"425\":1}}],[\"从服务器首先要做的就是将客户端给定的服务器ip地址127\",{\"1\":{\"425\":1}}],[\"从服务器首先需要执行同步操作\",{\"1\":{\"425\":1}}],[\"从服务器只要等着主服务器将自己缺少的那部分数据发送过来就可以了\",{\"1\":{\"425\":1}}],[\"从服务器只要接收并执行这些写命令\",{\"1\":{\"425\":1}}],[\"从服务器会将这个值作为自己的初始化偏移量\",{\"1\":{\"425\":1}}],[\"从服务器会将这个id保存起来\",{\"1\":{\"425\":1}}],[\"从服务器会通过psync命令将自己的复制偏移量offset发送给主服务器\",{\"1\":{\"425\":1}}],[\"从服务器每次收到主服务器传播来的n个字节的数据时\",{\"1\":{\"425\":1}}],[\"从服务器执行这些写命令\",{\"1\":{\"425\":1}}],[\"从服务器接收并载入这个rdb文件\",{\"1\":{\"425\":1}}],[\"从服务器向主服务器发送sync命令\",{\"1\":{\"425\":1}}],[\"从服务器对主服务器的同步操作需要通过向主服务器发送sync命令来完成\",{\"1\":{\"425\":1}}],[\"从服务器\",{\"1\":{\"414\":1,\"426\":1}}],[\"从内存状态持久化成\",{\"1\":{\"414\":1}}],[\"从大到小\",{\"1\":{\"410\":1}}],[\"从列表中移除\",{\"1\":{\"405\":1}}],[\"从偏移量\",{\"1\":{\"403\":1}}],[\"从⽽引起\",{\"1\":{\"399\":1}}],[\"从库通过执行这条\",{\"1\":{\"414\":1}}],[\"从库的过期键处理依靠主服务器控制\",{\"1\":{\"414\":1}}],[\"从库对过期的处理是被动的\",{\"1\":{\"414\":1}}],[\"从库不会进行过期扫描\",{\"1\":{\"414\":1}}],[\"从库\",{\"1\":{\"386\":3}}],[\"从数据库中读取到旧值\",{\"1\":{\"384\":1,\"386\":1}}],[\"从图中可以看出\",{\"1\":{\"360\":1}}],[\"从存储引擎读取记录\",{\"1\":{\"349\":1}}],[\"从根节点到叶节点依次经过的节点\",{\"1\":{\"328\":1}}],[\"从根节点到叶子节点\",{\"1\":{\"307\":1}}],[\"从头开始写\",{\"1\":{\"357\":1}}],[\"从头开始计算当前连续子序列和\",{\"1\":{\"262\":1}}],[\"从头节点开始\",{\"1\":{\"294\":1}}],[\"从尾到头反过来返回每个节点的值\",{\"1\":{\"278\":1}}],[\"从尾到头打印链表\",{\"0\":{\"278\":1}}],[\"从左到右\",{\"1\":{\"264\":1}}],[\"从递推公式中\",{\"1\":{\"265\":1}}],[\"从递推公式可以看出dp\",{\"1\":{\"263\":1}}],[\"从递推公式可以看出来dp\",{\"1\":{\"262\":1}}],[\"从递推公式dp\",{\"1\":{\"248\":1,\"264\":2}}],[\"从dp\",{\"1\":{\"248\":1}}],[\"从docker中获取镜像的命令是docker\",{\"1\":{\"49\":1}}],[\"从下标0开始计数\",{\"1\":{\"317\":1}}],[\"从下标为\",{\"1\":{\"235\":1}}],[\"从下载过程中\",{\"1\":{\"49\":1}}],[\"从浏览器进入http\",{\"1\":{\"192\":1}}],[\"从用户\",{\"1\":{\"169\":2}}],[\"从\",{\"1\":{\"169\":3,\"360\":1,\"425\":1,\"426\":1,\"433\":1,\"572\":3,\"1137\":2}}],[\"从容器快照文件中再导入为镜像\",{\"1\":{\"70\":1}}],[\"从地址池配置一个\",{\"1\":{\"64\":1}}],[\"从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去\",{\"1\":{\"64\":1}}],[\"从而根据程序的需求来执行相应的逻辑操作\",{\"1\":{\"1163\":1}}],[\"从而导致数据不一致等问题\",{\"1\":{\"1088\":1}}],[\"从而导致不可预料的后果\",{\"1\":{\"1088\":1}}],[\"从而导致热点数据被替换了\",{\"1\":{\"377\":1}}],[\"从而允许用户访问该令牌允许的路由\",{\"1\":{\"1047\":1}}],[\"从而独立开发\",{\"1\":{\"911\":1}}],[\"从而可以保持各部分的独立性和优势\",{\"1\":{\"909\":1}}],[\"从而节省资源\",{\"1\":{\"899\":1}}],[\"从而节省内存空间和提高性能\",{\"1\":{\"896\":1,\"900\":1}}],[\"从而实现不同的行为\",{\"1\":{\"848\":1}}],[\"从而实现更高的潜在回报\",{\"1\":{\"151\":1}}],[\"从而降低了它们之间的耦合度\",{\"1\":{\"831\":1}}],[\"从而降低磁盘\",{\"1\":{\"360\":1}}],[\"从而使原本不匹配的接口可以一起工作\",{\"1\":{\"906\":1}}],[\"从而使你可以用不同的请求对客户进行参数化\",{\"1\":{\"818\":1}}],[\"从而使他们能够朝更大胆的方向设定目标\",{\"1\":{\"584\":1}}],[\"从而创造价值\",{\"1\":{\"677\":1}}],[\"从而形成优势互补\",{\"1\":{\"673\":1}}],[\"从而促使一个人的行为发生改变\",{\"1\":{\"649\":1}}],[\"从而进行规模化的生产和商业运作\",{\"1\":{\"646\":1}}],[\"从而让自己处于一种积极的状态中\",{\"1\":{\"632\":1}}],[\"从而开始探索新的知识\",{\"1\":{\"605\":1}}],[\"从而达到你对该职业成功的定义\",{\"1\":{\"580\":1}}],[\"从而达到快速访问节点的目的\",{\"1\":{\"397\":1}}],[\"从而真正反映出你是谁\",{\"1\":{\"569\":1}}],[\"从而尽快判断是否需要将集群标记为下线\",{\"1\":{\"435\":1}}],[\"从而将数据库还原到一个一致的状态\",{\"1\":{\"424\":2}}],[\"从而确保事务的一致性的\",{\"1\":{\"424\":1}}],[\"从而确保写入数据的安全性\",{\"1\":{\"422\":1}}],[\"从而成为这些模式的订阅者\",{\"1\":{\"423\":1}}],[\"从而成为这些频道的订阅者\",{\"1\":{\"423\":1}}],[\"从而成为了\",{\"1\":{\"52\":1}}],[\"从而提高\",{\"1\":{\"413\":1}}],[\"从而保证测试的稳定性\",{\"1\":{\"970\":1}}],[\"从而保证真正被读取的热数据留在\",{\"1\":{\"377\":1}}],[\"从而保证插入数据时\",{\"1\":{\"369\":1}}],[\"从而保证多事务的情况下\",{\"1\":{\"360\":1}}],[\"从而避免不必要的风险\",{\"1\":{\"1088\":1}}],[\"从而避免这些问题\",{\"1\":{\"1088\":1}}],[\"从而避免其他事务插入一条新记录\",{\"1\":{\"362\":1}}],[\"从而避免回表\",{\"1\":{\"353\":1}}],[\"从而减少\",{\"1\":{\"360\":1}}],[\"从而减少磁盘\",{\"1\":{\"360\":1}}],[\"从而控制并发事务访问同一个记录时的行为\",{\"1\":{\"356\":1}}],[\"从而影响查询效率\",{\"1\":{\"353\":1}}],[\"从而增加供应量\",{\"1\":{\"134\":1}}],[\"从而缩短执行时间\",{\"1\":{\"123\":1}}],[\"从而完成各种功能\",{\"1\":{\"60\":1}}],[\"从而出现仓库名\",{\"1\":{\"52\":1}}],[\"从而拥有共同的层\",{\"1\":{\"51\":1}}],[\"从仓库获取镜像\",{\"1\":{\"49\":1}}],[\"从文件系统\",{\"1\":{\"45\":1}}],[\"进而影响最终的处理过程\",{\"1\":{\"1140\":1}}],[\"进而促进思想的碰撞\",{\"1\":{\"698\":1}}],[\"进而做出更合理的判断\",{\"1\":{\"683\":1}}],[\"进而提升写\",{\"1\":{\"357\":1}}],[\"进口劳工的成本就高于使用国内劳工\",{\"1\":{\"653\":1}}],[\"进一步学习和创造知识\",{\"1\":{\"649\":1}}],[\"进一步思考\",{\"1\":{\"647\":1,\"686\":1}}],[\"进一步如果ai也植入了广告系统呢\",{\"1\":{\"631\":1}}],[\"进步速度将几乎是一个每周工作20小时\",{\"1\":{\"581\":1}}],[\"进步现在是可能的\",{\"1\":{\"575\":1}}],[\"进展\",{\"1\":{\"580\":1}}],[\"进食\",{\"1\":{\"571\":1}}],[\"进\",{\"1\":{\"396\":2,\"426\":3}}],[\"进来\",{\"1\":{\"387\":1}}],[\"进程中途挂了\",{\"1\":{\"360\":1}}],[\"进程具有不同的命名空间\",{\"1\":{\"76\":1}}],[\"进程\",{\"1\":{\"76\":1}}],[\"进程在\",{\"1\":{\"76\":1}}],[\"进行时间单位的转换和操作\",{\"1\":{\"1213\":1}}],[\"进行类型转换\",{\"1\":{\"1138\":1}}],[\"进行绑定\",{\"1\":{\"1135\":1}}],[\"进行一些\",{\"1\":{\"1134\":1}}],[\"进行打桩\",{\"1\":{\"978\":1}}],[\"进行测试\",{\"1\":{\"972\":1}}],[\"进行非常相似\",{\"1\":{\"721\":1}}],[\"进行套利\",{\"1\":{\"698\":1}}],[\"进行审核时\",{\"1\":{\"578\":1}}],[\"进行相加\",{\"1\":{\"481\":1}}],[\"进行索引\",{\"1\":{\"473\":1}}],[\"进行初始化\",{\"1\":{\"463\":1}}],[\"进行设置操作\",{\"1\":{\"436\":1}}],[\"进行复制中的服务器双方保存相同的数据\",{\"1\":{\"425\":1}}],[\"进行了多少次修改\",{\"1\":{\"417\":1}}],[\"进行了进一步的封装\",{\"1\":{\"45\":1}}],[\"进行过期检查\",{\"1\":{\"414\":1}}],[\"进行数据读写\",{\"1\":{\"411\":1}}],[\"进行全表扫描\",{\"1\":{\"352\":1}}],[\"进行转换\",{\"1\":{\"210\":1}}],[\"进行无状态身份验证\",{\"1\":{\"193\":1}}],[\"进行登录\",{\"1\":{\"192\":1}}],[\"进行注释的格式\",{\"1\":{\"58\":1}}],[\"进入休眠状态等待所有读锁所有者执行结束后释放\",{\"1\":{\"1143\":1}}],[\"进入系统调用前的准备工作\",{\"1\":{\"1135\":1}}],[\"进入findrunnable\",{\"1\":{\"1135\":2}}],[\"进入https\",{\"1\":{\"1067\":1}}],[\"进入\",{\"1\":{\"1067\":1,\"1135\":1}}],[\"进入退货子流程\",{\"1\":{\"1009\":1}}],[\"进入退休生活\",{\"1\":{\"585\":1}}],[\"进入信息时代后\",{\"1\":{\"649\":1}}],[\"进入ai时代\",{\"1\":{\"631\":1}}],[\"进入tilt模式的时间\",{\"1\":{\"426\":1}}],[\"进入到真正策略函数\",{\"1\":{\"1135\":1}}],[\"进入到\",{\"1\":{\"377\":1}}],[\"进入加密市场对于绝大多数人来讲\",{\"1\":{\"180\":1}}],[\"进入容器\",{\"0\":{\"68\":1}}],[\"进入容器后\",{\"1\":{\"50\":1}}],[\"进入主页面您可以查看您感兴趣的话题种类\",{\"1\":{\"39\":1}}],[\"就成功解锁了互斥锁\",{\"1\":{\"1142\":1}}],[\"就获取将网络协程中的第一个\",{\"1\":{\"1135\":1}}],[\"就将当前\",{\"1\":{\"1135\":1}}],[\"就将自己的复制偏移量的值加上n\",{\"1\":{\"425\":2}}],[\"就弹出一半加入到全局协程回收站中\",{\"1\":{\"1135\":1}}],[\"就从其他\",{\"1\":{\"1135\":1}}],[\"就从全局协程队列里\",{\"1\":{\"1135\":1}}],[\"就从\",{\"1\":{\"1135\":2}}],[\"就从free链表中取一个空闲的缓存页\",{\"1\":{\"377\":1}}],[\"就和其他的\",{\"1\":{\"1133\":1}}],[\"就和刚才我们手工建立镜像的过程一样\",{\"1\":{\"58\":1}}],[\"就转换到下一个状态\",{\"1\":{\"1009\":1}}],[\"就有两个状态\",{\"1\":{\"1009\":1}}],[\"就有可能指向正面的未来\",{\"1\":{\"573\":1}}],[\"就只需要按照文档跑一遍就会使用cobra了\",{\"1\":{\"988\":1}}],[\"就只能选择手动电话了\",{\"1\":{\"551\":1}}],[\"就足矣让自己休息了\",{\"1\":{\"787\":1}}],[\"就此我认为没必要纠结早毕业十年吃到红利是否会更好\",{\"1\":{\"764\":1}}],[\"就此互联网的发展趋势已经放平\",{\"1\":{\"764\":1}}],[\"就此议题得出结论\",{\"1\":{\"627\":1}}],[\"就必须成为生产者\",{\"1\":{\"739\":1}}],[\"就必须容忍\",{\"1\":{\"387\":1}}],[\"就那么横空出世就在一年之内完全改变了人们的生活\",{\"1\":{\"717\":1}}],[\"就那么回事\",{\"1\":{\"566\":1}}],[\"就放弃了这个想法\",{\"1\":{\"660\":1}}],[\"就靠考虑读者读到文章所能获得的价值\",{\"1\":{\"660\":1}}],[\"就扩大经济生产和解决市场问题而言\",{\"1\":{\"648\":1}}],[\"就得看老天爷的意思\",{\"1\":{\"646\":1}}],[\"就提前做准备\",{\"1\":{\"627\":1}}],[\"就解决气候危机而言\",{\"1\":{\"611\":1}}],[\"就你所知\",{\"1\":{\"587\":1}}],[\"就等于碗里什么都没有\",{\"1\":{\"577\":1}}],[\"就失去了自由\",{\"1\":{\"551\":1}}],[\"就好比试图根据你的身高和力量来评估你成为职业篮球运动员的机会\",{\"1\":{\"579\":1}}],[\"就好了\",{\"1\":{\"528\":1}}],[\"就好像吃别人吃剩的饭一样\",{\"1\":{\"512\":1}}],[\"就好像是在一个独立于宿主的系统下操作一样\",{\"1\":{\"47\":1}}],[\"就开始有脑使用了\",{\"1\":{\"494\":1}}],[\"就很好解释了\",{\"1\":{\"481\":1}}],[\"就没有人会不断尝试生产这些无用信息\",{\"1\":{\"647\":1,\"686\":1}}],[\"就没有可供\",{\"1\":{\"447\":1}}],[\"就没有这么⾼效了\",{\"1\":{\"399\":1}}],[\"就把自己先搞丢\",{\"1\":{\"505\":1}}],[\"就把该命令以追加的方式写入到一个文件里\",{\"1\":{\"413\":1}}],[\"就把这个轻量级锁释放了\",{\"1\":{\"369\":1}}],[\"就拿我们前面讲到的方案来说\",{\"1\":{\"387\":1}}],[\"就拿着\",{\"1\":{\"360\":1}}],[\"就需要做一些mock工作\",{\"1\":{\"978\":1}}],[\"就需要类的方法帮助我们\",{\"1\":{\"887\":1}}],[\"就需要一系列的投入\",{\"1\":{\"648\":1}}],[\"就需要使用\",{\"1\":{\"413\":1,\"1137\":1}}],[\"就需要rehash\",{\"1\":{\"395\":1}}],[\"就需要调大\",{\"1\":{\"377\":1}}],[\"就需要遍历表里所有记录\",{\"1\":{\"368\":1}}],[\"就在我们意识表面的正下方\",{\"1\":{\"576\":1}}],[\"就在它对应的控制块中记录下来这个访问时间\",{\"1\":{\"377\":1}}],[\"就在当前目录\",{\"1\":{\"60\":1}}],[\"就能让你进入正确的心态\",{\"1\":{\"584\":1}}],[\"就能让我明白人们往往会在哪些方面出错\",{\"1\":{\"572\":1}}],[\"就能有效地保证\",{\"1\":{\"377\":1}}],[\"就能从其加密资产获得尽可能高的回报\",{\"1\":{\"151\":1}}],[\"就直接绑定\",{\"1\":{\"1135\":1}}],[\"就直接让出\",{\"1\":{\"1135\":1}}],[\"就直接丢到某些请求\",{\"1\":{\"1036\":1}}],[\"就直接把该页面对应的lru链表节点移动到链表头部\",{\"1\":{\"377\":1}}],[\"就直接去buffer\",{\"1\":{\"376\":1}}],[\"就产生碎片了\",{\"1\":{\"376\":1}}],[\"就采用轻量级锁\",{\"1\":{\"369\":1}}],[\"就采用\",{\"1\":{\"369\":1}}],[\"就算在思考后做了各方面考虑做出了选择后悔了\",{\"1\":{\"680\":1}}],[\"就算在这期间存在短期不一致\",{\"1\":{\"387\":1}}],[\"就算要先记笔记\",{\"1\":{\"660\":1}}],[\"就算\",{\"1\":{\"360\":1}}],[\"就返回客户端结果\",{\"1\":{\"359\":1}}],[\"就要跳出当下自我感觉的局限\",{\"1\":{\"680\":1}}],[\"就要暂存到磁盘\",{\"1\":{\"358\":1}}],[\"就要分析如下几种情况\",{\"1\":{\"267\":1}}],[\"就创建一个新的文件继续写\",{\"1\":{\"358\":1}}],[\"就不需要flag包了\",{\"1\":{\"1163\":1}}],[\"就不要修理它\",{\"1\":{\"771\":1}}],[\"就不会无聊去不断上滑了\",{\"1\":{\"634\":1}}],[\"就不能用在\",{\"1\":{\"413\":1}}],[\"就不能称为逻辑日志了\",{\"1\":{\"358\":1}}],[\"就不可能是该压栈序列的弹出序列\",{\"1\":{\"302\":1}}],[\"就意味着在数据时代被剥夺了创造性和反思能力\",{\"1\":{\"551\":1}}],[\"就意味着他是可以自由用嘴去吃饭\",{\"1\":{\"551\":1}}],[\"就意味着发生了\",{\"1\":{\"361\":3}}],[\"就意味着能在\",{\"1\":{\"360\":1}}],[\"就意味着\",{\"1\":{\"357\":1}}],[\"就可能基于此概念之上做出一些更加有趣的产品\",{\"1\":{\"698\":1}}],[\"就可能变成奴隶\",{\"1\":{\"551\":1}}],[\"就可能已经迁移至目标节点\",{\"1\":{\"432\":1}}],[\"就可能会等待更多的时间\",{\"1\":{\"1132\":1}}],[\"就可能会出错\",{\"1\":{\"413\":1}}],[\"就可能会插入到现有数据页中间的某个位置\",{\"1\":{\"353\":1}}],[\"就可能出现脏读\",{\"1\":{\"361\":1}}],[\"就可以注册路径为\",{\"1\":{\"1193\":1}}],[\"就可以帮我自动注册http方法\",{\"1\":{\"1193\":1}}],[\"就可以选择使用\",{\"1\":{\"1146\":1}}],[\"就可以实现客户端的拦截器\",{\"1\":{\"1097\":1}}],[\"就可以处理http请求\",{\"1\":{\"1055\":1}}],[\"就可以使用refresh\",{\"1\":{\"1047\":1}}],[\"就可以一直取\",{\"1\":{\"1033\":1}}],[\"就可以编译出任意平台可运行的程序\",{\"1\":{\"1023\":1}}],[\"就可以了\",{\"1\":{\"1009\":1,\"1084\":1}}],[\"就可以了呢\",{\"1\":{\"385\":1}}],[\"就可以在space界面看到有tidy的按钮\",{\"1\":{\"731\":1}}],[\"就可以在区块中确认\",{\"1\":{\"109\":1}}],[\"就可以通过抵押股票\",{\"1\":{\"673\":1}}],[\"就可以获取不断的力量\",{\"1\":{\"663\":1}}],[\"就可以这样使用\",{\"1\":{\"468\":1}}],[\"就可以保证主从服务器一直保持一致了\",{\"1\":{\"425\":1}}],[\"就可以保证即使数据库发生异常重启\",{\"1\":{\"357\":1}}],[\"就可以将数据库更新至主服务器当前所处的状态\",{\"1\":{\"425\":1}}],[\"就可以是\",{\"1\":{\"240\":1}}],[\"就可以看到leaf的信息\",{\"1\":{\"174\":1}}],[\"就无法使用前缀索引\",{\"1\":{\"353\":1}}],[\"就会调用\",{\"1\":{\"1142\":1,\"1143\":1}}],[\"就会出现较少犯罪\",{\"1\":{\"626\":1}}],[\"就会出现一个很奇怪的问题\",{\"1\":{\"377\":1}}],[\"就会运行出现应有的哈希码\",{\"1\":{\"512\":1}}],[\"就会报错\",{\"1\":{\"481\":1}}],[\"就会导致群体理解偏差\",{\"1\":{\"673\":2}}],[\"就会导致你程序的崩溃\",{\"1\":{\"475\":1}}],[\"就会导致对锁的争用\",{\"1\":{\"360\":1}}],[\"就会向客户端返回结果了\",{\"1\":{\"413\":1}}],[\"就会在主线程生成\",{\"1\":{\"413\":1}}],[\"就会在解析器这个阶段报错\",{\"1\":{\"345\":1}}],[\"就会启用\",{\"1\":{\"413\":1}}],[\"就会交给\",{\"1\":{\"412\":1}}],[\"就会继续到ht\",{\"1\":{\"396\":1}}],[\"就会发生这种情况\",{\"1\":{\"771\":1}}],[\"就会发生阻塞\",{\"1\":{\"374\":1}}],[\"就会发现其实很多数据库都逐渐开始提供\",{\"1\":{\"385\":1}}],[\"就会产生一条变更日志\",{\"1\":{\"385\":1}}],[\"就会产生大量的磁盘\",{\"1\":{\"377\":1}}],[\"就会从\",{\"1\":{\"377\":1}}],[\"就会把该命令以追加的方式写入到一个文件里\",{\"1\":{\"413\":1}}],[\"就会把该事务的事务\",{\"1\":{\"362\":1}}],[\"就会把预读页放到\",{\"1\":{\"377\":1}}],[\"就会被阻塞\",{\"1\":{\"373\":1}}],[\"就会被持久化到磁盘\",{\"1\":{\"360\":1}}],[\"就会得到\",{\"1\":{\"362\":1}}],[\"就会马上启动事务\",{\"1\":{\"362\":1}}],[\"就会默认提交上一个事务\",{\"1\":{\"358\":1}}],[\"就会往后移动\",{\"1\":{\"357\":1}}],[\"就会顺着undolog版本链里面找到可见性的记录\",{\"1\":{\"356\":1}}],[\"就会自动开辟一个新页面\",{\"1\":{\"353\":1}}],[\"就会先去查询缓存\",{\"1\":{\"343\":1}}],[\"就会解析出\",{\"1\":{\"343\":1}}],[\"就初始为false\",{\"1\":{\"267\":1}}],[\"就明白了\",{\"1\":{\"266\":1}}],[\"就回想一下dp\",{\"1\":{\"266\":1}}],[\"就应该是i\",{\"1\":{\"266\":1}}],[\"就应该是\",{\"1\":{\"266\":1}}],[\"就应该是0\",{\"1\":{\"236\":1}}],[\"就知道这是一个完全背包\",{\"1\":{\"242\":1}}],[\"就来回想一下dp\",{\"1\":{\"232\":1}}],[\"就先写这个了\",{\"1\":{\"147\":1}}],[\"就使用calldata\",{\"1\":{\"105\":1}}],[\"就挂载为\",{\"1\":{\"74\":1}}],[\"就像当你决定取消整个团队的任务时\",{\"1\":{\"1156\":1}}],[\"就像打斗地主\",{\"1\":{\"946\":1}}],[\"就像是你作为领导创建了一个规定了整个团队工作时间的时钟\",{\"1\":{\"1156\":1}}],[\"就像是打扑克牌\",{\"1\":{\"946\":1}}],[\"就像是面向对象程序设计中的\",{\"1\":{\"47\":1}}],[\"就像ai\",{\"1\":{\"804\":1}}],[\"就像大多数人都会选择牺牲隐私换取便利的服务一样\",{\"1\":{\"710\":1}}],[\"就像离开网络的手机已经没有多少人能够接受了一样\",{\"1\":{\"709\":1}}],[\"就像巴甫洛夫的狗一样\",{\"1\":{\"621\":1}}],[\"就像人类从农业社会迈向工业社会一样\",{\"1\":{\"605\":1}}],[\"就像程序员一样\",{\"1\":{\"605\":1}}],[\"就像一名运动员研究比赛录像一样\",{\"1\":{\"588\":1}}],[\"就像一场童年梦境\",{\"1\":{\"575\":1}}],[\"就像新恋情或新工作的蜜月期\",{\"1\":{\"587\":1}}],[\"就像第一次约会一样\",{\"1\":{\"585\":1}}],[\"就像中了幸运刮刮卡大奖一样\",{\"1\":{\"578\":1}}],[\"就像你将任务的要求和指示从一个人传递给另一个人\",{\"1\":{\"1156\":1}}],[\"就像你告知每个成员任务的截止时间\",{\"1\":{\"1156\":1}}],[\"就像你的其他等级决定一样\",{\"1\":{\"577\":1}}],[\"就像你的潜意识可以供你观察一样\",{\"1\":{\"575\":1}}],[\"就像你不是你的父母\",{\"1\":{\"575\":1}}],[\"就像你在街头巷尾看到满墙的广告一样\",{\"1\":{\"533\":1}}],[\"就像在黑暗中脱离束缚走到未知的森林一样\",{\"1\":{\"571\":1}}],[\"就像厨师按照已有食谱来烹饪一样\",{\"1\":{\"571\":1}}],[\"就像主厨玩弄原材料创造出新菜谱一样\",{\"1\":{\"571\":1}}],[\"就像下图所示的一样\",{\"1\":{\"513\":1}}],[\"就像相机拍照那样\",{\"1\":{\"362\":1}}],[\"就像这个事务从来没有执行过一样\",{\"1\":{\"361\":1}}],[\"就像\",{\"1\":{\"58\":1}}],[\"就像直接在命令行中输入的命令一样\",{\"1\":{\"58\":1}}],[\"就像我们之前运行了一个\",{\"1\":{\"57\":1}}],[\"就是通过大量练习\",{\"1\":{\"1186\":1}}],[\"就是指该mspan用来存储哪种大小的对象\",{\"1\":{\"1149\":1}}],[\"就是指定\",{\"1\":{\"57\":1}}],[\"就是用来唤醒陷入休眠的\",{\"1\":{\"1146\":1}}],[\"就是监控线程的抢占\",{\"1\":{\"1135\":1}}],[\"就是调用\",{\"1\":{\"1135\":1}}],[\"就是直接请求grpc服务拦截器的使用\",{\"1\":{\"1097\":1}}],[\"就是像gin这种框架一样\",{\"1\":{\"1079\":1}}],[\"就是默认的8080端口\",{\"1\":{\"1054\":1}}],[\"就是resolveaddress函数这个函数解析我们的addr地址\",{\"1\":{\"1054\":1}}],[\"就是利用各种方法测试单元组件的程序\",{\"1\":{\"967\":1}}],[\"就是间隔的意思\",{\"1\":{\"947\":1}}],[\"就是需要不断与前一个数做交换\",{\"1\":{\"946\":1}}],[\"就是一个数组当前面有序的情况下\",{\"1\":{\"946\":1}}],[\"就是一种联合文件系统\",{\"1\":{\"78\":1}}],[\"就是在原来对象的基础上增加一些扩展\",{\"1\":{\"920\":1}}],[\"就是在高考成绩非常不尽人意的情况下如何做出决策\",{\"1\":{\"759\":1}}],[\"就是固守型和成长型\",{\"1\":{\"674\":1}}],[\"就是博客只是记录自己想法\",{\"1\":{\"660\":1}}],[\"就是时间\",{\"1\":{\"646\":1}}],[\"就是有确定被我们发现的真理\",{\"1\":{\"637\":1}}],[\"就是每次给狗送食物以前打开红灯\",{\"1\":{\"631\":1}}],[\"就是如果是一个很个性化的程序\",{\"1\":{\"605\":1}}],[\"就是写作可以产生知识\",{\"1\":{\"605\":1}}],[\"就是这个观点是正确的\",{\"1\":{\"595\":1}}],[\"就是这样\",{\"1\":{\"1080\":1}}],[\"就是这样了\",{\"1\":{\"585\":1}}],[\"就是这样的服务\",{\"1\":{\"48\":1}}],[\"就是告诉别人我们的职业\",{\"1\":{\"571\":1}}],[\"就是问什么职业\",{\"1\":{\"571\":1}}],[\"就是看别人已经完成的工作\",{\"1\":{\"571\":1}}],[\"就是因为他们已然达到了全面的境界\",{\"1\":{\"525\":1}}],[\"就是编码\",{\"1\":{\"517\":1}}],[\"就是编译\",{\"1\":{\"58\":1}}],[\"就是当人们开始上滑行为时\",{\"1\":{\"634\":1}}],[\"就是当\",{\"1\":{\"413\":1}}],[\"就是记录某一个瞬间东西\",{\"1\":{\"413\":1}}],[\"就是我们经常听到的\",{\"1\":{\"412\":1}}],[\"就是table数目的大小\",{\"1\":{\"395\":1}}],[\"就是解决问题的关键\",{\"1\":{\"385\":1}}],[\"就是为了只允许一个线程去操作数据和缓存\",{\"1\":{\"383\":1}}],[\"就是对应到msg参数里面的\",{\"1\":{\"1080\":1}}],[\"就是对\",{\"1\":{\"371\":1}}],[\"就是尽量在开启事务之后\",{\"1\":{\"362\":1}}],[\"就是将redo\",{\"1\":{\"360\":1}}],[\"就是充当索引的角色\",{\"1\":{\"350\":1}}],[\"就是由存储引擎层实现的\",{\"1\":{\"341\":1}}],[\"就是s\",{\"1\":{\"267\":1}}],[\"就是递推公式的基础\",{\"1\":{\"262\":1}}],[\"就是它要求连续的递增序列\",{\"1\":{\"258\":1}}],[\"就是连续递增子序列\",{\"1\":{\"258\":1}}],[\"就是j从0到i\",{\"1\":{\"257\":1}}],[\"就是nums\",{\"1\":{\"248\":1}}],[\"就是所有的dp\",{\"1\":{\"242\":1}}],[\"就是把dp\",{\"1\":{\"236\":1}}],[\"就是把二维dp降为一维dp\",{\"1\":{\"236\":1}}],[\"就是物品个数\",{\"1\":{\"235\":1}}],[\"就是背包放物品i得到的最大价值\",{\"1\":{\"235\":1}}],[\"就是dp\",{\"1\":{\"235\":1}}],[\"就是遇到同层使用过的元素就过滤掉\",{\"1\":{\"216\":1}}],[\"就是原来有些不需要的递归是可以直接return出去的\",{\"1\":{\"208\":1}}],[\"就是大家都是1\",{\"1\":{\"175\":1}}],[\"就是\",{\"1\":{\"169\":1,\"266\":1,\"436\":1,\"1009\":1}}],[\"就是忘记了每一层构建的最后一定要清理掉无关文件\",{\"1\":{\"58\":1}}],[\"就是描述该层应当如何构建\",{\"1\":{\"56\":1}}],[\"就是除了制作镜像的人知道执行过什么命令\",{\"1\":{\"55\":1}}],[\"就是运行容器的命令\",{\"1\":{\"50\":1}}],[\"就充分利用\",{\"1\":{\"46\":1}}],[\"就理解了\",{\"1\":{\"45\":1}}],[\"就称为完全竞争市场\",{\"1\":{\"8\":1}}],[\"您必须获取jwt的加密后的header\",{\"1\":{\"1047\":1}}],[\"您必须先创建一个mixin账户\",{\"1\":{\"36\":1}}],[\"您需要一个相当复杂的\",{\"1\":{\"723\":1}}],[\"您需要点击左上角让betxin识别您的账户信息\",{\"1\":{\"39\":1}}],[\"您根本不应该使用该交易所\",{\"1\":{\"706\":1}}],[\"您相信该交易所还在\",{\"1\":{\"706\":1}}],[\"您信任交易所的创始人和员工不会将您拒之门外或窃取您的代币\",{\"1\":{\"705\":1}}],[\"您就相信该交易所不会被黑客攻击\",{\"1\":{\"704\":1}}],[\"您就可以体验betxin中所需的一切\",{\"1\":{\"37\":1}}],[\"您将所有这些与外汇相关的风险降至零\",{\"1\":{\"701\":1}}],[\"您将面临清算风险\",{\"1\":{\"150\":1}}],[\"您拥有它们的私钥\",{\"1\":{\"701\":1}}],[\"您应该始终将加密货币提取到您自己控制的钱包中\",{\"1\":{\"701\":1}}],[\"您脑中有几只需求章鱼\",{\"1\":{\"573\":1}}],[\"您\",{\"1\":{\"573\":1}}],[\"您内在其他触须都很自私自利\",{\"1\":{\"573\":1}}],[\"您内心有许多不同面的需求\",{\"1\":{\"573\":1}}],[\"您不能同时拥有所有的需求\",{\"1\":{\"573\":1}}],[\"您想要很多不同的东西\",{\"1\":{\"573\":1}}],[\"您在厨师vs主厨一文中\",{\"1\":{\"572\":1}}],[\"您职业的细节也常常决定您生活的地点\",{\"1\":{\"571\":1}}],[\"您的意思是app\",{\"1\":{\"988\":1}}],[\"您的实用需求触须认为\",{\"1\":{\"573\":1}}],[\"您的\",{\"0\":{\"573\":1}}],[\"您的职业规划\",{\"0\":{\"572\":1}}],[\"您的职业选择不仅仅象购买的衣服一样简单\",{\"1\":{\"571\":1}}],[\"您的职业不仅影响您职业时间外的生活\",{\"1\":{\"571\":1}}],[\"您的购买信息已经显示成功\",{\"1\":{\"40\":1}}],[\"您可能需要为交易请求更高的计算单位限制\",{\"1\":{\"122\":1}}],[\"您可以尝试不同的布尔值和整数值\",{\"1\":{\"1162\":1}}],[\"您可以将关联代币账户视为特定铸币厂和所有者的\",{\"1\":{\"136\":1}}],[\"您可以将指令视为程序向网络公开的\",{\"1\":{\"131\":1}}],[\"您可以在此处找到sysvar帐户的完整列表\",{\"1\":{\"113\":1}}],[\"您可以在机器人的聊天页面查看您的退款\",{\"1\":{\"40\":1}}],[\"您可以收藏\",{\"1\":{\"41\":1}}],[\"您可以点击已购买话题的refund按钮\",{\"1\":{\"40\":1}}],[\"您可以点击某个话题进入话题页面\",{\"1\":{\"40\":1}}],[\"您可以选择您想支付的数字货币\",{\"1\":{\"40\":1}}],[\"您可以进行购买预测\",{\"1\":{\"40\":1}}],[\"您可以查看这些\",{\"1\":{\"39\":1}}],[\"您只需点击话题右上角的星星\",{\"1\":{\"41\":1}}],[\"请defer来关闭连接\",{\"1\":{\"1225\":1}}],[\"请不要抱怨\",{\"1\":{\"795\":1}}],[\"请不要显摆\",{\"1\":{\"795\":1}}],[\"请勿使用该交易所\",{\"1\":{\"703\":1}}],[\"请学会像资产阶级一样思考问题\",{\"1\":{\"669\":1}}],[\"请看看你的新选择池\",{\"1\":{\"585\":1}}],[\"请记住\",{\"1\":{\"577\":1,\"585\":1}}],[\"请个假都要用qq\",{\"1\":{\"551\":1}}],[\"请注意\",{\"1\":{\"494\":1,\"1047\":1,\"1153\":1,\"1199\":1}}],[\"请定义一个函数实现字符串左旋转操作的功能\",{\"1\":{\"335\":1}}],[\"请写程序找出这两个只出现一次的数字\",{\"1\":{\"330\":1}}],[\"请写一个函数\",{\"1\":{\"317\":1}}],[\"请求必须先由浏览器发给服务器\",{\"1\":{\"1073\":1}}],[\"请求发来时\",{\"1\":{\"1056\":1}}],[\"请求与相应的技术原理\",{\"1\":{\"1050\":1}}],[\"请求外部api时传参x=2返回200\",{\"1\":{\"973\":1}}],[\"请求外部api时传参x=1返回100\",{\"1\":{\"973\":1}}],[\"请求url\",{\"1\":{\"972\":1}}],[\"请求方法\",{\"1\":{\"972\":1}}],[\"请求参数\",{\"1\":{\"972\":2}}],[\"请求体进行鉴权\",{\"1\":{\"814\":1}}],[\"请求接收者加入到发送者当前所处的集群里面\",{\"1\":{\"434\":1}}],[\"请求\",{\"1\":{\"412\":1,\"517\":1,\"1144\":1}}],[\"请求长度差\",{\"1\":{\"324\":1}}],[\"请求交易的最佳计算单元限制\",{\"1\":{\"122\":1}}],[\"请从字符串中找出一个最长的不包含重复字符的子字符串\",{\"1\":{\"320\":1}}],[\"请计算你最多能拿到多少价值的礼物\",{\"1\":{\"319\":1}}],[\"请编程实现一个函数\",{\"1\":{\"318\":1}}],[\"请找出所有滑动窗口里的最大值\",{\"1\":{\"336\":1}}],[\"请找出那个只出现一次的数字\",{\"1\":{\"331\":1}}],[\"请找出其中第\",{\"1\":{\"327\":1}}],[\"请找出这个数字\",{\"1\":{\"312\":1,\"326\":1}}],[\"请找出数组中任意一个重复的数字\",{\"1\":{\"275\":1}}],[\"请判断第二个序列是否为该栈的弹出顺序\",{\"1\":{\"302\":1}}],[\"请在该类型中实现一个能够得到栈的最小元素的\",{\"1\":{\"301\":1}}],[\"请在mixin\",{\"1\":{\"36\":1}}],[\"请完成一个函数\",{\"1\":{\"298\":1}}],[\"请完成一个高效的函数\",{\"1\":{\"276\":1}}],[\"请返回\",{\"1\":{\"286\":1}}],[\"请返回将\",{\"1\":{\"266\":1}}],[\"请问你会绞尽脑汁想着如何去投资美股吗\",{\"1\":{\"754\":1}}],[\"请问\",{\"1\":{\"285\":1,\"286\":1}}],[\"请把绳子剪成整数长度的\",{\"1\":{\"285\":1,\"286\":1}}],[\"请实现\",{\"1\":{\"308\":1}}],[\"请实现它的两个函数\",{\"1\":{\"280\":1}}],[\"请实现一个函数按照之字形顺序打印二叉树\",{\"1\":{\"304\":1,\"305\":1}}],[\"请实现一个函数用来判断字符串是否表示数值\",{\"1\":{\"292\":1}}],[\"请实现一个函数用来匹配包含\",{\"1\":{\"291\":1}}],[\"请实现一个函数\",{\"1\":{\"277\":1,\"299\":1}}],[\"请构建该二叉树并返回其根节点\",{\"1\":{\"279\":1}}],[\"请你写代码优美一点\",{\"1\":{\"605\":1}}],[\"请你一定要自己查看每个包内的具体内容\",{\"1\":{\"512\":1}}],[\"请你统计并返回这个字符串中\",{\"1\":{\"267\":1}}],[\"请你找出一个具有最大和的连续子数组\",{\"1\":{\"262\":1}}],[\"请你判断是否可以将这个数组分割成两个子集\",{\"1\":{\"237\":1}}],[\"请你计算并返回达到楼梯顶部的最低花费\",{\"1\":{\"228\":1}}],[\"请修改对应的端口\",{\"1\":{\"192\":1}}],[\"请联系mixin\",{\"1\":{\"28\":1}}],[\"不通过\",{\"1\":{\"1138\":1}}],[\"不指向任何可执行的函数\",{\"1\":{\"1133\":1}}],[\"不属于业务信息\",{\"1\":{\"1093\":1}}],[\"不放在正文的数据\",{\"1\":{\"1093\":1}}],[\"不放物品i\",{\"1\":{\"235\":1}}],[\"不鼓励\",{\"1\":{\"1073\":1}}],[\"不难理解\",{\"1\":{\"1056\":1}}],[\"不难写出如下代码\",{\"1\":{\"211\":1}}],[\"不早于\",{\"1\":{\"1047\":1}}],[\"不强制\",{\"1\":{\"1047\":1}}],[\"不足时\",{\"1\":{\"1034\":1}}],[\"不创建目标文件\",{\"1\":{\"1026\":1}}],[\"不易扩展\",{\"1\":{\"981\":1}}],[\"不稳定\",{\"1\":{\"946\":1,\"950\":1}}],[\"不暴露对象的内部结构和实现细节\",{\"1\":{\"837\":1}}],[\"不这样做\",{\"1\":{\"789\":1}}],[\"不出所料\",{\"1\":{\"771\":1}}],[\"不出意外节后的一段时间内就会转正\",{\"1\":{\"695\":1}}],[\"不容易接受新事物\",{\"1\":{\"771\":1}}],[\"不公平\",{\"1\":{\"751\":1}}],[\"不公平优势\",{\"0\":{\"673\":1},\"1\":{\"673\":1}}],[\"不等\",{\"1\":{\"751\":1}}],[\"不等就交换\",{\"1\":{\"275\":1}}],[\"不使用云\",{\"0\":{\"710\":1}}],[\"不然就会报错\",{\"1\":{\"1084\":1}}],[\"不然\",{\"1\":{\"992\":1}}],[\"不然如果没有mock目录的话用mockgen命令行会失败\",{\"1\":{\"977\":1}}],[\"不然怎么解释那么多富二代创业失败的呢\",{\"1\":{\"673\":1}}],[\"不然也不好意思说自己懂defi喜欢玩套利\",{\"1\":{\"157\":1}}],[\"不定期更新\",{\"1\":{\"669\":1}}],[\"不断往前开始堆化\",{\"1\":{\"950\":1}}],[\"不断与之前的数做比较\",{\"1\":{\"946\":1,\"947\":3}}],[\"不断去寻求答案去探究的过程\",{\"1\":{\"680\":1}}],[\"不断经营下去的动力来自于社区\",{\"1\":{\"663\":1}}],[\"不断重复这个过程\",{\"1\":{\"663\":2}}],[\"不以人的意志为转移\",{\"1\":{\"643\":1}}],[\"不以任何系统为基础\",{\"1\":{\"57\":1}}],[\"不完善的记忆\",{\"0\":{\"641\":1}}],[\"不完善的感知\",{\"0\":{\"640\":1}}],[\"不完全为零\",{\"1\":{\"125\":1}}],[\"不幸的是\",{\"1\":{\"627\":1}}],[\"不幸就开始发生了\",{\"1\":{\"611\":1}}],[\"不负责任的思考者先选择他们的结论\",{\"1\":{\"627\":1}}],[\"不符合当地时间地点的价值观\",{\"1\":{\"619\":1}}],[\"不安全的真实自我的声音\",{\"1\":{\"588\":1}}],[\"不安全感和困难感正是自主驾驶船只的感觉\",{\"1\":{\"588\":1}}],[\"不喜欢社交的人则会做更少的人际交往\",{\"1\":{\"581\":1}}],[\"不流浪\",{\"1\":{\"573\":1}}],[\"不为他人考虑也可能伤害几个触\",{\"1\":{\"573\":1}}],[\"不知如何是好\",{\"1\":{\"570\":1}}],[\"不确定自己是否走在正确道路上的人\",{\"1\":{\"569\":1}}],[\"不确定自己这辈子要做什么的人\",{\"1\":{\"569\":1}}],[\"不深说了\",{\"1\":{\"552\":1}}],[\"不考虑长期后果\",{\"1\":{\"551\":1}}],[\"不考虑coins\",{\"1\":{\"242\":1}}],[\"不妨大家想一想\",{\"1\":{\"551\":1}}],[\"不妨这样假象一下\",{\"1\":{\"551\":1}}],[\"不受任何监管\",{\"1\":{\"534\":1}}],[\"不受公司和政府的干预\",{\"1\":{\"532\":1}}],[\"不信你去看看微信朋友圈里分发的广告\",{\"1\":{\"533\":1}}],[\"不信你看一看自己手机中的app就知道了\",{\"1\":{\"531\":1}}],[\"不如去思考如何生产一些东西\",{\"1\":{\"739\":1}}],[\"不如去听祖母的话\",{\"1\":{\"528\":1}}],[\"不如只用一个一维数组了\",{\"1\":{\"236\":1}}],[\"不自量力地还手\",{\"1\":{\"505\":1}}],[\"不一样的成功启示录\",{\"1\":{\"503\":1}}],[\"不允许去索引字符串\",{\"1\":{\"474\":1}}],[\"不处理result\",{\"0\":{\"449\":1}}],[\"不管你是否真的有选择不用云\",{\"1\":{\"711\":1}}],[\"不管推理有多么不充分\",{\"1\":{\"627\":1}}],[\"不管别人信不信自己先信了\",{\"1\":{\"611\":1}}],[\"不管\",{\"1\":{\"448\":1}}],[\"不管是时刻\",{\"1\":{\"360\":1}}],[\"不做进一步处理\",{\"1\":{\"426\":1}}],[\"不论多么久远的过去\",{\"1\":{\"757\":1}}],[\"不论什么时代\",{\"1\":{\"646\":1}}],[\"不论生产什么最重要的都是时间\",{\"1\":{\"646\":1,\"677\":1}}],[\"不论我们是否接受\",{\"1\":{\"642\":1}}],[\"不论怎么做十年都会过去\",{\"1\":{\"595\":1}}],[\"不论处在哪个位置\",{\"1\":{\"571\":1}}],[\"不论是数字资产还是\",{\"1\":{\"804\":1}}],[\"不论是时间成本还是金钱成本\",{\"1\":{\"792\":1}}],[\"不论是编程还是投资\",{\"1\":{\"758\":1}}],[\"不论是脚掌宽度还是鞋底的质感都非常好\",{\"1\":{\"743\":1}}],[\"不论是你巴菲特\",{\"1\":{\"646\":1,\"677\":1}}],[\"不论是否同意\",{\"1\":{\"623\":1}}],[\"不论是否付费\",{\"1\":{\"505\":1}}],[\"不论是在校\",{\"1\":{\"552\":1}}],[\"不论是脑力工作\",{\"1\":{\"551\":1}}],[\"不论是转账功能\",{\"1\":{\"551\":1}}],[\"不论你怎么做\",{\"1\":{\"500\":1}}],[\"不论主服务器还是从服务\",{\"1\":{\"425\":1}}],[\"不论键是否过期都会被载入到数据库中\",{\"1\":{\"414\":1}}],[\"不带过期时间的键值对在rdb文件中由type\",{\"1\":{\"420\":1}}],[\"不主动删除过期键\",{\"1\":{\"414\":1}}],[\"不停轮询这个队列\",{\"1\":{\"411\":1}}],[\"不支持acid\",{\"1\":{\"1106\":1}}],[\"不支持事务回滚是因为这种复杂的功能和redis追求简单高效的设计主旨不相符\",{\"1\":{\"424\":1}}],[\"不支持降级\",{\"1\":{\"398\":1}}],[\"不支持作为抵押品\",{\"1\":{\"152\":1}}],[\"不光能存放文本数据\",{\"1\":{\"393\":1,\"402\":1}}],[\"不要通过共享内存的方式进行通信\",{\"1\":{\"1136\":1}}],[\"不要隐式引用外部依赖\",{\"1\":{\"981\":1}}],[\"不要用人工手段刺激大脑\",{\"1\":{\"789\":1}}],[\"不要担心组织结构或正确性\",{\"1\":{\"627\":1}}],[\"不要留在你不喜欢的工作中\",{\"1\":{\"588\":1}}],[\"不要让人看到\",{\"1\":{\"572\":1}}],[\"不要转义\",{\"1\":{\"483\":1}}],[\"不要使用\",{\"1\":{\"411\":1}}],[\"不要有太大延迟\",{\"1\":{\"386\":1}}],[\"不要凭感觉初始化\",{\"1\":{\"264\":1}}],[\"不仅简洁易懂\",{\"1\":{\"1010\":1}}],[\"不仅可以运行漂亮的\",{\"1\":{\"721\":1}}],[\"不仅可以保存文本数据\",{\"1\":{\"393\":1,\"402\":1}}],[\"不仅用于整理你已产生的各种思想\",{\"1\":{\"627\":1}}],[\"不仅会被sentinel用来判断主服务器的主观下线状态\",{\"1\":{\"426\":1}}],[\"不仅缓存利用率不高\",{\"1\":{\"383\":1}}],[\"不仅要更新数据库\",{\"1\":{\"382\":1}}],[\"不仅仅是sql\",{\"1\":{\"1217\":1}}],[\"不仅仅是创业\",{\"1\":{\"674\":1}}],[\"不仅仅是mixin\",{\"1\":{\"195\":1}}],[\"不仅仅字符串可以有切片\",{\"1\":{\"469\":1}}],[\"不仅仅增加了构建部署的时间\",{\"1\":{\"58\":1}}],[\"不更新缓存\",{\"1\":{\"381\":1}}],[\"不设置失效时间\",{\"1\":{\"381\":1}}],[\"不就丢失数据了吗\",{\"1\":{\"377\":1}}],[\"不在运行队列上\",{\"1\":{\"1132\":1}}],[\"不在进行时\",{\"1\":{\"395\":1}}],[\"不在\",{\"1\":{\"362\":1}}],[\"不可避免会使用到redis的lua脚本来保证redis的原子性\",{\"1\":{\"1104\":1}}],[\"不可测试的代码\",{\"1\":{\"979\":1}}],[\"不可否认的渴望\",{\"1\":{\"577\":1}}],[\"不可恢复的\",{\"1\":{\"446\":1}}],[\"不可重复读\",{\"1\":{\"361\":3}}],[\"不可以使用\",{\"1\":{\"358\":1}}],[\"不刷盘\",{\"1\":{\"360\":1}}],[\"不存在的结构体方法\",{\"1\":{\"1191\":2}}],[\"不存在的结构体成员\",{\"1\":{\"1191\":2}}],[\"不存在缓冲区\",{\"1\":{\"1137\":1}}],[\"不存在值得信赖的加密货币交易所\",{\"1\":{\"704\":1}}],[\"不存在时\",{\"1\":{\"407\":1,\"436\":1}}],[\"不存在时设置\",{\"1\":{\"403\":1}}],[\"不存在\",{\"1\":{\"384\":1}}],[\"不存在数据丢失的风险\",{\"1\":{\"359\":1}}],[\"不存在就从\",{\"1\":{\"64\":1}}],[\"不\",{\"1\":{\"358\":1,\"426\":1,\"432\":2,\"725\":1}}],[\"不麻烦\",{\"1\":{\"357\":1}}],[\"不过更重要的是\",{\"1\":{\"1139\":1}}],[\"不过更新语句还涉及到undo\",{\"1\":{\"355\":1}}],[\"不过作为程序启动前的准备工作\",{\"1\":{\"1134\":1}}],[\"不过我想说一下上面的理由是以理服己的\",{\"1\":{\"680\":1}}],[\"不过我们经常会定义一个newxxx来创建对象\",{\"1\":{\"883\":1}}],[\"不过我们主要是总结\",{\"1\":{\"673\":1}}],[\"不过我们以大量手动处理开始以便探索错误处理\",{\"1\":{\"450\":1}}],[\"不过本书主要谈论的是创业领域的不公平优势\",{\"1\":{\"673\":1}}],[\"不过似乎这个建议有点难以实现\",{\"1\":{\"634\":1}}],[\"不过说了这么多\",{\"1\":{\"631\":1}}],[\"不过就是长按app\",{\"1\":{\"552\":1}}],[\"不过并不需要显式地调用\",{\"1\":{\"450\":1}}],[\"不过它可能有点冗长并且不总是能很好的表明其意图\",{\"1\":{\"449\":1}}],[\"不过它只有三个元素\",{\"1\":{\"447\":1}}],[\"不过如果传递了一个无效索引\",{\"1\":{\"447\":1}}],[\"不过这种方式实现起来相对复杂\",{\"1\":{\"436\":1}}],[\"不过尽量避免在使用\",{\"1\":{\"366\":1}}],[\"不过\",{\"1\":{\"353\":1,\"357\":1,\"368\":1,\"426\":1}}],[\"不过是用俩栈\",{\"1\":{\"280\":1}}],[\"不得使用库函数\",{\"1\":{\"288\":1}}],[\"不得超过运行时的绝对最大值\",{\"1\":{\"120\":1}}],[\"不改变剩余字符顺序的情况下\",{\"1\":{\"268\":1}}],[\"不操作\",{\"1\":{\"266\":1}}],[\"不用的时候放回去\",{\"1\":{\"1055\":1}}],[\"不用我看了\",{\"1\":{\"552\":1}}],[\"不用多说\",{\"1\":{\"525\":1}}],[\"不用s\",{\"1\":{\"264\":2}}],[\"不用担心源代码被抄去让竞争对手更强\",{\"1\":{\"801\":1}}],[\"不用担心\",{\"1\":{\"36\":1,\"37\":1}}],[\"不相信数字资产的人可以转变为相信数字资产的人\",{\"1\":{\"534\":1}}],[\"不相等的时候\",{\"1\":{\"267\":1}}],[\"不相等这两种\",{\"1\":{\"267\":1}}],[\"不相等时\",{\"1\":{\"264\":1}}],[\"不相等\",{\"1\":{\"264\":1,\"267\":1}}],[\"不相交的线\",{\"0\":{\"261\":1}}],[\"不相同的时候\",{\"1\":{\"265\":3}}],[\"不相同\",{\"1\":{\"260\":2,\"268\":1}}],[\"不是同一进程下的服务调用\",{\"1\":{\"1063\":1}}],[\"不是吗\",{\"1\":{\"771\":1}}],[\"不是你的硬币\",{\"1\":{\"701\":1}}],[\"不是你的钥匙\",{\"1\":{\"701\":1}}],[\"不是人\",{\"1\":{\"689\":1}}],[\"不是用来说服你们的\",{\"1\":{\"680\":1}}],[\"不是被创造的\",{\"1\":{\"637\":1}}],[\"不是发自内心真的喜爱\",{\"1\":{\"634\":1}}],[\"不是圆括号\",{\"1\":{\"628\":1}}],[\"不是自欺欺人\",{\"1\":{\"500\":1}}],[\"不是操作原来的字符串\",{\"1\":{\"479\":1}}],[\"不是let\",{\"1\":{\"456\":1}}],[\"不是对\",{\"1\":{\"437\":1}}],[\"不是c字符串所以开头的redis其实就是redis五个字符没有\",{\"1\":{\"418\":1}}],[\"不是实际的数据\",{\"1\":{\"413\":1}}],[\"不是瓶颈\",{\"1\":{\"412\":1}}],[\"不是\",{\"1\":{\"260\":2,\"263\":1,\"264\":1}}],[\"不是由现实世界资产作为抵押物的\",{\"1\":{\"185\":1}}],[\"不行么\",{\"1\":{\"259\":1}}],[\"不持有股票那么现金就是0\",{\"1\":{\"252\":1}}],[\"不代表就是当天\",{\"1\":{\"252\":1}}],[\"不能使用空格\",{\"1\":{\"1025\":1}}],[\"不能直接传递\",{\"1\":{\"481\":1}}],[\"不能时运行时才能计算出的值\",{\"1\":{\"457\":1}}],[\"不能继续执行复制工作的后续步骤\",{\"1\":{\"425\":2}}],[\"不能同时执行它们只是一个性能方面的考虑\",{\"1\":{\"416\":1}}],[\"不能同时lend\",{\"1\":{\"150\":1}}],[\"不能有\",{\"1\":{\"387\":1}}],[\"不能立即删\",{\"1\":{\"386\":1}}],[\"不能定位到页中的具体记录\",{\"1\":{\"376\":1}}],[\"不能再执行新的更新操作\",{\"1\":{\"357\":1}}],[\"不能在\",{\"1\":{\"302\":1}}],[\"不能人为进行操纵\",{\"1\":{\"185\":1}}],[\"不懂就不要参与\",{\"1\":{\"166\":1}}],[\"不构成投资建议\",{\"1\":{\"166\":1}}],[\"不透明u8数据的紧凑数组\",{\"1\":{\"117\":1}}],[\"不包括本机程序\",{\"1\":{\"112\":1}}],[\"不需要在\",{\"1\":{\"1133\":1}}],[\"不需要连接真实的数据库\",{\"1\":{\"975\":1}}],[\"不需要defer来释放\",{\"1\":{\"958\":1}}],[\"不需要引入多余的接口和类型\",{\"1\":{\"873\":1}}],[\"不需要安装额外插件\",{\"1\":{\"731\":1}}],[\"不需要像\",{\"1\":{\"413\":1}}],[\"不需要显示调用\",{\"1\":{\"367\":1}}],[\"不需要我们显式去加\",{\"1\":{\"367\":1}}],[\"不需要重新移动数据\",{\"1\":{\"353\":1}}],[\"不需要移动已有的数据\",{\"1\":{\"353\":1}}],[\"不需要查询出包含整行记录的所有信息\",{\"1\":{\"353\":1}}],[\"不需要创建索引\",{\"1\":{\"352\":2}}],[\"不需要抵押品\",{\"1\":{\"163\":1}}],[\"不需要签名的只读账户地址数量\",{\"1\":{\"117\":1}}],[\"不需要中心化的可信机构\",{\"1\":{\"95\":1}}],[\"不需要排障和保留结果\",{\"1\":{\"50\":1}}],[\"不再需要任何中央银行了\",{\"1\":{\"94\":1}}],[\"不局限于编程工具🚀\",{\"1\":{\"88\":1}}],[\"不影响只读部分的\",{\"1\":{\"78\":1}}],[\"不同包下\",{\"1\":{\"956\":1}}],[\"不同之处是可以添加错误信息\",{\"1\":{\"449\":1}}],[\"不同sentinel判断客观下线的条件可能不同\",{\"1\":{\"426\":1}}],[\"不同的规则和漏洞\",{\"1\":{\"579\":1}}],[\"不同的存储引擎支持的索引类型也不相同\",{\"1\":{\"341\":1}}],[\"不同的子序列\",{\"0\":{\"264\":1}}],[\"不同的二叉搜索树\",{\"0\":{\"232\":1}}],[\"不同的是若处于事务状态\",{\"1\":{\"424\":1}}],[\"不同的是\",{\"1\":{\"76\":1,\"430\":1}}],[\"不同路径ii\",{\"0\":{\"230\":1}}],[\"不同路径\",{\"0\":{\"229\":1}}],[\"不同是递归传入的i+1变成i了\",{\"1\":{\"211\":1}}],[\"不同协议的具体利率计算公式可能不同\",{\"1\":{\"166\":1}}],[\"不同协议的清算触发条件和奖励机制可能不同\",{\"1\":{\"162\":1}}],[\"不同资产的抵押率不同\",{\"1\":{\"159\":1}}],[\"不同于aave的资产隔离\",{\"1\":{\"150\":1}}],[\"不同\",{\"1\":{\"76\":1,\"78\":1}}],[\"不同用户的进程就是通过\",{\"1\":{\"76\":1}}],[\"不会返回新的字符串\",{\"1\":{\"479\":1}}],[\"不会直接报错\",{\"1\":{\"447\":1}}],[\"不会\",{\"1\":{\"414\":2}}],[\"不会阻塞当前写操作命令的执行\",{\"1\":{\"413\":1}}],[\"不会立刻减少\",{\"1\":{\"393\":1,\"402\":1}}],[\"不会遍历这一片连续的内存空间去找到空闲的缓冲页面换掉\",{\"1\":{\"377\":1}}],[\"不会和行级的共享锁和独占锁发生冲突\",{\"1\":{\"368\":1}}],[\"不会因为数据或表结构的更新\",{\"1\":{\"364\":1}}],[\"不会相互干扰\",{\"1\":{\"361\":1}}],[\"不会结束在中间某个环节\",{\"1\":{\"361\":1}}],[\"不会覆盖以前的日志\",{\"1\":{\"358\":1}}],[\"不会出现半成功的状态\",{\"1\":{\"360\":1}}],[\"不会出现\",{\"1\":{\"358\":1}}],[\"不会记录查询类的操作\",{\"1\":{\"358\":1}}],[\"不会被开发者通过再赋值的方式拷贝\",{\"1\":{\"1144\":1}}],[\"不会被访问的预读页却占用了\",{\"1\":{\"377\":1}}],[\"不会被初始值覆盖\",{\"1\":{\"240\":1}}],[\"不会被清算\",{\"1\":{\"164\":1}}],[\"不会在容器被删除后自动删除\",{\"1\":{\"74\":1}}],[\"不会影响镜像\",{\"1\":{\"74\":1}}],[\"不加任何参数的情况下\",{\"1\":{\"54\":1}}],[\"不限技术文\",{\"1\":{\"4\":1}}],[\"病毒\",{\"1\":{\"34\":1}}],[\"什么不是垃圾\",{\"1\":{\"577\":1}}],[\"什么意思呢\",{\"1\":{\"551\":1}}],[\"什么时候应该使用\",{\"1\":{\"1047\":1}}],[\"什么时候\",{\"1\":{\"358\":1}}],[\"什么时候刷盘\",{\"1\":{\"358\":1}}],[\"什么时候不需要创建索引\",{\"0\":{\"352\":1}}],[\"什么时候需要创建索引\",{\"0\":{\"351\":1}}],[\"什么是lua脚本\",{\"0\":{\"1106\":1}}],[\"什么是反向代理器\",{\"1\":{\"1078\":1}}],[\"什么是流式grpc呢\",{\"1\":{\"1072\":1}}],[\"什么是有限状态机\",{\"0\":{\"1009\":1}}],[\"什么是资产阶级\",{\"1\":{\"677\":1}}],[\"什么是批判性思考\",{\"0\":{\"626\":1},\"1\":{\"626\":1}}],[\"什么是愚蠢的\",{\"1\":{\"620\":1}}],[\"什么是字符串\",{\"0\":{\"471\":1}}],[\"什么是惰性删除策略\",{\"1\":{\"414\":1}}],[\"什么是脑裂\",{\"1\":{\"413\":1}}],[\"什么是异步重试\",{\"1\":{\"385\":1}}],[\"什么是\",{\"1\":{\"377\":1}}],[\"什么是预读失败\",{\"1\":{\"377\":1}}],[\"什么是幻读\",{\"1\":{\"362\":1}}],[\"什么是稳定币\",{\"1\":{\"180\":1}}],[\"什么是比特币\",{\"0\":{\"94\":1}}],[\"什么是betxin\",{\"0\":{\"34\":1}}],[\"什么情况打破了原来的市场状态呢\",{\"1\":{\"11\":1}}],[\"即所有任务都执行完成时\",{\"1\":{\"1144\":1}}],[\"即所谓的\",{\"1\":{\"571\":1}}],[\"即方法的接受者是结构体\",{\"1\":{\"1138\":1}}],[\"即通信顺序进程\",{\"1\":{\"1136\":1}}],[\"即通过这样一个for循环就可以实现建堆的过程\",{\"1\":{\"950\":1}}],[\"即20微秒\",{\"1\":{\"1135\":1}}],[\"即进入系统调用时候保存的\",{\"1\":{\"1135\":1}}],[\"即从哪里获取\",{\"1\":{\"1135\":1}}],[\"即从2楼向上爬需要花费cost\",{\"1\":{\"228\":1}}],[\"即需要构建的产品\",{\"1\":{\"1025\":1}}],[\"即处于当前状态的机器是否接收具体指令\",{\"1\":{\"1009\":1}}],[\"即周六结束\",{\"1\":{\"1003\":1}}],[\"即mock指定参数返回约定好的响应内容\",{\"1\":{\"973\":1}}],[\"即父元素比子元素小\",{\"1\":{\"950\":1}}],[\"即有间隔gap距离去插入排序\",{\"1\":{\"947\":1}}],[\"即有能力接受已有的硬性限制\",{\"1\":{\"674\":1}}],[\"即相邻的元素的做比较\",{\"1\":{\"945\":1}}],[\"即雇佣你时间的公司雇佣你的最终目的是什么\",{\"1\":{\"792\":1}}],[\"即便利性与隐私性的取舍\",{\"1\":{\"710\":1}}],[\"即便系统故障也不会丢失\",{\"1\":{\"361\":1}}],[\"即时通信等\",{\"1\":{\"709\":1}}],[\"即知识是仍是成为重要生产资料的早期阶段\",{\"1\":{\"648\":1}}],[\"即销售知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"即想要和现实范围重叠的温迪图表的中间部分\",{\"1\":{\"584\":1}}],[\"即在非传统职业中茁壮成长的人都曾在某个时刻获得过\",{\"1\":{\"578\":1}}],[\"即你要经营你自己\",{\"1\":{\"663\":1}}],[\"即你目前正在尽力选择一条良好的生活道路\",{\"1\":{\"587\":1}}],[\"即你无法回忆起这种感觉是何时被植入给你的\",{\"1\":{\"575\":1}}],[\"即你学习一个东西如若不全面\",{\"1\":{\"525\":1}}],[\"即我承认现在的我可能不行\",{\"1\":{\"674\":1}}],[\"即我们所做的工作就等同于我们是谁\",{\"1\":{\"585\":1}}],[\"即我们大多数人在童年时代并没有真正接受过关于路径规划的教育\",{\"1\":{\"570\":1}}],[\"即我究竟做了些什么\",{\"1\":{\"500\":1}}],[\"即将结束\",{\"1\":{\"569\":1}}],[\"即一开始不需要投入大量资本就可以进行的公司\",{\"1\":{\"674\":1}}],[\"即一个人生出来就有嘴\",{\"1\":{\"551\":1}}],[\"即一主多从的模式\",{\"1\":{\"413\":1}}],[\"即花掉主权法币人民币或美元\",{\"1\":{\"534\":1}}],[\"即用户的利益不断被侵犯\",{\"1\":{\"533\":1}}],[\"即用s\",{\"1\":{\"264\":1}}],[\"即投资人需要以当下的视角去思考将自己的金钱放到何处才可以获取收益\",{\"1\":{\"528\":1}}],[\"即不是同一个进程下的服务\",{\"1\":{\"1063\":1}}],[\"即不断向未来那个正确发展\",{\"1\":{\"528\":1}}],[\"即不放物品i\",{\"1\":{\"236\":1}}],[\"即字符串变量必须由\",{\"1\":{\"477\":1}}],[\"即就是通过扫描服务器有的所有键值去重建aof文件\",{\"1\":{\"422\":1}}],[\"即先写日志\",{\"1\":{\"377\":1}}],[\"即能保护该记录\",{\"1\":{\"373\":1}}],[\"即两个事务可以同时持有包含共同间隙范围的间隙锁\",{\"1\":{\"372\":1}}],[\"即当闭区间\",{\"1\":{\"326\":1}}],[\"即第一行按照从左到右的顺序打印\",{\"1\":{\"304\":1,\"305\":1}}],[\"即链表的尾节点是倒数第1个节点\",{\"1\":{\"294\":1}}],[\"即计算\",{\"1\":{\"288\":1}}],[\"即必须一个方向比自己大\",{\"1\":{\"276\":1}}],[\"即每一行都按照从左到右\",{\"1\":{\"276\":1}}],[\"即冷冻期为\",{\"1\":{\"256\":1}}],[\"即考虑i\",{\"1\":{\"248\":1}}],[\"即放物品i\",{\"1\":{\"236\":1}}],[\"即背包容量为j\",{\"1\":{\"235\":1}}],[\"即dp\",{\"1\":{\"235\":2,\"244\":1,\"248\":1,\"262\":1,\"266\":1}}],[\"即是到达第dp\",{\"1\":{\"229\":1}}],[\"即可能仅仅只是将一些事实的一部分当作信息进行传输\",{\"1\":{\"642\":1}}],[\"即可选择\",{\"1\":{\"584\":1}}],[\"即可选择向上爬一个或者两个台阶\",{\"1\":{\"228\":1}}],[\"即可以将内存中的数据以固定格式保存在磁盘里\",{\"1\":{\"416\":1}}],[\"即可以提交事务\",{\"1\":{\"360\":1}}],[\"即可\",{\"1\":{\"326\":1}}],[\"即可达成共识\",{\"1\":{\"95\":1}}],[\"即银行发生有个坏账账户无人清算且保险基金无法全部偿还\",{\"1\":{\"150\":1}}],[\"即置信区间调整后的市场美元价格乘以债务的借入权重\",{\"1\":{\"150\":1}}],[\"即置信区间调整后的市场美元价格乘以资产的存款权重\",{\"1\":{\"150\":1}}],[\"即存储已编译的程序代码的账户\",{\"1\":{\"114\":1}}],[\"即系统程序和bpf加载程序\",{\"1\":{\"112\":1}}],[\"即使编译器可以创建新指针\",{\"1\":{\"1138\":1}}],[\"即使客户端传递了错误的数据\",{\"1\":{\"1088\":1}}],[\"即使短暂获取了投资人的大笔投入\",{\"1\":{\"800\":1}}],[\"即使需要学一点点\",{\"1\":{\"792\":1}}],[\"即使它很难\",{\"1\":{\"773\":1}}],[\"即使它当前没有为我创造金钱收入\",{\"1\":{\"739\":1}}],[\"即使在10年前买房\",{\"1\":{\"717\":1}}],[\"即使很少\",{\"1\":{\"663\":1}}],[\"即使很出名比如bilibili\",{\"1\":{\"663\":1}}],[\"即使这种信息是我们压根不需要的\",{\"1\":{\"631\":1}}],[\"即使你非常努力\",{\"1\":{\"799\":1}}],[\"即使你认为你的言论是正确的\",{\"1\":{\"784\":1}}],[\"即使你认为自己可以管理所有这些\",{\"1\":{\"723\":1}}],[\"即使你不点赞不评论不转发\",{\"1\":{\"689\":1}}],[\"即使你没有意识地接受这些想法\",{\"1\":{\"620\":1}}],[\"即使你是一个非常叛逆的人\",{\"1\":{\"619\":1}}],[\"即使你的内心渴望如此\",{\"1\":{\"585\":1}}],[\"即使事情进展顺利\",{\"1\":{\"587\":1}}],[\"即使事务队列中的某个命令在执行期间出现了错误\",{\"1\":{\"424\":1}}],[\"即使我们的感知最初可能正确无误\",{\"1\":{\"641\":1}}],[\"即使我们的意识也很熟悉这些渴望\",{\"1\":{\"576\":1}}],[\"即使我们心中有正确的游戏板块\",{\"1\":{\"580\":1}}],[\"即使把生活方式需求置于重要地位\",{\"1\":{\"573\":1}}],[\"即使近年来逆全球化进程不断发展\",{\"1\":{\"534\":1}}],[\"即使那九个月的记录不见了\",{\"1\":{\"500\":1}}],[\"即使有节点发生了故障\",{\"1\":{\"437\":1}}],[\"即使服务器在事务执行完毕之后停机\",{\"1\":{\"424\":1}}],[\"即使数据库中有多个事务并发地执行\",{\"1\":{\"424\":1}}],[\"即使查询出来的结果集很小\",{\"1\":{\"377\":1}}],[\"即使其他事务更新了表的数据\",{\"1\":{\"364\":1}}],[\"即使中途有其他事务插入了一条数据\",{\"1\":{\"361\":1,\"362\":1}}],[\"即使出现主库宕机\",{\"1\":{\"359\":1}}],[\"即使是这样也不应该在睡前刷短视频\",{\"1\":{\"789\":1}}],[\"即使是这个制作镜像的人\",{\"1\":{\"55\":1}}],[\"即使是人们所希望的模块化改进也没有得到丝毫保证\",{\"1\":{\"723\":1}}],[\"即使是那些没有投资被盗代币的用户也被迫牺牲了大约\",{\"1\":{\"706\":1}}],[\"即使是那些看似高高在上的渴望\",{\"1\":{\"577\":1}}],[\"即使是20年后再读思维也丝毫不过时\",{\"1\":{\"669\":1}}],[\"即使是目前很多公司也没有盈利\",{\"1\":{\"663\":1}}],[\"即使是拥有最复杂测试工具的权威也未能用这些工具达到认知的确定无疑\",{\"1\":{\"655\":1}}],[\"即使是无用信息\",{\"1\":{\"647\":1,\"686\":1}}],[\"即使是在\",{\"1\":{\"784\":1}}],[\"即使是在最好的学校里\",{\"1\":{\"551\":1}}],[\"即使是在互联网上\",{\"1\":{\"531\":1}}],[\"即使是正确的意见被冠上莫须有的罪名\",{\"1\":{\"551\":1}}],[\"即使是手机已经很方便的今天\",{\"1\":{\"532\":1}}],[\"即使是由相同的字符组成\",{\"1\":{\"267\":1}}],[\"即使容器被删除\",{\"1\":{\"74\":1}}],[\"即使容器没有运行\",{\"1\":{\"55\":1}}],[\"即使根本无法访问到\",{\"1\":{\"55\":1}}],[\"即使用cnb对话题进行交易\",{\"0\":{\"21\":1}}],[\"即\",{\"1\":{\"49\":2,\"111\":1,\"150\":3,\"169\":1,\"235\":1,\"241\":1,\"243\":1,\"248\":1,\"252\":2,\"254\":2,\"260\":2,\"262\":2,\"263\":1,\"264\":3,\"266\":5,\"268\":1,\"288\":1,\"297\":3,\"353\":1,\"395\":1,\"428\":1,\"468\":1,\"591\":1,\"1132\":2,\"1139\":1,\"1144\":1}}],[\"即话题总数额减少\",{\"1\":{\"28\":1}}],[\"并支持时间之间的比较\",{\"1\":{\"1205\":1}}],[\"并介绍了reflect\",{\"1\":{\"1194\":1}}],[\"并实现了\",{\"1\":{\"1163\":1}}],[\"并观察输出结果\",{\"1\":{\"1162\":1}}],[\"并指定自定义类型的命令行参数\",{\"1\":{\"1163\":1}}],[\"并指定不同的命令行参数\",{\"1\":{\"1161\":1,\"1163\":1}}],[\"并指定命令行参数\",{\"1\":{\"1161\":1}}],[\"并指出仅仅变得足够擅长某种技能并不能保证成功\",{\"1\":{\"580\":1}}],[\"并输出结果\",{\"1\":{\"1161\":1}}],[\"并停止执行\",{\"1\":{\"1156\":1}}],[\"并简化对输入输出的处理\",{\"1\":{\"1153\":1}}],[\"并消耗\",{\"1\":{\"1142\":1}}],[\"并执行\",{\"1\":{\"1142\":1}}],[\"并设置到当前\",{\"1\":{\"1137\":1}}],[\"并设置初始策略\",{\"1\":{\"855\":1}}],[\"并设置初始状态\",{\"1\":{\"838\":1,\"844\":1,\"849\":1}}],[\"并把该\",{\"1\":{\"1137\":1}}],[\"并调用server\",{\"1\":{\"1055\":1}}],[\"并调用文件句柄\",{\"1\":{\"450\":1}}],[\"并编译生成二进制文件\",{\"1\":{\"1026\":1}}],[\"并定义一个测试函数\",{\"1\":{\"967\":1}}],[\"并可以细粒度地控制对象粒度\",{\"1\":{\"934\":1}}],[\"并可以将成员对象抽象成接口像独立对象一样使用它们\",{\"1\":{\"916\":1}}],[\"并可能提供收费服务供用户管理私有镜像\",{\"1\":{\"48\":1}}],[\"并访问对象结构中的元素\",{\"1\":{\"867\":1}}],[\"并添加元素对象\",{\"1\":{\"867\":1}}],[\"并添加到主题对象中\",{\"1\":{\"844\":1}}],[\"并通知所有观察者\",{\"1\":{\"844\":1}}],[\"并通过\",{\"1\":{\"1146\":1}}],[\"并通过一个示例程序来说明其应用\",{\"1\":{\"894\":1}}],[\"并通过将创建逻辑集中在一处来消除重复\",{\"1\":{\"881\":1}}],[\"并通过实例返回的ping命令回复来判断实例是否在线\",{\"1\":{\"426\":1}}],[\"并通过发送频道信息来让其他sentinel知道自己的存在\",{\"1\":{\"426\":1}}],[\"并通过分析info命令的回复来获取主服务器的当前消息\",{\"1\":{\"426\":1}}],[\"并恢复发起人的状态\",{\"1\":{\"838\":1}}],[\"并保存发起人的状态\",{\"1\":{\"838\":1}}],[\"并保留自己的意见\",{\"1\":{\"734\":1}}],[\"并注册同事对象\",{\"1\":{\"833\":1}}],[\"并打印结果\",{\"1\":{\"827\":1}}],[\"并打印出转向信息\",{\"1\":{\"429\":1}}],[\"并向客户端提供了一个客户端可以访问系统的接口\",{\"1\":{\"925\":1}}],[\"并向客户端返回代表事务执行失败的空回复\",{\"1\":{\"424\":1}}],[\"并向其中添加一些书籍对象\",{\"1\":{\"827\":1}}],[\"并几乎没有卖出计划\",{\"1\":{\"804\":1}}],[\"并努力使用它\",{\"1\":{\"771\":1}}],[\"并损失了所有用户总资产的一半\",{\"1\":{\"706\":1}}],[\"并带走您的代币\",{\"1\":{\"706\":1}}],[\"并得到结论\",{\"1\":{\"654\":1}}],[\"并以空格作为分隔符\",{\"1\":{\"1172\":1}}],[\"并以\",{\"1\":{\"1009\":1}}],[\"并以一种愉快的活动分散你的注意力\",{\"1\":{\"653\":1}}],[\"并以字符串的形式返回sha256散列\",{\"1\":{\"514\":1}}],[\"并形成一种敌视习惯\",{\"1\":{\"653\":1}}],[\"并从中获取经济回报和财富\",{\"1\":{\"649\":1}}],[\"并从命令回复中获取相关的信息\",{\"1\":{\"426\":1}}],[\"并关注了时间作为关键的生产资料\",{\"1\":{\"649\":1}}],[\"并关闭缓冲区帐户\",{\"1\":{\"114\":1}}],[\"并允许机器本身参与其中\",{\"1\":{\"649\":1}}],[\"并迫使其声明放弃自己的错误\",{\"1\":{\"643\":1}}],[\"并受到论文或课程不及格的惩罚\",{\"1\":{\"628\":1}}],[\"并考虑每一个观点的相对优点\",{\"1\":{\"627\":1}}],[\"并花一些时间这么做\",{\"1\":{\"627\":1}}],[\"并留下重要的问题悬而未决\",{\"1\":{\"627\":1}}],[\"并预先规定我们的结论\",{\"1\":{\"627\":1}}],[\"并假设自己的观点无差错\",{\"1\":{\"627\":1}}],[\"并准备花时间去解决难题\",{\"1\":{\"627\":1}}],[\"并采取了一种教授学术事实而不是判断过程的方法\",{\"1\":{\"620\":1}}],[\"并否决了我那安静\",{\"1\":{\"588\":1}}],[\"并担心自己可能错过了什么\",{\"1\":{\"587\":1}}],[\"并暗示这样做的人是失败者\",{\"1\":{\"585\":1}}],[\"并评估他的进步趋势\",{\"1\":{\"583\":1}}],[\"并称之为\",{\"1\":{\"580\":1}}],[\"并按照现代规则进行游戏\",{\"1\":{\"579\":1}}],[\"并配以咒骂和棍棒图\",{\"1\":{\"579\":1}}],[\"并配合\",{\"1\":{\"385\":1}}],[\"并为每个参数指定了名称\",{\"1\":{\"1161\":1}}],[\"并为get方法的\",{\"1\":{\"1056\":1}}],[\"并为它添加一个子命令\",{\"1\":{\"992\":1}}],[\"并为它们在你的章鱼上腾出了空间\",{\"1\":{\"576\":1}}],[\"并为集群中的所有其他节点都创建一个相应的clusternode结构\",{\"1\":{\"427\":1}}],[\"并经过仔细决定要接受\",{\"1\":{\"575\":1}}],[\"并经常采用统一的异常来处理\",{\"1\":{\"446\":1}}],[\"并揭示一个通过深入独立思考逐渐发展的真实演变链条\",{\"1\":{\"575\":1}}],[\"并问自己到底哪些触角对于身份转变感到反对\",{\"1\":{\"574\":1}}],[\"并凌驾于你的其他渴望之上\",{\"1\":{\"574\":1}}],[\"并确保它是有意义的\",{\"1\":{\"570\":1}}],[\"并获得一些清晰的认识\",{\"1\":{\"569\":1}}],[\"并赋予政府对其国家互联网有可访问性的最终权力\",{\"1\":{\"533\":1}}],[\"并占领用户的心智\",{\"1\":{\"521\":1}}],[\"并再次进行选举\",{\"1\":{\"433\":1}}],[\"并再次发送之前想要执行的命令\",{\"1\":{\"429\":1}}],[\"并根据\",{\"1\":{\"1171\":1}}],[\"并根据自己是否认识clustermsgdatagossip结构中记录的被选中节点来选择进行哪种操作\",{\"1\":{\"435\":1}}],[\"并根据自己收到了多少条这种消息来统计自己获得了多少主节点的支持\",{\"1\":{\"433\":1}}],[\"并根据其中的主服务器ip和端口号\",{\"1\":{\"426\":1}}],[\"并开始对主节点进行复制\",{\"1\":{\"433\":1}}],[\"并继续执行\",{\"1\":{\"855\":2}}],[\"并继续保存\",{\"1\":{\"838\":2}}],[\"并继续处理客户端的命令请求\",{\"1\":{\"433\":1}}],[\"并继续复制主服务器\",{\"1\":{\"425\":1}}],[\"并检查这个槽是否指派给了自己\",{\"1\":{\"429\":1}}],[\"并提到了反射包中的两个主要类型\",{\"1\":{\"1194\":1}}],[\"并提供一个按钮\",{\"1\":{\"1156\":1}}],[\"并提供了一系列的方法用于操作和转换持续时间\",{\"1\":{\"1205\":1}}],[\"并提供了一个全局访问点来访问该对象\",{\"1\":{\"895\":1}}],[\"并提供了缓冲功能\",{\"1\":{\"1153\":1}}],[\"并提供复制和故障转移功能\",{\"1\":{\"427\":1}}],[\"并提交了事务\",{\"1\":{\"362\":1}}],[\"并选出其中运行id最小的从服务器\",{\"1\":{\"426\":1}}],[\"并选出其中偏移量最大的从服务器\",{\"1\":{\"426\":1}}],[\"并选出其中优先级最高的从服务器\",{\"1\":{\"426\":1}}],[\"并选择在\",{\"1\":{\"252\":1}}],[\"并\",{\"1\":{\"426\":1,\"433\":1,\"434\":1}}],[\"并对你说的每件事都加上也许和大概\",{\"1\":{\"657\":1}}],[\"并对你已产生的思想进行了批判性思考\",{\"1\":{\"627\":1}}],[\"并对结构中的slots数组进行保存或更新\",{\"1\":{\"428\":1}}],[\"并对主服务器执行故障转移操作\",{\"1\":{\"426\":1}}],[\"并对基于心跳检测实现的几个功能进行介绍\",{\"1\":{\"425\":1}}],[\"并进行以下检查\",{\"1\":{\"426\":1}}],[\"并接受它们\",{\"1\":{\"620\":1}}],[\"并接受主服务器同步过来写操作命令\",{\"1\":{\"413\":1}}],[\"并接收命令回复\",{\"1\":{\"426\":1}}],[\"并与主服务器执行完整同步操作\",{\"1\":{\"425\":1}}],[\"并导致主从服务器状态不再一致\",{\"1\":{\"425\":1}}],[\"并说明部分重同步的实现原理\",{\"1\":{\"425\":1}}],[\"并说明旧版复制功能在处理断线后重新连接的从服务器时\",{\"1\":{\"425\":1}}],[\"并说明redis是如何妥善地处理这些错误\",{\"1\":{\"424\":1}}],[\"并返回该表示形式的可打印字符的字符串\",{\"1\":{\"1200\":1}}],[\"并返回该表示形式的\",{\"1\":{\"1200\":1}}],[\"并返回该表示形式的字符串\",{\"0\":{\"1200\":1},\"1\":{\"1200\":2}}],[\"并返回该序列的长度\",{\"1\":{\"258\":1,\"268\":1}}],[\"并返回对应的字符串形式\",{\"1\":{\"1198\":1}}],[\"并返回对应的浮点数值\",{\"1\":{\"1198\":1}}],[\"并返回对应的整数值\",{\"1\":{\"1198\":1}}],[\"并返回表示该整数的字符串形式\",{\"1\":{\"1198\":1}}],[\"并返回文件中的用户名\",{\"1\":{\"450\":1}}],[\"并返回这些频道的订阅者数量\",{\"1\":{\"423\":1}}],[\"并返回\",{\"1\":{\"403\":1}}],[\"并随着rehash操作的执行而最终变成空表\",{\"1\":{\"396\":1}}],[\"并重建缓存\",{\"1\":{\"384\":1}}],[\"并发会使用到锁\",{\"1\":{\"1018\":1}}],[\"并发情况则是使用\",{\"1\":{\"1018\":1}}],[\"并发出两个子进程\",{\"1\":{\"416\":1}}],[\"并发时\",{\"1\":{\"384\":1}}],[\"并发\",{\"1\":{\"384\":1,\"388\":2}}],[\"并发引入的一致性问题\",{\"0\":{\"383\":1},\"1\":{\"380\":1}}],[\"并发事务时可能发生的现象也会不同\",{\"1\":{\"361\":1}}],[\"并没有任何有益的效用\",{\"1\":{\"788\":1}}],[\"并没有什么特别的\",{\"1\":{\"426\":1}}],[\"并没有被访问\",{\"1\":{\"377\":1}}],[\"并没有其它的资源\",{\"1\":{\"65\":1}}],[\"并行事务会引发什么问题\",{\"1\":{\"361\":1}}],[\"并更新存储引擎中的数据\",{\"1\":{\"359\":1}}],[\"并更新本地存储数据\",{\"1\":{\"359\":1}}],[\"并清空\",{\"1\":{\"358\":1}}],[\"并每次向右或者向下移动一格\",{\"1\":{\"319\":1}}],[\"并使它们可以在不改变元素类的前提下\",{\"1\":{\"868\":1}}],[\"并使它们可以互相替换的设计模式\",{\"1\":{\"856\":1}}],[\"并使它们可以互相替换\",{\"1\":{\"853\":1}}],[\"并使我们的感觉好些\",{\"1\":{\"653\":1}}],[\"并使程序崩溃\",{\"1\":{\"450\":1}}],[\"并使这些整数的乘积最大化\",{\"1\":{\"231\":1}}],[\"并使用setstring\",{\"1\":{\"1194\":1}}],[\"并使用一个缓冲区记录从现在开始执行的所有写命令\",{\"1\":{\"425\":1}}],[\"并使用\",{\"1\":{\"58\":1,\"724\":1,\"1205\":1}}],[\"并鼓励采用最佳实践来保护用户数据\",{\"1\":{\"193\":1}}],[\"并包含专用的api节点来处理其各自集群的json\",{\"1\":{\"137\":1}}],[\"并持有一种代币的数量\",{\"1\":{\"135\":1}}],[\"并存储在新的\",{\"1\":{\"410\":1}}],[\"并存储以下数据\",{\"1\":{\"134\":1}}],[\"并存储有关代币的全局元数据\",{\"1\":{\"132\":1}}],[\"并将结果追加到字节切片\",{\"1\":{\"1199\":2}}],[\"并将它们存储在\",{\"1\":{\"1163\":1}}],[\"并将它的值设置为0\",{\"1\":{\"396\":1}}],[\"并将解析后的值存储在对应的整数变量中\",{\"1\":{\"1162\":1}}],[\"并将解析后的值存储在对应的布尔变量中\",{\"1\":{\"1162\":1}}],[\"并将相应的值赋给对应的变量\",{\"1\":{\"1161\":1}}],[\"并将索引加一\",{\"1\":{\"827\":2}}],[\"并将内容放入\",{\"1\":{\"451\":1}}],[\"并将来自\",{\"1\":{\"450\":1}}],[\"并将这些槽全部指派给自己\",{\"1\":{\"433\":1}}],[\"并将这些数据重新发送给从服务器\",{\"1\":{\"425\":1}}],[\"并将主节点b的下线报告\",{\"1\":{\"433\":1}}],[\"并将所有输入的槽指派给接收该命令的节点负责\",{\"1\":{\"428\":1}}],[\"并将该结构添加到自己的clusterstate\",{\"1\":{\"427\":2}}],[\"并将该元素添加到另一个列表\",{\"1\":{\"405\":1}}],[\"并将其赋值给\",{\"1\":{\"1163\":1}}],[\"并将其赋值给对应的变量\",{\"1\":{\"1160\":1}}],[\"并将其打印出来\",{\"1\":{\"1161\":1,\"1163\":1}}],[\"并将其从nonempty中删除\",{\"1\":{\"1149\":1}}],[\"并将其设置成下一个运行的\",{\"1\":{\"1137\":1}}],[\"并将其存储在静态变量中\",{\"1\":{\"898\":1,\"899\":1}}],[\"并将其作为我们信念的基石\",{\"1\":{\"639\":1}}],[\"并将其转换为主服务器\",{\"1\":{\"426\":1}}],[\"并将其添加到代币帐户\",{\"1\":{\"133\":1}}],[\"并将自己的数据库更新至主服务器数据库当前所处的状态\",{\"1\":{\"425\":1}}],[\"并将从服务器看作是一个连接到主服务器的客户端来对待\",{\"1\":{\"425\":1}}],[\"并将\",{\"1\":{\"403\":1}}],[\"并将利息存到保险账户\",{\"1\":{\"152\":1}}],[\"并将默认请求的最大限制设置为每条指令每条指令20万cu\",{\"1\":{\"122\":1}}],[\"并组织成特定的功能\",{\"1\":{\"126\":1}}],[\"并由设置为\",{\"1\":{\"114\":1}}],[\"并处理这些请求\",{\"1\":{\"75\":1}}],[\"并加载一个\",{\"1\":{\"74\":1}}],[\"并在命令行参数中使用\",{\"1\":{\"1163\":2}}],[\"并在缓冲区为空时填充缓冲区\",{\"1\":{\"1153\":1}}],[\"并在缓冲区满或显式刷新时将数据写入底层的\",{\"1\":{\"1153\":1}}],[\"并在所有读操作都被释放之后触发写操作的信号量\",{\"1\":{\"1143\":1}}],[\"并在保持类方法完整性的前提下\",{\"1\":{\"919\":1}}],[\"并在工厂后面抽象出对象的创建\",{\"1\":{\"883\":1}}],[\"并在需要时从外部对象中恢复的设计模式\",{\"1\":{\"839\":1}}],[\"并在出现错误时回滚操作\",{\"1\":{\"819\":1}}],[\"并在撤销操作时恢复状态\",{\"1\":{\"819\":1}}],[\"并在其方法中调用命令对象的\",{\"1\":{\"821\":1}}],[\"并在其\",{\"1\":{\"821\":1,\"828\":1}}],[\"并在其后的几十年中不断去应用\",{\"1\":{\"810\":1}}],[\"并在其内部调用\",{\"1\":{\"463\":1}}],[\"并在做了一系列\",{\"1\":{\"804\":1}}],[\"并在七牛云转正成功\",{\"1\":{\"759\":1}}],[\"并在23年初先后在火线安全和七牛云两家公司实习\",{\"1\":{\"759\":1}}],[\"并在开放和封闭组件之间保持清晰的分界线\",{\"1\":{\"725\":1}}],[\"并在学术真诚需要时修改它们\",{\"1\":{\"657\":1}}],[\"并在竞争激烈的市场中取得成功\",{\"1\":{\"646\":1}}],[\"并在被复制的主节点下线时\",{\"1\":{\"433\":1}}],[\"并在被监视的主服务器下线时\",{\"1\":{\"426\":1}}],[\"并在master所对应的实例结构的flags属性中打开sri\",{\"1\":{\"426\":1}}],[\"并在它重新上线时\",{\"1\":{\"426\":1}}],[\"并在本章最后\",{\"1\":{\"425\":1}}],[\"并在exec命令执行时\",{\"1\":{\"424\":1}}],[\"并在账户关闭时收回\",{\"1\":{\"124\":1}}],[\"并在只读的镜像层外面挂载一层可读写层\",{\"1\":{\"64\":1}}],[\"并在未来不超过24小时内完成话题的具体结算\",{\"1\":{\"27\":1}}],[\"并绑定到容器的标准输入上\",{\"1\":{\"64\":1}}],[\"并非所有定制都会通过\",{\"1\":{\"60\":1}}],[\"并非单一文件\",{\"1\":{\"49\":1}}],[\"并不那么令人不快\",{\"1\":{\"571\":1}}],[\"并不会影响申请其他规格的mspan\",{\"1\":{\"1149\":1}}],[\"并不会返回新的字符串\",{\"1\":{\"477\":1}}],[\"并不会打印出moved错误\",{\"1\":{\"429\":1}}],[\"并不会使用\",{\"1\":{\"361\":1}}],[\"并不存在互斥关系\",{\"1\":{\"372\":1}}],[\"并不需要等语句执行后才释放\",{\"1\":{\"369\":1}}],[\"并不需要有操作系统提供运行时支持\",{\"1\":{\"57\":1}}],[\"并不能完全避免幻读现象\",{\"1\":{\"362\":1}}],[\"并不能增加\",{\"1\":{\"268\":1}}],[\"并不代表事务启动了\",{\"1\":{\"362\":1}}],[\"并不意味着启动了事务\",{\"1\":{\"362\":1}}],[\"并不意味着写入到了磁盘\",{\"1\":{\"357\":1,\"360\":1}}],[\"并不是因为他们忙于生产\",{\"1\":{\"789\":1}}],[\"并不是要具备这些所有不公平优势才可以成功\",{\"1\":{\"673\":1}}],[\"并不是一个好策略\",{\"1\":{\"575\":1}}],[\"并不是一定要偷i\",{\"1\":{\"248\":1}}],[\"并不是说\",{\"1\":{\"583\":1}}],[\"并不是说依靠智慧的父母\",{\"1\":{\"575\":1}}],[\"并不是说一定要第i天买入股票\",{\"1\":{\"254\":1}}],[\"并不是制约\",{\"1\":{\"412\":1}}],[\"并不是与数据库中的值一一对应的\",{\"1\":{\"383\":1}}],[\"并不是每次都直接改磁盘数据\",{\"1\":{\"377\":1}}],[\"并不是意味着事务成功获取到了锁\",{\"1\":{\"374\":1}}],[\"并不是完全解决了\",{\"1\":{\"362\":1}}],[\"并不是彻底避免\",{\"1\":{\"361\":1}}],[\"并不实际存在\",{\"1\":{\"57\":1}}],[\"并命名为\",{\"1\":{\"56\":1}}],[\"并且不会导致语法错误\",{\"1\":{\"1200\":1}}],[\"并且不存在等待的\",{\"1\":{\"1144\":1}}],[\"并且不觉得这是一个问题\",{\"1\":{\"533\":1}}],[\"并且处理的运行队列为空\",{\"1\":{\"1142\":1}}],[\"并且正在执行用户代码或者调度器\",{\"1\":{\"1134\":1}}],[\"并且我们需要实现unaryinterceptor\",{\"1\":{\"1097\":1}}],[\"并且我认为长远来看腾讯股票应该涨十倍都不止\",{\"1\":{\"714\":1}}],[\"并且学习了传递http的多种方式\",{\"1\":{\"1080\":1}}],[\"并且创建对应的调用函数文件\",{\"1\":{\"1067\":1}}],[\"并且调用当前engine\",{\"1\":{\"1055\":1}}],[\"并且就可以将此类型作为server\",{\"1\":{\"1055\":1}}],[\"并且各有千秋\",{\"1\":{\"1044\":1}}],[\"并且将依赖注入到我们的\",{\"1\":{\"981\":1}}],[\"并且将x下线的消息向集群广播\",{\"1\":{\"433\":1}}],[\"并且执行go\",{\"1\":{\"966\":1}}],[\"并且执行错后\",{\"1\":{\"424\":1}}],[\"并且遍历p到r1的数据\",{\"1\":{\"949\":1}}],[\"并且是稳定的\",{\"1\":{\"948\":1}}],[\"并且有了start\",{\"1\":{\"948\":1}}],[\"并且它需要在运行时根据状态改变其行为时\",{\"1\":{\"848\":1}}],[\"并且它保证了事务的acid中的原子性\",{\"1\":{\"356\":1}}],[\"并且让人对自己的掌控感更强\",{\"1\":{\"789\":1}}],[\"并且让更长的链表先走相差的长度\",{\"1\":{\"324\":1}}],[\"并且现代社会给言论披上了自由的外衣\",{\"1\":{\"783\":1}}],[\"并且无错可试\",{\"1\":{\"783\":1}}],[\"并且后果可承受的试错\",{\"1\":{\"783\":1}}],[\"并且大家还对这样的做法嗤之以鼻\",{\"1\":{\"767\":1}}],[\"并且懂得如何利用知识变现的人更容易致富\",{\"1\":{\"746\":1}}],[\"并且长远来看不会对自己有任何影响\",{\"1\":{\"734\":1}}],[\"并且真的能够带来一些改变\",{\"1\":{\"731\":1}}],[\"并且如果只用chrome永远也不会体会到生产力会提高多少\",{\"1\":{\"731\":1}}],[\"并且如果进入的网页里没有办法的certs证书\",{\"1\":{\"533\":1}}],[\"并且拥有着独特的功能\",{\"1\":{\"731\":1}}],[\"并且尽可能无聊\",{\"1\":{\"724\":1}}],[\"并且确实会失败\",{\"1\":{\"723\":1}}],[\"并且分析人们使用自家应用的行为\",{\"1\":{\"709\":1}}],[\"并且仍然继续通过不允许加密货币提款来迫使他们保留代币\",{\"1\":{\"706\":1}}],[\"并且实际上也并没有真正让大脑放松\",{\"1\":{\"788\":1}}],[\"并且实际上强制您保留您的硬币\",{\"1\":{\"706\":1}}],[\"并且实时监控我们的电话接听系统\",{\"1\":{\"533\":1}}],[\"并且他们也为此投入了大量的时间\",{\"1\":{\"746\":1}}],[\"并且他们也获得了大量的财富\",{\"1\":{\"746\":1}}],[\"并且他本人也是通过很多年的积累有了大量的粉丝群体\",{\"1\":{\"738\":1}}],[\"并且他不会有任何人类的抵触情绪\",{\"1\":{\"692\":1}}],[\"并且他认为\",{\"1\":{\"424\":1}}],[\"并且做了详细的解释\",{\"1\":{\"673\":1}}],[\"并且认真分析了未来如何做才能赢\",{\"1\":{\"669\":1}}],[\"并且更快地感觉好起来\",{\"1\":{\"653\":1}}],[\"并且强调时间的管理和运用对于高效利用信息和知识资源以及财富创造的重要性\",{\"1\":{\"649\":1}}],[\"并且简化我们周围的世界\",{\"1\":{\"640\":1}}],[\"并且作出肯定的断言以表达真相\",{\"1\":{\"637\":1}}],[\"并且作用域是全局\",{\"1\":{\"454\":1}}],[\"并且继续玷污他的名誉\",{\"1\":{\"628\":1}}],[\"并且从善如流地\",{\"1\":{\"627\":1}}],[\"并且顽固地坚持自己的观点\",{\"1\":{\"627\":1}}],[\"并且早就想这样去做\",{\"1\":{\"605\":1}}],[\"并且用到自己最近一段时间学习到的开发知识\",{\"1\":{\"602\":1}}],[\"并且你会成为一个更好的游戏玩家\",{\"1\":{\"585\":1}}],[\"并且你的渴望章鱼将反映这些变化\",{\"1\":{\"585\":1}}],[\"并且你的职业目标是成为谷歌的顶级工程师\",{\"1\":{\"580\":1}}],[\"并且告诉用户\",{\"1\":{\"534\":1}}],[\"并且预言未来会出现一种纯数字化的货币\",{\"1\":{\"528\":1}}],[\"并且没收作案工具\",{\"1\":{\"528\":1}}],[\"并且家庭住址被搜查\",{\"1\":{\"528\":1}}],[\"并且为它计算hash值\",{\"1\":{\"514\":1}}],[\"并且具有最多只能赋值一次的特性\",{\"1\":{\"463\":1}}],[\"并且具有投票权的主节点向这个从节点投票\",{\"1\":{\"433\":1}}],[\"并且其值初始化为none\",{\"1\":{\"461\":1}}],[\"并且可能会失败\",{\"1\":{\"448\":1}}],[\"并且可以使用不同的键类型和值类型进行实例化\",{\"1\":{\"1188\":1}}],[\"并且可以同时播放多音乐\",{\"1\":{\"521\":1}}],[\"并且可以通过list结构的dup\",{\"1\":{\"394\":1}}],[\"并且可以根据id来控制用户的权限和行为\",{\"1\":{\"194\":1}}],[\"并且可以帮助港元提升作为国际货币的地位\",{\"1\":{\"188\":1}}],[\"并且可以继承\",{\"1\":{\"51\":1}}],[\"并且总耗时没有超过锁的有效时间\",{\"1\":{\"437\":1}}],[\"并且消息里面包含了节点e和节点f的消息\",{\"1\":{\"435\":1}}],[\"并且消息里面包含了节点b和节点c的信息\",{\"1\":{\"435\":1}}],[\"并且原主机的从主机也会改为复制新主机\",{\"1\":{\"433\":1}}],[\"并且发送命令的客户端带有redis\",{\"1\":{\"432\":1}}],[\"并且键key所属的槽i正好指派给了当前节点\",{\"1\":{\"432\":1}}],[\"并且再次发送之前想要发送的命令\",{\"1\":{\"432\":1}}],[\"并且命令要处理的数据库键恰好就属于正在被迁移的槽时\",{\"1\":{\"432\":1}}],[\"并且命令中的runid参数不是\",{\"1\":{\"426\":1}}],[\"并且相关槽所属的键值对也会从源节点被移动到目标节点\",{\"1\":{\"431\":1}}],[\"并且局部领头一旦设置\",{\"1\":{\"426\":1}}],[\"并且主服务器可以正常处理从服务器\",{\"1\":{\"425\":1}}],[\"并且复制积压缓冲区会为队列中的每个字节记录相应的复制偏移量\",{\"1\":{\"425\":1}}],[\"并且事务也总是具有隔离性的\",{\"1\":{\"424\":1}}],[\"并且服务器保证\",{\"1\":{\"424\":1}}],[\"并且在可预见的未来也将一直如此\",{\"1\":{\"738\":1}}],[\"并且在每天的使用中都会尝试新事物\",{\"1\":{\"731\":1}}],[\"并且在更加自由的社会中\",{\"1\":{\"717\":1}}],[\"并且在打破惯例时需要以全新的视角审视自己的公司\",{\"1\":{\"674\":1}}],[\"并且在恰当的时间做着恰当的创业并且成功了\",{\"1\":{\"673\":1}}],[\"并且在外科手术方面非常出色\",{\"1\":{\"580\":1}}],[\"并且在并发状态下执行的事务和串行执行的事务产生的结果完全相同\",{\"1\":{\"424\":1}}],[\"并且在事务执行期间服务器不会中断事务而改去执行其他客户端的命令请求\",{\"1\":{\"424\":1}}],[\"并且当redis运行在某种特定的持久化模式下时\",{\"1\":{\"424\":1}}],[\"并且当nums\",{\"1\":{\"293\":1}}],[\"并且aof文件的体积越大\",{\"1\":{\"422\":1}}],[\"并且这些状态之间的转换逻辑复杂的场景\",{\"1\":{\"850\":1}}],[\"并且这些个人网站也有很多成为了当时的门面\",{\"1\":{\"532\":1}}],[\"并且这种资产是可增值的\",{\"1\":{\"647\":1,\"686\":1}}],[\"并且这个主节点尚未投票给其他从节点\",{\"1\":{\"433\":1}}],[\"并且这个主节点已经接管了原本由已下线节点负责处理的槽\",{\"1\":{\"433\":1}}],[\"并且这个集合的元素数量不多时\",{\"1\":{\"398\":1}}],[\"并且这两个子进程都同时执行大量的磁盘写入操作\",{\"1\":{\"416\":1}}],[\"并且提供主从节点故障转移的功能\",{\"1\":{\"413\":1}}],[\"并且采用了高效的数据结构\",{\"1\":{\"412\":1}}],[\"并且每个接收到slots数组的节点都会将数组保存到相应节点的clusternode结构中\",{\"1\":{\"428\":1}}],[\"并且每个sentinel在每个配置纪元里面只能设置一次局部领头sentinel\",{\"1\":{\"426\":1}}],[\"并且每个元素的值小于\",{\"1\":{\"410\":1}}],[\"并且每个数字都在范围0～n\",{\"1\":{\"326\":1}}],[\"并且新元素的类型比整数集合现有所有元素的类型都要长时\",{\"1\":{\"398\":1}}],[\"并且保证集合中不会出现重复元素\",{\"1\":{\"398\":1}}],[\"并且哈希表的负载因子大于等于5\",{\"1\":{\"395\":1}}],[\"并且哈希表的负载因子大于等于1\",{\"1\":{\"395\":1}}],[\"并且两步都可以\",{\"1\":{\"383\":1}}],[\"并且把该缓存页对应的控制块的信息填上\",{\"1\":{\"377\":1}}],[\"并且锁定记录本身\",{\"1\":{\"370\":1,\"373\":1}}],[\"并且给定的数组总是存在多数元素\",{\"1\":{\"312\":1}}],[\"并且使皇后彼此之间不能相互攻击\",{\"1\":{\"220\":1}}],[\"并且使用了github登录\",{\"1\":{\"192\":1}}],[\"并且任意顺序返回不重复的全排列\",{\"1\":{\"219\":1}}],[\"并且根据id和role来控制用户的权限和行为\",{\"1\":{\"194\":1}}],[\"并且集成了nextauth\",{\"1\":{\"192\":1}}],[\"并且配置好项目\",{\"1\":{\"191\":1}}],[\"并且会附加一些合约代码进行讲解\",{\"1\":{\"166\":1}}],[\"并且只能由铸币账户的铸币厂机构完成\",{\"1\":{\"133\":1}}],[\"并且基于已有的链上合约写了个dapp\",{\"1\":{\"108\":1}}],[\"并且获得新发行的比特币奖励\",{\"1\":{\"94\":1}}],[\"并且也不存在垃圾回收这样的机制来处理没有任何容器引用的\",{\"1\":{\"74\":1}}],[\"并且还清理了\",{\"1\":{\"58\":1}}],[\"并且\",{\"1\":{\"58\":1,\"393\":1,\"402\":1,\"494\":1,\"1161\":1}}],[\"并且必须是第一条指令\",{\"1\":{\"57\":1}}],[\"并且进行交互式操作的话\",{\"1\":{\"50\":1}}],[\"并且下载结束后\",{\"1\":{\"49\":1}}],[\"并且向用户发送具体结算的信息\",{\"1\":{\"27\":1}}],[\"并拥有大量的高质量的\",{\"1\":{\"48\":1}}],[\"分成以下几步\",{\"1\":{\"1142\":1}}],[\"分为\",{\"1\":{\"1135\":2}}],[\"分触发\",{\"1\":{\"1002\":3}}],[\"分了n次\",{\"1\":{\"948\":1}}],[\"分离复杂对象的创建和表示\",{\"1\":{\"873\":1}}],[\"分析用户行为\",{\"1\":{\"709\":1}}],[\"分析或者写入操作\",{\"1\":{\"422\":1}}],[\"分享出去是一种对人很有考验的做法\",{\"1\":{\"660\":1}}],[\"分享一首最近喜欢的李宗盛的一首歌\",{\"1\":{\"505\":1}}],[\"分享一下我最近在sui链上有个u本位14\",{\"1\":{\"166\":1}}],[\"分钟域为\",{\"1\":{\"1002\":2}}],[\"分钟触发一次\",{\"1\":{\"1002\":1}}],[\"分钟触发\",{\"1\":{\"1002\":1}}],[\"分钟\",{\"1\":{\"570\":1,\"1002\":3,\"1205\":1}}],[\"分钟语无伦次的建议独白\",{\"1\":{\"569\":1}}],[\"分钟最低价\",{\"1\":{\"27\":1}}],[\"分支中的\",{\"1\":{\"448\":1}}],[\"分\",{\"1\":{\"426\":1,\"1212\":1}}],[\"分数从高到低排序\",{\"1\":{\"410\":1}}],[\"分数从高到底\",{\"1\":{\"410\":1}}],[\"分布锁\",{\"1\":{\"387\":1,\"388\":1}}],[\"分布式锁\",{\"1\":{\"383\":1}}],[\"分两阶段来完成\",{\"1\":{\"360\":1}}],[\"分割成的三段部分组成\",{\"1\":{\"1047\":1}}],[\"分割等和子集\",{\"0\":{\"237\":1}}],[\"分割回文串\",{\"0\":{\"213\":1}}],[\"分拆数字i\",{\"1\":{\"231\":1}}],[\"分别表示两个整数\",{\"1\":{\"1161\":1}}],[\"分别用于写等待读和读等待写\",{\"1\":{\"1143\":1}}],[\"分别有一颗树\",{\"1\":{\"1053\":1}}],[\"分别会去到订单修改和订单取消子流程\",{\"1\":{\"1009\":1}}],[\"分别按照书名顺序和作者顺序遍历书架\",{\"1\":{\"827\":1}}],[\"分别对应\",{\"1\":{\"1136\":1}}],[\"分别对应打开\",{\"1\":{\"820\":1}}],[\"分别对应以下两种情况\",{\"1\":{\"414\":1}}],[\"分别处理关闭文件\",{\"1\":{\"411\":1}}],[\"分别将contents的属性设置为int16\",{\"1\":{\"398\":1}}],[\"分别向两边扩展\",{\"1\":{\"325\":1}}],[\"分别是pop\",{\"1\":{\"480\":1}}],[\"分别是以毫秒为单位的过期时间和unix时间戳记录的过期时间\",{\"1\":{\"420\":1}}],[\"分别是准备\",{\"1\":{\"360\":1}}],[\"分别是\",{\"1\":{\"318\":1,\"358\":1,\"362\":1,\"413\":1,\"990\":1,\"1173\":2}}],[\"分别是完全竞争市场\",{\"1\":{\"8\":1}}],[\"分别指向第一个数组\",{\"1\":{\"948\":1}}],[\"分别指向0\",{\"1\":{\"293\":1}}],[\"分别指向\",{\"1\":{\"283\":1,\"326\":1}}],[\"分别完成在队列尾部插入整数和在队列头部删除整数的功能\",{\"1\":{\"280\":1}}],[\"分别代表了皇后和空位\",{\"1\":{\"220\":1}}],[\"分段线性利率函数\",{\"1\":{\"152\":1}}],[\"分段为8\",{\"1\":{\"116\":1}}],[\"分配一个指针指向第一个位置\",{\"1\":{\"948\":1}}],[\"分配一个文件系统\",{\"1\":{\"64\":1}}],[\"分配空间\",{\"1\":{\"396\":1}}],[\"分配程序所有权\",{\"1\":{\"112\":1}}],[\"分发容器\",{\"1\":{\"75\":1}}],[\"分发镜像的服务\",{\"1\":{\"48\":1}}],[\"分层存储的特征还使得镜像的复用\",{\"1\":{\"46\":1}}],[\"分层存储\",{\"1\":{\"46\":1}}],[\"的options\",{\"0\":{\"1237\":1}}],[\"的类型就是int\",{\"1\":{\"1187\":1}}],[\"的类型是\",{\"1\":{\"448\":1}}],[\"的示例\",{\"1\":{\"1171\":1}}],[\"的参数中\",{\"1\":{\"1171\":1}}],[\"的自定义类型\",{\"1\":{\"1163\":1}}],[\"的定界符设定\",{\"1\":{\"1153\":1}}],[\"的定义上来讲\",{\"1\":{\"248\":1}}],[\"的定义出发\",{\"1\":{\"235\":1}}],[\"的定义\",{\"1\":{\"232\":1,\"257\":1,\"259\":2,\"262\":1,\"263\":1,\"264\":1,\"266\":4}}],[\"的效率\",{\"1\":{\"1153\":1}}],[\"的堆大小\",{\"1\":{\"1150\":1}}],[\"的唤醒顺序也是按照加入队列的先后顺序\",{\"1\":{\"1146\":1}}],[\"的唤醒并加锁\",{\"1\":{\"1146\":1}}],[\"的链表\",{\"1\":{\"1146\":1}}],[\"的链接\",{\"1\":{\"114\":1}}],[\"的结构体中包含以下\",{\"1\":{\"1146\":1}}],[\"的结果\",{\"1\":{\"55\":1}}],[\"的分配次数和20\",{\"1\":{\"1150\":1}}],[\"的分析和研究\",{\"1\":{\"1144\":1}}],[\"的分支\",{\"1\":{\"78\":1}}],[\"的计数器归零时\",{\"1\":{\"1144\":1}}],[\"的另一个方法\",{\"1\":{\"1144\":1}}],[\"的另一个分支处理从\",{\"1\":{\"448\":1}}],[\"的返回\",{\"1\":{\"1144\":1}}],[\"的返回值不同会分别进行处理\",{\"1\":{\"1143\":1}}],[\"的返回值的\",{\"1\":{\"450\":1}}],[\"的剩余代码也会继续执行\",{\"1\":{\"1142\":1}}],[\"的机器上\",{\"1\":{\"1142\":1}}],[\"的拷贝\",{\"1\":{\"1139\":1}}],[\"的缓冲区中包含数据\",{\"1\":{\"1137\":1}}],[\"的缓冲区中接收数据\",{\"1\":{\"1137\":1}}],[\"的缓冲区\",{\"1\":{\"1137\":1}}],[\"的缓冲区数据指针\",{\"1\":{\"1137\":1}}],[\"的接收操作处理到的位置\",{\"1\":{\"1137\":1}}],[\"的接收者可以在浏览器中打开链接以下载选中的文件\",{\"1\":{\"494\":1}}],[\"的发送操作处理到的位置\",{\"1\":{\"1137\":1}}],[\"的设计是相对好理解的\",{\"1\":{\"1136\":1}}],[\"的全局协程队列\",{\"1\":{\"1135\":1}}],[\"的全局变量中\",{\"1\":{\"1135\":1}}],[\"的全部范围\",{\"1\":{\"584\":1}}],[\"的本地队列\",{\"1\":{\"1135\":1}}],[\"的本地队列重新调度\",{\"1\":{\"1135\":1}}],[\"的本地协程队列中\",{\"1\":{\"1135\":2}}],[\"的本地协程队列\",{\"1\":{\"1135\":3}}],[\"的本金费用\",{\"1\":{\"40\":1}}],[\"的栈上\",{\"1\":{\"1135\":1}}],[\"的栈空间\",{\"1\":{\"1133\":1}}],[\"的入参是参数大小和表示函数的指针\",{\"1\":{\"1135\":1}}],[\"的struct验证规则\",{\"1\":{\"1242\":1}}],[\"的state字段会是下面\",{\"1\":{\"1134\":1}}],[\"的sentinel的运行id不相同\",{\"1\":{\"426\":1}}],[\"的sentinel\",{\"1\":{\"426\":1}}],[\"的调度让出处理器的使用权\",{\"1\":{\"1137\":1}}],[\"的调度\",{\"1\":{\"1134\":1}}],[\"的中间层\",{\"1\":{\"1134\":1}}],[\"的主线程\",{\"1\":{\"1133\":1}}],[\"的主从服务器出现故障宕机时\",{\"1\":{\"413\":1}}],[\"的主从复制\",{\"1\":{\"413\":1}}],[\"的主从复制依赖于\",{\"1\":{\"359\":1}}],[\"的身影\",{\"1\":{\"1133\":1}}],[\"的等待队列上\",{\"1\":{\"1132\":1}}],[\"的grpc服务\",{\"1\":{\"1079\":1}}],[\"的group\",{\"1\":{\"1052\":1}}],[\"的payload或header中加入用户隐私信息\",{\"1\":{\"1047\":1}}],[\"的速率\",{\"1\":{\"1038\":1}}],[\"的速率向桶中放置\",{\"1\":{\"1034\":1}}],[\"的间隔\",{\"1\":{\"1034\":1}}],[\"的别名\",{\"1\":{\"1034\":1}}],[\"的实现\",{\"1\":{\"1010\":1}}],[\"的实现出来\",{\"1\":{\"1010\":1}}],[\"的实现放入成功返回值的类型\",{\"1\":{\"448\":1}}],[\"的通用实现\",{\"1\":{\"1010\":1}}],[\"的视角来描述\",{\"1\":{\"1009\":1}}],[\"的集合\",{\"1\":{\"1009\":3}}],[\"的包\",{\"1\":{\"994\":1}}],[\"的完整代码请参考这里\",{\"1\":{\"992\":1}}],[\"的具体行为\",{\"1\":{\"991\":1}}],[\"的具体类型是\",{\"1\":{\"450\":2}}],[\"的概念\",{\"1\":{\"982\":1}}],[\"的概率其实是很小的\",{\"1\":{\"385\":1}}],[\"的依赖项就很清晰\",{\"1\":{\"981\":1}}],[\"的mock库\",{\"1\":{\"975\":1}}],[\"的意思是\",{\"1\":{\"947\":1,\"1084\":1}}],[\"的层次关系\",{\"1\":{\"914\":1}}],[\"的引用\",{\"1\":{\"910\":1}}],[\"的引擎盖\",{\"1\":{\"578\":1}}],[\"的引擎来实现的\",{\"1\":{\"361\":1}}],[\"的引擎提供了一组\",{\"1\":{\"60\":1}}],[\"的范畴\",{\"1\":{\"725\":1}}],[\"的范围内\",{\"1\":{\"275\":1}}],[\"的目标\",{\"1\":{\"721\":1}}],[\"的选择可能是有先见之明的\",{\"1\":{\"721\":1}}],[\"的冗长和僵化使\",{\"1\":{\"721\":1}}],[\"的胡言乱语中\",{\"1\":{\"706\":1}}],[\"的代币来投入\",{\"1\":{\"706\":1}}],[\"的交易所拥有价值约\",{\"1\":{\"706\":1}}],[\"的交易都将失败\",{\"1\":{\"125\":1}}],[\"的一项功能\",{\"1\":{\"1047\":1}}],[\"的一小部分交易所\",{\"1\":{\"704\":1}}],[\"的一个具体实现\",{\"1\":{\"861\":1}}],[\"的一个子树拥有相同的结构和节点值\",{\"1\":{\"297\":1}}],[\"的一个子序列\",{\"1\":{\"263\":1,\"264\":1}}],[\"的一个插件\",{\"1\":{\"191\":1}}],[\"的订单模型\",{\"1\":{\"698\":1}}],[\"的创建\",{\"1\":{\"1133\":1}}],[\"的创业公司能够持续盈利下去\",{\"1\":{\"663\":1}}],[\"的创始人说ai可以让劳动力成本降低为0\",{\"1\":{\"605\":1}}],[\"的作者的博客\",{\"1\":{\"660\":1}}],[\"的作用\",{\"1\":{\"360\":2}}],[\"的演讲片断\",{\"1\":{\"628\":1}}],[\"的负责\",{\"1\":{\"592\":1}}],[\"的斗争\",{\"1\":{\"586\":1}}],[\"的星星并不仅意味着在演技方面变得像摩根\",{\"1\":{\"580\":1}}],[\"的旅程看作是一段距离\",{\"1\":{\"580\":1}}],[\"的迷雾之中\",{\"1\":{\"575\":1}}],[\"的地图\",{\"1\":{\"572\":1}}],[\"的地址唯一标识\",{\"1\":{\"134\":1}}],[\"的重要成年时光\",{\"1\":{\"571\":1}}],[\"的读者来说\",{\"1\":{\"570\":1}}],[\"的人仍然是处于工作循环中的\",{\"1\":{\"648\":1}}],[\"的人都有所不同\",{\"1\":{\"595\":1}}],[\"的人比不招人喜欢的人有更大的优势\",{\"1\":{\"581\":1}}],[\"的人来说都是相当令人沮丧的一年\",{\"1\":{\"569\":1}}],[\"的人常犯的一个错误\",{\"1\":{\"58\":1}}],[\"的绝大部分内容\",{\"1\":{\"552\":1}}],[\"的互联网协议将会有普遍的互联网审查\",{\"1\":{\"533\":1}}],[\"的互补代币\",{\"1\":{\"169\":1}}],[\"的用法就相对来说复杂一些\",{\"1\":{\"1037\":1}}],[\"的用法类似\",{\"1\":{\"482\":1}}],[\"的用法与\",{\"1\":{\"482\":1}}],[\"的用户手续费\",{\"1\":{\"28\":3}}],[\"的标准库还提供了其他类型的字符串\",{\"1\":{\"471\":1}}],[\"的更为简短的写法\",{\"1\":{\"451\":1}}],[\"的更新操作采用的是\",{\"1\":{\"377\":1}}],[\"的更新\",{\"1\":{\"74\":1}}],[\"的错误值\",{\"1\":{\"450\":1}}],[\"的函数\",{\"1\":{\"448\":1,\"451\":1}}],[\"的例子\",{\"1\":{\"447\":1,\"449\":1}}],[\"的这个想法时\",{\"1\":{\"683\":1}}],[\"的这个概念就应该被抛弃掉了\",{\"1\":{\"605\":1}}],[\"的这一行代码\",{\"1\":{\"447\":1}}],[\"的这条记录加上\",{\"1\":{\"371\":1}}],[\"的channel\",{\"1\":{\"435\":1}}],[\"的clusterstate\",{\"1\":{\"433\":1}}],[\"的clusternode结构的数量\",{\"1\":{\"428\":1}}],[\"的命令cobra\",{\"1\":{\"988\":1}}],[\"的命令连接\",{\"1\":{\"426\":1}}],[\"的命令换行方式\",{\"1\":{\"58\":1}}],[\"的redis\",{\"1\":{\"424\":1}}],[\"的多服务节点来考虑\",{\"1\":{\"413\":1}}],[\"的快照是全量快照\",{\"1\":{\"413\":1}}],[\"的恢复操作缓慢\",{\"1\":{\"413\":1}}],[\"的优点\",{\"1\":{\"413\":2}}],[\"的并行度\",{\"1\":{\"412\":1}}],[\"的处理上\",{\"1\":{\"412\":1}}],[\"的性能瓶颈有时会出现在网络\",{\"1\":{\"412\":1}}],[\"的大部分操作都在内存中完成\",{\"1\":{\"412\":1}}],[\"的大小为第一个大于等于ht\",{\"1\":{\"395\":2}}],[\"的大小是固定且一致的\",{\"1\":{\"357\":1}}],[\"的成员\",{\"1\":{\"409\":1}}],[\"的元素\",{\"1\":{\"405\":1}}],[\"的表现与\",{\"1\":{\"405\":1}}],[\"的阻塞版本\",{\"1\":{\"405\":1}}],[\"的开头并返回\",{\"1\":{\"405\":1}}],[\"的比特位的数量\",{\"1\":{\"403\":1}}],[\"的比较结果了\",{\"1\":{\"263\":1}}],[\"的生存时间\",{\"1\":{\"403\":1}}],[\"的过期时间为\",{\"1\":{\"436\":1}}],[\"的过期时间\",{\"1\":{\"414\":2}}],[\"的过期时间设为\",{\"1\":{\"403\":1}}],[\"的过程就是脏页刷新到磁盘中变成干净页\",{\"1\":{\"357\":1}}],[\"的过程创造的\",{\"1\":{\"94\":1}}],[\"的旧值\",{\"1\":{\"403\":1}}],[\"的⻓度\",{\"1\":{\"399\":1}}],[\"的惯例\",{\"1\":{\"393\":1,\"402\":1}}],[\"的延迟时间\",{\"1\":{\"386\":1}}],[\"的功能了\",{\"1\":{\"385\":1}}],[\"的高可用和稳定性\",{\"1\":{\"385\":1}}],[\"的角度来评估这个方案\",{\"1\":{\"383\":1}}],[\"的新记录\",{\"1\":{\"374\":1}}],[\"的组合\",{\"1\":{\"370\":1,\"373\":1}}],[\"的组合总和\",{\"1\":{\"242\":1}}],[\"的系统变量\",{\"1\":{\"369\":1}}],[\"的期间\",{\"1\":{\"367\":2}}],[\"的支持\",{\"1\":{\"364\":1}}],[\"的记录并提交\",{\"1\":{\"362\":1}}],[\"的事务的事务\",{\"1\":{\"362\":1}}],[\"的事务\",{\"1\":{\"362\":1}}],[\"的值来获取\",{\"1\":{\"447\":1}}],[\"的值设置为source\",{\"1\":{\"432\":1}}],[\"的值设为\",{\"1\":{\"403\":1,\"407\":1}}],[\"的值即可\",{\"1\":{\"428\":1}}],[\"的值都会自增一次\",{\"1\":{\"426\":1}}],[\"的值在缓存中是\",{\"1\":{\"383\":1,\"384\":2,\"386\":2}}],[\"的值\",{\"1\":{\"360\":1,\"403\":4,\"413\":1,\"1163\":2}}],[\"的刷盘次数\",{\"1\":{\"360\":1}}],[\"的频率\",{\"1\":{\"360\":1}}],[\"的次数\",{\"1\":{\"360\":1}}],[\"的线程同步完成\",{\"1\":{\"359\":1}}],[\"的写入拆成了两个步骤\",{\"1\":{\"360\":1}}],[\"的写入速度还是比较快的\",{\"1\":{\"358\":1}}],[\"的写操作从磁盘的\",{\"1\":{\"357\":1}}],[\"的缺点是每行数据的变化结果都会被记录\",{\"1\":{\"358\":1}}],[\"的移动都是顺时针方向\",{\"1\":{\"357\":1}}],[\"的操作符时\",{\"1\":{\"481\":1}}],[\"的操作\",{\"1\":{\"357\":1}}],[\"的能力\",{\"1\":{\"357\":1,\"358\":1}}],[\"的形式记录下来\",{\"1\":{\"357\":1}}],[\"的版本链找到满足其可见性的记录\",{\"1\":{\"356\":1}}],[\"的对比如果不满足可见行\",{\"1\":{\"356\":1}}],[\"的面纱\",{\"0\":{\"354\":1}}],[\"的叶子节点上都能找得到的那些索引\",{\"1\":{\"353\":1}}],[\"的所有键值对都会被rehash至ht\",{\"1\":{\"396\":1}}],[\"的所有\",{\"1\":{\"393\":1,\"402\":1}}],[\"的所有字段和值\",{\"1\":{\"407\":1}}],[\"的所有字段\",{\"1\":{\"353\":1}}],[\"的所有权\",{\"1\":{\"132\":1}}],[\"的字符串表示\",{\"1\":{\"1163\":2}}],[\"的字符串text2的最长公共子序列为dp\",{\"1\":{\"260\":1}}],[\"的字符串text1与长度为\",{\"1\":{\"260\":1}}],[\"的字段会自动更新插入\",{\"1\":{\"1241\":1}}],[\"的字段\",{\"1\":{\"351\":1,\"362\":1}}],[\"的格式\",{\"1\":{\"413\":1}}],[\"的格式序列化到一个字符序列中\",{\"1\":{\"317\":1}}],[\"的格式来指定具体是这个软件哪个版本的镜像\",{\"1\":{\"48\":1}}],[\"的映射关系\",{\"1\":{\"308\":1}}],[\"的时机不同\",{\"1\":{\"362\":1}}],[\"的时间短\",{\"1\":{\"383\":1}}],[\"的时间线有关系\",{\"1\":{\"358\":1}}],[\"的时间复杂度都是\",{\"1\":{\"301\":1}}],[\"的时候接收它的依赖项\",{\"1\":{\"981\":1}}],[\"的时候肯定要知道最新的数据\",{\"1\":{\"362\":1}}],[\"的时候卖出\",{\"1\":{\"252\":1,\"253\":3,\"254\":2}}],[\"的时候买入\",{\"1\":{\"252\":1,\"253\":3,\"254\":2}}],[\"的时候不放物品i的最大价值\",{\"1\":{\"235\":1}}],[\"的时候\",{\"1\":{\"58\":1,\"235\":1,\"356\":1,\"358\":4,\"411\":1,\"414\":1,\"435\":1,\"480\":1,\"754\":1}}],[\"的时候都会指定哪个镜像作为容器运行的基础\",{\"1\":{\"55\":1}}],[\"的右子节点是否相等\",{\"1\":{\"297\":1}}],[\"的左子节点是否相等\",{\"1\":{\"297\":1}}],[\"的节点\",{\"1\":{\"294\":1}}],[\"的正则表达式\",{\"1\":{\"291\":1}}],[\"的第二部分\",{\"1\":{\"1047\":1}}],[\"的第二个节点\",{\"1\":{\"290\":1}}],[\"的第一行\",{\"1\":{\"1172\":1}}],[\"的第一个参数的时间格式与linux下的crontab非常相似\",{\"1\":{\"1002\":1}}],[\"的第一章\",{\"1\":{\"618\":1}}],[\"的第一百个元素\",{\"1\":{\"447\":1}}],[\"的第\",{\"1\":{\"447\":1}}],[\"的第三个节点\",{\"1\":{\"290\":1}}],[\"的个数\",{\"1\":{\"287\":1}}],[\"的绳子\",{\"1\":{\"285\":1,\"286\":1}}],[\"的矩阵中包含单词\",{\"1\":{\"284\":1}}],[\"的位置\",{\"1\":{\"283\":2}}],[\"的位置到了i\",{\"1\":{\"275\":1}}],[\"的顺序排序\",{\"1\":{\"276\":3}}],[\"的二维数组中\",{\"1\":{\"276\":1}}],[\"的回文子序列长度为dp\",{\"1\":{\"268\":2}}],[\"的同时加入\",{\"1\":{\"268\":1}}],[\"的数据拷贝到缓冲区\",{\"1\":{\"1137\":1}}],[\"的数据\",{\"1\":{\"387\":1}}],[\"的数据状态\",{\"1\":{\"357\":2}}],[\"的数称作丑数\",{\"1\":{\"321\":1}}],[\"的数字有1\",{\"1\":{\"316\":1}}],[\"的数组\",{\"1\":{\"275\":1}}],[\"的数目\",{\"1\":{\"267\":1}}],[\"的数值就是\",{\"1\":{\"263\":1}}],[\"的方法\",{\"1\":{\"1146\":1}}],[\"的方案来做\",{\"1\":{\"388\":1}}],[\"的方案\",{\"1\":{\"264\":1,\"383\":3,\"384\":1,\"386\":1}}],[\"的方式保证数据最终一致\",{\"1\":{\"388\":1}}],[\"的方式来指定的\",{\"1\":{\"468\":1}}],[\"的方式来实现\",{\"1\":{\"387\":1}}],[\"的方式来做\",{\"1\":{\"385\":1}}],[\"的方式\",{\"1\":{\"76\":1,\"413\":1}}],[\"的基础上加1\",{\"1\":{\"263\":1}}],[\"的基本用法\",{\"1\":{\"191\":1}}],[\"的基本原则\",{\"1\":{\"166\":1}}],[\"的状态为\",{\"1\":{\"1135\":1}}],[\"的状态还是\",{\"1\":{\"360\":1}}],[\"的状态\",{\"1\":{\"262\":1,\"1132\":1,\"1135\":2}}],[\"的状态只能由dp\",{\"1\":{\"259\":1}}],[\"的和最大\",{\"1\":{\"262\":1,\"315\":1}}],[\"的长度是\",{\"1\":{\"473\":1}}],[\"的长度\",{\"1\":{\"260\":1}}],[\"的初始化代码如下\",{\"1\":{\"993\":1}}],[\"的初始化过程并修改\",{\"1\":{\"990\":1}}],[\"的初始化\",{\"1\":{\"257\":1}}],[\"的子\",{\"1\":{\"991\":1}}],[\"的子结构\",{\"1\":{\"297\":3}}],[\"的子串是否是回文子串\",{\"1\":{\"267\":1}}],[\"的子序列中\",{\"1\":{\"264\":1}}],[\"的子序列\",{\"1\":{\"257\":1,\"260\":4,\"263\":1}}],[\"的子集\",{\"1\":{\"237\":1}}],[\"的因素就是第i房间偷还是不偷\",{\"1\":{\"248\":2}}],[\"的最后\",{\"1\":{\"1135\":1}}],[\"的最长时间\",{\"1\":{\"1035\":1}}],[\"的最长公共子序列\",{\"1\":{\"260\":2}}],[\"的最终输出结果\",{\"1\":{\"574\":1}}],[\"的最小值\",{\"1\":{\"362\":1}}],[\"的最小单位\",{\"1\":{\"111\":1}}],[\"的最大值记录下来\",{\"1\":{\"259\":1}}],[\"的最大值+1\",{\"1\":{\"257\":1}}],[\"的最大值\",{\"1\":{\"257\":2,\"362\":1}}],[\"的最大值即\",{\"1\":{\"248\":1}}],[\"的最少个数为dp\",{\"1\":{\"244\":1}}],[\"的含义是什么呢\",{\"1\":{\"259\":1}}],[\"的含义\",{\"1\":{\"235\":1}}],[\"的物品里任意取\",{\"1\":{\"235\":2,\"236\":1}}],[\"的背包所背的最大价值\",{\"1\":{\"236\":1}}],[\"的背包\",{\"1\":{\"235\":1,\"236\":1}}],[\"的求和方式只可以通过dp\",{\"1\":{\"229\":1}}],[\"的台阶开始爬楼梯\",{\"1\":{\"228\":1}}],[\"的棋盘的每一格都放有一个礼物\",{\"1\":{\"319\":1}}],[\"的棋盘上\",{\"1\":{\"220\":1}}],[\"的棋子放置方案\",{\"1\":{\"220\":1}}],[\"的解决方案\",{\"1\":{\"220\":1}}],[\"的homepage\",{\"1\":{\"192\":1}}],[\"的利率的时候他们就会在swap协议中先换出pusd归还leaf的pusd\",{\"1\":{\"176\":1}}],[\"的真实用户比很多公链都多\",{\"1\":{\"169\":1}}],[\"的价格是0\",{\"1\":{\"169\":1}}],[\"的情况下\",{\"1\":{\"360\":1,\"450\":1}}],[\"的情况\",{\"1\":{\"169\":1,\"388\":1}}],[\"的usdt\",{\"1\":{\"164\":1}}],[\"的套利行为\",{\"1\":{\"156\":1}}],[\"的平替\",{\"1\":{\"153\":1}}],[\"的平台手续费\",{\"1\":{\"28\":2}}],[\"的损失在所有存款人之间分摊\",{\"1\":{\"152\":1}}],[\"的核心代码大概3000行左右\",{\"1\":{\"152\":1}}],[\"的罚款从抵押品中扣除\",{\"1\":{\"150\":1}}],[\"的清算罚款\",{\"1\":{\"150\":1}}],[\"的债务价格为\",{\"1\":{\"150\":1}}],[\"的低交易费用\",{\"1\":{\"150\":1}}],[\"的单位\",{\"1\":{\"133\":1}}],[\"的单位数量的个人所有权\",{\"1\":{\"132\":1}}],[\"的账户直接修改\",{\"1\":{\"127\":1}}],[\"的程序员强\",{\"1\":{\"605\":1}}],[\"的程序员在\",{\"1\":{\"77\":1}}],[\"的程序\",{\"1\":{\"112\":1,\"122\":1}}],[\"的问题了\",{\"1\":{\"1084\":1}}],[\"的问题\",{\"1\":{\"95\":1,\"361\":1}}],[\"的端口\",{\"1\":{\"76\":1}}],[\"的使用方式一样\",{\"1\":{\"449\":1}}],[\"的使用使\",{\"1\":{\"129\":1}}],[\"的使用\",{\"1\":{\"74\":1,\"1194\":1}}],[\"的修改会立马生效\",{\"1\":{\"74\":1}}],[\"的容器\",{\"1\":{\"74\":1}}],[\"的容器启动运行\",{\"1\":{\"65\":1}}],[\"的容器实在太轻量级了\",{\"1\":{\"63\":1}}],[\"的容器重新启动\",{\"1\":{\"63\":1}}],[\"的文件\",{\"1\":{\"448\":1}}],[\"的文件大小非常重要\",{\"1\":{\"357\":1}}],[\"的文件名并不要求必须为\",{\"1\":{\"60\":1}}],[\"的文件作为\",{\"1\":{\"60\":1}}],[\"的话同理\",{\"1\":{\"265\":1}}],[\"的话\",{\"1\":{\"60\":1,\"406\":1,\"552\":1}}],[\"的话题总数额为\",{\"1\":{\"26\":2}}],[\"的工作原理\",{\"1\":{\"60\":1}}],[\"的内容是\",{\"1\":{\"1172\":2}}],[\"的内容为\",{\"1\":{\"1169\":1}}],[\"的内容\",{\"1\":{\"59\":1}}],[\"的行为\",{\"1\":{\"58\":1}}],[\"的信息只包含所在命名空间的\",{\"1\":{\"76\":1}}],[\"的信息\",{\"1\":{\"55\":1,\"74\":1}}],[\"的摘要\",{\"1\":{\"49\":1}}],[\"的前兆\",{\"1\":{\"446\":1}}],[\"的前提下\",{\"1\":{\"383\":1}}],[\"的前\",{\"1\":{\"49\":1}}],[\"的镜像\",{\"1\":{\"49\":1,\"52\":1,\"55\":2}}],[\"的镜像使用的就是这个服务\",{\"1\":{\"48\":1}}],[\"的软件或服务\",{\"1\":{\"48\":1}}],[\"的关键是管理\",{\"1\":{\"1010\":1}}],[\"的关键是从头开始读直到发现你编写的文件\",{\"1\":{\"447\":1}}],[\"的关键部分就是镜像\",{\"1\":{\"45\":1}}],[\"的关系\",{\"1\":{\"47\":1}}],[\"的技术\",{\"1\":{\"46\":1}}],[\"的整个生命周期\",{\"1\":{\"45\":1}}],[\"的\",{\"1\":{\"27\":1,\"48\":2,\"112\":1,\"114\":1,\"129\":1,\"150\":1,\"194\":1,\"288\":1,\"358\":2,\"362\":1,\"373\":2,\"387\":1,\"395\":4,\"396\":1,\"411\":1,\"424\":2,\"426\":11,\"428\":2,\"431\":1,\"432\":2,\"433\":2,\"435\":2,\"437\":1,\"446\":1,\"447\":2,\"450\":4,\"569\":1,\"673\":1,\"692\":1,\"751\":1,\"1035\":1,\"1132\":2,\"1133\":1,\"1135\":4,\"1137\":5,\"1153\":1}}],[\"u2022\",{\"1\":{\"1200\":1}}],[\"u2665\",{\"1\":{\"1200\":1}}],[\"um\",{\"1\":{\"547\":1}}],[\"umghlrlose\",{\"1\":{\"335\":1}}],[\"uber\",{\"1\":{\"1038\":1}}],[\"ubiquitous\",{\"1\":{\"523\":1}}],[\"ubuntu\",{\"1\":{\"3\":1,\"48\":6,\"49\":7,\"50\":4,\"51\":1,\"54\":2,\"57\":1,\"64\":2,\"66\":2,\"68\":4,\"69\":2,\"70\":3,\"73\":2,\"90\":1,\"525\":1,\"992\":2}}],[\"u+211d\",{\"1\":{\"483\":1}}],[\"uuid\",{\"1\":{\"358\":1}}],[\"ugly\",{\"1\":{\"321\":1}}],[\"u\",{\"1\":{\"166\":1,\"483\":3,\"978\":11,\"988\":1,\"1000\":1,\"1212\":5,\"1240\":4,\"1241\":5}}],[\"uri\",{\"1\":{\"1225\":2,\"1237\":2}}],[\"urban\",{\"1\":{\"569\":1}}],[\"urging\",{\"1\":{\"549\":1}}],[\"ur\",{\"1\":{\"152\":10}}],[\"url=\",{\"1\":{\"192\":1}}],[\"url分别为\",{\"1\":{\"192\":1}}],[\"url\",{\"1\":{\"59\":1,\"192\":3,\"195\":3,\"199\":2,\"1055\":3}}],[\"utctime\",{\"1\":{\"1212\":2}}],[\"utc+08\",{\"1\":{\"1208\":1}}],[\"utc\",{\"1\":{\"979\":3,\"1179\":1,\"1205\":2,\"1207\":1,\"1212\":9}}],[\"ut\",{\"1\":{\"959\":1,\"967\":3,\"969\":3,\"970\":2,\"972\":2,\"973\":1,\"975\":1,\"976\":1},\"2\":{\"955\":1,\"964\":1,\"984\":1}}],[\"utf8\",{\"1\":{\"487\":2}}],[\"utf\",{\"0\":{\"484\":1},\"1\":{\"468\":2,\"471\":3,\"473\":2,\"475\":1,\"484\":1,\"487\":1}}],[\"utilization\",{\"1\":{\"152\":8}}],[\"uts\",{\"1\":{\"76\":2}}],[\"u16\",{\"1\":{\"152\":1}}],[\"u64\",{\"1\":{\"152\":4}}],[\"u8\",{\"1\":{\"117\":4,\"473\":1}}],[\"ui\",{\"1\":{\"1241\":1}}],[\"uint8\",{\"1\":{\"1139\":3,\"1188\":1,\"1242\":1}}],[\"uintreg\",{\"1\":{\"1132\":1}}],[\"uintptr\",{\"1\":{\"1132\":3,\"1139\":3,\"1188\":1}}],[\"uint16\",{\"1\":{\"435\":4,\"1137\":1,\"1188\":1,\"1226\":1}}],[\"uint64\",{\"1\":{\"395\":1,\"426\":2,\"427\":2,\"435\":2,\"1161\":1,\"1188\":1}}],[\"uint32\",{\"1\":{\"287\":1,\"398\":2,\"435\":3,\"1084\":2,\"1132\":1,\"1134\":2,\"1137\":1,\"1139\":2,\"1142\":1,\"1143\":2,\"1144\":1,\"1145\":1,\"1146\":2,\"1188\":1,\"1226\":1}}],[\"uint\",{\"1\":{\"105\":1,\"1137\":4,\"1161\":1,\"1188\":2}}],[\"uid\",{\"1\":{\"75\":2,\"978\":2}}],[\"ufs\",{\"1\":{\"74\":1}}],[\"upsertid\",{\"1\":{\"1242\":1}}],[\"upsert\",{\"1\":{\"1242\":1}}],[\"upcoming\",{\"1\":{\"1123\":1}}],[\"updating\",{\"1\":{\"975\":1}}],[\"updatetimeat\",{\"1\":{\"1241\":5}}],[\"updateat\",{\"1\":{\"1241\":2}}],[\"updateall\",{\"1\":{\"1234\":2}}],[\"updateone\",{\"1\":{\"1234\":2}}],[\"updateonduty\",{\"1\":{\"997\":1}}],[\"updateondutys\",{\"1\":{\"997\":1}}],[\"updateddata\",{\"1\":{\"1088\":1}}],[\"updatedata\",{\"1\":{\"1088\":3}}],[\"updateresourcewithfields\",{\"1\":{\"1088\":2}}],[\"updateresource\",{\"1\":{\"1088\":1}}],[\"updatemask\",{\"1\":{\"1088\":3}}],[\"updatepersonreq\",{\"1\":{\"1088\":3}}],[\"update等语句\",{\"1\":{\"364\":1}}],[\"update\",{\"0\":{\"1234\":1},\"1\":{\"58\":2,\"152\":2,\"199\":1,\"356\":1,\"358\":2,\"361\":2,\"362\":8,\"368\":1,\"370\":1,\"371\":1,\"396\":1,\"844\":4,\"975\":3,\"1053\":1,\"1088\":5}}],[\"upbit\",{\"1\":{\"704\":1}}],[\"uploaded\",{\"1\":{\"547\":1}}],[\"upper\",{\"1\":{\"540\":1}}],[\"upward\",{\"1\":{\"523\":1}}],[\"upgrader\",{\"1\":{\"1073\":5}}],[\"upgrade\",{\"1\":{\"398\":1,\"1073\":2}}],[\"up\",{\"1\":{\"68\":2,\"523\":8,\"537\":2,\"543\":2,\"548\":1,\"563\":3,\"1055\":1}}],[\"usually\",{\"1\":{\"560\":1}}],[\"usual\",{\"1\":{\"537\":1,\"1122\":1}}],[\"usher\",{\"1\":{\"523\":1}}],[\"usize\",{\"1\":{\"456\":2,\"458\":3}}],[\"using\",{\"1\":{\"192\":2,\"467\":1,\"523\":1,\"549\":1,\"972\":2,\"989\":1,\"1118\":4,\"1119\":2,\"1121\":2,\"1122\":2,\"1124\":1,\"1125\":1,\"1127\":1}}],[\"usd非常注重稳定性\",{\"1\":{\"188\":1}}],[\"usdp\",{\"1\":{\"185\":1}}],[\"usdc还是很少\",{\"1\":{\"187\":1}}],[\"usdc等一直没有公布抵押资产\",{\"1\":{\"184\":1}}],[\"usdc都是属于中心化稳定币\",{\"1\":{\"184\":1}}],[\"usdc卖出1个eth\",{\"1\":{\"163\":1}}],[\"usdc买入1个eth\",{\"1\":{\"163\":1}}],[\"usdc\",{\"1\":{\"132\":1,\"163\":5,\"166\":1,\"169\":1}}],[\"usdt流动池中pust的数量不断增加\",{\"1\":{\"175\":1}}],[\"usdt的借款\",{\"1\":{\"164\":1}}],[\"usdt\",{\"1\":{\"27\":1,\"184\":1,\"591\":1}}],[\"usage\",{\"0\":{\"1224\":1},\"1\":{\"90\":2,\"989\":1,\"1038\":1,\"1161\":4}}],[\"us\",{\"1\":{\"90\":1,\"519\":1,\"523\":6,\"543\":7,\"547\":1,\"550\":1,\"563\":2,\"1120\":2}}],[\"usec\",{\"1\":{\"1212\":1}}],[\"use函数用于将中间件添加到当前的路由上\",{\"1\":{\"1052\":1}}],[\"use函数\",{\"0\":{\"1052\":1}}],[\"uses\",{\"1\":{\"523\":1,\"547\":1}}],[\"usesession\",{\"1\":{\"199\":1}}],[\"used的2^n\",{\"1\":{\"395\":1}}],[\"used属性的值\",{\"1\":{\"395\":1}}],[\"used保存总共的键值对个数\",{\"1\":{\"395\":1}}],[\"used\",{\"1\":{\"212\":7,\"216\":7,\"218\":7,\"219\":8,\"284\":7,\"311\":7,\"395\":3,\"468\":1,\"537\":1,\"543\":1,\"549\":1,\"560\":1,\"1055\":2,\"1056\":1,\"1119\":1,\"1127\":1}}],[\"use\",{\"1\":{\"90\":1,\"192\":6,\"448\":4,\"449\":2,\"450\":2,\"451\":6,\"458\":2,\"459\":1,\"460\":4,\"463\":1,\"519\":2,\"523\":1,\"547\":7,\"563\":1,\"814\":1,\"991\":1,\"992\":2,\"993\":2,\"1051\":1,\"1052\":7,\"1100\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1126\":1,\"1127\":1,\"1138\":1,\"1179\":1,\"1237\":1}}],[\"useage\",{\"1\":{\"90\":2}}],[\"userawpath\",{\"1\":{\"1055\":1}}],[\"users\",{\"1\":{\"989\":1,\"1181\":1}}],[\"userid为1的用户浏览了productid为5的产品\",{\"1\":{\"975\":1}}],[\"userid\",{\"1\":{\"975\":2}}],[\"userinfos\",{\"1\":{\"1231\":2}}],[\"userinfo\",{\"1\":{\"195\":1,\"978\":3,\"1226\":3,\"1228\":1,\"1229\":2,\"1231\":7,\"1232\":1}}],[\"username\",{\"1\":{\"194\":2,\"450\":14,\"451\":11,\"1047\":9}}],[\"userexist\",{\"1\":{\"194\":3}}],[\"user=\",{\"1\":{\"194\":1}}],[\"userrole\",{\"1\":{\"194\":1}}],[\"user\",{\"1\":{\"76\":1,\"194\":17,\"195\":1,\"519\":1,\"547\":1,\"563\":1,\"975\":2,\"978\":5,\"991\":1,\"992\":1,\"1045\":4,\"1047\":1,\"1055\":1,\"1118\":3,\"1225\":2,\"1240\":4,\"1241\":5,\"1242\":1}}],[\"usr\",{\"1\":{\"55\":1,\"56\":1,\"58\":10,\"74\":11}}],[\"unblocked\",{\"1\":{\"1124\":1}}],[\"unauthenticated\",{\"1\":{\"1099\":1}}],[\"unaryinvoker\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"unaryinterceptor\",{\"1\":{\"1097\":5,\"1099\":7}}],[\"unaryhandler\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"unaryserverinfo\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"unaryserverinterceptor\",{\"1\":{\"1097\":1}}],[\"unavailable\",{\"1\":{\"549\":1}}],[\"unexpected\",{\"1\":{\"1074\":1}}],[\"unescapepathvalues\",{\"1\":{\"1055\":1}}],[\"unescape\",{\"1\":{\"1055\":4}}],[\"unzip\",{\"1\":{\"1067\":1}}],[\"unfulfilled\",{\"1\":{\"975\":2}}],[\"unmarshaltext\",{\"1\":{\"1212\":1}}],[\"unmarshaljson\",{\"1\":{\"1212\":1}}],[\"unmarshalbinary\",{\"1\":{\"1212\":1}}],[\"unmarshal\",{\"1\":{\"972\":1,\"973\":1}}],[\"unusable\",{\"1\":{\"547\":1}}],[\"unnecessarily\",{\"1\":{\"547\":1}}],[\"unpatch\",{\"1\":{\"959\":1}}],[\"unparalleled\",{\"1\":{\"523\":1}}],[\"unpredictability\",{\"1\":{\"543\":1}}],[\"unpredictable\",{\"1\":{\"537\":2}}],[\"uncertainty\",{\"1\":{\"523\":1}}],[\"uncommitted\",{\"1\":{\"361\":1}}],[\"undefined\",{\"1\":{\"1055\":1}}],[\"understood\",{\"1\":{\"1118\":1}}],[\"understanding\",{\"1\":{\"548\":1,\"1124\":1}}],[\"understand\",{\"1\":{\"537\":2,\"543\":1,\"1055\":1,\"1115\":1,\"1117\":1,\"1119\":4,\"1120\":1}}],[\"underlying\",{\"1\":{\"1055\":1}}],[\"under\",{\"1\":{\"523\":1}}],[\"undercurrent\",{\"1\":{\"523\":1}}],[\"undo\",{\"1\":{\"355\":2,\"356\":13,\"357\":9,\"361\":1,\"362\":1}}],[\"unknowns\",{\"1\":{\"523\":1}}],[\"unknown\",{\"1\":{\"523\":3,\"547\":1,\"1188\":1}}],[\"untied\",{\"1\":{\"1116\":1}}],[\"untitled\",{\"1\":{\"969\":1}}],[\"until\",{\"1\":{\"523\":4,\"1055\":1,\"1119\":1,\"1123\":2,\"1124\":1,\"1127\":2,\"1207\":5}}],[\"untagged\",{\"1\":{\"55\":6}}],[\"unsupported\",{\"1\":{\"1088\":1}}],[\"unstable\",{\"1\":{\"540\":1}}],[\"unsafepointer\",{\"1\":{\"1188\":1}}],[\"unsafe\",{\"1\":{\"457\":1,\"461\":2,\"462\":2,\"1137\":1,\"1139\":4}}],[\"unsize\",{\"1\":{\"457\":1}}],[\"unsigned\",{\"1\":{\"394\":1,\"395\":4,\"397\":2,\"400\":2,\"428\":1,\"435\":3}}],[\"unwind\",{\"1\":{\"447\":1}}],[\"unwrapped\",{\"1\":{\"1055\":1}}],[\"unwrap\",{\"1\":{\"152\":1,\"449\":8,\"459\":1,\"460\":3,\"463\":1}}],[\"unoptimized\",{\"1\":{\"447\":3,\"448\":1}}],[\"unrecoverable\",{\"1\":{\"446\":1}}],[\"unlike\",{\"1\":{\"1119\":1}}],[\"unlink\",{\"1\":{\"411\":2}}],[\"unlocked\",{\"1\":{\"1142\":1}}],[\"unlockslow\",{\"1\":{\"1142\":2}}],[\"unlock\",{\"1\":{\"364\":1,\"366\":1,\"516\":1,\"517\":1,\"1142\":3,\"1143\":3,\"1144\":1,\"1145\":1,\"1146\":2}}],[\"unidirectional\",{\"0\":{\"1126\":1},\"1\":{\"1126\":1}}],[\"unimplementedgreeteringserver\",{\"1\":{\"1067\":1}}],[\"unimplemented\",{\"1\":{\"1055\":1}}],[\"unit\",{\"1\":{\"967\":1}}],[\"units\",{\"1\":{\"152\":2}}],[\"unilted\",{\"1\":{\"563\":1}}],[\"uninstall\",{\"1\":{\"548\":1}}],[\"uninstalled\",{\"1\":{\"547\":1}}],[\"university\",{\"1\":{\"547\":2,\"548\":1,\"549\":1}}],[\"universally\",{\"1\":{\"547\":1}}],[\"universal\",{\"1\":{\"523\":1}}],[\"universe\",{\"1\":{\"523\":34}}],[\"unicode字符等\",{\"1\":{\"1198\":1}}],[\"unicode\",{\"1\":{\"471\":1,\"483\":5,\"485\":1,\"1200\":3}}],[\"unique\",{\"1\":{\"436\":4,\"523\":1}}],[\"uniquepathswithobstacles\",{\"1\":{\"230\":1}}],[\"uniquepaths\",{\"1\":{\"229\":1}}],[\"unification\",{\"1\":{\"78\":1}}],[\"unixtime\",{\"1\":{\"1212\":2}}],[\"unixnano\",{\"1\":{\"1212\":4}}],[\"unixmilli\",{\"1\":{\"1212\":5}}],[\"unixmicro\",{\"1\":{\"1212\":5}}],[\"unix\",{\"1\":{\"76\":1,\"721\":3,\"997\":2,\"1047\":1,\"1205\":1,\"1212\":18,\"1213\":1}}],[\"union\",{\"1\":{\"46\":1,\"51\":1,\"58\":1,\"61\":2,\"75\":2,\"395\":1,\"435\":3}}],[\"e6\",{\"1\":{\"1140\":1}}],[\"e8\",{\"1\":{\"1140\":1}}],[\"e5\",{\"1\":{\"1140\":1}}],[\"e7\",{\"1\":{\"1140\":1}}],[\"eface\",{\"1\":{\"1139\":3}}],[\"eface表示不包含任何方法的接口\",{\"1\":{\"1138\":1}}],[\"efficiency\",{\"2\":{\"745\":1}}],[\"efficient\",{\"1\":{\"523\":1}}],[\"effectively\",{\"1\":{\"1123\":1}}],[\"effect\",{\"1\":{\"563\":1}}],[\"efforts\",{\"1\":{\"547\":1}}],[\"eeeesae\",{\"1\":{\"1080\":2}}],[\"eyjzdwiioiixmjm0nty3odkwiiwibmftzsi6ikpvag4grg9liiwiawf0ijoxnte2mjm5mdiyfq\",{\"1\":{\"1047\":1}}],[\"eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9\",{\"1\":{\"1047\":1}}],[\"eye\",{\"1\":{\"523\":2}}],[\"eyes\",{\"1\":{\"523\":3,\"543\":1}}],[\"epsonprinter\",{\"1\":{\"910\":3}}],[\"epson\",{\"1\":{\"910\":6}}],[\"epoch参数的值和自己的配置纪元是否相同\",{\"1\":{\"426\":1}}],[\"epoch>\",{\"1\":{\"426\":3}}],[\"epoch\",{\"1\":{\"426\":4}}],[\"epoll\",{\"1\":{\"412\":1}}],[\"e2e\",{\"1\":{\"710\":1}}],[\"edt\",{\"1\":{\"1212\":1}}],[\"education\",{\"1\":{\"543\":1,\"673\":1}}],[\"edge\",{\"1\":{\"523\":2}}],[\"escaping\",{\"1\":{\"523\":1}}],[\"escapes\",{\"1\":{\"483\":1}}],[\"escaped\",{\"1\":{\"483\":1}}],[\"escape\",{\"1\":{\"483\":3,\"547\":3}}],[\"e0502\",{\"1\":{\"468\":1}}],[\"equal方法将返回true\",{\"1\":{\"1208\":1}}],[\"equal\",{\"1\":{\"959\":1,\"967\":1,\"972\":2,\"973\":2,\"1139\":1,\"1208\":1,\"1212\":4}}],[\"equivalent\",{\"1\":{\"523\":1}}],[\"eq\",{\"1\":{\"457\":1,\"469\":1,\"481\":1,\"977\":3}}],[\"e>\",{\"0\":{\"448\":1},\"1\":{\"448\":2,\"449\":1,\"450\":1}}],[\"e>类型来处理可恢复的错误\",{\"1\":{\"446\":1}}],[\"eb26296b556cef10fb713a38f3d16b9886080f26\",{\"1\":{\"447\":7}}],[\"ebpf\",{\"1\":{\"129\":1}}],[\"eof四个部分的内容进行计算得出的\",{\"1\":{\"418\":1}}],[\"eof常量为1字节\",{\"1\":{\"418\":1}}],[\"eof\",{\"1\":{\"418\":1,\"1072\":4,\"1074\":1,\"1153\":1}}],[\"eos等等\",{\"1\":{\"187\":1}}],[\"e\",{\"1\":{\"266\":1,\"284\":3,\"292\":2,\"435\":1,\"448\":6,\"450\":6,\"451\":1,\"867\":12,\"1010\":9,\"1052\":1,\"1120\":3,\"1210\":1,\"1236\":1,\"1239\":1,\"1242\":1}}],[\"easy\",{\"1\":{\"523\":1}}],[\"earned\",{\"1\":{\"540\":1}}],[\"earth\",{\"1\":{\"523\":3}}],[\"early\",{\"1\":{\"523\":5}}],[\"each\",{\"1\":{\"523\":2,\"543\":6,\"550\":1,\"1019\":1,\"1055\":1,\"1118\":2,\"1120\":2,\"1122\":1}}],[\"ea\",{\"1\":{\"265\":2}}],[\"eating\",{\"1\":{\"543\":1}}],[\"eat\",{\"1\":{\"265\":2,\"543\":1,\"547\":1,\"977\":13}}],[\"empowers\",{\"1\":{\"989\":1}}],[\"employers\",{\"1\":{\"751\":1}}],[\"empty表示这个链表里面的mspan都被分配到了mspan里\",{\"1\":{\"1149\":1}}],[\"empty\",{\"1\":{\"336\":3,\"1053\":1,\"1055\":1,\"1242\":1}}],[\"eminence\",{\"1\":{\"704\":1}}],[\"emitted\",{\"1\":{\"523\":2}}],[\"emit\",{\"1\":{\"152\":2}}],[\"embellishments\",{\"1\":{\"523\":1}}],[\"embellishment\",{\"1\":{\"523\":1}}],[\"emerges\",{\"1\":{\"523\":1}}],[\"emailverified\",{\"1\":{\"194\":2}}],[\"email用户每次登录都没有对应的名称\",{\"1\":{\"194\":1}}],[\"emailprovider\",{\"1\":{\"194\":1}}],[\"email组件来实组件的发送\",{\"1\":{\"194\":1}}],[\"email\",{\"1\":{\"191\":1,\"194\":17,\"195\":3,\"1242\":4}}],[\"eusd的流通性都是最大的\",{\"1\":{\"185\":1}}],[\"eurt\",{\"1\":{\"182\":1}}],[\"erich\",{\"1\":{\"827\":3}}],[\"era\",{\"1\":{\"543\":1,\"547\":2}}],[\"errdetails\",{\"1\":{\"1074\":4}}],[\"errtoolarge\",{\"1\":{\"1055\":1}}],[\"erraborthandler\",{\"1\":{\"1055\":1}}],[\"errserverclosed\",{\"1\":{\"1055\":5}}],[\"errsignatureinvalid\",{\"1\":{\"1047\":1}}],[\"errnocookie\",{\"1\":{\"1047\":1}}],[\"err\",{\"1\":{\"446\":4,\"448\":7,\"449\":1,\"450\":8,\"451\":1,\"516\":6,\"517\":3,\"814\":3,\"927\":15,\"972\":4,\"973\":4,\"975\":32,\"976\":10,\"978\":4,\"980\":18,\"1010\":12,\"1011\":6,\"1035\":2,\"1047\":8,\"1054\":3,\"1055\":27,\"1063\":9,\"1067\":12,\"1072\":29,\"1073\":9,\"1074\":10,\"1079\":6,\"1095\":13,\"1097\":5,\"1099\":15,\"1153\":8,\"1163\":3,\"1167\":3,\"1169\":6,\"1170\":2,\"1171\":3,\"1172\":6,\"1173\":6,\"1181\":3,\"1198\":6,\"1208\":6,\"1210\":3,\"1225\":5,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1233\":1,\"1234\":2,\"1235\":1,\"1236\":1,\"1237\":1,\"1238\":7,\"1239\":1,\"1240\":1,\"1241\":3}}],[\"err回复\",{\"1\":{\"425\":1}}],[\"errorheaders\",{\"1\":{\"1055\":3}}],[\"errorf\",{\"1\":{\"967\":3,\"968\":1,\"975\":5,\"979\":1,\"980\":2,\"1099\":2,\"1166\":1,\"1170\":2}}],[\"errors\",{\"0\":{\"1170\":1},\"1\":{\"814\":4,\"1011\":4}}],[\"error>\",{\"1\":{\"450\":2,\"451\":3}}],[\"errorkind\",{\"1\":{\"448\":2}}],[\"error\",{\"1\":{\"90\":35,\"152\":6,\"446\":2,\"448\":10,\"449\":1,\"450\":4,\"468\":3,\"516\":2,\"814\":6,\"927\":2,\"959\":1,\"967\":1,\"975\":6,\"977\":2,\"978\":1,\"980\":6,\"1011\":4,\"1035\":2,\"1047\":1,\"1052\":1,\"1054\":1,\"1055\":10,\"1063\":6,\"1067\":1,\"1072\":3,\"1074\":2,\"1088\":1,\"1097\":2,\"1099\":3,\"1125\":2,\"1153\":2,\"1163\":2,\"1167\":3,\"1169\":3,\"1170\":2,\"1171\":3,\"1172\":4,\"1173\":3,\"1193\":3,\"1207\":1,\"1208\":2,\"1210\":3,\"1212\":10,\"1238\":1,\"1240\":2,\"1242\":1}}],[\"erc20\",{\"1\":{\"169\":1}}],[\"erc1155\",{\"1\":{\"169\":2}}],[\"etc\",{\"1\":{\"130\":1,\"140\":1,\"144\":1,\"193\":1,\"698\":1,\"714\":1,\"731\":1,\"740\":1,\"748\":1,\"776\":1,\"789\":1,\"792\":1,\"801\":1}}],[\"eth灯枯教程\",{\"1\":{\"196\":1}}],[\"eth等价格会有剧烈波动的稳定币\",{\"1\":{\"185\":1}}],[\"eth抵押\",{\"1\":{\"185\":1}}],[\"eth\",{\"0\":{\"198\":1,\"1257\":1},\"1\":{\"180\":1,\"187\":1,\"591\":2,\"592\":1}}],[\"eth主网\",{\"1\":{\"144\":1}}],[\"eth发展了这么多年\",{\"1\":{\"109\":1}}],[\"eth自2014年横空出世以来解决了人们在链上的很多问题\",{\"1\":{\"109\":1}}],[\"ethereum\",{\"2\":{\"104\":1,\"107\":1}}],[\"eliminates\",{\"1\":{\"1124\":1}}],[\"elem\",{\"1\":{\"1190\":5}}],[\"elemtype\",{\"1\":{\"1137\":1}}],[\"elemsize\",{\"1\":{\"1137\":1}}],[\"eleme\",{\"1\":{\"563\":1}}],[\"elementb\",{\"1\":{\"867\":3}}],[\"elementa\",{\"1\":{\"867\":3}}],[\"elementary\",{\"1\":{\"543\":1}}],[\"element\",{\"1\":{\"523\":2,\"867\":18,\"1179\":1}}],[\"elements\",{\"1\":{\"523\":12,\"867\":8,\"1242\":1}}],[\"electronic\",{\"1\":{\"563\":1}}],[\"electrons\",{\"1\":{\"523\":1}}],[\"electron\",{\"1\":{\"523\":1}}],[\"electromagnetic\",{\"1\":{\"523\":2}}],[\"ele\",{\"1\":{\"397\":1}}],[\"else的判断规则\",{\"1\":{\"1010\":1}}],[\"elsewhere\",{\"1\":{\"523\":1}}],[\"else\",{\"1\":{\"152\":7,\"200\":1,\"213\":1,\"214\":1,\"235\":1,\"240\":1,\"260\":2,\"261\":1,\"263\":1,\"264\":1,\"265\":2,\"266\":2,\"267\":2,\"268\":2,\"276\":1,\"277\":1,\"283\":2,\"284\":1,\"286\":1,\"290\":1,\"291\":2,\"296\":1,\"301\":1,\"318\":1,\"323\":1,\"324\":1,\"325\":2,\"326\":1,\"330\":1,\"332\":2,\"436\":1,\"515\":3,\"543\":1,\"948\":2,\"997\":1,\"1010\":3,\"1055\":3,\"1125\":1,\"1193\":2}}],[\"elf\",{\"1\":{\"129\":1}}],[\"ellipsis\",{\"1\":{\"128\":1}}],[\"evt\",{\"1\":{\"1237\":2}}],[\"evident\",{\"1\":{\"547\":1}}],[\"evolution\",{\"1\":{\"523\":3}}],[\"evolve\",{\"1\":{\"523\":3}}],[\"evolved\",{\"1\":{\"523\":1}}],[\"evolving\",{\"1\":{\"523\":2}}],[\"ever\",{\"1\":{\"547\":1}}],[\"everyon\",{\"1\":{\"557\":1}}],[\"everyone\",{\"1\":{\"523\":2,\"543\":1,\"547\":3,\"549\":1,\"550\":2,\"563\":1}}],[\"everything\",{\"1\":{\"523\":7,\"543\":1}}],[\"every\",{\"1\":{\"514\":1,\"523\":4,\"540\":2,\"543\":3,\"547\":3,\"548\":3,\"563\":1,\"1001\":2,\"1004\":1,\"1005\":1,\"1034\":2,\"1052\":1}}],[\"everysec\",{\"1\":{\"413\":1,\"422\":1}}],[\"eve\",{\"1\":{\"523\":1}}],[\"event\",{\"1\":{\"1010\":10,\"1011\":9,\"1237\":5}}],[\"events\",{\"1\":{\"537\":1,\"1010\":1}}],[\"even\",{\"1\":{\"90\":1,\"483\":1,\"523\":4,\"537\":1,\"540\":1,\"543\":1,\"547\":4,\"563\":2,\"1052\":1,\"1055\":1}}],[\"evm\",{\"1\":{\"156\":1}}],[\"evm有六种存储数据的方式\",{\"1\":{\"105\":1}}],[\"excuses\",{\"1\":{\"547\":1}}],[\"exchange\",{\"1\":{\"293\":1,\"523\":1}}],[\"exercise\",{\"1\":{\"543\":1,\"560\":1}}],[\"executing\",{\"1\":{\"1119\":1}}],[\"executions\",{\"1\":{\"1118\":1}}],[\"execution\",{\"1\":{\"1118\":3,\"1119\":2}}],[\"executed\",{\"1\":{\"1118\":1}}],[\"executes\",{\"1\":{\"1056\":1}}],[\"executestrategy\",{\"1\":{\"855\":4}}],[\"execute\",{\"1\":{\"820\":10,\"821\":2,\"975\":1,\"1119\":1,\"1135\":1}}],[\"executable\",{\"1\":{\"111\":1}}],[\"exec\",{\"1\":{\"58\":1,\"68\":6,\"424\":3,\"975\":2,\"1219\":1}}],[\"exactvalidargs\",{\"1\":{\"991\":1}}],[\"exactargs\",{\"1\":{\"991\":1}}],[\"exactly\",{\"1\":{\"523\":1}}],[\"examples\",{\"1\":{\"537\":1,\"989\":1,\"1118\":1}}],[\"examples中含有应用例子\",{\"1\":{\"512\":1}}],[\"example\",{\"0\":{\"1124\":1},\"1\":{\"333\":2,\"525\":1,\"543\":2,\"547\":1,\"548\":1,\"557\":1,\"989\":1,\"1052\":2,\"1056\":1,\"1086\":1,\"1116\":2,\"1117\":1,\"1118\":1,\"1127\":1,\"1242\":1}}],[\"extension\",{\"1\":{\"557\":1}}],[\"extent\",{\"1\":{\"543\":1,\"547\":1}}],[\"external\",{\"1\":{\"105\":1}}],[\"extraordinary\",{\"1\":{\"537\":1}}],[\"extremely\",{\"1\":{\"523\":3}}],[\"extreme\",{\"1\":{\"523\":1}}],[\"ex\",{\"1\":{\"437\":1}}],[\"exists\",{\"1\":{\"976\":1}}],[\"existed\",{\"1\":{\"523\":1,\"976\":1}}],[\"exist\",{\"1\":{\"284\":1,\"523\":1}}],[\"exitsyscallfast\",{\"1\":{\"1135\":1}}],[\"exitsyscall0\",{\"1\":{\"1135\":1}}],[\"exitsyscall\",{\"1\":{\"1135\":1}}],[\"exits\",{\"1\":{\"1127\":1}}],[\"exiting\",{\"1\":{\"1072\":1,\"1124\":1}}],[\"exit\",{\"1\":{\"68\":1,\"90\":6,\"967\":1,\"1072\":3,\"1100\":1,\"1125\":1}}],[\"exited\",{\"1\":{\"63\":1,\"65\":1,\"69\":1}}],[\"expirationtime\",{\"1\":{\"1047\":3}}],[\"expiration\",{\"1\":{\"1047\":1}}],[\"expire\",{\"1\":{\"436\":1}}],[\"expiresat\",{\"1\":{\"1047\":1}}],[\"expires\",{\"1\":{\"414\":1,\"1047\":1}}],[\"exp\",{\"1\":{\"1047\":1}}],[\"express\",{\"1\":{\"563\":1}}],[\"expression\",{\"1\":{\"459\":1}}],[\"expanding\",{\"1\":{\"523\":1,\"543\":1}}],[\"expand\",{\"1\":{\"523\":1}}],[\"expansion\",{\"1\":{\"523\":1}}],[\"expertise\",{\"1\":{\"673\":1}}],[\"experiences\",{\"1\":{\"543\":1}}],[\"experienced\",{\"1\":{\"543\":1,\"547\":1}}],[\"experience\",{\"1\":{\"519\":1,\"543\":3,\"563\":1}}],[\"expensive\",{\"1\":{\"523\":1}}],[\"expectcontinuereader\",{\"1\":{\"1055\":1}}],[\"expectcommit\",{\"1\":{\"975\":1}}],[\"expectscontinue\",{\"1\":{\"1055\":1}}],[\"expecting\",{\"1\":{\"975\":1}}],[\"expectrollback\",{\"1\":{\"975\":1}}],[\"expectations\",{\"1\":{\"975\":3}}],[\"expectationsweremet\",{\"1\":{\"975\":2}}],[\"expectexec\",{\"1\":{\"975\":4}}],[\"expected\",{\"1\":{\"467\":1,\"967\":3,\"975\":3,\"1125\":2}}],[\"expectbegin\",{\"1\":{\"975\":2}}],[\"expect\",{\"1\":{\"449\":2,\"972\":2,\"977\":6,\"1055\":2}}],[\"explicit\",{\"1\":{\"1123\":1}}],[\"explanatory\",{\"1\":{\"1120\":1}}],[\"explained\",{\"1\":{\"1116\":1}}],[\"explains\",{\"1\":{\"543\":1}}],[\"explain\",{\"1\":{\"90\":2,\"557\":1,\"1123\":1}}],[\"explored\",{\"1\":{\"523\":1}}],[\"explorers\",{\"1\":{\"523\":1}}],[\"explorer\",{\"1\":{\"114\":1}}],[\"explosion\",{\"1\":{\"523\":4}}],[\"explodes\",{\"1\":{\"523\":1}}],[\"export\",{\"1\":{\"69\":2,\"194\":2,\"199\":2,\"200\":1,\"972\":1,\"1067\":1}}],[\"ecosystem\",{\"1\":{\"1079\":1}}],[\"economics\",{\"1\":{\"523\":1,\"540\":1}}],[\"econonics\",{\"0\":{\"1249\":1},\"2\":{\"12\":1}}],[\"echoing\",{\"1\":{\"1055\":1}}],[\"echotimes\",{\"1\":{\"992\":3}}],[\"echocmd\",{\"1\":{\"990\":1,\"992\":4}}],[\"echo\",{\"1\":{\"56\":1,\"58\":1,\"64\":1,\"66\":2,\"989\":3,\"991\":1,\"992\":13,\"1026\":5}}],[\"enable\",{\"1\":{\"1055\":1}}],[\"enabled\",{\"1\":{\"1055\":1}}],[\"enabled=0\",{\"1\":{\"1023\":1,\"1026\":1}}],[\"enabled配置选项是否为yes来决定是否开启服务器的集群模式\",{\"1\":{\"427\":1}}],[\"engine添加了两款中间件\",{\"1\":{\"1056\":1}}],[\"engine实现了net\",{\"1\":{\"1055\":1}}],[\"engine的r\",{\"1\":{\"1053\":1}}],[\"engine\",{\"0\":{\"1052\":1},\"1\":{\"972\":2,\"1050\":2,\"1051\":5,\"1052\":8,\"1053\":14,\"1054\":4,\"1055\":19}}],[\"english\",{\"0\":{\"547\":1}}],[\"enrich\",{\"1\":{\"563\":1}}],[\"enslaved\",{\"1\":{\"547\":1}}],[\"energy\",{\"1\":{\"523\":11}}],[\"entanglement\",{\"1\":{\"537\":1}}],[\"entity\",{\"1\":{\"523\":1}}],[\"entire\",{\"1\":{\"523\":5,\"537\":1,\"549\":1}}],[\"entertainment\",{\"1\":{\"563\":1}}],[\"enterprise\",{\"1\":{\"563\":1}}],[\"enter\",{\"1\":{\"523\":1}}],[\"entropy\",{\"1\":{\"523\":5}}],[\"entries配置\",{\"1\":{\"408\":1}}],[\"entries\",{\"1\":{\"404\":1,\"406\":1}}],[\"entry\",{\"1\":{\"399\":1,\"460\":2}}],[\"enjoying\",{\"1\":{\"543\":1}}],[\"enjoy\",{\"0\":{\"520\":1},\"1\":{\"557\":2}}],[\"enough\",{\"1\":{\"519\":3,\"523\":2,\"537\":2,\"543\":1}}],[\"enumerations\",{\"1\":{\"1084\":1}}],[\"enum\",{\"1\":{\"448\":1,\"1084\":1}}],[\"encountered\",{\"1\":{\"543\":1,\"557\":1}}],[\"encountering\",{\"1\":{\"523\":1}}],[\"encodetostring\",{\"1\":{\"514\":1}}],[\"encoding属性记录了对象底层所使用的编码\",{\"1\":{\"400\":1}}],[\"encoding的属性有intset\",{\"1\":{\"398\":1}}],[\"encoding\",{\"1\":{\"398\":1,\"399\":1,\"400\":1,\"511\":2,\"972\":1,\"973\":1,\"1055\":2}}],[\"enc\",{\"1\":{\"398\":3}}],[\"endpoint\",{\"1\":{\"1073\":1}}],[\"end更好用了\",{\"1\":{\"948\":1}}],[\"ended\",{\"1\":{\"861\":1}}],[\"ends\",{\"1\":{\"547\":1}}],[\"endangers\",{\"1\":{\"540\":1}}],[\"endlessly\",{\"1\":{\"523\":1}}],[\"end+1\",{\"1\":{\"214\":1,\"948\":1}}],[\"end\",{\"0\":{\"549\":1},\"1\":{\"213\":4,\"214\":2,\"216\":8,\"323\":8,\"403\":2,\"436\":1,\"523\":4,\"534\":1,\"537\":2,\"540\":1,\"557\":1,\"861\":3,\"948\":10,\"949\":5,\"967\":9,\"1011\":2,\"1072\":2,\"1097\":3,\"1099\":3,\"1121\":3,\"1206\":2,\"1212\":1}}],[\"enveloped\",{\"1\":{\"523\":1}}],[\"environment\",{\"1\":{\"447\":2,\"448\":1,\"475\":1,\"523\":5,\"547\":2}}],[\"env中的需求修改的其他部分进行更新\",{\"1\":{\"192\":1}}],[\"env文件吗\",{\"1\":{\"517\":1}}],[\"env文件\",{\"1\":{\"192\":2,\"510\":1,\"517\":1}}],[\"env\",{\"1\":{\"90\":1,\"192\":3,\"194\":6,\"195\":5,\"509\":1,\"972\":1,\"1067\":1}}],[\"en\",{\"1\":{\"27\":1}}],[\"ws\",{\"1\":{\"1073\":3}}],[\"wsendpoint\",{\"1\":{\"1073\":2}}],[\"wg\",{\"1\":{\"1019\":4}}],[\"wget\",{\"1\":{\"58\":4}}],[\"wbw\",{\"1\":{\"569\":1}}],[\"w\",{\"1\":{\"246\":2,\"516\":11,\"827\":6,\"905\":2,\"910\":4,\"927\":12,\"972\":4,\"1045\":9,\"1047\":13,\"1055\":20,\"1073\":4,\"1143\":2,\"1169\":3,\"1181\":3,\"1193\":8}}],[\"wxyz\",{\"1\":{\"210\":1}}],[\"woman\",{\"1\":{\"1084\":2,\"1088\":1}}],[\"women\",{\"1\":{\"874\":1}}],[\"won\",{\"1\":{\"543\":1}}],[\"wonder\",{\"1\":{\"523\":1,\"543\":1}}],[\"would\",{\"1\":{\"192\":6,\"543\":1,\"808\":1}}],[\"worse\",{\"1\":{\"563\":1}}],[\"worthless\",{\"1\":{\"543\":1}}],[\"works\",{\"1\":{\"1120\":3}}],[\"working\",{\"1\":{\"543\":1}}],[\"work\",{\"1\":{\"483\":1,\"543\":3,\"547\":2,\"1011\":2,\"1071\":1,\"1079\":1,\"1119\":1}}],[\"work的方案\",{\"1\":{\"95\":1}}],[\"words\",{\"1\":{\"523\":1,\"543\":1,\"547\":1}}],[\"word\",{\"1\":{\"284\":7,\"468\":10}}],[\"word2=\",{\"1\":{\"266\":1}}],[\"word2添加一个元素\",{\"1\":{\"266\":2}}],[\"word2删除一个元素\",{\"1\":{\"266\":1}}],[\"word2为空字符串\",{\"1\":{\"265\":1}}],[\"word2\",{\"1\":{\"265\":14,\"266\":14}}],[\"word1替换word1\",{\"1\":{\"266\":1}}],[\"word1删除元素\",{\"1\":{\"266\":1}}],[\"word1删除一个元素\",{\"1\":{\"266\":1}}],[\"word1\",{\"1\":{\"265\":9,\"266\":14}}],[\"worddictset\",{\"1\":{\"246\":3}}],[\"worddict\",{\"1\":{\"246\":2}}],[\"wordbreak\",{\"1\":{\"246\":1}}],[\"worlds\",{\"1\":{\"523\":1}}],[\"world\",{\"1\":{\"51\":1,\"64\":2,\"66\":6,\"90\":3,\"333\":2,\"334\":2,\"393\":1,\"402\":1,\"468\":3,\"470\":2,\"472\":3,\"481\":2,\"523\":8,\"537\":4,\"540\":3,\"547\":2,\"548\":1,\"557\":1,\"560\":1,\"563\":1,\"992\":1,\"1073\":1,\"1118\":1,\"1119\":3,\"1124\":3,\"1135\":2,\"1153\":2,\"1166\":1}}],[\"why\",{\"1\":{\"537\":1,\"540\":1,\"543\":1,\"547\":1,\"569\":1,\"1119\":2}}],[\"whose\",{\"1\":{\"523\":1}}],[\"whom\",{\"1\":{\"523\":1}}],[\"whole\",{\"1\":{\"523\":2,\"537\":1,\"557\":1,\"560\":1}}],[\"who\",{\"0\":{\"550\":1},\"1\":{\"519\":1,\"523\":1,\"537\":1,\"540\":1,\"543\":3,\"547\":1,\"548\":1,\"550\":2,\"563\":3}}],[\"whether\",{\"1\":{\"547\":3,\"548\":1,\"1127\":1}}],[\"wheel\",{\"1\":{\"523\":2}}],[\"when\",{\"1\":{\"516\":1,\"523\":9,\"537\":1,\"543\":5,\"547\":9,\"560\":1,\"563\":7,\"960\":1,\"975\":2,\"1118\":3,\"1119\":2,\"1123\":2,\"1124\":1,\"1126\":1}}],[\"where\",{\"1\":{\"194\":1,\"345\":1,\"351\":1,\"352\":1,\"353\":1,\"355\":1,\"362\":2,\"371\":1,\"523\":5,\"537\":1,\"543\":2,\"563\":1,\"1126\":1}}],[\"what\",{\"0\":{\"1116\":1,\"1117\":1,\"1119\":1,\"1121\":1},\"1\":{\"192\":5,\"483\":1,\"519\":1,\"523\":6,\"537\":4,\"540\":2,\"543\":5,\"547\":4,\"548\":1,\"808\":2,\"1115\":1,\"1118\":1,\"1119\":2,\"1123\":2,\"1126\":1}}],[\"which\",{\"1\":{\"523\":5,\"537\":1,\"540\":1,\"543\":1,\"547\":2,\"548\":3,\"557\":5,\"560\":1,\"563\":3,\"1055\":1,\"1073\":1,\"1120\":1,\"1121\":1,\"1124\":2}}],[\"white\",{\"1\":{\"523\":2,\"557\":1},\"2\":{\"522\":1}}],[\"whiteout\",{\"1\":{\"78\":1}}],[\"while\",{\"1\":{\"66\":2,\"537\":1,\"543\":3,\"975\":1,\"1055\":1,\"1125\":1,\"1127\":1}}],[\"wrap\",{\"1\":{\"1055\":1}}],[\"wrapping\",{\"1\":{\"459\":1}}],[\"wrappedi80f48\",{\"1\":{\"152\":11}}],[\"wronly|os\",{\"1\":{\"1169\":1}}],[\"wrong\",{\"1\":{\"547\":1,\"976\":1}}],[\"wrote\",{\"1\":{\"560\":1}}],[\"writing\",{\"1\":{\"483\":1,\"505\":1,\"543\":1,\"548\":1,\"1055\":1,\"1126\":1}}],[\"writer\",{\"1\":{\"1153\":9,\"1169\":4,\"1173\":1,\"1181\":2}}],[\"writersem\",{\"1\":{\"1143\":4}}],[\"writermem\",{\"1\":{\"1055\":3}}],[\"writes\",{\"1\":{\"1123\":1,\"1124\":2}}],[\"writestring\",{\"1\":{\"516\":1,\"1055\":1,\"1153\":2}}],[\"writemessage\",{\"1\":{\"1073\":1}}],[\"writebuffersize\",{\"1\":{\"1073\":1}}],[\"writetimeout\",{\"1\":{\"516\":1,\"1055\":1}}],[\"writeheadernow\",{\"1\":{\"1055\":2}}],[\"writeheader\",{\"1\":{\"516\":2,\"1047\":9}}],[\"write和min\",{\"1\":{\"425\":1}}],[\"write\",{\"1\":{\"90\":3,\"357\":5,\"358\":5,\"360\":2,\"366\":1,\"368\":1,\"377\":1,\"514\":1,\"516\":3,\"548\":1,\"1055\":1,\"1073\":1,\"1122\":1,\"1123\":1,\"1124\":3,\"1125\":1,\"1153\":1},\"2\":{\"607\":1,\"613\":1,\"617\":1,\"625\":1,\"630\":1,\"636\":1,\"645\":1,\"651\":1,\"659\":1,\"662\":1,\"665\":1,\"668\":1,\"672\":1,\"676\":1,\"679\":1,\"682\":1,\"685\":1,\"688\":1,\"691\":1,\"694\":1}}],[\"written\",{\"1\":{\"90\":1,\"543\":1}}],[\"wakep\",{\"1\":{\"1135\":1}}],[\"wazirx\",{\"1\":{\"706\":2}}],[\"warning\",{\"1\":{\"972\":2,\"1054\":1}}],[\"waring\",{\"1\":{\"563\":2}}],[\"warranty\",{\"1\":{\"90\":1}}],[\"wanterr\",{\"1\":{\"980\":5}}],[\"wanted\",{\"1\":{\"523\":1,\"549\":1}}],[\"want\",{\"0\":{\"550\":1},\"1\":{\"537\":2,\"543\":4,\"547\":3,\"549\":1,\"550\":1,\"560\":1,\"563\":5,\"574\":1,\"967\":6,\"968\":6,\"979\":7,\"980\":5}}],[\"wandered\",{\"1\":{\"523\":1}}],[\"water\",{\"1\":{\"523\":7,\"1121\":1}}],[\"watching\",{\"1\":{\"543\":1,\"563\":1}}],[\"watched\",{\"1\":{\"537\":1}}],[\"watch的原理是\",{\"1\":{\"424\":1}}],[\"watch命令是一个乐观锁\",{\"1\":{\"424\":1}}],[\"watch命令的实现\",{\"1\":{\"424\":1}}],[\"watch\",{\"1\":{\"424\":3,\"540\":1,\"548\":2,\"563\":2}}],[\"watch等命令实现事务\",{\"1\":{\"424\":1}}],[\"waves\",{\"1\":{\"523\":1}}],[\"wave\",{\"1\":{\"523\":2}}],[\"way\",{\"1\":{\"523\":9,\"540\":1,\"543\":2,\"550\":2,\"563\":2,\"1118\":1,\"1119\":1,\"1122\":1}}],[\"wasted\",{\"1\":{\"537\":2}}],[\"waste\",{\"1\":{\"523\":1}}],[\"was\",{\"1\":{\"523\":14,\"543\":5,\"547\":2,\"548\":1,\"560\":4,\"563\":1,\"808\":1,\"975\":5,\"1055\":1,\"1124\":1,\"1127\":1}}],[\"waiterscount\",{\"1\":{\"1142\":1}}],[\"waitq\",{\"1\":{\"1137\":4}}],[\"waitn\",{\"0\":{\"1035\":1},\"1\":{\"1035\":2}}],[\"waitgroup`\",{\"1\":{\"1144\":1}}],[\"waitgroup\",{\"0\":{\"1144\":1},\"1\":{\"1019\":1,\"1141\":1,\"1144\":30}}],[\"waitbutwhy网站上有许多值得推荐的文章\",{\"1\":{\"569\":1}}],[\"waitbutwhy\",{\"1\":{\"569\":2}}],[\"waiting\",{\"1\":{\"523\":2,\"563\":1,\"1119\":1,\"1124\":2,\"1125\":1,\"1137\":1}}],[\"wait\",{\"0\":{\"1035\":1},\"1\":{\"519\":1,\"563\":2,\"569\":1,\"1019\":1,\"1035\":6,\"1119\":2,\"1144\":4,\"1146\":4}}],[\"walls\",{\"1\":{\"523\":1}}],[\"walletfacacde\",{\"1\":{\"927\":2}}],[\"walletfacade\",{\"1\":{\"927\":5}}],[\"wallet\",{\"1\":{\"36\":1,\"927\":7}}],[\"walk\",{\"1\":{\"560\":1,\"1138\":1}}],[\"walked\",{\"1\":{\"537\":1}}],[\"walking\",{\"1\":{\"523\":1,\"543\":1}}],[\"walks\",{\"1\":{\"523\":1}}],[\"wal\",{\"1\":{\"357\":1}}],[\"wal技术是指mysql的写操作并不是立即写到磁盘上\",{\"1\":{\"357\":1}}],[\"wed\",{\"1\":{\"1002\":1}}],[\"welcome\",{\"1\":{\"978\":1,\"1045\":1,\"1047\":1,\"1127\":1}}],[\"well\",{\"1\":{\"547\":1,\"563\":1,\"1055\":1,\"1120\":1,\"1126\":1}}],[\"wechat\",{\"0\":{\"549\":1,\"550\":1},\"1\":{\"547\":8,\"548\":2,\"549\":6,\"563\":1},\"2\":{\"556\":1}}],[\"weird\",{\"1\":{\"523\":1}}],[\"weighs\",{\"1\":{\"523\":1}}],[\"weight数组的大小\",{\"1\":{\"235\":1}}],[\"weight\",{\"1\":{\"150\":2,\"152\":4,\"235\":14,\"236\":12,\"237\":1,\"240\":2,\"241\":6,\"563\":1,\"1226\":3,\"1231\":6,\"1232\":1,\"1236\":1,\"1239\":1}}],[\"went\",{\"1\":{\"523\":1,\"537\":1}}],[\"wealth\",{\"1\":{\"537\":1,\"540\":1}}],[\"wear\",{\"1\":{\"523\":2}}],[\"weak\",{\"1\":{\"523\":1}}],[\"weekday\",{\"1\":{\"1212\":5}}],[\"weekly\",{\"1\":{\"1003\":1}}],[\"week\",{\"1\":{\"523\":1,\"537\":1,\"548\":1,\"1002\":1,\"1212\":1}}],[\"weeks\",{\"1\":{\"51\":1,\"55\":1}}],[\"were\",{\"1\":{\"523\":7,\"543\":1,\"975\":3,\"1055\":1}}],[\"we\",{\"1\":{\"90\":3,\"192\":2,\"277\":2,\"516\":1,\"523\":10,\"543\":5,\"547\":1,\"550\":1,\"563\":1,\"972\":2,\"975\":2,\"1054\":1,\"1055\":9,\"1073\":1,\"1115\":1,\"1118\":5,\"1119\":5,\"1124\":5,\"1125\":1,\"1126\":3,\"1127\":1}}],[\"web领域中最受欢迎的框架\",{\"1\":{\"1060\":1}}],[\"web框架常见的高并发问题进行了优化\",{\"1\":{\"1057\":1}}],[\"web框架\",{\"1\":{\"1050\":1}}],[\"web开发中的中间件大多也是利用责任链模式实现的\",{\"1\":{\"814\":1}}],[\"web开发文档\",{\"1\":{\"504\":1}}],[\"websockets\",{\"1\":{\"1073\":1}}],[\"websocket\",{\"1\":{\"1073\":10}}],[\"websocket是html5新增的协议\",{\"1\":{\"1073\":1}}],[\"website\",{\"1\":{\"976\":1}}],[\"websites\",{\"1\":{\"543\":1}}],[\"webserver\",{\"1\":{\"55\":2}}],[\"web处理程序和web服务器连接在一个简短的main函数中\",{\"1\":{\"517\":1}}],[\"web服务\",{\"0\":{\"516\":1},\"1\":{\"510\":1}}],[\"web编程实战派\",{\"1\":{\"504\":1}}],[\"web3\",{\"0\":{\"196\":1},\"1\":{\"534\":1},\"2\":{\"802\":1,\"803\":1}}],[\"webapp\",{\"1\":{\"74\":5}}],[\"web\",{\"1\":{\"55\":1,\"74\":7,\"193\":4,\"516\":1,\"721\":4,\"1047\":3,\"1073\":1,\"1118\":4,\"1217\":1},\"2\":{\"1049\":1}}],[\"wire\",{\"1\":{\"981\":1,\"1055\":1}}],[\"wincomputer\",{\"1\":{\"910\":5}}],[\"wind\",{\"1\":{\"543\":1}}],[\"windows系统快捷键\",{\"1\":{\"525\":1}}],[\"windows\",{\"1\":{\"494\":1,\"771\":1,\"910\":8}}],[\"window\",{\"1\":{\"46\":1,\"47\":1,\"48\":1,\"60\":1,\"260\":1}}],[\"wish\",{\"1\":{\"547\":1}}],[\"wise\",{\"1\":{\"537\":1}}],[\"width\",{\"1\":{\"543\":4}}],[\"wild\",{\"1\":{\"523\":1,\"1055\":1}}],[\"willreturnerror\",{\"1\":{\"975\":1}}],[\"willreturnresult\",{\"1\":{\"975\":3}}],[\"will\",{\"1\":{\"90\":4,\"192\":3,\"523\":16,\"537\":2,\"540\":4,\"543\":8,\"547\":2,\"548\":2,\"549\":1,\"557\":3,\"563\":1,\"1052\":1,\"1073\":2,\"1118\":2,\"1119\":5,\"1120\":1,\"1123\":1,\"1124\":8,\"1125\":3,\"1126\":2,\"1127\":3}}],[\"wiki上的定义是\",{\"1\":{\"646\":1,\"677\":1}}],[\"wiki\",{\"1\":{\"523\":1}}],[\"wikipedia上有一份中国大陆网络热点事件列表\",{\"1\":{\"734\":1}}],[\"wikipedia\",{\"1\":{\"523\":1,\"547\":1}}],[\"wikipedia的页面最近重新设计了\",{\"1\":{\"8\":1}}],[\"withunaryinterceptor\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"withblock\",{\"1\":{\"1079\":1}}],[\"withdeadline\",{\"1\":{\"1156\":1}}],[\"withdetails\",{\"1\":{\"1074\":1}}],[\"withdraw\",{\"0\":{\"160\":1},\"1\":{\"150\":2,\"152\":1,\"157\":1}}],[\"withtimeout\",{\"1\":{\"1067\":1,\"1156\":1}}],[\"withtransportcredentials\",{\"1\":{\"1067\":1,\"1079\":1,\"1095\":1,\"1099\":1}}],[\"withcancel\",{\"1\":{\"1055\":1,\"1156\":1}}],[\"withvalue\",{\"1\":{\"1055\":2}}],[\"withlocation\",{\"1\":{\"1001\":1}}],[\"withargs\",{\"1\":{\"975\":2}}],[\"withage\",{\"1\":{\"875\":1}}],[\"withauth\",{\"1\":{\"200\":1}}],[\"withgender\",{\"1\":{\"875\":1}}],[\"withphone\",{\"1\":{\"875\":1}}],[\"without\",{\"1\":{\"547\":2,\"548\":1,\"563\":1,\"1055\":1,\"1119\":1,\"1123\":1}}],[\"within\",{\"1\":{\"523\":1,\"548\":1}}],[\"withscores\",{\"1\":{\"410\":4}}],[\"with\",{\"0\":{\"1253\":1},\"1\":{\"90\":6,\"362\":2,\"364\":1,\"447\":3,\"448\":1,\"475\":1,\"483\":1,\"519\":1,\"523\":14,\"537\":5,\"543\":7,\"547\":4,\"563\":1,\"972\":1,\"993\":5,\"1019\":1,\"1047\":1,\"1050\":1,\"1051\":1,\"1053\":1,\"1055\":6,\"1099\":1,\"1116\":3,\"1117\":1,\"1118\":1,\"1119\":1,\"1122\":1,\"1125\":2}}],[\"www\",{\"1\":{\"27\":1,\"194\":1,\"609\":1,\"977\":1,\"1038\":3,\"1098\":1,\"1194\":1}}],[\"该包的常用函数和功能包括\",{\"1\":{\"1198\":1}}],[\"该信号量被触发时\",{\"1\":{\"1143\":1}}],[\"该信息可以被验证和信任\",{\"1\":{\"1047\":1}}],[\"该\",{\"1\":{\"1143\":1}}],[\"该过程会先使用\",{\"1\":{\"1142\":1}}],[\"该过程完成后\",{\"1\":{\"114\":1}}],[\"该指令只会占用\",{\"1\":{\"1142\":1}}],[\"该字段是为了减少\",{\"1\":{\"1139\":1}}],[\"该处理器在下一次调度时会立刻唤醒数据的接收方\",{\"1\":{\"1137\":1}}],[\"该限流器是基于\",{\"1\":{\"1033\":1}}],[\"该命令会接受任何位置参数\",{\"1\":{\"991\":1}}],[\"该命令将报错\",{\"1\":{\"991\":2}}],[\"该交易所可能只是为其所有用户进行模拟交易并收取佣金\",{\"1\":{\"703\":1}}],[\"该方法是一个非常大的for循环\",{\"1\":{\"1142\":1}}],[\"该方法是直接操作原来的字符串\",{\"1\":{\"480\":3}}],[\"该方法是直接操作原有的字符串\",{\"1\":{\"479\":1}}],[\"该方法返回了需要等待的时间\",{\"1\":{\"1037\":1}}],[\"该方法\",{\"1\":{\"480\":1}}],[\"该方法直接操作原有字符串\",{\"1\":{\"480\":1}}],[\"该方法仅适用于string类型\",{\"1\":{\"479\":1}}],[\"该方法仍然是返回新的字符串\",{\"1\":{\"479\":1}}],[\"该方法会接收一个入参为空的函数\",{\"1\":{\"1145\":1}}],[\"该方法会先减少正在读资源的\",{\"1\":{\"1143\":1}}],[\"该方法会通过\",{\"1\":{\"1143\":1}}],[\"该方法会将\",{\"1\":{\"1037\":1}}],[\"该方法会使用builder接口构建完整的产品对象\",{\"1\":{\"873\":1}}],[\"该方法会返回一个新的字符串\",{\"1\":{\"479\":1}}],[\"该方法会替换所有匹配到的字符串\",{\"1\":{\"479\":1}}],[\"该方案中\",{\"1\":{\"220\":1}}],[\"该代码会产生如下错误\",{\"1\":{\"473\":1}}],[\"该切片指向了程序可执行文件中的某个点\",{\"1\":{\"470\":1}}],[\"该数组切片的类型是\",{\"1\":{\"469\":1}}],[\"该数接着在变量\",{\"1\":{\"450\":1}}],[\"该属性记录了已下线节点的名字\",{\"1\":{\"435\":1}}],[\"该结构保存的其实是连接节点所需要的有关信息\",{\"1\":{\"427\":1}}],[\"该操作包含以下三个步骤\",{\"1\":{\"426\":1}}],[\"该错误的命令记录到\",{\"1\":{\"413\":1}}],[\"该机制允许内核中\",{\"1\":{\"412\":1}}],[\"该哈希表已有节点的数量\",{\"1\":{\"395\":1}}],[\"该头节点包含链表的头节点地址\",{\"1\":{\"377\":1}}],[\"该记录的整个示意图如下\",{\"1\":{\"362\":1}}],[\"该内存叫\",{\"1\":{\"358\":1}}],[\"该函数也是在\",{\"1\":{\"1146\":1}}],[\"该函数的执行可以分成两个部分\",{\"1\":{\"1137\":1}}],[\"该函数实例化sever\",{\"1\":{\"1055\":1}}],[\"该函数说明\",{\"1\":{\"481\":1}}],[\"该函数将返回左旋转两位得到的结果\",{\"1\":{\"335\":1}}],[\"该函数输出它的镜像\",{\"1\":{\"298\":1}}],[\"该链表应变为\",{\"1\":{\"290\":2}}],[\"该市场美元价格与给定代币出借时的市场美元价格相同\",{\"1\":{\"150\":1}}],[\"该市场的来源将是币安\",{\"1\":{\"27\":1}}],[\"该账户通常是最初部署程序的账户\",{\"1\":{\"127\":1}}],[\"该文件是用于剔除不需要作为上下文传递给\",{\"1\":{\"60\":1}}],[\"该镜像很可能会失去了存在的意义\",{\"1\":{\"55\":1}}],[\"该厂商生产的商品没有任何接近的替代品\",{\"1\":{\"8\":1}}],[\"此方法可以将元数据添加到已有的ctx中\",{\"1\":{\"1094\":1}}],[\"此后按lifo的顺序出栈\",{\"1\":{\"1056\":1}}],[\"此后会有时间去详尽阐述和矫正\",{\"1\":{\"627\":1}}],[\"此后黑天鹅就被形容为带来巨大影响的小概率事件\",{\"1\":{\"528\":1}}],[\"此次事件出现后\",{\"1\":{\"591\":1}}],[\"此刻\",{\"1\":{\"575\":1}}],[\"此忽视可能导致后悔\",{\"1\":{\"573\":1}}],[\"此人也是创造信息革命的人\",{\"1\":{\"528\":1}}],[\"此人在上世纪九十年代在一本书中这样说过像唐纳的特朗普\",{\"1\":{\"528\":1}}],[\"此谓第二个学习\",{\"1\":{\"525\":1}}],[\"此处代码发生了错误而已\",{\"1\":{\"446\":1}}],[\"此\",{\"1\":{\"424\":1}}],[\"此置信区间的上限为\",{\"1\":{\"150\":1}}],[\"此置信区间的下限为\",{\"1\":{\"150\":1}}],[\"此帐户称为\",{\"1\":{\"135\":1}}],[\"此帐户实际上是特定代币的全局计数器\",{\"1\":{\"134\":1}}],[\"此机制允许\",{\"1\":{\"131\":1}}],[\"此代码被组织成不同的函数\",{\"1\":{\"126\":1}}],[\"此过程有助于减少不再使用\",{\"1\":{\"125\":1}}],[\"此数据指定要在程序上调用的指令以及指令所需的任何其他数据\",{\"1\":{\"117\":1}}],[\"此字段通常称为\",{\"1\":{\"111\":1}}],[\"此外这样的代码还存在一个更严重的问题\",{\"1\":{\"981\":1}}],[\"此外\",{\"1\":{\"55\":1,\"58\":1,\"573\":1,\"581\":1,\"1047\":1}}],[\"此周根据币安的价格跌破\",{\"1\":{\"27\":1}}],[\"此时v除了isvalid\",{\"1\":{\"1191\":1}}],[\"此时包下的文件\",{\"1\":{\"967\":1}}],[\"此时程序会直接崩溃退出\",{\"1\":{\"468\":1}}],[\"此时我们就可以用lazy\",{\"1\":{\"459\":1}}],[\"此时我们作为c用户可以在购买话题时\",{\"1\":{\"26\":1}}],[\"此时新的\",{\"1\":{\"436\":1}}],[\"此时新节点只有val\",{\"1\":{\"308\":1}}],[\"此时数据库和缓存依旧保持一致\",{\"1\":{\"384\":1}}],[\"此时这些缓存页都是空闲的\",{\"1\":{\"376\":1}}],[\"此时事务\",{\"1\":{\"374\":1}}],[\"此时也发生了幻读现象\",{\"1\":{\"362\":1}}],[\"此时的目录是这样的\",{\"1\":{\"977\":1}}],[\"此时的复杂度就是\",{\"1\":{\"399\":1}}],[\"此时的\",{\"1\":{\"360\":1}}],[\"此时的持有股票就一定是买入股票了\",{\"1\":{\"252\":1}}],[\"此时该状态并不需要持久化到磁盘\",{\"1\":{\"360\":1}}],[\"此时会停下来将\",{\"1\":{\"357\":1}}],[\"此时得到的最大乘积是18\",{\"1\":{\"285\":1,\"286\":1}}],[\"此时s\",{\"1\":{\"267\":1}}],[\"此时不用增加元素\",{\"1\":{\"266\":1}}],[\"此时就需要编辑了\",{\"1\":{\"266\":1}}],[\"此时可能有同学有点不明白\",{\"1\":{\"266\":1}}],[\"此时相当于t要删除元素\",{\"1\":{\"263\":1}}],[\"此时大家可以回想一下01背包的递推公式\",{\"1\":{\"240\":1}}],[\"此时没有方案\",{\"1\":{\"239\":2}}],[\"此时问题就转化为\",{\"1\":{\"239\":1}}],[\"此时dp数组初始化情况如图所示\",{\"1\":{\"235\":1}}],[\"此时dp\",{\"1\":{\"235\":1,\"236\":1}}],[\"此时如果原主节点重新上线\",{\"1\":{\"433\":1}}],[\"此时如果项目\",{\"1\":{\"385\":1}}],[\"此时如果\",{\"1\":{\"164\":1}}],[\"此时容器会在后台运行并不会把输出的结果\",{\"1\":{\"66\":1}}],[\"此时\",{\"1\":{\"66\":1,\"580\":1}}],[\"此时话题的总数额为\",{\"1\":{\"26\":1}}],[\"月底开始接触比特币\",{\"1\":{\"804\":1}}],[\"月\",{\"1\":{\"27\":1,\"1002\":2,\"1212\":1}}],[\"年前\",{\"1\":{\"784\":1}}],[\"年加入了笑来的付费群\",{\"1\":{\"759\":1}}],[\"年做出的第一个重大决策\",{\"1\":{\"759\":1}}],[\"年的经验\",{\"1\":{\"771\":1}}],[\"年的服务中\",{\"1\":{\"751\":1}}],[\"年的话\",{\"1\":{\"578\":1}}],[\"年尽我所能为你服务\",{\"1\":{\"751\":1}}],[\"年轻时假期应该经常出去旅游等等\",{\"1\":{\"734\":1}}],[\"年轻人在特定工作上停留的平均时间仅为3年\",{\"1\":{\"585\":1}}],[\"年长的人在每个点上花费的时间更长\",{\"1\":{\"585\":1}}],[\"年历史\",{\"1\":{\"579\":1}}],[\"年里\",{\"1\":{\"572\":1}}],[\"年后\",{\"1\":{\"570\":1}}],[\"年了书中提到的一些事情至今还没有发生\",{\"1\":{\"806\":1}}],[\"年了\",{\"1\":{\"569\":1}}],[\"年复一年终将落入怀旧圈套的\",{\"1\":{\"500\":1}}],[\"年就开始接触\",{\"1\":{\"169\":1}}],[\"年化\",{\"1\":{\"163\":3}}],[\"年提出\",{\"1\":{\"77\":1}}],[\"年\",{\"1\":{\"27\":1,\"578\":1,\"751\":1,\"804\":1}}],[\"8889\",{\"1\":{\"1193\":3}}],[\"8888\",{\"1\":{\"90\":5}}],[\"84\",{\"1\":{\"1189\":1}}],[\"8d\",{\"1\":{\"1140\":1}}],[\"8b\",{\"1\":{\"1140\":1}}],[\"8版本开始\",{\"1\":{\"425\":1}}],[\"8版本开始使用的新版复制功能是如何通过部分重同步来解决旧版复制功能的低效问题的\",{\"1\":{\"425\":1}}],[\"8版本以前使用的旧版复制功能的实现原理\",{\"1\":{\"425\":1}}],[\"8这8个数字\",{\"1\":{\"313\":1}}],[\"89\",{\"1\":{\"177\":1}}],[\"8\",{\"0\":{\"165\":1,\"484\":1},\"1\":{\"176\":1,\"210\":1,\"254\":1,\"274\":1,\"276\":1,\"289\":1,\"300\":4,\"307\":2,\"321\":1,\"325\":5,\"326\":1,\"349\":1,\"425\":1,\"428\":1,\"433\":1,\"435\":2,\"448\":1,\"468\":2,\"471\":3,\"473\":2,\"475\":1,\"479\":1,\"484\":1,\"487\":1,\"523\":2,\"967\":3,\"968\":2,\"970\":1,\"979\":2,\"1055\":1,\"1072\":1,\"1084\":1,\"1127\":2,\"1142\":1,\"1208\":1,\"1231\":1}}],[\"8090端口提供grpc\",{\"1\":{\"1079\":1}}],[\"8090\",{\"1\":{\"1079\":3,\"1080\":6}}],[\"8000\",{\"1\":{\"579\":1}}],[\"8080我们看到了相同的创世区块\",{\"1\":{\"517\":1}}],[\"8080\",{\"1\":{\"516\":1,\"972\":2,\"1045\":2,\"1047\":2,\"1073\":1}}],[\"80=1\",{\"1\":{\"150\":1}}],[\"80\",{\"1\":{\"55\":2,\"150\":1,\"1055\":1}}],[\"8k\",{\"1\":{\"26\":1}}],[\"85\",{\"1\":{\"26\":1}}],[\"4<<10\",{\"1\":{\"1055\":1}}],[\"4年\",{\"1\":{\"585\":1}}],[\"456\",{\"1\":{\"1167\":3,\"1168\":2}}],[\"45\",{\"1\":{\"569\":1,\"972\":2,\"1231\":1}}],[\"4中定义的sha224和sha256哈希算法\",{\"1\":{\"512\":1}}],[\"4的集合\",{\"1\":{\"468\":1}}],[\"4直到所有的键值对被迁移完毕\",{\"1\":{\"431\":1}}],[\"4被访问了才会\",{\"1\":{\"377\":1}}],[\"48\",{\"0\":{\"320\":1}}],[\"44\",{\"0\":{\"317\":1},\"1\":{\"967\":1}}],[\"431\",{\"1\":{\"1055\":1}}],[\"436s\",{\"1\":{\"967\":1}}],[\"43\",{\"0\":{\"316\":1},\"1\":{\"1180\":4}}],[\"4999rmb\",{\"1\":{\"537\":1}}],[\"49\",{\"0\":{\"321\":1},\"1\":{\"449\":1,\"970\":2}}],[\"494\",{\"0\":{\"239\":1}}],[\"491\",{\"0\":{\"217\":1}}],[\"41岁\",{\"1\":{\"620\":1}}],[\"41\",{\"0\":{\"314\":1}}],[\"416\",{\"0\":{\"237\":1}}],[\"41a6f6\",{\"1\":{\"195\":1}}],[\"474\",{\"0\":{\"240\":1}}],[\"47\",{\"0\":{\"219\":1,\"319\":1},\"1\":{\"332\":1,\"1181\":1}}],[\"47gb\",{\"1\":{\"51\":1}}],[\"46\",{\"0\":{\"218\":1,\"318\":1}}],[\"465\",{\"1\":{\"194\":1}}],[\"405\",{\"1\":{\"1052\":1}}],[\"404\",{\"1\":{\"1052\":1}}],[\"4093\",{\"1\":{\"500\":1}}],[\"40000\",{\"1\":{\"579\":1}}],[\"400\",{\"1\":{\"117\":1,\"1055\":3,\"1120\":1}}],[\"40\",{\"0\":{\"212\":1,\"313\":1},\"1\":{\"116\":1,\"332\":1,\"579\":1,\"1226\":1,\"1231\":1}}],[\"40k\",{\"1\":{\"26\":4}}],[\"4fc455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7\",{\"1\":{\"55\":1}}],[\"4bc3ae6596938cb0d9e5ac51a1152ec9dcac2a1c50829c74abd9c4361e321b26\",{\"1\":{\"49\":1}}],[\"4\",{\"0\":{\"42\":1,\"161\":1,\"706\":1,\"1078\":1},\"1\":{\"163\":3,\"210\":1,\"214\":1,\"235\":2,\"241\":1,\"245\":1,\"252\":2,\"253\":7,\"254\":11,\"257\":2,\"258\":1,\"259\":1,\"262\":3,\"268\":1,\"274\":1,\"276\":1,\"285\":2,\"288\":1,\"289\":1,\"290\":6,\"292\":1,\"293\":3,\"294\":3,\"297\":4,\"298\":4,\"299\":6,\"300\":4,\"302\":9,\"307\":4,\"312\":1,\"313\":1,\"315\":3,\"319\":1,\"321\":1,\"323\":1,\"326\":1,\"327\":6,\"329\":4,\"330\":4,\"331\":2,\"362\":1,\"372\":1,\"373\":1,\"374\":1,\"377\":1,\"384\":1,\"388\":1,\"396\":1,\"400\":2,\"411\":1,\"413\":2,\"422\":1,\"426\":1,\"427\":1,\"428\":1,\"433\":2,\"447\":6,\"449\":2,\"468\":2,\"469\":1,\"471\":2,\"473\":1,\"475\":1,\"480\":1,\"512\":1,\"514\":1,\"543\":1,\"560\":1,\"759\":1,\"944\":1,\"947\":2,\"967\":3,\"968\":2,\"970\":1,\"972\":1,\"1002\":3,\"1055\":1,\"1072\":1,\"1084\":1,\"1120\":2,\"1124\":4,\"1127\":2,\"1139\":1,\"1146\":1,\"1199\":1,\"1204\":1}}],[\"423\",{\"1\":{\"1140\":1}}],[\"429s\",{\"1\":{\"970\":1}}],[\"428\",{\"1\":{\"967\":1}}],[\"42\",{\"0\":{\"315\":1},\"1\":{\"26\":1,\"58\":1,\"967\":2,\"1163\":1,\"1188\":1,\"1189\":3,\"1198\":6}}],[\"5种情况\",{\"1\":{\"1135\":1}}],[\"5种常见的数据类型\",{\"0\":{\"401\":1}}],[\"5万小时\",{\"1\":{\"571\":2}}],[\"5+deepl翻译\",{\"1\":{\"569\":1}}],[\"5th\",{\"1\":{\"543\":1}}],[\"5s\",{\"1\":{\"386\":1}}],[\"597s\",{\"1\":{\"976\":1}}],[\"590\",{\"1\":{\"967\":1}}],[\"591s\",{\"1\":{\"899\":1}}],[\"593\",{\"1\":{\"447\":1}}],[\"59\",{\"0\":{\"336\":1},\"1\":{\"1002\":3,\"1206\":1}}],[\"582s\",{\"1\":{\"973\":1}}],[\"58\",{\"0\":{\"333\":1,\"334\":1,\"335\":1},\"1\":{\"1182\":1}}],[\"583\",{\"0\":{\"265\":1}}],[\"57\",{\"0\":{\"332\":1},\"1\":{\"1180\":4}}],[\"56\",{\"0\":{\"330\":1,\"331\":1}}],[\"54\",{\"0\":{\"327\":1}}],[\"52\",{\"0\":{\"324\":1},\"1\":{\"1206\":1}}],[\"5e2\",{\"1\":{\"292\":1}}],[\"536761s\",{\"1\":{\"1207\":1}}],[\"536756s\",{\"1\":{\"1207\":1}}],[\"53\",{\"0\":{\"262\":1,\"325\":1,\"326\":1},\"1\":{\"1206\":3}}],[\"51549e625cfda318ad27423a31e7476fe3cd2939\",{\"1\":{\"428\":1}}],[\"512\",{\"1\":{\"404\":1,\"406\":1,\"408\":1}}],[\"516\",{\"0\":{\"268\":1}}],[\"518\",{\"0\":{\"242\":1}}],[\"51\",{\"0\":{\"220\":1,\"323\":1}}],[\"5的时候铸币的\",{\"1\":{\"177\":1}}],[\"504h21m51\",{\"1\":{\"1207\":2}}],[\"502740833>\",{\"1\":{\"1135\":1}}],[\"50本\",{\"0\":{\"501\":1}}],[\"500状态码返回\",{\"1\":{\"1050\":1}}],[\"500\",{\"1\":{\"516\":1,\"1120\":1}}],[\"5004\",{\"1\":{\"428\":1}}],[\"5003\",{\"1\":{\"428\":1}}],[\"5002\",{\"1\":{\"428\":1}}],[\"5001\",{\"1\":{\"428\":1}}],[\"5000\",{\"1\":{\"428\":2}}],[\"50000\",{\"1\":{\"426\":3}}],[\"509\",{\"0\":{\"226\":1}}],[\"50\",{\"0\":{\"322\":1},\"1\":{\"150\":1,\"159\":1,\"164\":1,\"166\":1,\"169\":4,\"706\":1,\"754\":1,\"771\":3,\"855\":1}}],[\"501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7\",{\"1\":{\"55\":1}}],[\"501\",{\"1\":{\"55\":1,\"1055\":1}}],[\"50公里\",{\"1\":{\"4\":1}}],[\"5f515359c7f8\",{\"1\":{\"54\":1}}],[\"5\",{\"0\":{\"162\":1,\"1083\":1},\"1\":{\"27\":1,\"28\":2,\"54\":2,\"58\":2,\"90\":2,\"150\":6,\"153\":1,\"162\":1,\"163\":4,\"164\":1,\"166\":3,\"169\":3,\"176\":4,\"210\":1,\"242\":2,\"252\":4,\"253\":8,\"254\":2,\"257\":1,\"258\":3,\"262\":1,\"268\":1,\"274\":1,\"275\":1,\"276\":2,\"289\":1,\"290\":6,\"292\":1,\"294\":1,\"295\":1,\"297\":2,\"300\":4,\"302\":9,\"306\":3,\"307\":5,\"312\":1,\"313\":1,\"315\":1,\"316\":1,\"318\":1,\"319\":1,\"321\":3,\"323\":2,\"325\":2,\"326\":1,\"327\":2,\"336\":11,\"350\":2,\"359\":1,\"372\":1,\"373\":2,\"374\":1,\"384\":1,\"388\":1,\"426\":1,\"427\":1,\"433\":2,\"447\":10,\"468\":4,\"469\":1,\"478\":1,\"523\":2,\"543\":4,\"572\":1,\"605\":1,\"660\":1,\"751\":3,\"772\":1,\"855\":10,\"944\":1,\"967\":3,\"968\":2,\"970\":1,\"975\":1,\"976\":2,\"980\":1,\"1002\":3,\"1005\":1,\"1047\":1,\"1055\":1,\"1072\":1,\"1084\":1,\"1099\":1,\"1120\":3,\"1125\":3,\"1126\":1,\"1127\":2,\"1143\":1,\"1153\":1,\"1188\":1,\"1207\":1,\"1208\":1,\"1211\":1}}],[\"55316000\",{\"1\":{\"1212\":1}}],[\"55\",{\"0\":{\"328\":1,\"329\":1},\"1\":{\"26\":2,\"970\":3}}],[\"7day\",{\"1\":{\"997\":1}}],[\"74岁\",{\"1\":{\"620\":1}}],[\"746\",{\"0\":{\"228\":1}}],[\"7岁时的梦想\",{\"1\":{\"573\":1}}],[\"73s\",{\"1\":{\"448\":1}}],[\"7230\",{\"1\":{\"1055\":1}}],[\"72\",{\"0\":{\"266\":1}}],[\"718\",{\"0\":{\"259\":1},\"1\":{\"260\":1}}],[\"71eaf13299f4\",{\"1\":{\"51\":1}}],[\"789\",{\"1\":{\"1167\":1}}],[\"7899\",{\"1\":{\"1100\":1}}],[\"7890\",{\"1\":{\"1063\":2,\"1067\":2,\"1079\":1,\"1095\":1,\"1099\":1}}],[\"78\",{\"0\":{\"215\":1},\"1\":{\"543\":2}}],[\"77\",{\"0\":{\"208\":1}}],[\"77b2dc01fe0f3f1265df143181e7b9af5e05279a884f4776ee75350ea9d8017a\",{\"1\":{\"66\":1}}],[\"7519\",{\"1\":{\"1047\":1}}],[\"75\",{\"1\":{\"159\":2,\"1192\":1}}],[\"7691a814370e\",{\"1\":{\"69\":2}}],[\"7\",{\"0\":{\"164\":1},\"1\":{\"51\":1,\"58\":2,\"194\":2,\"210\":1,\"252\":3,\"253\":3,\"254\":1,\"257\":4,\"258\":2,\"259\":1,\"274\":1,\"276\":1,\"279\":3,\"289\":1,\"298\":4,\"300\":4,\"303\":3,\"304\":3,\"305\":3,\"307\":1,\"313\":1,\"323\":1,\"325\":4,\"326\":1,\"328\":2,\"329\":2,\"331\":3,\"332\":3,\"336\":9,\"359\":1,\"406\":1,\"410\":1,\"427\":1,\"433\":1,\"447\":1,\"479\":1,\"517\":1,\"523\":1,\"572\":1,\"579\":1,\"751\":1,\"967\":4,\"968\":2,\"970\":1,\"1072\":1,\"1084\":1,\"1127\":2,\"1207\":1,\"1212\":2,\"1226\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1234\":1,\"1240\":1,\"1241\":2}}],[\"70国债恰恰相反\",{\"1\":{\"528\":1}}],[\"700\",{\"1\":{\"523\":1}}],[\"7001>\",{\"1\":{\"428\":1}}],[\"7001\",{\"1\":{\"428\":2}}],[\"7002>\",{\"1\":{\"428\":1}}],[\"7002三个节点所在的集群进入上线状态\",{\"1\":{\"428\":1}}],[\"7002\",{\"1\":{\"428\":1}}],[\"7000>\",{\"1\":{\"428\":2,\"429\":2}}],[\"7000103911\",{\"1\":{\"505\":1,\"557\":1}}],[\"7000103206\",{\"1\":{\"36\":1}}],[\"7000102163\",{\"1\":{\"28\":1}}],[\"70\",{\"0\":{\"227\":1,\"243\":1},\"1\":{\"166\":1,\"523\":1,\"528\":1}}],[\"70k\",{\"1\":{\"26\":4}}],[\"7k\",{\"1\":{\"26\":8}}],[\"3pc\",{\"1\":{\"387\":1}}],[\"38\",{\"0\":{\"311\":1}}],[\"37\",{\"0\":{\"310\":1},\"1\":{\"377\":2,\"1178\":3,\"1212\":7}}],[\"351s\",{\"1\":{\"959\":1}}],[\"35\",{\"0\":{\"308\":1},\"1\":{\"1182\":1,\"1231\":1}}],[\"34岁\",{\"1\":{\"620\":1}}],[\"34\",{\"0\":{\"307\":1}}],[\"343\",{\"0\":{\"231\":1}}],[\"330496\",{\"1\":{\"1072\":1}}],[\"331s\",{\"1\":{\"969\":1}}],[\"33\",{\"0\":{\"306\":1},\"1\":{\"960\":2,\"979\":3,\"1002\":1}}],[\"337s\",{\"1\":{\"967\":1}}],[\"33780456\",{\"1\":{\"569\":1}}],[\"337\",{\"0\":{\"250\":1},\"1\":{\"977\":1}}],[\"319s\",{\"1\":{\"967\":1}}],[\"31\",{\"0\":{\"302\":1},\"1\":{\"331\":1,\"332\":1,\"1002\":1}}],[\"3的三段\",{\"1\":{\"285\":1,\"286\":1}}],[\"3×4\",{\"1\":{\"284\":1}}],[\"39776\",{\"1\":{\"1055\":1}}],[\"392\",{\"0\":{\"263\":1}}],[\"39\",{\"0\":{\"211\":1,\"312\":1},\"1\":{\"174\":1}}],[\"32或64\",{\"1\":{\"1198\":1}}],[\"322\",{\"0\":{\"244\":1}}],[\"32\",{\"0\":{\"303\":1,\"304\":1,\"305\":1},\"1\":{\"76\":1,\"116\":1,\"139\":1,\"150\":1,\"192\":1,\"264\":1,\"331\":2,\"1084\":1,\"1139\":2,\"1144\":1}}],[\"32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23\",{\"1\":{\"55\":1}}],[\"365\",{\"1\":{\"978\":1}}],[\"36\",{\"0\":{\"309\":1},\"1\":{\"69\":1,\"194\":2,\"285\":2}}],[\"3\",{\"0\":{\"28\":1,\"41\":1,\"160\":1,\"634\":1,\"705\":1,\"801\":1,\"1071\":1},\"1\":{\"51\":3,\"52\":3,\"54\":2,\"55\":1,\"58\":2,\"70\":1,\"90\":2,\"163\":3,\"210\":1,\"214\":1,\"218\":1,\"231\":1,\"235\":1,\"241\":1,\"243\":1,\"252\":2,\"253\":8,\"254\":15,\"256\":2,\"257\":4,\"258\":3,\"259\":4,\"260\":2,\"262\":1,\"264\":6,\"266\":1,\"275\":3,\"276\":1,\"278\":2,\"279\":3,\"280\":2,\"282\":1,\"285\":6,\"286\":3,\"288\":2,\"289\":4,\"292\":2,\"293\":3,\"294\":2,\"297\":5,\"298\":5,\"299\":13,\"300\":4,\"301\":2,\"302\":9,\"303\":3,\"304\":3,\"305\":3,\"306\":3,\"312\":1,\"313\":3,\"315\":1,\"317\":2,\"319\":1,\"320\":2,\"321\":3,\"326\":2,\"327\":5,\"328\":3,\"329\":6,\"330\":2,\"331\":4,\"333\":1,\"336\":26,\"358\":1,\"359\":1,\"362\":1,\"372\":1,\"373\":1,\"374\":1,\"377\":1,\"384\":3,\"388\":1,\"396\":1,\"404\":1,\"405\":1,\"422\":1,\"424\":2,\"426\":3,\"427\":1,\"428\":1,\"433\":2,\"447\":4,\"456\":1,\"468\":2,\"469\":3,\"473\":3,\"475\":1,\"480\":2,\"505\":2,\"543\":4,\"575\":1,\"743\":2,\"751\":2,\"771\":1,\"820\":1,\"944\":1,\"967\":3,\"968\":2,\"970\":1,\"972\":1,\"975\":4,\"1002\":6,\"1019\":2,\"1055\":2,\"1067\":1,\"1072\":1,\"1080\":2,\"1084\":2,\"1088\":1,\"1097\":1,\"1120\":3,\"1127\":2,\"1135\":1,\"1144\":1,\"1161\":1,\"1162\":1,\"1163\":1,\"1173\":5,\"1189\":2,\"1198\":4,\"1199\":2}}],[\"305\",{\"1\":{\"898\":1}}],[\"304\",{\"1\":{\"898\":1}}],[\"30840\",{\"1\":{\"609\":1}}],[\"300\",{\"0\":{\"257\":1},\"1\":{\"417\":1,\"523\":1,\"754\":1}}],[\"3000就可以点击signin按钮使用github进行登录了\",{\"1\":{\"192\":1}}],[\"3000\",{\"1\":{\"192\":3,\"1120\":1}}],[\"309\",{\"0\":{\"256\":1}}],[\"30\",{\"0\":{\"301\":1},\"1\":{\"27\":1,\"90\":2,\"235\":1,\"241\":1,\"276\":1,\"332\":3,\"528\":1,\"570\":1,\"751\":5,\"771\":1,\"1002\":6,\"1063\":1,\"1142\":1,\"1161\":1,\"1190\":2,\"1192\":1,\"1207\":1,\"1231\":1,\"1236\":1,\"1239\":1}}],[\"30k为c用户的购买份额\",{\"1\":{\"26\":1}}],[\"30k\",{\"1\":{\"26\":6}}],[\"3kb\",{\"1\":{\"51\":1}}],[\"3k\",{\"1\":{\"26\":2}}],[\"则对应的布尔变量会被设置为\",{\"1\":{\"1161\":1}}],[\"则这个span的page就会切割成8kb\",{\"1\":{\"1148\":1}}],[\"则这两个数字组成一个逆序对\",{\"1\":{\"323\":1}}],[\"则只为runtime\",{\"1\":{\"1137\":1}}],[\"则只更新指定的字段\",{\"1\":{\"1088\":1}}],[\"则在\",{\"1\":{\"1135\":1}}],[\"则表示队列为空\",{\"1\":{\"1135\":1}}],[\"则返回一个错误\",{\"1\":{\"1088\":1}}],[\"则返回none\",{\"1\":{\"480\":1}}],[\"则更新所有字段\",{\"1\":{\"1088\":1}}],[\"则将通过以下方式创建签名\",{\"1\":{\"1047\":1}}],[\"则说明不用等待\",{\"1\":{\"1037\":1}}],[\"则需要等到系统中被放置了\",{\"1\":{\"1033\":1}}],[\"则留在\",{\"1\":{\"1009\":1}}],[\"则被称为参数\",{\"1\":{\"991\":1}}],[\"则两个做交换\",{\"1\":{\"945\":1}}],[\"则创建新对象\",{\"1\":{\"932\":1}}],[\"则必须放弃一些短期有用长期无用的事情\",{\"1\":{\"806\":1}}],[\"则必满足以下三种情况之一\",{\"1\":{\"297\":1}}],[\"则成为重要的弱点\",{\"1\":{\"583\":1}}],[\"则确实属于我们最深层次的重要决定之一\",{\"1\":{\"571\":1}}],[\"则是那些喜欢跳跃的人\",{\"1\":{\"588\":1}}],[\"则是指什么是可能的\",{\"1\":{\"578\":1}}],[\"则是自我接纳和自我同情\",{\"1\":{\"577\":1}}],[\"则是\",{\"1\":{\"474\":1}}],[\"则是一个可增长\",{\"1\":{\"471\":1}}],[\"则是通过这组\",{\"1\":{\"60\":1}}],[\"则加上包名即可\",{\"1\":{\"456\":1}}],[\"则加载的数据就为空\",{\"1\":{\"416\":1}}],[\"则像之前处理\",{\"1\":{\"450\":1}}],[\"则泛型参数\",{\"1\":{\"448\":1}}],[\"则直接插入成功\",{\"1\":{\"436\":1}}],[\"则整个集群是下线状态\",{\"1\":{\"428\":1}}],[\"则事务会被服务器端拒绝执行\",{\"1\":{\"424\":1}}],[\"则根据这个客户端发来的不同命令执行不同的操作\",{\"1\":{\"424\":1}}],[\"则频道键一并删除掉\",{\"1\":{\"423\":1}}],[\"则bgsave自动执行\",{\"1\":{\"417\":1}}],[\"则若服务器在900秒内对数据库有至少一次修改\",{\"1\":{\"417\":1}}],[\"则优先加载aof文件\",{\"1\":{\"416\":1}}],[\"则会发生错误\",{\"1\":{\"480\":2}}],[\"则会被用于更新主服务器实例结构的slaves字典\",{\"1\":{\"426\":1}}],[\"则会获取该\",{\"1\":{\"414\":1}}],[\"则会报错\",{\"1\":{\"342\":1}}],[\"则正常读取键值\",{\"1\":{\"414\":1}}],[\"则每个节点上槽的个数为\",{\"1\":{\"413\":1}}],[\"则多分配1mb的空间\",{\"1\":{\"393\":1,\"402\":1}}],[\"则再多分配一倍的空间\",{\"1\":{\"393\":1,\"402\":1}}],[\"则从数据库中读取\",{\"1\":{\"384\":1}}],[\"则去数据库里重建缓存\",{\"1\":{\"382\":1}}],[\"则性能会很差\",{\"1\":{\"377\":1}}],[\"则要执行这条命令\",{\"1\":{\"364\":1}}],[\"则该字符串必须是可变的\",{\"1\":{\"477\":1}}],[\"则该行是\",{\"1\":{\"362\":1}}],[\"则该市场将解析为\",{\"1\":{\"27\":1}}],[\"则提交事务\",{\"1\":{\"360\":1}}],[\"则回滚事务\",{\"1\":{\"360\":1}}],[\"则输出为\",{\"1\":{\"1172\":2}}],[\"则输出\",{\"1\":{\"333\":1,\"334\":1}}],[\"则输出任意一对即可\",{\"1\":{\"332\":1}}],[\"则最小的4个数字是1\",{\"1\":{\"313\":1}}],[\"则不再进行任何添加操作\",{\"1\":{\"396\":1}}],[\"则不是镜像对称的\",{\"1\":{\"299\":1}}],[\"则不会执行任何指令\",{\"1\":{\"116\":1}}],[\"则打印出\",{\"1\":{\"289\":1}}],[\"则统计数\",{\"1\":{\"287\":1}}],[\"则\",{\"1\":{\"287\":2,\"326\":2,\"408\":1,\"426\":1}}],[\"则有\",{\"1\":{\"287\":1}}],[\"则继续向上\",{\"1\":{\"276\":1}}],[\"则往上走\",{\"1\":{\"276\":1}}],[\"则可以正常通过编译\",{\"1\":{\"468\":1}}],[\"则可以保证列表中剩余的从服务器都没有过早地与主服务器断开连接\",{\"1\":{\"426\":1}}],[\"则可以更新session信息\",{\"1\":{\"199\":1}}],[\"则可以看到我们熟悉的\",{\"1\":{\"68\":1}}],[\"则程序变为不可变\",{\"1\":{\"127\":1}}],[\"则交易默认使用运行时的max\",{\"1\":{\"120\":1}}],[\"则依然扣除交易费\",{\"1\":{\"118\":1}}],[\"则认为该交易已过期\",{\"1\":{\"117\":1}}],[\"则为大约1分钟\",{\"1\":{\"117\":1}}],[\"则按照指令添加到交易中的顺序进行处理\",{\"1\":{\"116\":1}}],[\"则存储可执行程序代码\",{\"1\":{\"111\":1}}],[\"则让容器的标准输入保持打开\",{\"1\":{\"64\":1}}],[\"则默认为\",{\"1\":{\"49\":1}}],[\"则全体用户的获利情况如下\",{\"1\":{\"26\":2}}],[\"则2024年12月25日之后话题就已截止售出\",{\"1\":{\"25\":1}}],[\"购物可以在平台上下单\",{\"1\":{\"764\":1}}],[\"购入份额\",{\"1\":{\"26\":2}}],[\"购买一件物品还要多余的gap\",{\"1\":{\"800\":1}}],[\"购买一些加密货币例如\",{\"1\":{\"36\":1}}],[\"购买\",{\"1\":{\"703\":1}}],[\"购买机器设备和雇佣工人\",{\"1\":{\"646\":1}}],[\"购买预测\",{\"0\":{\"40\":1}}],[\"购买者\",{\"1\":{\"26\":3}}],[\"购买话题份额\",{\"1\":{\"23\":1}}],[\"york\",{\"1\":{\"1208\":3,\"1212\":1}}],[\"youtube视频\",{\"1\":{\"740\":1}}],[\"youth\",{\"1\":{\"548\":3,\"549\":1}}],[\"younger\",{\"1\":{\"547\":1}}],[\"young\",{\"1\":{\"377\":16,\"523\":1}}],[\"yourself\",{\"1\":{\"543\":2}}],[\"your\",{\"0\":{\"701\":2},\"1\":{\"90\":1,\"192\":1,\"199\":2,\"301\":1,\"540\":2,\"543\":20,\"547\":5,\"563\":1,\"701\":4,\"989\":1,\"1086\":1}}],[\"you\",{\"1\":{\"90\":8,\"192\":9,\"425\":1,\"483\":1,\"519\":1,\"523\":4,\"537\":5,\"540\":3,\"543\":45,\"547\":27,\"549\":3,\"557\":3,\"560\":1,\"751\":1,\"1037\":1,\"1054\":2,\"1115\":1,\"1119\":2,\"1120\":1}}],[\"yawg\",{\"1\":{\"1144\":1}}],[\"yamladapter\",{\"1\":{\"905\":1}}],[\"yamlformatadapter\",{\"1\":{\"905\":5}}],[\"yamlformat\",{\"1\":{\"905\":6}}],[\"yaml\",{\"1\":{\"905\":7}}],[\"yapizon\",{\"1\":{\"704\":1}}],[\"yanglixin\",{\"1\":{\"3\":2,\"972\":2,\"976\":3}}],[\"yyyyy\",{\"1\":{\"1047\":1}}],[\"yyy\",{\"1\":{\"357\":1,\"358\":1}}],[\"yeaes\",{\"1\":{\"563\":1}}],[\"yearday\",{\"1\":{\"1212\":1}}],[\"yearly\",{\"1\":{\"1003\":1}}],[\"year\",{\"1\":{\"523\":2,\"540\":1,\"543\":2,\"548\":1,\"557\":3,\"560\":2,\"808\":1,\"997\":2,\"1212\":7}}],[\"years\",{\"1\":{\"519\":1,\"523\":8,\"543\":23,\"560\":1,\"563\":1,\"1212\":1},\"2\":{\"506\":1}}],[\"yellow\",{\"1\":{\"523\":1}}],[\"yet\",{\"1\":{\"90\":1,\"543\":1}}],[\"yesterday\",{\"1\":{\"537\":1,\"543\":3}}],[\"yes总数额\",{\"1\":{\"26\":1}}],[\"yes\",{\"1\":{\"26\":3,\"27\":1,\"169\":1,\"192\":5,\"537\":1,\"560\":1,\"563\":1}}],[\"y\",{\"1\":{\"58\":3,\"276\":5,\"320\":3,\"330\":3,\"973\":2,\"1143\":1}}],[\"截止到某一时刻\",{\"1\":{\"1036\":1}}],[\"截止售出时间\",{\"1\":{\"25\":1}}],[\"截止购买时间\",{\"1\":{\"25\":1}}],[\"0版本镜像\",{\"1\":{\"1219\":1}}],[\"0版本之后就已经去除了\",{\"1\":{\"343\":1}}],[\"02\",{\"1\":{\"978\":1,\"1206\":1,\"1210\":1,\"1212\":3}}],[\"02778\",{\"1\":{\"337\":2}}],[\"08\",{\"1\":{\"972\":2,\"1212\":1}}],[\"08年经济泡沫后的两年其实大家的生活并不好\",{\"1\":{\"764\":1}}],[\"08333\",{\"1\":{\"337\":2}}],[\"0会以怎样的形式演变\",{\"1\":{\"534\":1}}],[\"0的一切如果是未来的话\",{\"1\":{\"534\":1}}],[\"0的client\",{\"1\":{\"192\":1}}],[\"0开发者的社区已如雨后春笋般浮现\",{\"1\":{\"534\":1}}],[\"0可能取胜的关键\",{\"1\":{\"534\":1}}],[\"0用户与使用主权货币的垄断互联网用户\",{\"1\":{\"534\":1}}],[\"0却是以加密货币为经济基础\",{\"1\":{\"534\":1}}],[\"0拥有的加密货币的数字资产模型已经显现\",{\"1\":{\"534\":1}}],[\"0已经有了经济模型的基础即去中心化的金融体系\",{\"1\":{\"534\":1}}],[\"0有一点核心不同\",{\"1\":{\"534\":1}}],[\"0时代迅速发展时代\",{\"1\":{\"534\":1}}],[\"0去指代去中心化的区块链网络\",{\"1\":{\"534\":1}}],[\"0~16383\",{\"1\":{\"413\":1}}],[\"0xff\",{\"1\":{\"399\":1}}],[\"0就被移除了\",{\"1\":{\"355\":1}}],[\"09\",{\"0\":{\"280\":1}}],[\"07\",{\"0\":{\"279\":1},\"1\":{\"1212\":3}}],[\"0644\",{\"1\":{\"1169\":1,\"1172\":2,\"1181\":1}}],[\"06\",{\"0\":{\"278\":1},\"1\":{\"1005\":1,\"1178\":3}}],[\"0～n\",{\"0\":{\"326\":1},\"1\":{\"275\":1}}],[\"03\",{\"0\":{\"275\":1},\"1\":{\"274\":1,\"695\":1}}],[\"012s\",{\"1\":{\"978\":1}}],[\"0123\",{\"1\":{\"292\":1}}],[\"01岁\",{\"1\":{\"620\":1}}],[\"01背包的递推公式为\",{\"1\":{\"237\":1}}],[\"01\",{\"0\":{\"234\":1},\"1\":{\"534\":1,\"569\":1,\"978\":1,\"1179\":3,\"1206\":1,\"1210\":1,\"1212\":3}}],[\"0a\",{\"1\":{\"193\":1}}],[\"055316\",{\"1\":{\"1212\":5}}],[\"05556\",{\"1\":{\"337\":2}}],[\"050139\",{\"1\":{\"1206\":1}}],[\"050407\",{\"1\":{\"1206\":1}}],[\"051654\",{\"1\":{\"1206\":1}}],[\"051953\",{\"1\":{\"1206\":1}}],[\"05\",{\"0\":{\"277\":1},\"1\":{\"274\":1,\"1178\":3,\"1180\":4,\"1181\":1,\"1182\":1,\"1206\":4,\"1212\":12}}],[\"05个pusd\",{\"1\":{\"175\":1}}],[\"05a60462f8ba\",{\"1\":{\"54\":1}}],[\"0400\",{\"1\":{\"1212\":1}}],[\"048\",{\"1\":{\"60\":1}}],[\"04镜像大小这里是63\",{\"1\":{\"51\":1}}],[\"04\",{\"0\":{\"276\":1},\"1\":{\"48\":4,\"49\":7,\"50\":4,\"51\":1,\"54\":1,\"64\":2,\"66\":2,\"69\":1,\"274\":1,\"569\":1,\"992\":2,\"1212\":4}}],[\"04的最小系统root文件系统\",{\"1\":{\"46\":1}}],[\"04就包含了一整套ubuntu18\",{\"1\":{\"46\":1}}],[\"001642844\",{\"1\":{\"1206\":1}}],[\"001636794\",{\"1\":{\"1206\":1}}],[\"002592024\",{\"1\":{\"1206\":1}}],[\"002580117\",{\"1\":{\"1206\":1}}],[\"009s\",{\"1\":{\"978\":1}}],[\"00s\",{\"1\":{\"447\":1,\"959\":1,\"967\":3,\"972\":3,\"973\":1,\"975\":2,\"976\":1,\"978\":2}}],[\"000293065\",{\"1\":{\"1212\":2}}],[\"000\",{\"1\":{\"523\":6,\"585\":1}}],[\"0006\",{\"1\":{\"418\":1}}],[\"00000\",{\"1\":{\"288\":3}}],[\"000000\",{\"1\":{\"195\":1}}],[\"00时结束话题\",{\"1\":{\"27\":1}}],[\"00\",{\"1\":{\"27\":1,\"287\":1,\"1206\":1,\"1208\":1,\"1212\":8}}],[\"0\",{\"0\":{\"25\":1},\"1\":{\"26\":2,\"58\":2,\"69\":1,\"70\":2,\"90\":24,\"125\":1,\"150\":4,\"152\":4,\"163\":1,\"169\":3,\"177\":3,\"193\":2,\"194\":2,\"209\":1,\"210\":6,\"211\":2,\"212\":5,\"213\":1,\"214\":3,\"215\":1,\"216\":3,\"217\":2,\"218\":2,\"219\":3,\"226\":2,\"227\":1,\"228\":7,\"229\":4,\"230\":13,\"232\":1,\"235\":20,\"236\":3,\"237\":2,\"238\":3,\"239\":9,\"240\":3,\"241\":2,\"242\":3,\"243\":5,\"244\":4,\"245\":2,\"246\":3,\"248\":8,\"249\":3,\"250\":7,\"252\":34,\"253\":9,\"254\":23,\"255\":6,\"256\":1,\"257\":4,\"258\":3,\"259\":15,\"260\":12,\"262\":9,\"263\":3,\"264\":22,\"265\":13,\"266\":15,\"267\":2,\"268\":3,\"275\":2,\"276\":3,\"277\":3,\"278\":1,\"279\":1,\"280\":5,\"281\":2,\"283\":1,\"284\":7,\"285\":2,\"286\":2,\"287\":2,\"288\":6,\"291\":5,\"294\":1,\"300\":2,\"301\":2,\"302\":4,\"303\":5,\"304\":5,\"305\":7,\"307\":1,\"311\":2,\"312\":2,\"313\":7,\"315\":1,\"317\":2,\"318\":2,\"319\":10,\"320\":4,\"321\":4,\"323\":2,\"324\":2,\"325\":7,\"326\":4,\"327\":1,\"328\":1,\"329\":2,\"330\":2,\"331\":3,\"332\":1,\"334\":3,\"335\":2,\"336\":5,\"337\":17,\"349\":1,\"357\":2,\"358\":1,\"369\":1,\"370\":1,\"393\":1,\"395\":9,\"396\":7,\"402\":1,\"406\":1,\"410\":1,\"411\":1,\"412\":2,\"413\":2,\"418\":1,\"425\":4,\"426\":10,\"428\":22,\"429\":4,\"436\":1,\"447\":8,\"448\":2,\"457\":1,\"458\":3,\"460\":2,\"468\":7,\"473\":3,\"474\":1,\"475\":2,\"480\":2,\"517\":2,\"808\":1,\"814\":2,\"827\":4,\"838\":2,\"844\":2,\"899\":7,\"944\":3,\"945\":3,\"946\":1,\"947\":2,\"948\":5,\"950\":5,\"958\":2,\"959\":3,\"967\":9,\"969\":4,\"970\":5,\"972\":8,\"973\":2,\"975\":3,\"976\":2,\"977\":1,\"978\":6,\"979\":3,\"980\":7,\"992\":1,\"997\":6,\"1002\":7,\"1003\":10,\"1011\":1,\"1019\":2,\"1037\":2,\"1053\":2,\"1055\":9,\"1063\":2,\"1067\":2,\"1072\":2,\"1079\":10,\"1080\":13,\"1084\":1,\"1095\":2,\"1098\":1,\"1099\":3,\"1100\":1,\"1120\":1,\"1127\":5,\"1133\":1,\"1135\":1,\"1137\":1,\"1142\":4,\"1144\":1,\"1145\":2,\"1146\":1,\"1153\":1,\"1161\":9,\"1162\":1,\"1163\":1,\"1188\":2,\"1192\":2,\"1193\":1,\"1207\":3,\"1208\":3,\"1212\":9,\"1219\":1,\"1242\":1}}],[\"话题已购买的份额可以选择售出\",{\"1\":{\"28\":1}}],[\"话题售出功能介绍\",{\"0\":{\"28\":1}}],[\"话题结算规则\",{\"0\":{\"27\":1}}],[\"话题的总数额\",{\"1\":{\"26\":1}}],[\"话题购买时可以模拟话题结算结果\",{\"1\":{\"26\":1}}],[\"话题购买时的模拟功能\",{\"0\":{\"26\":1}}],[\"话题购买功能介绍\",{\"0\":{\"25\":1}}],[\"话题购买功能以及结算\",{\"0\":{\"24\":1}}],[\"话题截止购买时间是2024年12月30日\",{\"1\":{\"25\":1}}],[\"话题截止售出时间是2024年12月25日\",{\"1\":{\"25\":1}}],[\"话题具有截止售出时间\",{\"1\":{\"28\":1}}],[\"话题具有\",{\"1\":{\"25\":1}}],[\"话题中心发布自己的话题\",{\"1\":{\"23\":1}}],[\"2h30m0s\",{\"1\":{\"1207\":1}}],[\"2f\",{\"1\":{\"1173\":1}}],[\"2类的mspan\",{\"1\":{\"1149\":1}}],[\"2协议\",{\"1\":{\"1072\":1}}],[\"2<<10\",{\"1\":{\"959\":3}}],[\"2+1\",{\"1\":{\"437\":1}}],[\"2+1张支持票的从节点只会有一个\",{\"1\":{\"433\":1}}],[\"2+1张支持票时\",{\"1\":{\"433\":1}}],[\"2+1=6个sentinel将某个sentinel设置为局部领头sentinel\",{\"1\":{\"426\":1}}],[\"2+len\",{\"1\":{\"277\":2}}],[\"2字节或者5字节\",{\"1\":{\"419\":1}}],[\"2的n次方幂\",{\"1\":{\"395\":1}}],[\"2的2^n\",{\"1\":{\"395\":1}}],[\"2pc\",{\"1\":{\"387\":1}}],[\"2gb\",{\"1\":{\"357\":1}}],[\"2>\",{\"1\":{\"357\":1}}],[\"291µs\",{\"1\":{\"972\":1}}],[\"297\",{\"1\":{\"972\":1}}],[\"29\",{\"0\":{\"300\":1},\"1\":{\"572\":1}}],[\"28\",{\"0\":{\"299\":1},\"1\":{\"543\":1,\"566\":1,\"1067\":1,\"1206\":4,\"1208\":1,\"1212\":7}}],[\"27017\",{\"1\":{\"1219\":4,\"1225\":2}}],[\"2700\",{\"1\":{\"317\":1}}],[\"27s\",{\"1\":{\"447\":1}}],[\"27\",{\"0\":{\"298\":1,\"503\":1},\"1\":{\"972\":2}}],[\"279\",{\"0\":{\"245\":1}}],[\"2==0\",{\"1\":{\"293\":2}}],[\"23表示\",{\"1\":{\"1002\":1}}],[\"233333\",{\"1\":{\"808\":1}}],[\"23开始\",{\"1\":{\"660\":1}}],[\"23\",{\"1\":{\"276\":1,\"448\":1,\"605\":1,\"979\":2,\"1002\":4,\"1179\":7}}],[\"221dd\",{\"1\":{\"1084\":1}}],[\"229\",{\"1\":{\"486\":1}}],[\"228\",{\"1\":{\"486\":2}}],[\"224\",{\"1\":{\"474\":6}}],[\"22\",{\"0\":{\"294\":1},\"1\":{\"276\":1,\"288\":1,\"307\":1,\"570\":1,\"572\":1,\"771\":1,\"960\":2,\"979\":4,\"1002\":1,\"1067\":2,\"1212\":1}}],[\"2为结尾的word2的最近编辑距离\",{\"1\":{\"266\":2}}],[\"2为结尾的word1\",{\"1\":{\"266\":2}}],[\"2为结尾的字符串word2的最近编辑距离dp\",{\"1\":{\"266\":1}}],[\"2为结尾的字符串word1和以下标j\",{\"1\":{\"266\":1}}],[\"2661\",{\"1\":{\"899\":1}}],[\"26th\",{\"1\":{\"523\":1}}],[\"2690\",{\"1\":{\"447\":1}}],[\"263s\",{\"1\":{\"969\":1}}],[\"26379\",{\"1\":{\"426\":1}}],[\"263mb\",{\"1\":{\"51\":3}}],[\"26100\",{\"1\":{\"288\":1}}],[\"26\",{\"0\":{\"297\":1},\"1\":{\"150\":5,\"276\":1,\"322\":1,\"332\":1,\"967\":1}}],[\"24359230\",{\"1\":{\"970\":1}}],[\"243c\",{\"1\":{\"68\":1}}],[\"243c32535da7\",{\"1\":{\"68\":2}}],[\"243c32535da7d142fb0e6df616a3c3ada0b8ab417937c853a9e1c251f499f550\",{\"1\":{\"68\":1}}],[\"24164910和49\",{\"1\":{\"970\":1}}],[\"24164910\",{\"1\":{\"970\":1}}],[\"24\",{\"0\":{\"295\":1},\"1\":{\"77\":1,\"150\":6,\"276\":1,\"572\":1,\"967\":1,\"978\":1,\"997\":2,\"1181\":1}}],[\"211d\",{\"1\":{\"483\":2}}],[\"213\",{\"0\":{\"249\":1}}],[\"216\",{\"0\":{\"209\":1}}],[\"21\",{\"0\":{\"293\":1},\"1\":{\"69\":1,\"150\":1,\"276\":1,\"967\":3,\"972\":2,\"1002\":1,\"1019\":1,\"1080\":2,\"1094\":1,\"1095\":3,\"1168\":2,\"1169\":2,\"1171\":4,\"1172\":2,\"1173\":3,\"1188\":1,\"1212\":7}}],[\"214\",{\"1\":{\"55\":1}}],[\"25直播中说明\",{\"1\":{\"591\":1}}],[\"250\",{\"1\":{\"447\":1,\"1120\":3}}],[\"25000\",{\"1\":{\"288\":1}}],[\"258\",{\"1\":{\"447\":1}}],[\"25s\",{\"1\":{\"447\":1}}],[\"255\",{\"1\":{\"214\":1}}],[\"25个代币呢\",{\"1\":{\"169\":1}}],[\"256tb的虚拟空间\",{\"1\":{\"1149\":1}}],[\"256\",{\"1\":{\"139\":1,\"1134\":1,\"1135\":1}}],[\"25\",{\"0\":{\"296\":1},\"1\":{\"27\":1,\"150\":4,\"169\":4,\"288\":1,\"318\":2,\"771\":2,\"1005\":1,\"1178\":3,\"1180\":4,\"1181\":1,\"1182\":1,\"1190\":1,\"1231\":1}}],[\"20us\",{\"1\":{\"1135\":1}}],[\"20300\",{\"1\":{\"980\":1}}],[\"20分钟\",{\"1\":{\"789\":1}}],[\"2009\",{\"1\":{\"1179\":1}}],[\"2002\",{\"1\":{\"978\":1}}],[\"2000\",{\"1\":{\"534\":1}}],[\"200\",{\"1\":{\"362\":1,\"523\":1,\"540\":1,\"898\":1,\"972\":2,\"973\":3,\"1100\":2}}],[\"2006\",{\"1\":{\"77\":1,\"978\":1,\"1210\":1,\"1212\":3}}],[\"20happy\",{\"1\":{\"277\":1}}],[\"20are\",{\"1\":{\"277\":1}}],[\"2015\",{\"1\":{\"569\":1}}],[\"2018年的时候有一本书叫\",{\"1\":{\"611\":1}}],[\"2018\",{\"1\":{\"569\":2}}],[\"2012\",{\"1\":{\"505\":1}}],[\"201\",{\"1\":{\"217\":1}}],[\"20\",{\"0\":{\"292\":1},\"1\":{\"166\":2,\"235\":1,\"241\":1,\"276\":1,\"277\":2,\"279\":3,\"303\":3,\"304\":3,\"305\":3,\"328\":2,\"329\":2,\"468\":1,\"516\":1,\"572\":1,\"578\":1,\"706\":1,\"771\":1,\"808\":1,\"874\":1,\"959\":3,\"967\":1,\"978\":1,\"979\":4,\"1002\":4,\"1019\":1,\"1063\":2,\"1138\":1,\"1204\":1,\"1208\":1,\"1212\":4,\"1231\":1}}],[\"202\",{\"1\":{\"973\":1}}],[\"2025\",{\"0\":{\"1281\":1},\"1\":{\"806\":1}}],[\"2025年苹果市值会到达\",{\"1\":{\"169\":1}}],[\"2020\",{\"1\":{\"759\":2,\"804\":1,\"1005\":1}}],[\"2020年全球产生了3070万气候难民\",{\"1\":{\"609\":1}}],[\"2022\",{\"0\":{\"1275\":1},\"1\":{\"429\":1,\"534\":1,\"566\":1,\"743\":1,\"979\":3,\"1212\":1}}],[\"2023\",{\"0\":{\"1277\":1},\"1\":{\"743\":1,\"972\":2,\"1178\":3,\"1180\":4,\"1181\":1,\"1206\":4,\"1207\":1,\"1208\":1,\"1212\":11}}],[\"2023年夏\",{\"1\":{\"743\":1}}],[\"2023年9月25日\",{\"1\":{\"591\":1}}],[\"2023年\",{\"1\":{\"94\":1}}],[\"2023第四季度\",{\"1\":{\"4\":1}}],[\"2021年的时候读过一本书\",{\"1\":{\"806\":1}}],[\"2021\",{\"0\":{\"1273\":1},\"1\":{\"90\":1,\"169\":1,\"500\":1,\"543\":1,\"560\":2,\"695\":1}}],[\"2024年每年夏天我基本都会买两三件同样的李宁黑色短袖短裤\",{\"1\":{\"743\":1}}],[\"2024\",{\"0\":{\"779\":1,\"1279\":1},\"1\":{\"27\":1,\"1212\":1}}],[\"20k\",{\"1\":{\"26\":3}}],[\"2\",{\"0\":{\"24\":1,\"25\":1,\"26\":1,\"27\":2,\"37\":1,\"40\":1,\"143\":1,\"147\":1,\"159\":1,\"633\":1,\"704\":1,\"800\":1,\"1066\":1},\"1\":{\"52\":3,\"54\":2,\"60\":1,\"77\":1,\"90\":6,\"150\":3,\"163\":3,\"193\":1,\"210\":2,\"214\":1,\"218\":5,\"226\":3,\"227\":4,\"228\":6,\"230\":2,\"231\":1,\"235\":1,\"237\":4,\"238\":2,\"239\":5,\"242\":6,\"243\":1,\"248\":6,\"249\":3,\"252\":3,\"253\":7,\"254\":11,\"255\":8,\"256\":2,\"257\":5,\"259\":4,\"260\":2,\"262\":4,\"263\":1,\"264\":2,\"265\":5,\"268\":3,\"275\":3,\"276\":1,\"277\":2,\"278\":2,\"279\":1,\"281\":3,\"282\":4,\"283\":1,\"285\":4,\"286\":1,\"288\":7,\"289\":2,\"290\":1,\"291\":7,\"292\":1,\"293\":5,\"294\":2,\"297\":5,\"298\":5,\"299\":15,\"300\":5,\"301\":2,\"302\":11,\"305\":1,\"306\":4,\"307\":2,\"312\":7,\"313\":12,\"315\":3,\"316\":1,\"317\":1,\"318\":3,\"319\":1,\"320\":1,\"321\":3,\"322\":1,\"323\":1,\"325\":2,\"326\":5,\"327\":5,\"329\":5,\"330\":4,\"331\":1,\"332\":4,\"333\":1,\"334\":1,\"335\":2,\"337\":2,\"357\":2,\"360\":2,\"369\":1,\"377\":1,\"382\":1,\"383\":3,\"384\":9,\"386\":10,\"388\":1,\"395\":3,\"396\":1,\"404\":1,\"405\":1,\"411\":2,\"422\":1,\"423\":1,\"424\":2,\"425\":1,\"426\":7,\"427\":1,\"428\":1,\"433\":1,\"436\":1,\"447\":4,\"448\":1,\"449\":2,\"458\":1,\"460\":1,\"468\":4,\"469\":2,\"475\":2,\"478\":1,\"505\":2,\"517\":1,\"523\":1,\"537\":1,\"543\":1,\"572\":1,\"575\":1,\"751\":2,\"844\":3,\"883\":3,\"944\":1,\"947\":1,\"948\":2,\"950\":6,\"959\":2,\"960\":1,\"967\":5,\"968\":2,\"970\":3,\"972\":2,\"973\":3,\"975\":4,\"979\":4,\"980\":1,\"1002\":3,\"1055\":4,\"1067\":4,\"1072\":2,\"1073\":2,\"1080\":2,\"1084\":3,\"1088\":1,\"1120\":4,\"1125\":1,\"1127\":2,\"1135\":2,\"1163\":1,\"1173\":3,\"1187\":1,\"1189\":1,\"1193\":1,\"1198\":1,\"1206\":2,\"1207\":2,\"1212\":3,\"1221\":1,\"1242\":1}}],[\"svcvalue\",{\"1\":{\"1193\":2}}],[\"svctype\",{\"1\":{\"1193\":3}}],[\"svm\",{\"1\":{\"156\":1}}],[\"s>\",{\"1\":{\"1072\":2}}],[\"sflkxwrjsmekkf2qt4fwpmejf36pok6yjv\",{\"1\":{\"1047\":1}}],[\"s今年\",{\"1\":{\"978\":1}}],[\"s很神秘\",{\"1\":{\"978\":1}}],[\"skiphooks\",{\"1\":{\"1055\":1}}],[\"skills\",{\"1\":{\"547\":2}}],[\"skin\",{\"1\":{\"537\":1}}],[\"sky\",{\"1\":{\"333\":2,\"334\":2,\"523\":5}}],[\"squeeze\",{\"1\":{\"523\":1}}],[\"sql术语\",{\"1\":{\"1218\":1}}],[\"sql执行失败回滚的测试用例\",{\"1\":{\"975\":1}}],[\"sql执行成功的测试用例\",{\"1\":{\"975\":1}}],[\"sql语句的执行结果\",{\"1\":{\"975\":1}}],[\"sqlmock库mock数据库操作进行测试\",{\"1\":{\"975\":1}}],[\"sqlmock官方文档中提供的基础示例代码\",{\"1\":{\"975\":1}}],[\"sqlmock\",{\"0\":{\"975\":1},\"1\":{\"975\":8}}],[\"sql\",{\"0\":{\"344\":1,\"346\":1},\"1\":{\"193\":1,\"340\":1,\"343\":6,\"345\":4,\"347\":1,\"348\":2,\"349\":6,\"353\":1,\"358\":2,\"361\":1,\"362\":1,\"377\":3,\"975\":6,\"1217\":1}}],[\"sqlite\",{\"1\":{\"192\":1,\"193\":1}}],[\"ssl\",{\"1\":{\"494\":1}}],[\"sscanf\",{\"1\":{\"1173\":1}}],[\"sscanln\",{\"1\":{\"1173\":1}}],[\"sscan\",{\"0\":{\"1173\":1},\"1\":{\"409\":1,\"1173\":3}}],[\"s3\",{\"1\":{\"481\":6,\"1168\":2}}],[\"s2\",{\"1\":{\"481\":6,\"482\":2,\"1168\":2}}],[\"s1的所有权被转移走了\",{\"1\":{\"481\":1}}],[\"s1\",{\"1\":{\"473\":3,\"481\":9,\"482\":2,\"1168\":2}}],[\"snowflake\",{\"2\":{\"1043\":1}}],[\"snow\",{\"1\":{\"523\":1}}],[\"sndbuf\",{\"1\":{\"427\":1}}],[\"snapshot\",{\"1\":{\"362\":2}}],[\"srv\",{\"1\":{\"1055\":20}}],[\"srver\",{\"1\":{\"988\":1}}],[\"srem\",{\"1\":{\"409\":1}}],[\"srandmember\",{\"1\":{\"409\":1}}],[\"src\",{\"1\":{\"58\":9,\"74\":5,\"192\":2,\"447\":14,\"448\":2,\"449\":2,\"468\":1,\"475\":1,\"1010\":7}}],[\"smith\",{\"1\":{\"1084\":1,\"1088\":1}}],[\"smiled\",{\"1\":{\"523\":1}}],[\"sms\",{\"1\":{\"563\":1}}],[\"smartystreets\",{\"1\":{\"958\":1,\"959\":1,\"960\":1}}],[\"smashing\",{\"1\":{\"523\":1}}],[\"smalltalk\",{\"1\":{\"721\":1}}],[\"small\",{\"1\":{\"523\":3}}],[\"smaller\",{\"1\":{\"523\":1}}],[\"smove\",{\"1\":{\"409\":1}}],[\"smembers\",{\"1\":{\"409\":1}}],[\"smtp\",{\"1\":{\"194\":1}}],[\"sdiffstore\",{\"1\":{\"409\":1}}],[\"sdiff\",{\"1\":{\"409\":1}}],[\"sds不会造成缓冲区溢出\",{\"1\":{\"393\":1,\"402\":1}}],[\"sdshdr\",{\"1\":{\"393\":1,\"402\":1}}],[\"sds\",{\"0\":{\"393\":1},\"1\":{\"393\":8,\"397\":1,\"402\":8,\"427\":2}}],[\"s锁\",{\"1\":{\"370\":1}}],[\"syntax\",{\"1\":{\"1067\":2,\"1072\":2,\"1084\":6}}],[\"synchronization\",{\"1\":{\"1141\":1}}],[\"synconcecell<logger>\",{\"1\":{\"463\":1}}],[\"synconcecell\",{\"1\":{\"463\":3}}],[\"syncs\",{\"1\":{\"426\":2}}],[\"sync\",{\"1\":{\"358\":5,\"360\":6,\"422\":1,\"458\":2,\"459\":1,\"460\":1,\"511\":1,\"513\":1,\"899\":1,\"1019\":1,\"1141\":6,\"1142\":15,\"1143\":20,\"1144\":35,\"1145\":6,\"1146\":17}}],[\"sysalloc从操作系统中申请更多的内存\",{\"1\":{\"1149\":1}}],[\"sysmon\",{\"1\":{\"1135\":1}}],[\"sys\",{\"1\":{\"1132\":1}}],[\"syscallwhen+1010001000\",{\"1\":{\"1135\":1}}],[\"syscall\",{\"1\":{\"1072\":1}}],[\"sysvar帐户是位于预定义地址的特殊帐户\",{\"1\":{\"113\":1}}],[\"sysvar帐户是存储网络群集状态的特殊帐户\",{\"1\":{\"111\":1}}],[\"sysvar账户\",{\"0\":{\"113\":1}}],[\"systems\",{\"1\":{\"75\":1,\"523\":1,\"1118\":1}}],[\"system\",{\"1\":{\"51\":1,\"74\":1,\"76\":1,\"523\":1,\"548\":1}}],[\"samber\",{\"0\":{\"1017\":1},\"1\":{\"1017\":1,\"1018\":3,\"1019\":1}}],[\"sametimeinnewyork\",{\"1\":{\"1208\":2}}],[\"sametimeinshanghai\",{\"1\":{\"1208\":3}}],[\"same\",{\"1\":{\"519\":1,\"543\":3,\"1117\":4,\"1118\":1}}],[\"sat\",{\"1\":{\"1002\":1}}],[\"satoshi\",{\"1\":{\"706\":1}}],[\"saving\",{\"1\":{\"560\":1}}],[\"savememento\",{\"1\":{\"838\":4}}],[\"saved\",{\"1\":{\"540\":1}}],[\"saveparam\",{\"1\":{\"417\":1}}],[\"saveparam结构是所设置的保存条件\",{\"1\":{\"417\":1}}],[\"saveparams属性是一个数组\",{\"1\":{\"417\":1}}],[\"save命令会阻塞redis的主进程也就是说若内存中的数据特别多\",{\"1\":{\"416\":1}}],[\"save\",{\"1\":{\"90\":2,\"413\":2,\"416\":1,\"417\":3,\"548\":1,\"1045\":4}}],[\"salary\",{\"1\":{\"547\":1,\"563\":1}}],[\"saw\",{\"1\":{\"543\":3,\"547\":1,\"549\":1}}],[\"saints\",{\"1\":{\"523\":1}}],[\"said\",{\"1\":{\"483\":1,\"523\":3,\"540\":1,\"543\":3,\"547\":1}}],[\"sayhello\",{\"1\":{\"1192\":4}}],[\"saying\",{\"1\":{\"543\":1}}],[\"says\",{\"1\":{\"523\":1,\"543\":1,\"1055\":1}}],[\"say\",{\"1\":{\"472\":4,\"523\":2,\"537\":1,\"540\":1,\"543\":1,\"560\":1,\"1116\":1,\"1118\":3}}],[\"sadd\",{\"1\":{\"409\":1,\"424\":1,\"976\":1}}],[\"safety\",{\"1\":{\"540\":2}}],[\"safe\",{\"1\":{\"357\":2,\"358\":3,\"563\":1,\"1054\":1}}],[\"sp\",{\"1\":{\"1132\":2,\"1135\":1}}],[\"sprintln\",{\"1\":{\"1168\":3}}],[\"sprint\",{\"0\":{\"1168\":1},\"1\":{\"1072\":2,\"1166\":1,\"1168\":4}}],[\"sprintf\",{\"1\":{\"972\":1,\"978\":3,\"1067\":1,\"1072\":2,\"1073\":1,\"1088\":1,\"1095\":1,\"1168\":3,\"1173\":3}}],[\"spf13\",{\"1\":{\"988\":2,\"989\":1,\"992\":1}}],[\"spm\",{\"1\":{\"977\":1}}],[\"spiritual\",{\"1\":{\"523\":1}}],[\"spiralorder\",{\"1\":{\"300\":1}}],[\"speaking\",{\"1\":{\"1055\":2}}],[\"spend\",{\"1\":{\"540\":1,\"543\":2}}],[\"spent\",{\"1\":{\"523\":1,\"537\":2,\"543\":8,\"557\":2}}],[\"specific\",{\"1\":{\"1188\":1}}],[\"specifies\",{\"1\":{\"1055\":1}}],[\"special\",{\"1\":{\"523\":1}}],[\"species\",{\"1\":{\"523\":2}}],[\"speed\",{\"1\":{\"523\":4}}],[\"spew\",{\"1\":{\"509\":3,\"511\":2,\"516\":2,\"517\":1}}],[\"spherical\",{\"1\":{\"523\":1}}],[\"spoke\",{\"1\":{\"537\":1}}],[\"spot\",{\"1\":{\"523\":3,\"563\":1}}],[\"spop\",{\"1\":{\"409\":1}}],[\"sparkdev\",{\"1\":{\"993\":1}}],[\"space\",{\"1\":{\"523\":8}}],[\"spacecount++\",{\"1\":{\"277\":1}}],[\"spacecount\",{\"1\":{\"277\":2}}],[\"spawn\",{\"1\":{\"463\":1}}],[\"span大小是8kb\",{\"1\":{\"1148\":1}}],[\"spans\",{\"1\":{\"989\":1}}],[\"span\",{\"1\":{\"397\":1,\"483\":1,\"523\":1,\"543\":1,\"1148\":1}}],[\"split\",{\"1\":{\"194\":2,\"1193\":1}}],[\"spl\",{\"1\":{\"132\":1}}],[\"s如论如何也变成不了t\",{\"1\":{\"264\":1}}],[\"s的绝对值已经大于sum\",{\"1\":{\"239\":1}}],[\"s是2的话其实就是无解的\",{\"1\":{\"239\":1}}],[\"sudog\",{\"1\":{\"1137\":9,\"1146\":3}}],[\"sudden\",{\"1\":{\"523\":1}}],[\"suggestions\",{\"0\":{\"550\":1}}],[\"success\",{\"1\":{\"563\":1,\"968\":2}}],[\"successfully\",{\"1\":{\"563\":1}}],[\"successful\",{\"1\":{\"547\":1,\"1127\":1}}],[\"such\",{\"1\":{\"448\":1,\"449\":2,\"523\":2,\"543\":1,\"547\":1,\"560\":1,\"1055\":2,\"1118\":2}}],[\"supreme\",{\"1\":{\"523\":1}}],[\"superstars\",{\"1\":{\"523\":1}}],[\"super\",{\"1\":{\"523\":1}}],[\"supernovae\",{\"1\":{\"523\":1}}],[\"supernova\",{\"1\":{\"523\":1}}],[\"support\",{\"1\":{\"523\":1,\"1055\":2,\"1118\":1}}],[\"supported\",{\"1\":{\"523\":1}}],[\"supply\",{\"1\":{\"152\":1}}],[\"suffers\",{\"1\":{\"523\":1}}],[\"sure\",{\"1\":{\"975\":1}}],[\"surprise\",{\"1\":{\"1119\":1}}],[\"surprisely\",{\"1\":{\"563\":1}}],[\"surprised\",{\"1\":{\"543\":1}}],[\"surging\",{\"1\":{\"523\":1}}],[\"surface\",{\"1\":{\"523\":3}}],[\"survival\",{\"1\":{\"523\":1,\"548\":1}}],[\"survived\",{\"1\":{\"523\":1}}],[\"survive\",{\"1\":{\"523\":2,\"547\":1}}],[\"surrounding\",{\"1\":{\"523\":2}}],[\"surround\",{\"1\":{\"523\":1}}],[\"sunday\",{\"1\":{\"1212\":1}}],[\"sunsupported\",{\"1\":{\"1055\":1}}],[\"suns\",{\"1\":{\"523\":1}}],[\"sun\",{\"1\":{\"523\":15,\"543\":5}}],[\"sunionstore\",{\"1\":{\"409\":1}}],[\"sunion\",{\"1\":{\"409\":1}}],[\"summarize\",{\"0\":{\"1259\":1}}],[\"summer\",{\"1\":{\"543\":1}}],[\"summed\",{\"1\":{\"537\":1}}],[\"sum所记录的校验和进行对比\",{\"1\":{\"418\":1}}],[\"sum是一个8字节长的无符号整数\",{\"1\":{\"418\":1}}],[\"sum+target\",{\"1\":{\"239\":1}}],[\"sum\",{\"1\":{\"209\":5,\"211\":6,\"212\":12,\"237\":5,\"238\":4,\"239\":9,\"418\":1,\"514\":1,\"977\":1,\"989\":2,\"1067\":2,\"1079\":1,\"1161\":2,\"1239\":1}}],[\"susdc\",{\"1\":{\"166\":1}}],[\"suboperation\",{\"1\":{\"855\":3}}],[\"submit\",{\"1\":{\"563\":2}}],[\"subject\",{\"1\":{\"543\":1,\"844\":11,\"939\":4,\"1047\":1}}],[\"subjectively\",{\"1\":{\"426\":1}}],[\"subpath\",{\"1\":{\"217\":13}}],[\"substances\",{\"1\":{\"523\":2}}],[\"substring\",{\"1\":{\"194\":2}}],[\"subscribed\",{\"1\":{\"549\":1}}],[\"subscriber\",{\"1\":{\"423\":1}}],[\"subscribe\",{\"1\":{\"423\":1,\"426\":1}}],[\"subsetswithdup\",{\"1\":{\"216\":1}}],[\"subsets\",{\"1\":{\"215\":1}}],[\"sub\",{\"1\":{\"152\":1,\"978\":1,\"997\":1,\"1047\":2,\"1063\":4,\"1205\":1,\"1212\":1,\"1213\":1}}],[\"sui本位\",{\"1\":{\"166\":1}}],[\"suilend\",{\"1\":{\"148\":1}}],[\"sui\",{\"1\":{\"148\":1,\"166\":2}}],[\"switch\",{\"1\":{\"820\":1,\"883\":1,\"972\":1,\"975\":1,\"979\":2,\"1011\":1,\"1055\":1,\"1074\":2,\"1088\":1,\"1118\":2,\"1188\":1,\"1193\":1,\"1237\":1}}],[\"switchchannel\",{\"1\":{\"820\":4}}],[\"swirles\",{\"1\":{\"68\":1}}],[\"swan\",{\"1\":{\"537\":3}}],[\"swap协议中兑换成了pusd\",{\"1\":{\"177\":1}}],[\"swap协议中的pusd会变少\",{\"1\":{\"176\":1}}],[\"swap算法也是由市场的供求关系决定的\",{\"1\":{\"175\":1}}],[\"swap\",{\"1\":{\"1026\":1},\"2\":{\"146\":1,\"155\":1,\"168\":1}}],[\"sweeping\",{\"1\":{\"523\":1}}],[\"sbpf\",{\"1\":{\"129\":1}}],[\"sophomore\",{\"1\":{\"547\":1}}],[\"sophisticated\",{\"1\":{\"547\":1}}],[\"somatosensory\",{\"1\":{\"543\":1}}],[\"someone\",{\"1\":{\"547\":1,\"548\":1,\"549\":1}}],[\"something\",{\"1\":{\"543\":6}}],[\"sometimes\",{\"1\":{\"523\":3,\"540\":1,\"543\":3}}],[\"somewhere\",{\"1\":{\"523\":1}}],[\"some\",{\"1\":{\"152\":1,\"447\":1,\"461\":2,\"462\":2,\"463\":2,\"480\":2,\"523\":2,\"537\":2,\"540\":3,\"543\":5,\"547\":4,\"563\":1,\"975\":3,\"1099\":3,\"1118\":1,\"1122\":1,\"1123\":2,\"1124\":1,\"1125\":2}}],[\"songs\",{\"1\":{\"543\":2}}],[\"song\",{\"1\":{\"543\":2}}],[\"sorry\",{\"1\":{\"1100\":1}}],[\"sorrows\",{\"1\":{\"523\":1}}],[\"sorting\",{\"0\":{\"1285\":1}}],[\"sort\",{\"0\":{\"1232\":1},\"1\":{\"212\":1,\"219\":1,\"313\":2,\"1222\":1,\"1232\":2},\"2\":{\"952\":1}}],[\"sound\",{\"1\":{\"1117\":1}}],[\"soul\",{\"1\":{\"523\":1}}],[\"source=\",{\"1\":{\"74\":2}}],[\"source=my\",{\"1\":{\"74\":1}}],[\"source\",{\"1\":{\"74\":1,\"90\":1,\"405\":5,\"409\":2,\"991\":5}}],[\"sowed\",{\"1\":{\"523\":1}}],[\"society\",{\"1\":{\"547\":3}}],[\"socializing\",{\"1\":{\"543\":1}}],[\"socialize\",{\"1\":{\"152\":1}}],[\"social\",{\"1\":{\"540\":1,\"543\":1,\"547\":1,\"549\":1,\"550\":1,\"573\":1}}],[\"sock=accept\",{\"1\":{\"90\":2}}],[\"socklen\",{\"1\":{\"90\":2}}],[\"sockaddr\",{\"1\":{\"90\":12}}],[\"sock\",{\"1\":{\"90\":46}}],[\"socket\",{\"1\":{\"90\":12,\"412\":4}}],[\"solid原则\",{\"0\":{\"982\":1}}],[\"solidity的基础数据类型\",{\"1\":{\"105\":1}}],[\"solidity基础学习\",{\"0\":{\"105\":1}}],[\"solve\",{\"1\":{\"557\":1,\"563\":1}}],[\"solved\",{\"1\":{\"537\":2,\"547\":1,\"550\":1}}],[\"solving\",{\"1\":{\"550\":1}}],[\"solution\",{\"1\":{\"550\":1}}],[\"solar\",{\"1\":{\"523\":1}}],[\"solana登录教程\",{\"1\":{\"197\":1}}],[\"solana上\",{\"1\":{\"148\":1}}],[\"solana上的所有代币实际上是代币计划拥有的\",{\"1\":{\"133\":1}}],[\"solana上的验证节点需要被激励\",{\"1\":{\"118\":1}}],[\"solana区块链有几个不同的验证节点组\",{\"1\":{\"137\":1}}],[\"solana区块链有几种不同类型的费用和成本开销\",{\"1\":{\"118\":1}}],[\"solana链上代币\",{\"0\":{\"132\":1}}],[\"solana字节码格式\",{\"1\":{\"129\":1}}],[\"solana利用\",{\"1\":{\"129\":1}}],[\"solanafm浏览器上搜索程序地址并转到到\",{\"1\":{\"128\":1}}],[\"solana网络坚持\",{\"1\":{\"116\":1}}],[\"solana程序是\",{\"1\":{\"115\":1}}],[\"solana生态还在蓬勃发展\",{\"1\":{\"109\":1}}],[\"solana\",{\"0\":{\"108\":1,\"109\":1,\"110\":1,\"197\":1,\"1258\":1},\"1\":{\"114\":2,\"122\":1,\"126\":1,\"128\":1,\"129\":2,\"131\":1,\"132\":2,\"134\":1,\"138\":2,\"139\":1,\"140\":1,\"150\":1,\"152\":2},\"2\":{\"142\":1}}],[\"solend等\",{\"1\":{\"156\":1}}],[\"solend\",{\"0\":{\"148\":1},\"1\":{\"148\":4,\"153\":1}}],[\"sol\",{\"1\":{\"111\":1,\"150\":6,\"152\":2,\"153\":1}}],[\"so\",{\"1\":{\"90\":2,\"519\":1,\"523\":6,\"537\":2,\"540\":3,\"543\":12,\"547\":8,\"548\":3,\"560\":2,\"563\":5,\"958\":3,\"959\":5,\"960\":8,\"1055\":2,\"1120\":2,\"1126\":2}}],[\"software\",{\"1\":{\"90\":2,\"547\":4}}],[\"schedwhen+forcepreemptns\",{\"1\":{\"1135\":1}}],[\"schedule会重新选择\",{\"1\":{\"1135\":1}}],[\"schedule\",{\"1\":{\"1135\":2}}],[\"schedinit\",{\"1\":{\"1134\":1}}],[\"sched\",{\"1\":{\"1132\":2,\"1135\":3}}],[\"schools\",{\"1\":{\"547\":1}}],[\"school\",{\"1\":{\"523\":1,\"543\":2,\"547\":1,\"548\":2,\"549\":1,\"560\":1}}],[\"science\",{\"1\":{\"523\":1}}],[\"scene\",{\"1\":{\"523\":1}}],[\"screen\",{\"1\":{\"992\":1}}],[\"scrap\",{\"1\":{\"523\":1}}],[\"scratch\",{\"1\":{\"57\":4}}],[\"scripting\",{\"1\":{\"1055\":1}}],[\"scripts\",{\"1\":{\"426\":2}}],[\"scriptkill\",{\"1\":{\"425\":1}}],[\"script\",{\"1\":{\"425\":1}}],[\"scalar\",{\"1\":{\"1084\":1}}],[\"scallop\",{\"1\":{\"166\":1}}],[\"scard\",{\"1\":{\"409\":1}}],[\"scanf\",{\"1\":{\"1171\":4,\"1172\":1}}],[\"scanner\",{\"1\":{\"1153\":8}}],[\"scanln\",{\"1\":{\"1072\":2,\"1171\":3}}],[\"scan\",{\"0\":{\"1171\":1},\"1\":{\"407\":1,\"1153\":1,\"1171\":3}}],[\"score2\",{\"1\":{\"410\":1}}],[\"score1\",{\"1\":{\"410\":1}}],[\"score\",{\"1\":{\"397\":1,\"1188\":5}}],[\"scope\",{\"1\":{\"74\":1,\"195\":3}}],[\"slammed\",{\"1\":{\"523\":1}}],[\"slave标识\",{\"1\":{\"433\":1}}],[\"slaves\",{\"1\":{\"425\":2,\"547\":1,\"550\":1}}],[\"slaves配置选项\",{\"1\":{\"425\":1}}],[\"slaves选项\",{\"1\":{\"425\":1}}],[\"slaveof指针指向这个结构\",{\"1\":{\"433\":1}}],[\"slaveof命令是一个异步命令\",{\"1\":{\"425\":1}}],[\"slaveof\",{\"1\":{\"425\":1,\"435\":1}}],[\"slave\",{\"1\":{\"358\":1,\"433\":1,\"547\":2,\"548\":1}}],[\"slightest\",{\"1\":{\"523\":1}}],[\"slide\",{\"1\":{\"523\":1}}],[\"slices\",{\"1\":{\"1122\":1}}],[\"slice时在绝大多数情况下都是可以使用到本库就可以\",{\"1\":{\"1019\":1}}],[\"sliceindex<\",{\"1\":{\"447\":1}}],[\"slice\",{\"0\":{\"468\":1},\"1\":{\"447\":4,\"468\":6,\"469\":2,\"481\":1,\"487\":1,\"1188\":1}}],[\"slim\",{\"1\":{\"55\":1}}],[\"slots数组中的项i\",{\"1\":{\"429\":1}}],[\"slots数组来记录槽的指派信息\",{\"1\":{\"428\":1}}],[\"slots数组的存在解决了这些问题\",{\"1\":{\"428\":1}}],[\"slots数组里面\",{\"1\":{\"428\":1}}],[\"slots数组里\",{\"1\":{\"428\":1}}],[\"slots\",{\"1\":{\"428\":4,\"432\":7,\"435\":1}}],[\"slot\",{\"1\":{\"413\":1,\"428\":1,\"429\":1}}],[\"slowly\",{\"1\":{\"523\":4,\"537\":1,\"543\":2}}],[\"slow\",{\"1\":{\"324\":6}}],[\"sleeping\",{\"1\":{\"543\":2}}],[\"sleep\",{\"1\":{\"66\":2,\"523\":1,\"977\":11,\"1005\":1,\"1037\":1,\"1055\":2,\"1063\":1,\"1119\":2,\"1120\":3,\"1124\":7,\"1146\":1,\"1206\":4,\"1211\":1}}],[\"s\",{\"1\":{\"60\":1,\"75\":1,\"90\":13,\"213\":11,\"214\":11,\"239\":5,\"246\":5,\"263\":13,\"264\":18,\"267\":11,\"268\":9,\"277\":6,\"284\":2,\"291\":6,\"311\":4,\"320\":5,\"322\":10,\"332\":3,\"334\":6,\"335\":4,\"371\":8,\"372\":1,\"373\":1,\"426\":1,\"447\":3,\"448\":1,\"468\":27,\"470\":2,\"472\":6,\"475\":1,\"477\":5,\"478\":5,\"481\":2,\"482\":2,\"516\":2,\"519\":3,\"523\":5,\"537\":2,\"540\":3,\"543\":4,\"547\":6,\"548\":2,\"549\":1,\"557\":2,\"563\":3,\"827\":4,\"844\":22,\"849\":2,\"855\":3,\"915\":4,\"960\":6,\"972\":1,\"975\":5,\"976\":9,\"977\":1,\"978\":1,\"982\":1,\"991\":1,\"993\":1,\"997\":3,\"1045\":2,\"1047\":1,\"1054\":1,\"1055\":10,\"1063\":2,\"1067\":5,\"1072\":3,\"1073\":1,\"1074\":8,\"1088\":1,\"1095\":1,\"1097\":4,\"1099\":4,\"1116\":3,\"1117\":3,\"1118\":6,\"1119\":3,\"1122\":1,\"1123\":1,\"1124\":1,\"1126\":1,\"1127\":2,\"1138\":4,\"1163\":2,\"1168\":1,\"1169\":1,\"1171\":3,\"1172\":9,\"1173\":4,\"1188\":1,\"1189\":2,\"1192\":8,\"1193\":2,\"1200\":2,\"1207\":1}}],[\"stmt\",{\"1\":{\"1135\":1}}],[\"st\",{\"1\":{\"1074\":3}}],[\"still\",{\"1\":{\"523\":1,\"543\":1,\"547\":4,\"548\":2,\"549\":2,\"560\":2,\"1055\":1}}],[\"stin\",{\"1\":{\"280\":11}}],[\"stealwork\",{\"1\":{\"1135\":1}}],[\"stellar\",{\"1\":{\"523\":2}}],[\"step\",{\"1\":{\"324\":4}}],[\"stu1\",{\"1\":{\"1188\":2}}],[\"stub\",{\"1\":{\"975\":2}}],[\"stupid\",{\"1\":{\"563\":1}}],[\"stuff\",{\"1\":{\"557\":1,\"563\":1}}],[\"study\",{\"1\":{\"543\":1,\"548\":2,\"549\":1}}],[\"studying\",{\"1\":{\"543\":2,\"548\":1}}],[\"students\",{\"1\":{\"548\":1,\"560\":1}}],[\"student\",{\"1\":{\"333\":2,\"334\":2,\"366\":2,\"550\":1,\"977\":11,\"1084\":9,\"1173\":2,\"1188\":4}}],[\"stuent\",{\"1\":{\"366\":1}}],[\"style\",{\"1\":{\"195\":1}}],[\"styling\",{\"1\":{\"192\":1}}],[\"stood\",{\"1\":{\"523\":1}}],[\"storeint64\",{\"1\":{\"1146\":1}}],[\"storeuint32\",{\"1\":{\"1145\":1}}],[\"store\",{\"1\":{\"1045\":4,\"1055\":2,\"1124\":1}}],[\"storename=\",{\"1\":{\"980\":2}}],[\"storename\",{\"1\":{\"980\":9}}],[\"story\",{\"1\":{\"523\":1}}],[\"stories\",{\"1\":{\"523\":1}}],[\"storage\",{\"1\":{\"105\":1}}],[\"stout\",{\"1\":{\"280\":10}}],[\"stones\",{\"1\":{\"238\":6}}],[\"stopped\",{\"1\":{\"1211\":1}}],[\"stops\",{\"1\":{\"1116\":1}}],[\"stop\",{\"1\":{\"67\":1,\"230\":2,\"405\":4,\"410\":3,\"523\":1,\"997\":1,\"1072\":2,\"1135\":1,\"1211\":2}}],[\"std\",{\"1\":{\"447\":1,\"448\":6,\"449\":2,\"450\":2,\"451\":6,\"458\":2,\"459\":1,\"460\":2,\"463\":1,\"480\":1,\"481\":1,\"1181\":4}}],[\"stderr\",{\"1\":{\"90\":4,\"1181\":1}}],[\"stdin\",{\"1\":{\"68\":1,\"1172\":1}}],[\"stdout\",{\"1\":{\"66\":2,\"1169\":1,\"1182\":1}}],[\"struggle\",{\"1\":{\"537\":1,\"548\":1}}],[\"struck\",{\"1\":{\"483\":1}}],[\"structural\",{\"0\":{\"1284\":1}}],[\"structured\",{\"1\":{\"1118\":1}}],[\"structure\",{\"1\":{\"301\":1,\"523\":2}}],[\"structs\",{\"1\":{\"459\":1}}],[\"struct\",{\"1\":{\"90\":12,\"152\":2,\"280\":1,\"301\":1,\"336\":1,\"393\":1,\"394\":4,\"395\":5,\"397\":6,\"398\":1,\"400\":1,\"402\":1,\"417\":1,\"426\":3,\"427\":4,\"428\":2,\"435\":7,\"458\":1,\"461\":2,\"462\":2,\"463\":1,\"513\":2,\"814\":3,\"820\":5,\"827\":4,\"833\":3,\"838\":3,\"844\":3,\"849\":3,\"855\":4,\"861\":1,\"867\":5,\"874\":2,\"883\":3,\"890\":1,\"898\":2,\"899\":1,\"905\":4,\"910\":4,\"915\":2,\"921\":2,\"927\":1,\"933\":2,\"939\":2,\"958\":1,\"960\":1,\"968\":2,\"972\":3,\"973\":2,\"977\":1,\"978\":1,\"979\":1,\"980\":4,\"981\":5,\"1005\":1,\"1010\":1,\"1011\":2,\"1019\":1,\"1047\":1,\"1055\":1,\"1063\":5,\"1067\":1,\"1132\":5,\"1133\":1,\"1134\":1,\"1137\":2,\"1138\":4,\"1139\":4,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":2,\"1188\":9,\"1190\":1,\"1191\":2,\"1192\":3,\"1193\":1,\"1226\":1,\"1240\":1,\"1241\":2,\"1242\":1}}],[\"straight\",{\"1\":{\"523\":2}}],[\"strategy\",{\"1\":{\"194\":1,\"855\":9}}],[\"stronger\",{\"1\":{\"548\":1,\"563\":1}}],[\"strong\",{\"1\":{\"523\":4,\"537\":1}}],[\"str类型\",{\"1\":{\"479\":1}}],[\"str类型的字符串\",{\"1\":{\"467\":1}}],[\"str的转换\",{\"0\":{\"472\":1}}],[\"str`\",{\"1\":{\"467\":1}}],[\"str>\",{\"1\":{\"460\":1}}],[\"strs\",{\"1\":{\"240\":2}}],[\"strs里的字符串有zeronum个0\",{\"1\":{\"240\":1}}],[\"strconv包也是我们在go语言中经常会使用到的包\",{\"1\":{\"1197\":1}}],[\"strconv包详解\",{\"0\":{\"1197\":1}}],[\"strconv\",{\"0\":{\"1200\":1},\"1\":{\"214\":1,\"317\":1,\"318\":1,\"511\":1,\"514\":2,\"1019\":1,\"1163\":3,\"1198\":15,\"1199\":2,\"1200\":4,\"1201\":1}}],[\"strictly\",{\"1\":{\"1055\":1}}],[\"striking\",{\"1\":{\"523\":1}}],[\"string表示字符串切片\",{\"1\":{\"1188\":1}}],[\"string类型\",{\"1\":{\"1093\":1}}],[\"string的形式存放\",{\"1\":{\"1093\":1}}],[\"string的内部实现是\",{\"1\":{\"402\":1}}],[\"string>\",{\"1\":{\"1084\":1}}],[\"stringvarp\",{\"1\":{\"991\":2}}],[\"string与\",{\"0\":{\"472\":1}}],[\"string内部实现\",{\"0\":{\"402\":1}}],[\"strings\",{\"1\":{\"334\":1,\"814\":2,\"972\":2,\"976\":2,\"978\":2,\"992\":3,\"1099\":1,\"1120\":1,\"1193\":8}}],[\"string就可以\",{\"1\":{\"210\":1}}],[\"stringify\",{\"1\":{\"195\":1}}],[\"string\",{\"1\":{\"194\":1,\"210\":11,\"213\":9,\"214\":8,\"240\":1,\"246\":3,\"260\":2,\"261\":2,\"263\":2,\"264\":2,\"265\":2,\"267\":1,\"268\":1,\"277\":3,\"284\":1,\"291\":2,\"311\":5,\"318\":1,\"320\":1,\"322\":1,\"334\":3,\"335\":3,\"400\":1,\"420\":1,\"450\":10,\"451\":9,\"459\":1,\"460\":1,\"461\":8,\"462\":8,\"463\":4,\"467\":2,\"468\":8,\"471\":5,\"472\":5,\"473\":3,\"474\":1,\"477\":1,\"478\":1,\"479\":16,\"480\":27,\"481\":22,\"482\":2,\"483\":4,\"513\":3,\"514\":2,\"516\":1,\"517\":1,\"814\":2,\"827\":3,\"833\":8,\"838\":2,\"867\":4,\"874\":3,\"875\":1,\"883\":5,\"890\":8,\"898\":2,\"915\":6,\"927\":3,\"933\":2,\"958\":4,\"960\":8,\"968\":1,\"972\":7,\"973\":4,\"976\":1,\"977\":13,\"978\":4,\"979\":1,\"980\":7,\"981\":1,\"990\":1,\"991\":2,\"992\":4,\"993\":5,\"997\":1,\"1005\":1,\"1010\":7,\"1011\":15,\"1019\":2,\"1045\":1,\"1047\":1,\"1053\":3,\"1054\":1,\"1055\":3,\"1067\":4,\"1072\":4,\"1080\":5,\"1084\":6,\"1088\":3,\"1093\":18,\"1094\":4,\"1095\":8,\"1097\":1,\"1099\":2,\"1153\":1,\"1161\":15,\"1163\":9,\"1167\":1,\"1168\":4,\"1169\":1,\"1171\":3,\"1172\":4,\"1173\":4,\"1178\":3,\"1180\":2,\"1188\":6,\"1189\":2,\"1190\":2,\"1191\":3,\"1192\":2,\"1199\":2,\"1200\":5,\"1207\":6,\"1208\":5,\"1209\":5,\"1210\":1,\"1212\":9,\"1226\":1,\"1227\":2,\"1240\":1,\"1241\":3,\"1242\":6}}],[\"strip\",{\"1\":{\"58\":2}}],[\"strlen\",{\"1\":{\"90\":1,\"403\":1}}],[\"streamhelloserver\",{\"1\":{\"1072\":3,\"1074\":1}}],[\"streamhello\",{\"1\":{\"1072\":9,\"1074\":1}}],[\"stream\",{\"1\":{\"90\":4,\"1072\":20,\"1074\":2}}],[\"stretchr\",{\"1\":{\"959\":1,\"972\":1,\"973\":1}}],[\"stretched\",{\"1\":{\"523\":1}}],[\"stretch\",{\"1\":{\"58\":2}}],[\"str\",{\"1\":{\"90\":7,\"240\":2,\"318\":4,\"427\":1,\"460\":1,\"468\":3,\"470\":3,\"471\":6,\"472\":4,\"477\":4,\"478\":4,\"480\":1,\"481\":8,\"482\":1,\"483\":2,\"1139\":1,\"1173\":5,\"1188\":2,\"1198\":10,\"1200\":2}}],[\"standard\",{\"1\":{\"1179\":1,\"1181\":1}}],[\"standardclaims\",{\"1\":{\"1047\":3}}],[\"standing\",{\"1\":{\"543\":1}}],[\"staff\",{\"1\":{\"967\":3}}],[\"star\",{\"1\":{\"523\":14}}],[\"stars\",{\"1\":{\"523\":14}}],[\"starttheworld\",{\"1\":{\"1135\":2}}],[\"starts\",{\"1\":{\"1116\":1}}],[\"startbackgroundread\",{\"1\":{\"1055\":2}}],[\"starting\",{\"0\":{\"1120\":1},\"1\":{\"543\":1,\"927\":3}}],[\"startindex\",{\"1\":{\"208\":5,\"209\":2,\"211\":2,\"212\":5,\"213\":5,\"214\":5,\"215\":2,\"216\":2,\"217\":2}}],[\"started\",{\"1\":{\"523\":2,\"543\":1,\"547\":1,\"560\":1,\"861\":1,\"1045\":1,\"1047\":1,\"1119\":2,\"1124\":1}}],[\"start+m\",{\"1\":{\"948\":1}}],[\"start+1\",{\"1\":{\"948\":1}}],[\"start+1>1\",{\"1\":{\"214\":1}}],[\"start++\",{\"1\":{\"213\":1}}],[\"start内容大致给我们介绍了一下内容\",{\"1\":{\"193\":1}}],[\"start\",{\"0\":{\"1253\":1},\"1\":{\"17\":1,\"33\":1,\"65\":1,\"90\":2,\"213\":3,\"214\":3,\"216\":7,\"230\":1,\"249\":2,\"323\":8,\"358\":1,\"362\":4,\"370\":1,\"403\":2,\"405\":4,\"410\":3,\"426\":1,\"523\":1,\"543\":1,\"557\":1,\"861\":3,\"948\":9,\"949\":3,\"967\":7,\"981\":7,\"997\":1,\"1001\":1,\"1005\":1,\"1011\":2,\"1097\":3,\"1099\":3,\"1118\":2,\"1135\":1,\"1206\":2,\"1212\":1}}],[\"staged\",{\"1\":{\"523\":1}}],[\"stage\",{\"1\":{\"192\":1,\"523\":1,\"543\":1}}],[\"stable\",{\"1\":{\"180\":1,\"523\":1}}],[\"stating\",{\"1\":{\"1126\":1}}],[\"static`生命周期\",{\"1\":{\"461\":1}}],[\"static直到运行到main中的第一行代码时\",{\"1\":{\"460\":1}}],[\"static宏\",{\"1\":{\"460\":1}}],[\"static访问静态变量时\",{\"1\":{\"460\":1}}],[\"static时社区提供的用于懒加载静态变量的宏\",{\"1\":{\"460\":1}}],[\"static包来解决这个问题\",{\"1\":{\"459\":1}}],[\"statics\",{\"1\":{\"459\":1}}],[\"static\",{\"0\":{\"460\":1},\"1\":{\"454\":1,\"457\":1,\"458\":2,\"459\":1,\"460\":9,\"461\":3,\"462\":4,\"463\":2,\"1052\":1}}],[\"stats\",{\"1\":{\"975\":1}}],[\"statutory\",{\"1\":{\"543\":2}}],[\"statusnotfound\",{\"1\":{\"1055\":1}}],[\"statusnotimplemented\",{\"1\":{\"1055\":1}}],[\"statuserror\",{\"1\":{\"1055\":1}}],[\"statustext\",{\"1\":{\"1055\":3}}],[\"statusunauthorized\",{\"1\":{\"1047\":4}}],[\"statusmethodnotallowed\",{\"1\":{\"1047\":1,\"1055\":1,\"1193\":3}}],[\"statusseeother\",{\"1\":{\"1045\":3}}],[\"statusok\",{\"1\":{\"972\":3,\"1047\":1,\"1050\":1}}],[\"statusinternalservererror\",{\"1\":{\"516\":1,\"1047\":1}}],[\"statuscreated\",{\"1\":{\"516\":1}}],[\"statusbadrequest\",{\"1\":{\"516\":1,\"1047\":2}}],[\"status\",{\"1\":{\"49\":1,\"68\":2,\"69\":1,\"253\":4,\"426\":1,\"673\":1,\"967\":1,\"1045\":2,\"1074\":4,\"1088\":1,\"1099\":2,\"1125\":1,\"1146\":3}}],[\"state1\",{\"1\":{\"1144\":3}}],[\"stateidle\",{\"1\":{\"1055\":1}}],[\"stateactive\",{\"1\":{\"1055\":2}}],[\"stateclosed\",{\"1\":{\"1055\":1}}],[\"statenew\",{\"1\":{\"1055\":1}}],[\"statemachine\",{\"1\":{\"1011\":6}}],[\"statements\",{\"1\":{\"969\":2}}],[\"statement\",{\"1\":{\"358\":7,\"1073\":1,\"1123\":1,\"1127\":1}}],[\"states\",{\"1\":{\"523\":1,\"1009\":2}}],[\"state\",{\"1\":{\"152\":2,\"427\":1,\"435\":1,\"523\":3,\"838\":11,\"844\":21,\"849\":14,\"1008\":1,\"1009\":1,\"1010\":11,\"1011\":8,\"1055\":1,\"1135\":2,\"1142\":3,\"1144\":1}}],[\"stack字段保存了当前goroutine1的栈内存范围\",{\"1\":{\"1132\":1}}],[\"stackguard0\",{\"1\":{\"1132\":1}}],[\"stack\",{\"1\":{\"105\":1,\"301\":8,\"302\":10,\"303\":12,\"447\":1,\"1055\":1,\"1132\":4}}],[\"sirupsen\",{\"1\":{\"981\":1}}],[\"sick\",{\"1\":{\"758\":1}}],[\"sijbrandij\",{\"1\":{\"721\":1}}],[\"sid\",{\"1\":{\"721\":1}}],[\"side\",{\"1\":{\"90\":2,\"537\":1,\"1055\":1}}],[\"sitting\",{\"1\":{\"543\":1}}],[\"silly\",{\"1\":{\"543\":1,\"548\":1}}],[\"silver\",{\"1\":{\"523\":2}}],[\"silently\",{\"1\":{\"523\":3}}],[\"sisi\",{\"1\":{\"523\":1}}],[\"sismember\",{\"1\":{\"409\":1,\"976\":1}}],[\"sigterm\",{\"1\":{\"1072\":1}}],[\"signaltype\",{\"1\":{\"1072\":4}}],[\"signal\",{\"1\":{\"1072\":6,\"1146\":5}}],[\"signalch\",{\"1\":{\"1072\":6}}],[\"signature签名组成\",{\"1\":{\"1047\":1}}],[\"signedstring\",{\"1\":{\"1047\":1}}],[\"signer\",{\"1\":{\"152\":2}}],[\"signingmethodhs256\",{\"1\":{\"1047\":1}}],[\"signin\",{\"1\":{\"199\":2}}],[\"sign\",{\"1\":{\"116\":1}}],[\"sigkill\",{\"1\":{\"71\":1}}],[\"sina上还可以找到当时的案件\",{\"1\":{\"528\":1}}],[\"sinners\",{\"1\":{\"523\":1}}],[\"since\",{\"1\":{\"523\":2,\"540\":1,\"547\":1,\"563\":1,\"1119\":1,\"1124\":1,\"1207\":5}}],[\"since=mongo\",{\"1\":{\"54\":1}}],[\"single\",{\"1\":{\"1052\":1,\"1118\":1}}],[\"singleton\",{\"1\":{\"898\":3,\"899\":7}}],[\"singles\",{\"1\":{\"560\":1}}],[\"singlenumber\",{\"1\":{\"331\":1}}],[\"singlenumbers\",{\"1\":{\"330\":1}}],[\"singer\",{\"1\":{\"543\":2}}],[\"singularity\",{\"1\":{\"523\":4}}],[\"sinterstore\",{\"1\":{\"409\":1}}],[\"sinter\",{\"1\":{\"409\":1}}],[\"sin\",{\"1\":{\"90\":12}}],[\"simultaneously\",{\"1\":{\"1118\":1}}],[\"simultaneous\",{\"1\":{\"1055\":1}}],[\"simulate\",{\"1\":{\"26\":1}}],[\"similarly\",{\"1\":{\"1123\":1,\"1125\":1}}],[\"similar\",{\"1\":{\"537\":1,\"543\":1,\"1117\":1,\"1121\":1,\"1122\":1}}],[\"simpler\",{\"1\":{\"548\":1}}],[\"simplest\",{\"1\":{\"523\":1}}],[\"simple\",{\"1\":{\"519\":1}}],[\"simply\",{\"1\":{\"90\":1,\"523\":1}}],[\"sizeclass\",{\"1\":{\"1148\":1}}],[\"size属性保存哈希表的大小\",{\"1\":{\"395\":1}}],[\"sizemask属性的值总是等于size\",{\"1\":{\"395\":1}}],[\"sizemask\",{\"1\":{\"395\":1}}],[\"size参数调整大小\",{\"1\":{\"376\":1}}],[\"size=sizeof\",{\"1\":{\"90\":2}}],[\"sizeof\",{\"1\":{\"90\":12}}],[\"size\",{\"1\":{\"51\":1,\"54\":1,\"55\":1,\"70\":1,\"90\":4,\"120\":1,\"235\":1,\"241\":2,\"259\":2,\"264\":4,\"265\":4,\"266\":2,\"268\":7,\"357\":1,\"358\":1,\"395\":2,\"425\":1,\"427\":1,\"480\":1,\"1055\":2,\"1073\":1,\"1139\":1}}],[\"shuttingdown\",{\"1\":{\"1055\":1}}],[\"shutdown\",{\"1\":{\"425\":1,\"1055\":3}}],[\"shit\",{\"1\":{\"563\":2}}],[\"shift\",{\"1\":{\"543\":1}}],[\"shiny\",{\"1\":{\"523\":1}}],[\"shining\",{\"1\":{\"523\":1}}],[\"she\",{\"1\":{\"523\":2}}],[\"shell命令行\",{\"1\":{\"525\":1}}],[\"shell\",{\"1\":{\"50\":2,\"58\":5,\"90\":1}}],[\"shoelaces\",{\"1\":{\"1116\":3}}],[\"shopping\",{\"1\":{\"543\":1,\"549\":1}}],[\"short\",{\"1\":{\"523\":1,\"991\":1,\"992\":2,\"993\":1,\"1122\":1}}],[\"shorter\",{\"1\":{\"523\":1}}],[\"shock\",{\"1\":{\"523\":1}}],[\"showswithinfo\",{\"1\":{\"1236\":2,\"1239\":2}}],[\"showstate\",{\"1\":{\"838\":6}}],[\"shows\",{\"1\":{\"563\":1,\"1120\":1}}],[\"shown\",{\"1\":{\"543\":1}}],[\"showing\",{\"1\":{\"540\":2}}],[\"shower\",{\"1\":{\"523\":1}}],[\"show\",{\"1\":{\"358\":1,\"540\":1,\"993\":1,\"1073\":1}}],[\"shouldreuseconnection\",{\"1\":{\"1055\":1}}],[\"shouldbindjson\",{\"1\":{\"972\":1}}],[\"shouldequal\",{\"1\":{\"958\":3,\"959\":5,\"960\":8}}],[\"should\",{\"1\":{\"192\":2,\"449\":2,\"523\":1,\"540\":2,\"543\":1,\"563\":1,\"976\":1,\"1055\":1,\"1056\":1,\"1118\":1,\"1119\":1,\"1125\":1}}],[\"sh\",{\"1\":{\"66\":2}}],[\"shapeshift\",{\"1\":{\"704\":1}}],[\"shanghai\",{\"1\":{\"548\":1,\"1208\":5}}],[\"shaking\",{\"1\":{\"523\":1}}],[\"sha224\",{\"1\":{\"512\":1}}],[\"sha256算法\",{\"1\":{\"1047\":1}}],[\"sha256包实现了fips\",{\"1\":{\"512\":1}}],[\"sha256我们首先应该去官网\",{\"1\":{\"512\":1}}],[\"sha256\",{\"1\":{\"49\":2,\"55\":10,\"511\":1,\"512\":2,\"514\":2}}],[\"sharding\",{\"1\":{\"427\":1}}],[\"sharing\",{\"1\":{\"76\":1}}],[\"sharesint\",{\"1\":{\"152\":1}}],[\"shares`\",{\"1\":{\"152\":1}}],[\"shares\",{\"1\":{\"152\":5}}],[\"share\",{\"1\":{\"55\":1,\"56\":1,\"58\":1,\"74\":11,\"150\":1,\"152\":16,\"368\":1,\"370\":1,\"540\":1}}],[\"sessctx\",{\"1\":{\"1238\":3}}],[\"session的方案来管理用户认证的逻辑\",{\"1\":{\"1045\":1}}],[\"session\",{\"0\":{\"1045\":1},\"1\":{\"193\":1,\"194\":7,\"199\":3,\"1045\":19}}],[\"sessions\",{\"1\":{\"193\":1,\"1045\":2}}],[\"semrelease\",{\"1\":{\"1144\":1}}],[\"semrelease1\",{\"1\":{\"1135\":1}}],[\"semacquire\",{\"1\":{\"1144\":1}}],[\"semacquiremutex\",{\"1\":{\"1142\":2,\"1143\":2}}],[\"sema\",{\"1\":{\"1142\":2}}],[\"severe\",{\"1\":{\"560\":1}}],[\"several\",{\"1\":{\"557\":1}}],[\"seven\",{\"1\":{\"543\":2,\"560\":1}}],[\"sense\",{\"1\":{\"1123\":1}}],[\"sent\",{\"1\":{\"1055\":1,\"1073\":1,\"1121\":1,\"1123\":1,\"1126\":1,\"1127\":1}}],[\"sentinel设置局部领头sentinel的规则是先到先得\",{\"1\":{\"426\":1}}],[\"sentinel就会向它发送slaveof命令\",{\"1\":{\"426\":1}}],[\"sentinel就会将从服务器判定为客观下线\",{\"1\":{\"426\":1}}],[\"sentinel就会通过订阅连接\",{\"1\":{\"426\":1}}],[\"sentinel1和sentinel2才会都认为master进入了主观下线状态\",{\"1\":{\"426\":1}}],[\"sentinel1就会将master标记为主观下线\",{\"1\":{\"426\":1}}],[\"sentinel2会将master判断为主观下线\",{\"1\":{\"426\":1}}],[\"sentinel之间不会创建订阅连接\",{\"1\":{\"426\":1}}],[\"sentinel的命令连接\",{\"1\":{\"426\":1}}],[\"sentinel的本质就是运行在特殊模式下的redis服务器\",{\"1\":{\"426\":1}}],[\"sentinel为主服务器创建的实例结构中的sentinels字典保存了除sentinel本身之外\",{\"1\":{\"426\":1}}],[\"sentinel将统计其他sentinel同意主服务器已下线的数量\",{\"1\":{\"426\":1}}],[\"sentinel将丢弃这条信息\",{\"1\":{\"426\":1}}],[\"sentinel将成为主服务器的客户端\",{\"1\":{\"426\":1}}],[\"sentinel运行id等八个参数\",{\"1\":{\"426\":1}}],[\"sentinel端口号\",{\"1\":{\"426\":1}}],[\"sentinel既通过命令连接向服务器的\",{\"1\":{\"426\":1}}],[\"sentinel对\",{\"1\":{\"426\":1}}],[\"sentinel会将主服务器实例结构flags属性的sri\",{\"1\":{\"426\":1}}],[\"sentinel会以每秒一次的频率向所有与它创建了命令连接的实例\",{\"1\":{\"426\":1}}],[\"sentinel会以每两秒一次的频率\",{\"1\":{\"426\":1}}],[\"sentinel会对这条信息进行分析\",{\"1\":{\"426\":1}}],[\"sentinel会对从服务器的实例结构进行更新\",{\"1\":{\"426\":1}}],[\"sentinel会提取出以下信息\",{\"1\":{\"426\":1}}],[\"sentinel会创建两个连向主服务器的异步网络连接\",{\"1\":{\"426\":1}}],[\"sentinel在默认情况下\",{\"1\":{\"426\":1}}],[\"sentinel除了会为这个新的从服务器创建相应的实例结构之外\",{\"1\":{\"426\":1}}],[\"sentinel可以获取以下两方面的信息\",{\"1\":{\"426\":1}}],[\"sentinel还会创建连接到从服务器的命令连接和订阅连接\",{\"1\":{\"426\":1}}],[\"sentinel还会继续监视已下线的server1\",{\"1\":{\"426\":1}}],[\"sentinel还必须向主服务器发送命令\",{\"1\":{\"426\":1}}],[\"sentinel必须专门用一个订阅连接来接收该频道的信息\",{\"1\":{\"426\":1}}],[\"sentineladdr结构的指针\",{\"1\":{\"426\":1}}],[\"sentineladdr\",{\"1\":{\"426\":3}}],[\"sentinelredisinstance\",{\"1\":{\"426\":3}}],[\"sentinelredisinstance结构\",{\"1\":{\"426\":1}}],[\"sentinelstate\",{\"1\":{\"426\":1}}],[\"sentinelstate结构\",{\"1\":{\"426\":1}}],[\"sentinel状态\",{\"1\":{\"426\":1}}],[\"sentinel内部是可以使用发布订阅功能的\",{\"1\":{\"426\":1}}],[\"sentinel系统就会对server1执行故障转移操作\",{\"1\":{\"426\":1}}],[\"sentinel\",{\"1\":{\"413\":1,\"426\":42}}],[\"senddirect\",{\"1\":{\"1137\":1}}],[\"senddata\",{\"1\":{\"1126\":7}}],[\"sendq\",{\"1\":{\"1137\":5}}],[\"sendx\",{\"1\":{\"1137\":3}}],[\"sendch\",{\"1\":{\"1126\":10}}],[\"sends\",{\"1\":{\"1123\":2}}],[\"sendheader\",{\"1\":{\"1095\":2}}],[\"sendandclose\",{\"1\":{\"1072\":1}}],[\"sendexpectationfailed\",{\"1\":{\"1055\":1}}],[\"senders\",{\"1\":{\"1127\":1}}],[\"sender\",{\"1\":{\"434\":1,\"435\":1}}],[\"sendwalletdebitnotification\",{\"1\":{\"927\":1}}],[\"sendwalletcreditnotification\",{\"1\":{\"927\":1}}],[\"sendverificationrequest\",{\"1\":{\"194\":1}}],[\"send\",{\"1\":{\"90\":2,\"563\":1,\"833\":5,\"1055\":1,\"1072\":4,\"1123\":1,\"1125\":2,\"1126\":9,\"1127\":1,\"1137\":2}}],[\"sending\",{\"0\":{\"1123\":1},\"1\":{\"60\":1,\"1125\":1}}],[\"sequential\",{\"1\":{\"399\":1}}],[\"serching\",{\"1\":{\"915\":3}}],[\"serialized\",{\"1\":{\"1055\":1}}],[\"serializable\",{\"1\":{\"361\":1}}],[\"serious\",{\"1\":{\"547\":1}}],[\"seriously\",{\"1\":{\"543\":1,\"563\":1}}],[\"serving\",{\"1\":{\"1054\":1,\"1055\":1,\"1079\":1}}],[\"service必须用google\",{\"1\":{\"1079\":1}}],[\"serviceb\",{\"1\":{\"1063\":8}}],[\"servicea\",{\"1\":{\"1063\":8}}],[\"service\",{\"1\":{\"516\":1,\"1010\":2,\"1055\":3,\"1067\":2,\"1072\":2,\"1079\":1,\"1080\":3,\"1193\":10}}],[\"serveerror\",{\"1\":{\"1055\":2}}],[\"serve函数是什么呢\",{\"1\":{\"1055\":1}}],[\"serve函数的实现中\",{\"1\":{\"1055\":1}}],[\"servehttp\",{\"1\":{\"972\":1,\"1055\":4}}],[\"servefunc\",{\"1\":{\"516\":1}}],[\"serve\",{\"1\":{\"90\":1,\"1055\":13,\"1063\":1,\"1067\":1}}],[\"server的基础上提供了拦截器的中间件\",{\"1\":{\"1096\":1}}],[\"server的地址\",{\"1\":{\"976\":1}}],[\"serverhandler\",{\"1\":{\"1055\":2}}],[\"servercontextkey\",{\"1\":{\"1055\":1}}],[\"server吗\",{\"1\":{\"988\":1}}],[\"server这种方法外\",{\"1\":{\"976\":1}}],[\"server服务类场景下为请求处理函数编写单元测试\",{\"1\":{\"973\":1}}],[\"server服务中为请求处理函数编写单元测试的用例了\",{\"1\":{\"972\":1}}],[\"server端\",{\"1\":{\"972\":1}}],[\"server编写单元测试\",{\"1\":{\"972\":1}}],[\"serverport常量的值作为服务器端口\",{\"1\":{\"426\":1}}],[\"server负责建立连接\",{\"1\":{\"341\":1}}],[\"server层和引擎层\",{\"1\":{\"341\":1}}],[\"server\",{\"1\":{\"90\":17,\"192\":2,\"193\":1,\"194\":10,\"341\":1,\"355\":1,\"358\":3,\"425\":1,\"516\":3,\"976\":3,\"981\":9,\"988\":1,\"1045\":1,\"1047\":1,\"1055\":26,\"1063\":1,\"1067\":14,\"1072\":10,\"1073\":1,\"1074\":3,\"1079\":3,\"1095\":1,\"1099\":4}}],[\"serv\",{\"1\":{\"90\":51}}],[\"sea\",{\"1\":{\"265\":2,\"523\":1}}],[\"searching\",{\"1\":{\"915\":4}}],[\"search\",{\"1\":{\"23\":1,\"325\":2,\"915\":5,\"977\":1}}],[\"separatesort\",{\"1\":{\"216\":4,\"967\":4}}],[\"sec\",{\"1\":{\"1212\":3}}],[\"sections\",{\"1\":{\"1123\":1}}],[\"sectionscount\",{\"1\":{\"1053\":3}}],[\"section\",{\"1\":{\"1055\":1}}],[\"secure\",{\"2\":{\"539\":1,\"542\":1}}],[\"securitycode\",{\"1\":{\"927\":9}}],[\"security\",{\"1\":{\"193\":1,\"563\":1,\"710\":1}}],[\"second\",{\"1\":{\"516\":2,\"519\":1,\"523\":5,\"543\":1,\"547\":2,\"976\":2,\"1001\":1,\"1005\":1,\"1055\":1,\"1063\":1,\"1067\":1,\"1120\":1,\"1124\":1,\"1146\":1,\"1206\":3,\"1211\":2,\"1212\":4}}],[\"seconds\",{\"1\":{\"68\":4,\"403\":2,\"417\":1,\"523\":2,\"1124\":3,\"1207\":4,\"1208\":1}}],[\"secrets\",{\"1\":{\"547\":1}}],[\"secreting\",{\"1\":{\"543\":1}}],[\"secret改为github\",{\"1\":{\"192\":1}}],[\"secret字段中的discord\",{\"1\":{\"192\":1}}],[\"secret=\",{\"1\":{\"192\":3}}],[\"secret\",{\"1\":{\"192\":4,\"195\":3,\"1045\":1,\"1047\":2,\"1099\":3}}],[\"selectdb常量的长度为1字节\",{\"1\":{\"419\":1}}],[\"selectdb\",{\"1\":{\"419\":1}}],[\"select\",{\"0\":{\"1235\":1},\"1\":{\"343\":1,\"347\":1,\"349\":1,\"356\":1,\"358\":1,\"361\":3,\"362\":8,\"367\":2,\"368\":5,\"369\":1,\"370\":3,\"371\":1,\"412\":1,\"997\":1,\"1001\":1,\"1055\":1,\"1137\":2,\"1206\":1,\"1222\":1,\"1235\":1}}],[\"selinsurance\",{\"1\":{\"152\":1}}],[\"selprotocol\",{\"1\":{\"152\":1}}],[\"selfishly\",{\"1\":{\"547\":1}}],[\"self\",{\"1\":{\"152\":36,\"450\":1,\"451\":2,\"458\":1,\"463\":1,\"481\":2,\"543\":2,\"547\":1,\"1120\":1}}],[\"sell\",{\"1\":{\"23\":2,\"537\":1,\"563\":1}}],[\"seem\",{\"1\":{\"523\":4,\"543\":1,\"549\":1}}],[\"seemed\",{\"1\":{\"523\":2}}],[\"seems\",{\"1\":{\"523\":4,\"549\":1}}],[\"seeds\",{\"1\":{\"523\":1}}],[\"seen\",{\"1\":{\"523\":1}}],[\"see\",{\"1\":{\"90\":1,\"540\":1,\"547\":2,\"1052\":1,\"1055\":2,\"1056\":1}}],[\"setid\",{\"1\":{\"1241\":1}}],[\"setint\",{\"1\":{\"1190\":1}}],[\"setcreateat\",{\"1\":{\"1241\":1}}],[\"setcookie\",{\"1\":{\"1047\":1}}],[\"setcomputeunitlimit\",{\"1\":{\"122\":1}}],[\"setflag这些函数\",{\"1\":{\"1181\":1}}],[\"setflags\",{\"1\":{\"1179\":1,\"1181\":1}}],[\"setoutput函数\",{\"1\":{\"1181\":1}}],[\"setoutput\",{\"1\":{\"1181\":5}}],[\"settrailer\",{\"1\":{\"1095\":2}}],[\"settrue\",{\"1\":{\"1055\":1}}],[\"settings\",{\"1\":{\"192\":2}}],[\"setwritedeadline\",{\"1\":{\"1055\":1}}],[\"setreaddeadline\",{\"1\":{\"1055\":3}}],[\"setrange\",{\"1\":{\"403\":1}}],[\"setburst\",{\"1\":{\"1038\":1}}],[\"setbit\",{\"1\":{\"403\":1}}],[\"setlimit\",{\"1\":{\"1038\":1}}],[\"setmode\",{\"1\":{\"972\":1}}],[\"setmediator\",{\"1\":{\"833\":4}}],[\"setpoolmonitor\",{\"1\":{\"1237\":1}}],[\"setprefix\",{\"1\":{\"1180\":2,\"1181\":1}}],[\"setprinter\",{\"1\":{\"910\":7}}],[\"setphone\",{\"1\":{\"874\":1}}],[\"setgender\",{\"1\":{\"874\":1}}],[\"setname\",{\"1\":{\"874\":1}}],[\"setnx\",{\"1\":{\"403\":1,\"436\":1}}],[\"setage\",{\"1\":{\"874\":1}}],[\"sets\",{\"1\":{\"1181\":1}}],[\"setstring\",{\"1\":{\"1190\":1}}],[\"setstrategy\",{\"1\":{\"855\":3}}],[\"setstate\",{\"1\":{\"844\":3,\"849\":3,\"1055\":5}}],[\"setslot\",{\"1\":{\"432\":4}}],[\"setslot<slot>migrating<target\",{\"1\":{\"431\":1}}],[\"setslot<slot>importing<source\",{\"1\":{\"431\":1}}],[\"setex\",{\"1\":{\"403\":2}}],[\"setupdateat\",{\"1\":{\"1241\":1}}],[\"setuproutes\",{\"1\":{\"1073\":2}}],[\"setuprouter\",{\"1\":{\"972\":4}}],[\"setuphttp2\",{\"1\":{\"1055\":1}}],[\"setup\",{\"1\":{\"152\":1}}],[\"set\",{\"0\":{\"408\":1},\"1\":{\"58\":1,\"370\":1,\"393\":1,\"402\":1,\"403\":1,\"408\":4,\"420\":2,\"436\":2,\"437\":1,\"516\":1,\"543\":1,\"975\":1,\"976\":2,\"1037\":1,\"1045\":1,\"1047\":1,\"1054\":1,\"1093\":1,\"1163\":5,\"1179\":1},\"2\":{\"499\":1}}],[\"查找一个文档\",{\"0\":{\"1229\":1}}],[\"查找\",{\"1\":{\"396\":1}}],[\"查找或者更新操作时\",{\"1\":{\"396\":1}}],[\"查询\",{\"1\":{\"386\":1}}],[\"查询看到的结果要么全是旧值\",{\"1\":{\"361\":1}}],[\"查询将不会再次检索主键索引\",{\"1\":{\"353\":1}}],[\"查询优化器发现某个值出现在表的数据行中的百分比很高的时候\",{\"1\":{\"352\":1}}],[\"查询条件的字段\",{\"1\":{\"351\":1}}],[\"查询数据等技术的实现方法\",{\"1\":{\"350\":1}}],[\"查询的结果就会被存入查询缓存中\",{\"1\":{\"343\":1}}],[\"查询缓存在mysql8\",{\"1\":{\"343\":1}}],[\"查询缓存\",{\"0\":{\"343\":1},\"1\":{\"341\":1,\"349\":1,\"386\":1}}],[\"查询语句进行词法分析\",{\"1\":{\"349\":1}}],[\"查询语句如果命中查询缓存则直接返回\",{\"1\":{\"349\":1}}],[\"查询语句的执行方案确定下来\",{\"1\":{\"348\":1}}],[\"查询语句先制定一个执行计划\",{\"1\":{\"348\":1}}],[\"查询语句中的表或者字段是否存在\",{\"1\":{\"347\":1}}],[\"查询语句\",{\"1\":{\"340\":1,\"343\":1,\"349\":2}}],[\"查看单元测试结果\",{\"1\":{\"976\":1}}],[\"查看测试结果\",{\"1\":{\"972\":1}}],[\"查看测试函数名称和运行时间\",{\"1\":{\"967\":1}}],[\"查看订阅消息\",{\"1\":{\"423\":1}}],[\"查看哈希表\",{\"1\":{\"407\":1}}],[\"查看是否有可疑电话\",{\"1\":{\"533\":1}}],[\"查看是否有客户端正在监视刚刚被命令修改过的数据库键\",{\"1\":{\"424\":1}}],[\"查看是否有记录存在独占锁\",{\"1\":{\"368\":1}}],[\"查看是否存在此\",{\"1\":{\"360\":1}}],[\"查看数据卷的具体信息\",{\"1\":{\"74\":1}}],[\"查看所有的\",{\"1\":{\"74\":1}}],[\"查看\",{\"1\":{\"66\":1}}],[\"查看空间的时候\",{\"1\":{\"51\":1}}],[\"查看相关的话题列表\",{\"1\":{\"23\":1}}],[\"查看具体话题详情以及热门话题和即将结束的话题\",{\"1\":{\"23\":1}}],[\"查看话题列表\",{\"1\":{\"23\":1}}],[\"查出所有的生僻字\",{\"1\":{\"4\":1}}],[\"无序的数组怎么建堆呢\",{\"1\":{\"950\":1}}],[\"无意识散步\",{\"1\":{\"789\":1}}],[\"无一例外他们都是各自领域的专家\",{\"1\":{\"746\":1}}],[\"无视自己的局限性\",{\"1\":{\"627\":1}}],[\"无非是闭目养神\",{\"1\":{\"626\":1}}],[\"无非是你比我屏幕大一点\",{\"1\":{\"9\":1}}],[\"无比复杂\",{\"1\":{\"585\":1}}],[\"无条件\",{\"1\":{\"577\":1}}],[\"无独有偶\",{\"1\":{\"534\":1}}],[\"无大小限制\",{\"1\":{\"493\":1}}],[\"无返回值\",{\"1\":{\"480\":1}}],[\"无环\",{\"1\":{\"394\":1}}],[\"无需考虑写消息队列失败情况\",{\"1\":{\"385\":1}}],[\"无需操作缓存\",{\"1\":{\"385\":1}}],[\"无需登陆可做的事情\",{\"1\":{\"23\":1}}],[\"无脑重试\",{\"1\":{\"385\":1}}],[\"无脑\",{\"1\":{\"383\":1}}],[\"无符号右移一位\",{\"1\":{\"287\":1}}],[\"无符号右移\",{\"1\":{\"287\":1}}],[\"无论使用何种日志库\",{\"1\":{\"1183\":1}}],[\"无论上述代码中初始化的变量\",{\"1\":{\"1138\":1}}],[\"无论\",{\"1\":{\"1037\":1}}],[\"无论传入的uid是多少\",{\"1\":{\"978\":1}}],[\"无论它多么吸引人\",{\"1\":{\"623\":1}}],[\"无论我们是否意识到\",{\"1\":{\"620\":1}}],[\"无论你的速度有多快\",{\"1\":{\"582\":1}}],[\"无论你的层次结构是怎样的\",{\"1\":{\"577\":1}}],[\"无论你有多棒\",{\"1\":{\"582\":1}}],[\"无论你喜欢与否\",{\"1\":{\"577\":1}}],[\"无论您的职业轨迹朝什么方向展开\",{\"1\":{\"571\":1}}],[\"无论redis服务器运行在哪种持久化模式下\",{\"1\":{\"424\":1}}],[\"无论事务是否执行成功\",{\"1\":{\"424\":1}}],[\"无论是server端对外提供服务还是我们依赖其他人的服务\",{\"1\":{\"971\":1}}],[\"无论是精神上还是身体上\",{\"1\":{\"789\":1}}],[\"无论是过去\",{\"1\":{\"646\":1}}],[\"无论是保守的还是自由派的\",{\"1\":{\"627\":1}}],[\"无论是内在的还是外在的\",{\"1\":{\"574\":1}}],[\"无论是否已经开始职业生涯或处于中途\",{\"1\":{\"572\":1}}],[\"无论是先操作缓存\",{\"1\":{\"385\":1}}],[\"无论是更新缓存还是删除缓存\",{\"1\":{\"385\":1}}],[\"无论是选取哪些物品\",{\"1\":{\"235\":1}}],[\"无论谁先谁后\",{\"1\":{\"382\":1}}],[\"无论如何你也会需要它们\",{\"1\":{\"53\":1}}],[\"无资产抵押的算法稳定币\",{\"1\":{\"183\":1}}],[\"无法识别空格后的内容\",{\"1\":{\"1172\":1}}],[\"无法在服务器端废除\",{\"1\":{\"1047\":1}}],[\"无法销售就无法致富\",{\"1\":{\"776\":1}}],[\"无法增加\",{\"1\":{\"620\":1}}],[\"无法大胆转行或开始全新的道路\",{\"1\":{\"585\":1}}],[\"无法以最快速度完成的职业道路\",{\"1\":{\"584\":1}}],[\"无法保证这一点\",{\"1\":{\"474\":1}}],[\"无法再拥有一个不可变借用\",{\"1\":{\"468\":1}}],[\"无法再更新\",{\"1\":{\"127\":1}}],[\"无法使用函数进行静态初始化\",{\"1\":{\"459\":1}}],[\"无法实现强一致性保证\",{\"1\":{\"413\":1}}],[\"无法做到都满足要求\",{\"1\":{\"387\":1}}],[\"无法服务其它客户端请求\",{\"1\":{\"385\":1}}],[\"无法成功插入\",{\"1\":{\"361\":1,\"362\":1}}],[\"无法把前缀索引用作覆盖索引\",{\"1\":{\"353\":1}}],[\"无法匹配\",{\"1\":{\"291\":1}}],[\"无法工作的原因\",{\"1\":{\"60\":1}}],[\"无状态的\",{\"1\":{\"115\":1}}],[\"无主的数据卷可能会占据很多空间\",{\"1\":{\"74\":1}}],[\"b2\",{\"1\":{\"1231\":1}}],[\"bd\",{\"1\":{\"1140\":1}}],[\"b1\",{\"1\":{\"1140\":1}}],[\"bv1qs4y1m7ic\",{\"1\":{\"977\":1}}],[\"b类型的参数b\",{\"1\":{\"970\":1}}],[\"bson\",{\"1\":{\"1229\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":6,\"1235\":2,\"1236\":7,\"1238\":2,\"1239\":7,\"1241\":1}}],[\"bs\",{\"1\":{\"827\":8}}],[\"b站视频\",{\"1\":{\"953\":1}}],[\"b站\",{\"1\":{\"740\":1}}],[\"b站有一些描述信息茧房的视频其实就描述了这些现象\",{\"1\":{\"531\":1}}],[\"bzx\",{\"1\":{\"704\":1}}],[\"b也有连向sentinel\",{\"1\":{\"426\":1}}],[\"braeak\",{\"1\":{\"1074\":1}}],[\"brain\",{\"1\":{\"543\":1,\"563\":1}}],[\"broadcast\",{\"1\":{\"1146\":6}}],[\"broaden\",{\"1\":{\"543\":1}}],[\"broadened\",{\"1\":{\"543\":1}}],[\"broke\",{\"1\":{\"808\":1}}],[\"broken\",{\"1\":{\"537\":1,\"560\":1}}],[\"browser\",{\"1\":{\"731\":3,\"1118\":7}}],[\"brooks\",{\"1\":{\"722\":1}}],[\"brought\",{\"1\":{\"543\":1}}],[\"brother\",{\"1\":{\"543\":1}}],[\"brian\",{\"1\":{\"827\":6}}],[\"bring\",{\"1\":{\"523\":1,\"540\":1,\"543\":1,\"557\":1}}],[\"bringing\",{\"1\":{\"523\":1}}],[\"brilliant\",{\"1\":{\"523\":2}}],[\"brighter\",{\"1\":{\"523\":1}}],[\"brightness\",{\"1\":{\"523\":1}}],[\"bright\",{\"1\":{\"523\":4}}],[\"brpoplpush\",{\"1\":{\"405\":3}}],[\"brpop\",{\"1\":{\"405\":1}}],[\"breaking\",{\"1\":{\"808\":1}}],[\"breakfast\",{\"1\":{\"560\":2}}],[\"break\",{\"1\":{\"246\":1,\"300\":1,\"325\":1,\"523\":1,\"844\":1,\"867\":1,\"1055\":1,\"1072\":2,\"1099\":1,\"1127\":1,\"1153\":2}}],[\"blank\",{\"1\":{\"1055\":1}}],[\"blame\",{\"1\":{\"547\":2}}],[\"black\",{\"1\":{\"523\":2,\"537\":3,\"1120\":2}}],[\"blob\",{\"1\":{\"1181\":1}}],[\"blog\",{\"1\":{\"975\":1,\"976\":7}}],[\"blood\",{\"1\":{\"523\":1}}],[\"bloated\",{\"1\":{\"519\":1}}],[\"blocked\",{\"1\":{\"1123\":2,\"1124\":2}}],[\"blocking\",{\"1\":{\"523\":1,\"1123\":3,\"1124\":2}}],[\"blockchain\",{\"1\":{\"510\":1,\"511\":1,\"513\":1,\"516\":7,\"517\":2},\"2\":{\"518\":1,\"536\":1}}],[\"block\",{\"1\":{\"510\":1,\"513\":2,\"514\":12,\"515\":1,\"517\":2,\"547\":1,\"1119\":1}}],[\"blocks\",{\"1\":{\"377\":2}}],[\"blpop\",{\"1\":{\"405\":1}}],[\"bluebell\",{\"1\":{\"1026\":2}}],[\"blue\",{\"1\":{\"333\":2,\"334\":2,\"523\":9,\"1120\":2}}],[\"b+tree的有序性\",{\"1\":{\"352\":1}}],[\"b+tree\",{\"1\":{\"351\":1,\"353\":1}}],[\"b+\",{\"1\":{\"341\":1,\"350\":1,\"353\":1}}],[\"b+树\",{\"1\":{\"341\":1}}],[\"b++\",{\"1\":{\"321\":1}}],[\"b的长度\",{\"1\":{\"324\":1}}],[\"bwfi\",{\"1\":{\"318\":1}}],[\"bczi\",{\"1\":{\"318\":1}}],[\"bccfi\",{\"1\":{\"318\":1}}],[\"bca\",{\"1\":{\"311\":1}}],[\"bb\",{\"1\":{\"297\":7,\"1140\":1}}],[\"bbbbb\",{\"1\":{\"320\":1}}],[\"bbbb\",{\"1\":{\"268\":1}}],[\"bbbab\",{\"1\":{\"268\":1}}],[\"b是a的子结构\",{\"1\":{\"297\":1}}],[\"bgrewriteaof命令正在执行\",{\"1\":{\"416\":1}}],[\"bgrewriteaof三个命令和平时有所不同\",{\"1\":{\"416\":1}}],[\"bgsave命令的保存工作由主进程fork的子进程执行\",{\"1\":{\"416\":1}}],[\"bgsave是在后台起一个进程来处理保存数据\",{\"1\":{\"416\":1}}],[\"bgsave\",{\"1\":{\"413\":3}}],[\"bg\",{\"1\":{\"195\":1}}],[\"by命令的回复\",{\"1\":{\"426\":1}}],[\"by\",{\"1\":{\"351\":2,\"352\":2,\"353\":1,\"426\":7,\"473\":1,\"519\":1,\"523\":8,\"525\":1,\"537\":1,\"543\":1,\"547\":2,\"550\":1,\"560\":1,\"563\":1,\"569\":1,\"827\":4,\"910\":5,\"956\":1,\"992\":1,\"1055\":2,\"1123\":3,\"1124\":2,\"1127\":1,\"1192\":4}}],[\"bytedance\",{\"1\":{\"956\":1,\"957\":1,\"958\":1,\"959\":1,\"960\":1}}],[\"byte\",{\"1\":{\"277\":2,\"284\":1,\"311\":5,\"320\":1,\"322\":1,\"335\":2,\"475\":1,\"483\":2,\"514\":1,\"516\":1,\"972\":1,\"1045\":1,\"1047\":1,\"1055\":1,\"1073\":1,\"1086\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1139\":2,\"1153\":2,\"1172\":1,\"1199\":8,\"1208\":1,\"1212\":10}}],[\"bytes\",{\"1\":{\"105\":1,\"120\":1,\"475\":1,\"486\":1,\"973\":2,\"1055\":1,\"1153\":1}}],[\"byod\",{\"1\":{\"193\":1}}],[\"b以2000\",{\"1\":{\"163\":1}}],[\"bob\",{\"1\":{\"1190\":2}}],[\"both\",{\"1\":{\"1116\":1,\"1126\":1}}],[\"bottom往上移动\",{\"1\":{\"300\":1}}],[\"bottom行的从右往左遍历\",{\"1\":{\"300\":1}}],[\"bottom>=top\",{\"1\":{\"300\":1}}],[\"bottom\",{\"1\":{\"300\":3,\"523\":1,\"563\":1,\"956\":1,\"1120\":2}}],[\"bou\",{\"1\":{\"978\":1}}],[\"boundless\",{\"1\":{\"523\":1}}],[\"boundary\",{\"1\":{\"475\":1}}],[\"bounds\",{\"1\":{\"447\":3}}],[\"bodies\",{\"1\":{\"523\":1}}],[\"body请求就可以请求grpc呢\",{\"1\":{\"1079\":1}}],[\"body\",{\"1\":{\"195\":1,\"516\":3,\"523\":9,\"543\":2,\"560\":1,\"814\":4,\"972\":1,\"973\":3,\"980\":4,\"1055\":5,\"1079\":1,\"1080\":3}}],[\"born\",{\"1\":{\"523\":9,\"543\":1,\"547\":1}}],[\"borrowed\",{\"1\":{\"468\":1}}],[\"borrowing\",{\"1\":{\"152\":4}}],[\"borrow和各种fee等等\",{\"1\":{\"152\":1}}],[\"borrow同一个资产\",{\"1\":{\"150\":1}}],[\"borrow\",{\"0\":{\"159\":1},\"1\":{\"150\":1,\"152\":4,\"157\":1,\"468\":4}}],[\"box中的大部分btc是丢了\",{\"1\":{\"591\":1}}],[\"box\",{\"0\":{\"461\":1},\"1\":{\"461\":3,\"462\":2,\"574\":1,\"1120\":4}}],[\"board\",{\"1\":{\"284\":7}}],[\"book2\",{\"1\":{\"1084\":1}}],[\"book1\",{\"1\":{\"1084\":1}}],[\"bookshelf\",{\"1\":{\"827\":30}}],[\"books\",{\"1\":{\"537\":2,\"548\":1,\"557\":1,\"827\":6,\"1084\":2}}],[\"book\",{\"1\":{\"446\":1,\"537\":7,\"540\":1,\"543\":1,\"557\":2,\"827\":22},\"2\":{\"665\":1,\"672\":1,\"676\":1}}],[\"bool返回v是否持有一个值\",{\"1\":{\"1191\":1}}],[\"boolvar\",{\"1\":{\"1162\":4}}],[\"boolvarp\",{\"1\":{\"991\":1}}],[\"bool\",{\"1\":{\"212\":2,\"213\":1,\"214\":1,\"216\":2,\"217\":1,\"218\":2,\"219\":2,\"237\":1,\"246\":3,\"263\":1,\"267\":2,\"276\":1,\"284\":5,\"291\":3,\"297\":3,\"299\":3,\"302\":1,\"311\":2,\"329\":1,\"336\":1,\"515\":1,\"827\":3,\"960\":2,\"976\":1,\"980\":1,\"991\":1,\"1010\":7,\"1036\":2,\"1045\":1,\"1073\":1,\"1084\":1,\"1099\":2,\"1124\":5,\"1132\":3,\"1138\":1,\"1139\":1,\"1161\":7,\"1162\":1,\"1188\":4,\"1189\":2,\"1191\":1,\"1194\":1,\"1199\":1,\"1212\":5}}],[\"boolean\",{\"1\":{\"105\":1,\"200\":1}}],[\"boot\",{\"1\":{\"68\":1}}],[\"bpf\",{\"0\":{\"129\":1},\"1\":{\"129\":1}}],[\"bpf加载程序是被指定为网络上所有其他程序\",{\"1\":{\"112\":1}}],[\"bpfloader程序\",{\"1\":{\"112\":1}}],[\"bidirectional\",{\"1\":{\"1126\":4}}],[\"biden\",{\"1\":{\"628\":1}}],[\"bilibili\",{\"1\":{\"977\":1,\"1011\":1}}],[\"billions\",{\"1\":{\"523\":2}}],[\"billion\",{\"1\":{\"523\":7}}],[\"birthday\",{\"1\":{\"978\":3}}],[\"birth\",{\"1\":{\"523\":3}}],[\"big\",{\"1\":{\"523\":6,\"547\":1}}],[\"bio\",{\"1\":{\"411\":2}}],[\"bitmart\",{\"1\":{\"704\":1}}],[\"bitpoint\",{\"1\":{\"704\":1}}],[\"bithumb\",{\"1\":{\"704\":1}}],[\"bitgrail\",{\"1\":{\"704\":1}}],[\"bitfinex\",{\"1\":{\"704\":1}}],[\"bit\",{\"1\":{\"413\":1,\"523\":1,\"543\":1}}],[\"bitop\",{\"1\":{\"403\":1}}],[\"bitcount\",{\"1\":{\"403\":1}}],[\"bitcoinica\",{\"1\":{\"704\":1}}],[\"bitcoin7\",{\"1\":{\"704\":1}}],[\"bitcoin\",{\"2\":{\"98\":1,\"101\":1}}],[\"bitsize\",{\"1\":{\"1199\":2}}],[\"bitstamp\",{\"1\":{\"704\":1}}],[\"bits\",{\"1\":{\"331\":3}}],[\"bin结尾\",{\"1\":{\"1093\":1}}],[\"bin目录下\",{\"1\":{\"1067\":1}}],[\"bin目录下的\",{\"1\":{\"1067\":1}}],[\"binary\",{\"1\":{\"1026\":3}}],[\"binary=\",{\"1\":{\"1026\":2}}],[\"binance\",{\"1\":{\"27\":1}}],[\"binlog\",{\"0\":{\"358\":1},\"1\":{\"355\":2,\"358\":44,\"359\":11,\"360\":44,\"385\":2}}],[\"binds\",{\"1\":{\"523\":1}}],[\"bind\",{\"1\":{\"74\":1,\"90\":5}}],[\"bin\",{\"1\":{\"64\":2,\"66\":2,\"68\":3,\"69\":1,\"355\":1,\"977\":1,\"1067\":1,\"1093\":1,\"1094\":2,\"1095\":2}}],[\"bter\",{\"1\":{\"704\":1}}],[\"btrfs\",{\"1\":{\"78\":1}}],[\"btc帮助我们偿还\",{\"1\":{\"164\":1}}],[\"btc暴跌或者usdt暴涨\",{\"1\":{\"164\":1}}],[\"btc的抵押率是50\",{\"1\":{\"164\":1}}],[\"btc自然不用多说\",{\"1\":{\"109\":1}}],[\"btc\",{\"0\":{\"1255\":1},\"1\":{\"27\":2,\"36\":1,\"180\":1,\"537\":2}}],[\"b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228\",{\"1\":{\"55\":3}}],[\"burst\",{\"1\":{\"1037\":1}}],[\"burning\",{\"1\":{\"523\":1}}],[\"business\",{\"1\":{\"563\":1,\"808\":1}}],[\"busy\",{\"1\":{\"425\":1}}],[\"bubble\",{\"1\":{\"547\":1}}],[\"bug\",{\"1\":{\"446\":1,\"447\":1}}],[\"bulk\",{\"1\":{\"426\":1,\"435\":2}}],[\"bufio\",{\"0\":{\"1153\":1},\"1\":{\"1153\":8,\"1172\":4}}],[\"bufw\",{\"1\":{\"1055\":1}}],[\"bufr\",{\"1\":{\"1055\":2}}],[\"buf的内容\",{\"1\":{\"422\":1}}],[\"buf缓冲区中\",{\"1\":{\"422\":1}}],[\"buf缓冲区末尾\",{\"1\":{\"422\":1}}],[\"buf\",{\"1\":{\"393\":2,\"402\":2,\"1055\":5,\"1137\":1}}],[\"buffers\",{\"1\":{\"1067\":1}}],[\"buffer的持久策略\",{\"1\":{\"357\":1}}],[\"buffer内存空间的一半时\",{\"1\":{\"357\":1}}],[\"buffer记录的写入量大于redo\",{\"1\":{\"357\":1}}],[\"buffer默认16mb\",{\"1\":{\"357\":1}}],[\"buffer中\",{\"1\":{\"357\":2}}],[\"buffer\",{\"0\":{\"354\":1,\"375\":1},\"1\":{\"354\":1,\"356\":1,\"357\":8,\"360\":3,\"376\":6,\"377\":19,\"1073\":1,\"1153\":3}}],[\"bucket代币\",{\"1\":{\"166\":1}}],[\"bucket\",{\"1\":{\"166\":2,\"1033\":1}}],[\"but\",{\"0\":{\"549\":1},\"1\":{\"90\":2,\"447\":2,\"519\":1,\"523\":18,\"537\":6,\"540\":3,\"543\":4,\"547\":12,\"548\":2,\"557\":3,\"560\":2,\"563\":8,\"569\":1,\"975\":1,\"1055\":2,\"1117\":1,\"1124\":1,\"1126\":3}}],[\"build不会被编译到最终的二进制文件中去\",{\"1\":{\"966\":1}}],[\"builder\",{\"1\":{\"874\":1}}],[\"buildpartb\",{\"1\":{\"873\":1}}],[\"buildtree\",{\"1\":{\"279\":3}}],[\"builddeps=\",{\"1\":{\"58\":1}}],[\"build\",{\"1\":{\"52\":1,\"59\":2,\"60\":10,\"547\":1,\"958\":4,\"959\":1,\"960\":7,\"1023\":1,\"1025\":2,\"1026\":5,\"1138\":1}}],[\"buying\",{\"1\":{\"537\":1}}],[\"buy\",{\"1\":{\"23\":2,\"537\":4,\"563\":2}}],[\"batch\",{\"1\":{\"1232\":2}}],[\"badrequest\",{\"1\":{\"1074\":4}}],[\"bad\",{\"1\":{\"972\":3,\"1055\":2,\"1074\":2}}],[\"baidu\",{\"1\":{\"523\":2}}],[\"baike\",{\"1\":{\"523\":2}}],[\"bancor\",{\"1\":{\"704\":1}}],[\"bands\",{\"1\":{\"523\":1}}],[\"band\",{\"1\":{\"523\":1}}],[\"bang\",{\"1\":{\"523\":4}}],[\"bankoperationalstate\",{\"1\":{\"152\":1}}],[\"bankconfigcompact\",{\"1\":{\"152\":1}}],[\"bank\",{\"1\":{\"152\":5}}],[\"baz\",{\"1\":{\"460\":1}}],[\"barbara\",{\"1\":{\"653\":1}}],[\"bar\",{\"1\":{\"460\":1,\"958\":5,\"959\":2,\"960\":4,\"1005\":3}}],[\"bac\",{\"1\":{\"311\":1}}],[\"background都可以单独设置\",{\"1\":{\"731\":1}}],[\"background\",{\"1\":{\"547\":1,\"1010\":4,\"1055\":1,\"1067\":1,\"1072\":2,\"1079\":2,\"1094\":1,\"1095\":2,\"1156\":1,\"1225\":1,\"1227\":2,\"1236\":1,\"1239\":1,\"1240\":1,\"1241\":3}}],[\"backend\",{\"1\":{\"547\":1}}],[\"backlog\",{\"1\":{\"425\":1}}],[\"backward\",{\"1\":{\"397\":1}}],[\"backtarcing\",{\"1\":{\"210\":3}}],[\"backtrace=full`\",{\"1\":{\"447\":1}}],[\"backtrace=1\",{\"1\":{\"447\":1}}],[\"backtrace=1`\",{\"1\":{\"447\":2,\"448\":1,\"475\":1}}],[\"backtrace\",{\"1\":{\"215\":3,\"447\":12,\"448\":1,\"475\":1}}],[\"backtracing\",{\"1\":{\"211\":3,\"212\":3,\"218\":3,\"219\":3}}],[\"backtracking\",{\"1\":{\"212\":3,\"213\":3,\"217\":3,\"311\":3}}],[\"backtrack\",{\"1\":{\"206\":2,\"208\":5,\"214\":3,\"216\":3},\"2\":{\"222\":1}}],[\"backtraverse\",{\"1\":{\"209\":3}}],[\"back\",{\"1\":{\"21\":1,\"37\":1,\"39\":1,\"40\":1,\"41\":1,\"336\":2,\"523\":1,\"543\":3,\"563\":1,\"992\":1,\"1055\":1}}],[\"bagg\",{\"1\":{\"264\":1}}],[\"bag+1\",{\"1\":{\"239\":1}}],[\"bag\",{\"1\":{\"239\":3,\"264\":1}}],[\"bagweight\",{\"1\":{\"235\":2,\"236\":1,\"241\":2}}],[\"basic\",{\"1\":{\"523\":2,\"547\":1,\"563\":1,\"1097\":1,\"1099\":1,\"1140\":1}}],[\"basecontext\",{\"1\":{\"1055\":3}}],[\"basectx\",{\"1\":{\"1055\":4}}],[\"base64urlencode\",{\"1\":{\"1047\":2}}],[\"base64url\",{\"1\":{\"1047\":1}}],[\"base64\",{\"1\":{\"192\":1,\"1093\":1,\"1094\":1,\"1095\":1}}],[\"base\",{\"1\":{\"152\":9,\"547\":1,\"972\":3}}],[\"bash是放在镜像名之后的命令\",{\"1\":{\"50\":1}}],[\"bash\",{\"1\":{\"50\":3,\"64\":2,\"68\":4,\"69\":1,\"988\":1}}],[\"bench参数\",{\"1\":{\"970\":1}}],[\"bench=quick\",{\"1\":{\"970\":2}}],[\"bench=\",{\"1\":{\"899\":1}}],[\"benchmem参数\",{\"1\":{\"970\":1}}],[\"benchmem\",{\"1\":{\"899\":1,\"970\":1}}],[\"benchmark\",{\"1\":{\"899\":6,\"970\":5}}],[\"behind\",{\"1\":{\"548\":1}}],[\"behavioral\",{\"0\":{\"1282\":1}}],[\"behavior\",{\"1\":{\"543\":1,\"1009\":1,\"1010\":1,\"1055\":1}}],[\"beyond\",{\"1\":{\"547\":1,\"548\":1}}],[\"bearer\",{\"1\":{\"1099\":1}}],[\"beats\",{\"1\":{\"543\":1}}],[\"beautiful\",{\"1\":{\"523\":2,\"560\":1}}],[\"best\",{\"1\":{\"540\":1,\"547\":1,\"1116\":1}}],[\"belong\",{\"1\":{\"523\":1,\"540\":1}}],[\"believe\",{\"1\":{\"523\":1,\"543\":1,\"557\":1}}],[\"better\",{\"1\":{\"547\":1,\"560\":1,\"1117\":1,\"1120\":1,\"1124\":1}}],[\"between\",{\"1\":{\"523\":2,\"1118\":2}}],[\"betxin支持36种不同的加密货币\",{\"1\":{\"40\":1}}],[\"betxin会在您支付加密货币之后帮您转换为pusd\",{\"1\":{\"37\":1}}],[\"betxin目前支持cnb作为整个市场的通货\",{\"0\":{\"21\":1}}],[\"betxin是一个信息交易市场平台\",{\"1\":{\"19\":1,\"34\":1}}],[\"betxin\",{\"0\":{\"16\":1,\"19\":1,\"31\":1,\"32\":1,\"1250\":1},\"1\":{\"16\":1},\"2\":{\"29\":1,\"30\":1,\"43\":1,\"44\":1}}],[\"began\",{\"1\":{\"523\":12}}],[\"begin\",{\"1\":{\"358\":1,\"362\":2,\"370\":1,\"371\":1,\"447\":1,\"547\":1,\"975\":1,\"1053\":1}}],[\"beginning\",{\"1\":{\"90\":1,\"523\":4,\"563\":1,\"1179\":1}}],[\"becoming\",{\"1\":{\"523\":1}}],[\"becomes\",{\"1\":{\"523\":1,\"547\":1}}],[\"become\",{\"1\":{\"519\":1,\"523\":6,\"543\":2,\"547\":1,\"549\":1,\"563\":4,\"1116\":1}}],[\"became\",{\"1\":{\"523\":7,\"543\":1}}],[\"because\",{\"1\":{\"468\":1,\"523\":5,\"537\":1,\"547\":4,\"548\":1,\"549\":1,\"550\":1,\"1055\":1,\"1118\":1}}],[\"been\",{\"1\":{\"519\":1,\"523\":3,\"543\":2,\"547\":3,\"548\":1,\"563\":1,\"1127\":1}}],[\"beings\",{\"1\":{\"523\":1}}],[\"being\",{\"1\":{\"463\":3,\"547\":1,\"1055\":1,\"1073\":1}}],[\"beforeinsert\",{\"1\":{\"1240\":1}}],[\"before\",{\"1\":{\"405\":1,\"523\":3,\"537\":2,\"1010\":2,\"1047\":1,\"1055\":1,\"1072\":1,\"1115\":1,\"1179\":1,\"1212\":4,\"1240\":1}}],[\"be\",{\"1\":{\"192\":3,\"449\":2,\"473\":1,\"483\":1,\"519\":1,\"523\":19,\"537\":5,\"540\":1,\"543\":12,\"547\":6,\"548\":1,\"549\":2,\"550\":2,\"560\":1,\"563\":4,\"770\":1,\"808\":1,\"1037\":1,\"1052\":1,\"1053\":2,\"1055\":2,\"1056\":1,\"1118\":3,\"1119\":5,\"1120\":1,\"1121\":2,\"1122\":2,\"1124\":3,\"1125\":1,\"1126\":2,\"1127\":4,\"1242\":1}}],[\"be13a9d27eb8\",{\"1\":{\"49\":1}}],[\"b购入了70k\",{\"1\":{\"26\":1}}],[\"b\",{\"1\":{\"26\":5,\"131\":1,\"169\":3,\"228\":3,\"231\":3,\"244\":3,\"245\":3,\"249\":3,\"250\":3,\"252\":6,\"257\":5,\"259\":2,\"268\":3,\"277\":5,\"284\":1,\"285\":3,\"291\":1,\"297\":21,\"311\":7,\"318\":1,\"319\":3,\"320\":1,\"321\":5,\"322\":1,\"328\":3,\"329\":3,\"335\":12,\"360\":3,\"362\":2,\"374\":3,\"383\":5,\"384\":4,\"386\":5,\"426\":1,\"435\":1,\"436\":1,\"461\":6,\"462\":6,\"486\":2,\"580\":1,\"773\":1,\"833\":5,\"844\":2,\"849\":2,\"867\":2,\"899\":8,\"958\":3,\"970\":8,\"973\":2,\"988\":2,\"1034\":2,\"1063\":8,\"1093\":1,\"1094\":2,\"1095\":2,\"1120\":2,\"1172\":1,\"1173\":3,\"1179\":1,\"1188\":2,\"1189\":2,\"1191\":3,\"1199\":2,\"1212\":1}}],[\"如10进制\",{\"1\":{\"1198\":1}}],[\"如interface\",{\"1\":{\"1194\":1}}],[\"如上图右侧\",{\"1\":{\"1138\":1}}],[\"如上图左侧\",{\"1\":{\"1138\":1}}],[\"如上图所示\",{\"1\":{\"1138\":1}}],[\"如在线游戏或聊天应用程序\",{\"1\":{\"1073\":1}}],[\"如可执行文件\",{\"1\":{\"1025\":1}}],[\"如类\",{\"1\":{\"982\":1}}],[\"如名称\",{\"1\":{\"967\":1}}],[\"如t\",{\"1\":{\"967\":1}}],[\"如初始化\",{\"1\":{\"896\":1}}],[\"如数据库连接池\",{\"1\":{\"895\":1}}],[\"如buildparta\",{\"1\":{\"873\":1}}],[\"如蜉蝣观天地般才能发挥出认知差真正的价值\",{\"1\":{\"810\":1}}],[\"如智能灯\",{\"1\":{\"772\":1}}],[\"如此\",{\"1\":{\"740\":1}}],[\"如windows和macos\",{\"1\":{\"721\":1}}],[\"如unix\",{\"1\":{\"721\":1}}],[\"如韧性\",{\"1\":{\"583\":1}}],[\"如机智和受欢迎程度\",{\"1\":{\"583\":1}}],[\"如对深度专注的嗅觉或拖延倾向\",{\"1\":{\"583\":1}}],[\"如渴望坐着放松的那部分\",{\"1\":{\"573\":1}}],[\"如我们之前在博客中讨论过的\",{\"1\":{\"573\":1}}],[\"如今\",{\"1\":{\"721\":1}}],[\"如今这种工作循环有很多问题\",{\"1\":{\"648\":1}}],[\"如今的抖音经过5年的迭代\",{\"1\":{\"631\":1}}],[\"如今的人不等同于他们所做的事情\",{\"1\":{\"585\":1}}],[\"如今的职业不是一条隧道\",{\"1\":{\"585\":1}}],[\"如今的职业环境不是一排排的隧道\",{\"1\":{\"585\":1}}],[\"如今的职业\",{\"1\":{\"585\":1}}],[\"如今的互联网一直要求我们以在线的状态\",{\"1\":{\"533\":1}}],[\"如今互联网\",{\"0\":{\"533\":1}}],[\"如实现一个多线程的日志组件\",{\"1\":{\"463\":1}}],[\"如存储过程\",{\"1\":{\"341\":1}}],[\"如日期\",{\"1\":{\"341\":1}}],[\"如计算初始结果为\",{\"1\":{\"286\":1}}],[\"如下图\",{\"1\":{\"357\":1,\"360\":1,\"377\":1}}],[\"如下图所示\",{\"1\":{\"264\":1}}],[\"如下\",{\"1\":{\"276\":1,\"967\":1}}],[\"如图15\",{\"1\":{\"425\":1}}],[\"如图\",{\"1\":{\"235\":2}}],[\"如账户数据大小限制\",{\"1\":{\"119\":1}}],[\"如之前所说\",{\"1\":{\"49\":1}}],[\"如\",{\"1\":{\"48\":1,\"57\":3,\"166\":1,\"416\":1,\"424\":1,\"426\":2,\"432\":2,\"1073\":1,\"1161\":1}}],[\"如匿名卷\",{\"1\":{\"46\":1}}],[\"如果转换失败\",{\"1\":{\"1198\":2}}],[\"如果类型是结构体的话\",{\"1\":{\"1192\":1}}],[\"如果v是value零值会返回假\",{\"1\":{\"1191\":1}}],[\"如果文件\",{\"1\":{\"1172\":2}}],[\"如果文件不存在或不能读取\",{\"1\":{\"450\":1}}],[\"如果命令行中指定了该选项\",{\"1\":{\"1161\":1}}],[\"如果命令在入队时发生了错误\",{\"1\":{\"424\":1}}],[\"如果mcentral如果不够了\",{\"1\":{\"1149\":1}}],[\"如果mcache没有空闲的mspan了\",{\"1\":{\"1149\":1}}],[\"如果传入的函数没有执行过\",{\"1\":{\"1145\":1}}],[\"如果传入的函数已经执行过\",{\"1\":{\"1145\":1}}],[\"如果传入的字节数超过3\",{\"1\":{\"1097\":1}}],[\"如果包含该结构体或者实现了对应的方法就会报出以下错误\",{\"1\":{\"1144\":1}}],[\"如果返回值小于零\",{\"1\":{\"1143\":1}}],[\"如果返回值大于等于零\",{\"1\":{\"1143\":1}}],[\"如果返回错误值接panic\",{\"1\":{\"449\":1}}],[\"如果仍然有其他\",{\"1\":{\"1143\":1}}],[\"如果该方法的结果为非负数\",{\"1\":{\"1143\":1}}],[\"如果该方法返回负数\",{\"1\":{\"1143\":1}}],[\"如果该函数返回的新状态不等于\",{\"1\":{\"1142\":1}}],[\"如果该函数返回的新状态等于\",{\"1\":{\"1142\":1}}],[\"如果该目录下没有所需文件\",{\"1\":{\"60\":1}}],[\"如果等待队列中只存在当前\",{\"1\":{\"1142\":1}}],[\"如果等待时间为\",{\"1\":{\"1037\":1}}],[\"如果互斥锁状态不是1\",{\"1\":{\"1142\":1}}],[\"如果创建的\",{\"1\":{\"1137\":1}}],[\"如果创始人窃取了你的代币\",{\"1\":{\"705\":1}}],[\"如果channel已经关闭则会panic\",{\"1\":{\"1137\":1}}],[\"如果还是没有\",{\"1\":{\"1135\":1}}],[\"如果还是有歧义\",{\"1\":{\"483\":1}}],[\"如果系统调用超过了一个\",{\"1\":{\"1135\":1}}],[\"如果获取不到\",{\"1\":{\"1135\":1}}],[\"如果获取到空闲\",{\"1\":{\"1135\":1}}],[\"如果请求中包含了我们不支持的字段\",{\"1\":{\"1088\":1}}],[\"如果请求速率过快\",{\"1\":{\"1036\":1}}],[\"如果继续下去我们可以看到最后其实是到了group\",{\"1\":{\"1053\":1}}],[\"如果充足则直接返回\",{\"1\":{\"1035\":1}}],[\"如果此时桶内\",{\"1\":{\"1035\":1}}],[\"如果顺利成功再\",{\"1\":{\"1010\":1}}],[\"如果配送失败\",{\"1\":{\"1009\":1}}],[\"如果配置文件指定sentinel1的down\",{\"1\":{\"426\":1}}],[\"如果输入\",{\"1\":{\"1009\":1}}],[\"如果接受\",{\"1\":{\"1009\":1}}],[\"如果接收ping的节点没有在规定时间内返回pong\",{\"1\":{\"433\":1}}],[\"如果位置参数的个数不在区间\",{\"1\":{\"991\":1}}],[\"如果位置参数超过\",{\"1\":{\"991\":1}}],[\"如果需要指定多个接口\",{\"1\":{\"977\":1}}],[\"如果需要在删除容器的同时移除数据卷\",{\"1\":{\"74\":1}}],[\"如果需要在其它服务器上使用这个镜像\",{\"1\":{\"48\":1}}],[\"如果涉及到http请求推荐大家使用go标库\",{\"1\":{\"972\":1}}],[\"如果arean区域没有足够的空间\",{\"1\":{\"1149\":1}}],[\"如果arr\",{\"1\":{\"945\":1}}],[\"如果ai给你的代码你看都不看就直接使用了\",{\"1\":{\"605\":1}}],[\"如果遍历到的arr\",{\"1\":{\"944\":1}}],[\"如果未找到匹配的对象\",{\"1\":{\"932\":1}}],[\"如果仅仅是在赋值就没有意义了\",{\"1\":{\"887\":1}}],[\"如果学习的内容无法支持你做出可销售的产品\",{\"1\":{\"776\":1}}],[\"如果以上你符合超过\",{\"1\":{\"772\":1}}],[\"如果东西还能用\",{\"1\":{\"771\":1}}],[\"如果用一句话来概括这本书\",{\"1\":{\"767\":1}}],[\"如果用户向sentinel设置了以下配置\",{\"1\":{\"426\":1}}],[\"如果用户名和密码都对了\",{\"1\":{\"342\":1}}],[\"如果用户名或密码不对\",{\"1\":{\"342\":1}}],[\"如果考虑两三年\",{\"1\":{\"759\":1}}],[\"如果市场价格是\",{\"1\":{\"751\":1}}],[\"如果持工作签证被解雇\",{\"1\":{\"751\":1}}],[\"如果小于一小时\",{\"1\":{\"731\":1}}],[\"如果小行星撞击地球\",{\"1\":{\"610\":1}}],[\"如果必须在几乎没有工具支持的情况下跨多个服务跟踪故障\",{\"1\":{\"723\":1}}],[\"如果他们开始减少在理发和汽车维修上的花费\",{\"1\":{\"648\":1}}],[\"如果他们得到了一个\",{\"1\":{\"450\":1}}],[\"如果作者的思想激起了你心智中的反应\",{\"1\":{\"628\":1}}],[\"如果思想或语言的所有人愿意起诉\",{\"1\":{\"628\":1}}],[\"如果事实真的如此\",{\"1\":{\"627\":1}}],[\"如果父母和老师们都强调道德价值\",{\"1\":{\"626\":1}}],[\"如果父亲成功地让你相信你非常关心拥有声望的职业\",{\"1\":{\"576\":1}}],[\"如果可能确定一下设么经历让你产生了这样的反应\",{\"1\":{\"623\":1}}],[\"如果可能发生让自己利益受损的情况\",{\"1\":{\"533\":1}}],[\"如果提问者接着问\",{\"1\":{\"618\":1}}],[\"如果后面一段时间的天气也这样奇怪\",{\"1\":{\"609\":1}}],[\"如果后续的访问时间与第一次访问的时间不在某个时间间隔内\",{\"1\":{\"377\":1}}],[\"如果后续的访问时间与第一次访问的时间在某个时间间隔内\",{\"1\":{\"377\":1}}],[\"如果职业就像连接各个点一样\",{\"1\":{\"588\":1}}],[\"如果被忽视\",{\"1\":{\"577\":1}}],[\"如果被选中节点已经存在于接收者的已知节点列表\",{\"1\":{\"435\":1}}],[\"如果被选中节点不存在于接收者的已知节点列表\",{\"1\":{\"435\":1}}],[\"如果翻开你对自我实现的渴望\",{\"1\":{\"577\":1}}],[\"如果失败都会让你感到很难受\",{\"1\":{\"573\":1}}],[\"如果背后的人读过\",{\"1\":{\"552\":1}}],[\"如果背包容量j为0的话\",{\"1\":{\"235\":1}}],[\"如果它通过了我们所有的检查\",{\"1\":{\"515\":1}}],[\"如果字符串包含双引号\",{\"1\":{\"483\":1}}],[\"如果字符串为空\",{\"1\":{\"480\":1}}],[\"如果参数所给的位置不是合法的字符边界\",{\"1\":{\"480\":2}}],[\"如果问你该字符串多长\",{\"1\":{\"473\":1}}],[\"如果问的是排列数\",{\"1\":{\"242\":1}}],[\"如果改成\",{\"1\":{\"468\":1}}],[\"如果想读取文件\",{\"1\":{\"1172\":1}}],[\"如果想从标准输入中读取内容\",{\"1\":{\"1172\":1}}],[\"如果想从文件中读取内容\",{\"1\":{\"1172\":1}}],[\"如果想从0开始\",{\"1\":{\"468\":1}}],[\"如果想在长期\",{\"1\":{\"806\":1}}],[\"如果想成功\",{\"1\":{\"739\":1}}],[\"如果想要致富\",{\"1\":{\"738\":1}}],[\"如果想要把字符串中的某个字符串替换成其他字符串\",{\"1\":{\"479\":1}}],[\"如果想法产生得缓慢\",{\"1\":{\"627\":1}}],[\"如果想看到节点发送的ask错误的话\",{\"1\":{\"432\":1}}],[\"如果refresh\",{\"1\":{\"1047\":1}}],[\"如果read\",{\"1\":{\"450\":1}}],[\"如果redis服务器在执行事务的过程中停机\",{\"1\":{\"424\":1}}],[\"如果函数遇到任何错误\",{\"1\":{\"450\":1}}],[\"如果这个世界在你的有生之年最终毁灭的话\",{\"1\":{\"795\":1}}],[\"如果这个世界在你的有生之年没有毁灭的话\",{\"1\":{\"795\":1}}],[\"如果这个朋友接下来进行了一次不错的第一次约会\",{\"1\":{\"585\":1}}],[\"如果这个事件是值得记录的\",{\"1\":{\"566\":1}}],[\"如果这个函数没有出任何错误成功返回\",{\"1\":{\"450\":1}}],[\"如果这些回调需要并发访问一些资源\",{\"1\":{\"1005\":1}}],[\"如果这些的回答是否\",{\"1\":{\"739\":1}}],[\"如果这些预读页如果一直不会被访问到\",{\"1\":{\"377\":1}}],[\"如果这些发行公司本身出现问题\",{\"1\":{\"184\":1}}],[\"如果这些容器是不需要的\",{\"1\":{\"55\":1}}],[\"如果调用这段代码时不存在\",{\"1\":{\"449\":1}}],[\"如果调用成功\",{\"1\":{\"448\":1}}],[\"如果针对这类result不想处理\",{\"1\":{\"449\":1}}],[\"如果当前分配大小不够\",{\"1\":{\"1150\":1}}],[\"如果当前互斥锁已经被解锁过了会直接抛出异常\",{\"1\":{\"1142\":1}}],[\"如果当前\",{\"1\":{\"1137\":1}}],[\"如果当前chan中存储的类型不是指针类型\",{\"1\":{\"1137\":1}}],[\"如果当前chan不存在缓冲区\",{\"1\":{\"1137\":1}}],[\"如果当前程序中有非常多的\",{\"1\":{\"1132\":1}}],[\"如果当前目录没有一个叫做\",{\"1\":{\"448\":1}}],[\"如果当前的命令语法有问题\",{\"1\":{\"413\":1}}],[\"如果结果有错误那就返回e类型的err\",{\"1\":{\"448\":1}}],[\"如果结果没问题\",{\"1\":{\"448\":1}}],[\"如果尝试读取一个索引不存在的元素\",{\"1\":{\"447\":1}}],[\"如果设置的超时时间过短会保护不到共享资源\",{\"1\":{\"436\":1}}],[\"如果锁的超时时间设置过长\",{\"1\":{\"436\":1}}],[\"如果锁状态是等待状态\",{\"1\":{\"374\":1}}],[\"如果发现敏感直接返回结果\",{\"1\":{\"814\":1}}],[\"如果发送者是一个从节点\",{\"1\":{\"435\":2}}],[\"如果发送者是一个主节点\",{\"1\":{\"435\":2}}],[\"如果发生越界则会发生错误\",{\"1\":{\"478\":1}}],[\"如果发生了读写冲突的时候\",{\"1\":{\"361\":1}}],[\"如果发生那么自己会有收益\",{\"1\":{\"169\":1}}],[\"如果集群里有n个具有投票权的主节点\",{\"1\":{\"433\":1}}],[\"如果集合中的元素不满足上面条件\",{\"1\":{\"408\":1}}],[\"如果集合中的元素都是整数且元素个数小于\",{\"1\":{\"408\":1}}],[\"如果槽i的确在进行迁移的话\",{\"1\":{\"432\":1}}],[\"如果节点的clusterstate\",{\"1\":{\"432\":1}}],[\"如果节点没有在自己的数据库里找到键key\",{\"1\":{\"432\":1}}],[\"如果节点收到一个键key的命令请求\",{\"1\":{\"432\":1}}],[\"如果节点只使用clusternode\",{\"1\":{\"428\":1}}],[\"如果找到了节点就直接执行客户端发送的命令\",{\"1\":{\"432\":1}}],[\"如果找到的话\",{\"1\":{\"432\":1}}],[\"如果找不到可供使用的aof文件\",{\"1\":{\"424\":1}}],[\"如果找不到可供使用的rdb文件\",{\"1\":{\"424\":1}}],[\"如果键所在的槽并没有指派给当前节点\",{\"1\":{\"429\":1}}],[\"如果键所在的槽正好就指派给了当前节点\",{\"1\":{\"429\":1}}],[\"如果键值对带有过期时间的话\",{\"1\":{\"420\":1}}],[\"如果键值对带有过期时间\",{\"1\":{\"419\":1}}],[\"如果只将槽指派信息保存在各个节点的clusternode\",{\"1\":{\"428\":1}}],[\"如果leader\",{\"1\":{\"426\":1}}],[\"如果相同的话\",{\"1\":{\"426\":1}}],[\"如果信息中记录的sentinel运行id和接收信息的sentinel的运行id相同\",{\"1\":{\"426\":1}}],[\"如果因为网络故障\",{\"1\":{\"425\":1}}],[\"如果超过一小时就会影响正常的学习和工作\",{\"1\":{\"731\":1}}],[\"如果超过1秒的话\",{\"1\":{\"425\":1}}],[\"如果超过了这个参数规定的大小\",{\"1\":{\"358\":1}}],[\"如果主服务器超过一秒钟没有收到从服务器发来的replconf\",{\"1\":{\"425\":1}}],[\"如果主服务器正在处理一个超时运行的脚本\",{\"1\":{\"425\":1}}],[\"如果主服务器向从服务器返回一个错误\",{\"1\":{\"425\":1}}],[\"如果主服务器向从服务器返回了一个命令回复\",{\"1\":{\"425\":1}}],[\"如果主服务器返回\",{\"1\":{\"425\":1}}],[\"如果主服务器返回+continue回复\",{\"1\":{\"425\":1}}],[\"如果主服务器返回+fullresync\",{\"1\":{\"425\":1}}],[\"如果主从服务器两者的偏移量并不相同\",{\"1\":{\"425\":1}}],[\"如果主从服务器处于一致状态\",{\"1\":{\"425\":1}}],[\"如果offset偏移量之后的数据已经不存在于复制积压缓冲区\",{\"1\":{\"425\":1}}],[\"如果offset偏移量之后的数据\",{\"1\":{\"425\":1}}],[\"如果条件允许\",{\"1\":{\"425\":1}}],[\"如果服务器运行在aof模式下\",{\"1\":{\"424\":1}}],[\"如果服务器运行在rdb模式下\",{\"1\":{\"424\":1}}],[\"如果服务器运行在无持久化的内存模式下\",{\"1\":{\"424\":1}}],[\"如果客户端能够和半数以上的节点成功地完成加锁操作\",{\"1\":{\"437\":1}}],[\"如果客户端向节点发送一个关于槽i的命令\",{\"1\":{\"432\":1}}],[\"如果客户端还没有与想要转向的节点建立socket连接\",{\"1\":{\"429\":1}}],[\"如果客户端的redis\",{\"1\":{\"424\":2}}],[\"如果客户端发送的命令为exec\",{\"1\":{\"424\":1}}],[\"如果客户端为空\",{\"1\":{\"423\":1}}],[\"如果给定pattern参数\",{\"1\":{\"423\":1}}],[\"如果满足的话就执行bgsave命令\",{\"1\":{\"417\":1}}],[\"如果bgsave同时执行\",{\"1\":{\"416\":1}}],[\"如果过期则删除该\",{\"1\":{\"414\":1}}],[\"如果比系统时间大\",{\"1\":{\"414\":1}}],[\"如果存在任何位置参数\",{\"1\":{\"991\":1}}],[\"如果存在\",{\"1\":{\"414\":1}}],[\"如果存在并发\",{\"1\":{\"383\":1}}],[\"如果从字符的形式去看\",{\"1\":{\"474\":1}}],[\"如果从服务器masterauth选项的值为10086\",{\"1\":{\"425\":1}}],[\"如果从服务器没有设置masterauth选项\",{\"1\":{\"425\":1}}],[\"如果从服务器设置了masterauth选项\",{\"1\":{\"425\":1}}],[\"如果从服务器读取到\",{\"1\":{\"425\":1}}],[\"如果从服务器创建的套接字能成功连接\",{\"1\":{\"425\":1}}],[\"如果从服务器已经复制过某个主服务器\",{\"1\":{\"425\":1}}],[\"如果从服务器以前没有复制过任何主服务器\",{\"1\":{\"425\":1}}],[\"如果从服务器保存的运行id和当前连接的主服务器的运行id并不相同\",{\"1\":{\"425\":1}}],[\"如果从服务器保存的运行id和当前连接的主服务器的运行id相同\",{\"1\":{\"425\":1}}],[\"如果从服务器还没有执行主服务器同步过来的命令\",{\"1\":{\"413\":1}}],[\"如果从这个\",{\"1\":{\"68\":1}}],[\"如果开启混合持久化\",{\"1\":{\"413\":1}}],[\"如果频率太低\",{\"1\":{\"413\":1}}],[\"如果频率太频繁\",{\"1\":{\"413\":1}}],[\"如果把这些任务都放在主线程来处理\",{\"1\":{\"411\":1}}],[\"如果把dp数组预先初始化为0了\",{\"1\":{\"235\":1}}],[\"如果哈希类型元素不满足上面条件\",{\"1\":{\"406\":1}}],[\"如果哈希类型元素个数小于\",{\"1\":{\"406\":1}}],[\"如果列表没有元素会阻塞列表直到超时或有元素可弹出为止\",{\"1\":{\"405\":2}}],[\"如果列表的元素不满足上面的条件\",{\"1\":{\"404\":1}}],[\"如果列表的元素个数小于\",{\"1\":{\"404\":1}}],[\"如果空间不不够\",{\"1\":{\"399\":1}}],[\"如果空间不够会自动扩容\",{\"1\":{\"393\":1,\"402\":1}}],[\"如果没找到的话\",{\"1\":{\"396\":1}}],[\"如果没有通过cas获得锁\",{\"1\":{\"1142\":1}}],[\"如果没有加密处理\",{\"1\":{\"1099\":1}}],[\"如果没有剩余\",{\"1\":{\"1033\":1}}],[\"如果没有时间去健身房\",{\"1\":{\"789\":1}}],[\"如果没有收益\",{\"1\":{\"647\":1,\"686\":1}}],[\"如果没有的话就为null\",{\"1\":{\"427\":1}}],[\"如果没有就回滚事务\",{\"1\":{\"360\":1}}],[\"如果没有\",{\"1\":{\"322\":1,\"368\":1,\"1135\":1}}],[\"如果没有发生则自己会亏损\",{\"1\":{\"169\":1}}],[\"如果没有提供setloadedaccountsdatasizelimit\",{\"1\":{\"120\":1}}],[\"如果没有找到对应的服务镜像\",{\"1\":{\"57\":1}}],[\"如果执行的是收缩操作\",{\"1\":{\"395\":1}}],[\"如果执行的是扩展操作\",{\"1\":{\"395\":1}}],[\"如果目前没有在进行rehash\",{\"1\":{\"395\":1}}],[\"如果目录下有些东西确实不希望构建时传给\",{\"1\":{\"60\":1}}],[\"如果缓存不存在\",{\"1\":{\"382\":1}}],[\"如果间断出现这种现象\",{\"1\":{\"377\":1}}],[\"如果淘汰的是脏页\",{\"1\":{\"377\":1}}],[\"如果预读的页一直没有被访问\",{\"1\":{\"377\":1}}],[\"如果预言机被攻击则几乎所有defi协议都会有风险\",{\"1\":{\"165\":1}}],[\"如果记录的\",{\"1\":{\"362\":5}}],[\"如果出现前后两次查询到的记录数量不一样的情况\",{\"1\":{\"361\":1}}],[\"如果出现前后两次读到的数据不一样的情况\",{\"1\":{\"361\":1}}],[\"如果出现了错误或者用户执\",{\"1\":{\"356\":1}}],[\"如果一家公司给你的薪水是20k\",{\"1\":{\"792\":1}}],[\"如果一家大型超市进城\",{\"1\":{\"648\":1}}],[\"如果一些事情有益\",{\"1\":{\"739\":1}}],[\"如果一些想法突然地匆忙到来\",{\"1\":{\"627\":1}}],[\"如果一篇文章全是以自己的理解\",{\"1\":{\"660\":1}}],[\"如果一切顺利\",{\"1\":{\"427\":3}}],[\"如果一个产品没有社区\",{\"1\":{\"801\":1}}],[\"如果一个区块链没有开放源代码\",{\"1\":{\"801\":1}}],[\"如果一个人会种田\",{\"1\":{\"746\":1}}],[\"如果一个人有正事去做\",{\"1\":{\"634\":1}}],[\"如果一个人由于气候原因原先所在的地区已经不适合生存了\",{\"1\":{\"609\":1}}],[\"如果一个人处于高度透明的世界\",{\"1\":{\"533\":1}}],[\"如果一个朋友在烦恼自己想和什么样的人结婚\",{\"1\":{\"585\":1}}],[\"如果一个主节点具有投票权\",{\"1\":{\"433\":1}}],[\"如果一个集群中半数以上负责槽的主节点都将节点x报告为疑似下线\",{\"1\":{\"433\":1}}],[\"如果一个\",{\"1\":{\"414\":1,\"1142\":1}}],[\"如果一个事务获取了\",{\"1\":{\"373\":1}}],[\"如果一个事务\",{\"1\":{\"361\":1}}],[\"如果一棵二叉树和它的镜像一样\",{\"1\":{\"299\":1}}],[\"如果多表更新相关数据\",{\"1\":{\"361\":1}}],[\"如果说间隙锁锁住的是一个区间\",{\"1\":{\"374\":1}}],[\"如果说\",{\"1\":{\"360\":1}}],[\"如果能容少量事务的\",{\"1\":{\"358\":1}}],[\"如果默认开启\",{\"1\":{\"356\":1}}],[\"如果索引中存在这些数据\",{\"1\":{\"353\":1}}],[\"如果数据直接存在buffer\",{\"1\":{\"376\":1}}],[\"如果数据库在执行事务之前是一致的\",{\"1\":{\"424\":1}}],[\"如果数据库的数据库状态为空则这部位为空\",{\"1\":{\"418\":1}}],[\"如果数据库的引擎支持的事务支持可重复读的隔离级别\",{\"1\":{\"364\":1}}],[\"如果数据库某个过期键还没被删除\",{\"1\":{\"414\":1}}],[\"如果数据库表中\",{\"1\":{\"352\":1}}],[\"如果数量太多要一个个删除可能会很麻烦\",{\"1\":{\"72\":1}}],[\"如果起不到定位的字段通常是不需要创建索引的\",{\"1\":{\"352\":1}}],[\"如果查询条件不是一个字段\",{\"1\":{\"351\":1}}],[\"如果查询的语句没有命中查询缓存中\",{\"1\":{\"343\":1}}],[\"如果查询的语句命中查询缓存\",{\"1\":{\"343\":1}}],[\"如果两个单词间有多余的空格\",{\"1\":{\"333\":1}}],[\"如果两间相邻的房屋在同一晚上被小偷闯入\",{\"1\":{\"249\":1}}],[\"如果某个\",{\"1\":{\"437\":1}}],[\"如果某二叉树中任意节点的左右子树的深度相差不超过1\",{\"1\":{\"329\":1}}],[\"如果某一问题有很多重叠子问题\",{\"1\":{\"224\":1}}],[\"如果前面一个数字大于后面的数字\",{\"1\":{\"323\":1}}],[\"如果有更复杂的需求\",{\"1\":{\"1183\":1}}],[\"如果有需要的话\",{\"1\":{\"1156\":1}}],[\"如果有网络协程\",{\"1\":{\"1135\":1}}],[\"如果有剩余\",{\"1\":{\"1033\":1}}],[\"如果有任何位置参数不在命令的\",{\"1\":{\"991\":1}}],[\"如果有两个有序数组\",{\"1\":{\"948\":1}}],[\"如果有人能以更低的价格做同样的工作\",{\"1\":{\"751\":1}}],[\"如果有人反对自己的观点\",{\"1\":{\"528\":1}}],[\"如果有足够的时间\",{\"1\":{\"580\":1}}],[\"如果有一个节点不符合大顶堆\",{\"1\":{\"950\":1}}],[\"如果有一个人明目张胆站在你面前说你的回答错了\",{\"1\":{\"692\":1}}],[\"如果有一个或多个模式和频道匹配那么将消息message发送给pattern模式的订阅者\",{\"1\":{\"423\":1}}],[\"如果有一条职业道路听起来对你很棒\",{\"1\":{\"574\":1}}],[\"如果有超过半数的\",{\"1\":{\"437\":1}}],[\"如果有多个优先级最高\",{\"1\":{\"426\":1}}],[\"如果有多个具有相同最高优先级的从服务器\",{\"1\":{\"426\":1}}],[\"如果有多对数字的和等于s\",{\"1\":{\"332\":1}}],[\"如果有某个sentinel被半数以上的sentinel设置成了局部领头sentinel\",{\"1\":{\"426\":1}}],[\"如果有客户端访问从库时\",{\"1\":{\"414\":1}}],[\"如果有序集合的元素不满足上面的条件\",{\"1\":{\"410\":1}}],[\"如果有序集合的元素个数小于\",{\"1\":{\"410\":1}}],[\"如果有\",{\"1\":{\"384\":1}}],[\"如果有的话\",{\"1\":{\"374\":1,\"424\":1,\"577\":1,\"772\":1}}],[\"如果有就意味着表里已经有记录被加了独占锁\",{\"1\":{\"368\":1}}],[\"如果有就提交事务\",{\"1\":{\"360\":1}}],[\"如果有其他线程执行了\",{\"1\":{\"367\":1}}],[\"如果有其他线程要更改该表的结构\",{\"1\":{\"367\":1}}],[\"如果有其他事务在\",{\"1\":{\"361\":1,\"362\":1}}],[\"如果有重复的直接返回这个题解写的不错\",{\"1\":{\"275\":1}}],[\"如果有用这个镜像启动的容器存在\",{\"1\":{\"55\":1}}],[\"如果slots\",{\"1\":{\"428\":2}}],[\"如果slots数组在索引i上的二进制位的值为0\",{\"1\":{\"428\":1}}],[\"如果slots数组在索引i上的二进制位的值为1\",{\"1\":{\"428\":1}}],[\"如果sentinel在启动时载入了以下配置\",{\"1\":{\"426\":1}}],[\"如果sentinel1载入了以下配置\",{\"1\":{\"426\":1}}],[\"如果s\",{\"1\":{\"268\":2}}],[\"如果哪里看不懂\",{\"1\":{\"266\":1}}],[\"如果text1\",{\"1\":{\"260\":2}}],[\"如果和b\",{\"1\":{\"259\":1}}],[\"如果nums\",{\"1\":{\"258\":1,\"259\":1}}],[\"如果对于每个\",{\"1\":{\"258\":1}}],[\"如果对应上面的命令格式\",{\"1\":{\"60\":1}}],[\"如果第i天不持有股票即dp\",{\"1\":{\"252\":1}}],[\"如果第i天持有股票即dp\",{\"1\":{\"252\":1}}],[\"如果第一次取了1\",{\"1\":{\"218\":1}}],[\"如果偷第i房间\",{\"1\":{\"248\":1}}],[\"如果dp\",{\"1\":{\"243\":1}}],[\"如果先遍历背包\",{\"1\":{\"242\":1}}],[\"如果先遍历物品\",{\"1\":{\"242\":1}}],[\"如果题目给的价值都是正整数那么非0下标都初始化为0就可以了\",{\"1\":{\"236\":1}}],[\"如果定义dp\",{\"1\":{\"231\":1}}],[\"如果已经登录则重定向到首页即可\",{\"1\":{\"200\":1}}],[\"如果我遇到这个问题\",{\"1\":{\"776\":1}}],[\"如果我像绝大多数消费者一样思考\",{\"1\":{\"739\":1}}],[\"如果我的内容质量高\",{\"1\":{\"660\":1}}],[\"如果我改变了主意\",{\"1\":{\"577\":1}}],[\"如果我借出\",{\"1\":{\"164\":1}}],[\"如果我们将类型转换成了\",{\"1\":{\"1138\":1}}],[\"如果我们在调用时将block参数设置为true\",{\"1\":{\"1137\":1}}],[\"如果我们不向\",{\"1\":{\"1137\":1}}],[\"如果我们不传值\",{\"1\":{\"1054\":1}}],[\"如果我们发现锁被占用\",{\"1\":{\"1135\":1}}],[\"如果我们误传了一个错误的\",{\"1\":{\"1088\":1}}],[\"如果我们的客户端这么写\",{\"1\":{\"1088\":1}}],[\"如果我们为getinfo编写单元测试的时候calcage方法的功能还未完成\",{\"1\":{\"978\":1}}],[\"如果我们希望第一个参数必须是x\",{\"1\":{\"977\":1}}],[\"如果我们没有对函数\",{\"1\":{\"960\":1}}],[\"如果我们能够意识到我们所遇到的观念的紧密联系和含义\",{\"1\":{\"620\":1}}],[\"如果我们内心有丝毫的拖延倾向\",{\"1\":{\"586\":1}}],[\"如果我们把自己看作是科学家\",{\"1\":{\"585\":1}}],[\"如果我们需要在运行期\",{\"1\":{\"462\":1}}],[\"如果我们向主服务器提供以下设置\",{\"1\":{\"425\":1}}],[\"如果我们向服务器提供save\",{\"1\":{\"417\":1}}],[\"如果我们要排序数组中从p到r的数据\",{\"1\":{\"949\":1}}],[\"如果我们要查找定位第⼀个元素和最后⼀个元素\",{\"1\":{\"399\":1}}],[\"如果我们要删除\",{\"1\":{\"55\":1}}],[\"如果我们想配置别的类型只需要\",{\"1\":{\"1179\":1}}],[\"如果我们想设置更多的信息\",{\"1\":{\"1179\":1}}],[\"如果我们想要搞清楚这个问题\",{\"1\":{\"1138\":1}}],[\"如果我们想自己写各种遍历实现就会针对不同的类型写很多功能相同的函数\",{\"1\":{\"1019\":1}}],[\"如果我们想遍历一个切片则可以\",{\"1\":{\"1019\":1}}],[\"如果我们想对学生表\",{\"1\":{\"366\":1}}],[\"如果我们想使用email登录\",{\"1\":{\"194\":1}}],[\"如果我们使用非自增主键\",{\"1\":{\"353\":1}}],[\"如果我们使用自增主键\",{\"1\":{\"353\":1}}],[\"如果我们输入的\",{\"1\":{\"345\":1}}],[\"如果我们可以把每一层修改\",{\"1\":{\"56\":1}}],[\"如果我们打算启动里面的\",{\"1\":{\"50\":1}}],[\"如果资产被借出\",{\"1\":{\"160\":1}}],[\"如果总资产或总债务为0\",{\"1\":{\"152\":1}}],[\"如果时间差为0\",{\"1\":{\"152\":1}}],[\"如果升级权限被撤销并设置为\",{\"1\":{\"127\":1}}],[\"如果余额不足则交易终止并导致交易失败\",{\"1\":{\"118\":1}}],[\"如果交易所不允许您提取代币\",{\"1\":{\"703\":1,\"706\":1}}],[\"如果交易所不允许您提取代币并告诉您他们将发布\",{\"1\":{\"703\":1}}],[\"如果交易指令中有任何指令失败\",{\"1\":{\"118\":1}}],[\"如果交易的区块哈希比最新的区块哈希早\",{\"1\":{\"117\":1}}],[\"如果交易中的任何指令失败\",{\"1\":{\"116\":1}}],[\"如果交易包含多条指令\",{\"1\":{\"116\":1}}],[\"如果帐户是一个程序\",{\"1\":{\"111\":1}}],[\"如果运行的代码没问题\",{\"1\":{\"105\":1}}],[\"如果要使用hmac\",{\"1\":{\"1047\":1}}],[\"如果要公开\",{\"1\":{\"660\":1}}],[\"如果要在查询时对记录加行锁\",{\"1\":{\"370\":1}}],[\"如果要释放全局锁\",{\"1\":{\"364\":1}}],[\"如果要删除一个运行中的容器\",{\"1\":{\"71\":1}}],[\"如果要删除本地的镜像\",{\"1\":{\"55\":1}}],[\"如果要导出本地某个容器\",{\"1\":{\"69\":1}}],[\"如果不满足上面的两种情况\",{\"1\":{\"1137\":1}}],[\"如果不想等待\",{\"1\":{\"1037\":1}}],[\"如果不想在测试过程中真正去发送请求或者依赖的外部接口还没有开发完成时\",{\"1\":{\"973\":1}}],[\"如果不接受\",{\"1\":{\"1009\":1}}],[\"如果不修改系统时间\",{\"1\":{\"979\":1}}],[\"如果不是的话\",{\"1\":{\"585\":1}}],[\"如果不小心\",{\"1\":{\"573\":1}}],[\"如果不小心整个数据库的数据被删除了\",{\"1\":{\"358\":1}}],[\"如果不了解也没关系\",{\"1\":{\"516\":1}}],[\"如果不给定pattern参数\",{\"1\":{\"423\":1}}],[\"如果不给出用户名\",{\"1\":{\"49\":1}}],[\"如果不给出标签\",{\"1\":{\"48\":1}}],[\"如果不加以控制的话\",{\"1\":{\"422\":1}}],[\"如果不在\",{\"1\":{\"414\":1}}],[\"如果不理解\",{\"1\":{\"263\":1}}],[\"如果不存在\",{\"1\":{\"260\":1}}],[\"如果不偷第i房间\",{\"1\":{\"248\":1}}],[\"如果不使用\",{\"1\":{\"66\":1}}],[\"如果不额外指定\",{\"1\":{\"60\":1}}],[\"如果观察\",{\"1\":{\"60\":1}}],[\"如果观察上面这几个命令的运行输出信息的话\",{\"1\":{\"55\":1}}],[\"如果真的需要那些文件\",{\"1\":{\"60\":1}}],[\"如果在你进行审查之前\",{\"1\":{\"585\":1}}],[\"如果在一个配置纪元里面没有从节点能收集到足够多的支持票\",{\"1\":{\"433\":1}}],[\"如果在给定时限内\",{\"1\":{\"426\":1}}],[\"如果在信息发送时\",{\"1\":{\"426\":1}}],[\"如果在执行失败的线程中一直重试\",{\"1\":{\"385\":1}}],[\"如果在脏页还没有来得及刷入到磁盘时\",{\"1\":{\"377\":1}}],[\"如果在\",{\"1\":{\"60\":1,\"353\":1,\"436\":1}}],[\"如果注意\",{\"1\":{\"60\":1}}],[\"如果使用得当能够在高并发的场景下更高效地利用机器的cpu\",{\"1\":{\"1132\":1}}],[\"如果使用简单的\",{\"1\":{\"377\":1}}],[\"如果使用一维dp数组\",{\"1\":{\"237\":1}}],[\"如果使用了\",{\"1\":{\"66\":1}}],[\"如果使用\",{\"1\":{\"55\":1,\"386\":1}}],[\"如果是你\",{\"1\":{\"751\":1}}],[\"如果是这样\",{\"1\":{\"626\":1}}],[\"如果是这样的话\",{\"1\":{\"577\":1}}],[\"如果是这种情况\",{\"1\":{\"55\":1}}],[\"如果是的话\",{\"1\":{\"424\":1,\"585\":1}}],[\"如果是更新操作\",{\"1\":{\"357\":1}}],[\"如果是则返回\",{\"1\":{\"306\":1}}],[\"如果是dp\",{\"1\":{\"267\":1}}],[\"如果是安装软件包\",{\"1\":{\"55\":1}}],[\"如果仔细观察之前的\",{\"1\":{\"55\":1}}],[\"如果希望显示包括中间层镜像在内的所有镜像的话\",{\"1\":{\"53\":1}}],[\"如果忽略了标签\",{\"1\":{\"48\":1}}],[\"如果您尝试使用保留的字段号定义新的字段\",{\"1\":{\"1084\":1}}],[\"如果您定义了一个新的字段并使用了已经保留的字段号\",{\"1\":{\"1084\":1}}],[\"如果您遇到您喜欢的话题\",{\"1\":{\"40\":1}}],[\"如果您在mixin中还没有任何加密货币\",{\"1\":{\"36\":1}}],[\"如果您有任何疑问或者建议\",{\"1\":{\"28\":1}}],[\"如果你使用第一种传统的方式进行初始化\",{\"1\":{\"1225\":1}}],[\"如果你使用其他端口\",{\"1\":{\"192\":1}}],[\"如果你还有其他想要了解的话题\",{\"1\":{\"828\":1}}],[\"如果你还不了解go语言是如何启用web服务\",{\"1\":{\"516\":1}}],[\"如果你做了选择了这样\",{\"1\":{\"806\":1}}],[\"如果你没有钱\",{\"1\":{\"795\":1}}],[\"如果你赚了钱\",{\"1\":{\"795\":1}}],[\"如果你无法为言论负责\",{\"1\":{\"784\":1}}],[\"如果你了解历史\",{\"1\":{\"783\":1}}],[\"如果你不断地用刺激轰炸它\",{\"1\":{\"789\":1}}],[\"如果你不知道休息\",{\"1\":{\"788\":1}}],[\"如果你不想落后\",{\"1\":{\"771\":1}}],[\"如果你不能获取任何利润\",{\"1\":{\"252\":1}}],[\"如果你问他们哪些歌实际上好听\",{\"1\":{\"771\":1}}],[\"如果你把目标定的小一些例如只在二线城市财富自由\",{\"1\":{\"767\":1}}],[\"如果你把篮球交给25岁的迈克尔\",{\"1\":{\"583\":1}}],[\"如果你只能选择进入写字楼\",{\"1\":{\"789\":1}}],[\"如果你只考虑最近两天\",{\"1\":{\"759\":1}}],[\"如果你只是想写出人云亦云的东西\",{\"1\":{\"605\":1}}],[\"如果你有智能手表\",{\"1\":{\"772\":1}}],[\"如果你有一百万美金\",{\"1\":{\"754\":1}}],[\"如果你有留意观察很多数据库的特性\",{\"1\":{\"385\":1}}],[\"如果你雇一个新的清洁工\",{\"1\":{\"751\":1}}],[\"如果你决定从海外雇一个清洁工\",{\"1\":{\"751\":1}}],[\"如果你近十年的热点你都没有参与\",{\"1\":{\"734\":1}}],[\"如果你自己做过企业就知道了\",{\"1\":{\"714\":1}}],[\"如果你真的是一名不想让自己所有数据都上云的人\",{\"1\":{\"710\":1}}],[\"如果你对暂时的愤怒保持冷静\",{\"1\":{\"653\":1}}],[\"如果你对这一切还有辩解\",{\"1\":{\"534\":1}}],[\"如果你已很好地记录下你的发现\",{\"1\":{\"627\":1}}],[\"如果你已经决定迈出人生的一步\",{\"1\":{\"586\":1}}],[\"如果你是个上进的人\",{\"1\":{\"734\":1}}],[\"如果你是习惯了云服务的用户想迁移数据到非云\",{\"1\":{\"710\":1}}],[\"如果你是80年代在中国出生\",{\"1\":{\"619\":1}}],[\"如果你是一名求职者\",{\"1\":{\"772\":1}}],[\"如果你是一名计算机科学专业的大学毕业生\",{\"1\":{\"580\":1}}],[\"如果你是一个合法公民\",{\"1\":{\"533\":1}}],[\"如果你是一个加密新手\",{\"1\":{\"36\":1}}],[\"如果你出生在19世纪\",{\"1\":{\"619\":1}}],[\"如果你觉得情况真正发生了变化\",{\"1\":{\"588\":1}}],[\"如果你觉得对于某个职业道路来说\",{\"1\":{\"584\":1}}],[\"如果你内心的分析确实要求你在职业上迈向新的方向\",{\"1\":{\"586\":1}}],[\"如果你看看自己和你的朋友\",{\"1\":{\"585\":1}}],[\"如果你看一下你的英雄们的传记\",{\"1\":{\"585\":1}}],[\"如果你仅仅了解游戏棋盘的真实面貌\",{\"1\":{\"579\":1}}],[\"如果你能搞清楚如何合理准确地了解真实的职业前景\",{\"1\":{\"579\":1}}],[\"如果你生活在\",{\"1\":{\"578\":1}}],[\"如果你足够聪明并努力工作\",{\"1\":{\"578\":1}}],[\"如果你继续下去\",{\"1\":{\"575\":1}}],[\"如果你认为这是因为害怕失败\",{\"1\":{\"574\":1}}],[\"如果你目前没有朝着你所渴望的职业发展\",{\"1\":{\"574\":1}}],[\"如果你长期注重于隐私保护\",{\"1\":{\"551\":1}}],[\"如果你在市场上重新雇一个清洁工\",{\"1\":{\"751\":1}}],[\"如果你在中东长大\",{\"1\":{\"619\":1}}],[\"如果你在职业生涯的某个点上\",{\"1\":{\"587\":1}}],[\"如果你在经过两三年的努力后就放弃了\",{\"1\":{\"582\":1}}],[\"如果你在整个游戏中变得足够出色\",{\"1\":{\"580\":1}}],[\"如果你在使用过程中有任何问题\",{\"1\":{\"521\":1}}],[\"如果你在容器内\",{\"1\":{\"74\":1}}],[\"如果你想添加不同的命令还可以继续做\",{\"1\":{\"989\":1}}],[\"如果你想将来不成为技术文盲\",{\"1\":{\"771\":1}}],[\"如果你想在此刻变得流行\",{\"1\":{\"735\":1}}],[\"如果你想建立一家公司\",{\"1\":{\"663\":1}}],[\"如果你想生产产品和服务\",{\"1\":{\"648\":1}}],[\"如果你想写出很优美的代码\",{\"1\":{\"605\":1}}],[\"如果你想成为一名顶级外科医生\",{\"1\":{\"580\":1}}],[\"如果你想真正学会本篇的区块链教程\",{\"1\":{\"512\":1}}],[\"如果你想要的选择还没有出现\",{\"1\":{\"579\":1}}],[\"如果你想要以\",{\"1\":{\"485\":1}}],[\"如果你想要使用服务的多核cpu\",{\"1\":{\"412\":1}}],[\"如果你想保护api路由\",{\"1\":{\"199\":1}}],[\"如果你发现自己在生活中持续不执行计划和对自己的承诺\",{\"1\":{\"586\":1}}],[\"如果你发现\",{\"1\":{\"377\":1}}],[\"如果你的连接是指向固定的\",{\"1\":{\"1225\":1}}],[\"如果你的睡眠不足\",{\"1\":{\"789\":1}}],[\"如果你的言论可能给你带来危险\",{\"1\":{\"784\":1}}],[\"如果你的学习内容无法帮助你做出可销售的产品\",{\"1\":{\"776\":1}}],[\"如果你的电脑坏了\",{\"1\":{\"772\":1}}],[\"如果你的界面过多\",{\"1\":{\"731\":1}}],[\"如果你的规模无论如何都需要这种复杂性\",{\"1\":{\"723\":1}}],[\"如果你的企业小有成就\",{\"1\":{\"714\":1}}],[\"如果你的目标是创建新的谷歌\",{\"1\":{\"580\":1}}],[\"如果你的行为似乎受制于渴望\",{\"1\":{\"577\":1}}],[\"如果你的行动似乎与你认为的内心渴望层次不符\",{\"1\":{\"577\":1}}],[\"如果你的切片想要包含string的最后一个字节\",{\"1\":{\"468\":1}}],[\"如果你的控制台需要角色去管理的话\",{\"1\":{\"195\":1}}],[\"如果你的投资预测是正确的那么您将获得回报\",{\"1\":{\"19\":1,\"34\":1}}],[\"如果你遇到了额外问题\",{\"1\":{\"192\":1}}],[\"如果你以\",{\"1\":{\"57\":1}}],[\"如果\",{\"1\":{\"27\":1,\"284\":1,\"343\":1,\"357\":1,\"360\":4,\"362\":1,\"403\":1,\"414\":2,\"448\":2,\"449\":2,\"450\":1,\"528\":1,\"1088\":2,\"1135\":4,\"1137\":5}}],[\"如果话题的最终结果是no\",{\"1\":{\"26\":1}}],[\"如果话题的最终结果是yes\",{\"1\":{\"26\":1}}],[\"如何尽快适应呢\",{\"1\":{\"1186\":1}}],[\"如何\",{\"1\":{\"1071\":1}}],[\"如何从特定问题中抽象出可以普遍应用的通用工具\",{\"1\":{\"1011\":1}}],[\"如何不成为技术文盲\",{\"0\":{\"770\":1}}],[\"如何应对\",{\"0\":{\"748\":1}}],[\"如何选择影响我们的信息就变的非常重要了\",{\"1\":{\"677\":1}}],[\"如何选择真正适合你的职业\",{\"0\":{\"569\":1},\"1\":{\"569\":1}}],[\"如何消费有价值的信息\",{\"1\":{\"677\":1}}],[\"如何将自己读到的\",{\"1\":{\"660\":1}}],[\"如何将输出的内容规模化\",{\"1\":{\"660\":1}}],[\"如何整理自己的思绪\",{\"1\":{\"660\":1}}],[\"如何找到让自己充满激情的事业\",{\"1\":{\"634\":1}}],[\"如何判断你达到任何特定星星的机会\",{\"1\":{\"580\":1}}],[\"如何了解一个package\",{\"0\":{\"512\":1}}],[\"如何解决集群情况下分布式锁的可靠性\",{\"0\":{\"437\":1}}],[\"如何加载rdb文件呢\",{\"1\":{\"416\":1}}],[\"如何实现服务高可用\",{\"1\":{\"413\":1}}],[\"如何实现数据不丢失\",{\"1\":{\"413\":1}}],[\"如何保证两步都执行成功\",{\"0\":{\"385\":1},\"1\":{\"380\":1}}],[\"如何提高缓冲命中率\",{\"1\":{\"377\":1}}],[\"如何管理脏页\",{\"1\":{\"377\":1}}],[\"如何管理空闲页\",{\"1\":{\"377\":1}}],[\"如何管理buffer\",{\"0\":{\"377\":1}}],[\"如何为存储的数据建立索引和如何更新\",{\"1\":{\"350\":1}}],[\"如何编辑呢\",{\"1\":{\"266\":1}}],[\"如何通过pusd的套利\",{\"0\":{\"172\":1}}],[\"如何才能让服务端获得本地文件呢\",{\"1\":{\"60\":1}}],[\"如何打破垄断\",{\"1\":{\"11\":1}}],[\"如何做一个生产者\",{\"0\":{\"740\":1}}],[\"如何做\",{\"1\":{\"11\":1}}],[\"如何叫有效的创新\",{\"1\":{\"11\":1}}],[\"你现在知道定义了\",{\"1\":{\"1186\":1}}],[\"你现在有一个新的选择池\",{\"1\":{\"584\":1}}],[\"你希望每个成员都能在规定的时间内完成自己的任务\",{\"1\":{\"1156\":1}}],[\"你负责协调团队中的各个成员完成任务\",{\"1\":{\"1156\":1}}],[\"你首先需要在本地创建一个go\",{\"1\":{\"989\":1}}],[\"你依然会死的很惨\",{\"1\":{\"799\":1}}],[\"你完全不知道如何使用\",{\"1\":{\"772\":1}}],[\"你每次都得叫别人\",{\"1\":{\"772\":1}}],[\"你每天使用的微信\",{\"1\":{\"709\":1}}],[\"你认为只有中国大陆是这样吗\",{\"1\":{\"795\":1}}],[\"你认为健身追踪器\",{\"1\":{\"772\":1}}],[\"你认为它们是\",{\"1\":{\"772\":1}}],[\"你讨厌智能手表\",{\"1\":{\"772\":1}}],[\"你没有简历的数字版本\",{\"1\":{\"772\":1}}],[\"你没有家庭自动化电子设备\",{\"1\":{\"772\":1}}],[\"你没有任何加密货币\",{\"0\":{\"36\":1}}],[\"你几乎总是更喜欢纸质版\",{\"1\":{\"772\":1}}],[\"你主要使用传统搜索引擎如谷歌\",{\"1\":{\"772\":1}}],[\"你从未使用过数字签名\",{\"1\":{\"772\":1}}],[\"你从未使用过现代\",{\"1\":{\"772\":1}}],[\"你从未创建过一个网站\",{\"1\":{\"772\":1}}],[\"你从未从任何\",{\"1\":{\"772\":1}}],[\"你从未进行过加密货币交易\",{\"1\":{\"772\":1}}],[\"你从未停下来问自己\",{\"1\":{\"575\":1}}],[\"你瞧\",{\"1\":{\"771\":1}}],[\"你得问问自己\",{\"1\":{\"771\":1}}],[\"你得为他的文件手续提供担保\",{\"1\":{\"751\":1}}],[\"你拒绝学习新技术\",{\"1\":{\"771\":1}}],[\"你宁愿花\",{\"1\":{\"751\":1}}],[\"你雇他是为了让他为你做一份工作\",{\"1\":{\"751\":1}}],[\"你雇他不是为了确保他的生计\",{\"1\":{\"751\":1}}],[\"你们当中有一些人会出于善良留下老清洁工\",{\"1\":{\"751\":1}}],[\"你被雇来做一份工作\",{\"1\":{\"751\":1}}],[\"你被降职了\",{\"1\":{\"751\":1}}],[\"你被警告了\",{\"1\":{\"706\":1}}],[\"你遇到了一些经济困难\",{\"1\":{\"751\":1}}],[\"你当初雇他的时候\",{\"1\":{\"751\":1}}],[\"你当前的进展程度\",{\"1\":{\"580\":1}}],[\"你为不上云所付出的代价\",{\"1\":{\"710\":1}}],[\"你为不上云所付出的有什么\",{\"1\":{\"709\":1}}],[\"你想在anytype上体验notion近乎无限制的云功能\",{\"1\":{\"710\":1}}],[\"你想要什么\",{\"1\":{\"569\":1}}],[\"你真的有思考这些现象吗\",{\"1\":{\"795\":1}}],[\"你真的有选择不用云吗\",{\"0\":{\"709\":1}}],[\"你真正的现实范围实际上包括了你认为在一生的努力中\",{\"1\":{\"584\":1}}],[\"你真正的优势和劣势\",{\"0\":{\"583\":1}}],[\"你怎么知道交易所实际上有比特币\",{\"1\":{\"703\":1}}],[\"你平时跟什么样的人打交道\",{\"1\":{\"689\":1}}],[\"你身边一定有出现过这种声音或者曾经出现过\",{\"1\":{\"683\":1}}],[\"你正在选择购买一辆汽车\",{\"1\":{\"683\":1}}],[\"你正在努力的事情可能会成为你最终引以为傲的拼图的一部分\",{\"1\":{\"587\":1}}],[\"你有多久没好好休息了\",{\"0\":{\"787\":1}}],[\"你有多少资产\",{\"1\":{\"754\":1}}],[\"你有多痛苦你就明白了\",{\"1\":{\"683\":1}}],[\"你有\",{\"1\":{\"751\":1}}],[\"你有没有想过\",{\"1\":{\"677\":1}}],[\"你有加密货币但没有pusd\",{\"0\":{\"37\":1}}],[\"你看想清楚一个概念很重要吧\",{\"1\":{\"673\":1}}],[\"你看其实差不多吧\",{\"1\":{\"278\":1}}],[\"你肯定听说过谣言游戏\",{\"1\":{\"654\":1}}],[\"你知道助忆词\",{\"1\":{\"701\":1}}],[\"你知道一些这样的例子\",{\"1\":{\"643\":1}}],[\"你知道你拥有了你所能期望的一切\",{\"1\":{\"587\":1}}],[\"你听到过一句老话\",{\"1\":{\"639\":1}}],[\"你觉得周杰伦的歌怎么样\",{\"1\":{\"631\":1}}],[\"你觉得传统智慧会给我这样的职位描述吗\",{\"1\":{\"579\":1}}],[\"你所有的朋友都在解雇他们的老清洁工\",{\"1\":{\"751\":1}}],[\"你所遇到无数想法会以类似的方式影响你的信仰和行为\",{\"1\":{\"620\":1}}],[\"你所做的比线性代数更有价值\",{\"0\":{\"537\":1}}],[\"你天天刷牙洗漱对自己的身体卫生那么在意\",{\"1\":{\"605\":1}}],[\"你以后可以回到宏观的视野\",{\"1\":{\"587\":1}}],[\"你感到纯粹幸福的时刻是短暂的\",{\"1\":{\"587\":1}}],[\"你感到强烈的驱动力想要实现这个目标\",{\"1\":{\"574\":1}}],[\"你做出了其他选择的自己\",{\"1\":{\"587\":1}}],[\"你都需要明白\",{\"1\":{\"711\":1}}],[\"你都需要对这种感觉进行剖析\",{\"1\":{\"574\":1}}],[\"你都会承受你曾经考虑过但选择不走的道路的机会成本\",{\"1\":{\"587\":1}}],[\"你之前在章鱼等级中深思熟虑地降低优先级的所有恐惧会认为有人在谋杀它们\",{\"1\":{\"587\":1}}],[\"你选择了一个点\",{\"1\":{\"586\":1}}],[\"你选择了你的隧道\",{\"1\":{\"585\":1}}],[\"你一方面准确地看到了当今世界拥有的大量选择\",{\"1\":{\"585\":1}}],[\"你无法仅从一次约会中就知道那个人是否是你的真命天子\",{\"1\":{\"585\":1}}],[\"你无法在第二天买入股票\",{\"1\":{\"256\":1}}],[\"你实际上无法预测\",{\"1\":{\"585\":1}}],[\"你实际看到的输出可能因不同的操作系统和\",{\"1\":{\"447\":1}}],[\"你失去了转行的勇气\",{\"1\":{\"585\":1}}],[\"你失去了隐私\",{\"1\":{\"551\":1}}],[\"你必须强迫自己在新技术出现时学习它\",{\"1\":{\"771\":1}}],[\"你必须抛弃信念\",{\"1\":{\"657\":1}}],[\"你必须明白一个关键点\",{\"1\":{\"647\":1,\"686\":1}}],[\"你必须和这个人约会一段时间\",{\"1\":{\"585\":1}}],[\"你必须开始约会\",{\"1\":{\"585\":1}}],[\"你必须从选择池中选择一个职业道路\",{\"1\":{\"585\":1}}],[\"你必须在再次购买前出售掉之前的股票\",{\"1\":{\"253\":2,\"254\":1,\"255\":1,\"256\":1}}],[\"你比我们大多数人都要领先\",{\"1\":{\"585\":1}}],[\"你目前的职业计划是否仍然合格\",{\"1\":{\"585\":1}}],[\"你应该可以看清楚有限状态机的运行以及使用过程\",{\"1\":{\"1011\":1}}],[\"你应该为意识的中心那个脆弱的角色做对\",{\"1\":{\"588\":1}}],[\"你应该格外警惕那些脚踏实地的人\",{\"1\":{\"588\":1}}],[\"你应该充分享受它们\",{\"1\":{\"587\":1}}],[\"你应该观察他在接下来的六个星期里的练习\",{\"1\":{\"583\":1}}],[\"你应该能在生活中随心所欲\",{\"1\":{\"573\":1}}],[\"你很少用它做除了查看时间以外的任何事情\",{\"1\":{\"772\":1}}],[\"你很少\",{\"1\":{\"772\":1}}],[\"你很难\",{\"1\":{\"586\":1}}],[\"你很难成功\",{\"1\":{\"582\":1}}],[\"你很可能可以自己创造出来\",{\"1\":{\"579\":1}}],[\"你愿意花多少年时间追逐一个目标\",{\"1\":{\"582\":1}}],[\"你愿意坚持追逐那颗星星的时间\",{\"1\":{\"580\":1}}],[\"你成为一名一线电影明星的机会实际上是相当高的\",{\"1\":{\"580\":1}}],[\"你能没有一点点抵触情绪还能接着继续寻找错误吗\",{\"1\":{\"692\":1}}],[\"你能举出哪些他们可以成功的理由\",{\"1\":{\"673\":1}}],[\"你能否在这个游戏中获得足够的优势\",{\"1\":{\"580\":1}}],[\"你能说服越多的渴望者接受底层架子的评级\",{\"1\":{\"577\":1}}],[\"你通常会发现这也是一个面具\",{\"1\":{\"578\":1}}],[\"你最终不会得到你想要的结果\",{\"1\":{\"718\":1}}],[\"你最终会在一个成功\",{\"1\":{\"578\":1}}],[\"你最多可以完成\",{\"1\":{\"254\":1,\"255\":1}}],[\"你要做的就是观察其他人对热点的反应以及记住这些反应\",{\"1\":{\"734\":1}}],[\"你要么变得平易近人而凌乱\",{\"1\":{\"721\":1}}],[\"你要把自己最具生产力的二十年奉献给公共服务\",{\"1\":{\"718\":1}}],[\"你要面对两组信念\",{\"1\":{\"578\":1}}],[\"你要找到恐惧的具体来源\",{\"1\":{\"574\":1}}],[\"你对解雇老清洁工感到难过\",{\"1\":{\"751\":1}}],[\"你对我的工作没有任何抱怨\",{\"1\":{\"751\":1}}],[\"你对宏观图景的良好感觉可能会变得糟糕\",{\"1\":{\"588\":1}}],[\"你对任何职业追求的前景取决于\",{\"1\":{\"580\":1}}],[\"你对成功的高度定义\",{\"1\":{\"580\":1}}],[\"你对职业世界和成功要素的看法\",{\"1\":{\"578\":1}}],[\"你对现实的看法\",{\"1\":{\"578\":1}}],[\"你对垃圾的标准应该来自于你自己的深思熟虑\",{\"1\":{\"577\":1}}],[\"你习惯于想要的东西\",{\"1\":{\"578\":1}}],[\"你放在顶层的渴望越少\",{\"1\":{\"577\":1}}],[\"你渴望自尊的另一面是害怕感到羞耻\",{\"1\":{\"577\":1}}],[\"你渴望被人钦佩的反面是对尴尬的恐惧\",{\"1\":{\"577\":1}}],[\"你内心的恐惧或惰性\",{\"1\":{\"577\":1}}],[\"你内心的渴望是复杂的\",{\"1\":{\"573\":1}}],[\"你也看到了编写makefile文件的规则\",{\"1\":{\"1025\":1}}],[\"你也最终会被反噬\",{\"1\":{\"795\":1}}],[\"你也要注意回避谈论热点的行为\",{\"1\":{\"734\":1}}],[\"你也不会考虑青少年的特殊需求\",{\"1\":{\"619\":1}}],[\"你也必须纠正她\",{\"1\":{\"585\":1}}],[\"你也会很快意识到渴望的章鱼通常是一个不开心的生物\",{\"1\":{\"587\":1}}],[\"你也会从现在的自己变化\",{\"1\":{\"585\":1}}],[\"你也会发现有些你应该有的部分并没有在你的章鱼身上生活在它们应该生活的地方\",{\"1\":{\"576\":1}}],[\"你也可以截取完整的\",{\"1\":{\"468\":1}}],[\"你同意\",{\"1\":{\"575\":1}}],[\"你尊敬的朋友或你年轻时的信念是错的\",{\"1\":{\"575\":1}}],[\"你甚至可能会发现\",{\"1\":{\"575\":1}}],[\"你和我以及我身边的大多数朋友一样\",{\"1\":{\"575\":1}}],[\"你让别人偷偷进入了你的渴望章鱼\",{\"1\":{\"575\":1}}],[\"你发现自己被欺骗了\",{\"1\":{\"575\":1}}],[\"你拽下它的面具\",{\"1\":{\"575\":1}}],[\"你自己写代码经常会go\",{\"1\":{\"988\":1}}],[\"你自己完全不知道如何修理\",{\"1\":{\"772\":1}}],[\"你自己积累的智慧是否真正证明了你对那个核心信念的坚定程度\",{\"1\":{\"575\":1}}],[\"你自然就知道很多人的境界了\",{\"1\":{\"525\":1}}],[\"你意识到你从未真正考虑过是否独立地同意它\",{\"1\":{\"575\":1}}],[\"你将无能为力\",{\"1\":{\"705\":1}}],[\"你将为周围的人树立一个好榜样\",{\"1\":{\"627\":1}}],[\"你将有更多有待开发和组织的思想\",{\"1\":{\"627\":1}}],[\"你将会做相当于写支票的事情\",{\"1\":{\"771\":1}}],[\"你将会做出一条属于自己的区块链系统\",{\"1\":{\"508\":1}}],[\"你将会比现在更了解职业环境和你感兴趣的特定游戏板块\",{\"1\":{\"585\":1}}],[\"你将会了解一些你现在不知道的关于自己的东西\",{\"1\":{\"585\":1}}],[\"你将职业板块转化为一条线\",{\"1\":{\"584\":1}}],[\"你将拥有你的职业\",{\"1\":{\"580\":1}}],[\"你将能够根据实际生活中这种层次结构的感受进行测试和修订\",{\"1\":{\"577\":1}}],[\"你将慢慢但确定地开始重新填充你的渴望章鱼\",{\"1\":{\"575\":1}}],[\"你将其与你自己的生活经验联系起来\",{\"1\":{\"575\":1}}],[\"你将首先问每个渴望\",{\"1\":{\"575\":1}}],[\"你将确定那些发言声音高亢并得到实现的渴望\",{\"1\":{\"574\":1}}],[\"你还可以通过反射来修改其底层的值\",{\"1\":{\"1190\":1}}],[\"你还想提前告知他们任务的截止时间或者取消任务\",{\"1\":{\"1156\":1}}],[\"你还能想起来十年前的热点吗\",{\"1\":{\"734\":1}}],[\"你还有别的选择\",{\"1\":{\"711\":1}}],[\"你还顺带学会了python编程\",{\"1\":{\"669\":1}}],[\"你还需要擅长让自己出现在有权势的人面前\",{\"1\":{\"580\":1}}],[\"你还混淆了天赋和技能水平\",{\"1\":{\"578\":1}}],[\"你还在选择哪些部分是你故意不想要的\",{\"1\":{\"577\":1}}],[\"你还将了解到在你的思维中哪些内在渴望似乎发出最响亮的声音\",{\"1\":{\"574\":1}}],[\"你还会发现我们使用了mutex的互斥锁内容\",{\"1\":{\"516\":1}}],[\"你开始打开地下室的灯光\",{\"1\":{\"574\":1}}],[\"你幻想着每年赚120万美元\",{\"1\":{\"574\":1}}],[\"你的输入内容是\",{\"1\":{\"1172\":2}}],[\"你的感受不重要\",{\"1\":{\"773\":1}}],[\"你的情况很糟糕\",{\"1\":{\"772\":1}}],[\"你的动机和激励与他完全不同\",{\"1\":{\"751\":1}}],[\"你的这个老清洁工更喜欢用老的清洁方法\",{\"1\":{\"751\":1}}],[\"你的生活会变得更好吗\",{\"1\":{\"734\":1}}],[\"你的生活将由一群原始\",{\"1\":{\"586\":1}}],[\"你的选择不符合社会趋势\",{\"1\":{\"717\":1}}],[\"你的数据就无法同步到远程的加密数据库了\",{\"1\":{\"710\":1}}],[\"你的所有记录都优先在本地存储\",{\"1\":{\"710\":1}}],[\"你的钱也随之消失\",{\"0\":{\"706\":1}}],[\"你的回答的这里有问题\",{\"1\":{\"692\":1}}],[\"你的认知的价值才会真正体现出来\",{\"1\":{\"689\":1}}],[\"你的第一步还是想着如何去寻找风险投资\",{\"1\":{\"663\":1}}],[\"你的第一反应是什么\",{\"1\":{\"618\":1}}],[\"你的真理或许不是我的\",{\"1\":{\"637\":1}}],[\"你的大脑也是一块肌肉\",{\"1\":{\"789\":1}}],[\"你的大脑会因为接触不到信息而饿的\",{\"1\":{\"631\":1}}],[\"你的大厨水平是决定你提高速度的最重要因素\",{\"1\":{\"581\":1}}],[\"你的良好和糟糕的决策将共同铸就你独特的人生道路\",{\"1\":{\"588\":1}}],[\"你的不安只是一个章鱼仍然正确配置的预期不断抱怨吗\",{\"1\":{\"588\":1}}],[\"你的整个生活都会糟糕透顶\",{\"1\":{\"586\":1}}],[\"你的意识可能已经试图给倾向于惰性的章鱼的部分降低评级\",{\"1\":{\"586\":1}}],[\"你的坚持程度\",{\"1\":{\"584\":1}}],[\"你的速度\",{\"1\":{\"584\":1}}],[\"你的天赋\",{\"1\":{\"581\":1}}],[\"你的工作态度\",{\"1\":{\"581\":1}}],[\"你的\",{\"1\":{\"581\":1}}],[\"你的职业目标是成为谷歌的中层工程师\",{\"1\":{\"580\":1}}],[\"你的潜力\",{\"0\":{\"580\":1}}],[\"你的朋友或你的大学职业指导教师\",{\"1\":{\"578\":1}}],[\"你的渴望和恐惧\",{\"1\":{\"578\":1}}],[\"你的渴望盒已经准备好了\",{\"1\":{\"577\":1}}],[\"你的现实盒子\",{\"0\":{\"578\":1}}],[\"你的时间和精力都非常有限\",{\"1\":{\"577\":1}}],[\"你的顶层架子和\",{\"1\":{\"577\":1}}],[\"你的核心部分不会默默无闻地消失\",{\"1\":{\"577\":1}}],[\"你的那群\",{\"1\":{\"577\":1}}],[\"你的章鱼可能会看起来有点荒凉\",{\"1\":{\"575\":1}}],[\"你的一些渴望和恐惧是由你自己在七岁时写下的\",{\"1\":{\"575\":1}}],[\"你的审讯室揭示了一些明显的冒名顶替者\",{\"1\":{\"575\":1}}],[\"你的审讯揭示了一个大部分是由你个人发展并且时刻更新的章鱼\",{\"1\":{\"575\":1}}],[\"你的实际触角对于职业转变需要更长的时间才能成功或根本不成功感到真正的恐慌\",{\"1\":{\"574\":1}}],[\"你的项目请求量越来越大\",{\"1\":{\"381\":1}}],[\"你在他身上看不到任何让他不可解雇的特质\",{\"1\":{\"751\":1}}],[\"你在学校进行的多数写作属于后者\",{\"1\":{\"627\":1}}],[\"你在上课时是否被老师教导说\",{\"1\":{\"626\":1}}],[\"你在任何给定时刻的行为只是显示了你的章鱼的配置\",{\"1\":{\"586\":1}}],[\"你在这个职业中工作了大约40年\",{\"1\":{\"585\":1}}],[\"你在这个令人毛骨悚然的审讯室里的目标是拽下每个渴望的面具\",{\"1\":{\"575\":1}}],[\"你在提高玩这个职业\",{\"1\":{\"580\":1}}],[\"你在该职业领域的潜力必须达到在该领域取得成功的客观难度\",{\"1\":{\"578\":1}}],[\"你在职业规划图上应考虑绘制的方向箭头集合\",{\"1\":{\"572\":1}}],[\"你在主库上执行的结果并不是你在从库执行的结果\",{\"1\":{\"358\":1}}],[\"你已经反思\",{\"1\":{\"586\":1}}],[\"你已经重新审视了你的职业规划图\",{\"1\":{\"572\":1}}],[\"你已经完成本篇文章的全部内容了\",{\"1\":{\"517\":1}}],[\"你突然也掌握了宏观驾驶舱的钥匙\",{\"1\":{\"570\":1}}],[\"你只会得到平庸的表现\",{\"1\":{\"789\":1}}],[\"你只需花\",{\"1\":{\"751\":2}}],[\"你只是比别人强一点点\",{\"1\":{\"689\":1}}],[\"你只有随着时间学会你真正擅长什么的事实\",{\"1\":{\"585\":1}}],[\"你只能集中精力关注你职业道路上的下一个点\",{\"1\":{\"585\":1}}],[\"你只能选择\",{\"1\":{\"252\":1}}],[\"你只负责微观决策\",{\"1\":{\"570\":1}}],[\"你预设的道路已经结束了\",{\"1\":{\"570\":1}}],[\"你既没有技能\",{\"1\":{\"570\":1}}],[\"你迄今为止的人生道路\",{\"0\":{\"570\":1}}],[\"你说是吧\",{\"1\":{\"552\":1}}],[\"你连出门都出不得\",{\"1\":{\"551\":1}}],[\"你不知道什么是智能合约\",{\"1\":{\"772\":1}}],[\"你不知道比特币是如何运作的以及它为什么被创造\",{\"1\":{\"772\":1}}],[\"你不负责员工的生活\",{\"1\":{\"751\":1}}],[\"你不会想发一条消息\",{\"1\":{\"800\":1}}],[\"你不会花\",{\"1\":{\"751\":1}}],[\"你不会在微信\",{\"1\":{\"534\":1}}],[\"你不应该说出你这样的想法\",{\"1\":{\"734\":1}}],[\"你不应该先学习\",{\"1\":{\"663\":1}}],[\"你不进学会了如何自学\",{\"1\":{\"669\":1}}],[\"你不仅是一个人类\",{\"1\":{\"619\":1}}],[\"你不仅仅是在选择哪些部分对你来说是最重要的\",{\"1\":{\"577\":1}}],[\"你不必担心第四个点\",{\"1\":{\"585\":1}}],[\"你不是这方面的专家\",{\"1\":{\"569\":1}}],[\"你不用微信\",{\"1\":{\"551\":1}}],[\"你不能坐在沙发上就能弄清楚这个问题\",{\"1\":{\"585\":1}}],[\"你不能同时参与多笔交易\",{\"1\":{\"253\":1,\"254\":1,\"255\":1,\"256\":1}}],[\"你不能在买入前卖出股票\",{\"1\":{\"252\":1}}],[\"你去新东方学习了烹饪\",{\"1\":{\"776\":1}}],[\"你去京东的搜索框里随便一搜某件物品\",{\"1\":{\"533\":1}}],[\"你去看看这些科技公司这些年的股票价格已经翻了几十倍\",{\"1\":{\"533\":1}}],[\"你是他的退休计划\",{\"1\":{\"751\":1}}],[\"你是谁\",{\"0\":{\"618\":1}}],[\"你是老师\",{\"1\":{\"586\":1}}],[\"你是房间里唯一明智的人\",{\"1\":{\"577\":1}}],[\"你是否也对这些大众习以为常的认识赞同\",{\"1\":{\"653\":1}}],[\"你是否学到了关于自己或世界的新信息\",{\"1\":{\"588\":1}}],[\"你是否想要和你认识的其他人想要的东西一样\",{\"1\":{\"575\":1}}],[\"你是否将外界影响的话语视为信息\",{\"1\":{\"575\":1}}],[\"你是现在的你\",{\"1\":{\"575\":1}}],[\"你是一个无法控制自己员工的ceo\",{\"1\":{\"586\":1}}],[\"你是一个按照别人的配方来做菜的厨师\",{\"1\":{\"575\":1}}],[\"你是一个专业的小偷\",{\"1\":{\"249\":1}}],[\"你是如何来到这里的\",{\"1\":{\"575\":1}}],[\"你是学生\",{\"1\":{\"531\":1}}],[\"你就应该明白怎么用了\",{\"1\":{\"1189\":1}}],[\"你就必须接受新技术\",{\"1\":{\"771\":1}}],[\"你就必须了解该职业当前的棋盘是什么样的\",{\"1\":{\"579\":1}}],[\"你就不必相信任何交易所\",{\"1\":{\"701\":1}}],[\"你就不会对自己在很多道路上的机会感到乐观\",{\"1\":{\"578\":1}}],[\"你就没有真正拥有你的coin\",{\"1\":{\"701\":1}}],[\"你就能走得更远\",{\"1\":{\"582\":1}}],[\"你就会知道政治人物的言论和行为往往会对未来产生深远的影响\",{\"1\":{\"783\":1}}],[\"你就会拥有巨大的优势\",{\"1\":{\"579\":1}}],[\"你就会比其他人拥有巨大的优势\",{\"1\":{\"579\":1}}],[\"你就会让你的冲动主导你的生活\",{\"1\":{\"577\":1}}],[\"你就会发现有一个run按钮\",{\"1\":{\"512\":1}}],[\"你就成为了一个机器人\",{\"1\":{\"575\":1}}],[\"你就可以开始真正的工作\",{\"1\":{\"575\":1}}],[\"你就可以享受到使用这个工具的爽点了\",{\"1\":{\"494\":1}}],[\"你就找到了需要的包\",{\"1\":{\"512\":1}}],[\"你若和这位朋友一起积累\",{\"1\":{\"500\":1}}],[\"你猜猜这能不能通过编译呢\",{\"1\":{\"467\":1}}],[\"你需要对这两个\",{\"1\":{\"1067\":1}}],[\"你需要7\",{\"1\":{\"789\":1}}],[\"你需要像开发人员一样部署自己的云服务器\",{\"1\":{\"710\":1}}],[\"你需要付出什么\",{\"0\":{\"710\":1}}],[\"你需要站在未来去思考现在\",{\"1\":{\"680\":1}}],[\"你需要找到自己理想的客户\",{\"1\":{\"663\":2}}],[\"你需要曾经积累\",{\"1\":{\"605\":1}}],[\"你需要弄清楚这种感觉是来自你内心的明智部分\",{\"1\":{\"588\":1}}],[\"你需要重新进入分析模式\",{\"1\":{\"588\":1}}],[\"你需要达到何种程度的成功才能对选择这个职业道路感到满意\",{\"1\":{\"584\":1}}],[\"你需要在文件系统中搜索特定的关键词\",{\"1\":{\"915\":1}}],[\"你需要在\",{\"1\":{\"487\":1}}],[\"你需要用一个浮点数数组返回答案\",{\"1\":{\"337\":1}}],[\"你需要让组成和的完全平方数的个数最少\",{\"1\":{\"245\":1}}],[\"你需要添加sessionprovider来存储session信息\",{\"1\":{\"199\":1}}],[\"你需要去github\",{\"1\":{\"192\":1}}],[\"你根据你的判断来进行购入接着自负盈亏\",{\"1\":{\"169\":1}}],[\"你可能注意到了我们上个例子中有个没有提到的方法isvalid\",{\"1\":{\"1191\":1}}],[\"你可能\",{\"1\":{\"773\":1}}],[\"你可能就不会反对年幼的孩子去工厂里做体力工\",{\"1\":{\"619\":1}}],[\"你可能是迈克尔\",{\"1\":{\"587\":1}}],[\"你可能达到了职业道路上的星星\",{\"1\":{\"580\":1}}],[\"你可能无法完全揭示出你真实自我的某些部分\",{\"1\":{\"576\":1}}],[\"你可能不清楚你那些缺失的渴望具体是什么\",{\"1\":{\"575\":1}}],[\"你可能对公寓的变化本身并不在意\",{\"1\":{\"574\":1}}],[\"你可能会问了\",{\"1\":{\"1088\":1}}],[\"你可能会感到一种更加深沉的不安\",{\"1\":{\"588\":1}}],[\"你可能会在新的领域做得很糟糕\",{\"1\":{\"587\":1}}],[\"你可能会看到同样的趋势\",{\"1\":{\"585\":1}}],[\"你可能会首先揭开你的某个信念的面具\",{\"1\":{\"578\":1}}],[\"你可能会认为做一些大胆事情的愿望在你的层次结构中处于很高的位置\",{\"1\":{\"577\":1}}],[\"你可能会遇到一些不愉快的角色\",{\"1\":{\"576\":1}}],[\"你可能会沿着\",{\"1\":{\"575\":1}}],[\"你可能会致力于取悦和让它自豪\",{\"1\":{\"573\":1}}],[\"你可能会忽略掉这些烦人的广告\",{\"1\":{\"551\":1}}],[\"你可能会说\",{\"1\":{\"473\":1}}],[\"你可能会发现\",{\"1\":{\"60\":1}}],[\"你可以根据需要进行参考和使用\",{\"1\":{\"1212\":1}}],[\"你可以根据自己的预测来构建投资预测组合\",{\"1\":{\"19\":1,\"34\":1}}],[\"你可以看出reflect的威力\",{\"1\":{\"1192\":1}}],[\"你可以看下核心代码中支持的设置\",{\"1\":{\"152\":1}}],[\"你可以可以进一步在reflect包中得知go的真正的kind的定义\",{\"1\":{\"1188\":1}}],[\"你可以注意到\",{\"1\":{\"1188\":1}}],[\"你可以尝试不同类型的参数并观察输出结果\",{\"1\":{\"1161\":1}}],[\"你可以尝试适合自己的方法\",{\"1\":{\"577\":1}}],[\"你可以发现md有一些常见的使用方法\",{\"1\":{\"1093\":1}}],[\"你可以调用该对象的\",{\"1\":{\"1037\":1}}],[\"你可以把它当成是redis版本的net\",{\"1\":{\"976\":1}}],[\"你可以将根上下文视为一个默认的上下文\",{\"1\":{\"1156\":1}}],[\"你可以将相同的代码放在超类的一个公共方法中\",{\"1\":{\"860\":1}}],[\"你可以将宏观的画面放在一边\",{\"1\":{\"587\":1}}],[\"你可以读一读有限状态机这篇文章更详细了解状态模式有限状态机\",{\"1\":{\"848\":1}}],[\"你可以使用curl或者postman工具来不断向8889分别发送对应的请求\",{\"1\":{\"1193\":1}}],[\"你可以使用\",{\"1\":{\"1156\":1}}],[\"你可以使用迭代器模式\",{\"1\":{\"825\":3}}],[\"你可以使用命令模式\",{\"1\":{\"819\":4}}],[\"你可以懒散对待任何事情\",{\"1\":{\"789\":1}}],[\"你可以稍后起诉这些人\",{\"1\":{\"705\":1}}],[\"你可以为你自己做背书\",{\"1\":{\"663\":1}}],[\"你可以为自己像一位主厨一样发展了那部分自己而感到自豪\",{\"1\":{\"575\":1}}],[\"你可以决定进一步放大视角\",{\"1\":{\"588\":1}}],[\"你可以只是生活\",{\"1\":{\"587\":1}}],[\"你可以停止思考和计划一段时间\",{\"1\":{\"587\":1}}],[\"你可以按照自己的意愿处理它\",{\"1\":{\"575\":1}}],[\"你可以设立一个小型审讯室\",{\"1\":{\"575\":1}}],[\"你可以比其他人多活十年\",{\"0\":{\"543\":1}}],[\"你可以拿到自己曾经在互联网中生产过的数据吗\",{\"1\":{\"533\":1}}],[\"你可以先去go语言的net\",{\"1\":{\"516\":1}}],[\"你可以从棋盘的左上角开始拿格子里的礼物\",{\"1\":{\"319\":1}}],[\"你可以假设数组是非空的\",{\"1\":{\"312\":1}}],[\"你可以以任意顺序返回这个字符串数组\",{\"1\":{\"311\":1}}],[\"你可以对一个单词进行如下三种操作\",{\"1\":{\"266\":1}}],[\"你可以尽可能地完成更多的交易\",{\"1\":{\"253\":1,\"256\":1}}],[\"你可以选择从下标为\",{\"1\":{\"228\":1}}],[\"你可以购买\",{\"1\":{\"169\":1}}],[\"你可以理解为\",{\"1\":{\"152\":1}}],[\"你可以在自己的浏览器中显示自己的区块链系统\",{\"1\":{\"508\":1}}],[\"你可以在自己的一个solana地址初始化多个借贷账户只要支付租金就可以了\",{\"1\":{\"150\":1}}],[\"你可以在这里交易世界上最受争议的话题例如\",{\"1\":{\"19\":1,\"34\":1}}],[\"你可以通过玩\",{\"1\":{\"575\":1}}],[\"你可以通过这个工具在局域网下去传输几乎任意的的信息\",{\"1\":{\"493\":1}}],[\"你可以通过\",{\"1\":{\"51\":1}}],[\"你会有一个很好的\",{\"1\":{\"789\":1}}],[\"你会有一些强烈的\",{\"1\":{\"577\":1}}],[\"你会注意到这些散步会让你处于一种平静的\",{\"1\":{\"789\":1}}],[\"你会注意到删除行为分为两类\",{\"1\":{\"55\":1}}],[\"你会以每年\",{\"1\":{\"751\":1}}],[\"你会每年多花\",{\"1\":{\"751\":1}}],[\"你会留下你的老清洁工还是雇一个新的\",{\"1\":{\"751\":1}}],[\"你会觉得封面中图片中造型很酷吗\",{\"1\":{\"734\":1}}],[\"你会得到一个分布式的泥球\",{\"1\":{\"723\":1}}],[\"你会让它抱怨\",{\"1\":{\"587\":1}}],[\"你会学会接受一个大部分不开心的章鱼\",{\"1\":{\"587\":1}}],[\"你会思考他们在世界上的假设进展\",{\"1\":{\"587\":1}}],[\"你会怎么做\",{\"1\":{\"586\":1,\"751\":1}}],[\"你会说\",{\"1\":{\"585\":1}}],[\"你会告诉她\",{\"1\":{\"585\":1}}],[\"你会尝试利用你一生积累的所有智慧\",{\"1\":{\"577\":1}}],[\"你会看到对成绩不佳的恐惧\",{\"1\":{\"577\":1}}],[\"你会从其他人身上揭示出更广泛的传统智慧的价值观和判断\",{\"1\":{\"575\":1}}],[\"你会对其中哪种情况有一种直觉\",{\"1\":{\"575\":1}}],[\"你会追溯这个为什么\",{\"1\":{\"575\":1}}],[\"你会追溯这个为什么的起源\",{\"1\":{\"575\":2}}],[\"你会拽下它们的面具\",{\"1\":{\"575\":1}}],[\"你会找到一个更深层次的原因在这个原因的背后\",{\"1\":{\"575\":1}}],[\"你会提出最初的为什么\",{\"1\":{\"575\":1}}],[\"你会发现他们的职业道路看起来更像是一系列相互连接的点\",{\"1\":{\"585\":1}}],[\"你会发现巨大的\",{\"1\":{\"578\":1}}],[\"你会发现你的妈妈\",{\"1\":{\"575\":1}}],[\"你会发现那部分希望将自己的一生奉献于减轻人类最重大存在风险的一面对你有着明显的鄙视\",{\"1\":{\"573\":1}}],[\"你会发现除了真正想要修改的\",{\"1\":{\"55\":1}}],[\"你会意识到社会中某一部分人对你的职业给予了永恒的尊重\",{\"1\":{\"573\":1}}],[\"你会选择一页一页的找呢\",{\"1\":{\"350\":1}}],[\"你其实是在权衡自己的知识\",{\"1\":{\"19\":1,\"34\":1}}],[\"你好\",{\"1\":{\"3\":1}}],[\"iana\",{\"1\":{\"1055\":1}}],[\"iat\",{\"1\":{\"1047\":1}}],[\"i应该不断++\",{\"1\":{\"947\":1}}],[\"illiterate\",{\"1\":{\"770\":1}}],[\"illusion\",{\"1\":{\"523\":1}}],[\"ignored\",{\"1\":{\"1119\":1}}],[\"ignore\",{\"1\":{\"547\":2}}],[\"ice\",{\"1\":{\"523\":1}}],[\"i32\",{\"1\":{\"469\":1}}],[\"ib\",{\"1\":{\"357\":2}}],[\"i待维持下标\",{\"1\":{\"313\":1}}],[\"i>=0\",{\"1\":{\"325\":1}}],[\"i>=top\",{\"1\":{\"300\":1}}],[\"i>=left\",{\"1\":{\"300\":1}}],[\"i>0\",{\"1\":{\"216\":1}}],[\"i往后走\",{\"1\":{\"293\":1}}],[\"i<m\",{\"1\":{\"319\":2}}],[\"i<=bottom\",{\"1\":{\"300\":1}}],[\"i<=right\",{\"1\":{\"300\":1}}],[\"i<j\",{\"1\":{\"293\":1}}],[\"i<len\",{\"1\":{\"254\":2,\"275\":1,\"315\":1,\"322\":2,\"325\":1}}],[\"i<length\",{\"1\":{\"252\":2}}],[\"i表示第i天\",{\"1\":{\"254\":1}}],[\"iii卷\",{\"1\":{\"669\":1}}],[\"iii\",{\"0\":{\"250\":1,\"305\":2}}],[\"ii\",{\"0\":{\"238\":1,\"242\":1,\"282\":1,\"286\":2,\"304\":2,\"326\":1,\"329\":1,\"331\":2,\"335\":1}}],[\"i是物品\",{\"1\":{\"236\":1}}],[\"i是交互操作\",{\"1\":{\"50\":1}}],[\"i为0\",{\"1\":{\"235\":1}}],[\"i+1\",{\"1\":{\"208\":2,\"209\":1,\"212\":2,\"213\":2,\"214\":2,\"215\":1,\"216\":2,\"217\":1,\"267\":3,\"268\":2,\"284\":4,\"320\":1,\"325\":1,\"334\":1,\"844\":1,\"867\":1,\"944\":1,\"967\":1}}],[\"i++\",{\"1\":{\"208\":2,\"209\":1,\"210\":1,\"211\":1,\"212\":2,\"213\":1,\"214\":1,\"215\":1,\"216\":2,\"217\":1,\"218\":1,\"219\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":3,\"230\":3,\"231\":1,\"232\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":2,\"242\":1,\"243\":1,\"244\":2,\"245\":2,\"246\":1,\"249\":1,\"252\":2,\"253\":1,\"254\":2,\"255\":1,\"257\":2,\"258\":2,\"259\":2,\"260\":1,\"261\":1,\"262\":1,\"263\":1,\"264\":3,\"265\":5,\"266\":3,\"268\":1,\"275\":2,\"281\":1,\"282\":1,\"284\":1,\"285\":1,\"291\":1,\"293\":2,\"300\":2,\"302\":1,\"303\":1,\"304\":1,\"305\":2,\"311\":1,\"312\":1,\"315\":1,\"318\":1,\"319\":2,\"320\":1,\"321\":1,\"322\":2,\"323\":3,\"324\":1,\"325\":2,\"331\":1,\"336\":2,\"944\":1,\"945\":1,\"946\":1,\"947\":4,\"948\":4,\"949\":1,\"967\":1,\"970\":1,\"992\":1,\"1019\":1,\"1055\":1,\"1072\":1,\"1120\":2,\"1127\":2,\"1146\":1,\"1188\":1,\"1192\":2,\"1193\":1}}],[\"i64\",{\"1\":{\"152\":1}}],[\"i80f48\",{\"1\":{\"152\":22}}],[\"iroutes\",{\"1\":{\"1052\":2,\"1053\":2}}],[\"iron\",{\"1\":{\"523\":2}}],[\"irreversibility\",{\"1\":{\"543\":1}}],[\"ir\",{\"1\":{\"152\":16}}],[\"iszero\",{\"1\":{\"1212\":1}}],[\"isdst\",{\"1\":{\"1212\":1}}],[\"isdone\",{\"1\":{\"973\":1}}],[\"isnil\",{\"1\":{\"1191\":5}}],[\"isnormalip\",{\"1\":{\"214\":2}}],[\"isvaild\",{\"0\":{\"1191\":1}}],[\"isvalid\",{\"1\":{\"1190\":2,\"1191\":7}}],[\"iscommonnetreaderror\",{\"1\":{\"1055\":1}}],[\"isunsupportedteerror\",{\"1\":{\"1055\":1}}],[\"isunsafetrustedproxies\",{\"1\":{\"1054\":1}}],[\"isblockvalid\",{\"1\":{\"515\":1,\"516\":1}}],[\"isblockvalid去校验我们构建的区块链是否正确\",{\"1\":{\"511\":1}}],[\"isbalanced\",{\"1\":{\"329\":3}}],[\"isstudent\",{\"1\":{\"1173\":2}}],[\"iss\",{\"1\":{\"1047\":1}}],[\"issued\",{\"1\":{\"1047\":1}}],[\"issuer\",{\"1\":{\"1047\":1}}],[\"issue\",{\"1\":{\"547\":3,\"1055\":2}}],[\"issues\",{\"1\":{\"547\":1,\"550\":2}}],[\"issubstructure\",{\"1\":{\"297\":5}}],[\"issubsequence\",{\"1\":{\"263\":1}}],[\"issymmetric\",{\"1\":{\"299\":1}}],[\"ismatch\",{\"1\":{\"291\":1}}],[\"ispartion\",{\"1\":{\"213\":2}}],[\"is\",{\"0\":{\"1116\":1,\"1117\":2},\"1\":{\"90\":8,\"333\":2,\"334\":2,\"426\":8,\"447\":4,\"460\":2,\"463\":3,\"468\":3,\"473\":1,\"475\":2,\"479\":4,\"483\":2,\"523\":69,\"534\":1,\"537\":14,\"540\":8,\"543\":25,\"547\":26,\"548\":6,\"549\":3,\"550\":2,\"557\":7,\"560\":6,\"563\":8,\"808\":1,\"849\":5,\"883\":2,\"956\":1,\"977\":4,\"989\":2,\"992\":2,\"1019\":1,\"1045\":1,\"1047\":1,\"1052\":1,\"1053\":1,\"1054\":1,\"1055\":9,\"1072\":12,\"1080\":2,\"1094\":1,\"1095\":1,\"1100\":1,\"1115\":4,\"1116\":5,\"1117\":6,\"1118\":12,\"1119\":6,\"1120\":5,\"1122\":10,\"1123\":5,\"1124\":9,\"1125\":7,\"1126\":13,\"1127\":6,\"1173\":2,\"1179\":1,\"1188\":5,\"1192\":1}}],[\"isoweek\",{\"1\":{\"1212\":1}}],[\"isolated\",{\"1\":{\"523\":1}}],[\"isolation\",{\"1\":{\"361\":1,\"424\":1}}],[\"isotropic\",{\"1\":{\"523\":1}}],[\"iso\",{\"1\":{\"46\":1}}],[\"iface\",{\"1\":{\"1139\":3}}],[\"iface表示一组方法的接口\",{\"1\":{\"1138\":1}}],[\"if\",{\"1\":{\"90\":21,\"152\":3,\"194\":3,\"199\":1,\"200\":2,\"206\":1,\"208\":3,\"209\":2,\"210\":2,\"211\":2,\"212\":6,\"213\":3,\"214\":4,\"216\":3,\"217\":2,\"218\":2,\"219\":3,\"226\":1,\"227\":1,\"228\":1,\"230\":1,\"231\":1,\"235\":1,\"237\":1,\"239\":5,\"240\":1,\"243\":1,\"244\":3,\"245\":2,\"246\":1,\"249\":3,\"250\":2,\"252\":3,\"255\":1,\"257\":3,\"258\":3,\"259\":3,\"260\":2,\"261\":1,\"263\":5,\"264\":1,\"265\":2,\"266\":7,\"267\":6,\"268\":3,\"275\":2,\"276\":2,\"277\":2,\"279\":2,\"280\":2,\"281\":1,\"282\":1,\"283\":2,\"284\":5,\"285\":1,\"286\":2,\"287\":1,\"288\":3,\"290\":1,\"291\":4,\"293\":3,\"295\":1,\"296\":6,\"297\":3,\"298\":1,\"299\":4,\"300\":2,\"301\":1,\"303\":2,\"304\":3,\"305\":4,\"307\":5,\"308\":1,\"311\":2,\"312\":1,\"313\":3,\"315\":2,\"318\":2,\"319\":2,\"320\":2,\"321\":4,\"322\":1,\"323\":2,\"324\":1,\"325\":5,\"326\":1,\"327\":2,\"328\":2,\"329\":6,\"330\":1,\"332\":2,\"336\":1,\"395\":1,\"436\":1,\"446\":2,\"458\":2,\"515\":3,\"516\":4,\"517\":1,\"519\":1,\"523\":8,\"537\":1,\"540\":1,\"543\":8,\"547\":4,\"548\":1,\"549\":1,\"563\":1,\"808\":1,\"814\":4,\"827\":1,\"833\":1,\"838\":1,\"844\":1,\"867\":1,\"874\":3,\"927\":5,\"933\":1,\"944\":2,\"945\":2,\"946\":1,\"947\":3,\"948\":3,\"949\":2,\"950\":3,\"959\":1,\"967\":5,\"968\":1,\"972\":1,\"973\":2,\"975\":11,\"976\":8,\"977\":1,\"978\":5,\"979\":1,\"980\":9,\"997\":2,\"1010\":7,\"1011\":4,\"1019\":1,\"1026\":1,\"1045\":2,\"1047\":8,\"1053\":5,\"1054\":1,\"1055\":55,\"1063\":3,\"1067\":4,\"1072\":13,\"1073\":3,\"1074\":4,\"1079\":2,\"1088\":1,\"1095\":5,\"1099\":8,\"1100\":1,\"1119\":1,\"1122\":1,\"1123\":1,\"1125\":3,\"1126\":1,\"1127\":4,\"1145\":2,\"1153\":3,\"1163\":1,\"1169\":1,\"1172\":1,\"1173\":1,\"1179\":1,\"1181\":1,\"1189\":1,\"1190\":3,\"1192\":2,\"1193\":4,\"1198\":2,\"1208\":2,\"1210\":1,\"1225\":1,\"1238\":2}}],[\"imagine\",{\"1\":{\"547\":1},\"2\":{\"524\":1}}],[\"imagination\",{\"1\":{\"523\":1}}],[\"image等\",{\"1\":{\"195\":1}}],[\"image\",{\"1\":{\"47\":1,\"49\":1,\"51\":4,\"52\":2,\"53\":1,\"54\":7,\"55\":14,\"68\":2,\"69\":1,\"70\":2,\"194\":2,\"195\":1,\"523\":1,\"709\":1,\"734\":1,\"992\":2,\"1120\":4}}],[\"immediately\",{\"1\":{\"1119\":3}}],[\"immersed\",{\"1\":{\"519\":1}}],[\"immutable\",{\"1\":{\"468\":3}}],[\"improving\",{\"1\":{\"557\":1}}],[\"improve\",{\"1\":{\"523\":1}}],[\"impossible\",{\"1\":{\"523\":2,\"537\":1}}],[\"import并新建连接\",{\"1\":{\"1225\":1}}],[\"important\",{\"1\":{\"543\":4,\"547\":1,\"560\":1,\"1125\":1}}],[\"importing\",{\"1\":{\"432\":4}}],[\"importing命令的实现\",{\"1\":{\"432\":1}}],[\"import\",{\"1\":{\"70\":2,\"192\":2,\"194\":2,\"511\":1,\"814\":1,\"838\":1,\"861\":1,\"899\":1,\"910\":1,\"958\":1,\"959\":1,\"960\":1,\"967\":1,\"972\":2,\"973\":2,\"975\":2,\"976\":2,\"977\":1,\"981\":1,\"988\":1,\"992\":1,\"1001\":1,\"1010\":1,\"1011\":1,\"1019\":1,\"1045\":1,\"1047\":1,\"1063\":3,\"1067\":2,\"1073\":1,\"1074\":1,\"1079\":1,\"1084\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1100\":1,\"1119\":2,\"1120\":1,\"1122\":1,\"1124\":2,\"1126\":2,\"1127\":2,\"1161\":2,\"1162\":1,\"1163\":2,\"1188\":2,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1198\":4,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1225\":1}}],[\"implement\",{\"1\":{\"1055\":1,\"1138\":1}}],[\"implements\",{\"1\":{\"512\":1}}],[\"implemented\",{\"1\":{\"473\":1}}],[\"impl\",{\"1\":{\"458\":1,\"463\":1}}],[\"img\",{\"1\":{\"195\":1,\"543\":1}}],[\"i\",{\"0\":{\"281\":1,\"285\":1,\"303\":1,\"325\":2,\"328\":1,\"330\":1,\"333\":1,\"334\":1,\"336\":1,\"549\":1},\"1\":{\"64\":2,\"68\":5,\"90\":4,\"208\":8,\"209\":5,\"210\":3,\"211\":6,\"212\":19,\"213\":3,\"214\":3,\"215\":3,\"216\":16,\"217\":6,\"218\":6,\"219\":10,\"226\":5,\"227\":8,\"228\":15,\"229\":21,\"230\":20,\"231\":22,\"232\":13,\"235\":49,\"236\":35,\"237\":7,\"238\":8,\"239\":11,\"240\":15,\"241\":12,\"242\":8,\"243\":16,\"244\":19,\"245\":9,\"246\":5,\"248\":20,\"249\":6,\"252\":42,\"253\":16,\"254\":58,\"255\":15,\"256\":2,\"257\":29,\"258\":20,\"259\":30,\"260\":33,\"261\":10,\"262\":21,\"263\":29,\"264\":53,\"265\":60,\"266\":65,\"267\":29,\"268\":37,\"275\":16,\"277\":7,\"279\":2,\"281\":5,\"282\":5,\"284\":10,\"285\":7,\"291\":14,\"293\":8,\"300\":10,\"302\":2,\"303\":2,\"304\":2,\"305\":6,\"311\":6,\"312\":3,\"313\":17,\"315\":8,\"318\":9,\"319\":7,\"320\":4,\"321\":6,\"322\":6,\"323\":10,\"324\":2,\"325\":13,\"326\":2,\"331\":3,\"333\":2,\"334\":11,\"336\":7,\"337\":2,\"353\":1,\"357\":1,\"358\":3,\"360\":6,\"412\":5,\"428\":3,\"432\":5,\"478\":2,\"479\":6,\"483\":2,\"519\":1,\"523\":22,\"537\":22,\"540\":6,\"543\":27,\"547\":15,\"548\":13,\"549\":4,\"550\":1,\"557\":12,\"560\":10,\"563\":34,\"808\":2,\"820\":6,\"833\":4,\"844\":2,\"867\":2,\"944\":5,\"945\":4,\"946\":3,\"947\":10,\"948\":13,\"949\":9,\"950\":18,\"967\":9,\"970\":2,\"982\":1,\"992\":2,\"1019\":12,\"1052\":1,\"1055\":4,\"1072\":7,\"1119\":1,\"1120\":6,\"1127\":6,\"1134\":1,\"1137\":2,\"1146\":2,\"1153\":4,\"1188\":3,\"1189\":2,\"1192\":6,\"1193\":3}}],[\"inline\",{\"1\":{\"1241\":1}}],[\"injectglist函数中\",{\"1\":{\"1135\":1}}],[\"info\",{\"1\":{\"981\":3,\"997\":2,\"1074\":6,\"1097\":1,\"1099\":1}}],[\"information\",{\"1\":{\"548\":1,\"549\":1,\"557\":1,\"563\":8,\"992\":2}}],[\"infinitely\",{\"1\":{\"523\":1}}],[\"invalid\",{\"1\":{\"1099\":1,\"1126\":1,\"1188\":1,\"1210\":1}}],[\"invalidargument\",{\"1\":{\"1088\":1,\"1099\":1}}],[\"invocation\",{\"1\":{\"1019\":1}}],[\"invoke\",{\"1\":{\"1055\":1}}],[\"invoked\",{\"1\":{\"1019\":1}}],[\"invokes\",{\"1\":{\"1019\":1}}],[\"invoker\",{\"1\":{\"820\":11,\"821\":1,\"1097\":2,\"1099\":2}}],[\"involve\",{\"1\":{\"547\":1}}],[\"invincible\",{\"1\":{\"743\":2}}],[\"inventors\",{\"1\":{\"523\":1}}],[\"inherent\",{\"1\":{\"547\":1,\"1118\":1}}],[\"inalienable\",{\"1\":{\"547\":1}}],[\"inadvertently\",{\"1\":{\"523\":1}}],[\"inaddr\",{\"1\":{\"90\":2}}],[\"innovation\",{\"1\":{\"547\":3}}],[\"innodb为每一个缓存页面都创建了控制块\",{\"1\":{\"376\":1}}],[\"innodb会把整个页的数据都加载到buffer\",{\"1\":{\"376\":1}}],[\"innodb会把存储中的数据划分为若干页\",{\"1\":{\"376\":1}}],[\"innodb会向buffer\",{\"1\":{\"376\":1}}],[\"innodb存储引擎设计了一个缓冲池\",{\"1\":{\"376\":1}}],[\"innodb后台线程每秒刷新一次\",{\"1\":{\"357\":1}}],[\"innodb就会先更新内存\",{\"1\":{\"357\":1}}],[\"innodb\",{\"1\":{\"341\":1,\"350\":2,\"353\":1,\"355\":2,\"357\":7,\"358\":4,\"360\":4,\"361\":4,\"362\":2,\"366\":2,\"368\":2,\"369\":5,\"370\":1,\"377\":3}}],[\"inexplicable\",{\"1\":{\"523\":1}}],[\"inet\",{\"1\":{\"90\":12}}],[\"independent\",{\"1\":{\"547\":2}}],[\"independently\",{\"1\":{\"519\":1,\"1118\":1}}],[\"indeed\",{\"1\":{\"523\":1}}],[\"indentation\",{\"1\":{\"483\":1}}],[\"indexmodel\",{\"1\":{\"1227\":2}}],[\"index++\",{\"1\":{\"827\":2,\"1056\":2}}],[\"index+1\",{\"1\":{\"210\":1,\"515\":1}}],[\"index从前一个块的索引中递增\",{\"1\":{\"514\":1}}],[\"index是指索引\",{\"1\":{\"512\":1}}],[\"index和examples\",{\"1\":{\"512\":1}}],[\"indexed\",{\"1\":{\"473\":1}}],[\"index<i>>\",{\"1\":{\"447\":1}}],[\"index<i>\",{\"1\":{\"447\":1}}],[\"index\",{\"1\":{\"55\":1,\"56\":1,\"58\":1,\"210\":2,\"317\":2,\"325\":4,\"405\":3,\"447\":13,\"475\":1,\"513\":1,\"514\":3,\"515\":1,\"827\":12,\"838\":4,\"1019\":7,\"1056\":2,\"1163\":2,\"1188\":4,\"1218\":2}}],[\"inorder\",{\"1\":{\"279\":9}}],[\"init一下\",{\"1\":{\"1067\":1}}],[\"initial\",{\"1\":{\"1179\":1}}],[\"initialreadlimitsize\",{\"1\":{\"1055\":1}}],[\"initialize\",{\"1\":{\"192\":1,\"301\":1}}],[\"initializeaccount\",{\"1\":{\"133\":1}}],[\"initializemint\",{\"1\":{\"133\":1}}],[\"initalpnrequest\",{\"1\":{\"1055\":1}}],[\"init\",{\"1\":{\"90\":3,\"152\":3,\"462\":4,\"463\":2,\"977\":1,\"988\":1,\"989\":2,\"990\":1,\"992\":1,\"1011\":2,\"1050\":1,\"1071\":1}}],[\"in\",{\"0\":{\"549\":1},\"1\":{\"90\":9,\"200\":2,\"368\":1,\"370\":1,\"395\":1,\"447\":3,\"448\":1,\"449\":2,\"458\":1,\"459\":2,\"483\":1,\"485\":1,\"486\":1,\"505\":1,\"512\":1,\"519\":2,\"523\":55,\"537\":10,\"540\":2,\"543\":22,\"547\":22,\"548\":5,\"549\":1,\"557\":5,\"560\":3,\"563\":6,\"915\":7,\"958\":4,\"972\":2,\"973\":1,\"1045\":1,\"1047\":1,\"1052\":2,\"1055\":9,\"1056\":2,\"1072\":5,\"1073\":1,\"1074\":2,\"1095\":1,\"1115\":1,\"1117\":2,\"1118\":17,\"1119\":1,\"1120\":7,\"1121\":1,\"1123\":2,\"1124\":9,\"1125\":3,\"1126\":8,\"1127\":3,\"1138\":1,\"1179\":2,\"1205\":1,\"1208\":3,\"1212\":2,\"1242\":1}}],[\"incoming\",{\"1\":{\"1055\":2}}],[\"income\",{\"1\":{\"540\":2}}],[\"inconvenience\",{\"1\":{\"547\":1}}],[\"incorrect\",{\"1\":{\"467\":1}}],[\"incident\",{\"1\":{\"537\":1,\"563\":1}}],[\"incredible\",{\"1\":{\"523\":2}}],[\"increases\",{\"1\":{\"523\":1}}],[\"increased\",{\"1\":{\"523\":2}}],[\"increase\",{\"1\":{\"523\":2,\"547\":1}}],[\"increment\",{\"1\":{\"369\":4,\"403\":4,\"407\":4,\"410\":2}}],[\"incrbyfloat\",{\"1\":{\"403\":1}}],[\"incrby\",{\"1\":{\"403\":1}}],[\"incr\",{\"1\":{\"403\":1}}],[\"included\",{\"1\":{\"449\":2,\"563\":1,\"1052\":1}}],[\"include\",{\"1\":{\"90\":14,\"548\":1,\"1079\":1}}],[\"inc\",{\"0\":{\"369\":1},\"1\":{\"90\":1,\"365\":1,\"369\":8}}],[\"inputintoyaml\",{\"1\":{\"905\":2}}],[\"inputintojson\",{\"1\":{\"905\":7}}],[\"input\",{\"1\":{\"90\":1,\"279\":2,\"905\":7,\"968\":4,\"992\":1,\"1009\":2}}],[\"int类型空指针\",{\"1\":{\"1191\":1}}],[\"int表示长度为5的整型数组\",{\"1\":{\"1188\":1}}],[\"intvar\",{\"1\":{\"1162\":4}}],[\"intvarp\",{\"1\":{\"992\":1}}],[\"int16\",{\"1\":{\"398\":1,\"1188\":1}}],[\"int32\",{\"1\":{\"398\":3,\"1084\":1,\"1142\":2,\"1143\":2,\"1188\":1,\"1238\":2}}],[\"int8\",{\"1\":{\"398\":1,\"1056\":1,\"1188\":1}}],[\"int64\",{\"1\":{\"286\":2,\"395\":1,\"398\":2,\"975\":1,\"978\":2,\"980\":7,\"1019\":2,\"1080\":2,\"1084\":1,\"1132\":1,\"1146\":1,\"1161\":1,\"1188\":1,\"1198\":1,\"1207\":3,\"1212\":8,\"1241\":1}}],[\"intelligence\",{\"1\":{\"523\":2,\"563\":1,\"569\":1,\"673\":1}}],[\"intention\",{\"1\":{\"519\":1}}],[\"integer\",{\"1\":{\"429\":2,\"473\":2}}],[\"integerbreak\",{\"1\":{\"231\":1}}],[\"inter\",{\"1\":{\"1139\":3}}],[\"intercepter\",{\"1\":{\"1100\":1}}],[\"interceptor\",{\"1\":{\"1097\":1}}],[\"interrupt\",{\"1\":{\"1072\":1,\"1146\":1}}],[\"interactive\",{\"1\":{\"543\":1}}],[\"interaction\",{\"1\":{\"523\":3}}],[\"interval\",{\"1\":{\"543\":1}}],[\"internet\",{\"1\":{\"533\":1,\"534\":3,\"547\":1,\"549\":1,\"563\":2,\"1118\":1},\"2\":{\"565\":1}}],[\"internal\",{\"1\":{\"105\":1,\"516\":1,\"1135\":2}}],[\"intertwined\",{\"1\":{\"523\":2}}],[\"interpreter\",{\"1\":{\"505\":1}}],[\"interprocess\",{\"1\":{\"76\":1}}],[\"interfacetype\",{\"1\":{\"1139\":1}}],[\"interface\",{\"0\":{\"1138\":1},\"1\":{\"194\":1,\"516\":1,\"519\":2,\"814\":1,\"820\":1,\"827\":4,\"833\":2,\"844\":2,\"849\":1,\"855\":1,\"861\":1,\"867\":2,\"883\":4,\"905\":1,\"910\":2,\"915\":1,\"921\":1,\"939\":1,\"977\":2,\"980\":1,\"1005\":1,\"1011\":4,\"1047\":1,\"1055\":1,\"1088\":1,\"1097\":3,\"1099\":3,\"1118\":1,\"1138\":12,\"1139\":4,\"1140\":1,\"1163\":1,\"1167\":3,\"1168\":3,\"1169\":3,\"1171\":3,\"1172\":3,\"1173\":3,\"1178\":9,\"1188\":1,\"1189\":2,\"1193\":2,\"1238\":1,\"1242\":2}}],[\"interests\",{\"1\":{\"563\":1}}],[\"interesting\",{\"1\":{\"537\":1,\"548\":1}}],[\"interestrateconfig\",{\"1\":{\"152\":1}}],[\"interestrateconfigcompact\",{\"1\":{\"152\":1}}],[\"interest\",{\"1\":{\"152\":13}}],[\"intset\",{\"1\":{\"398\":5,\"420\":1}}],[\"ints\",{\"1\":{\"212\":1,\"219\":1}}],[\"into\",{\"1\":{\"152\":19,\"523\":11,\"543\":1,\"905\":2,\"975\":3,\"1126\":1}}],[\"int\",{\"1\":{\"90\":12,\"105\":1,\"208\":13,\"209\":11,\"210\":5,\"211\":12,\"212\":20,\"213\":2,\"214\":2,\"215\":9,\"216\":14,\"217\":8,\"218\":8,\"219\":7,\"226\":3,\"227\":3,\"228\":5,\"229\":5,\"230\":4,\"231\":5,\"232\":3,\"235\":4,\"237\":2,\"238\":3,\"239\":6,\"240\":5,\"241\":4,\"242\":4,\"243\":3,\"244\":6,\"245\":5,\"249\":8,\"250\":6,\"252\":10,\"253\":4,\"254\":4,\"255\":5,\"257\":5,\"258\":3,\"259\":7,\"260\":3,\"261\":3,\"262\":3,\"263\":2,\"264\":5,\"265\":7,\"266\":4,\"267\":1,\"268\":5,\"275\":6,\"276\":2,\"278\":2,\"279\":5,\"280\":6,\"281\":3,\"282\":3,\"283\":2,\"284\":2,\"285\":5,\"286\":3,\"287\":1,\"288\":1,\"290\":1,\"293\":2,\"294\":2,\"300\":3,\"301\":5,\"302\":3,\"303\":2,\"304\":4,\"305\":5,\"307\":8,\"311\":1,\"312\":4,\"313\":7,\"315\":2,\"317\":3,\"318\":3,\"319\":4,\"320\":4,\"321\":5,\"322\":1,\"323\":6,\"324\":1,\"325\":8,\"326\":2,\"327\":2,\"328\":3,\"329\":5,\"330\":5,\"331\":3,\"332\":4,\"335\":2,\"336\":10,\"393\":2,\"394\":1,\"395\":3,\"397\":1,\"402\":2,\"417\":1,\"426\":6,\"427\":5,\"428\":1,\"513\":3,\"514\":1,\"516\":1,\"820\":4,\"827\":4,\"838\":1,\"844\":5,\"855\":10,\"874\":7,\"875\":2,\"898\":3,\"927\":5,\"944\":1,\"948\":7,\"949\":3,\"950\":2,\"959\":15,\"967\":10,\"968\":6,\"970\":1,\"973\":8,\"978\":3,\"979\":3,\"991\":4,\"992\":1,\"1010\":1,\"1019\":9,\"1034\":1,\"1035\":1,\"1036\":1,\"1037\":1,\"1038\":1,\"1063\":10,\"1067\":2,\"1093\":1,\"1122\":5,\"1125\":1,\"1126\":7,\"1127\":5,\"1161\":10,\"1162\":1,\"1163\":2,\"1167\":3,\"1169\":3,\"1171\":5,\"1172\":3,\"1173\":4,\"1179\":2,\"1187\":1,\"1188\":10,\"1189\":3,\"1190\":2,\"1191\":5,\"1192\":3,\"1194\":1,\"1199\":1,\"1208\":2,\"1212\":18,\"1240\":1,\"1241\":2}}],[\"introduced\",{\"1\":{\"1124\":1}}],[\"introducing\",{\"1\":{\"1124\":1}}],[\"introduction\",{\"1\":{\"1118\":1}}],[\"intro\",{\"1\":{\"17\":1,\"33\":1}}],[\"insecure\",{\"1\":{\"1067\":2,\"1079\":1,\"1095\":1}}],[\"insertymany\",{\"1\":{\"1242\":1}}],[\"insertmany\",{\"1\":{\"1231\":1}}],[\"insertone\",{\"1\":{\"1228\":1,\"1238\":2,\"1240\":1,\"1241\":2,\"1242\":1}}],[\"insert\",{\"0\":{\"478\":1},\"1\":{\"362\":1,\"364\":1,\"369\":2,\"460\":3,\"478\":6,\"975\":3,\"1228\":1,\"1231\":1,\"1240\":2}}],[\"insight\",{\"1\":{\"673\":1}}],[\"inside\",{\"1\":{\"475\":1,\"523\":2,\"540\":1,\"549\":1,\"993\":4,\"1056\":2,\"1126\":1}}],[\"insurance\",{\"1\":{\"152\":20}}],[\"inspect\",{\"1\":{\"74\":3}}],[\"instruments\",{\"1\":{\"543\":1}}],[\"instructions\",{\"1\":{\"956\":1}}],[\"instruction\",{\"1\":{\"56\":1}}],[\"instead\",{\"1\":{\"537\":1}}],[\"instance\",{\"1\":{\"898\":2,\"899\":3,\"972\":1,\"1051\":1}}],[\"instantly\",{\"1\":{\"543\":1}}],[\"instant\",{\"1\":{\"523\":1}}],[\"install\",{\"1\":{\"58\":4,\"192\":1,\"977\":1,\"989\":1,\"1067\":2,\"1079\":1}}],[\"itab\",{\"1\":{\"1139\":7}}],[\"ition\",{\"1\":{\"944\":1}}],[\"iteratee\",{\"1\":{\"1019\":8}}],[\"iterate\",{\"1\":{\"827\":4}}],[\"iterator\",{\"1\":{\"824\":1,\"827\":6,\"828\":1}}],[\"item\",{\"1\":{\"523\":2,\"1019\":11}}],[\"itself\",{\"1\":{\"523\":8}}],[\"its\",{\"1\":{\"519\":1,\"523\":21,\"547\":1,\"560\":1}}],[\"itoa\",{\"1\":{\"317\":1,\"318\":1,\"514\":2,\"1163\":1,\"1198\":3}}],[\"it这是两个参数\",{\"1\":{\"50\":1}}],[\"it\",{\"0\":{\"1117\":1},\"1\":{\"50\":1,\"68\":1,\"90\":3,\"468\":1,\"475\":1,\"483\":1,\"519\":4,\"523\":49,\"537\":2,\"540\":4,\"543\":10,\"547\":13,\"548\":6,\"549\":5,\"557\":1,\"560\":1,\"563\":3,\"1055\":3,\"1056\":1,\"1115\":1,\"1116\":1,\"1117\":3,\"1118\":4,\"1119\":1,\"1122\":3,\"1123\":1,\"1124\":4,\"1125\":1,\"1126\":5,\"1127\":3,\"1219\":1}}],[\"ipmask\",{\"1\":{\"1161\":1}}],[\"ipod\",{\"1\":{\"1117\":1}}],[\"ip课里面的第三场直播是从工业时代走向认知时代\",{\"1\":{\"669\":1}}],[\"iphone\",{\"1\":{\"560\":1}}],[\"iphone12\",{\"1\":{\"537\":1}}],[\"ip电话是先进技术\",{\"1\":{\"528\":1}}],[\"ip地址\",{\"1\":{\"426\":1}}],[\"ipv6\",{\"1\":{\"116\":1}}],[\"ipc等等的相互隔离\",{\"1\":{\"75\":1}}],[\"ipc\",{\"1\":{\"75\":1,\"76\":4}}],[\"ip\",{\"0\":{\"90\":1},\"1\":{\"64\":1,\"76\":1,\"90\":1,\"426\":2,\"427\":2,\"563\":1,\"1161\":3}}],[\"ip><target\",{\"1\":{\"431\":1}}],[\"ip>\",{\"1\":{\"49\":1,\"426\":2}}],[\"ip详解\",{\"1\":{\"4\":1}}],[\"io就是专门在线处理jwt的网站\",{\"1\":{\"1047\":1}}],[\"ioutil\",{\"1\":{\"973\":2}}],[\"iota\",{\"1\":{\"874\":1,\"1010\":1,\"1179\":1,\"1188\":1}}],[\"ios\",{\"1\":{\"494\":1}}],[\"io官方获取\",{\"1\":{\"49\":1}}],[\"io\",{\"1\":{\"48\":2,\"49\":3,\"58\":2,\"73\":2,\"77\":1,\"357\":1,\"377\":2,\"412\":3,\"448\":2,\"450\":7,\"451\":6,\"459\":1,\"487\":1,\"511\":1,\"516\":1,\"973\":1,\"1005\":1,\"1055\":1,\"1067\":2,\"1072\":4,\"1074\":1,\"1153\":7,\"1169\":4,\"1172\":4,\"1173\":1,\"1181\":2}}],[\"id3\",{\"1\":{\"1227\":1}}],[\"id2\",{\"1\":{\"1227\":1}}],[\"id字段设置为主键\",{\"1\":{\"1218\":1}}],[\"idletimeout\",{\"1\":{\"1055\":1}}],[\"identities\",{\"1\":{\"563\":1}}],[\"idea\",{\"1\":{\"540\":1,\"543\":1,\"563\":1}}],[\"ideology\",{\"1\":{\"523\":1,\"547\":1}}],[\"id所指定节点的从节点\",{\"1\":{\"433\":1}}],[\"id所代表节点的clusternode结构\",{\"1\":{\"432\":1}}],[\"id>\",{\"1\":{\"432\":2,\"433\":1}}],[\"id>命令\",{\"1\":{\"431\":2}}],[\"id>命令让目标节点准备好从源节点导入属于槽的键值对\",{\"1\":{\"431\":1}}],[\"id域记录的服务器运行id\",{\"1\":{\"426\":1}}],[\"ids列表中\",{\"1\":{\"362\":1}}],[\"ids\",{\"1\":{\"362\":5,\"458\":2}}],[\"id指针可以知道该记录是被哪一个事务修改的\",{\"1\":{\"356\":1}}],[\"id事务id\",{\"1\":{\"356\":1}}],[\"id和roll\",{\"1\":{\"356\":1}}],[\"id和github\",{\"1\":{\"192\":1}}],[\"id和discord\",{\"1\":{\"192\":1}}],[\"id和client\",{\"1\":{\"192\":3}}],[\"id=\",{\"1\":{\"192\":2,\"362\":1}}],[\"id\",{\"1\":{\"28\":1,\"47\":1,\"49\":1,\"51\":2,\"54\":1,\"55\":10,\"66\":1,\"68\":2,\"69\":1,\"70\":1,\"76\":2,\"111\":1,\"117\":1,\"192\":1,\"194\":7,\"195\":8,\"355\":2,\"360\":1,\"362\":24,\"371\":2,\"372\":2,\"373\":3,\"374\":2,\"425\":2,\"426\":2,\"433\":1,\"435\":1,\"456\":2,\"458\":13,\"563\":1,\"975\":4,\"977\":1,\"1047\":2,\"1088\":1,\"1236\":1,\"1239\":1,\"1241\":4}}],[\"hchan分配一段内存空间\",{\"1\":{\"1137\":1}}],[\"hchan\",{\"1\":{\"1137\":2}}],[\"hchan结构体表示\",{\"1\":{\"1137\":1}}],[\"h2\",{\"1\":{\"1055\":1}}],[\"h2non\",{\"1\":{\"973\":1}}],[\"hpprinter\",{\"1\":{\"910\":3}}],[\"hp\",{\"1\":{\"910\":7}}],[\"hr\",{\"1\":{\"792\":1}}],[\"hydrogen\",{\"1\":{\"523\":1}}],[\"hypatia\",{\"1\":{\"68\":1}}],[\"hugo等等\",{\"1\":{\"988\":1}}],[\"huge\",{\"1\":{\"523\":6}}],[\"huliwei本人推荐\",{\"1\":{\"779\":1}}],[\"hunters\",{\"1\":{\"523\":1}}],[\"hundred\",{\"1\":{\"523\":1,\"543\":1}}],[\"hundreds\",{\"1\":{\"523\":1}}],[\"hurricane\",{\"1\":{\"523\":1}}],[\"human\",{\"1\":{\"523\":2,\"543\":1,\"547\":6,\"563\":1}}],[\"humans\",{\"1\":{\"523\":7,\"563\":1}}],[\"hubs\",{\"1\":{\"1193\":5}}],[\"hub\",{\"1\":{\"48\":1,\"49\":3,\"51\":3,\"55\":1,\"57\":1}}],[\"hs256\",{\"1\":{\"1047\":1}}],[\"hscan\",{\"1\":{\"407\":1}}],[\"hsetnx\",{\"1\":{\"407\":1}}],[\"hset\",{\"1\":{\"407\":1}}],[\"hdel\",{\"1\":{\"407\":1}}],[\"hlen\",{\"1\":{\"407\":1}}],[\"hvals\",{\"1\":{\"407\":1}}],[\"hkeys\",{\"1\":{\"407\":1}}],[\"hmacsha256\",{\"1\":{\"1047\":1}}],[\"hmget\",{\"1\":{\"407\":1}}],[\"hmset\",{\"1\":{\"407\":1}}],[\"hgetall\",{\"1\":{\"407\":1}}],[\"hget\",{\"1\":{\"407\":1}}],[\"hijacked\",{\"1\":{\"1055\":2}}],[\"him\",{\"1\":{\"543\":1}}],[\"his\",{\"1\":{\"537\":1,\"540\":1,\"543\":1,\"547\":2,\"1116\":3,\"1117\":1}}],[\"history\",{\"1\":{\"217\":3,\"523\":1}}],[\"hitler\",{\"1\":{\"523\":1}}],[\"hincrbyfloat\",{\"1\":{\"407\":1}}],[\"hincrby\",{\"1\":{\"407\":1}}],[\"hi\",{\"1\":{\"325\":3,\"332\":5,\"833\":2,\"1132\":1}}],[\"higher\",{\"1\":{\"523\":1,\"563\":1}}],[\"high\",{\"1\":{\"283\":7,\"523\":12,\"537\":1,\"563\":1,\"1118\":1}}],[\"h\",{\"1\":{\"266\":1,\"426\":1,\"435\":4,\"473\":2,\"514\":3,\"814\":9,\"972\":2,\"988\":1,\"1055\":2,\"1100\":2}}],[\"h>\",{\"1\":{\"90\":14}}],[\"hence\",{\"1\":{\"1118\":1,\"1119\":2,\"1122\":1,\"1124\":1,\"1125\":1}}],[\"heinemeier\",{\"1\":{\"721\":1}}],[\"height\",{\"1\":{\"563\":1,\"1192\":3}}],[\"he\",{\"1\":{\"537\":3,\"547\":2,\"1117\":1}}],[\"hex\",{\"1\":{\"511\":1,\"514\":1}}],[\"hexists\",{\"1\":{\"407\":1}}],[\"heroin\",{\"1\":{\"563\":1}}],[\"heroes\",{\"1\":{\"523\":1}}],[\"heroku\",{\"1\":{\"193\":1}}],[\"her\",{\"1\":{\"523\":1}}],[\"herself\",{\"1\":{\"523\":3}}],[\"here\",{\"1\":{\"90\":1,\"301\":1,\"468\":3,\"483\":2,\"523\":2,\"537\":1,\"547\":2,\"1055\":1}}],[\"hear\",{\"1\":{\"543\":1}}],[\"heart\",{\"1\":{\"523\":1,\"548\":1}}],[\"heard\",{\"1\":{\"90\":1}}],[\"heaven\",{\"1\":{\"523\":1}}],[\"heavens\",{\"1\":{\"523\":1}}],[\"heavy\",{\"1\":{\"523\":1}}],[\"heavier\",{\"1\":{\"523\":1}}],[\"heat\",{\"1\":{\"523\":2}}],[\"heapareana都会管理64mb的内存\",{\"1\":{\"1149\":1}}],[\"heaparena数组管理所有内存\",{\"1\":{\"1149\":1}}],[\"heapify时间复杂度o\",{\"1\":{\"950\":1}}],[\"heapify\",{\"1\":{\"313\":4,\"950\":4}}],[\"heap\",{\"1\":{\"313\":2,\"1133\":1}}],[\"headb\",{\"1\":{\"324\":4}}],[\"heada\",{\"1\":{\"324\":4}}],[\"head>next\",{\"1\":{\"295\":1}}],[\"head\",{\"1\":{\"278\":5,\"290\":4,\"294\":8,\"295\":9,\"296\":3,\"308\":5,\"394\":1,\"1135\":1,\"1146\":1}}],[\"header和trailer可以简单的理解为头和尾\",{\"1\":{\"1095\":1}}],[\"header中指定的算法\",{\"1\":{\"1047\":1}}],[\"header存储了加密算法和token类型\",{\"1\":{\"1047\":1}}],[\"headers\",{\"1\":{\"195\":1,\"814\":3}}],[\"header\",{\"1\":{\"152\":2,\"397\":1,\"434\":1,\"516\":1,\"814\":4,\"1047\":2,\"1055\":2,\"1080\":2,\"1095\":11}}],[\"health\",{\"0\":{\"164\":1},\"1\":{\"150\":2,\"159\":1,\"547\":1,\"549\":1,\"563\":1}}],[\"helm\",{\"1\":{\"827\":3}}],[\"helium\",{\"1\":{\"523\":2}}],[\"helllo\",{\"1\":{\"470\":1}}],[\"helloresp\",{\"1\":{\"1067\":6,\"1072\":11,\"1079\":1,\"1080\":4,\"1095\":1}}],[\"helloreq\",{\"1\":{\"1067\":6,\"1072\":12,\"1079\":1,\"1080\":5,\"1095\":2}}],[\"hello函数返回\",{\"1\":{\"1056\":1}}],[\"hello函数作为路由处理函数\",{\"1\":{\"1056\":1}}],[\"hello路径注册了一个\",{\"1\":{\"1056\":1}}],[\"hello请求处理函数\",{\"1\":{\"972\":1}}],[\"hellohandler\",{\"1\":{\"972\":12}}],[\"hello没有引用整个string\",{\"1\":{\"468\":1}}],[\"hello频道接收信息\",{\"1\":{\"426\":1}}],[\"hello频道发送信息\",{\"1\":{\"426\":1}}],[\"hello频道发送了一条信息\",{\"1\":{\"426\":1}}],[\"hello频道的订阅会一直持续到sentinel与服务器的连接断开为止\",{\"1\":{\"426\":1}}],[\"hello频道的任何信息\",{\"1\":{\"426\":1}}],[\"hello频道\",{\"1\":{\"426\":1}}],[\"hello\",{\"1\":{\"51\":1,\"64\":3,\"66\":6,\"90\":5,\"333\":2,\"334\":2,\"393\":1,\"402\":1,\"426\":3,\"448\":5,\"449\":5,\"450\":1,\"451\":3,\"467\":1,\"468\":6,\"470\":1,\"472\":7,\"473\":5,\"475\":2,\"477\":3,\"478\":3,\"481\":4,\"482\":2,\"483\":1,\"833\":2,\"972\":9,\"977\":1,\"978\":1,\"992\":1,\"1005\":1,\"1050\":2,\"1053\":2,\"1067\":20,\"1072\":6,\"1073\":1,\"1079\":12,\"1080\":21,\"1095\":3,\"1100\":2,\"1119\":10,\"1124\":19,\"1153\":2,\"1166\":1,\"1172\":2,\"1188\":1,\"1189\":2,\"1192\":1,\"1200\":1}}],[\"helps\",{\"1\":{\"1123\":1}}],[\"helpful\",{\"1\":{\"1073\":1}}],[\"help等\",{\"1\":{\"988\":1}}],[\"helplessness\",{\"1\":{\"537\":1}}],[\"help\",{\"1\":{\"49\":1,\"90\":1,\"467\":1,\"473\":1,\"519\":1,\"540\":2,\"563\":1,\"1026\":2}}],[\"hack\",{\"1\":{\"1119\":1}}],[\"hacknews其实就是这些网站中的代表\",{\"1\":{\"532\":1}}],[\"habit\",{\"1\":{\"563\":1}}],[\"habits\",{\"1\":{\"543\":1}}],[\"harvest\",{\"1\":{\"704\":1}}],[\"harmful\",{\"1\":{\"563\":1}}],[\"harmed\",{\"1\":{\"563\":1}}],[\"hard\",{\"1\":{\"537\":1,\"543\":2,\"547\":1}}],[\"haha\",{\"1\":{\"560\":1}}],[\"half\",{\"1\":{\"543\":1,\"547\":1}}],[\"halfway\",{\"1\":{\"523\":1,\"563\":1}}],[\"had\",{\"1\":{\"523\":3,\"560\":1}}],[\"hansson创建ruby\",{\"1\":{\"721\":1}}],[\"hang\",{\"1\":{\"563\":1}}],[\"hanging\",{\"1\":{\"523\":1,\"1055\":1}}],[\"handed\",{\"1\":{\"548\":1}}],[\"handshake\",{\"1\":{\"1055\":2}}],[\"handshakecontext\",{\"1\":{\"1055\":1}}],[\"hands\",{\"1\":{\"523\":1}}],[\"hand\",{\"1\":{\"519\":1,\"523\":1,\"540\":1,\"543\":1,\"563\":1,\"1122\":1}}],[\"handlehttp\",{\"1\":{\"1063\":1}}],[\"handlehttprequest函数的主要处理位于中间的for循环中\",{\"1\":{\"1055\":1}}],[\"handlehttprequest函数\",{\"1\":{\"1055\":1}}],[\"handlehttprequest\",{\"1\":{\"1055\":3}}],[\"handlemethodnotallowed\",{\"1\":{\"1055\":1}}],[\"handle这个函数\",{\"1\":{\"1053\":1}}],[\"handle函数\",{\"1\":{\"1053\":1}}],[\"handle函数主要用于事件处理函数注册到指定的http方法+相对路径上\",{\"1\":{\"1053\":1}}],[\"handleevent\",{\"1\":{\"1011\":5}}],[\"handleauth\",{\"1\":{\"814\":4}}],[\"handlewriteblockchain\",{\"1\":{\"516\":2}}],[\"handlegetblockchain\",{\"1\":{\"516\":2}}],[\"handlefunc函数\",{\"1\":{\"1057\":1}}],[\"handlefunc\",{\"1\":{\"516\":2,\"1045\":3,\"1047\":2,\"1073\":2,\"1193\":1}}],[\"handlerchain\",{\"1\":{\"1055\":1}}],[\"handlerfunc函数\",{\"1\":{\"1056\":1}}],[\"handlerfunc\",{\"1\":{\"1052\":3,\"1053\":1}}],[\"handlers中\",{\"1\":{\"1052\":1,\"1055\":1}}],[\"handlerschain\",{\"1\":{\"1052\":1,\"1053\":2}}],[\"handlers\",{\"1\":{\"814\":4,\"972\":1,\"1052\":3,\"1053\":11,\"1055\":6,\"1056\":3}}],[\"handlerequest\",{\"1\":{\"814\":3}}],[\"handler\",{\"1\":{\"516\":2,\"1053\":1,\"1054\":2,\"1055\":12,\"1056\":1,\"1079\":1,\"1097\":1,\"1099\":2,\"1193\":3}}],[\"handle\",{\"1\":{\"200\":1,\"463\":2,\"543\":1,\"849\":4,\"1053\":4,\"1055\":1,\"1188\":2}}],[\"handling`\",{\"1\":{\"448\":1}}],[\"handling\",{\"1\":{\"90\":18,\"448\":2,\"1116\":1,\"1193\":4}}],[\"happily\",{\"1\":{\"543\":1}}],[\"happened\",{\"1\":{\"523\":1,\"1119\":1}}],[\"happen\",{\"1\":{\"523\":2,\"547\":1,\"1125\":1}}],[\"happens\",{\"1\":{\"523\":3,\"1118\":1,\"1119\":1}}],[\"happy\",{\"1\":{\"277\":1,\"560\":2}}],[\"hasnext\",{\"1\":{\"827\":7,\"828\":1}}],[\"hasprefix\",{\"1\":{\"814\":1,\"976\":1,\"1193\":4}}],[\"has\",{\"1\":{\"519\":2,\"523\":4,\"543\":5,\"547\":2,\"549\":1,\"563\":2,\"976\":1,\"1118\":1,\"1120\":1,\"1122\":2,\"1127\":1,\"1138\":1,\"1242\":2}}],[\"hash是表示此数据记录的sha256标识符\",{\"1\":{\"512\":1}}],[\"hashmap<u32\",{\"1\":{\"460\":1}}],[\"hashmap\",{\"1\":{\"460\":5}}],[\"hash\",{\"0\":{\"406\":1},\"1\":{\"406\":5,\"413\":1,\"420\":2,\"512\":2,\"513\":1,\"514\":3,\"515\":2,\"1139\":5}}],[\"hash的底层对象是ziplist或hash\",{\"1\":{\"400\":1}}],[\"hashfunction\",{\"1\":{\"395\":1}}],[\"hammingweight\",{\"1\":{\"287\":1}}],[\"haven\",{\"1\":{\"90\":1,\"549\":1}}],[\"have\",{\"1\":{\"90\":2,\"519\":3,\"523\":4,\"537\":5,\"540\":4,\"543\":12,\"547\":10,\"548\":5,\"549\":2,\"557\":1,\"563\":9,\"976\":1,\"1055\":1,\"1118\":3,\"1119\":2,\"1124\":2,\"1127\":1}}],[\"hatred\",{\"1\":{\"540\":1}}],[\"hat\",{\"1\":{\"48\":1}}],[\"hooks\",{\"0\":{\"1240\":1},\"1\":{\"1055\":1,\"1222\":1,\"1240\":1}}],[\"hook\",{\"1\":{\"1055\":1}}],[\"house\",{\"1\":{\"563\":1}}],[\"housework\",{\"1\":{\"543\":2}}],[\"hourly\",{\"1\":{\"1003\":1}}],[\"hour\",{\"1\":{\"547\":1,\"979\":12,\"997\":4,\"1207\":1,\"1208\":1,\"1212\":7}}],[\"hours\",{\"1\":{\"69\":2,\"537\":6,\"548\":1,\"585\":1,\"978\":1,\"1002\":1,\"1207\":4,\"1212\":2}}],[\"hope\",{\"1\":{\"523\":1,\"547\":1,\"549\":1}}],[\"however\",{\"1\":{\"523\":3}}],[\"how\",{\"0\":{\"1117\":1},\"1\":{\"523\":3,\"543\":2,\"547\":4,\"548\":1,\"563\":1,\"770\":1,\"808\":1,\"993\":1,\"1055\":1,\"1115\":2,\"1118\":1,\"1119\":1,\"1120\":3,\"1121\":1,\"1123\":1}}],[\"horrors\",{\"1\":{\"523\":1}}],[\"horse\",{\"1\":{\"266\":2}}],[\"homehandler\",{\"1\":{\"1045\":2,\"1047\":2}}],[\"home\",{\"1\":{\"543\":2,\"547\":1,\"1047\":1,\"1073\":1}}],[\"homework\",{\"1\":{\"543\":4}}],[\"homepage\",{\"1\":{\"192\":1,\"1073\":2}}],[\"homogeneous\",{\"1\":{\"523\":1}}],[\"hold\",{\"1\":{\"548\":1,\"557\":1}}],[\"holidays\",{\"1\":{\"543\":2}}],[\"hole\",{\"1\":{\"523\":1}}],[\"holla中国人नमस्ते\",{\"1\":{\"487\":1}}],[\"hola\",{\"1\":{\"473\":3}}],[\"host=\",{\"1\":{\"194\":1}}],[\"hostname\",{\"1\":{\"76\":1}}],[\"host\",{\"1\":{\"76\":3,\"194\":2,\"426\":1,\"1055\":1}}],[\"h1>\",{\"1\":{\"56\":1,\"58\":1}}],[\"ht\",{\"1\":{\"395\":6,\"396\":1}}],[\"htonl\",{\"1\":{\"90\":2}}],[\"htons\",{\"1\":{\"90\":2}}],[\"http来定义\",{\"1\":{\"1079\":1}}],[\"http协议其实也能实现啊\",{\"1\":{\"1073\":1}}],[\"http协议是无状态协议\",{\"1\":{\"1044\":1}}],[\"http2支持服务器端主动向客户端去发送流数据\",{\"1\":{\"1072\":1}}],[\"http库实现\",{\"1\":{\"1057\":1}}],[\"http的server\",{\"1\":{\"1055\":1}}],[\"http的server结构体类型中有一个handler接口类型的handler\",{\"1\":{\"1055\":1}}],[\"http的handler接口的servehttp函数\",{\"1\":{\"1055\":1}}],[\"http的handler接口\",{\"1\":{\"1055\":1}}],[\"http包中的http的路径\",{\"1\":{\"1055\":1}}],[\"http包\",{\"1\":{\"1055\":1}}],[\"http包来实现的\",{\"1\":{\"1055\":1}}],[\"http包的官网去先了解一下\",{\"1\":{\"516\":1}}],[\"httpmethod\",{\"1\":{\"1053\":6,\"1055\":4}}],[\"httpapi\",{\"1\":{\"980\":3}}],[\"httptest\",{\"0\":{\"972\":1},\"1\":{\"972\":5,\"976\":1}}],[\"httpbodyauth\",{\"1\":{\"814\":3}}],[\"httpheaderauth\",{\"1\":{\"814\":3}}],[\"httpport\",{\"1\":{\"516\":2}}],[\"http\",{\"0\":{\"1055\":1},\"1\":{\"58\":2,\"192\":3,\"511\":1,\"516\":15,\"534\":1,\"814\":1,\"972\":8,\"973\":6,\"976\":1,\"980\":3,\"1045\":18,\"1047\":21,\"1050\":1,\"1053\":2,\"1054\":2,\"1055\":31,\"1063\":2,\"1073\":11,\"1079\":4,\"1080\":9,\"1144\":1,\"1193\":22}}],[\"httpd\",{\"1\":{\"57\":1}}],[\"https\",{\"1\":{\"16\":1,\"27\":1,\"55\":1,\"144\":1,\"195\":5,\"459\":1,\"464\":1,\"494\":1,\"523\":3,\"534\":4,\"569\":2,\"609\":1,\"956\":1,\"976\":4,\"977\":1,\"980\":2,\"1005\":1,\"1011\":1,\"1018\":1,\"1019\":1,\"1038\":3,\"1054\":1,\"1055\":2,\"1067\":2,\"1074\":1,\"1079\":1,\"1084\":1,\"1140\":1,\"1194\":1,\"1204\":1}}],[\"html5推出了websocket标准\",{\"1\":{\"1073\":1}}],[\"html=c\",{\"1\":{\"969\":2}}],[\"html目录\",{\"1\":{\"74\":1}}],[\"html\",{\"1\":{\"55\":2,\"56\":2,\"58\":2,\"74\":10,\"464\":1,\"569\":2,\"609\":1,\"1118\":2}}],[\"hh\",{\"1\":{\"11\":1}}],[\"苹果公司发布了iphone\",{\"1\":{\"11\":1}}],[\"恶性竞争无非如此\",{\"1\":{\"10\":1}}],[\"那剩下的age呢\",{\"1\":{\"1080\":1}}],[\"那能不能说\",{\"1\":{\"1079\":1}}],[\"那用户就只能重新登录了\",{\"1\":{\"1047\":1}}],[\"那其实我们需要的不止是4\",{\"1\":{\"947\":1}}],[\"那怎么写呢\",{\"1\":{\"947\":1}}],[\"那怎么解决这类问题呢\",{\"1\":{\"386\":1}}],[\"那怎么解决这个问题呢\",{\"1\":{\"383\":1}}],[\"那怎么解决预读失败而导致的缓存命中率较低的问题呢\",{\"1\":{\"377\":1}}],[\"那之后也不会获利了\",{\"1\":{\"800\":1}}],[\"那还有没有别的用法\",{\"1\":{\"1080\":1}}],[\"那还是算了吧\",{\"1\":{\"789\":1}}],[\"那还不如不放假\",{\"1\":{\"695\":1}}],[\"那使用arc可以轻松搞定\",{\"1\":{\"731\":1}}],[\"那只是别人的计算机\",{\"1\":{\"709\":1}}],[\"那不是云\",{\"1\":{\"709\":1}}],[\"那不妨站在下一代的视角考虑问题\",{\"1\":{\"534\":1}}],[\"那言归正传\",{\"1\":{\"695\":1}}],[\"那算法还是会认为你喜欢这类视频\",{\"1\":{\"689\":1}}],[\"那卖奢饰品\",{\"1\":{\"689\":1}}],[\"那也是涨经验的后悔\",{\"1\":{\"680\":1}}],[\"那也不要试图减缓这个过程并把其中任何一个都开发出来\",{\"1\":{\"627\":1}}],[\"那如果申请内存时mcache里没有空闲对口的sizeclass的span呢\",{\"1\":{\"1149\":1}}],[\"那如果我们想让中间件有加密处理这一层呢\",{\"1\":{\"1099\":1}}],[\"那如果我们传入query参数呢\",{\"1\":{\"1080\":1}}],[\"那如果是高考志愿\",{\"1\":{\"680\":1}}],[\"那如果你确实不想在应用中去写消息队列\",{\"1\":{\"385\":1}}],[\"那干脆就自己写好了\",{\"1\":{\"660\":1}}],[\"那既然时间是最重要的生产资料了\",{\"1\":{\"647\":1}}],[\"那你就不知道如何工作\",{\"1\":{\"788\":1}}],[\"那你很可能会比加入到大叫大嚷的争吵中感觉更好\",{\"1\":{\"653\":1}}],[\"那你需要人力\",{\"1\":{\"646\":1,\"677\":1}}],[\"那你一定听说过国家反诈骗app\",{\"1\":{\"533\":1}}],[\"那时被每个称得上伟大的科学家接受的\",{\"1\":{\"643\":1}}],[\"那大概率就像问对特朗普的喜好一样\",{\"1\":{\"631\":1}}],[\"那它就是可能被指控的罪行\",{\"1\":{\"628\":1}}],[\"那它是在什么时候释放的\",{\"1\":{\"367\":1}}],[\"那书面交流的工作就会比较容易\",{\"1\":{\"627\":1}}],[\"那要保持耐心\",{\"1\":{\"627\":1}}],[\"那世世代代被水淹的那一批人其实不是气候难民\",{\"1\":{\"609\":1}}],[\"那ai目前而言还不能替代\",{\"1\":{\"605\":1}}],[\"那ai确实可以让人云亦云的劳动力成本降低为零\",{\"1\":{\"605\":1}}],[\"那里几乎没有什么变化\",{\"1\":{\"578\":1}}],[\"那里相当黑暗\",{\"1\":{\"576\":1}}],[\"那里是现实世界的起点\",{\"1\":{\"570\":1}}],[\"那是不是我们还可以进一步操作比如动态绑定参数等等\",{\"1\":{\"1193\":1}}],[\"那是由外部系统决定的\",{\"1\":{\"1009\":1}}],[\"那是谁啊\",{\"1\":{\"680\":1}}],[\"那是因为你内心深处不想采取行动的那些部分排名高于你希望采取行动的部分\",{\"1\":{\"586\":1}}],[\"那是可笑的\",{\"1\":{\"585\":1}}],[\"那是你的工作\",{\"1\":{\"577\":1}}],[\"那是我们压抑和否认的部分所在的地方\",{\"1\":{\"576\":1}}],[\"那是好奇心趋势的自然对新生事物的尝试\",{\"1\":{\"534\":1}}],[\"那个环境和游戏板块本身也会发展变化\",{\"1\":{\"585\":1}}],[\"那个特定的原因在什么时候在你心中获得如此重要的地位\",{\"1\":{\"575\":1}}],[\"那个时候的服务器成本也很低\",{\"1\":{\"532\":1}}],[\"那个时候手机市场是完全竞争市场\",{\"1\":{\"9\":1}}],[\"那些无法生产的信息被称为无用信息\",{\"1\":{\"647\":1,\"686\":1}}],[\"那些错误我当时心底深处就知道是错误的\",{\"1\":{\"588\":1}}],[\"那些被别人踢进你潜意识的部分\",{\"1\":{\"588\":1}}],[\"那些从根本上违背了你最明智的自我意愿的部分\",{\"1\":{\"577\":1}}],[\"那些停在悬崖边的人喜欢让更明智\",{\"1\":{\"575\":1}}],[\"那些戴着面具的冒名顶替者必须离开\",{\"1\":{\"575\":1}}],[\"那些似乎接受低地位在层次结构中的渴望\",{\"1\":{\"574\":1}}],[\"那些大声哭泣但不断被章鱼的更高优先级部分挤开的渴望\",{\"1\":{\"574\":1}}],[\"那些不为人知的秘密\",{\"1\":{\"551\":1}}],[\"那为什么拿这件事情举例呢\",{\"1\":{\"528\":1}}],[\"那为了能够快速知道哪些缓存页是脏的\",{\"1\":{\"377\":1}}],[\"那可以使用replace\",{\"1\":{\"479\":1}}],[\"那我们可以将通过numfield\",{\"1\":{\"1192\":1}}],[\"那我们可以直接删除某个字段吗\",{\"1\":{\"1084\":1}}],[\"那我们就来实践一下吧\",{\"1\":{\"1097\":1}}],[\"那我们就可以这样去实现\",{\"1\":{\"997\":1}}],[\"那我们就可以用unwrap和expect\",{\"1\":{\"449\":1}}],[\"那我们不只是需要将一个数放到最大的位置上\",{\"1\":{\"945\":1}}],[\"那我们要看背后关键的一点是\",{\"1\":{\"666\":1}}],[\"那我们究竟应该怎样去做呢\",{\"1\":{\"631\":1}}],[\"那我们该如何成为一个独立的个体呢\",{\"1\":{\"623\":1}}],[\"那我们所面临的就是灭种危机了\",{\"1\":{\"610\":1}}],[\"那我们国家也早晚会加入这一历史进程\",{\"1\":{\"534\":1}}],[\"那我们的大众正确吗\",{\"1\":{\"528\":1}}],[\"那我们现在的时代有什么不同吗\",{\"1\":{\"528\":1}}],[\"那我们放到现在再来看这个案件\",{\"1\":{\"528\":1}}],[\"那我们作为时间长河中的个体\",{\"1\":{\"500\":1}}],[\"那我们为什么需要使用前缀来建立索引呢\",{\"1\":{\"353\":1}}],[\"那就说明每个人的价值观有高低上下之分\",{\"1\":{\"666\":1}}],[\"那就再好不过了\",{\"1\":{\"631\":1}}],[\"那就可以称之为气候难民了\",{\"1\":{\"609\":1}}],[\"那就证明你的技术是最容易被替代的那一个\",{\"1\":{\"605\":1}}],[\"那就应该为自己的决策负责\",{\"1\":{\"592\":1}}],[\"那就应当记录下来而不是到头来换得一句这么回事\",{\"1\":{\"566\":1}}],[\"那就仔细分析一下\",{\"1\":{\"574\":1}}],[\"那就是尽量选择可以生产知识的信息去消费\",{\"1\":{\"677\":1}}],[\"那就是内容\",{\"1\":{\"660\":1}}],[\"那就是卖课就是卖知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"那就是金钱是在人的手里流通的\",{\"1\":{\"614\":1}}],[\"那就是全球化是一直是趋势\",{\"1\":{\"534\":1}}],[\"那就是返回t类型的ok\",{\"1\":{\"448\":1}}],[\"那就有可能是未来那个正确方向\",{\"1\":{\"528\":1}}],[\"那就没有过期\",{\"1\":{\"414\":1}}],[\"那就看看text1\",{\"1\":{\"260\":1}}],[\"那当\",{\"1\":{\"413\":1}}],[\"那必须要求所有更新操作完成之前期间\",{\"1\":{\"387\":1}}],[\"那必然要面临一致性问题\",{\"1\":{\"387\":1}}],[\"那什么时候操作缓存呢\",{\"1\":{\"385\":1}}],[\"那这个时候你非常可能若干年后回头看自己的选择大概率会失望\",{\"1\":{\"718\":1}}],[\"那这探索所需的时间终究会散落在各处\",{\"1\":{\"660\":1}}],[\"那这条数据就一直不一致了\",{\"1\":{\"385\":1}}],[\"那这次重试请求也就\",{\"1\":{\"385\":1}}],[\"那这是不是意味着\",{\"1\":{\"385\":1}}],[\"那更好的方案应该怎么做\",{\"1\":{\"385\":1}}],[\"那下次读缓存发现不存在\",{\"1\":{\"384\":1}}],[\"那对应的方案就有\",{\"1\":{\"382\":1}}],[\"那肯定会有性能问题\",{\"1\":{\"381\":1}}],[\"那到底怎么才能避免呢\",{\"1\":{\"377\":1}}],[\"那有什么其他方式可以避免\",{\"1\":{\"364\":1}}],[\"那\",{\"1\":{\"362\":1,\"424\":1}}],[\"那换到数据库中\",{\"1\":{\"350\":1}}],[\"那没啥好说的了\",{\"1\":{\"267\":1}}],[\"那最后当然是取最小值\",{\"1\":{\"265\":1}}],[\"那又有同学问了\",{\"1\":{\"259\":1}}],[\"那一定是他错了\",{\"1\":{\"528\":1}}],[\"那一定是以一个镜像为基础\",{\"1\":{\"57\":1}}],[\"那一个瞬间的画面和信息就记录到了一张照片\",{\"1\":{\"413\":1}}],[\"那一层拷贝到dp\",{\"1\":{\"236\":1}}],[\"那样才能教你你需要在伴侣中学到什么\",{\"1\":{\"585\":1}}],[\"那样返回错误值\",{\"1\":{\"450\":1}}],[\"那样还需要额外执行操作命令的步骤才能恢复数据\",{\"1\":{\"413\":1}}],[\"那样来运行这个镜像\",{\"1\":{\"59\":1}}],[\"那样的打包文件\",{\"1\":{\"46\":1}}],[\"那会有大量的无关内容被添加进来\",{\"1\":{\"55\":1}}],[\"那将视为\",{\"1\":{\"48\":1}}],[\"那创新从哪里来\",{\"1\":{\"11\":1}}],[\"那么工作线程就像下图一样去获取和归还mspan的流程\",{\"1\":{\"1149\":1}}],[\"那么直接读取\",{\"1\":{\"1137\":1}}],[\"那么会直接调用\",{\"1\":{\"1137\":1}}],[\"那么会直接将数据发送给当前\",{\"1\":{\"1137\":1}}],[\"那么会直接返回错误的\",{\"1\":{\"1097\":1}}],[\"那么一开始肯定不会进入这里\",{\"1\":{\"1135\":1}}],[\"那么一切都是可以通过算法去模拟未来的\",{\"1\":{\"533\":1}}],[\"那么grpc\",{\"1\":{\"1078\":1}}],[\"那么grpc是什么呢\",{\"1\":{\"1066\":1}}],[\"那么维护起来会有很大的成本\",{\"1\":{\"1063\":1}}],[\"那么与此相对应的rpc调用即\",{\"1\":{\"1063\":1}}],[\"那么与之对应生命力这个形容词也是有对应的诞生\",{\"1\":{\"614\":1}}],[\"那么执行过程为\",{\"1\":{\"1056\":1}}],[\"那么什么都不会发生\",{\"1\":{\"1009\":1}}],[\"那么什么是上下文呢\",{\"1\":{\"60\":1}}],[\"那么二者被调用的次数应该是相同的\",{\"1\":{\"960\":1}}],[\"那么二十年后你看自己的照片\",{\"1\":{\"735\":1}}],[\"那么首先我们先这样做\",{\"1\":{\"948\":1}}],[\"那么第一次怎么让一个元素到它正确的位置上呢\",{\"1\":{\"945\":1}}],[\"那么是不可能踩着十年\",{\"1\":{\"806\":1}}],[\"那么请远离\",{\"1\":{\"801\":1}}],[\"那么请问\",{\"1\":{\"738\":1}}],[\"那么实际上你必须给公司带来50k左右的产出才可以弥补公司的成本\",{\"1\":{\"792\":1}}],[\"那么公司没有理由去招聘一个需要学习的人进来\",{\"1\":{\"792\":1}}],[\"那么本文的所有有效措施对你而言都没用\",{\"1\":{\"789\":1}}],[\"那么本线程接下来如果要对学生表执行写操作的语句\",{\"1\":{\"366\":1}}],[\"那么最终的人类社会的场景应该是全数字时代\",{\"1\":{\"804\":1}}],[\"那么最终结果一定会让你无法接受\",{\"1\":{\"784\":1}}],[\"那么最终情况是什么样\",{\"1\":{\"10\":1}}],[\"那么言论自由就变成了一个谎言\",{\"1\":{\"784\":1}}],[\"那么学习对你而言也就并不能销售\",{\"1\":{\"776\":1}}],[\"那么屯币的价值就更高并且时间也更短\",{\"1\":{\"767\":1}}],[\"那么决策质量显然更高\",{\"1\":{\"759\":1}}],[\"那么作出的决策就是只能当前感受到的\",{\"1\":{\"759\":1}}],[\"那么消费一些也无妨\",{\"1\":{\"739\":1}}],[\"那么新的想法就会不断出现在大脑中\",{\"1\":{\"739\":1}}],[\"那么必须从消费者心态转为生产者心态\",{\"1\":{\"738\":1}}],[\"那么故障的诊断就会变得更加困难\",{\"1\":{\"723\":1}}],[\"那么或多或少都会面临腾讯的一些各种事情\",{\"1\":{\"714\":1}}],[\"那么即使博客很丑也不影响我的读者\",{\"1\":{\"660\":1}}],[\"那么发型师和汽车修理工的收入就会减少\",{\"1\":{\"648\":1}}],[\"那么发送ping消息的节点就会将接收ping消息的节点标记为疑似下线\",{\"1\":{\"433\":1}}],[\"那么卖课的商业模式究竟有什么优势呢\",{\"1\":{\"647\":1,\"686\":1}}],[\"那么他就会逐步成为地主阶级\",{\"1\":{\"746\":1}}],[\"那么他会接着给出他的回答\",{\"1\":{\"692\":1}}],[\"那么他的世界就是怎样的\",{\"1\":{\"639\":1}}],[\"那么他无论如何都不会退化为前者了\",{\"1\":{\"534\":1}}],[\"那么每执行\",{\"1\":{\"1135\":1}}],[\"那么每个批判性思考者的都是古怪的人\",{\"1\":{\"627\":1}}],[\"那么每次插入的新数据就会按顺序添加到当前索引节点的位置\",{\"1\":{\"353\":1}}],[\"那么显然你可能会离美国更近一点\",{\"1\":{\"619\":1}}],[\"那么总会有比自己弱的\",{\"1\":{\"611\":1}}],[\"那么总共就可以记录\",{\"1\":{\"357\":1}}],[\"那么ai由于缺少相关数据的输入\",{\"1\":{\"605\":1}}],[\"那么ai在这方面是无法奏效的\",{\"1\":{\"605\":1}}],[\"那么aba的区间就是\",{\"1\":{\"267\":1}}],[\"那么仅仅依靠ai是绝对不够的\",{\"1\":{\"605\":1}}],[\"那么大概两种可能\",{\"1\":{\"595\":1}}],[\"那么人之所以为人所剩下的价值究竟是什么呢\",{\"1\":{\"551\":1}}],[\"那么引导他价值观的就只能是数据了\",{\"1\":{\"551\":1}}],[\"那么说说第二点\",{\"1\":{\"551\":1}}],[\"那么说明接收者之前已经与被选中节点进行过接触\",{\"1\":{\"435\":1}}],[\"那么说明接收者是第一次接触到被选中节点\",{\"1\":{\"435\":1}}],[\"那么说明这条信息是监视同一个服务器的其他sentinel发来的\",{\"1\":{\"426\":1}}],[\"那么说明这条信息是sentinel自己发送的\",{\"1\":{\"426\":1}}],[\"那么说明主从服务器之间的连接出现了故障\",{\"1\":{\"425\":1}}],[\"那么说明主从服务器并未处于一致状态\",{\"1\":{\"425\":1}}],[\"那么说明从服务器断线之前复制的主服务器并不是当前连接的这个主服务器\",{\"1\":{\"425\":1}}],[\"那么说明从服务器断线之前复制的就是当前连接的这个主服务器\",{\"1\":{\"425\":1}}],[\"那么说明客户端监视的所有键都没有被修改过\",{\"1\":{\"424\":1}}],[\"那么说明客户端所监视的键当中\",{\"1\":{\"424\":1}}],[\"那么说明不用任何编辑\",{\"1\":{\"266\":1}}],[\"那么继续做个学生其实是生活在自己熟知领域里的最佳方式\",{\"1\":{\"531\":1}}],[\"那么考试成绩就是证明自己的学有所成的有效方式\",{\"1\":{\"531\":1}}],[\"那么以未来的视角来看究竟什么又是正确的\",{\"1\":{\"528\":1}}],[\"那么以下标i\",{\"1\":{\"266\":1}}],[\"那么仔细思考这件事情\",{\"1\":{\"528\":1}}],[\"那么相应的我就有责任去回答这些问题的解决方案\",{\"1\":{\"500\":1}}],[\"那么两个线程之间的共享资源就没办法进行保护了\",{\"1\":{\"436\":1}}],[\"那么解锁呢\",{\"1\":{\"436\":1}}],[\"那么集群进入一个新的配置纪元\",{\"1\":{\"433\":1}}],[\"那么集群仍在正常工作的几个节点将从其从节点中选择选举出一个新节点作为新的主节点\",{\"1\":{\"433\":1}}],[\"那么具有大于等于n\",{\"1\":{\"433\":1}}],[\"那么客户端会先根据moved错误提供的ip地址和端口号来建立连接\",{\"1\":{\"429\":1}}],[\"那么客户端发送的bgsave命令会被服务器拒绝\",{\"1\":{\"416\":1}}],[\"那么客户端发送的bgrewriteaof命令会被延迟到bgsave命令执行完毕之后执行\",{\"1\":{\"416\":1}}],[\"那么节点将破例执行这个关于槽i的命令一次\",{\"1\":{\"432\":1}}],[\"那么节点将向客户端返回一个moved错误\",{\"1\":{\"432\":1}}],[\"那么节点会向客户端发送一个ask错误\",{\"1\":{\"432\":1}}],[\"那么节点会向客户端返回一个moved错误\",{\"1\":{\"429\":1}}],[\"那么节点会检查自己的clusterstate\",{\"1\":{\"432\":1}}],[\"那么节点直接执行这个命令\",{\"1\":{\"429\":1}}],[\"那么返回错误\",{\"1\":{\"428\":1}}],[\"那么为了知道槽i是否已经被指派\",{\"1\":{\"428\":1}}],[\"那么为什么会有人误以为\",{\"1\":{\"60\":1}}],[\"那么领头sentinel将按照运行id对这些从服务器进行排序\",{\"1\":{\"426\":1}}],[\"那么领头sentinel将按照从服务器的复制偏移量\",{\"1\":{\"426\":1}}],[\"那么各个sentinel将在一段时间之后再次进行选举\",{\"1\":{\"426\":1}}],[\"那么被设置的那个sentinel就会成为领头sentinel\",{\"1\":{\"426\":1}}],[\"那么表示当前的发送操作是阻塞的\",{\"1\":{\"1137\":1}}],[\"那么表示当前节点正在将槽i迁移至clusternode所代表的节点\",{\"1\":{\"432\":1}}],[\"那么表示当前节点正在从clusternode所代表的节点导入槽i\",{\"1\":{\"432\":1}}],[\"那么表示槽i已经指派给了clusternode结构所代表的节点\",{\"1\":{\"428\":1}}],[\"那么表示槽i尚未指派给任何节点\",{\"1\":{\"428\":1}}],[\"那么表示节点不负责处理槽i\",{\"1\":{\"428\":1}}],[\"那么表示节点负责处理槽i\",{\"1\":{\"428\":1}}],[\"那么表示目标sentinel将源sentinel设置成了局部领头sentinel\",{\"1\":{\"426\":1}}],[\"那么表示主从服务器之间的网络连接状态正常\",{\"1\":{\"425\":1}}],[\"那么表示主从服务器之间的网络连接状态不佳\",{\"1\":{\"425\":1}}],[\"那么表示主服务器暂时没办法处理从服务器的命令请求\",{\"1\":{\"425\":1}}],[\"那么表示主服务器的版本低于redis\",{\"1\":{\"425\":1}}],[\"那么表示主服务器将与从服务器执行部分重同步操作\",{\"1\":{\"425\":1}}],[\"那么表示主服务器将与从服务器执行完整重同步操作\",{\"1\":{\"425\":1}}],[\"那么源sentinel继续取出回复中的leader\",{\"1\":{\"426\":1}}],[\"那么包括当前sentinel在内\",{\"1\":{\"426\":1}}],[\"那么不进行身份验证\",{\"1\":{\"425\":1}}],[\"那么进行身份验证\",{\"1\":{\"425\":1}}],[\"那么从服务器将向主服务器发送命令auth\",{\"1\":{\"425\":1}}],[\"那么从服务器将为这个套接字关联一个专门用于处理复制工作的文件事件处理器\",{\"1\":{\"425\":1}}],[\"那么从服务器在开始一次新的复制时将向主服务器发送psync\",{\"1\":{\"425\":2}}],[\"那么从左上角到右下角将会有多少条不同的路径\",{\"1\":{\"230\":1}}],[\"那么主动避免热点就是一个非常重要的选择判断\",{\"1\":{\"734\":1}}],[\"那么主节点将向要求投票的从节点返回一条clustermsg\",{\"1\":{\"433\":1}}],[\"那么主服务器就知道主从服务器之间的连接出现问题了\",{\"1\":{\"425\":1}}],[\"那么主服务器将对从服务器执行完整重同步操作\",{\"1\":{\"425\":1}}],[\"那么主服务器将对从服务器执行部分重同步操作\",{\"1\":{\"425\":1}}],[\"那么主从服务器两者的偏移量总是相同的\",{\"1\":{\"425\":1}}],[\"那么重启之后的数据库将是空白的\",{\"1\":{\"424\":3}}],[\"那么根据服务器所使用的持久化模式\",{\"1\":{\"424\":1}}],[\"那么redis将拒绝执行这个命令\",{\"1\":{\"424\":1}}],[\"那么服务器并不立即执行这个命令\",{\"1\":{\"424\":1}}],[\"那么服务器立即执行这个命令\",{\"1\":{\"424\":1}}],[\"那么命令返回服务器当前被订阅的频道中那些与pattern模式相匹配的频道\",{\"1\":{\"423\":1}}],[\"那么命令返回服务器当前被订阅的所有频道\",{\"1\":{\"423\":1}}],[\"那么保存在内存缓冲区里面的写入数据将会丢失\",{\"1\":{\"422\":1}}],[\"那么键值对的过期时间也会被保存在内\",{\"1\":{\"420\":1}}],[\"那么过期时间也会和键值对保存在一起\",{\"1\":{\"419\":1}}],[\"那么只要这个过期\",{\"1\":{\"414\":1}}],[\"那么只需要加上一个钱币coins\",{\"1\":{\"244\":1}}],[\"那么此混合持久化\",{\"1\":{\"413\":1}}],[\"那么自然就采用单线程的解决方案了\",{\"1\":{\"412\":1}}],[\"那么ht\",{\"1\":{\"395\":2}}],[\"那么该sentinel就会认为主服务器已经进入客观下线状态\",{\"1\":{\"426\":1}}],[\"那么该缓存页移动到\",{\"1\":{\"377\":1}}],[\"那么该缓存页就不会被从\",{\"1\":{\"377\":1}}],[\"那么该页就变成了干净页\",{\"1\":{\"377\":1}}],[\"那么当前的互斥锁就会切换回正常模式\",{\"1\":{\"1142\":1}}],[\"那么当前sentinel就将主服务器判断为客观下线\",{\"1\":{\"426\":1}}],[\"那么当新事物出现的时候\",{\"1\":{\"731\":1}}],[\"那么当一个从节点收集到大于等于n\",{\"1\":{\"433\":1}}],[\"那么当master的断线时长超过10000毫秒之后\",{\"1\":{\"426\":1}}],[\"那么当主服务器master连续50000毫秒都向sentinel1返回无效回复时\",{\"1\":{\"426\":1}}],[\"那么当从服务器向主服务器发送replconf\",{\"1\":{\"425\":1}}],[\"那么当从服务器向主服务器发送ping命令时\",{\"1\":{\"425\":1}}],[\"那么当空间不够了就淘汰最久最没被使用的\",{\"1\":{\"377\":1}}],[\"那么当健康因子<1时就会被清算\",{\"1\":{\"164\":1}}],[\"那么另外一个事务在获取相同范围的\",{\"1\":{\"373\":2}}],[\"那么其他事务即不能插入\",{\"1\":{\"373\":1}}],[\"那么其他事务就无法插入\",{\"1\":{\"372\":1}}],[\"那么其他下标应该初始化多少呢\",{\"1\":{\"235\":1}}],[\"那么有了\",{\"1\":{\"368\":1}}],[\"那么加\",{\"1\":{\"368\":1}}],[\"那么加入第i天买入股票现金就是\",{\"1\":{\"252\":1}}],[\"那么将会被阻塞\",{\"1\":{\"367\":1}}],[\"那么将这\",{\"1\":{\"360\":1}}],[\"那么事务\",{\"1\":{\"362\":1}}],[\"那么事务发生过程中mysql崩溃了\",{\"1\":{\"356\":1}}],[\"那么如何消费信息\",{\"1\":{\"677\":1}}],[\"那么如何将\",{\"1\":{\"472\":1}}],[\"那么如何合理设置超时时间呢\",{\"1\":{\"436\":1}}],[\"那么如何推导dp\",{\"1\":{\"236\":1}}],[\"那么如果我们是在代码中请求外部api的场景\",{\"1\":{\"973\":1}}],[\"那么如果我发现了ai给出的代码是错误的\",{\"1\":{\"692\":1}}],[\"那么如果不进行命令语法检查\",{\"1\":{\"413\":1}}],[\"那么如果出现\",{\"1\":{\"360\":1}}],[\"那么索引会失效\",{\"1\":{\"353\":1}}],[\"那么无论搜索哪个值都可能得到一半的数据\",{\"1\":{\"352\":1}}],[\"那么它既然不可再生\",{\"1\":{\"500\":1}}],[\"那么它的值为\",{\"1\":{\"395\":1}}],[\"那么它就是一棵平衡二叉树\",{\"1\":{\"329\":1}}],[\"那么它是对称的\",{\"1\":{\"299\":1}}],[\"那么18比5大\",{\"1\":{\"276\":1}}],[\"那么1000usdt可以兑换成1025pusd\",{\"1\":{\"177\":1}}],[\"那么分别加入s\",{\"1\":{\"268\":1}}],[\"那么个数为dp\",{\"1\":{\"264\":1}}],[\"那么找到了一个公共元素\",{\"1\":{\"260\":1}}],[\"那么代码其实是这样的\",{\"1\":{\"258\":1}}],[\"那么子序列\",{\"1\":{\"258\":1}}],[\"那么遍历i一定是从前向后遍历\",{\"1\":{\"257\":1}}],[\"那么依然用动规五部曲来分析详细一波\",{\"1\":{\"257\":1}}],[\"那么就有对应的方法来实现\",{\"1\":{\"1097\":1}}],[\"那么就把两个子孩子中大的那一个与父节点交换\",{\"1\":{\"950\":1}}],[\"那么就让minposition\",{\"1\":{\"944\":1}}],[\"那么就需要对选择的判断因素做权重分析\",{\"1\":{\"683\":1}}],[\"那么就需要返回错误让调用方先创建这个文件再次执行\",{\"1\":{\"448\":1}}],[\"那么就需要频繁的重建索引\",{\"1\":{\"352\":1}}],[\"那么就是加锁成功\",{\"1\":{\"437\":1}}],[\"那么就是以下标i\",{\"1\":{\"266\":2}}],[\"那么就尝试从节点自己的数据库里查找key\",{\"1\":{\"432\":1}}],[\"那么就会设置一个默认值\",{\"1\":{\"1137\":1}}],[\"那么就会被认作是危险的\",{\"1\":{\"533\":1}}],[\"那么就会被阻塞\",{\"1\":{\"367\":1}}],[\"那么就会导致数据库和缓存不一致\",{\"1\":{\"385\":1}}],[\"那么就会直接返回\",{\"1\":{\"343\":1}}],[\"那么就要往下继续执行\",{\"1\":{\"343\":1}}],[\"那么就不用编辑了\",{\"1\":{\"266\":1}}],[\"那么就在回顾上面讲过的dp\",{\"1\":{\"266\":1}}],[\"那么就统一初始为0\",{\"1\":{\"260\":1}}],[\"那么就保持现状\",{\"1\":{\"252\":2}}],[\"那么就可以编译通过\",{\"1\":{\"105\":1}}],[\"那么递推公式为\",{\"1\":{\"243\":1}}],[\"那么上面就是两种排列了\",{\"1\":{\"242\":1}}],[\"那么也是没有方案的\",{\"1\":{\"239\":1}}],[\"那么减法总和为sum\",{\"1\":{\"239\":1}}],[\"那么问题来了\",{\"1\":{\"235\":1,\"551\":1}}],[\"那么很明显当\",{\"1\":{\"235\":1}}],[\"那么i为0的时候就一定要初始化\",{\"1\":{\"235\":1}}],[\"那么dp数组除了下标0的位置\",{\"1\":{\"236\":1}}],[\"那么dp\",{\"1\":{\"235\":1,\"236\":1,\"243\":1,\"244\":1,\"248\":2,\"252\":2,\"254\":3,\"258\":1,\"259\":2,\"263\":2,\"264\":2,\"266\":2,\"268\":2}}],[\"那么之后的判断抉择似乎只能是一次次求助于ai\",{\"1\":{\"631\":1}}],[\"那么之后就不能再取1了\",{\"1\":{\"218\":1}}],[\"那么之前提及的无法重复的问题\",{\"1\":{\"56\":1}}],[\"那么稳定币可能就会突然发送大幅度贬值\",{\"1\":{\"184\":1}}],[\"那么你每次启动都会go\",{\"1\":{\"988\":1}}],[\"那么你仍然是一个只看当下的人\",{\"1\":{\"806\":1}}],[\"那么你会死的很惨\",{\"1\":{\"799\":1}}],[\"那么你也就无法获得足够的收入\",{\"1\":{\"776\":1}}],[\"那么你很可能就是消费者\",{\"1\":{\"739\":1}}],[\"那么你很难获得自己想要的结果\",{\"1\":{\"717\":1}}],[\"那么你需要付出额外的代价还非常昂贵\",{\"1\":{\"710\":1}}],[\"那么你多多少少都会被影响的\",{\"1\":{\"689\":1}}],[\"那么你已经发现了你的新的头等大事\",{\"1\":{\"586\":1}}],[\"那么你已经经历了一个关键的成人礼\",{\"1\":{\"575\":1}}],[\"那么你面临着更漫长的道路\",{\"1\":{\"580\":1}}],[\"那么你的回答得包含身高体重年龄\",{\"1\":{\"618\":1}}],[\"那么你的距离可能如下所示\",{\"1\":{\"580\":1}}],[\"那么你的世界就是虚度的\",{\"1\":{\"500\":1}}],[\"那么你的世界就是因积累而大放异彩的\",{\"1\":{\"500\":1}}],[\"那么你可以选择做一个厨师做出大家需要的食品销售来获取收入\",{\"1\":{\"776\":1}}],[\"那么你可以写个脚本做这件事情\",{\"1\":{\"739\":1}}],[\"那么你可以借出其他的资产\",{\"1\":{\"150\":1}}],[\"那么你可能对美国就没什么好感了\",{\"1\":{\"619\":1}}],[\"那么你可能也会离美国更近一点\",{\"1\":{\"619\":1}}],[\"那么你可能已经达到了你的星星\",{\"1\":{\"580\":1}}],[\"那么你可能没有足够仔细地审视自己的恐惧\",{\"1\":{\"577\":1}}],[\"那么你就可以将这个规则写入makefile文件\",{\"1\":{\"1025\":1}}],[\"那么你就可以销售自己的编程技能\",{\"1\":{\"776\":1}}],[\"那么你就可以兑换更多的pusd\",{\"1\":{\"177\":1}}],[\"那么你就需要先分析出你的判断因素\",{\"1\":{\"683\":1}}],[\"那么你就会下意识认为这个东西可能会比较好\",{\"1\":{\"680\":1}}],[\"那么你就极有可能拥有独立思考能力\",{\"1\":{\"551\":1}}],[\"那么你就应该相信国家\",{\"1\":{\"533\":1}}],[\"那么你就先去学一学基础语法\",{\"1\":{\"525\":1}}],[\"那么目前假设pusd对usdt出现了负溢价\",{\"1\":{\"177\":1}}],[\"那么市面上的pusd价格会回升\",{\"1\":{\"176\":1}}],[\"那么这两个插件是帮助proto文件生成go语言的插件\",{\"1\":{\"1078\":1}}],[\"那么这样你就可以利用责任链形式对鉴权的过程进行封装包装\",{\"1\":{\"814\":1}}],[\"那么这种变化总是变得更好吗\",{\"1\":{\"626\":1}}],[\"那么这里就会显露出来\",{\"1\":{\"586\":1}}],[\"那么这里记录的是redis\",{\"1\":{\"435\":1}}],[\"那么这里记录的是发送者正在复制的主节点的名字\",{\"1\":{\"435\":1}}],[\"那么这里记录的是发送者正在复制的主节点的配置纪元\",{\"1\":{\"435\":1}}],[\"那么这里记录的是发送者的配置纪元\",{\"1\":{\"435\":1}}],[\"那么这是个不好的消息\",{\"1\":{\"585\":1}}],[\"那么这条道路会变得更加漫长\",{\"1\":{\"580\":1}}],[\"那么这件事情的问题有多么严重呢\",{\"1\":{\"551\":1}}],[\"那么这个选择就是根据事实进行比较\",{\"1\":{\"683\":1}}],[\"那么这个职业就属于你的现实范围\",{\"1\":{\"584\":1}}],[\"那么这个函数就成功了\",{\"1\":{\"450\":1}}],[\"那么这个主节点将x节点标记为下线\",{\"1\":{\"433\":1}}],[\"那么这个sentinel成为领头sentinel\",{\"1\":{\"426\":1}}],[\"那么这个客户端就会丢失这条信息\",{\"1\":{\"426\":1}}],[\"那么这个插入语句就会被阻塞\",{\"1\":{\"361\":1,\"362\":1}}],[\"那么这个多出来的就可以用来偿还pando\",{\"1\":{\"177\":1}}],[\"那么这些用户更有可能去还款\",{\"1\":{\"176\":1}}],[\"那么这会导致他们单方向的操作会导致在pando的swap协议中的pusd\",{\"1\":{\"175\":1}}],[\"那么50000毫秒不仅会成为sentinel判断master进入主观下线的标准\",{\"1\":{\"426\":1}}],[\"那么50\",{\"1\":{\"169\":1}}],[\"那么我会这样想\",{\"1\":{\"739\":1}}],[\"那么我通过自己的努力付出时间和精力\",{\"1\":{\"674\":1}}],[\"那么我的生产效率就会提高紧接着我的思考质量也会提高\",{\"1\":{\"605\":1}}],[\"那么我的健康因子就是安全的\",{\"1\":{\"164\":1}}],[\"那么我的健康度的计算方式就是\",{\"1\":{\"164\":1}}],[\"那么我就可以思考通过修改我的文字\",{\"1\":{\"605\":1}}],[\"那么我竟然拿不到我自己生产过的数据\",{\"1\":{\"533\":1}}],[\"那么我假设物品价值都是大于0的\",{\"1\":{\"236\":1}}],[\"那么我先给出先遍历物品\",{\"1\":{\"235\":1}}],[\"那么我们接下来使用go语言写一个最简单的fsm\",{\"1\":{\"1011\":1}}],[\"那么我们怎么开始写这个程序呢\",{\"1\":{\"944\":1}}],[\"那么我们可以通过一个适配器转换将我们在中国的插口转换为在欧洲电源上的充电\",{\"1\":{\"903\":1}}],[\"那么我们就无法为这个函数编写单元测试\",{\"1\":{\"979\":1}}],[\"那么我们就用\",{\"1\":{\"977\":1}}],[\"那么我们就可以将注意力放在采取行动和享受生活上\",{\"1\":{\"674\":1}}],[\"那么我们就认为\",{\"1\":{\"437\":1}}],[\"那么我们应该将\",{\"1\":{\"588\":1}}],[\"那么我们开始吧\",{\"1\":{\"500\":1}}],[\"那么我们已经递归到某一个位置\",{\"1\":{\"208\":1}}],[\"那么我们是否就可以像\",{\"1\":{\"58\":1}}],[\"那么我可以借出\",{\"1\":{\"164\":1}}],[\"那么我可以在自己的组内创建solana代币的银行\",{\"1\":{\"152\":1}}],[\"那么可能感受不到任何变化就放弃了继续探索的机会\",{\"1\":{\"731\":1}}],[\"那么可能会启动最差的坏账程序\",{\"1\":{\"150\":1}}],[\"那么可以有两个方向推出来dp\",{\"1\":{\"235\":1}}],[\"那么可以用十五分钟做俯卧撑\",{\"1\":{\"789\":1}}],[\"那么可以用\",{\"1\":{\"60\":1}}],[\"那么在序列化和反序列化时就会出现冲突\",{\"1\":{\"1084\":1}}],[\"那么在同等的时间维度下选择消费信息\",{\"1\":{\"677\":1}}],[\"那么在同时处理多个事务的时候\",{\"1\":{\"361\":1}}],[\"那么在那一片地区仍然居住的人就是气候难民\",{\"1\":{\"609\":1}}],[\"那么在地图上画箭头就不会那么可怕了\",{\"1\":{\"585\":1}}],[\"那么在从服务器的数量少于3个\",{\"1\":{\"425\":1}}],[\"那么在事务中途停机不会导致不一致性\",{\"1\":{\"424\":2}}],[\"那么在事务执行之后\",{\"1\":{\"424\":1}}],[\"那么在这一天内产生的数据是没办法恢复的\",{\"1\":{\"416\":1}}],[\"那么在这种客户端\",{\"1\":{\"60\":1}}],[\"那么在加\",{\"1\":{\"368\":1}}],[\"那么在备份数据库之前先开启事务\",{\"1\":{\"364\":1}}],[\"那么在每个事务提交过程中\",{\"1\":{\"360\":1}}],[\"那么在调用了你的函数之后\",{\"1\":{\"290\":2}}],[\"那么在取最大值的时候\",{\"1\":{\"231\":1}}],[\"那么在\",{\"1\":{\"150\":1}}],[\"那么应该把所需文件复制一份过来\",{\"1\":{\"60\":1}}],[\"那么让我们来构建这个镜像吧\",{\"1\":{\"59\":1}}],[\"那么让我们把时间线拉回到二十世纪初\",{\"1\":{\"11\":1}}],[\"那么删除必然会导致故障\",{\"1\":{\"55\":1}}],[\"那么同样不可以删除这个镜像\",{\"1\":{\"55\":1}}],[\"那么\",{\"1\":{\"55\":1,\"235\":1,\"369\":1,\"374\":1,\"411\":1,\"414\":1,\"580\":1,\"722\":1,\"1034\":1,\"1035\":1}}],[\"那么话题将在2024年5月25日美国东部时间12\",{\"1\":{\"27\":1}}],[\"这几本就是一个状态机的基本概念了\",{\"1\":{\"1009\":1}}],[\"这相当于让原有对象提供一个允许我们任意复制的接口\",{\"1\":{\"887\":1}}],[\"这使得我们可以将变化的部分放在子类中\",{\"1\":{\"862\":1}}],[\"这使得做出重大职业选择的本来就困难的任务变得更加困难\",{\"1\":{\"585\":1}}],[\"这都\",{\"1\":{\"806\":1}}],[\"这项新技术会毁灭世界\",{\"1\":{\"771\":1}}],[\"这双鞋不论运动\",{\"1\":{\"743\":1}}],[\"这为我们提供了巨大的杠杆作用\",{\"1\":{\"725\":1}}],[\"这并没有真正的区别\",{\"1\":{\"723\":1}}],[\"这并不意味着没有关于它们的真理\",{\"1\":{\"637\":1}}],[\"这并不好玩\",{\"1\":{\"587\":1}}],[\"这并不是说思考是不会错的\",{\"1\":{\"626\":1}}],[\"这并不是说哪种渴望或恐惧的声音最大\",{\"1\":{\"577\":1}}],[\"这并不是一篇关于哪些职业比其他职业更好或更差\",{\"1\":{\"572\":1}}],[\"这并不是要复制执行\",{\"1\":{\"60\":1}}],[\"这并不是在写\",{\"1\":{\"58\":1}}],[\"这句话我也在思考过很久所以才会这样去说\",{\"1\":{\"738\":1}}],[\"这句话的潜在含义是\",{\"1\":{\"806\":1}}],[\"这句话的意思是\",{\"1\":{\"646\":1,\"677\":1}}],[\"这句话的含义是这是个自由的世界\",{\"1\":{\"637\":1}}],[\"这句老话的主要原因之一\",{\"1\":{\"722\":1}}],[\"这本身没有太大问题\",{\"1\":{\"718\":1}}],[\"这本书中说独立思考的本质是评价\",{\"1\":{\"680\":1}}],[\"这本书讲的是创业公司的不公平优势\",{\"1\":{\"674\":1}}],[\"这本书读完\",{\"1\":{\"669\":1}}],[\"这本书是最近才读的\",{\"1\":{\"669\":1}}],[\"这本书里面的核心论点就是资本时代的结束\",{\"1\":{\"669\":1}}],[\"这本书简直是软件开发领域的圣经\",{\"1\":{\"504\":1}}],[\"这本书的理念类似\",{\"1\":{\"11\":1}}],[\"这代价就更大了\",{\"1\":{\"710\":1}}],[\"这在社会上是完全被接受的\",{\"1\":{\"751\":1}}],[\"这在notion这些纯云端服务的产品是不可能出现的\",{\"1\":{\"710\":1}}],[\"这在传统实业来看几乎是不可能的\",{\"1\":{\"533\":1}}],[\"这实际上只是一堆废话\",{\"1\":{\"706\":1}}],[\"这还是我的对话有技巧的情况下\",{\"1\":{\"692\":1}}],[\"这还仅仅是最简单的操作\",{\"1\":{\"55\":1}}],[\"这大概因为是每个人都无法坦然的面对自己处于平均水平线以下造成的\",{\"1\":{\"683\":1}}],[\"这大大增强了\",{\"1\":{\"129\":1}}],[\"这能够让我们更有价值地利用时间\",{\"1\":{\"677\":1}}],[\"这对兵法基准测试非常重要\",{\"1\":{\"970\":1}}],[\"这对于融资是非常重要的\",{\"1\":{\"674\":1}}],[\"这对绝大多数人来讲是一个无须讨论的问题\",{\"1\":{\"528\":1}}],[\"这方面可以说是投资人比较感兴趣的\",{\"1\":{\"674\":1}}],[\"这六个字可以将我们提示到全新的层次\",{\"1\":{\"674\":1}}],[\"这仅仅意味着你应当恰如其分地评估有把握的\",{\"1\":{\"657\":1}}],[\"这回让人们进行位置消费例如\",{\"1\":{\"648\":1}}],[\"这已经不是取舍的问题\",{\"1\":{\"709\":1}}],[\"这已经是一个极简化的语言\",{\"1\":{\"525\":1}}],[\"这已然是一种时尚\",{\"1\":{\"637\":1}}],[\"这当然不可能\",{\"1\":{\"621\":1}}],[\"这其中每个点都值得拿出来深说\",{\"1\":{\"611\":1}}],[\"这其中也包括所有的内置函数\",{\"1\":{\"341\":1}}],[\"这有助于减少碎片\",{\"1\":{\"1149\":1}}],[\"这有助于我区分哪些是我生活中特有的经验教训\",{\"1\":{\"572\":1}}],[\"这有两个方面\",{\"1\":{\"605\":1}}],[\"这真是个好消息\",{\"1\":{\"585\":1}}],[\"这会吸引优秀的开发者加入社区\",{\"1\":{\"801\":1}}],[\"这会给任何不确定自己是谁以及几十年后会成为什么样的人的人造成身份危机\",{\"1\":{\"585\":1}}],[\"这会让此网络中的所有人都可以向你发送文件\",{\"1\":{\"494\":1}}],[\"这会让镜像更加臃肿\",{\"1\":{\"55\":1}}],[\"这将帮助您更好地理解和使用\",{\"1\":{\"1162\":1}}],[\"这将是一个无比庞大的清单\",{\"1\":{\"584\":1}}],[\"这将不得不移动其它数据来满足新数据的插入\",{\"1\":{\"353\":1}}],[\"这完全取决于一个简单的公式\",{\"1\":{\"580\":1}}],[\"这段代码会因为变量赋值或者调用函数时发生值拷贝导致分析器报错\",{\"1\":{\"1144\":1}}],[\"这段代码会调用\",{\"1\":{\"1142\":1}}],[\"这段代码会设置唤醒和饥饿标记\",{\"1\":{\"1142\":1}}],[\"这段时间我几乎每天为了写文章都会有各种奇奇怪怪想要输出的内容\",{\"1\":{\"660\":1}}],[\"这段停滞不前的时期\",{\"1\":{\"648\":1}}],[\"这段距离的起点是你现在所在的位置\",{\"1\":{\"580\":1}}],[\"这段程序会直接输出\",{\"1\":{\"447\":1}}],[\"这通常会让传统智慧变得非常过时\",{\"1\":{\"578\":1}}],[\"这通常会让人百感交集\",{\"1\":{\"570\":1}}],[\"这不仅适用于技术\",{\"1\":{\"771\":1}}],[\"这不仅仅是对我们考验着我们对资讯的理解和处理能力\",{\"1\":{\"531\":1}}],[\"这不是幻觉\",{\"1\":{\"747\":1}}],[\"这不是说宗教信仰不是真实的\",{\"1\":{\"656\":1}}],[\"这不是说所有人都有同等的思考潜力\",{\"1\":{\"627\":1}}],[\"这不是一个迷信的说法\",{\"1\":{\"615\":1}}],[\"这不是一个永久性的决定\",{\"1\":{\"577\":1}}],[\"这只碗很小\",{\"1\":{\"577\":1}}],[\"这只是基本的人性\",{\"1\":{\"771\":1}}],[\"这只是一个差不多50行的代码\",{\"1\":{\"1011\":1}}],[\"这只是一个框架\",{\"1\":{\"569\":1}}],[\"这只是一层的事情\",{\"1\":{\"58\":1}}],[\"这只是默认行为\",{\"1\":{\"60\":1}}],[\"这取决于你决定在哪里划线\",{\"1\":{\"577\":1}}],[\"这取决于是否能在\",{\"1\":{\"360\":1}}],[\"这涉及到另一种妥协\",{\"1\":{\"577\":1}}],[\"这需要你独立评估\",{\"1\":{\"577\":1}}],[\"这需要顶级的投资人时时刻刻去思考\",{\"1\":{\"528\":1}}],[\"这指示箭头是谁画的\",{\"1\":{\"572\":1}}],[\"这确实发生在我身上\",{\"1\":{\"706\":1}}],[\"这确实很重要\",{\"1\":{\"571\":1}}],[\"这确保了新的主节点只会有一个\",{\"1\":{\"433\":1}}],[\"这绝不是可以草率决定的事情\",{\"1\":{\"571\":1}}],[\"这让很多人在回顾自己的人生道路时发现\",{\"1\":{\"570\":1}}],[\"这篇文章带你好好了解一下fmt包还可以做哪些事情\",{\"1\":{\"1166\":1}}],[\"这篇文章算是表达我是如何得出这样的结论的\",{\"1\":{\"738\":1}}],[\"这篇文章的题图是我在2022年10月4日时写的拍摄于山西工学院\",{\"1\":{\"695\":1}}],[\"这篇文章的标题选用李笑来以前的公众号名\",{\"1\":{\"525\":1}}],[\"这篇文章可能后面几年我还会拿出来多看几次\",{\"1\":{\"591\":1}}],[\"这篇文章并不是我在给你提供职业建议\",{\"1\":{\"569\":1}}],[\"这很奇怪\",{\"1\":{\"569\":1}}],[\"这很好理解\",{\"1\":{\"362\":1}}],[\"这件事情是才是重要的\",{\"1\":{\"748\":1}}],[\"这件事情是ai所不能替代的\",{\"1\":{\"605\":1}}],[\"这件事情需要仔细审视\",{\"1\":{\"614\":1}}],[\"这件事情足以让人们意识到ai时代的虚拟感\",{\"1\":{\"605\":1}}],[\"这件事情其实可以选用支付宝\",{\"1\":{\"551\":1}}],[\"这件事也几乎只能通过自己来解决\",{\"1\":{\"554\":1}}],[\"这似乎是web3\",{\"1\":{\"534\":1}}],[\"这似乎也是一种远离主流互联网的一种方式\",{\"1\":{\"534\":1}}],[\"这好像是一个巨大的不同\",{\"1\":{\"534\":1}}],[\"这场斗争可能会有5\",{\"1\":{\"534\":1}}],[\"这场斗争可能会持续很多年\",{\"1\":{\"534\":1}}],[\"这早已不是秘密了\",{\"1\":{\"533\":1}}],[\"这或许正应了\",{\"1\":{\"533\":1}}],[\"这允许我们简单地发送一个带有以下主体的post请求\",{\"1\":{\"516\":1}}],[\"这四个方法仅适用于string类型\",{\"1\":{\"480\":1}}],[\"这四个隔离级别如下\",{\"1\":{\"361\":1}}],[\"这俩方法需要两个参数\",{\"1\":{\"478\":1}}],[\"这行代码来说\",{\"1\":{\"473\":1}}],[\"这与发展是硬道理又不谋而合\",{\"1\":{\"528\":1}}],[\"这与\",{\"1\":{\"451\":1}}],[\"这被称为\",{\"1\":{\"450\":1}}],[\"这可以帮助你很轻松的创建微服务程序\",{\"1\":{\"1066\":1}}],[\"这可以保证列表中剩余的从服务器都是最近成功进行过通信的\",{\"1\":{\"426\":1}}],[\"这可以保证列表中剩余的从服务器都是正常在线的\",{\"1\":{\"426\":1}}],[\"这可能是极具瘫痪作用的\",{\"1\":{\"585\":1}}],[\"这可能是真实的你的特点\",{\"1\":{\"575\":1}}],[\"这可能是你的生活方式触角中的情感福祉部分为了减轻你一直以来感到的强迫性财务压力而产生的冲动\",{\"1\":{\"574\":1}}],[\"这可能是因为脏页在刷新到磁盘时可能会给数据库带来性能开销\",{\"1\":{\"377\":1}}],[\"这可能不是健康的思考方式\",{\"1\":{\"571\":1}}],[\"这表示源sentinel要求目标sentinel将前者设置为后者的局部领头sentinel\",{\"1\":{\"426\":1}}],[\"这表示为指向帐户地址数组中的帐户地址的\",{\"1\":{\"117\":1}}],[\"这条路就是我们一生的故事\",{\"1\":{\"570\":1}}],[\"这条pong消息可以让集群中的其他节点立即知道这个节点已经由从节点变成了主节点\",{\"1\":{\"433\":1}}],[\"这条命令向服务器的\",{\"1\":{\"426\":1}}],[\"这条记录\",{\"1\":{\"373\":1}}],[\"这条记录了\",{\"1\":{\"372\":1}}],[\"这条记录并且提交事务了\",{\"1\":{\"362\":1}}],[\"这怎么想都不会是一个好主意\",{\"1\":{\"416\":1}}],[\"这即意味着若服务器断电或关闭\",{\"1\":{\"416\":1}}],[\"这\",{\"1\":{\"386\":2,\"426\":2,\"434\":1,\"435\":1,\"1002\":1}}],[\"这又增加了更多的维护成本\",{\"1\":{\"385\":1}}],[\"这主要是通过\",{\"1\":{\"369\":1}}],[\"这两者是公司得以长期生存下去的关键\",{\"1\":{\"792\":1}}],[\"这两份日志的一致性了\",{\"1\":{\"360\":1}}],[\"这两个函数用法类似\",{\"1\":{\"1172\":1}}],[\"这两个报错对于刚刚接触\",{\"1\":{\"1138\":1}}],[\"这两个文件夹将成为我们调用grpc的客户端和服务端\",{\"1\":{\"1067\":1}}],[\"这两个层次可以通过桥接进行沟通\",{\"1\":{\"910\":1}}],[\"这两个方法都是在原有的字符串追加的\",{\"1\":{\"477\":1}}],[\"这两个方案的目的\",{\"1\":{\"386\":1}}],[\"这两个类型都是\",{\"1\":{\"471\":1}}],[\"这两个解决方案是很大程度上解决了幻读现象\",{\"1\":{\"362\":1}}],[\"这两个日志有四个区别\",{\"1\":{\"358\":1}}],[\"这两个\",{\"1\":{\"357\":1}}],[\"这两种不同的接口实现方式会导致\",{\"1\":{\"1140\":1}}],[\"这两种对立的观点需要同时存在于我们的大脑中\",{\"1\":{\"674\":1}}],[\"这两种检测都会使用sentinel之间的命令连接来进行通信\",{\"1\":{\"426\":1}}],[\"这两种策略配和使用\",{\"1\":{\"414\":1}}],[\"这两种开启事务的命令\",{\"1\":{\"362\":1}}],[\"这两种隔离级别的实现是通过事务的read\",{\"1\":{\"356\":1}}],[\"这两种方式都会造成索引失效\",{\"1\":{\"353\":1}}],[\"这三部分的内容都是经过了base64编码组成\",{\"1\":{\"1047\":1}}],[\"这三个部分分别是由header头\",{\"1\":{\"1047\":1}}],[\"这三个参数的数据安全性和写入性能的比较如下\",{\"1\":{\"357\":1}}],[\"这三种消息的正文都由两个cluster\",{\"1\":{\"435\":1}}],[\"这三种gossip\",{\"1\":{\"435\":1}}],[\"这三种日志\",{\"1\":{\"355\":1}}],[\"这时会发生下面的两种情况\",{\"1\":{\"1142\":1}}],[\"这时会将自己加入\",{\"1\":{\"1137\":1}}],[\"这时会判断到插入的位置已经被事务\",{\"1\":{\"374\":1}}],[\"这时如果一个主节点下线\",{\"1\":{\"433\":1}}],[\"这时如果每次都从数据库中读数据\",{\"1\":{\"381\":1}}],[\"这时客户端就可以向集群中的节点发送数据命令了\",{\"1\":{\"429\":1}}],[\"这时主服务器只要一直将自己执行的写命令发送给从服务器\",{\"1\":{\"425\":1}}],[\"这时从服务器将同时具有服务器\",{\"1\":{\"425\":1}}],[\"这时程序将rehashidx属性的值设为\",{\"1\":{\"396\":1}}],[\"这时我们换个角度思考一下\",{\"1\":{\"387\":1}}],[\"这时候抢占只是为了让本地队列中的\",{\"1\":{\"1135\":1}}],[\"这时候手里又有一张牌\",{\"1\":{\"946\":1}}],[\"这时候就可以通过适配器来解决\",{\"1\":{\"905\":1}}],[\"这时候就需要去更便宜的平台\",{\"1\":{\"177\":1}}],[\"这时候如果我们去欧洲\",{\"1\":{\"903\":1}}],[\"这时候可能会发现曾经的感知可能完全错误\",{\"1\":{\"640\":1}}],[\"这时候其他线程执行对数据的增删改操作\",{\"1\":{\"364\":1}}],[\"这时\",{\"1\":{\"345\":1,\"357\":1}}],[\"这应该是一个比较典型的回溯算法的题目\",{\"1\":{\"284\":1}}],[\"这道题和青蛙上台阶一样\",{\"1\":{\"318\":1}}],[\"这道题需要考虑n为负数的情况\",{\"1\":{\"288\":1}}],[\"这道题设计位运算\",{\"1\":{\"287\":1}}],[\"这道题其实有俩思路\",{\"1\":{\"278\":1}}],[\"这道题本质上和上一道题是一样的\",{\"1\":{\"261\":1}}],[\"这道题目非常简单\",{\"1\":{\"226\":1}}],[\"这道题目和39\",{\"1\":{\"212\":1}}],[\"这笔交易所能获得利润\",{\"1\":{\"253\":3,\"254\":2}}],[\"这笔费用在每个账户的正常\",{\"1\":{\"124\":1}}],[\"这次我们发现我们每次调用server进程下的服务\",{\"1\":{\"1079\":1}}],[\"这次我们可以清楚看到\",{\"1\":{\"967\":1}}],[\"这次我们使用\",{\"1\":{\"56\":1}}],[\"这次散步没有特定目的\",{\"1\":{\"789\":1}}],[\"这次来又多了很多的感慨\",{\"1\":{\"779\":1}}],[\"这次事件最大的影响是什么\",{\"1\":{\"591\":1}}],[\"这次边做题边记录一下做题过程\",{\"1\":{\"274\":1}}],[\"这次和之前遇到的背包问题不一样了\",{\"1\":{\"239\":1}}],[\"这么来看\",{\"1\":{\"384\":1}}],[\"这么做的目的\",{\"1\":{\"383\":1}}],[\"这么大容积的包\",{\"1\":{\"239\":1}}],[\"这么担心就对了\",{\"1\":{\"239\":1}}],[\"这么理解其实是不准确的\",{\"1\":{\"60\":1}}],[\"这五步都搞清楚了\",{\"1\":{\"224\":1}}],[\"这位是solana上最古老的借贷协议\",{\"1\":{\"147\":1}}],[\"这增加了代币的供应\",{\"1\":{\"133\":1}}],[\"这意味着拷贝一个新的\",{\"1\":{\"1138\":1}}],[\"这意味着天然就是具有开源社区属性的\",{\"1\":{\"801\":1}}],[\"这意味着他们也是出卖劳动获取回报\",{\"1\":{\"648\":1}}],[\"这意味着无论真相是什么\",{\"1\":{\"637\":1}}],[\"这意味着您的职业道路还在前进中\",{\"1\":{\"572\":1}}],[\"这意味着我们的时代往往在当下看确实是前所未有的正确\",{\"1\":{\"528\":1}}],[\"这意味着这是一个变量\",{\"1\":{\"454\":1}}],[\"这意味着函数返回一个\",{\"1\":{\"450\":1}}],[\"这意味着若开启了aof\",{\"1\":{\"416\":1}}],[\"这意味着事务执行期间\",{\"1\":{\"367\":1}}],[\"这意味着事务期间多次读取同一条数据\",{\"1\":{\"356\":1}}],[\"这意味着\",{\"1\":{\"361\":1,\"1080\":1,\"1138\":1}}],[\"这意味着可以买卖一次\",{\"1\":{\"254\":1}}],[\"这意味着第一个房屋和最后一个房屋是紧挨着的\",{\"1\":{\"249\":1}}],[\"这意味着未在特定时间范围内处理的交易将永远不会被执行\",{\"1\":{\"117\":1}}],[\"这意味着它要么完全完成\",{\"1\":{\"116\":1}}],[\"这意味着程序帐户仅包含程序的可执行字节码\",{\"1\":{\"115\":1}}],[\"这意味着即使话题的购买者无法在2024年12月25日之后售出\",{\"1\":{\"25\":1}}],[\"这一阶段根据传入chan的缓冲区大小有所不同\",{\"1\":{\"1137\":1}}],[\"这一阶段会对传入\",{\"1\":{\"1137\":1}}],[\"这一部分就来介绍两种方法来mock网络测试\",{\"1\":{\"971\":1}}],[\"这一搜索操作需要同时作用于文件和文件夹上\",{\"1\":{\"915\":1}}],[\"这一方面既然每个人都对自己的命运有高低上下的感受之分\",{\"1\":{\"666\":1}}],[\"这一点在网络上各种做评测的博主就可得知\",{\"1\":{\"743\":1}}],[\"这一点后面有空还会详细说一说\",{\"1\":{\"605\":1}}],[\"这一点也是对的\",{\"1\":{\"605\":1}}],[\"这一点很明显\",{\"1\":{\"581\":1}}],[\"这一点非常重要\",{\"1\":{\"425\":1}}],[\"这一切都很好\",{\"1\":{\"585\":1}}],[\"这一切都会慢慢发生\",{\"1\":{\"534\":1}}],[\"这一切似乎正在发生\",{\"1\":{\"534\":1}}],[\"这一切换是通过在客户端状态的flags属性中打开redis\",{\"1\":{\"424\":1}}],[\"这一行往上是你的代码所调用的代码\",{\"1\":{\"447\":1}}],[\"这一指派信息会通过消息发送至整个集群\",{\"1\":{\"431\":1}}],[\"这一动作可以通过向从服务器发送slaveof命令来实现\",{\"1\":{\"426\":1}}],[\"这一措施保证了ht\",{\"1\":{\"396\":1}}],[\"这一模式事务提交不会主动刷盘\",{\"1\":{\"357\":1}}],[\"这一小节的问题包括\",{\"1\":{\"355\":1}}],[\"这一类问题\",{\"1\":{\"264\":1}}],[\"这一层拷贝到dp\",{\"1\":{\"236\":1}}],[\"这一层的修改\",{\"1\":{\"58\":1}}],[\"这一步就可以省略\",{\"1\":{\"235\":1}}],[\"这一套系统在技术上的复杂度其实是不高的\",{\"1\":{\"169\":1}}],[\"这一系列笔记是我阅读\",{\"1\":{\"93\":1}}],[\"这类公司需要一开始就占据市场\",{\"1\":{\"674\":1}}],[\"这类公司重要的一般是客户需求\",{\"1\":{\"674\":1}}],[\"这类人对于职业道路感觉很犹豫不定\",{\"1\":{\"572\":1}}],[\"这类处理不可恢复的错误\",{\"1\":{\"446\":1}}],[\"这类一致性协议\",{\"1\":{\"387\":1}}],[\"这类当前读的语句\",{\"1\":{\"362\":1}}],[\"这类指令中的源文件的路径都是相对路径\",{\"1\":{\"60\":1}}],[\"这类无标签镜像也被称为\",{\"1\":{\"52\":1}}],[\"这就要求comet连接必须定期发一些ping数据表示连接\",{\"1\":{\"1073\":1}}],[\"这就意味着\",{\"1\":{\"1055\":1}}],[\"这就必须认识到任何认知任\",{\"1\":{\"810\":1}}],[\"这就产生了卖广告的商业模式\",{\"1\":{\"647\":1,\"686\":1}}],[\"这就需要我们的人道主义精神去解决了\",{\"1\":{\"611\":1}}],[\"这就将我们带到我们漫长的两部分深入探讨的结尾\",{\"1\":{\"584\":1}}],[\"这就引出了你和你的特殊优势\",{\"1\":{\"580\":1}}],[\"这就引入了上下文的概念\",{\"1\":{\"60\":1}}],[\"这就把事情分成了五类\",{\"1\":{\"577\":1}}],[\"这就表明无论大胆对你来说有多重要\",{\"1\":{\"577\":1}}],[\"这就导致了你手机里微信占用的大小越来越大\",{\"1\":{\"494\":1}}],[\"这就实现了一个\",{\"1\":{\"412\":1}}],[\"这就和数据库的\",{\"1\":{\"385\":1}}],[\"这就会导致缓存中可能存放了很多不常访问的数据\",{\"1\":{\"383\":1}}],[\"这就叫\",{\"1\":{\"356\":1}}],[\"这就叫undo\",{\"1\":{\"356\":1}}],[\"这就复杂一些了\",{\"1\":{\"267\":1}}],[\"这就是grpc\",{\"1\":{\"1079\":1}}],[\"这就是net\",{\"1\":{\"1055\":1}}],[\"这就是jwt中的json\",{\"1\":{\"1047\":1}}],[\"这就是httptest在http\",{\"1\":{\"972\":1}}],[\"这就是组合模式发挥作用的时候了\",{\"1\":{\"915\":1}}],[\"这就是关键点\",{\"1\":{\"792\":1,\"795\":1}}],[\"这就是世界的运行方式\",{\"1\":{\"751\":2}}],[\"这就是你的雇主有多关心你的真实情况\",{\"1\":{\"751\":1}}],[\"这就是你真正知道你的硬币存在的方式\",{\"1\":{\"703\":1}}],[\"这就是新事物带来的改变\",{\"1\":{\"731\":1}}],[\"这就是无法辩驳的事实\",{\"1\":{\"683\":1}}],[\"这就是我应对海量信息的一个方式\",{\"1\":{\"677\":1}}],[\"这就是我们看到的\",{\"1\":{\"55\":1}}],[\"这就是知识进步的例子\",{\"1\":{\"605\":1}}],[\"这就是达到星星的意思\",{\"1\":{\"580\":1}}],[\"这就是社会在说\",{\"1\":{\"577\":1}}],[\"这就是第三个学习\",{\"1\":{\"525\":1}}],[\"这就是函数创建新块所需要的一切\",{\"1\":{\"516\":1}}],[\"这就是创建切片的语法\",{\"1\":{\"468\":1}}],[\"这就是问题的发源地\",{\"1\":{\"447\":1}}],[\"这就是业界给出的方案\",{\"1\":{\"386\":1}}],[\"这就是近几年比较流行的解决方案\",{\"1\":{\"385\":1}}],[\"这就是事务四大特性中的隔离性\",{\"1\":{\"364\":1}}],[\"这就是wal技术\",{\"1\":{\"357\":1}}],[\"这就是一个典型的01背包\",{\"1\":{\"240\":1}}],[\"这就是滚动数组的由来\",{\"1\":{\"236\":1}}],[\"这就是自定义程序获取系统程序创建的新帐户的所有权的方式\",{\"1\":{\"112\":1}}],[\"这就是为什么我们需要外观模式\",{\"1\":{\"927\":1}}],[\"这就是为什么我在这篇文章中进行了如此痛苦而严谨的分析\",{\"1\":{\"588\":1}}],[\"这就是为什么我坚信\",{\"1\":{\"581\":1}}],[\"这就是为什么这些内在框架很重要\",{\"1\":{\"588\":1}}],[\"这就是为什么坚持不懈如此重要\",{\"1\":{\"582\":1}}],[\"这就是为什么大多数渴望应该放在中间架子\",{\"1\":{\"577\":1}}],[\"这就是为什么它不是一个很大的架子\",{\"1\":{\"577\":1}}],[\"这就是为什么历史上许多传奇人物都是著名的一意孤行者\",{\"1\":{\"577\":1}}],[\"这就是为什么你永远无法完全满足\",{\"1\":{\"573\":1}}],[\"这就是为什么\",{\"1\":{\"55\":1}}],[\"这更像是函数调用中的格式\",{\"1\":{\"58\":1}}],[\"这种策略能够保证读操作不会被连续的写操作\",{\"1\":{\"1143\":1}}],[\"这种类型的设计模式属于结构型模式\",{\"1\":{\"919\":1,\"925\":1,\"931\":1}}],[\"这种模式能够简化对象的创建过程\",{\"1\":{\"891\":1}}],[\"这种模式包括一个创建类\",{\"1\":{\"880\":1}}],[\"这种模式允许我们在不改变算法结构的情况下\",{\"1\":{\"862\":1}}],[\"这种模式一旦主库宕机\",{\"1\":{\"359\":1}}],[\"这种社会现象我认为单单归咎于经济下行是远远不够的\",{\"1\":{\"795\":1}}],[\"这种试错方式非常原始\",{\"1\":{\"782\":1}}],[\"这种说法也是对的\",{\"1\":{\"689\":1}}],[\"这种比较是有意义的\",{\"1\":{\"683\":1}}],[\"这种能力是需要精确的构想和设定目标\",{\"1\":{\"674\":1}}],[\"这种非黑即白的思维方式往往会阻碍他们的发展\",{\"1\":{\"674\":1}}],[\"这种想法似乎很悲观\",{\"1\":{\"631\":1}}],[\"这种趋势会越来越快\",{\"1\":{\"631\":1}}],[\"这种解释必须比其他竞争的解释更合理\",{\"1\":{\"627\":1}}],[\"这种不同的权衡标准是正当的吗\",{\"1\":{\"626\":1}}],[\"这种看法就导致了\",{\"1\":{\"609\":1}}],[\"这种塑造对我的意义是巨大的\",{\"1\":{\"605\":1}}],[\"这种观念大部分是错误的\",{\"1\":{\"580\":1}}],[\"这种渴望让他们名扬四海\",{\"1\":{\"577\":1}}],[\"这种工作发生在你的潜意识的更深层次\",{\"1\":{\"575\":1}}],[\"这种压力几乎不受你实际财务状况的影响\",{\"1\":{\"574\":1}}],[\"这种驱动力更多是出于对安全感的渴望\",{\"1\":{\"574\":1}}],[\"这种变化伴随着职业转变\",{\"1\":{\"574\":1}}],[\"这种变长的字符串中取出某一个子串\",{\"1\":{\"487\":1}}],[\"这种做法我是持有怀疑态度的\",{\"1\":{\"533\":1}}],[\"这种做法虽然提高了效率\",{\"1\":{\"422\":1}}],[\"这种跨平台工具天然就给人一种很舒服的感觉\",{\"1\":{\"494\":1}}],[\"这种返回没有任何意义\",{\"1\":{\"475\":1}}],[\"这种传播错误的模式在\",{\"1\":{\"450\":1}}],[\"这种错误很可能就是程序崩溃\",{\"1\":{\"446\":1}}],[\"这种错误通常只会出现在开发环境中\",{\"1\":{\"424\":1}}],[\"这种\",{\"1\":{\"383\":1,\"533\":1,\"1136\":1}}],[\"这种查询会加锁的语句称为锁定读\",{\"1\":{\"370\":1}}],[\"这种查询语句是当前读\",{\"1\":{\"362\":1}}],[\"这种通过\",{\"1\":{\"362\":1}}],[\"这种半同步复制的方式\",{\"1\":{\"359\":1}}],[\"这种方式的好处是可以延迟对象的创建\",{\"1\":{\"899\":1}}],[\"这种方式的好处是线程安全\",{\"1\":{\"898\":1}}],[\"这种方式让许多人养成了情绪化\",{\"1\":{\"621\":1}}],[\"这种方式是返回字符串的底层字节数组表现形式\",{\"1\":{\"486\":1}}],[\"这种方式适用于\",{\"1\":{\"482\":1}}],[\"这种方式在实际项目中\",{\"1\":{\"359\":1}}],[\"这种方式反而更方便\",{\"1\":{\"150\":1}}],[\"这种格式的日志\",{\"1\":{\"358\":1}}],[\"这种随时在变的函数会导致复制的数据不一致\",{\"1\":{\"358\":1}}],[\"这种时间随着数据量的增加而增大\",{\"1\":{\"350\":1}}],[\"这种时候就会出现对应的价格差\",{\"1\":{\"175\":1}}],[\"这种列表实际上限制每笔交易\",{\"1\":{\"139\":1}}],[\"这种机制就是容器\",{\"1\":{\"75\":1}}],[\"这种黑箱镜像的维护工作是非常痛苦的\",{\"1\":{\"55\":1}}],[\"这种情况也会发生\",{\"1\":{\"620\":1}}],[\"这种情况随时都有可能发生变化\",{\"1\":{\"572\":1}}],[\"这种情况下我们在编写单元测试时如何\",{\"1\":{\"981\":1}}],[\"这种情况下我们就可以使用httptest这个工具mock一个http请求和响应记录器\",{\"1\":{\"972\":1}}],[\"这种情况下\",{\"1\":{\"447\":1,\"894\":1}}],[\"这种情况\",{\"1\":{\"55\":1,\"360\":1,\"384\":1}}],[\"这种特性使得容器封装的应用比直接在宿主运行更加安全\",{\"1\":{\"47\":1}}],[\"这些参数的默认值为\",{\"1\":{\"1161\":1}}],[\"这些功能都可以帮助你更高效地进行\",{\"1\":{\"1153\":1}}],[\"这些功能都是只用chrome感受不到的\",{\"1\":{\"731\":1}}],[\"这些内存页中存储了所有在堆上初始化的对象\",{\"1\":{\"1149\":1}}],[\"这些内容会在调度器保存或者恢复上下文的时候用到\",{\"1\":{\"1132\":1}}],[\"这些\",{\"1\":{\"1144\":1,\"1199\":1,\"1200\":1}}],[\"这些等待队列使用双向链表\",{\"1\":{\"1137\":1}}],[\"这些字段也非常重要\",{\"1\":{\"1134\":1}}],[\"这些处理器会绑定到不同的内核线程上\",{\"1\":{\"1134\":1}}],[\"这些注释定义了我们grpc服务如何映射为json的请求和响应\",{\"1\":{\"1079\":1}}],[\"这些化学物质让你感觉很好\",{\"1\":{\"789\":1}}],[\"这些危险是可以被我们感知到的\",{\"1\":{\"782\":1}}],[\"这些知识完全不能用于生产\",{\"1\":{\"776\":1}}],[\"这些影响在真正被自己感受时已然过去很久\",{\"1\":{\"759\":1}}],[\"这些事情在我看来都是无关紧要的\",{\"1\":{\"754\":1}}],[\"这些只是strconv包提供的一些常用函数\",{\"1\":{\"1198\":1}}],[\"这些只是我们对伟大事业是如何发生的一系列错觉和误解中的几个例子\",{\"1\":{\"578\":1}}],[\"这些只不过看起来重要\",{\"1\":{\"754\":1}}],[\"这些消费行为并不是真正重要的\",{\"1\":{\"754\":1}}],[\"这些该死的移民工作报酬这么低\",{\"1\":{\"751\":1}}],[\"这些选择与判断充满不确定性\",{\"1\":{\"735\":1}}],[\"这些很多时候并不是你本身的想法\",{\"1\":{\"734\":1}}],[\"这些新事物有很多都会死掉\",{\"1\":{\"731\":1}}],[\"这些方式除了度过了时间外\",{\"1\":{\"788\":1}}],[\"这些方法不仅带来了部署和集成障碍\",{\"1\":{\"725\":1}}],[\"这些方案还是不够完美\",{\"1\":{\"387\":1}}],[\"这些独立的轴在右下角开辟了一个非常理想的空旷点\",{\"1\":{\"721\":1}}],[\"这些项目的出现给我带来了很多的收获\",{\"1\":{\"698\":1}}],[\"这些项目不应该被视为现在的状态的一瞥\",{\"1\":{\"583\":1}}],[\"这些已经在行业内几乎垄断的公司长期以来都没有盈利\",{\"1\":{\"663\":1}}],[\"这些不是缺点而是优点\",{\"1\":{\"657\":1}}],[\"这些特质与人的性别一样取决于人在生活中的角色\",{\"1\":{\"653\":1}}],[\"这些较高的支出水平又会反过来将人们锁定在他们讨厌的工作上无法离开\",{\"1\":{\"648\":1}}],[\"这些就是生产资料\",{\"1\":{\"646\":1,\"677\":1}}],[\"这些活动为思考过程提供了一种有用的起点\",{\"1\":{\"627\":1}}],[\"这些感觉都是自发产生的\",{\"1\":{\"626\":1}}],[\"这些指导方针需要被仔细审视\",{\"1\":{\"623\":1}}],[\"这些是\",{\"1\":{\"1174\":1}}],[\"这些是遗传主义最明显的影响\",{\"1\":{\"620\":1}}],[\"这些是我们与之保持健康关系的部分\",{\"1\":{\"576\":1}}],[\"这些信息虽然可以防止篡改\",{\"1\":{\"1047\":1}}],[\"这些信息可以用去中心化手段来做\",{\"1\":{\"592\":1}}],[\"这些信息正好是\",{\"1\":{\"448\":1}}],[\"这些时刻并不总是那么长久\",{\"1\":{\"587\":1}}],[\"这些时刻就像平庸的高尔夫球手出去打高尔夫时的完美击球一样\",{\"1\":{\"587\":1}}],[\"这些都可以称之为腾讯保持垄断的优势\",{\"1\":{\"714\":1}}],[\"这些都将彻底改变世界的面目\",{\"1\":{\"674\":1}}],[\"这些都没有经过你的实际验证\",{\"1\":{\"578\":1}}],[\"这些都是有限范围内\",{\"1\":{\"783\":1}}],[\"这些都是有真理的\",{\"1\":{\"637\":1}}],[\"这些都是个人价值观的选择\",{\"1\":{\"710\":1}}],[\"这些都是自去中心化交易而来\",{\"1\":{\"698\":1}}],[\"这些都是信息生产的过程\",{\"1\":{\"677\":1}}],[\"这些都是我的风格和态度\",{\"1\":{\"618\":1}}],[\"这些都是完全合理的假设\",{\"1\":{\"578\":1}}],[\"这些都是未知数\",{\"1\":{\"578\":1}}],[\"这些职业有可预测的\",{\"1\":{\"578\":1}}],[\"这些渴望都是你的一部分\",{\"1\":{\"577\":1}}],[\"这些失落的部分往往很难被访问\",{\"1\":{\"576\":1}}],[\"这些需求和恐惧之间也经常发生重大冲突\",{\"1\":{\"573\":1}}],[\"这些需求世界之间经常会发生矛盾\",{\"1\":{\"573\":1}}],[\"这些问题都会迎刃而解\",{\"1\":{\"754\":1}}],[\"这些问题进而延伸到我们如何看待自身的潜力\",{\"1\":{\"578\":1}}],[\"这些问题每个人的问题都不同\",{\"1\":{\"554\":1}}],[\"这些问题相信每个人都遇到过\",{\"1\":{\"500\":1}}],[\"这些东西你可以屏蔽一次两次\",{\"1\":{\"551\":1}}],[\"这些广告就正好有你想要的东西\",{\"1\":{\"551\":1}}],[\"这些企业也可能在默默查看你相册里的内容\",{\"1\":{\"534\":1}}],[\"这些政府正在索要更多的数据\",{\"1\":{\"534\":1}}],[\"这些索取数据的企业背后站着的其实是主权政府\",{\"1\":{\"534\":1}}],[\"这些返回类型意味着\",{\"1\":{\"448\":1}}],[\"这些行可能包含核心\",{\"1\":{\"447\":1}}],[\"这些sentinel所设置的down\",{\"1\":{\"426\":1}}],[\"这些错误只会在命令实际执行时被触发\",{\"1\":{\"424\":1}}],[\"这些哈希槽怎么被映射到具体的\",{\"1\":{\"413\":1}}],[\"这些哈希槽类似于数据分区\",{\"1\":{\"413\":1}}],[\"这些任务创建单独的线程来处理\",{\"1\":{\"411\":1}}],[\"这些页面中既有空闲的也还有被使用过的\",{\"1\":{\"377\":1}}],[\"这些语句执行前都会查询最新版本的数据\",{\"1\":{\"362\":1}}],[\"这些缓存在\",{\"1\":{\"360\":1}}],[\"这些函数通常在需要将基本类型值转换为字符串并将其添加到字节切片中的情况下使用\",{\"1\":{\"1199\":1}}],[\"这些函数包括\",{\"1\":{\"1178\":1}}],[\"这些函数返回一个派生的上下文和一个取消函数\",{\"1\":{\"1156\":1}}],[\"这些函数\",{\"1\":{\"358\":1}}],[\"这些情况下都会造成索引失效\",{\"1\":{\"353\":1}}],[\"这些部分可以让我们使用起来更加得心应手\",{\"1\":{\"193\":1}}],[\"这些usdt的贷款价格都更优惠\",{\"1\":{\"177\":1}}],[\"这些预言机通过去中心化的方式聚合多个数据源的价格信息\",{\"1\":{\"165\":1}}],[\"这些被称为\",{\"1\":{\"132\":1}}],[\"这些程序可以代表源自其程序id的程序pdas进行\",{\"1\":{\"131\":1}}],[\"这些文件包括solana程序的伯克利包过滤器\",{\"1\":{\"129\":1}}],[\"这些账户用于存储和管理程序状态\",{\"1\":{\"126\":1}}],[\"这些资源消耗的最小度量单位称为\",{\"1\":{\"121\":1}}],[\"这些可写入的签名者帐户首先在帐户列表中序列化\",{\"1\":{\"118\":1}}],[\"这些费用是使用该无准入要求的网络所产生的\",{\"1\":{\"118\":1}}],[\"这些帐户通常称为\",{\"1\":{\"115\":1}}],[\"这些帐户会使用有关网络群集的数据动态更新\",{\"1\":{\"113\":1}}],[\"这些操作系统的软件库为我们提供了更广阔的扩展空间\",{\"1\":{\"57\":1}}],[\"这些依赖的中间层镜像也会被连带删除\",{\"1\":{\"53\":1}}],[\"这些镜像也没必要删除\",{\"1\":{\"53\":1}}],[\"这些无标签镜像不应该删除\",{\"1\":{\"53\":1}}],[\"这些无标签的镜像很多都是中间层镜像\",{\"1\":{\"53\":1}}],[\"这个指针指向的也不是最初调用该方法的结构体\",{\"1\":{\"1138\":1}}],[\"这个指针与原来的指针指向一个相同并且唯一的结构体\",{\"1\":{\"1138\":1}}],[\"这个指针可以将哈希值相同的键值对连接在一起\",{\"1\":{\"395\":1}}],[\"这个私有结构体十分复杂\",{\"1\":{\"1132\":1}}],[\"这个的意思是\",{\"1\":{\"1084\":1}}],[\"这个机制暂时地解决了实时性问题\",{\"1\":{\"1073\":1}}],[\"这个机制的缺点一是实时性不够\",{\"1\":{\"1073\":1}}],[\"这个机会来自于这个得知pando利率即将提升的机会\",{\"1\":{\"177\":1}}],[\"这个engine\",{\"1\":{\"1055\":1}}],[\"这个exec命令将立即被服务器执行\",{\"1\":{\"424\":1}}],[\"这个default函数主要是创建engine和recovery两个默认中间件\",{\"1\":{\"1051\":1}}],[\"这个库\",{\"1\":{\"1010\":1}}],[\"这个状态下已不能修改和取消订单\",{\"1\":{\"1009\":1}}],[\"这个状态下不能修改订单了\",{\"1\":{\"1009\":1}}],[\"这个状态下需要等待商家发货\",{\"1\":{\"1009\":1}}],[\"这个状态下其他可选操作包括\",{\"1\":{\"1009\":1}}],[\"这个状态下的正常操作是\",{\"1\":{\"1009\":1}}],[\"这个名字容易误解\",{\"1\":{\"1009\":1}}],[\"这个对象用于管理定时任务\",{\"1\":{\"1001\":1}}],[\"这个参数是个必填参数\",{\"1\":{\"977\":1}}],[\"这个接口使得这一子系统更加容易使用\",{\"1\":{\"926\":1}}],[\"这个网关系统需要对请求头\",{\"1\":{\"814\":1}}],[\"这个话题后续还会继续深入探讨\",{\"1\":{\"792\":1}}],[\"这个人能以一半的成本完成他的工作\",{\"1\":{\"771\":1}}],[\"这个人大概是这个世界上最聪明几十个人之一\",{\"1\":{\"528\":1}}],[\"这个海外来的人不能辞职\",{\"1\":{\"751\":1}}],[\"这个清洁工已经为你工作了\",{\"1\":{\"751\":1}}],[\"这个你应该不会反对了吧\",{\"1\":{\"673\":1}}],[\"这个世界上大多数人所关注的事情在我看来都是无关紧要的\",{\"1\":{\"754\":1}}],[\"这个世界上变化很快的\",{\"1\":{\"642\":1}}],[\"这个世界每天都会产生一些新事物\",{\"1\":{\"731\":1}}],[\"这个世界对我们的影响比我们大多数人要大得多\",{\"1\":{\"618\":1}}],[\"这个信息的来源也有可能不正确\",{\"1\":{\"642\":1}}],[\"这个继续留坑\",{\"1\":{\"634\":1}}],[\"这个著名实验甚至开辟了一条通往认知行为学的道路\",{\"1\":{\"631\":1}}],[\"这个其他类可能是宠物\",{\"1\":{\"631\":1}}],[\"这个其实可以选择新生大学\",{\"1\":{\"551\":1}}],[\"这个结论必须通过逻辑检验\",{\"1\":{\"627\":1}}],[\"这个结构体中有指向原始数据的指针\",{\"1\":{\"1139\":1}}],[\"这个结构体也包含了几十个字段\",{\"1\":{\"1133\":1}}],[\"这个结构只包含一个nodename属性\",{\"1\":{\"435\":1}}],[\"这个结构记录了在当前节点的视角下\",{\"1\":{\"427\":1}}],[\"这个结构保存着实例的ip地址和端口号\",{\"1\":{\"426\":1}}],[\"这个结构保存了服务器中所有和sentinel功能有关的状态\",{\"1\":{\"426\":1}}],[\"这个结构的pattern属性记录了被订阅的模式\",{\"1\":{\"423\":1}}],[\"这个思想与你读过的某件事之间的联系\",{\"1\":{\"628\":1}}],[\"这个思想就是\",{\"1\":{\"620\":1}}],[\"这个思想一直持续到今天\",{\"1\":{\"620\":1}}],[\"这个回答是不正确的\",{\"1\":{\"618\":1}}],[\"这个答案看起来很自然\",{\"1\":{\"618\":1}}],[\"这个数组会存储当前结构体的状态\",{\"1\":{\"1144\":1}}],[\"这个数字其实远比我想象中的要多\",{\"1\":{\"609\":1}}],[\"这个数据就会有丢失的风险\",{\"1\":{\"413\":1}}],[\"这个气候难民的定义多多少少有所含糊其辞了\",{\"1\":{\"609\":1}}],[\"这个词的定义是\",{\"1\":{\"609\":1}}],[\"这个假设的朋友相当疯狂\",{\"1\":{\"585\":1}}],[\"这个教训同样适用于具体的技能领域\",{\"1\":{\"583\":1}}],[\"这个概念本身有问题\",{\"1\":{\"583\":1}}],[\"这个食谱通常是传统观念\",{\"1\":{\"581\":1}}],[\"这个距离的长度取决于a点的位置\",{\"1\":{\"580\":1}}],[\"这个渴望被揭示为伪装成你真实渴望的冒名顶替者\",{\"1\":{\"575\":1}}],[\"这个星球的命运可能抉择于乌托邦或反乌托邦之间\",{\"1\":{\"573\":1}}],[\"这个可爱生物的主人不是你\",{\"1\":{\"573\":1}}],[\"这个框架对我来说非常有效\",{\"1\":{\"572\":1}}],[\"这个是没办法解决的问题\",{\"1\":{\"551\":1}}],[\"这个比例会越来越大\",{\"1\":{\"551\":1}}],[\"这个旧世界回来其实指示了上一个问题的答案\",{\"1\":{\"534\":1}}],[\"这个协议称互联网必须赶得上未来\",{\"1\":{\"533\":1}}],[\"这个互联网里的中心化厂商也尽可能地让用户花费更多的时间停留在自己的领域内\",{\"1\":{\"533\":1}}],[\"这个包的作用是方便我们转换格式\",{\"1\":{\"514\":1}}],[\"这个包里的内容是\",{\"1\":{\"512\":1}}],[\"这个calculatehash函数将我们提供的块作为参数的索引\",{\"1\":{\"514\":1}}],[\"这个不可再生资源又和外界认为的很不一样\",{\"1\":{\"500\":1}}],[\"这个不用担心\",{\"1\":{\"377\":1}}],[\"这个字符\",{\"1\":{\"473\":1}}],[\"这个字典记录了主服务器属下从服务器的名单\",{\"1\":{\"426\":1}}],[\"这个字典的键是某个被watch命令监视的数据库键\",{\"1\":{\"424\":1}}],[\"这个字典的键是某个被订阅的频道\",{\"1\":{\"423\":1}}],[\"这个函数包含了发送数据的全部逻辑\",{\"1\":{\"1137\":1}}],[\"这个函数非常长\",{\"1\":{\"1055\":1}}],[\"这个函数最后的作用就是将handlers方法添加到当前的http方法上\",{\"1\":{\"1053\":1}}],[\"这个函数的作用就是将handlers添加对应的http方法到绝对路径上去\",{\"1\":{\"1053\":1}}],[\"这个函数就是注册事件的作用\",{\"1\":{\"1053\":1}}],[\"这个函数很简短\",{\"1\":{\"1052\":1}}],[\"这个函数其实就是将中间件完成实际的中间件注册工作\",{\"1\":{\"1052\":1}}],[\"这个函数这里\",{\"1\":{\"1052\":1}}],[\"这个函数该怎么兼容呢\",{\"1\":{\"980\":1}}],[\"这个函数成了\",{\"1\":{\"979\":1}}],[\"这个函数内部使用了time\",{\"1\":{\"979\":1}}],[\"这个函数里面就是我们可以mock的数据\",{\"1\":{\"977\":1}}],[\"这个函数单测用例没有成功\",{\"1\":{\"967\":1}}],[\"这个函数可以编写成更加简短的形式\",{\"1\":{\"450\":1}}],[\"这个函数会将这些错误返回给调用它的代码\",{\"1\":{\"450\":1}}],[\"这个函数调用也可能会失败\",{\"1\":{\"448\":1}}],[\"这个联合就是消息的正文\",{\"1\":{\"435\":1}}],[\"这个选举新主节点的方法和第16章介绍的选举领头sentinel的方法非常相\",{\"1\":{\"433\":1}}],[\"这个从节点就会当选为新的主节点\",{\"1\":{\"433\":1}}],[\"这个新节点将接管原来节点处理的槽\",{\"1\":{\"433\":1}}],[\"这个操作的复杂度仅为o\",{\"1\":{\"428\":1}}],[\"这个连接专门用于订阅主服务器的\",{\"1\":{\"426\":1}}],[\"这个连接专门用于向主服务器发送命令\",{\"1\":{\"426\":1}}],[\"这个处理器将负责执行后续的复制工作\",{\"1\":{\"425\":1}}],[\"这个事务状态保存在客户端状态的mstate属性里面\",{\"1\":{\"424\":1}}],[\"这个客户端发送的命令会立即被服务器执行\",{\"1\":{\"424\":1}}],[\"这个客户端与被订阅频道之间就建立起了一种订阅关系\",{\"1\":{\"423\":1}}],[\"这个功能是通过读取服务器当前的数据库状态来实现的\",{\"1\":{\"422\":1}}],[\"这个功能在进行测试的时候十分方便\",{\"1\":{\"74\":1}}],[\"这个循环中的文件事件负责接收客户端的命令请求\",{\"1\":{\"422\":1}}],[\"这个部分的长度可以是1字节\",{\"1\":{\"419\":1}}],[\"这个部分的长度为5字节\",{\"1\":{\"418\":1}}],[\"这个常量标志着rdb文件正文内容的结束\",{\"1\":{\"418\":1}}],[\"这个整数记录了rdb文件的版本\",{\"1\":{\"418\":1}}],[\"这个单词的意思是\",{\"1\":{\"413\":2}}],[\"这个熟悉可以是redis\",{\"1\":{\"400\":1}}],[\"这个系列包括字符串对象\",{\"1\":{\"400\":1}}],[\"这个大小就是层的\",{\"1\":{\"397\":1}}],[\"这个哈希表的空间大小取决于\",{\"1\":{\"395\":1}}],[\"这个属性和哈希值一起决定一个键应该被放到table数组的哪个索引上面\",{\"1\":{\"395\":1}}],[\"这个时间和地点最起码不是由你自己决定的\",{\"1\":{\"619\":1}}],[\"这个时间在分布式和高并发场景下\",{\"1\":{\"386\":1}}],[\"这个时候我们可以使用monkey进行打桩\",{\"1\":{\"978\":1}}],[\"这个时候我们就可以像下面示例代码中那样使用sqlmock工具去mock数据库操作\",{\"1\":{\"975\":1}}],[\"这个时候要为myfunc编写单元测试\",{\"1\":{\"978\":1}}],[\"这个时候看到比自己强的人\",{\"1\":{\"611\":1}}],[\"这个时候不能用定时任务去更新缓存了\",{\"1\":{\"382\":1}}],[\"这个时候更新就算完成了\",{\"1\":{\"357\":1}}],[\"这个时候又有怎样的机会呢\",{\"1\":{\"177\":1}}],[\"这个服务用\",{\"1\":{\"385\":1}}],[\"这个线程资源\",{\"1\":{\"385\":1}}],[\"这个方案依旧存在问题\",{\"1\":{\"384\":1}}],[\"这个方法metadata\",{\"1\":{\"1094\":1}}],[\"这个方法是基于\",{\"1\":{\"360\":1}}],[\"这个方法优雅地解决了双重支付\",{\"1\":{\"95\":1}}],[\"这个阶段通常的做法是\",{\"1\":{\"381\":1}}],[\"这个间隔时间是由\",{\"1\":{\"377\":1}}],[\"这个就是预读失效\",{\"1\":{\"377\":1}}],[\"这个并不是\",{\"1\":{\"362\":1}}],[\"这个过程可能会无限地继续下去\",{\"1\":{\"654\":1}}],[\"这个过程的复\",{\"1\":{\"428\":1}}],[\"这个过程被称为\",{\"1\":{\"377\":1}}],[\"这个过程一般是异步的\",{\"1\":{\"359\":1}}],[\"这个过程是会影响数据库性能的\",{\"1\":{\"352\":1}}],[\"这个能力称为\",{\"1\":{\"357\":1}}],[\"这个链表就叫free\",{\"1\":{\"377\":1}}],[\"这个链表就被称为版本链\",{\"1\":{\"356\":1}}],[\"这个链表的倒数第\",{\"1\":{\"294\":1}}],[\"这个索引\",{\"1\":{\"355\":1}}],[\"这个工作交由\",{\"1\":{\"348\":1}}],[\"这个查询缓存是以\",{\"1\":{\"343\":1}}],[\"这个版本不正确\",{\"1\":{\"311\":1}}],[\"这个区间是不是回文就看dp\",{\"1\":{\"267\":1}}],[\"这个地方所有的房屋都\",{\"1\":{\"249\":1}}],[\"这个题挺简单的\",{\"1\":{\"319\":1}}],[\"这个题有两个数组所以需要二维dp数组了\",{\"1\":{\"259\":1}}],[\"这个题有一个不一样的地方\",{\"1\":{\"258\":1}}],[\"这个题如何转换成01背包问题呢\",{\"1\":{\"239\":1}}],[\"这个题和上个题几乎一点区别都没有\",{\"1\":{\"238\":1}}],[\"这个题的关键是如何将输入的数字转换为字母\",{\"1\":{\"210\":1}}],[\"这个问题在实际工程中也没那么重要\",{\"1\":{\"1138\":1}}],[\"这个问题其实我早就有想过\",{\"1\":{\"605\":1}}],[\"这个问题就不妨在这里讨论了\",{\"1\":{\"551\":1}}],[\"这个问题的答案真的是成功的人有百分之九十九的勤奋\",{\"1\":{\"551\":1}}],[\"这个问题很好\",{\"1\":{\"385\":1}}],[\"这个问题是我们需要关注的\",{\"1\":{\"384\":1}}],[\"这个问题跟\",{\"1\":{\"358\":1}}],[\"这个问题和前面提到过的组合总和ii是一样的\",{\"1\":{\"216\":1}}],[\"这个问题涉及试图在不可靠且可能受损的网络上交换信息来达成行动方案或系统状态的统一\",{\"1\":{\"95\":1}}],[\"这个子集问题好像不需要判断结束递归条件\",{\"1\":{\"215\":1}}],[\"这个代码是这个样子\",{\"1\":{\"209\":1}}],[\"这个代码放进去其实就可以运行了\",{\"1\":{\"208\":1}}],[\"这个原因是很多从pando\",{\"1\":{\"176\":1}}],[\"这个模型在技术上其实并不复杂\",{\"1\":{\"169\":1}}],[\"这个后续用到了再说\",{\"1\":{\"130\":1}}],[\"这个预算指定了有关计算单元的详细信息\",{\"1\":{\"119\":1}}],[\"这个紧凑的数组以指令数的紧凑型u16编码开始\",{\"1\":{\"117\":1}}],[\"这个命令和\",{\"1\":{\"403\":1}}],[\"这个命令\",{\"1\":{\"74\":1}}],[\"这个\",{\"1\":{\"56\":1,\"386\":1,\"771\":1,\"1133\":1}}],[\"这个脚本就是\",{\"1\":{\"56\":1}}],[\"这个镜像是虚拟的概念\",{\"1\":{\"57\":1}}],[\"这个镜像名被转移到了新下载的镜像身上\",{\"1\":{\"52\":1}}],[\"这个镜像原本是有镜像名和标签的\",{\"1\":{\"52\":1}}],[\"这个镜像既没有仓库名\",{\"1\":{\"52\":1}}],[\"这个市场将解析为\",{\"1\":{\"27\":1}}],[\"这个市场就已经成为了一个垄断竞争市场\",{\"1\":{\"9\":1}}],[\"这是go语言的语法糖帮助我们简单创建的类型\",{\"1\":{\"1187\":1}}],[\"这是对\",{\"1\":{\"1153\":1}}],[\"这是本章的重点\",{\"1\":{\"1135\":1}}],[\"这是使用\",{\"1\":{\"1047\":1}}],[\"这是makefile关键语法\",{\"1\":{\"1025\":1}}],[\"这是最常见的\",{\"1\":{\"1135\":1}}],[\"这是最简单也最没用的算法\",{\"1\":{\"944\":1}}],[\"这是最关键的一点\",{\"1\":{\"647\":1,\"686\":1}}],[\"这是个记录贴\",{\"1\":{\"808\":1}}],[\"这是当天我们两人感觉最值的了\",{\"1\":{\"779\":1}}],[\"这是趋势造就的\",{\"1\":{\"764\":1}}],[\"这是消费主义营造的假象\",{\"1\":{\"754\":1}}],[\"这是他一生都被告知的\",{\"1\":{\"751\":1}}],[\"这是不公平的\",{\"1\":{\"751\":1}}],[\"这是不可能发生的\",{\"1\":{\"751\":1}}],[\"这是不可行的\",{\"1\":{\"751\":1}}],[\"这是不可避免的\",{\"1\":{\"577\":1}}],[\"这是\",{\"1\":{\"751\":1}}],[\"这是实现模块化的一种非常严厉的方法\",{\"1\":{\"723\":1}}],[\"这是非常危险的\",{\"1\":{\"717\":1}}],[\"这是绝对的幻想\",{\"1\":{\"717\":1}}],[\"这是2021年10月3日时拍摄于山西工学院博学楼203\",{\"1\":{\"695\":1}}],[\"这是北大博士冯军旗的论文\",{\"1\":{\"669\":1}}],[\"这是日本经济失去的20年的开始\",{\"1\":{\"669\":1}}],[\"这是否意味着要成为一名批判的思考者\",{\"1\":{\"657\":1}}],[\"这是否意味着你应当是无主见的\",{\"1\":{\"657\":1}}],[\"这是双重冒犯\",{\"1\":{\"628\":1}}],[\"这是可以接受的吗\",{\"1\":{\"627\":1}}],[\"这是我很久之前在bilibili录的视频gomock\",{\"1\":{\"977\":1}}],[\"这是我的个性\",{\"1\":{\"618\":1}}],[\"这是我们的post函数\",{\"1\":{\"516\":1}}],[\"这是我们的get函数\",{\"1\":{\"516\":1}}],[\"这是保护自己的方式\",{\"1\":{\"611\":1}}],[\"这是其他动物所没有的\",{\"1\":{\"605\":1}}],[\"这是增强使命的跳跃点\",{\"1\":{\"588\":1}}],[\"这是智者的选择\",{\"1\":{\"587\":1}}],[\"这是大多数理智的人\",{\"1\":{\"585\":1}}],[\"这是朝着正确方向迈出的重要一步\",{\"1\":{\"585\":1}}],[\"这是你的头脑\",{\"1\":{\"575\":1}}],[\"这是资产数字化的发生的事实\",{\"1\":{\"534\":1}}],[\"这是处于竞争状态下\",{\"1\":{\"533\":1}}],[\"这是什么\",{\"1\":{\"521\":1}}],[\"这是过去的一年里与时间做朋友我体会最深刻的一句话\",{\"1\":{\"500\":1}}],[\"这是选择缓存实现分布式锁最核心的出发点\",{\"1\":{\"436\":1}}],[\"这是为了避免客户端发生异常而无法释放锁\",{\"1\":{\"436\":1}}],[\"这是通过对主键字段声明\",{\"1\":{\"369\":1}}],[\"这是一本由程序员写的书\",{\"1\":{\"669\":1}}],[\"这是一种非常强大且灵活的设计模式\",{\"1\":{\"862\":1}}],[\"这是一种洗眼和分散注意力的行为\",{\"1\":{\"703\":1}}],[\"这是一种数字技术带来的不幸\",{\"1\":{\"611\":1}}],[\"这是一种真实而艰难获得的感觉或价值观\",{\"1\":{\"575\":1}}],[\"这是一种组合\",{\"1\":{\"242\":1}}],[\"这是一篇关于路径选择的文章\",{\"1\":{\"570\":1}}],[\"这是一篇关于我一直想写的东西的文章\",{\"1\":{\"569\":1}}],[\"这是一道很明显的动态规划题目\",{\"1\":{\"285\":1}}],[\"这是一道典型的背包问题\",{\"1\":{\"242\":1}}],[\"这是一个艰难的经济环境\",{\"1\":{\"751\":1}}],[\"这是一个艰难的选择\",{\"1\":{\"585\":1}}],[\"这是一个巨大的危险信号\",{\"1\":{\"706\":1}}],[\"这是一个极大的风险\",{\"1\":{\"705\":1}}],[\"这是一个人的个人品牌\",{\"1\":{\"673\":1}}],[\"这是一个关键\",{\"1\":{\"660\":1}}],[\"这是一个紧迫的问题\",{\"1\":{\"648\":1}}],[\"这是一个良性循环\",{\"1\":{\"648\":1}}],[\"这是一个红海市场\",{\"1\":{\"647\":1,\"686\":1}}],[\"这是一个显而易见的道理\",{\"1\":{\"596\":1}}],[\"这是一个致命的组合\",{\"1\":{\"585\":1}}],[\"这是一个充满希望的消息\",{\"1\":{\"579\":1}}],[\"这是一个假设\",{\"1\":{\"577\":1}}],[\"这是一个非常具体的指示\",{\"1\":{\"577\":1}}],[\"这是一个非常奇怪而且难以理解的返回值\",{\"1\":{\"473\":1}}],[\"这是一个文件句柄\",{\"1\":{\"448\":1}}],[\"这是一个用map就可以解决的问题\",{\"1\":{\"312\":1}}],[\"这是一个负数\",{\"1\":{\"252\":1}}],[\"这是一个标准的背包问题\",{\"1\":{\"235\":1}}],[\"这是一个比较好的习惯\",{\"1\":{\"58\":1}}],[\"这是在极端行情下协议仍能安全运行的必要条件\",{\"1\":{\"150\":1}}],[\"这是在指定\",{\"1\":{\"60\":1}}],[\"这是很多人的选择\",{\"1\":{\"575\":1}}],[\"这是很多同学容易陷入的误区\",{\"1\":{\"254\":1}}],[\"这是很多同学容易混淆的点\",{\"1\":{\"248\":1}}],[\"这是很多初学\",{\"1\":{\"58\":1}}],[\"这是很重要的一步\",{\"1\":{\"58\":1}}],[\"这是完全没有意义的\",{\"1\":{\"58\":1}}],[\"这是因为在protobuf的二进制编码中\",{\"1\":{\"1084\":1}}],[\"这是因为在默认情况下\",{\"1\":{\"60\":1}}],[\"这是因为http协议是一个请求\",{\"1\":{\"1073\":1}}],[\"这是因为使用原型模式创建对象不需要额外信息\",{\"1\":{\"889\":1}}],[\"这是因为随着网络硬件的性能提升\",{\"1\":{\"412\":1}}],[\"这是因为消息队列的特性\",{\"1\":{\"385\":1}}],[\"这是因为它必须满足\",{\"1\":{\"384\":1}}],[\"这是因为每次数据发生变更\",{\"1\":{\"383\":1}}],[\"这是因为有一个线程只能同时有一个事务在执行的设定\",{\"1\":{\"358\":1}}],[\"这是因为\",{\"1\":{\"51\":1}}],[\"这是指用\",{\"1\":{\"50\":1}}],[\"这里第一个参数只能是\",{\"1\":{\"1212\":1}}],[\"这里必须是指针\",{\"1\":{\"1190\":1}}],[\"这里简单地将命令行参数转换为整数并赋值给\",{\"1\":{\"1163\":1}}],[\"这里简单说一下\",{\"1\":{\"353\":1}}],[\"这里不是要大家记住所有的字段\",{\"1\":{\"1084\":1}}],[\"这里不再详述\",{\"1\":{\"383\":1}}],[\"这里你会有三个疑惑\",{\"1\":{\"1078\":1}}],[\"这里你可能有一个疑惑\",{\"1\":{\"513\":1}}],[\"这里也借用他的实例代码来做演示吧\",{\"1\":{\"1026\":1}}],[\"这里也是有点问题\",{\"1\":{\"200\":1}}],[\"这里略去细节\",{\"1\":{\"1009\":2}}],[\"这里可以看到\",{\"1\":{\"1035\":1}}],[\"这里可以是对redis操作的一些逻辑\",{\"1\":{\"976\":1}}],[\"这里可能有同学不明白了\",{\"1\":{\"264\":1}}],[\"这里可能有同学疑惑\",{\"1\":{\"252\":1}}],[\"这里以github\",{\"1\":{\"976\":1}}],[\"这里使用的是go\",{\"1\":{\"975\":1}}],[\"这里总结了我到目前为止在go单测方面的所有姿势\",{\"1\":{\"965\":1}}],[\"这里其实就是处理merge的过程\",{\"1\":{\"948\":1}}],[\"这里j变成j>\",{\"1\":{\"947\":1}}],[\"这里先来了解几个与\",{\"1\":{\"1133\":1}}],[\"这里先不讨论他给出的回答正确与否\",{\"1\":{\"692\":1}}],[\"这里先介绍2\",{\"1\":{\"425\":1}}],[\"这里需要打破过去的惯例\",{\"1\":{\"674\":1}}],[\"这里需要提前说明的是\",{\"1\":{\"673\":1}}],[\"这里需要注意的是我们必须自己创建mocks目录因为gomock不会自动帮我们创建\",{\"1\":{\"977\":1}}],[\"这里需要注意的是\",{\"1\":{\"228\":1}}],[\"这里存放着我这一段时间以来推荐的书籍\",{\"1\":{\"669\":1}}],[\"这里留个坑\",{\"1\":{\"631\":1}}],[\"这里面列举了程序员的入门\",{\"1\":{\"669\":1}}],[\"这里面最关键的经济模型似乎是与垄断互联网对抗的关键\",{\"1\":{\"534\":1}}],[\"这里面有一个角度就是\",{\"1\":{\"534\":1}}],[\"这里面其实有一个很现实的问题\",{\"1\":{\"533\":1}}],[\"这里有两个参数\",{\"1\":{\"1034\":1}}],[\"这里有\",{\"1\":{\"1009\":1}}],[\"这里有一个快速路径和一个慢的路径\",{\"1\":{\"1135\":1}}],[\"这里有一个例子调用after的方法\",{\"1\":{\"977\":1}}],[\"这里有一个因果论观点\",{\"1\":{\"525\":1}}],[\"这里有一些简单的指导原则用以确保你参与的讨论\",{\"1\":{\"627\":1}}],[\"这里有几个问题\",{\"1\":{\"570\":1}}],[\"这里有同学发现了\",{\"1\":{\"266\":1}}],[\"这里是为了演示方便简单判断token是否与\",{\"1\":{\"1099\":1}}],[\"这里是最核心的添加方法\",{\"1\":{\"1053\":1}}],[\"这里是一些逻辑代码\",{\"1\":{\"978\":1}}],[\"这里是一个实践\",{\"1\":{\"449\":1}}],[\"这里是对api返回的数据做一些逻辑处理\",{\"1\":{\"973\":1}}],[\"这里是第一个学习\",{\"1\":{\"525\":1}}],[\"这里就不叙述了\",{\"1\":{\"1135\":1}}],[\"这里就不重复\",{\"1\":{\"1135\":1}}],[\"这里就不详解了\",{\"1\":{\"1135\":1}}],[\"这里就不再啰嗦了\",{\"1\":{\"978\":1}}],[\"这里就不一一说明了\",{\"1\":{\"504\":1}}],[\"这里就会涉及磁盘\",{\"1\":{\"358\":1}}],[\"这里提一下\",{\"1\":{\"1172\":1}}],[\"这里提一点\",{\"1\":{\"413\":1}}],[\"这里提示的很清楚\",{\"1\":{\"475\":1}}],[\"这里选择\",{\"1\":{\"450\":1}}],[\"这里尝试访问\",{\"1\":{\"447\":1}}],[\"这里只介绍rdb的第六版文件\",{\"1\":{\"418\":1}}],[\"这里我用post\",{\"1\":{\"1079\":1}}],[\"这里我用知识阶级来取代工业社会的资产阶级\",{\"1\":{\"646\":1}}],[\"这里我再把例子拿过来让你复习一下\",{\"1\":{\"386\":1}}],[\"这里我们将其转换为整数类型的字符串\",{\"1\":{\"1163\":1}}],[\"这里我们告诉\",{\"1\":{\"448\":1}}],[\"这里我们尝试访问索引\",{\"1\":{\"447\":1}}],[\"这里我们必须把重试消息或第二步操作放到另一个\",{\"1\":{\"385\":1}}],[\"这里我们使用t3\",{\"1\":{\"192\":1}}],[\"这里我们希望有个交互式\",{\"1\":{\"50\":1}}],[\"这里我们说一下镜像名称的格式\",{\"1\":{\"49\":1}}],[\"这里我们就说一下怎么获取这些镜像\",{\"1\":{\"49\":1}}],[\"这里通常的解决方案是\",{\"1\":{\"383\":1}}],[\"这里说一下几种常见优化索引的方法\",{\"1\":{\"353\":1}}],[\"这里千万不能写成res\",{\"1\":{\"322\":1}}],[\"这里一定要做一个判断\",{\"1\":{\"300\":1}}],[\"这里\",{\"1\":{\"291\":1,\"481\":1,\"1084\":1}}],[\"这里大家已经可以发现\",{\"1\":{\"263\":1}}],[\"这里dp数组的定义有点点绕\",{\"1\":{\"265\":1}}],[\"这里dp\",{\"1\":{\"257\":1}}],[\"这里为什么要+1呢\",{\"1\":{\"208\":1}}],[\"这里为了格式化还进行了换行\",{\"1\":{\"58\":1}}],[\"这里的\",{\"1\":{\"1084\":2}}],[\"这里的x不是matcher\",{\"1\":{\"977\":1}}],[\"这里的m是一个matcher\",{\"1\":{\"977\":1}}],[\"这里的foo\",{\"1\":{\"960\":1}}],[\"这里的return类型需要与前面的mock里的返回值相对应\",{\"1\":{\"958\":1}}],[\"这里的i其实是比较的次数\",{\"1\":{\"945\":1}}],[\"这里的关键点是学习的知识并不一定保证是可供销售的生产性知识\",{\"1\":{\"776\":1}}],[\"这里的关键点是最多一小时\",{\"1\":{\"731\":1}}],[\"这里的关键是未来的你可能因为现在错误的决策而后悔\",{\"1\":{\"680\":1}}],[\"这里的关键是通过盈利就可以持续发展\",{\"1\":{\"663\":1}}],[\"这里的学习学习再学习\",{\"1\":{\"525\":1}}],[\"这里的索引是\",{\"1\":{\"447\":1}}],[\"这里的延迟值就是上面提到的info\",{\"1\":{\"425\":1}}],[\"这里的提交\",{\"1\":{\"360\":1}}],[\"这里的j是dp数组索引从0到i\",{\"1\":{\"257\":1}}],[\"这里的startindex\",{\"1\":{\"210\":1}}],[\"这里的update\",{\"1\":{\"199\":1}}],[\"这里的端口同上修改\",{\"1\":{\"192\":1}}],[\"这里的仓库名是两段式名称\",{\"1\":{\"49\":1}}],[\"这里涉及分析\",{\"1\":{\"152\":1}}],[\"这里整理了一下我使用的工具\",{\"1\":{\"88\":1}}],[\"这里整理了一下我在学习rust语言过程中的笔记🚀\",{\"1\":{\"86\":1}}],[\"这里整理了一下我在学习go语言过程中的笔记🚀\",{\"1\":{\"84\":1}}],[\"这里主要说明\",{\"1\":{\"68\":1}}],[\"这里没有使用很多个\",{\"1\":{\"58\":1}}],[\"这里标识的所占用空间和在\",{\"1\":{\"51\":1}}],[\"这也决定了说\",{\"1\":{\"680\":1}}],[\"这也就是一个\",{\"1\":{\"1134\":1}}],[\"这也就是为什么刚刚说任何类型实现了servehttp方法\",{\"1\":{\"1055\":1}}],[\"这也就是说\",{\"1\":{\"426\":1}}],[\"这也就意味着说\",{\"1\":{\"663\":1}}],[\"这也正是它们所作的\",{\"1\":{\"534\":1}}],[\"这也是最简单的命令包使用\",{\"1\":{\"1084\":1}}],[\"这也是openai创始人山姆奥特曼说未来生产力成本降低为0\",{\"1\":{\"649\":1}}],[\"这也是心态平稳的条件之一\",{\"1\":{\"592\":1}}],[\"这也是很多人最大动机就是想证明曾不相信自己的人是错的\",{\"1\":{\"573\":1}}],[\"这也是2022年的今天\",{\"1\":{\"534\":1}}],[\"这也是我们常说的微服务\",{\"1\":{\"1063\":1}}],[\"这也是我们现在这个互联网世界所面临的挑战\",{\"1\":{\"532\":1}}],[\"这也是我认为的人道主义\",{\"1\":{\"609\":1}}],[\"这也是我无法理解的\",{\"1\":{\"552\":1}}],[\"这也是我已经相当长时间没有存在于这种围栏互联网的原因\",{\"1\":{\"533\":1}}],[\"这也是当时互联网的基础\",{\"1\":{\"532\":1}}],[\"这也是计算机最终存储该字符串的形式\",{\"1\":{\"474\":1}}],[\"这也是为什么每周末\",{\"1\":{\"695\":1}}],[\"这也是为什么ai到目前为止是无法替代真正有生产力的作者\",{\"1\":{\"605\":1}}],[\"这也是为什么决定写作的目的之一\",{\"1\":{\"605\":1}}],[\"这也是为什么人类能够成为这个地球上的超级物种的原因\",{\"1\":{\"605\":1}}],[\"这也是为什么字符串字面量是不可变的\",{\"1\":{\"470\":1}}],[\"这也是为什么有人认为\",{\"1\":{\"57\":1}}],[\"这也是solana崛起的原因之一\",{\"1\":{\"109\":1}}],[\"这也是初学者经常会问的为什么\",{\"1\":{\"60\":1}}],[\"这也是默认的\",{\"1\":{\"48\":1}}],[\"这也恰好是挑战杯比赛的软件\",{\"1\":{\"10\":1}}],[\"这样设计的目的是为了遵循go语言的类型系统和语法约定\",{\"1\":{\"1188\":1}}],[\"这样说可能你还是一脸懵\",{\"1\":{\"1156\":1}}],[\"这样分配效率更高\",{\"1\":{\"1149\":1}}],[\"这样以后我们自己编写proto文件的时候\",{\"1\":{\"1084\":1}}],[\"这样for循环结束就可以实现堆排序了\",{\"1\":{\"950\":1}}],[\"这样是有价值的\",{\"1\":{\"800\":1}}],[\"这样对于公司来说是一笔划算的买卖\",{\"1\":{\"792\":1}}],[\"这样你就是一个早期采用者\",{\"1\":{\"773\":1}}],[\"这样很酷吗\",{\"1\":{\"735\":1}}],[\"这样很难检验我们的知识是否正确\",{\"1\":{\"653\":1}}],[\"这样基于事实的比较信息就是有价值的\",{\"1\":{\"683\":1}}],[\"这样认识你的粉丝中就会有不少人相信你而愿意作为你的客户\",{\"1\":{\"663\":1}}],[\"这样解释了律师和银行家等收入较高的专业人士的沮丧情绪\",{\"1\":{\"648\":1}}],[\"这样经过一段时间以后\",{\"1\":{\"631\":1}}],[\"这样子倒不如学朝鲜\",{\"1\":{\"533\":1}}],[\"这样子\",{\"1\":{\"525\":1}}],[\"这样子我们就无需对http端口之类的内容进行编码\",{\"1\":{\"509\":1}}],[\"这样block我们知道组成链的块的正确顺序\",{\"1\":{\"513\":1}}],[\"这样再结合具体的代码实战\",{\"1\":{\"512\":1}}],[\"这样程序可以挑选自己想要的方式去使用\",{\"1\":{\"474\":1}}],[\"这样有助于大幅降低字符串所占用的内存空间\",{\"1\":{\"471\":1}}],[\"这样能更好的控制代码调用\",{\"1\":{\"450\":1}}],[\"这样能够提高整个表的查询速度\",{\"1\":{\"351\":1}}],[\"这样导致分布式锁的不可靠性\",{\"1\":{\"436\":1}}],[\"这样即使你的时间是碎片时间\",{\"1\":{\"689\":1}}],[\"这样即使服务器断电\",{\"1\":{\"416\":1}}],[\"这样即使后面系统崩溃了\",{\"1\":{\"357\":1}}],[\"这样会导致\",{\"1\":{\"411\":1}}],[\"这样会看到很多无标签的镜像\",{\"1\":{\"53\":1}}],[\"这样也能达到最终一致\",{\"1\":{\"387\":1}}],[\"这样一次下来至少有一个元素到达正确的位置上\",{\"1\":{\"945\":1}}],[\"这样一来\",{\"1\":{\"386\":1,\"1073\":1}}],[\"这样一个模式来保证订单铺的稳定性\",{\"1\":{\"169\":1}}],[\"这样可以公开转账过程\",{\"1\":{\"800\":1}}],[\"这样可以避免主线程的阻塞\",{\"1\":{\"413\":1}}],[\"这样可以避免再次分配带来的性能损耗\",{\"1\":{\"393\":1,\"402\":1}}],[\"这样可以进一步简化流程\",{\"1\":{\"385\":1}}],[\"这样可以成批的删除希望删除的镜像\",{\"1\":{\"55\":1}}],[\"这样做很ugly\",{\"1\":{\"988\":1}}],[\"这样做并不能真正放松\",{\"1\":{\"789\":1}}],[\"这样做的话\",{\"1\":{\"689\":1}}],[\"这样做的性能是极差的\",{\"1\":{\"376\":1}}],[\"这样做就可以让我们尽量减少认知偏差\",{\"1\":{\"683\":1}}],[\"这样做就没有展示所有这些错误处理的机会了\",{\"1\":{\"451\":1}}],[\"这样做也会带来风险\",{\"1\":{\"413\":1}}],[\"这样做值得吗\",{\"1\":{\"385\":1}}],[\"这样效率太低\",{\"1\":{\"377\":1}}],[\"这样效率会很慢\",{\"1\":{\"368\":1}}],[\"这样其他事务就无法对这条记录进行修改了\",{\"1\":{\"371\":1}}],[\"这样的一个内存块叫做span\",{\"1\":{\"1149\":1}}],[\"这样的好处有很多\",{\"1\":{\"1063\":1}}],[\"这样的工具使用多了对我们的代码也会有质量上的提升\",{\"1\":{\"1020\":1}}],[\"这样的代码非常冗长和重复\",{\"1\":{\"1010\":1}}],[\"这样的代码强耦合\",{\"1\":{\"981\":1}}],[\"这样的测试才有对照性\",{\"1\":{\"970\":1}}],[\"这样的类通过直接赋值的方式是没办法直接复制的\",{\"1\":{\"887\":1}}],[\"这样的想法不可取原因是\",{\"1\":{\"806\":1}}],[\"这样的想法不仅仅体现在对过去的记忆\",{\"1\":{\"757\":1}}],[\"这样的产品从开始就会死\",{\"1\":{\"800\":1}}],[\"这样的尝试会失败\",{\"1\":{\"800\":1}}],[\"这样的尝试是未知的\",{\"1\":{\"447\":1}}],[\"这样的说法本身是没什么问题\",{\"1\":{\"792\":1}}],[\"这样的说法还有很多人去点赞\",{\"1\":{\"533\":1}}],[\"这样的情况一直如此\",{\"1\":{\"738\":1}}],[\"这样的情况持续到了jobs发布了iphone\",{\"1\":{\"9\":1}}],[\"这样的套利模式可以让用户的加密货币价格更加合理\",{\"1\":{\"698\":1}}],[\"这样的步骤本书后面的部分会详细说明\",{\"1\":{\"663\":1}}],[\"这样的问题如果去问ai\",{\"1\":{\"631\":1}}],[\"这样的审查会让他们意识到自己有比他们意识到的更多的选择\",{\"1\":{\"584\":1}}],[\"这样的趋势不可抵挡\",{\"1\":{\"534\":1}}],[\"这样的做法会让整个社会失去活力与创新性\",{\"1\":{\"533\":1}}],[\"这样的学习就比较高效了\",{\"1\":{\"525\":1}}],[\"这样的批量插入数据的语句\",{\"1\":{\"369\":1}}],[\"这样备份期间备份的数据一直是在开启事务时的数据\",{\"1\":{\"364\":1}}],[\"这样在以后使用增加区块append时就很容易构建了\",{\"1\":{\"513\":1}}],[\"这样在备份数据库期间\",{\"1\":{\"364\":1}}],[\"这样在查询的时候就不需要再去做一次排序了\",{\"1\":{\"351\":1}}],[\"这样不是会产生冲突吗\",{\"1\":{\"362\":1}}],[\"这样破坏了原子性\",{\"1\":{\"358\":1}}],[\"这样如果一个事务的\",{\"1\":{\"358\":1}}],[\"这样mysql即使异常重启也不会丢失数据\",{\"1\":{\"357\":1}}],[\"这样就实现了堆排序\",{\"1\":{\"950\":1}}],[\"这样就是分开两个小数组的情况\",{\"1\":{\"948\":1}}],[\"这样就导致一个问题\",{\"1\":{\"660\":1}}],[\"这样就能得出你面前各种距离\",{\"1\":{\"584\":1}}],[\"这样就使得主从服务器的数据是一致的\",{\"1\":{\"413\":1}}],[\"这样就无法处理后续的请求了\",{\"1\":{\"411\":1}}],[\"这样就解决了\",{\"1\":{\"377\":1}}],[\"这样就不会影响\",{\"1\":{\"377\":1}}],[\"这样就不用去遍历表里的记录\",{\"1\":{\"368\":1}}],[\"这样就大大降低了缓存命中率\",{\"1\":{\"377\":1}}],[\"这样就有效的防止幻读现象的发生\",{\"1\":{\"372\":1}}],[\"这样就可以了\",{\"1\":{\"1084\":1}}],[\"这样就可以保证\",{\"1\":{\"360\":1}}],[\"这样就可以在服务端获取到用户的id了\",{\"1\":{\"194\":1}}],[\"这样就造成两份日志之间的逻辑不一致\",{\"1\":{\"360\":1}}],[\"这样就保证了在事务期间读到的数据都是事务启动前的记录\",{\"1\":{\"356\":1}}],[\"这样方便后面模块获取\",{\"1\":{\"345\":1}}],[\"这样才可以控制\",{\"1\":{\"276\":1}}],[\"这样才能让dp数组在递归公式的过程中取的最大的价值\",{\"1\":{\"236\":1}}],[\"这样才能让产品更加有效\",{\"1\":{\"11\":1}}],[\"这样我们不仅解决了函数与系统时间的紧耦合\",{\"1\":{\"979\":1}}],[\"这样我们的希尔排序第一次就好了\",{\"1\":{\"947\":1}}],[\"这样我们的每一个区块就构成了\",{\"1\":{\"513\":1}}],[\"这样我们就让names\",{\"1\":{\"1080\":1}}],[\"这样我们就会关注内心的满足感而不是只注重可量化的金钱方面的成功\",{\"1\":{\"674\":1}}],[\"这样我们就可以通过中间件来判断有没有加密处理了\",{\"1\":{\"1099\":1}}],[\"这样我们就可以在一次for循环中找到最小的那个索引\",{\"1\":{\"944\":1}}],[\"这样我们就可以在组建中获取登录用户的id和role了\",{\"1\":{\"194\":1}}],[\"这样我们就可以直观的展示我们的每一个区块的内容\",{\"1\":{\"515\":1}}],[\"这样我们可以通过一个for循环去控制遍历方向\",{\"1\":{\"276\":1}}],[\"这样保证dp\",{\"1\":{\"264\":1}}],[\"这样每个命名空间\",{\"1\":{\"76\":1}}],[\"这样每个容器的网络就能隔离开来\",{\"1\":{\"76\":1}}],[\"这样将导出容器快照到本地文件\",{\"1\":{\"69\":1}}],[\"这样\",{\"1\":{\"60\":1,\"505\":1,\"605\":1,\"945\":1,\"1088\":1}}],[\"这和随便开个小店创业不一样\",{\"1\":{\"11\":1}}],[\"这和yc创业课和\",{\"1\":{\"11\":1}}],[\"当工作线程的mcache中没有合适大小的mspan时就去mcentral中获取\",{\"1\":{\"1149\":1}}],[\"当内存需要分配时\",{\"1\":{\"1149\":1}}],[\"当程序里发生了小于32kb以下的小块内存分配\",{\"1\":{\"1149\":1}}],[\"当程序读入db\",{\"1\":{\"419\":1}}],[\"当满足唤醒条件时\",{\"1\":{\"1146\":1}}],[\"当调用取消函数时\",{\"1\":{\"1156\":1}}],[\"当调用计数器归零\",{\"1\":{\"1144\":1}}],[\"当调用完成后\",{\"1\":{\"1037\":1}}],[\"当资源的使用者想要获取写锁时\",{\"1\":{\"1143\":1}}],[\"当锁的状态是\",{\"1\":{\"1142\":1}}],[\"当锁快失效的时候\",{\"1\":{\"436\":1}}],[\"当提到并发编程\",{\"1\":{\"1141\":1}}],[\"当实现接口的类型和初始化变量时返回的类型时相同时\",{\"1\":{\"1138\":1}}],[\"当实例触发某些行为就可以在一系列状态中来回转换\",{\"1\":{\"1008\":1}}],[\"当缓冲区中不存在数据并且也不存在数据的发送者时\",{\"1\":{\"1137\":1}}],[\"当缓冲区中不存在数据时\",{\"1\":{\"1137\":1}}],[\"当缓冲区存在数据时\",{\"1\":{\"1137\":1}}],[\"当缓冲区存在空余空间时\",{\"1\":{\"1137\":1}}],[\"当存在等待的发送者时\",{\"1\":{\"1137\":1}}],[\"当存在等待的接收者时\",{\"1\":{\"1137\":1}}],[\"当不存在缓冲区或者缓冲区已满时\",{\"1\":{\"1137\":1}}],[\"当系统调用结束后\",{\"1\":{\"1135\":1}}],[\"当在别的proto生成对应的文件时\",{\"1\":{\"1084\":1}}],[\"当别的proto文件去使用这个文件时\",{\"1\":{\"1084\":1}}],[\"当别人表现出来时也不愿接受\",{\"1\":{\"626\":1}}],[\"当body是\",{\"1\":{\"1080\":1}}],[\"当b为nil\",{\"1\":{\"297\":1}}],[\"当使用\",{\"1\":{\"1035\":1}}],[\"当配送到货\",{\"1\":{\"1009\":1}}],[\"当买家点击下单时订单生成\",{\"1\":{\"1009\":1}}],[\"当机器接收到一个指令之后就根据指令内容查一张预先定义好的表\",{\"1\":{\"1009\":1}}],[\"当它发现mocks目录不存在时会返回一个错误\",{\"1\":{\"977\":1}}],[\"当断言失败时\",{\"1\":{\"967\":1}}],[\"当遇到新元素\",{\"1\":{\"946\":1}}],[\"当遇到与自己不同的观点时\",{\"1\":{\"627\":1}}],[\"当天下午就一起出来去南京东路步行街压马路了\",{\"1\":{\"779\":1}}],[\"当所有的孩子都在进行相当于网上转账的操作时\",{\"1\":{\"771\":1}}],[\"当他们非常年轻\",{\"1\":{\"771\":1}}],[\"当david\",{\"1\":{\"721\":1}}],[\"当鲸鱼投资者\",{\"1\":{\"703\":1}}],[\"当时是任正非老先生排版决定的\",{\"1\":{\"806\":1}}],[\"当时我刚刚写完代码准备去学校的西餐厅吃饭\",{\"1\":{\"695\":1}}],[\"当时的社交媒体也与现在截然不同\",{\"1\":{\"532\":1}}],[\"当时的企业\",{\"1\":{\"532\":1}}],[\"当那个必然到来的未来一步一步逐渐展开的时候他们会对自己每一时刻的现状都感到不满\",{\"1\":{\"680\":1}}],[\"当借助推理时\",{\"1\":{\"654\":1}}],[\"当把运送劳工的费用也计入时\",{\"1\":{\"653\":1}}],[\"当地商店提供一些就业机会\",{\"1\":{\"648\":1}}],[\"当伽利略\",{\"1\":{\"643\":1}}],[\"当意识从一页结束时就自然跳转到另一页\",{\"1\":{\"631\":1}}],[\"当人们对揭穿自己已有想法时\",{\"1\":{\"653\":1}}],[\"当人们在近十年中的内容应用时\",{\"1\":{\"631\":1}}],[\"当人们已经习惯了每年有更大的屏幕\",{\"1\":{\"9\":1}}],[\"当新证据揭示出错误时\",{\"1\":{\"627\":1}}],[\"当新的主服务器出现之后\",{\"1\":{\"426\":1}}],[\"当正确答案不易获得时\",{\"1\":{\"627\":1}}],[\"当讨论它时\",{\"1\":{\"626\":1}}],[\"当灾难性事件发生后\",{\"1\":{\"592\":1}}],[\"当第四个点到来时\",{\"1\":{\"585\":1}}],[\"当列举我们的实力时\",{\"1\":{\"583\":1}}],[\"当我打开它时\",{\"1\":{\"706\":1}}],[\"当我提到坚持不懈时\",{\"1\":{\"582\":1}}],[\"当我们从reflect获得类型信息后\",{\"1\":{\"1192\":1}}],[\"当我们从磁盘中读取数据时\",{\"1\":{\"377\":1}}],[\"当我们接触一个新名词的时候\",{\"1\":{\"1186\":1}}],[\"当我们想要获取一个变量的类型信息时\",{\"1\":{\"1188\":1}}],[\"当我们想要向\",{\"1\":{\"1137\":1}}],[\"当我们想将\",{\"1\":{\"1139\":1}}],[\"当我们使用结构体实现接口时\",{\"1\":{\"1138\":1}}],[\"当我们使用指针实现接口时\",{\"1\":{\"1138\":1}}],[\"当我们使用直接请求的时候对应的就是一元拦截器\",{\"1\":{\"1097\":1}}],[\"当我们使用左或者左右模糊匹配的时候\",{\"1\":{\"353\":1}}],[\"当我们更新proto文件\",{\"1\":{\"1084\":1}}],[\"当我们写我们的后台服务时\",{\"1\":{\"1033\":1}}],[\"当我们熟悉了\",{\"1\":{\"994\":1}}],[\"当我们后续因为某些原因需要更换另一个日志库时\",{\"1\":{\"981\":1}}],[\"当我们为一些包含redis操作的代码编写单元测试时就可以使用它来mock\",{\"1\":{\"976\":1}}],[\"当我们限定我们的mock只有达到一定条件才触发时\",{\"1\":{\"960\":1}}],[\"当我们希望使用一个类时\",{\"1\":{\"904\":1}}],[\"当我们读一本书了解到新的认知时\",{\"1\":{\"810\":1}}],[\"当我们了解到一个信息差\",{\"1\":{\"810\":1}}],[\"当我们还是孩童时\",{\"1\":{\"782\":1}}],[\"当我们投身创业时经常会踏入前人未曾涉足的领域\",{\"1\":{\"674\":1}}],[\"当我们考试的时候\",{\"1\":{\"640\":1}}],[\"当我们习惯了上滑动作\",{\"1\":{\"631\":1}}],[\"当我们感觉良好时\",{\"1\":{\"588\":1}}],[\"当我们打开你的\",{\"1\":{\"578\":1}}],[\"当我们研究自己具备哪些不公平优势的时候\",{\"1\":{\"673\":1}}],[\"当我们研究\",{\"1\":{\"578\":1}}],[\"当我们思考自己的职业目标\",{\"1\":{\"574\":1}}],[\"当我们回首往事时\",{\"1\":{\"570\":1}}],[\"当我们回头往过去看\",{\"1\":{\"528\":1}}],[\"当我们最后一次离开学校时\",{\"1\":{\"570\":1}}],[\"当我们的post请求成功或失败时\",{\"1\":{\"516\":1}}],[\"当我们已经有了一个可变借用时\",{\"1\":{\"468\":1}}],[\"当我们说一个变量是全局变量的时候\",{\"1\":{\"454\":1}}],[\"当我们查询一个\",{\"1\":{\"414\":1}}],[\"当我们要删除一个大\",{\"1\":{\"411\":1}}],[\"当我们需要修改数据时\",{\"1\":{\"377\":1}}],[\"当我们在查询条件中对索引列做了计算\",{\"1\":{\"353\":1}}],[\"当我们进行镜像构建的时候\",{\"1\":{\"60\":1}}],[\"当职业道路上的游戏板涉及更多因素时\",{\"1\":{\"580\":1}}],[\"当今社会中一个人可能从事的所有工作的集合\",{\"1\":{\"579\":1}}],[\"当今世界每十年都会发生巨大的变化\",{\"1\":{\"578\":1}}],[\"当子孙后代开始被这些大公司奴役控制的时候\",{\"1\":{\"551\":1}}],[\"当下是永远的囚笼\",{\"1\":{\"806\":1}}],[\"当下接受怎么样的信息\",{\"1\":{\"680\":1}}],[\"当下产生一种误解\",{\"1\":{\"647\":1,\"686\":1}}],[\"当下经济危机时更应该少消费以便买更多优质资产\",{\"1\":{\"598\":1}}],[\"当下国外发生的有关web3\",{\"1\":{\"534\":1}}],[\"当下\",{\"1\":{\"534\":1}}],[\"当下来看很多技术创新的遭遇与当时的ip电话是类似的\",{\"1\":{\"528\":1}}],[\"当垄断互联网已经日薄西山\",{\"1\":{\"532\":1}}],[\"当编写一个其实先会调用一些可能会失败的操作的函数时\",{\"1\":{\"450\":1}}],[\"当运行这段代码时会看到如下来自\",{\"1\":{\"448\":1}}],[\"当结果是\",{\"1\":{\"448\":1}}],[\"当失败时\",{\"1\":{\"448\":1}}],[\"当主题对象的状态发生变化时\",{\"1\":{\"842\":1}}],[\"当主线程执行完成后\",{\"1\":{\"436\":1}}],[\"当主服务器bgsave命令执行完成\",{\"1\":{\"425\":1}}],[\"当集群里的主节点a将主节点b标记为已下线\",{\"1\":{\"435\":1}}],[\"当集群里的某个节点开始一次故障转移操作时\",{\"1\":{\"433\":1}}],[\"当接收者收到meet\",{\"1\":{\"435\":1}}],[\"当接收者收到发送者发来的meet消息或者ping消息时\",{\"1\":{\"434\":1}}],[\"当发送者接到客户端发送的cluster\",{\"1\":{\"434\":1}}],[\"当发生写操作时自动将写操作同步给从服务器\",{\"1\":{\"413\":1}}],[\"当发生\",{\"1\":{\"384\":1}}],[\"当从节点发现自己正在复制的主节点进入已下线状态时\",{\"1\":{\"433\":1}}],[\"当从服务器断线并重新连上一个主服务器时\",{\"1\":{\"425\":1}}],[\"当从服务器对主服务器进行初次复制时\",{\"1\":{\"425\":1}}],[\"当从服务器重新连上主服务器时\",{\"1\":{\"425\":1}}],[\"当从服务器在断线后重新连接主服务器时\",{\"1\":{\"425\":1}}],[\"当从服务器执行了相同的写命令之后\",{\"1\":{\"425\":1}}],[\"当节点a收到这条pong消息时\",{\"1\":{\"435\":1}}],[\"当节点a通过消息接收到了b的slots数组\",{\"1\":{\"428\":1}}],[\"当节点d收到这条ping消息时\",{\"1\":{\"435\":1}}],[\"当节点接收到一个publish命令时\",{\"1\":{\"434\":1}}],[\"当节点发现键所在的槽并非由自己负责处理的时候\",{\"1\":{\"429\":1}}],[\"当节点计算出键所属的槽i之后\",{\"1\":{\"429\":1}}],[\"当数据库中的16384个槽都有节点处理时\",{\"1\":{\"428\":1}}],[\"当握手成功后node节点就会将ip和port所指定的节点添加到node节点所在的集群中\",{\"1\":{\"427\":1}}],[\"当这个\",{\"1\":{\"771\":1}}],[\"当这个旧的主服务器重新上线时\",{\"1\":{\"426\":1}}],[\"当这种情况发生时\",{\"1\":{\"588\":1}}],[\"当这一数量达到配置指定的判断客观下线所需的数量时\",{\"1\":{\"426\":1}}],[\"当认为主服务器已经进入下线状态的sentinel的数量\",{\"1\":{\"426\":1}}],[\"当完成了同步之后\",{\"1\":{\"425\":1}}],[\"当完成以上步骤之后\",{\"1\":{\"422\":1}}],[\"当出现这种情况时\",{\"1\":{\"425\":2,\"588\":1}}],[\"当客户端写入数据时\",{\"1\":{\"1072\":1}}],[\"当客户端向集群中的某个节点发送命令\",{\"1\":{\"435\":1}}],[\"当客户端向源节点发送一个与数据库键有关的命令\",{\"1\":{\"432\":1}}],[\"当客户端向节点发送与数据库键有关的命令时\",{\"1\":{\"429\":1}}],[\"当客户端向从服务器发送以下命令时\",{\"1\":{\"425\":1}}],[\"当客户端向从服务器发送salveof命令时\",{\"1\":{\"425\":1}}],[\"当客户端执行\",{\"1\":{\"360\":1}}],[\"当服务器资源不够需要扩展时需要整体迁移\",{\"1\":{\"1045\":1}}],[\"当服务器接收到一个客户端发来的exec命令时\",{\"1\":{\"424\":1}}],[\"当服务器成功执行一个数据库修改命令之后\",{\"1\":{\"417\":1}}],[\"当用户取消登陆时\",{\"1\":{\"1047\":1}}],[\"当用户调用write函数\",{\"1\":{\"422\":1}}],[\"当用户的健康因子低于阈值时触发\",{\"1\":{\"162\":1}}],[\"当access\",{\"1\":{\"1047\":1}}],[\"当aof持久化功能处于打开状态时\",{\"1\":{\"422\":1}}],[\"当append时当sds长度小于1mb\",{\"1\":{\"393\":1,\"402\":1}}],[\"当读入程序遇到这个值的时候\",{\"1\":{\"418\":1,\"419\":1}}],[\"当读取数据的时候\",{\"1\":{\"376\":1}}],[\"当此过期键被删除后\",{\"1\":{\"414\":1}}],[\"当以哈希表存储时\",{\"1\":{\"408\":1}}],[\"当以下条件中的任意一个被满足时\",{\"1\":{\"395\":1}}],[\"当中\",{\"1\":{\"405\":1}}],[\"当且仅当所有给定\",{\"1\":{\"403\":1}}],[\"当哈希表里的数据很多时\",{\"1\":{\"396\":1}}],[\"当哈希表的负载因子小于0\",{\"1\":{\"395\":1}}],[\"当哈希表的负载因子不断变大\",{\"1\":{\"395\":1}}],[\"当rehash工作完成之后\",{\"1\":{\"396\":1}}],[\"当rehash\",{\"1\":{\"395\":1}}],[\"当redo\",{\"1\":{\"357\":1}}],[\"当需要将对象创建代码与消费者代码分离\",{\"1\":{\"876\":1,\"884\":1}}],[\"当需要实现对象的撤销\",{\"1\":{\"837\":1}}],[\"当需要提供对象的快照\",{\"1\":{\"837\":1}}],[\"当需要保存对象的历史状态\",{\"1\":{\"837\":1}}],[\"当需要减少sds的空间时\",{\"1\":{\"393\":1,\"402\":1}}],[\"当需要有一条记录需要更新时\",{\"1\":{\"357\":1}}],[\"当操作数据库和缓存完成之前\",{\"1\":{\"387\":1}}],[\"当一组对象之间的通信方式复杂且难以理解时\",{\"1\":{\"832\":1}}],[\"当一切都处于这样一种算法控制一切的情况下\",{\"1\":{\"533\":1}}],[\"当一条数据发生修改时\",{\"1\":{\"385\":1}}],[\"当一个上下文被取消时\",{\"1\":{\"1156\":1}}],[\"当一个算法需要在多个地方使用\",{\"1\":{\"854\":1}}],[\"当一个抽象模型有两个方面\",{\"1\":{\"843\":1}}],[\"当一个对象结构需要提供多种不同的遍历方式时\",{\"1\":{\"866\":1}}],[\"当一个对象结构需要增加新的操作\",{\"1\":{\"866\":1}}],[\"当一个对象结构包含多个类型的对象\",{\"1\":{\"866\":1}}],[\"当一个对象有多种行为\",{\"1\":{\"854\":1}}],[\"当一个对象有多个状态\",{\"1\":{\"848\":1}}],[\"当一个对象的操作有多个分支\",{\"1\":{\"848\":1}}],[\"当一个对象的行为取决于其状态\",{\"1\":{\"848\":1}}],[\"当一个对象的状态需要被其他对象实时关注时\",{\"1\":{\"843\":1}}],[\"当一个对象需要动态地改变其行为时\",{\"1\":{\"854\":1}}],[\"当一个对象需要通知其他对象\",{\"1\":{\"843\":1}}],[\"当一个对象需要与多个其他对象进行协作时\",{\"1\":{\"832\":1}}],[\"当一个系统需要在运行时动态地改变对象之间的交互方式时\",{\"1\":{\"832\":1}}],[\"当一个人处于积极的状态中\",{\"1\":{\"632\":1}}],[\"当一个人开始有比较念头的时候\",{\"1\":{\"611\":1}}],[\"当一个年轻的艺术家\",{\"1\":{\"578\":1}}],[\"当一个从节点发现自己正在复制的主节点进入了已下线状态时\",{\"1\":{\"433\":1}}],[\"当一个主节点a判断另一个主节点b已经进入fail状态时\",{\"1\":{\"434\":1}}],[\"当一个主节点a通过消息得知主节点b认为主节点c进入了疑似下线状态时\",{\"1\":{\"433\":1}}],[\"当一个主服务器被判断为客观下线时\",{\"1\":{\"426\":1}}],[\"当一个sentinel\",{\"1\":{\"426\":1}}],[\"当一个sentinel将主服务器判断为主观下线时\",{\"1\":{\"426\":1}}],[\"当一个sentinel启动时\",{\"1\":{\"426\":1}}],[\"当一个处于事务状态的客户端向服务器发送exec命令时\",{\"1\":{\"424\":1}}],[\"当一个客户端处于非事务状态时\",{\"1\":{\"424\":1}}],[\"当一个客户端执行subscribe命令订阅某个或某些频道的时候\",{\"1\":{\"423\":1}}],[\"当一个redis客户端执行publish\",{\"1\":{\"423\":1}}],[\"当一个集合只包含整数值元素\",{\"1\":{\"398\":1}}],[\"当一个列表键包含了数量比较多的元素\",{\"1\":{\"394\":1}}],[\"当一个事务执行完毕时\",{\"1\":{\"424\":1}}],[\"当一个事务执行了下面这条语句\",{\"1\":{\"371\":1}}],[\"当一个事务对一条记录加了\",{\"1\":{\"371\":2}}],[\"当一个事务对某条聚簇索引记录进行改动时\",{\"1\":{\"362\":1}}],[\"当一个程序向另一个程序发起跨程序调用\",{\"1\":{\"131\":1}}],[\"当某一个\",{\"1\":{\"377\":1}}],[\"当页被真正访问的时候\",{\"1\":{\"377\":1}}],[\"当页面写满\",{\"1\":{\"353\":1}}],[\"当脏页上的数据写入磁盘后\",{\"1\":{\"377\":1}}],[\"当访问页不在buffer\",{\"1\":{\"377\":1}}],[\"当访问的页面不再buffer\",{\"1\":{\"377\":1}}],[\"当mysql运行了一段时间后\",{\"1\":{\"377\":1}}],[\"当mysql执行一条查询语句时\",{\"1\":{\"341\":1}}],[\"当修改数据时\",{\"1\":{\"376\":1,\"377\":1}}],[\"当事务\",{\"1\":{\"374\":1}}],[\"当事务执行\",{\"1\":{\"371\":1}}],[\"当执行插入\",{\"1\":{\"368\":1}}],[\"当执行一条update的时候\",{\"1\":{\"355\":1}}],[\"当有线程对表结构进行变更\",{\"1\":{\"367\":1}}],[\"当有线程在执行\",{\"1\":{\"367\":1}}],[\"当有多个事务提交的时候\",{\"1\":{\"360\":1}}],[\"当会话退出后\",{\"1\":{\"366\":1}}],[\"当会话断开了\",{\"1\":{\"364\":1}}],[\"当同一个查询在不同的时间产生不同的结果集时\",{\"1\":{\"362\":1}}],[\"当前运行的goroutine会从mcache中查找可用的mspan\",{\"1\":{\"1149\":1}}],[\"当前方法会成功返回\",{\"1\":{\"1143\":1}}],[\"当前机器上至少存在一个正在运行的处理器\",{\"1\":{\"1142\":1}}],[\"当前gouroutine就尝试自旋等待锁的释放\",{\"1\":{\"1142\":1}}],[\"当前互斥锁上等待的\",{\"1\":{\"1142\":1}}],[\"当前的互斥锁进入饥饿状态\",{\"1\":{\"1142\":1}}],[\"当前\",{\"1\":{\"1137\":1,\"1142\":3,\"1143\":1}}],[\"当前执行超过了\",{\"1\":{\"1135\":1}}],[\"当前处理器已经不被使用\",{\"1\":{\"1134\":1}}],[\"当前处理器由于垃圾回收被停止\",{\"1\":{\"1134\":1}}],[\"当前线程陷入系统调用\",{\"1\":{\"1134\":1}}],[\"当前状态x该指令\",{\"1\":{\"1009\":1}}],[\"当前这个趋势已经消耗殆尽\",{\"1\":{\"764\":1}}],[\"当前页面的内容\",{\"1\":{\"731\":1}}],[\"当前政府的大多数机构\",{\"1\":{\"717\":1}}],[\"当前时刻\",{\"1\":{\"584\":1}}],[\"当前时间\",{\"1\":{\"457\":1}}],[\"当前纪元\",{\"1\":{\"426\":1}}],[\"当前读语句\",{\"1\":{\"362\":1}}],[\"当前读是如何避免幻读的\",{\"1\":{\"362\":1}}],[\"当前数据库中\",{\"1\":{\"362\":2}}],[\"当前记录写到的位置\",{\"1\":{\"357\":1}}],[\"当前讨论的热度很高\",{\"1\":{\"188\":1}}],[\"当绳子的长度是8时\",{\"1\":{\"285\":1,\"286\":1}}],[\"当word1\",{\"1\":{\"265\":4}}],[\"当server1重新上线时\",{\"1\":{\"426\":1}}],[\"当server1的下线时长超过用户设定的下线时长上限时\",{\"1\":{\"426\":1}}],[\"当sentinel从其他sentinel那里接收到足够数量的已下线判断之后\",{\"1\":{\"426\":1}}],[\"当sentinel将一个主服务器判断为主观下线之后\",{\"1\":{\"426\":1}}],[\"当sentinel通过频道信息发现一个新的sentinel时\",{\"1\":{\"426\":1}}],[\"当sentinel与一个主服务器或者从服务器建立起订阅连接之后\",{\"1\":{\"426\":1}}],[\"当sentinel发现主服务器有新的从服务器出现时\",{\"1\":{\"426\":1}}],[\"当s\",{\"1\":{\"264\":2,\"267\":2}}],[\"当j\",{\"1\":{\"235\":1}}],[\"当得知不久之后利率将提升值\",{\"1\":{\"177\":1}}],[\"当流动池中的pusd比usdt多许多的时候\",{\"1\":{\"175\":1}}],[\"当账户面临清算时\",{\"1\":{\"150\":1}}],[\"当你希望在某个算法中的特定点上提供挂钩\",{\"1\":{\"859\":1}}],[\"当你需要对一个隐藏了内部结构的集合进行访问时\",{\"1\":{\"825\":1}}],[\"当你需要对一个集合进行多种操作时\",{\"1\":{\"825\":1}}],[\"当你需要对一个复杂的集合进行多种方式的遍历时\",{\"1\":{\"825\":1}}],[\"当你需要对字符串做切片索引操作时\",{\"1\":{\"468\":1}}],[\"当你需要支持事务功能时\",{\"1\":{\"819\":1}}],[\"当你需要支持撤销\",{\"1\":{\"819\":1}}],[\"当你需要在不同的时刻指定\",{\"1\":{\"819\":1}}],[\"当你需要将发出请求的对象和执行请求的对象解耦时\",{\"1\":{\"819\":1}}],[\"当你完成某件事\",{\"1\":{\"789\":1}}],[\"当你真正坦诚地面对自己时\",{\"1\":{\"587\":1}}],[\"当你真诚地坦白时\",{\"1\":{\"575\":1}}],[\"当你的选择和环境结合在一起时\",{\"1\":{\"587\":1}}],[\"当你把职业看作是一条隧道时\",{\"1\":{\"585\":3}}],[\"当你考虑一条职业道路时\",{\"1\":{\"579\":1}}],[\"当你高估了先天天赋对职业生涯的影响\",{\"1\":{\"578\":1}}],[\"当你经历这个艰难的优先排序过程时\",{\"1\":{\"577\":1}}],[\"当你忽视它们时\",{\"1\":{\"577\":1}}],[\"当你沿着橙色线爬升时\",{\"1\":{\"575\":1}}],[\"当你没有留意时\",{\"1\":{\"575\":1}}],[\"当你剖析对赚钱的内在驱动力时\",{\"1\":{\"574\":1}}],[\"当你决定满足自己帮助他人的欲望时\",{\"1\":{\"573\":1}}],[\"当你决定在市场上进行预测投资时\",{\"1\":{\"19\":1,\"34\":1}}],[\"当你渴望被尊重而努力时\",{\"1\":{\"573\":1}}],[\"当你打开手机\",{\"1\":{\"551\":1}}],[\"当你想查阅书中某个知识的内容\",{\"1\":{\"350\":1}}],[\"当你在某个时刻觉得其他人比你更有资格成为你时\",{\"1\":{\"575\":1}}],[\"当你在\",{\"1\":{\"150\":1}}],[\"当升级权限设置为null时\",{\"1\":{\"126\":1}}],[\"当\",{\"1\":{\"68\":1,\"266\":1,\"287\":1,\"297\":2,\"326\":1,\"360\":1,\"369\":3,\"377\":1,\"395\":1,\"405\":2,\"413\":2,\"414\":2,\"426\":3,\"448\":1,\"471\":1,\"721\":1,\"1135\":1,\"1137\":2,\"1143\":1,\"1144\":1}}],[\"当利用率较高时\",{\"1\":{\"166\":1}}],[\"当利用率较低时\",{\"1\":{\"166\":1}}],[\"当利用率接近\",{\"1\":{\"152\":1}}],[\"当利用\",{\"1\":{\"64\":1}}],[\"当构建的时候\",{\"1\":{\"60\":1}}],[\"当该镜像所有的标签都被取消了\",{\"1\":{\"55\":1}}],[\"当您使用\",{\"1\":{\"1084\":1}}],[\"当您将代币留在交易所时\",{\"1\":{\"704\":1,\"705\":1}}],[\"当您将coin提取到钱包时\",{\"1\":{\"701\":1}}],[\"当您慈善或利他行为时\",{\"1\":{\"573\":1}}],[\"当您的账户健康状况达到\",{\"1\":{\"150\":1}}],[\"当您遇到喜欢的话题\",{\"1\":{\"41\":1}}],[\"当您点击了refund按钮后\",{\"1\":{\"40\":1}}],[\"当您想将您的筹码换出\",{\"1\":{\"40\":1}}],[\"当您再次进入话题页面\",{\"1\":{\"40\":1}}],[\"当您购买成功\",{\"1\":{\"40\":1}}],[\"当然首先你得确保你已经启动了docker\",{\"1\":{\"1219\":1}}],[\"当然如果你只是想获得命令行参数\",{\"1\":{\"1163\":1}}],[\"当然如果这样本题就太简单了\",{\"1\":{\"277\":1}}],[\"当然使用\",{\"1\":{\"1137\":1}}],[\"当然使用lazy\",{\"1\":{\"460\":1}}],[\"当然本期视频不会带着大家去仔细去过一遍官方文档\",{\"1\":{\"1084\":1}}],[\"当然可以使用打桩工具对time\",{\"1\":{\"979\":1}}],[\"当然除了使用miniredis搭建本地redis\",{\"1\":{\"976\":1}}],[\"当然最好在熟悉的地方或者人多的地方散步\",{\"1\":{\"789\":1}}],[\"当然最关键的是\",{\"1\":{\"551\":1}}],[\"当然你可以质疑我的理由\",{\"1\":{\"680\":1}}],[\"当然我举这个例子并不是想说主播不应该接广告\",{\"1\":{\"680\":1}}],[\"当然我列出的名词从字面上也可以大致理解个具体\",{\"1\":{\"8\":1}}],[\"当然仅仅知道什么是不公平优势是绝对不够的\",{\"1\":{\"673\":1}}],[\"当然目前也是有很多创业是这样的\",{\"1\":{\"663\":1}}],[\"当然目前的上滑仍然是以手指上滑为主导\",{\"1\":{\"631\":1}}],[\"当然有信息的生产者\",{\"1\":{\"677\":1}}],[\"当然有\",{\"1\":{\"660\":1}}],[\"当然承认自己的无知并不是\",{\"1\":{\"657\":1}}],[\"当然钱丢了一半只是结果\",{\"1\":{\"591\":1}}],[\"当然作为成年人\",{\"1\":{\"551\":1}}],[\"当然更多预测未来方面的人都出自投资领域\",{\"1\":{\"528\":1}}],[\"当然全面还有另一个隐性优点\",{\"1\":{\"525\":1}}],[\"当然还有最关键的问题是\",{\"1\":{\"551\":1}}],[\"当然还有io包内的函数\",{\"1\":{\"516\":1}}],[\"当然还有一种最坏的情况\",{\"1\":{\"150\":1}}],[\"当然时间又是一个不可再生资源\",{\"1\":{\"500\":1}}],[\"当然不仅仅是中国\",{\"1\":{\"533\":1}}],[\"当然不可以了\",{\"1\":{\"467\":1}}],[\"当然不行\",{\"1\":{\"267\":1}}],[\"当然也通常有足够的广告收益\",{\"1\":{\"743\":1}}],[\"当然也不能怪它们\",{\"1\":{\"551\":1}}],[\"当然也有真正的释放内存空间的api\",{\"1\":{\"393\":1,\"402\":1}}],[\"当然也可以\",{\"1\":{\"294\":1}}],[\"当然也可以用s\",{\"1\":{\"264\":1}}],[\"当然也可以直接通过一个数组digitsmap\",{\"1\":{\"210\":1}}],[\"当然其他线程对学生表进行写操作时也会被阻塞\",{\"1\":{\"366\":1}}],[\"当然是有的\",{\"1\":{\"988\":1}}],[\"当然是一个光谱的两个极端\",{\"1\":{\"571\":1}}],[\"当然是选择在书的目录去找\",{\"1\":{\"350\":1}}],[\"当然是回文子串\",{\"1\":{\"267\":1}}],[\"当然这并不意味着我们应该一律使用结构体实现接口\",{\"1\":{\"1138\":1}}],[\"当然这是另一个话题\",{\"1\":{\"758\":1}}],[\"当然这是另一个话题了\",{\"1\":{\"416\":1}}],[\"当然这也不是他们的问题\",{\"1\":{\"533\":1}}],[\"当然这个题也可以求出最长公共子序列\",{\"1\":{\"265\":1}}],[\"当然这个子集很特殊\",{\"1\":{\"94\":1}}],[\"当然这一步\",{\"1\":{\"235\":1}}],[\"当然\",{\"1\":{\"55\":1,\"60\":1,\"364\":1,\"374\":1,\"385\":1,\"413\":1,\"451\":1,\"483\":1,\"581\":1,\"584\":1,\"585\":1,\"627\":1,\"705\":1,\"751\":2,\"1223\":1}}],[\"当然为了防止知识传播的二次消耗\",{\"1\":{\"8\":1}}],[\"之中\",{\"1\":{\"991\":1}}],[\"之\",{\"1\":{\"424\":1,\"425\":1,\"426\":2}}],[\"之所以\",{\"1\":{\"411\":1}}],[\"之外\",{\"1\":{\"395\":1,\"1144\":1}}],[\"之上就会有许多插件系统帮助我们实现各种功能\",{\"1\":{\"191\":1}}],[\"之一\",{\"1\":{\"191\":1}}],[\"之间会通过\",{\"1\":{\"1136\":1}}],[\"之间的绑定将\",{\"1\":{\"1135\":1}}],[\"之间的关键区别\",{\"1\":{\"571\":1}}],[\"之间的元素\",{\"1\":{\"405\":1}}],[\"之间的部分\",{\"1\":{\"357\":2}}],[\"之间的利息差主要是支付给了协议组方和保险库等等\",{\"1\":{\"152\":1}}],[\"之间\",{\"1\":{\"150\":1,\"362\":1,\"405\":1}}],[\"之后我们就可以请求这个方法中定义的路由\",{\"1\":{\"1050\":1}}],[\"之后决定持有比特币以及具有相关属性的数字资产\",{\"1\":{\"804\":1}}],[\"之后是两种类型的创业公司\",{\"1\":{\"674\":1}}],[\"之后有空时也要将笔记整理为可公开的文章\",{\"1\":{\"660\":1}}],[\"之后有记录会补上的\",{\"1\":{\"505\":1}}],[\"之后添加\",{\"1\":{\"516\":1}}],[\"之后在不同线程上多次调用\",{\"1\":{\"463\":1}}],[\"之后直接使用链式方法调用来进一步缩短代码\",{\"1\":{\"451\":1}}],[\"之后程序不断去运行\",{\"1\":{\"376\":1}}],[\"之后可以在插入数据时\",{\"1\":{\"369\":1}}],[\"之后就会被从库\",{\"1\":{\"360\":1}}],[\"之后就是确认时间非常短400ms\",{\"1\":{\"109\":1}}],[\"之后会经过预处理器\",{\"1\":{\"355\":1}}],[\"之后会经过词法分析和语法分析\",{\"1\":{\"355\":1}}],[\"之后成为默认的存储引擎\",{\"1\":{\"350\":1}}],[\"之后再将它们卖出\",{\"1\":{\"253\":1}}],[\"之后\",{\"1\":{\"74\":1,\"426\":1,\"427\":4,\"435\":1,\"448\":1}}],[\"之后终止容器\",{\"1\":{\"64\":1}}],[\"之后建立的镜像\",{\"1\":{\"54\":1}}],[\"之后的情况完全垄断市场就发生了变化\",{\"1\":{\"9\":1}}],[\"之前不知道在哪看到过一句话\",{\"1\":{\"1177\":1}}],[\"之前文章的用法都失败了\",{\"1\":{\"989\":1}}],[\"之前的篇幅\",{\"1\":{\"971\":1}}],[\"之前的每一层都是不会发生改变的\",{\"1\":{\"55\":1}}],[\"之前八月份来过一次新世界斜对面的大楼\",{\"1\":{\"779\":1}}],[\"之前和朋友聊天\",{\"1\":{\"738\":1}}],[\"之前指定\",{\"1\":{\"448\":1}}],[\"之前版本了\",{\"1\":{\"413\":1}}],[\"之前或之后\",{\"1\":{\"405\":1}}],[\"之前\",{\"1\":{\"368\":2}}],[\"之前已提交的记录都不会丢失\",{\"1\":{\"357\":1}}],[\"之前弹出\",{\"1\":{\"302\":1}}],[\"之前都是求容量为j的背包\",{\"1\":{\"239\":1}}],[\"之前ust是重点关注的算法稳定币项目\",{\"1\":{\"186\":1}}],[\"之前所有的命令只有一个目的\",{\"1\":{\"58\":1}}],[\"之前说过\",{\"1\":{\"58\":1}}],[\"之前讲过\",{\"1\":{\"55\":1}}],[\"之前我们已经看到了使用过滤器来列出虚悬镜像的用法\",{\"1\":{\"54\":1}}],[\"之前提到过字符串字面量\",{\"1\":{\"470\":1}}],[\"之前提到过\",{\"1\":{\"49\":1}}],[\"之前像是上个世纪的web的纯html页面\",{\"1\":{\"8\":1}}],[\"尸兄\",{\"1\":{\"9\":1}}],[\"记忆加速了这个过程\",{\"1\":{\"640\":1}}],[\"记住\",{\"1\":{\"751\":1,\"789\":1}}],[\"记住要抵制条件发射的影响\",{\"1\":{\"623\":1}}],[\"记住自己有点傻也是一种至关重要的谦卑练习\",{\"1\":{\"588\":1}}],[\"记得事先下载cobra\",{\"1\":{\"989\":1}}],[\"记得房子有个地下室\",{\"1\":{\"574\":1}}],[\"记得当时的漫画\",{\"1\":{\"9\":1}}],[\"记\",{\"1\":{\"426\":2}}],[\"记录用户浏览产品信息\",{\"1\":{\"975\":1}}],[\"记录一下我浏览\",{\"1\":{\"808\":1}}],[\"记录知识是在ai易碎时代能证明自己的东西\",{\"1\":{\"605\":1}}],[\"记录下来达到进步的目的\",{\"1\":{\"605\":1}}],[\"记录我们提交data所用的时间\",{\"1\":{\"512\":1}}],[\"记录时间与我而言仅仅只是手段\",{\"1\":{\"500\":1}}],[\"记录集群所有槽的指派信息\",{\"1\":{\"428\":1}}],[\"记录节点的槽指派信息\",{\"1\":{\"428\":1}}],[\"记录了实例的类型\",{\"1\":{\"426\":1}}],[\"记录了上一次服务器的save命令或bgsave命令的时间\",{\"1\":{\"417\":1}}],[\"记录了当前节点的实际数据\",{\"1\":{\"399\":1}}],[\"记录了当前节点实际数据的类型以及⻓度\",{\"1\":{\"399\":1}}],[\"记录了\",{\"1\":{\"399\":1}}],[\"记录了此次事务\",{\"1\":{\"357\":2}}],[\"记录压缩列表包含的节点数量\",{\"1\":{\"399\":1}}],[\"记录压缩列表\",{\"1\":{\"399\":1}}],[\"记录整个压缩列表占⽤对内存字节数\",{\"1\":{\"399\":1}}],[\"记录buf数组中未使用字节的数量\",{\"1\":{\"393\":1,\"402\":1}}],[\"记录buf数组中已使用字节的数量\",{\"1\":{\"393\":1,\"402\":1}}],[\"记录\",{\"1\":{\"373\":1}}],[\"记录锁\",{\"1\":{\"370\":1}}],[\"记录锁+间隙锁\",{\"1\":{\"361\":1,\"362\":1}}],[\"记录在媒介中的作用不仅仅是指记录下来\",{\"1\":{\"605\":1}}],[\"记录在媒介中很重要\",{\"1\":{\"605\":1}}],[\"记录在媒介中\",{\"1\":{\"605\":2}}],[\"记录在\",{\"1\":{\"362\":1}}],[\"记录数量\",{\"1\":{\"361\":1}}],[\"记录行数据最终被修改成什么样了\",{\"1\":{\"358\":1}}],[\"记录进行擦除\",{\"1\":{\"357\":1}}],[\"记录的是实际数据\",{\"1\":{\"413\":1}}],[\"记录的是在某个数据页做了什么修改\",{\"1\":{\"358\":1}}],[\"记录的是更新之前的值\",{\"1\":{\"357\":1}}],[\"记录的是更新之后的值\",{\"1\":{\"357\":1}}],[\"记录的是某个数据页面做了的修改\",{\"1\":{\"357\":1}}],[\"记录最大值\",{\"1\":{\"336\":1}}],[\"记录前k个元素的最大值\",{\"1\":{\"336\":1}}],[\"记录利率累积事件\",{\"1\":{\"152\":1}}],[\"记录事件并返回\",{\"1\":{\"152\":1}}],[\"记录公钥\",{\"1\":{\"121\":1}}],[\"记录笔记到blog上\",{\"1\":{\"4\":1}}],[\"记录到笔记本上\",{\"1\":{\"4\":1}}],[\"一张8kb大小的内存空间\",{\"1\":{\"1148\":1}}],[\"一开始我们介绍了\",{\"1\":{\"1135\":1}}],[\"一开始\",{\"1\":{\"1135\":2}}],[\"一开始是你自己去影响算法的\",{\"1\":{\"689\":1}}],[\"一开始是某个人写下某个信息不让某人看到\",{\"1\":{\"654\":1}}],[\"一键发布你的go代码\",{\"0\":{\"1027\":1},\"1\":{\"1027\":1}}],[\"一套代码发布多个平台\",{\"0\":{\"1014\":1},\"1\":{\"1014\":1}}],[\"一套独立交易验证和货币发行的规则\",{\"1\":{\"94\":1}}],[\"一系列转换函数\",{\"1\":{\"1009\":1}}],[\"一台mac和一台windows\",{\"1\":{\"910\":1}}],[\"一件事情如果一开始不获利\",{\"1\":{\"800\":1}}],[\"一件事情原本是什么\",{\"1\":{\"643\":1}}],[\"一书中强调了减少沟通需求的重要性\",{\"1\":{\"722\":1}}],[\"一位作者陈述的观点可能被另外一名作者重新表述为一个事实\",{\"1\":{\"654\":1}}],[\"一年前的热点都记不起来\",{\"1\":{\"734\":1}}],[\"一年里什么时候播种什么时候收麦子全得看老天爷的意思\",{\"1\":{\"677\":1}}],[\"一年收割麦子的时间就是哪个时候\",{\"1\":{\"646\":1}}],[\"一年工作40周的人的四倍\",{\"1\":{\"581\":1}}],[\"一年工作50周的人\",{\"1\":{\"581\":1}}],[\"一部此前不为人知的电影在英国电影档案馆被发现\",{\"1\":{\"643\":1}}],[\"一部分是不用s\",{\"1\":{\"264\":1}}],[\"一部分是用s\",{\"1\":{\"264\":1}}],[\"一点都不珍惜自己的脑子\",{\"1\":{\"605\":1}}],[\"一点点微见\",{\"1\":{\"11\":1}}],[\"一切皆有可能\",{\"1\":{\"674\":1}}],[\"一切烦心事儿都可以通过抱怨来解决\",{\"1\":{\"592\":1}}],[\"一切都发生在潜移默化的过程中\",{\"1\":{\"534\":1}}],[\"一切都是使用的远程调用形式在服务端\",{\"1\":{\"60\":1}}],[\"一段时间内\",{\"1\":{\"587\":1}}],[\"一辆以30英里\",{\"1\":{\"582\":1}}],[\"一类人查看地图会视其为一个大大的让人焦虑的问号\",{\"1\":{\"572\":1}}],[\"一类是\",{\"1\":{\"55\":1}}],[\"一是认为\",{\"1\":{\"627\":1}}],[\"一是因为记录在媒介中\",{\"1\":{\"605\":1}}],[\"一是在那一刻\",{\"1\":{\"570\":1}}],[\"一是性能很差\",{\"1\":{\"359\":1}}],[\"一如既往地感谢那些慷慨大方\",{\"1\":{\"569\":1}}],[\"一根网线加上一台电脑就可以去互联网的任何地方\",{\"1\":{\"532\":1}}],[\"一不注意\",{\"1\":{\"475\":1}}],[\"一句话\",{\"1\":{\"460\":1,\"725\":1}}],[\"一项一项地对列表进行过滤\",{\"1\":{\"426\":1}}],[\"一方面选择确实可以决定命运\",{\"1\":{\"666\":1}}],[\"一方面这些信息不是整个事实的全部\",{\"1\":{\"642\":1}}],[\"一方面开始上滑行为就是因为没有可以让自己充满积极的事业\",{\"1\":{\"634\":1}}],[\"一方面所有人都在不断坚持逻辑\",{\"1\":{\"626\":1}}],[\"一方面由于过去想的多做的少\",{\"1\":{\"605\":1}}],[\"一方面\",{\"1\":{\"577\":1,\"721\":1,\"761\":1}}],[\"一方面是关于主服务器本身的信息\",{\"1\":{\"426\":1}}],[\"一方面可以让自己忘了的时候有可以复习的地方\",{\"1\":{\"274\":1}}],[\"一方面可以实现不借助\",{\"1\":{\"61\":1}}],[\"一致\",{\"1\":{\"424\":1}}],[\"一致性则是通过持久性+原子性+隔离性来保证\",{\"1\":{\"361\":1}}],[\"一致性\",{\"1\":{\"361\":1,\"387\":1}}],[\"一下子瞬间rehash可能导致性能问题\",{\"1\":{\"396\":1}}],[\"一\",{\"0\":{\"771\":1},\"1\":{\"395\":2,\"424\":1,\"426\":7,\"428\":1,\"431\":1,\"432\":2,\"434\":1,\"435\":1}}],[\"一直存在您头脑深处\",{\"1\":{\"572\":1}}],[\"一直是喜欢冥想的人的不错\",{\"1\":{\"521\":1}}],[\"一直执行步骤2和步骤3\",{\"1\":{\"422\":1}}],[\"一直没有被访问\",{\"1\":{\"414\":1}}],[\"一直跟这个事务启动时看到的数据是一致的\",{\"1\":{\"361\":2,\"362\":1}}],[\"一直到\",{\"1\":{\"360\":1}}],[\"一直到最大的\",{\"1\":{\"289\":1}}],[\"一次两次逃顶只是运气\",{\"1\":{\"806\":1}}],[\"一次缓存\",{\"1\":{\"386\":1}}],[\"一次是\",{\"1\":{\"360\":3}}],[\"一次\",{\"1\":{\"357\":1}}],[\"一条消息由消息头\",{\"1\":{\"434\":1}}],[\"一条记录的每一次更新操作产生的undo\",{\"1\":{\"356\":1}}],[\"一条交易可以视为处理一条或多条指令的请求\",{\"1\":{\"116\":1}}],[\"一当\",{\"1\":{\"264\":1}}],[\"一天一共就有五个状态\",{\"1\":{\"254\":1}}],[\"一定程度上中国目前的经济和日本1995年很像\",{\"1\":{\"669\":1}}],[\"一定会出一个广告类的视频\",{\"1\":{\"631\":1}}],[\"一定就会知道信息的反脆弱性\",{\"1\":{\"552\":1}}],[\"一定在闭区间\",{\"1\":{\"326\":2}}],[\"一定都是0\",{\"1\":{\"264\":1}}],[\"一定都是1\",{\"1\":{\"264\":1}}],[\"一定是这样的\",{\"1\":{\"677\":1}}],[\"一定是false\",{\"1\":{\"267\":1}}],[\"一定是取最大的\",{\"1\":{\"262\":1,\"268\":1}}],[\"一定是选最大的\",{\"1\":{\"254\":1}}],[\"一定是\",{\"1\":{\"248\":1}}],[\"一定为1\",{\"1\":{\"243\":1}}],[\"一定要从\",{\"1\":{\"413\":1}}],[\"一定要从行业内部广泛的汲取思路\",{\"1\":{\"11\":1}}],[\"一定要时刻记住这里i和j的含义\",{\"1\":{\"236\":1}}],[\"一定要和dp数组的定义吻合\",{\"1\":{\"235\":1,\"236\":1}}],[\"一定要确保每一层只添加真正需要添加的东西\",{\"1\":{\"58\":1}}],[\"一步一个台阶\",{\"1\":{\"243\":1}}],[\"一看到钱币数量不限\",{\"1\":{\"242\":1}}],[\"一和零\",{\"0\":{\"240\":1}}],[\"一维dp数组遍历顺序\",{\"1\":{\"236\":1}}],[\"一维dp数组如何初始化\",{\"1\":{\"236\":1}}],[\"一维dp数组的递推公式\",{\"1\":{\"236\":1}}],[\"一维滚动数组\",{\"1\":{\"236\":1}}],[\"一维数组\",{\"0\":{\"236\":1},\"1\":{\"236\":1}}],[\"一些交易所将发布其加密货币余额的\",{\"1\":{\"703\":1}}],[\"一些经纪商和交易所被发现这样做了\",{\"1\":{\"703\":1}}],[\"一些人说\",{\"1\":{\"626\":1}}],[\"一些看法\",{\"0\":{\"592\":1}}],[\"一些蓝色或黄色的循环活动\",{\"1\":{\"588\":1}}],[\"一些渴望可能是被那个冒名顶替者放在那里的\",{\"1\":{\"576\":1}}],[\"一些工具更是如此\",{\"1\":{\"525\":1}}],[\"一些协议也会使用自己的预言机系统或多个预言机的组合来增强安全性\",{\"1\":{\"165\":1}}],[\"一些协议特有的功能\",{\"1\":{\"163\":1}}],[\"一些协议支持使用不同代币偿还\",{\"1\":{\"161\":1}}],[\"一些流动性较低的资产抵押率是0\",{\"1\":{\"159\":1}}],[\"一些常用的说明包括\",{\"1\":{\"133\":1}}],[\"一旦出现负数就会发生程序崩溃\",{\"1\":{\"1144\":1}}],[\"一旦当前\",{\"1\":{\"1142\":2}}],[\"一旦jwt\",{\"1\":{\"1047\":1}}],[\"一旦把思想用语言表达出来并予以发表\",{\"1\":{\"628\":1}}],[\"一旦进入\",{\"1\":{\"585\":1}}],[\"一旦你的钱包里有coin\",{\"1\":{\"701\":1}}],[\"一旦你对自己的渴望章鱼有了相对清晰的画面\",{\"1\":{\"575\":1}}],[\"一旦你支付此费用\",{\"1\":{\"228\":1}}],[\"一旦客户端完成了和所有\",{\"1\":{\"437\":1}}],[\"一旦\",{\"1\":{\"413\":1,\"1142\":1}}],[\"一旦有请求到达\",{\"1\":{\"412\":1}}],[\"一旦我们决定使用缓存\",{\"1\":{\"387\":1}}],[\"一旦价格恢复到1\",{\"1\":{\"177\":1}}],[\"一旦利用率超过\",{\"1\":{\"152\":1}}],[\"一旦您的mixin账户中有了betxin所支持的加密货币\",{\"1\":{\"37\":1}}],[\"一种运动后你几乎兴奋的状态\",{\"1\":{\"789\":1}}],[\"一种令人满意的感觉\",{\"1\":{\"587\":1}}],[\"一种对改变的强烈抵抗\",{\"1\":{\"574\":1}}],[\"一种是值接受者\",{\"1\":{\"1138\":1}}],[\"一种是access\",{\"1\":{\"1047\":1}}],[\"一种是程序异常\",{\"1\":{\"447\":1}}],[\"一种是基于镜像新建一个容器并启动\",{\"1\":{\"63\":1}}],[\"一种开源解决方案\",{\"1\":{\"193\":1}}],[\"一种可选费用\",{\"1\":{\"118\":1}}],[\"一一对应不同的命令\",{\"1\":{\"58\":1}}],[\"一共就两行\",{\"1\":{\"56\":1}}],[\"一般小对象直接通过mspan分配内存\",{\"1\":{\"1150\":1}}],[\"一般的规则是参数在所有选项的后面\",{\"1\":{\"991\":1}}],[\"一般的格式为\",{\"1\":{\"988\":1}}],[\"一般的想法是\",{\"1\":{\"701\":1}}],[\"一般的回溯代码会长成这个样子\",{\"1\":{\"206\":1}}],[\"一般人对自己价值观的意识如何\",{\"1\":{\"626\":1}}],[\"一般人类寿命约为75万小时\",{\"1\":{\"571\":1}}],[\"一般会\",{\"1\":{\"358\":1}}],[\"一般可以解决如下几种问题\",{\"1\":{\"206\":1}}],[\"一般情况下人们会为自己的需求来付费\",{\"1\":{\"776\":1}}],[\"一般情况下\",{\"1\":{\"193\":1,\"395\":1}}],[\"一般情况借贷协议会根据借贷池被借用的比例动态设置利率\",{\"1\":{\"158\":1}}],[\"一般是返回err或者status类型的错误\",{\"1\":{\"1074\":1}}],[\"一般是全额抵押\",{\"1\":{\"185\":1}}],[\"一般是与现实世界的某些资产挂钩\",{\"1\":{\"180\":1}}],[\"一般协议还支持闪贷等\",{\"1\":{\"157\":1}}],[\"一般大家习惯性的会使用默认的文件名\",{\"1\":{\"60\":1}}],[\"一般取前3个字符以上\",{\"1\":{\"55\":1}}],[\"一般来说主流的操作系统都会内置了make命令\",{\"1\":{\"1024\":1}}],[\"一般来说\",{\"1\":{\"52\":1,\"60\":1}}],[\"一般这类公开服务允许用户免费上传\",{\"1\":{\"48\":1}}],[\"一节进行详细讲解\",{\"1\":{\"50\":1}}],[\"一样了\",{\"1\":{\"1133\":1}}],[\"一样也是在插入数据的时候\",{\"1\":{\"369\":1}}],[\"一样会被认为事务已经执行成功\",{\"1\":{\"360\":1}}],[\"一样的\",{\"1\":{\"259\":1}}],[\"一样的语法写一个\",{\"1\":{\"60\":1}}],[\"一样\",{\"1\":{\"47\":1,\"59\":1}}],[\"一个程序员开始重视日志的时候才是这个程序员从程序员迈向工程师的时候\",{\"1\":{\"1177\":1}}],[\"一个比较常见的使用场景是批量发出\",{\"1\":{\"1144\":1}}],[\"一个http连接在长时间没有数据传输的情况下\",{\"1\":{\"1073\":1}}],[\"一个目录下多个mod文件的问题\",{\"1\":{\"1071\":1}}],[\"一个密钥\",{\"1\":{\"1047\":1}}],[\"一个jwt\",{\"1\":{\"1047\":1}}],[\"一个订单从创建开始就要经历好几个状态\",{\"1\":{\"1009\":1}}],[\"一个完整的\",{\"0\":{\"992\":1}}],[\"一个软件实体\",{\"1\":{\"982\":1}}],[\"一个mock类型\",{\"1\":{\"980\":1}}],[\"一个测试用例感觉不太够\",{\"1\":{\"967\":1}}],[\"一个n的heapify的复杂度是logn\",{\"1\":{\"950\":1}}],[\"一个n个数的集合里有多少符合条件的子集\",{\"1\":{\"206\":1}}],[\"一个趋势从诞生到发展到泡沫\",{\"1\":{\"804\":1}}],[\"一个坏主意\",{\"1\":{\"772\":1}}],[\"一个几乎没有经验的人能做他所做的事情\",{\"1\":{\"771\":1}}],[\"一个让同校同学大多数人非常不满意的地方\",{\"1\":{\"759\":1}}],[\"一个以微服务为模型的服务接口\",{\"1\":{\"725\":1}}],[\"一个结构良好\",{\"1\":{\"724\":1}}],[\"一个非常平易近人\",{\"1\":{\"721\":1}}],[\"一个平易近人\",{\"1\":{\"721\":1}}],[\"一个有远见的人如同一个先知\",{\"1\":{\"674\":1}}],[\"一个学者能够通过自己的知识财富自由是很难得的\",{\"1\":{\"669\":1}}],[\"一个信息的质量高低依赖于支持它的信息质量\",{\"1\":{\"642\":1}}],[\"一个意大利人可能会迟到两小时\",{\"1\":{\"619\":1}}],[\"一个更好的目标是满足感\",{\"1\":{\"587\":1}}],[\"一个盒子或一个身份标签\",{\"1\":{\"585\":1}}],[\"一个新的问号意味着你已经在两个过山车上进行了关键的悬崖跳跃\",{\"1\":{\"585\":1}}],[\"一个新的在桌面上看起来既符合你的高优先级评估又可能实现的选项清单\",{\"1\":{\"584\":1}}],[\"一个经常表达的后悔是\",{\"1\":{\"588\":1}}],[\"一个经常中断工作做白日梦或拿起手机的人\",{\"1\":{\"581\":1}}],[\"一个经常被引用的统计数据7\",{\"1\":{\"578\":1}}],[\"一个倾向于懒惰或拖延的人会比一个善于保持持续工作的人失去很多进展\",{\"1\":{\"581\":1}}],[\"一个选择平衡生活方式的人会比一个专心工作的工作狂进展较慢\",{\"1\":{\"581\":1}}],[\"一个每周工作60小时\",{\"1\":{\"581\":1}}],[\"一个常见的观点\",{\"1\":{\"578\":1}}],[\"一个普遍的概念\",{\"1\":{\"578\":1}}],[\"一个叫做否认监狱的地方\",{\"1\":{\"575\":1}}],[\"一个顺从的机器人\",{\"1\":{\"575\":1}}],[\"一个渴望的层次结构将开始显现\",{\"1\":{\"574\":1}}],[\"一个重重复\",{\"1\":{\"571\":1}}],[\"一个注重创新\",{\"1\":{\"571\":1}}],[\"一个人有勇气\",{\"1\":{\"674\":1}}],[\"一个人的价值观决定了一个人的选择质量\",{\"1\":{\"666\":1}}],[\"一个人的价值观来自何处\",{\"1\":{\"626\":1}}],[\"一个人的命运其实是由无数个重大选择决定的\",{\"1\":{\"666\":1}}],[\"一个人相信什么\",{\"1\":{\"639\":1}}],[\"一个人通过ai换头像去向熟人诈骗\",{\"1\":{\"605\":1}}],[\"一个人在十几岁时就一直生活在这样的环境氛围中\",{\"1\":{\"551\":1}}],[\"一个人如果要进入传统互联网必须主动去寻找\",{\"1\":{\"534\":1}}],[\"一个字节数组\",{\"1\":{\"473\":1}}],[\"一个字符串的\",{\"1\":{\"260\":1}}],[\"一个字符串按一定规则有几种切割方式\",{\"1\":{\"206\":1}}],[\"一个语言中字符串的地位可以类比英语中动词的地位\",{\"1\":{\"467\":1}}],[\"一个线程\",{\"1\":{\"436\":1}}],[\"一个40字节长\",{\"1\":{\"435\":1}}],[\"一个客户端通常会与集群中多个节点建立socket连接\",{\"1\":{\"429\":1}}],[\"一个节点除了将自己负责处理的槽记录在clusternode结构的slots属性和numslots\",{\"1\":{\"428\":1}}],[\"一个节点就是一个运行在集群模式下的redis服务器\",{\"1\":{\"427\":1}}],[\"一个redis集群通常由多个节点\",{\"1\":{\"427\":1}}],[\"一个rdb文件的databases部分可以保存任意多个非空数据库\",{\"1\":{\"419\":1}}],[\"一个span在初始化的时候\",{\"1\":{\"1148\":1}}],[\"一个sentinel发送的\",{\"1\":{\"426\":1}}],[\"一个solana地址支持多个账户\",{\"1\":{\"150\":1}}],[\"一个fifo队列\",{\"1\":{\"426\":1}}],[\"一个for循环当遇到空格就加入\",{\"1\":{\"277\":1}}],[\"一个切片集群共有\",{\"1\":{\"413\":1}}],[\"一个或多个连续的page组成一个span\",{\"1\":{\"1148\":1}}],[\"一个或多个\",{\"1\":{\"403\":1}}],[\"一个压缩列表可以包含任意多个节点\",{\"1\":{\"399\":1}}],[\"一个哈希表里面有多个哈希表节点\",{\"1\":{\"395\":1}}],[\"一个页的大小是16kb\",{\"1\":{\"376\":1}}],[\"一个拥有间隙锁\",{\"1\":{\"374\":1}}],[\"一个事务从开始到结束通常会经历以下三个阶段\",{\"1\":{\"424\":1}}],[\"一个事务在插入一条记录的时候\",{\"1\":{\"374\":1}}],[\"一个事务在持有\",{\"1\":{\"369\":1}}],[\"一个事务持有了范围为\",{\"1\":{\"373\":1}}],[\"一个事务中的所有操作\",{\"1\":{\"361\":1}}],[\"一个记录\",{\"1\":{\"362\":1}}],[\"一个整型数组\",{\"1\":{\"330\":1}}],[\"一个长度为n\",{\"1\":{\"326\":1}}],[\"一个数字可能有多个翻译\",{\"1\":{\"318\":1}}],[\"一个链表有\",{\"1\":{\"294\":1}}],[\"一个点\",{\"1\":{\"292\":1}}],[\"一个符号字符\",{\"1\":{\"292\":2}}],[\"一个是吸引了大多数的注意力\",{\"1\":{\"648\":1}}],[\"一个是命令连接\",{\"1\":{\"426\":1}}],[\"一个是实现有序集合键\",{\"1\":{\"397\":1}}],[\"一个是直接遍历链表从头到尾\",{\"1\":{\"278\":1}}],[\"一个是取dp\",{\"1\":{\"236\":1}}],[\"一个是取自己dp\",{\"1\":{\"236\":1}}],[\"一个可能的最长回文子序列为\",{\"1\":{\"268\":1}}],[\"一个机器人位于一个\",{\"1\":{\"230\":1}}],[\"一个已经登录的用户访问\",{\"1\":{\"200\":1}}],[\"一个单位的抵押资产也总是可以拆分成一个结果代币和它的互补代币\",{\"1\":{\"169\":1}}],[\"一个group可以管理多个银行对应代币的借贷行为\",{\"1\":{\"152\":1}}],[\"一个bank管理一个代币\",{\"1\":{\"152\":1}}],[\"一个钱包可以为同一类型的代币创建多个代币账户\",{\"1\":{\"135\":1}}],[\"一个交易可以包含多个指令\",{\"1\":{\"116\":1}}],[\"一个容易混淆的概念是注册服务器\",{\"1\":{\"73\":1}}],[\"一个镜像可以对应多个标签比如3\",{\"1\":{\"51\":1}}],[\"一个仓库会包含同一个软件不同版本的镜像\",{\"1\":{\"48\":1}}],[\"一个\",{\"1\":{\"48\":1,\"152\":1,\"292\":2,\"1146\":1}}],[\"一个话题的结束时间是2024年12月31日\",{\"1\":{\"25\":1}}],[\"一个跨时代的产品\",{\"1\":{\"9\":1}}],[\"一颗大白菜的价格整个市场都差不多\",{\"1\":{\"8\":1}}],[\"以防止在序列化和反序列化时出现数据损坏或解析失败的情况\",{\"1\":{\"1084\":1}}],[\"以多线程模式运行的服务器会让大部分线程大部分时间都处于挂起状态\",{\"1\":{\"1073\":1}}],[\"以每秒\",{\"1\":{\"1034\":1}}],[\"以后每隔\",{\"1\":{\"1002\":1}}],[\"以常见的\",{\"1\":{\"991\":1}}],[\"以大顶堆为例\",{\"1\":{\"950\":1}}],[\"以减少内存占用和提高性能\",{\"1\":{\"931\":1}}],[\"以构建完整的产品对象\",{\"1\":{\"873\":1}}],[\"以色列\",{\"1\":{\"795\":1}}],[\"以张雪峰为例\",{\"1\":{\"738\":1}}],[\"以现在的眼光来看\",{\"1\":{\"734\":1}}],[\"以任何随机的理由将人们锁定在外\",{\"1\":{\"701\":1}}],[\"以盈利为首要目的而不是扩张\",{\"1\":{\"663\":1}}],[\"以至只在你有足够知识这样做时才接受这些信念\",{\"1\":{\"657\":1}}],[\"以至于潜移默化造成了很多社会问题\",{\"1\":{\"758\":1}}],[\"以至于大多数人都不愿意去思考\",{\"1\":{\"754\":1}}],[\"以至于他们通过股票经纪人\",{\"1\":{\"703\":1}}],[\"以至于中国这种理论上的社会主义国家都接受了它\",{\"1\":{\"648\":1}}],[\"以至于爆发出选择的暴政感觉\",{\"1\":{\"585\":1}}],[\"以至于你想从根本上保证它们的实现\",{\"1\":{\"577\":1}}],[\"以至于不能再称之为安全感的渴望\",{\"1\":{\"574\":1}}],[\"以至于\",{\"1\":{\"450\":1}}],[\"以一个小镇为例\",{\"1\":{\"648\":1}}],[\"以不同的方式表示时间\",{\"1\":{\"1205\":1}}],[\"以不断积累和更新自己的知识\",{\"1\":{\"646\":1}}],[\"以不需要经过查询缓存\",{\"1\":{\"355\":1}}],[\"以诚待己\",{\"1\":{\"627\":1}}],[\"以自我为中心已经从恶习变成美德\",{\"1\":{\"623\":1}}],[\"以自我为中心是一种恶习\",{\"1\":{\"623\":1}}],[\"以为回到了3月底的时期\",{\"1\":{\"609\":1}}],[\"以我程序员的职业告诉我\",{\"1\":{\"605\":1}}],[\"以达到最酷的成功之星\",{\"1\":{\"582\":1}}],[\"以前缀开头\",{\"1\":{\"516\":1}}],[\"以前使用\",{\"1\":{\"74\":1}}],[\"以上是对\",{\"1\":{\"1213\":1}}],[\"以上是\",{\"1\":{\"1212\":1}}],[\"以上示例演示了如何使用\",{\"1\":{\"1161\":1}}],[\"以上两种机制都治标不治本\",{\"1\":{\"1073\":1}}],[\"以上就表示每\",{\"1\":{\"1034\":1}}],[\"以上就是我完成搬迁博客的想法\",{\"1\":{\"660\":1}}],[\"以上就是大概了解一个包的内容\",{\"1\":{\"512\":1}}],[\"以上介绍了重要的数据模型\",{\"1\":{\"1011\":1}}],[\"以上规则和linux下的一模一样\",{\"1\":{\"1003\":1}}],[\"以上我说服我自己一定要独立思考的理由\",{\"1\":{\"680\":1}}],[\"以上观点都很好\",{\"1\":{\"573\":1}}],[\"以上\",{\"1\":{\"525\":1,\"528\":1}}],[\"以上均由本人独立完成\",{\"1\":{\"521\":1}}],[\"以上代码我们声明了一个\",{\"1\":{\"463\":1}}],[\"以上的代码我们声明了一个全局动态配置的config\",{\"1\":{\"461\":1}}],[\"以上的静态初始化有一个致命问题\",{\"1\":{\"459\":1}}],[\"以上面的\",{\"1\":{\"50\":1}}],[\"以此来提高服务的性能\",{\"1\":{\"1143\":1}}],[\"以此来看\",{\"1\":{\"551\":1}}],[\"以此来检测被选中的节点是否在线\",{\"1\":{\"434\":1}}],[\"以此来检查rdb文件是否有出错或者损坏的情况出现\",{\"1\":{\"418\":1}}],[\"以此来记录这个节点正在复制的主节点\",{\"1\":{\"433\":1}}],[\"以此来记录其他节点的状态\",{\"1\":{\"427\":1}}],[\"以此来告知其他节点自己目前负责处理哪些槽\",{\"1\":{\"428\":1}}],[\"以此来与主服务器进行通信\",{\"1\":{\"426\":1}}],[\"以此来降低系统对单主节点的依赖\",{\"1\":{\"413\":1}}],[\"以此来减少相互之间的竞争\",{\"1\":{\"8\":1}}],[\"以二进制的方式写入磁盘\",{\"1\":{\"413\":1}}],[\"以二进制串的形式\",{\"1\":{\"287\":1}}],[\"以秒为单位\",{\"1\":{\"403\":1}}],[\"以i\",{\"1\":{\"264\":1,\"265\":2}}],[\"以内的房屋\",{\"1\":{\"248\":2}}],[\"以j为头结点右子树节点数量\",{\"1\":{\"232\":1}}],[\"以j为头结点左子树节点数量\",{\"1\":{\"232\":1}}],[\"以便进一步判断和处理\",{\"1\":{\"1188\":1}}],[\"以便我们快速对grpc的语法快速熟悉起来\",{\"1\":{\"1083\":1}}],[\"以便于我们编写proto文件时\",{\"1\":{\"1067\":1}}],[\"以便于客户端代码可以获取session信息\",{\"1\":{\"199\":1}}],[\"以便您可以在不破坏它们的情况下进行更改\",{\"1\":{\"988\":1}}],[\"以便您可以控制谁可以登录以及必须重新验证会话的频率\",{\"1\":{\"193\":1}}],[\"以便其他人可以扩展该算法而无需更改其结构时\",{\"1\":{\"859\":1}}],[\"以便在发生错误或异常时\",{\"1\":{\"837\":1}}],[\"以便在需要时恢复到某个状态时\",{\"1\":{\"837\":1}}],[\"以便在各方面都可互补\",{\"1\":{\"674\":1}}],[\"以便为证据允许时的情况留下余地\",{\"1\":{\"657\":1}}],[\"以便为其用户提供最佳体验\",{\"1\":{\"122\":1}}],[\"以便你在复习笔记时能知道它是自己的\",{\"1\":{\"628\":1}}],[\"以便你对其他人将提出的事实和解释保持开放心态\",{\"1\":{\"627\":1}}],[\"以控制允许登录的帐户\",{\"1\":{\"193\":1}}],[\"以支持\",{\"1\":{\"193\":1}}],[\"以确保所有数据被写入或读取\",{\"1\":{\"1153\":1}}],[\"以确保新块是符合要求的\",{\"1\":{\"516\":1}}],[\"以确保价格数据的准确性和可靠性\",{\"1\":{\"165\":1}}],[\"以确保下载一致性\",{\"1\":{\"49\":1}}],[\"以避免清算\",{\"1\":{\"159\":1}}],[\"以美元计\",{\"1\":{\"152\":1}}],[\"以最大化他们的年化收益率\",{\"1\":{\"151\":1}}],[\"以下代码就可以开始开启gin的web服务了\",{\"1\":{\"1050\":1}}],[\"以下代码也是合法的\",{\"1\":{\"481\":1}}],[\"以下将分别介绍这三个作用\",{\"1\":{\"425\":1}}],[\"以下三个小节将分别介绍三个redis事务可能出错的地方\",{\"1\":{\"424\":1}}],[\"以下标i\",{\"1\":{\"266\":2}}],[\"以下讲解和图示中出现的数字都是以这个例子为例\",{\"1\":{\"235\":1}}],[\"以下分析如果想不清楚\",{\"1\":{\"232\":1}}],[\"以下例子中假设\",{\"1\":{\"169\":1}}],[\"以下是\",{\"1\":{\"1200\":1}}],[\"以下是其中一些常用的方法\",{\"1\":{\"1189\":1}}],[\"以下是gomock中一些预定义的matcher\",{\"1\":{\"977\":1}}],[\"以下是对mockgen命令参数的说明\",{\"1\":{\"977\":1}}],[\"以下是印度交易所\",{\"1\":{\"706\":1}}],[\"以下是遭受安全漏洞\",{\"1\":{\"704\":1}}],[\"以下是我决定写这个话题的原因\",{\"1\":{\"572\":1}}],[\"以下是故障转移的执行步骤\",{\"1\":{\"433\":1}}],[\"以下是redis选举领头sentinel的规则和方法\",{\"1\":{\"426\":1}}],[\"以下是发送sync命令的步骤\",{\"1\":{\"425\":1}}],[\"以下是一个示例\",{\"1\":{\"1161\":1,\"1163\":2}}],[\"以下是一个例子\",{\"1\":{\"150\":2}}],[\"以下是一些示例说明如何使用这些占位符\",{\"1\":{\"1173\":1}}],[\"以下是一些常用的占位符及其使用方式\",{\"1\":{\"1173\":1}}],[\"以下是一些你已经开始变得技术文盲和过时的迹象\",{\"1\":{\"772\":1}}],[\"以下是一些产生计算成本的常见操作\",{\"1\":{\"121\":1}}],[\"以下是指向令牌扩展程序帐户及其对应程序可执行数据帐户的\",{\"1\":{\"114\":1}}],[\"以下我内容进行总结自wiki页面\",{\"1\":{\"8\":1}}],[\"以独特而强大的方式将四项关键创新融合在一起\",{\"1\":{\"94\":1}}],[\"以及表示月份\",{\"1\":{\"1205\":1}}],[\"以及指定的基数\",{\"1\":{\"1198\":1}}],[\"以及对应位数的浮点数类型\",{\"1\":{\"1198\":1}}],[\"以及对金钱的决策行为\",{\"1\":{\"615\":1}}],[\"以及将字符串转换为基本类型的函数\",{\"1\":{\"1198\":1}}],[\"以及一个互斥锁\",{\"1\":{\"1145\":1}}],[\"以及一个已入队命令的计数器\",{\"1\":{\"424\":1}}],[\"以及调用方的程序计数器\",{\"1\":{\"1135\":1}}],[\"以及在在脚本下的debug等\",{\"1\":{\"1104\":1}}],[\"以及在我大三大四时拿到了令我比较满意的\",{\"1\":{\"759\":1}}],[\"以及定义message\",{\"1\":{\"1089\":1}}],[\"以及看看下面的默认类型\",{\"1\":{\"1084\":1}}],[\"以及熟悉常见的cron任务描述写法\",{\"1\":{\"999\":1}}],[\"以及需要动态添加新的派生产品类时\",{\"1\":{\"876\":1,\"884\":1}}],[\"以及支持可撤销的操作\",{\"1\":{\"818\":1}}],[\"以及正确的决策\",{\"1\":{\"795\":1}}],[\"以及针对已发生的事情做自己的判断\",{\"1\":{\"795\":1}}],[\"以及数百个\",{\"1\":{\"704\":1}}],[\"以及区块链的概念\",{\"1\":{\"698\":1}}],[\"以及如果我们要建立自己的创业公司\",{\"1\":{\"674\":1}}],[\"以及如何在这些方面有所积累\",{\"1\":{\"673\":1}}],[\"以及如何一步步财富自由\",{\"1\":{\"669\":1}}],[\"以及如何避免他们\",{\"1\":{\"626\":1}}],[\"以及如何集成到\",{\"1\":{\"191\":1}}],[\"以及人们的意识所在地是大脑而不是心脏\",{\"1\":{\"653\":1}}],[\"以及思考是什么\",{\"1\":{\"626\":1}}],[\"以及我最近看短视频\",{\"1\":{\"605\":1}}],[\"以及我们今天瞬息万变的职业环境是什么样的\",{\"1\":{\"569\":1}}],[\"以及记录知识的\",{\"1\":{\"605\":1}}],[\"以及构建这些决策的思维模式和行为习惯\",{\"1\":{\"588\":1}}],[\"以及它们如何严重地束缚我们\",{\"1\":{\"588\":1}}],[\"以及它们的运行态环境\",{\"1\":{\"62\":1}}],[\"以及它倾向于哪种强弱特征\",{\"1\":{\"579\":1}}],[\"以及现在对我们最重要的是什么\",{\"1\":{\"577\":1}}],[\"以及这些触角的具体哪些部分\",{\"1\":{\"574\":1}}],[\"以及这些主服务器下的所有从服务器\",{\"1\":{\"426\":1}}],[\"以及当前你不断发展的情感\",{\"1\":{\"573\":1}}],[\"以及当前链表中节点的数量等信息\",{\"1\":{\"377\":1}}],[\"以及上面可能有或可能没有的箭头\",{\"1\":{\"572\":1}}],[\"以及什么对他们真正重要\",{\"1\":{\"572\":1}}],[\"以及成年生活中的睡眠\",{\"1\":{\"571\":1}}],[\"以及带上客户端的唯一标识\",{\"1\":{\"437\":1}}],[\"以及节点目前所处的状态\",{\"1\":{\"427\":1}}],[\"以及节点三者的映射分布关系\",{\"1\":{\"413\":1}}],[\"以及所有同样监视master的其他sentinel进入主观下线的标准\",{\"1\":{\"426\":1}}],[\"以及所有同样监视这个主服务器的其他sentinel的主观下线状态\",{\"1\":{\"426\":1}}],[\"以及role域记录的服务器角色\",{\"1\":{\"426\":1}}],[\"以及该实例的当前状态\",{\"1\":{\"426\":1}}],[\"以及接收主服务器传播来的写命令\",{\"1\":{\"425\":1}}],[\"以及向从服务器发送保存在缓冲区里面的写命令来进行同步\",{\"1\":{\"425\":1}}],[\"以及向客户端发送命令回复\",{\"1\":{\"422\":1}}],[\"以及事务队列中的命令\",{\"1\":{\"424\":1}}],[\"以及哪些客户端正在监视这些数据库键\",{\"1\":{\"424\":1}}],[\"以及参数的数量\",{\"1\":{\"424\":1}}],[\"以及bgreweiteaof命令的实现原理\",{\"1\":{\"422\":1}}],[\"以及下标的含义\",{\"1\":{\"224\":1,\"232\":1,\"240\":1,\"260\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1}}],[\"以及设置自定义\",{\"1\":{\"193\":1}}],[\"以及不同之处\",{\"1\":{\"156\":1}}],[\"以及会将其置于镜像构建上下文目录中\",{\"1\":{\"60\":1}}],[\"以及行首\",{\"1\":{\"58\":1}}],[\"以及后期修改的话\",{\"1\":{\"55\":1}}],[\"以及\",{\"1\":{\"51\":1,\"627\":1}}],[\"以\",{\"1\":{\"48\":1,\"169\":2,\"297\":1,\"395\":1,\"396\":1,\"414\":1,\"419\":1,\"426\":1,\"991\":1}}],[\"以定制自己所需的内容\",{\"1\":{\"46\":1}}],[\"以获得更集中的发展\",{\"1\":{\"533\":1}}],[\"以获得更高的利润\",{\"1\":{\"8\":1}}],[\"以获得存活机会\",{\"1\":{\"10\":1}}],[\"各自不同的对应手段\",{\"1\":{\"1034\":1}}],[\"各大商业服务提供商\",{\"1\":{\"709\":1}}],[\"各种在线的支付场景\",{\"1\":{\"533\":1}}],[\"各部就班\",{\"1\":{\"275\":1}}],[\"各个事务之间也不会互相影响\",{\"1\":{\"424\":1}}],[\"各个事务按顺序做\",{\"1\":{\"360\":1}}],[\"各个容量的背包所能存放的最大价值\",{\"1\":{\"235\":1}}],[\"各个产品的差异都差不多\",{\"1\":{\"9\":1}}],[\"各个厂商进入垄断竞争阶段有一些厂商也可以与苹果进行竞争\",{\"1\":{\"9\":1}}],[\"各个白菜之间近乎无差异\",{\"1\":{\"8\":1}}],[\"各寡头可能会进行各种形式的合谋\",{\"1\":{\"8\":1}}],[\"但需要注意\",{\"1\":{\"1194\":1}}],[\"但返回一个包含该字符串的错误\",{\"1\":{\"1170\":1}}],[\"但返回值是一个option类型\",{\"1\":{\"480\":1}}],[\"但任何人都可以读取\",{\"1\":{\"1047\":1}}],[\"但任正非的态度是\",{\"1\":{\"806\":1}}],[\"但go\",{\"1\":{\"1017\":1}}],[\"但没关系我们只需要跟着文档跑就可以了\",{\"1\":{\"989\":1}}],[\"但没必要\",{\"1\":{\"592\":1}}],[\"但于此同时\",{\"1\":{\"905\":1}}],[\"但允许子类改变将要创建对象的类型\",{\"1\":{\"880\":1}}],[\"但让子类决定实例化哪个类\",{\"1\":{\"880\":1}}],[\"但现实并不会瞬间改变\",{\"1\":{\"810\":1}}],[\"但现在困难的部分来了\",{\"1\":{\"585\":1}}],[\"但现在\",{\"1\":{\"577\":1}}],[\"但现在我老了\",{\"1\":{\"751\":1}}],[\"但现在我对上面的话有了新的理解\",{\"1\":{\"746\":1}}],[\"但现在我真的爱上了我的工作\",{\"1\":{\"572\":1}}],[\"但现在我们需要重点考虑\",{\"1\":{\"382\":1}}],[\"但就我四五年的观察来看这种情况并不会存在\",{\"1\":{\"810\":1}}],[\"但就因为每个人都是这样想获得初始优势的\",{\"1\":{\"10\":1}}],[\"但二十年后房地产泡沫破裂后\",{\"1\":{\"806\":1}}],[\"但个体往往忽视了言论自由的代价\",{\"1\":{\"784\":1}}],[\"但个人触须往往是较易被忽略的一个\",{\"1\":{\"573\":1}}],[\"但例外的是政治这一领域\",{\"1\":{\"783\":1}}],[\"但政治却不一样\",{\"1\":{\"782\":1}}],[\"但确实有效\",{\"1\":{\"782\":1}}],[\"但学习并不一定\",{\"1\":{\"776\":1}}],[\"但世界还是转向了人造光\",{\"1\":{\"773\":1}}],[\"但相反\",{\"1\":{\"771\":1}}],[\"但10年之后进入移动互联网时代以来\",{\"1\":{\"764\":1}}],[\"但那不是本文要强调的重点\",{\"1\":{\"979\":1}}],[\"但那是他的错误和他的问题\",{\"1\":{\"751\":1}}],[\"但那将是我们出色的贡献者和工程师\",{\"1\":{\"725\":1}}],[\"但尽管他\",{\"1\":{\"751\":1}}],[\"但仍然可以取消订单\",{\"1\":{\"1009\":1}}],[\"但仍然是我做了一些未来可能有收益的事情\",{\"1\":{\"739\":1}}],[\"但仍然发现自己还没有真正\",{\"1\":{\"580\":1}}],[\"但往往是这种选择与判断决定人生质量\",{\"1\":{\"735\":1}}],[\"但往往以牺牲人际关系\",{\"1\":{\"577\":1}}],[\"但为了保护自己\",{\"1\":{\"734\":1}}],[\"但很不情愿\",{\"1\":{\"771\":1}}],[\"但很可能你不是谷歌\",{\"1\":{\"723\":1}}],[\"但很多人的意思其实是\",{\"1\":{\"528\":1}}],[\"但很多同学应该没有想清楚这一点\",{\"1\":{\"235\":1}}],[\"但成本很高\",{\"1\":{\"723\":1}}],[\"但正如我们也看到的\",{\"1\":{\"722\":1}}],[\"但经常崩溃\",{\"1\":{\"721\":1}}],[\"但通常他们只是自己偷钱\",{\"1\":{\"705\":1}}],[\"但事实证明这是一个谎言\",{\"1\":{\"703\":1}}],[\"但事实上每个人都肯定有一些方面处于平均水准以下\",{\"1\":{\"683\":1}}],[\"但事实上\",{\"1\":{\"637\":1}}],[\"但事实上是mixin网络损失了全部的btc\",{\"1\":{\"592\":1}}],[\"但事实上他们行动的方向却不尽相同\",{\"1\":{\"572\":1}}],[\"但真相其实可能不是这样的\",{\"1\":{\"680\":1}}],[\"但真实的原因却是让我们去看他们的广告\",{\"1\":{\"533\":1}}],[\"但只要可以经营下去\",{\"1\":{\"663\":1}}],[\"但只要生态还在后面还有继续做下去的可能\",{\"1\":{\"592\":1}}],[\"但如何高效地利用这些资源\",{\"1\":{\"646\":1}}],[\"但如果这个世界上广为流传的词被大众理解偏差了\",{\"1\":{\"673\":2}}],[\"但如果你还要渴求一些其他事\",{\"1\":{\"718\":1}}],[\"但如果你专注于这些领域\",{\"1\":{\"583\":1}}],[\"但如果你以前从未接触过任何计算机科学\",{\"1\":{\"580\":1}}],[\"但如果你继续揭开他们的面具\",{\"1\":{\"578\":1}}],[\"但如果你目前没有在做一些大胆的事情\",{\"1\":{\"577\":1}}],[\"但如果你已经从悬崖上跌落\",{\"1\":{\"575\":1}}],[\"但如果你想做产品\",{\"1\":{\"528\":1}}],[\"但如果你是有巨量资金并有安全考虑则应该使用\",{\"1\":{\"148\":1}}],[\"但如果主服务器的客户端发送写命令时\",{\"1\":{\"425\":1}}],[\"但如果用原生strlen函数\",{\"1\":{\"393\":1,\"402\":1}}],[\"但如果是先更新数据库\",{\"1\":{\"384\":1}}],[\"但如果是同一个树枝取到就可以接着递归\",{\"1\":{\"216\":1}}],[\"但如果真这样做就只能回去等通知了\",{\"1\":{\"276\":1}}],[\"但如果后续solana生态发展成eth的样子\",{\"1\":{\"109\":1}}],[\"但却往往不是最重要的生产资料\",{\"1\":{\"646\":1}}],[\"但却不能完全采取行动\",{\"1\":{\"586\":1}}],[\"但远远不是最重要的生产资料\",{\"1\":{\"646\":1,\"677\":1}}],[\"但后面我们就会心安理得接受这样的\",{\"1\":{\"641\":1}}],[\"但后面随着化学实验\",{\"1\":{\"605\":1}}],[\"但终究会出现一个广告类视频\",{\"1\":{\"631\":1}}],[\"但今天完全反过来\",{\"1\":{\"623\":1}}],[\"但似乎又没有解决方法\",{\"1\":{\"611\":1}}],[\"但似乎临终时有一种能让人以清醒的眼光看待事物的东西\",{\"1\":{\"588\":1}}],[\"但昨天阳光很明媚\",{\"1\":{\"609\":1}}],[\"但答案需要自己去分辨\",{\"1\":{\"605\":1}}],[\"但大众很难接受真相如此\",{\"1\":{\"595\":1}}],[\"但大众的思维往往跟不上科技的进步\",{\"1\":{\"528\":1}}],[\"但风险依然很大\",{\"1\":{\"592\":1}}],[\"但由于是跳着排\",{\"1\":{\"947\":1}}],[\"但由于我还是学生丢的钱在未来来看也是小钱\",{\"1\":{\"592\":1}}],[\"但由于主从服务器在进行数据同步时\",{\"1\":{\"414\":1}}],[\"但出乎意料\",{\"1\":{\"592\":1}}],[\"但具体是否需要取决于你内心的哪些部分在提出这样的要求\",{\"1\":{\"588\":1}}],[\"但具体要怎么做呢\",{\"1\":{\"382\":1}}],[\"但至少了解你正在使用的公式是很好的\",{\"1\":{\"584\":1}}],[\"但智力和才华只是在这里发挥作用的两种天赋类型\",{\"1\":{\"581\":1}}],[\"但主要是需要中彩票的幸运\",{\"1\":{\"580\":1}}],[\"但根据我的经验\",{\"1\":{\"578\":1}}],[\"但顶层也要有节制地分配\",{\"1\":{\"577\":1}}],[\"但要有耐心\",{\"1\":{\"576\":1}}],[\"但要有相对顺序\",{\"1\":{\"260\":1}}],[\"但非常关注生活方式下降对你的朋友和家人传递的信息\",{\"1\":{\"574\":1}}],[\"但以前也曾经存了款一个月后结算失败\",{\"1\":{\"573\":1}}],[\"但检查了银行帐户\",{\"1\":{\"573\":1}}],[\"但其接口与其他代码不兼容\",{\"1\":{\"904\":1}}],[\"但其代币和资产却被创始人系统性地窃取\",{\"1\":{\"705\":1}}],[\"但其他人却对此不屑一顾\",{\"1\":{\"573\":1}}],[\"但其他触都给它添很多麻烦\",{\"1\":{\"573\":1}}],[\"但其他触须有时可能找到共同语言\",{\"1\":{\"573\":1}}],[\"但其实最主要的逻辑是这里serverhandler\",{\"1\":{\"1055\":1}}],[\"但其实真的不难理解\",{\"1\":{\"1008\":1}}],[\"但其实可以在单测的代码加注释\",{\"1\":{\"961\":1}}],[\"但其实go语言中并不推荐传统的建造者模式\",{\"1\":{\"875\":1}}],[\"但其实你换个角度你就明白了\",{\"1\":{\"689\":1}}],[\"但其实趋势已经显现出来了\",{\"1\":{\"631\":1}}],[\"但其实不是的\",{\"1\":{\"614\":1}}],[\"但其实不是一个意思\",{\"1\":{\"525\":1}}],[\"但其实今天才开始决定实施\",{\"1\":{\"605\":1}}],[\"但其实正是因为它们\",{\"1\":{\"534\":1}}],[\"但其实还有一个并发问题也会影响数据一致性\",{\"1\":{\"382\":1}}],[\"但其实差不多\",{\"1\":{\"278\":1}}],[\"但同样困难的区分\",{\"1\":{\"721\":1}}],[\"但同时也应该平稳顺畅\",{\"1\":{\"573\":1}}],[\"但同一树枝下相同的元素就不可以重复用了\",{\"1\":{\"218\":1}}],[\"但更具体地说\",{\"1\":{\"573\":1}}],[\"但准确填充这些框其实远比表面上难得多\",{\"1\":{\"572\":1}}],[\"但能够把那些让我感到困惑或沮丧的决策过程\",{\"1\":{\"572\":1}}],[\"但你无法拿回硬币\",{\"1\":{\"705\":1}}],[\"但你潜意识的看法其实是\",{\"1\":{\"614\":1}}],[\"但你仔细想想\",{\"1\":{\"611\":1}}],[\"但你不太明智的自己会完全进入存在危机的崩溃模式\",{\"1\":{\"587\":1}}],[\"但你仍然可以和他们进行理性的交流\",{\"1\":{\"586\":1}}],[\"但你的渴望却反叛了\",{\"1\":{\"586\":1}}],[\"但你并不引以为豪\",{\"1\":{\"577\":1}}],[\"但你为什么认为你能帮我解决职业问题\",{\"1\":{\"572\":1}}],[\"但你肯定比我们这个缺乏自我意识的大叔更有资格找出最适合你的职业\",{\"1\":{\"569\":1}}],[\"但可以预计您可能处于以下几种状态中的一个\",{\"1\":{\"572\":1}}],[\"但可以包括创建新账户的指令\",{\"1\":{\"126\":1}}],[\"但影响的方向和类型很大程度取决于您的价值观和选择的方向\",{\"1\":{\"571\":1}}],[\"但若不记录下来就总会随着时间流逝\",{\"1\":{\"566\":1}}],[\"但总是有人在催促你\",{\"1\":{\"553\":1}}],[\"但最终还是归结于钱\",{\"1\":{\"751\":1}}],[\"但最终我还是回归了微信\",{\"0\":{\"553\":1}}],[\"但最近我隐隐约约觉得大多数人的选择可能并不是一个理性的选择\",{\"1\":{\"743\":1}}],[\"但最近一段时间以来看到了写作的价值以及写作的生产力有多高\",{\"1\":{\"605\":1}}],[\"但最近看到同事提交的代码里涉及到了图论知识\",{\"1\":{\"271\":1}}],[\"但qq没办法卸载\",{\"1\":{\"551\":1}}],[\"但阿里巴巴也好不到哪里去\",{\"1\":{\"551\":1}}],[\"但选择删除微信的同时\",{\"1\":{\"551\":1}}],[\"但人们似乎对整个气候的变化都嗤之以鼻\",{\"1\":{\"609\":1}}],[\"但人们对时代的发展总会有莫名的兴奋感\",{\"1\":{\"534\":1}}],[\"但人类的进步\",{\"1\":{\"551\":1}}],[\"但绝大部分人不会去思考这些了\",{\"1\":{\"551\":1}}],[\"但每个单位的工作成本因进口劳工的更多产出而较低\",{\"1\":{\"653\":1}}],[\"但每个代币账户只能由一个钱包拥有\",{\"1\":{\"135\":1}}],[\"但每次都感觉收到了侵犯\",{\"1\":{\"551\":1}}],[\"但好巧不巧\",{\"1\":{\"551\":1}}],[\"但翻着翻着就有了无数的广告\",{\"1\":{\"551\":1}}],[\"但全球一体化依然是趋势\",{\"1\":{\"534\":1}}],[\"但全面不一样\",{\"1\":{\"525\":1}}],[\"但当我想将我的数据都迁移到anytype时\",{\"1\":{\"710\":1}}],[\"但当前社会\",{\"1\":{\"571\":1}}],[\"但当下的社会却不言而喻了\",{\"1\":{\"551\":1}}],[\"但当下我们国家的人却仍在不断进入垄断互联网企业\",{\"1\":{\"534\":1}}],[\"但当时确实只是靠网页就相当于是拥有了整个互联网了\",{\"1\":{\"532\":1}}],[\"但当时的低端手机市场还是有很多厂商的比如现在已经看不到的金立和中兴这些品牌\",{\"1\":{\"9\":1}}],[\"但web3\",{\"1\":{\"534\":1}}],[\"但一般情况下只需要一个main程序\",{\"1\":{\"989\":1}}],[\"但一旦他来了\",{\"1\":{\"751\":1}}],[\"但一些深入的反思开启了你的思维\",{\"1\":{\"584\":1}}],[\"但一个人如果选择相信数字资产\",{\"1\":{\"534\":1}}],[\"但一直没有深入其文档源码仔细调研\",{\"1\":{\"169\":1}}],[\"但他没有坚持使用熟悉的东西\",{\"1\":{\"721\":1}}],[\"但他欣赏它们的结构完整性\",{\"1\":{\"721\":1}}],[\"但他们有很多非常优秀的技术人才\",{\"1\":{\"714\":1}}],[\"但他们不确定自己最擅长什么\",{\"1\":{\"572\":1}}],[\"但他们没有明确的热情偏好\",{\"1\":{\"572\":1}}],[\"但他们没有想到的是反脆弱\",{\"1\":{\"534\":1}}],[\"但他的书\",{\"1\":{\"528\":1}}],[\"但几乎没人注意到这一切都曾是旧时代互联网的一部分\",{\"1\":{\"534\":1}}],[\"但卷土重来的传统互联网有着明确的目的\",{\"1\":{\"534\":1}}],[\"但旧世界的互联网并未完全消失\",{\"1\":{\"534\":1}}],[\"但目前而言\",{\"1\":{\"533\":1,\"551\":1,\"605\":1}}],[\"但目前来说\",{\"1\":{\"109\":1}}],[\"但互联网最终的权力交给政府手里真的是最优的做法吗\",{\"1\":{\"533\":1}}],[\"但互联网的中心化带来了另一个更严重更多问题\",{\"1\":{\"533\":1}}],[\"但放在今天来看\",{\"1\":{\"533\":1}}],[\"但说另一个现象你就会注意到这其实是一个很严重的问题了\",{\"1\":{\"533\":1}}],[\"但基于虚拟世界的数据就是这么值钱\",{\"1\":{\"533\":1}}],[\"但又不像继承那样比较难以维护\",{\"1\":{\"920\":1}}],[\"但又永远存在未来\",{\"1\":{\"528\":1}}],[\"但又由于他们都曾身处于第二个阶段\",{\"1\":{\"525\":1}}],[\"但98年一月份这俩兄弟就被公安局给逮捕了\",{\"1\":{\"528\":1}}],[\"但长期来看用一次查一次\",{\"1\":{\"525\":1}}],[\"但长期以来我都是写一次查一次\",{\"1\":{\"525\":1}}],[\"但问题就在于年轻的下一代能逃过去吗\",{\"1\":{\"551\":1}}],[\"但问题是\",{\"1\":{\"525\":1}}],[\"但问题来了\",{\"1\":{\"386\":1}}],[\"但本库使用\",{\"1\":{\"1003\":1}}],[\"但本文的学习学习再学习对待的是特定领域\",{\"1\":{\"525\":1}}],[\"但本题要比求回文子串简单一点\",{\"1\":{\"268\":1}}],[\"但本题是需要startindex的\",{\"1\":{\"211\":1}}],[\"但随着时间的推移\",{\"1\":{\"771\":1}}],[\"但随着时间的发展\",{\"1\":{\"521\":1}}],[\"但随着时间推移\",{\"1\":{\"649\":1,\"751\":1}}],[\"但随着时间变化\",{\"1\":{\"572\":1}}],[\"但随着业务量的增长\",{\"1\":{\"381\":1}}],[\"但足够你用好几天时间去消化内部的知识了\",{\"1\":{\"517\":1}}],[\"但还没有充分的证据说我们知道关于ufo的真相\",{\"1\":{\"637\":1}}],[\"但还是建议去官网查看一下包的内容\",{\"1\":{\"514\":1}}],[\"但还不能有重复的组合\",{\"1\":{\"212\":1}}],[\"但spew可以使结构更加清晰化\",{\"1\":{\"509\":1}}],[\"但作为技术人员\",{\"1\":{\"509\":1}}],[\"但值得庆幸的是我们处于网络时代\",{\"1\":{\"500\":1}}],[\"但前9个月的记录本子竟然丢了\",{\"1\":{\"500\":1}}],[\"但时间是另一种不可再生资源\",{\"1\":{\"500\":1}}],[\"但此时这个文件不存在\",{\"1\":{\"448\":1}}],[\"但双方并未使用该套接字进行过任何通信\",{\"1\":{\"425\":1}}],[\"但效率却非常低\",{\"1\":{\"425\":1}}],[\"但从更大的意义上来说\",{\"1\":{\"618\":1}}],[\"但从本质上来说\",{\"1\":{\"573\":1}}],[\"但从服务器却不能在规定的时限\",{\"1\":{\"425\":1}}],[\"但从服务器通过自动重连接重新连上了主服务器\",{\"1\":{\"425\":1}}],[\"但从技术上讲可以低至\",{\"1\":{\"150\":1}}],[\"但新aof文件不会包含任何浪费空间的冗余命令\",{\"1\":{\"422\":1}}],[\"但aof文件为空\",{\"1\":{\"416\":1}}],[\"但rdb不是万能的\",{\"1\":{\"416\":1}}],[\"但因为\",{\"1\":{\"413\":1}}],[\"但我很确定一点就是书中提到的事情会在\",{\"1\":{\"806\":1}}],[\"但我可以学\",{\"1\":{\"792\":1}}],[\"但我感受更多的却是知足\",{\"1\":{\"759\":1}}],[\"但我只是认为不这样做的踏空成本很大\",{\"1\":{\"595\":1}}],[\"但我已经践行我的观点两年多了至于观点是否正确只能留给时间去证明\",{\"1\":{\"595\":1}}],[\"但我怀疑对于大多数人来说\",{\"1\":{\"584\":1}}],[\"但我相信如果将80年前任何80岁老人的婴儿丢弃\",{\"1\":{\"571\":1}}],[\"但我还是得回归微信\",{\"1\":{\"553\":1}}],[\"但我还是希望你能够亲手将上述所有的代码全部自我实现一遍\",{\"1\":{\"517\":1}}],[\"但我仍然爱国\",{\"1\":{\"552\":1}}],[\"但我所作的成果还在\",{\"1\":{\"500\":1}}],[\"但我们实际上没必要自己写\",{\"1\":{\"1010\":1}}],[\"但我们不止需要找到\",{\"1\":{\"944\":1}}],[\"但我们对这种结构并不教条\",{\"1\":{\"724\":1}}],[\"但我们又对我们命运感到无奈\",{\"1\":{\"666\":1}}],[\"但我们还在考虑当下大部分注意力集中在什么地方\",{\"1\":{\"648\":1}}],[\"但我们很少能够意识到这一点\",{\"1\":{\"620\":1}}],[\"但我们可能应该拥抱对临终遗憾的恐惧\",{\"1\":{\"588\":1}}],[\"但我们刚刚开始\",{\"1\":{\"575\":1}}],[\"但我们生活中的每个决定环节\",{\"1\":{\"571\":1}}],[\"但我们这个时代有什么不同呢\",{\"1\":{\"528\":1}}],[\"但我们每次直接使用block会很麻烦\",{\"1\":{\"513\":1}}],[\"但我们也要付出相应的代价\",{\"1\":{\"387\":1}}],[\"但我们思考这样一个问题\",{\"1\":{\"385\":1}}],[\"但我为了凸显初始化的逻辑\",{\"1\":{\"264\":1}}],[\"但凡后者执行失败了\",{\"1\":{\"385\":1}}],[\"但实际真的有可能发生吗\",{\"1\":{\"384\":1}}],[\"但实际上感受到压力的来源其实是他们自己\",{\"1\":{\"788\":1}}],[\"但实际上可能并没有这些比特币本身\",{\"1\":{\"703\":1}}],[\"但实际上大多数项目在这种情况下跑路的绝不在少数\",{\"1\":{\"592\":1}}],[\"但实际上我自身没有超前消费的习惯\",{\"1\":{\"592\":1}}],[\"但实际上mixin上的mixin\",{\"1\":{\"592\":1}}],[\"但实际上应该没有你想象的那么艰难\",{\"1\":{\"585\":1}}],[\"但实际上这意味着你比大多数人做得更好\",{\"1\":{\"575\":1}}],[\"但实际上contents数组并不保存任何int8\",{\"1\":{\"398\":1}}],[\"但实际上\",{\"1\":{\"60\":1,\"422\":1,\"512\":1}}],[\"但数据库和缓存都更新\",{\"1\":{\"382\":1}}],[\"但两个事务却不能在同一时间内\",{\"1\":{\"374\":1}}],[\"但对我也很有影响的教程\",{\"1\":{\"504\":1}}],[\"但对于断线后重复制来说\",{\"1\":{\"425\":1}}],[\"但对于记录锁\",{\"1\":{\"373\":1}}],[\"但对marginfi最熟悉\",{\"1\":{\"147\":1}}],[\"但第二次返回了第一次没有返回的行\",{\"1\":{\"362\":1}}],[\"但即使这些人\",{\"1\":{\"572\":1}}],[\"但即使\",{\"1\":{\"360\":1}}],[\"但累积\",{\"1\":{\"358\":1,\"360\":1}}],[\"但也会看在过去的经验判断这个人大概率可以为公司带来比其薪水更高的价值\",{\"1\":{\"792\":1}}],[\"但也有更广泛的宏观存在感的概念\",{\"1\":{\"587\":1}}],[\"但也不会太长\",{\"1\":{\"585\":1}}],[\"但也是个好消息\",{\"1\":{\"585\":1}}],[\"但也是有问题的\",{\"1\":{\"350\":1}}],[\"但也令人无比兴奋\",{\"1\":{\"579\":1}}],[\"但也可以给你的一些不那么高尚的方面一些好处\",{\"1\":{\"577\":1}}],[\"但也很可能不是\",{\"1\":{\"577\":1}}],[\"但也许你真正想要的并不仅仅是基本的安全感\",{\"1\":{\"574\":1}}],[\"但也正发生在其他国家\",{\"1\":{\"534\":1}}],[\"但也正是因为这种情况\",{\"1\":{\"10\":1}}],[\"但也为写入数据带来了安全问题\",{\"1\":{\"422\":1}}],[\"但单词内字符的顺序不变\",{\"1\":{\"333\":1,\"334\":1}}],[\"但里面不能有重复元素\",{\"1\":{\"311\":1}}],[\"但充当一个缓冲的作用\",{\"1\":{\"295\":1}}],[\"但与\",{\"1\":{\"291\":1}}],[\"但与直接在宿主执行的进程不同\",{\"1\":{\"47\":1}}],[\"但不能听播客\",{\"1\":{\"789\":1}}],[\"但不如现代的方式好\",{\"1\":{\"771\":1}}],[\"但不太喜欢这样的项目往往会变成泥潭\",{\"1\":{\"721\":1}}],[\"但不以输出为目的的探索\",{\"1\":{\"660\":1}}],[\"但不知如何思考\",{\"1\":{\"626\":1}}],[\"但不知道有几个数字重复了\",{\"1\":{\"275\":1}}],[\"但不应该超过总资产的30\",{\"1\":{\"598\":1}}],[\"但不变的地方是如果你不抗争\",{\"1\":{\"551\":1}}],[\"但不用多久甚至五到十年事情往往就会发生变化\",{\"1\":{\"528\":1}}],[\"但不可否认学习是有时间成本的\",{\"1\":{\"525\":1}}],[\"但不论如何在这两种方案的第二步出问题的情况下都会有数据不一致的问题\",{\"1\":{\"382\":1}}],[\"但不是从0到1的创见\",{\"1\":{\"11\":1}}],[\"但许久未做题就遗忘了许多\",{\"1\":{\"274\":1}}],[\"但\",{\"1\":{\"260\":2,\"302\":1,\"358\":2,\"383\":1}}],[\"但dp\",{\"1\":{\"259\":1}}],[\"但动规不仅仅只有递推公式\",{\"1\":{\"224\":1}}],[\"但有没有更重要的事情呢\",{\"1\":{\"660\":1}}],[\"但有时\",{\"1\":{\"576\":1}}],[\"但有些动物更加平等\",{\"1\":{\"533\":1}}],[\"但有些问题能求出解就不错了\",{\"1\":{\"206\":1}}],[\"但有迹象表明许多互联网用户对我们当今垄断互联网越来越失望\",{\"1\":{\"532\":1}}],[\"但有一点是确定的\",{\"1\":{\"595\":1}}],[\"但有一点是值得思考的\",{\"1\":{\"534\":1}}],[\"但有一点是已经确定的\",{\"1\":{\"532\":1}}],[\"但有一点是可以肯定的\",{\"1\":{\"11\":1}}],[\"但有一个障碍物问题\",{\"1\":{\"230\":1}}],[\"但有一个不同之处\",{\"1\":{\"8\":1}}],[\"但属于可接受的范围内\",{\"1\":{\"193\":1}}],[\"但在go程序中使用makefile本身就可以帮助我们不需要手动输入上述的语法\",{\"1\":{\"1023\":1}}],[\"但在大多数情况下\",{\"1\":{\"751\":1}}],[\"但在阿拉伯国家迟到30分钟时正常的\",{\"1\":{\"619\":1}}],[\"但在生活中\",{\"1\":{\"585\":1}}],[\"但在15分钟后停下来的汽车\",{\"1\":{\"582\":1}}],[\"但在非传统职业中\",{\"1\":{\"580\":1}}],[\"但在现实生活中\",{\"1\":{\"570\":1}}],[\"但在你解决自己的普遍无用性之前\",{\"1\":{\"570\":1}}],[\"但在并发量较大的时候\",{\"1\":{\"360\":1}}],[\"但在\",{\"1\":{\"360\":1}}],[\"但在任何地方运行\",{\"1\":{\"193\":1}}],[\"但在话题结束购买日期之前仍可以继续参与话题的购买\",{\"1\":{\"25\":1}}],[\"但都被社会视为福音\",{\"1\":{\"578\":1}}],[\"但都遵循\",{\"1\":{\"166\":1}}],[\"但都是一样的按键手机\",{\"1\":{\"9\":1}}],[\"但存款的总价值减少\",{\"1\":{\"152\":1}}],[\"但开发人员将需要更新其客户端代码以防止由于不同交易版本而导致的错误\",{\"1\":{\"138\":1}}],[\"但它只会放松你的大脑\",{\"1\":{\"789\":1}}],[\"但它确实有一些缺点\",{\"1\":{\"724\":1}}],[\"但它对\",{\"1\":{\"721\":1}}],[\"但它是唯一真正成长发生的地方\",{\"1\":{\"575\":1}}],[\"但它想提醒一下\",{\"1\":{\"573\":1}}],[\"但它的用户基础太过于庞大\",{\"1\":{\"551\":1}}],[\"但它以毫秒为单位设置\",{\"1\":{\"403\":1}}],[\"但它们有以下几个区别\",{\"1\":{\"1073\":1}}],[\"但它们肯定不是唯一的影响\",{\"1\":{\"620\":1}}],[\"但它们仍然代表了你的生活背景\",{\"1\":{\"619\":1}}],[\"但它们不是新的常态\",{\"1\":{\"587\":1}}],[\"但它们不是进步速度的组成部分\",{\"1\":{\"581\":1}}],[\"但它们能理解为自己目的服务的慈善\",{\"1\":{\"573\":1}}],[\"但它们的性能往往比较差\",{\"1\":{\"387\":1}}],[\"但它们通常不是最佳的\",{\"1\":{\"122\":1}}],[\"但它不是连续的\",{\"1\":{\"258\":1}}],[\"但它可能永远不会要求高于每笔交易的绝对最大限制\",{\"1\":{\"122\":1}}],[\"但命令执行结果仍然可以返回\",{\"1\":{\"68\":1}}],[\"但官网是25mb\",{\"1\":{\"51\":1}}],[\"但镜像id是相同的\",{\"1\":{\"51\":1}}],[\"但是支持更大的整数范围\",{\"1\":{\"1161\":1}}],[\"但是计数器只能是非负数\",{\"1\":{\"1144\":1}}],[\"但是读写\",{\"1\":{\"1143\":1}}],[\"但是刚被唤起的\",{\"1\":{\"1142\":1}}],[\"但是由于后者在\",{\"1\":{\"1138\":1}}],[\"但是由于是中心化稳定币\",{\"1\":{\"184\":1}}],[\"但是并不会立刻触发调度\",{\"1\":{\"1137\":1}}],[\"但是并没有什么区别\",{\"1\":{\"372\":1}}],[\"但是并没有把数据持久化到磁盘\",{\"1\":{\"358\":1}}],[\"但是稍早的\",{\"1\":{\"1136\":1}}],[\"但是其中大多数线程都不会执行用户代码\",{\"1\":{\"1133\":1}}],[\"但是body里面只有传递age和msg有效\",{\"1\":{\"1080\":1}}],[\"但是gin框架内部的日志中间件不支持持久化日志\",{\"1\":{\"1060\":1}}],[\"但是过多的构造函数也会让主函数的代码迅速膨胀\",{\"1\":{\"981\":1}}],[\"但是过去时间是生产资料并不受重视\",{\"1\":{\"646\":1}}],[\"但是使用时需注意以下事项\",{\"1\":{\"978\":1}}],[\"但是又不想在测试过程中连接真实的数据库进行测试\",{\"1\":{\"975\":1}}],[\"但是又必须声明时就对names进行初始化\",{\"1\":{\"459\":1}}],[\"但是某些情况下我们可能希望输入yaml格式的数据\",{\"1\":{\"905\":1}}],[\"但是代码会变得比较复杂\",{\"1\":{\"904\":1}}],[\"但是缺点是线程不安全\",{\"1\":{\"899\":1}}],[\"但是缺点是不能够延迟对象的创建\",{\"1\":{\"898\":1}}],[\"但是语法更简单\",{\"1\":{\"873\":1}}],[\"但是普通人信赖的公司会参与其中\",{\"1\":{\"804\":1}}],[\"但是可能存在于\",{\"1\":{\"1132\":1}}],[\"但是可能有别的微服务在使用我们之前的proto版本\",{\"1\":{\"1084\":1}}],[\"但是可能这些被提前加载进来的数据页\",{\"1\":{\"377\":1}}],[\"但是可以同时运行的线程还是由\",{\"1\":{\"1134\":1}}],[\"但是可以将状态机的最基础使用包含\",{\"1\":{\"1011\":1}}],[\"但是可以发起退货申请\",{\"1\":{\"1009\":1}}],[\"但是可以听轻音乐\",{\"1\":{\"789\":1}}],[\"但是很难招来优秀的管理者\",{\"1\":{\"792\":1}}],[\"但是很少有人这样坚定地去做\",{\"1\":{\"767\":1}}],[\"但是很多人却对稳定币并不了解\",{\"1\":{\"180\":1}}],[\"但是客观思考则不同\",{\"1\":{\"683\":1}}],[\"但是感觉往往并不靠谱\",{\"1\":{\"680\":1}}],[\"但是他们看到了自己事业的潜力\",{\"1\":{\"674\":1}}],[\"但是如果我们将上述代码中方法的接受者和初始化的类型进行交换\",{\"1\":{\"1138\":1}}],[\"但是如果使用第三方库就可以将思绪放在如何构建定时任务具体的细节而不是考虑如何写定时任务上\",{\"1\":{\"998\":1}}],[\"但是如果一个仓库下有一个cmd目录并且之下会有很多main函数\",{\"1\":{\"988\":1}}],[\"但是如果不是不可逾越的障碍的话\",{\"1\":{\"674\":1}}],[\"但是如果你的认知已经和其他人的差距拉的足够大\",{\"1\":{\"689\":1}}],[\"但是如果你喜欢看奶头乐\",{\"1\":{\"689\":1}}],[\"但是如果你是10年代从中国出生\",{\"1\":{\"619\":1}}],[\"但是如果你想写出不一样的\",{\"1\":{\"605\":1}}],[\"但是有印象就可以去文档里找\",{\"1\":{\"1084\":1}}],[\"但是有些人却依然存在\",{\"1\":{\"695\":1}}],[\"但是有些目标是无法实现的\",{\"1\":{\"674\":1}}],[\"但是有时候我们只希望列出部分镜像\",{\"1\":{\"54\":1}}],[\"但是未来我能\",{\"1\":{\"674\":5}}],[\"但是成长型思维的人相信生活总是在变化\",{\"1\":{\"674\":1}}],[\"但是显然金钱不是唯一的理由\",{\"1\":{\"673\":1}}],[\"但是目前成长为一家全球最大的对冲基金的创始人\",{\"1\":{\"669\":1}}],[\"但是非程序员也可以读\",{\"1\":{\"669\":1}}],[\"但是往往有别的生意不需要依靠这样的道路走下去\",{\"1\":{\"663\":1}}],[\"但是即使这么丑的网站\",{\"1\":{\"660\":1}}],[\"但是几次考虑到我写css的审美\",{\"1\":{\"660\":1}}],[\"但是长达几个世纪里\",{\"1\":{\"653\":1}}],[\"但是长期来看却有不可避免而无法解决的问题\",{\"1\":{\"184\":1}}],[\"但是事情并非总是如此\",{\"1\":{\"653\":1}}],[\"但是认知意味着意识到自己已经拥有了它\",{\"1\":{\"653\":1}}],[\"但是现在时代已经进步了\",{\"1\":{\"677\":1}}],[\"但是现在是信息社会了\",{\"1\":{\"646\":1}}],[\"但是现在处于等待状态\",{\"1\":{\"374\":1}}],[\"但是等等\",{\"1\":{\"642\":1,\"646\":1}}],[\"但是我们可以将这些不同的状态聚合成三种\",{\"1\":{\"1132\":1}}],[\"但是我们可以尽量控制我们的思维进而尽量做到客观性\",{\"1\":{\"683\":1}}],[\"但是我们如何避免每次单元测试时都发起真实的http请求呢\",{\"1\":{\"980\":1}}],[\"但是我们也不会一个一个去写单测用例\",{\"1\":{\"968\":1}}],[\"但是我们必须生产更多的知识来解决我们在此过程中遇到的问题\",{\"1\":{\"649\":1}}],[\"但是我们的记忆也经常会发生扭曲\",{\"1\":{\"641\":1}}],[\"但是我们需要额外配置一些信息来让我们的服务更易使用\",{\"1\":{\"194\":1}}],[\"但是当你编写代码的时候这个库还没实现\",{\"1\":{\"978\":1}}],[\"但是当结果出来发现我们的感知并不正确\",{\"1\":{\"640\":1}}],[\"但是当嫉妒排在前面\",{\"1\":{\"622\":1}}],[\"但是你问他应不应该和男朋友分手\",{\"1\":{\"631\":1}}],[\"但是没有告诉你如何思考\",{\"1\":{\"626\":1}}],[\"但是没有提到它的类型\",{\"1\":{\"470\":1}}],[\"但是而且在某种程度上是对的\",{\"1\":{\"618\":1}}],[\"但是人工智能不一样\",{\"1\":{\"692\":1}}],[\"但是人工输入就太累了\",{\"1\":{\"55\":1}}],[\"但是人们如果人们想进一步问你是谁的全部情况\",{\"1\":{\"618\":1}}],[\"但是仍然只能生活在那片地区\",{\"1\":{\"609\":1}}],[\"但是对脑子也要好点啊\",{\"1\":{\"605\":1}}],[\"但是对于下面的代码呢\",{\"1\":{\"473\":1}}],[\"但是对于命令的执行\",{\"1\":{\"412\":1}}],[\"但是传统智慧仍然告诉我们许多人\",{\"1\":{\"585\":1}}],[\"但是传统观念并不理解非传统职业的工作方式\",{\"1\":{\"580\":1}}],[\"但是陈腐的传统智慧让我们中的许多人仍然以那种方式看待事物\",{\"1\":{\"585\":1}}],[\"但是停下来反思你完整的现实范围的广度是很有用的\",{\"1\":{\"584\":1}}],[\"但是把篮球称为他的\",{\"1\":{\"583\":1}}],[\"但是存在返回值\",{\"1\":{\"480\":1}}],[\"但是字符串又是\",{\"1\":{\"475\":1}}],[\"但是字符串s也可以不用s\",{\"1\":{\"264\":1}}],[\"但是本例中每个汉字占用三个字节\",{\"1\":{\"468\":1}}],[\"但是原子类型可以\",{\"1\":{\"458\":1}}],[\"但是因为sentinel并不使用数据库\",{\"1\":{\"426\":1}}],[\"但是在使用时会通过原始指针获取其中的数据\",{\"1\":{\"1139\":1}}],[\"但是在这里就不展示了\",{\"1\":{\"1134\":1}}],[\"但是在没有消息的情况下\",{\"1\":{\"1073\":1}}],[\"但是在go的程序中却很少使用到\",{\"1\":{\"1023\":1}}],[\"但是在实际业务中场景会非常复杂\",{\"1\":{\"971\":1}}],[\"但是在过去时间是生产资料并不受重视\",{\"1\":{\"677\":1}}],[\"但是在过山车还停在第一个悬崖上时暂停\",{\"1\":{\"575\":1}}],[\"但是在标准库里\",{\"1\":{\"471\":1}}],[\"但是在字符串中不一样\",{\"1\":{\"471\":1}}],[\"但是在上一节中我们提到过\",{\"1\":{\"471\":1}}],[\"但是在rust中\",{\"1\":{\"454\":1}}],[\"但是在bgsave命令执行期间\",{\"1\":{\"416\":1}}],[\"但是在\",{\"1\":{\"404\":1,\"473\":1}}],[\"但是缓存中的数据不一定会被\",{\"1\":{\"383\":1}}],[\"但是若每次修改数据都刷入磁盘\",{\"1\":{\"377\":1}}],[\"但是磁盘中还是原数据\",{\"1\":{\"377\":1}}],[\"但是页面未发生修改\",{\"1\":{\"377\":1}}],[\"但是也不能每次都从磁盘里读取数据\",{\"1\":{\"376\":1}}],[\"但是也有很多人对eth的高gas不满\",{\"1\":{\"109\":1}}],[\"但是不在运行队列上\",{\"1\":{\"1132\":1}}],[\"但是不清楚哪里的加密货币最便宜\",{\"1\":{\"739\":1}}],[\"但是不代表它需要用static来声明\",{\"1\":{\"454\":1}}],[\"但是不可以对该记录加\",{\"1\":{\"371\":1}}],[\"但是不包含记录本身\",{\"1\":{\"370\":1}}],[\"但是还是没有能完全解决幻读\",{\"1\":{\"362\":1}}],[\"但是还是有个别的情况造成的幻读现象是无法解决的\",{\"1\":{\"362\":1}}],[\"但是它占用了更小的内存空间\",{\"1\":{\"1132\":1}}],[\"但是它带来了新的问题\",{\"1\":{\"1073\":1}}],[\"但是它无法解决注意力稀缺问题\",{\"1\":{\"648\":1}}],[\"但是它从不是思维的一个良好替代\",{\"1\":{\"626\":1}}],[\"但是它却引入了程序执行顺序的不确定性\",{\"1\":{\"412\":1}}],[\"但是它却只因为被访问了一次而进入到\",{\"1\":{\"377\":1}}],[\"但是它并不是意向锁\",{\"1\":{\"374\":1}}],[\"但是它很大程度上避免幻读现象\",{\"1\":{\"361\":1,\"362\":1}}],[\"但是它还是存在的原因\",{\"1\":{\"55\":1}}],[\"但是性能很差\",{\"1\":{\"360\":1}}],[\"但是这个函数现在隐式包含了一个不确定因素\",{\"1\":{\"979\":1}}],[\"但是这个不满是谁造成的啊\",{\"1\":{\"680\":1}}],[\"但是这本书还没有中文版\",{\"1\":{\"669\":1}}],[\"但是这种回答很软弱无力\",{\"1\":{\"653\":1}}],[\"但是这种形式下\",{\"1\":{\"474\":1}}],[\"但是这些都缺少一个最关键因素就是时间\",{\"1\":{\"646\":1,\"677\":1}}],[\"但是这样做的风险是\",{\"1\":{\"360\":2}}],[\"但是这样的话\",{\"1\":{\"194\":1}}],[\"但是这两个是独立的逻辑\",{\"1\":{\"360\":1}}],[\"但是最终都写到同一个\",{\"1\":{\"358\":1}}],[\"但是表上有更新语句\",{\"1\":{\"355\":1}}],[\"但是反转后的字符不能包括\",{\"1\":{\"333\":1,\"334\":1}}],[\"但是下面这个\",{\"1\":{\"299\":1}}],[\"但是先遍历物品更好理解\",{\"1\":{\"235\":1}}],[\"但是相信开发人员都是有自己的github账号的\",{\"1\":{\"192\":1}}],[\"但是相对于常规加密货币而言\",{\"1\":{\"180\":1}}],[\"但是依然发生了luna崩盘的情况\",{\"1\":{\"186\":1}}],[\"但是大家相互兑换却对不上的情况\",{\"1\":{\"175\":1}}],[\"但是基本思路类似\",{\"1\":{\"164\":1}}],[\"但是与传统货币不同\",{\"1\":{\"94\":1}}],[\"但是网络端口还是共享\",{\"1\":{\"76\":1}}],[\"但是彼此却看不到\",{\"1\":{\"75\":1}}],[\"但是实际上是\",{\"1\":{\"473\":1}}],[\"但是实际上该文件会一直跟随镜像\",{\"1\":{\"46\":1}}],[\"但是实际环境中并不会这样使用\",{\"1\":{\"55\":1}}],[\"但是\",{\"1\":{\"48\":1,\"358\":1,\"360\":2,\"369\":1,\"386\":2,\"411\":1,\"413\":1,\"432\":1,\"467\":1,\"471\":1,\"576\":1,\"577\":1,\"578\":3,\"588\":2,\"627\":3,\"637\":1,\"723\":1,\"751\":1,\"1136\":1}}],[\"但是话题的结束购买功能在2024年12月31日结束\",{\"1\":{\"25\":1}}],[\"但这并不代表我们不需要了解\",{\"1\":{\"1166\":1}}],[\"但这并非绝对\",{\"1\":{\"48\":1}}],[\"但这都和你真正做到毫无关联\",{\"1\":{\"767\":1}}],[\"但这属于收费课程再次不做过多描述\",{\"1\":{\"759\":1}}],[\"但这就是我们日常生活中的事情\",{\"1\":{\"654\":1}}],[\"但这些信息依然可以通过卖广告的方式实现商业化\",{\"1\":{\"649\":1}}],[\"但这一现象是最近十年发生的\",{\"1\":{\"610\":1}}],[\"但这一切其实都来源于政府的默许\",{\"1\":{\"533\":1}}],[\"但这一切其实只是这5000天以来发生的事情\",{\"1\":{\"531\":1}}],[\"但这一切似乎都来源于我们中的绝大多数人主动放弃了自己的数据拥有权\",{\"1\":{\"533\":1}}],[\"但这正是关键所在\",{\"1\":{\"579\":1}}],[\"但这是值得花时间的\",{\"1\":{\"575\":1}}],[\"但这是最简单的表述方式\",{\"1\":{\"150\":1}}],[\"但这几天的感觉总是不一样\",{\"1\":{\"552\":1}}],[\"但这个社会问题又怎样涉及到创新呢\",{\"1\":{\"551\":1}}],[\"但这个延迟时间很难评估\",{\"1\":{\"388\":1}}],[\"但这种方案存在\",{\"1\":{\"388\":1}}],[\"但这种\",{\"1\":{\"385\":1}}],[\"但这样的尝试一定会失败\",{\"1\":{\"799\":1}}],[\"但这样的活动不会让自己的大脑休息\",{\"1\":{\"787\":1}}],[\"但这样的市场发生变化往往就在两三年之间\",{\"1\":{\"9\":1}}],[\"但这样会导致一些一致性的问题\",{\"1\":{\"381\":1}}],[\"但这里其实还有一个更高效的剪枝操作\",{\"1\":{\"208\":1}}],[\"但这不妨碍我还是要说明一下\",{\"1\":{\"8\":1}}],[\"但高端和低端手机厂家却是一种垄断竞争的状态\",{\"1\":{\"9\":1}}],[\"有兴趣的朋友可以自行研究一下\",{\"1\":{\"1135\":1}}],[\"有兴趣的话可以自己尝试用\",{\"1\":{\"1010\":1}}],[\"有兴趣可以看一看\",{\"1\":{\"531\":1}}],[\"有三种状态\",{\"1\":{\"1009\":1}}],[\"有三种情况\",{\"1\":{\"265\":1}}],[\"有限状态机实际上是这些\",{\"1\":{\"1010\":1}}],[\"有限状态机\",{\"1\":{\"1009\":1,\"1011\":1}}],[\"有限状态机就是一台预先定义好了各种状态的一组状态的机器\",{\"1\":{\"1009\":1}}],[\"有限状态机教程\",{\"1\":{\"1008\":1}}],[\"有限状态机简称fsm\",{\"1\":{\"1008\":1}}],[\"有着很深的理论背景\",{\"1\":{\"1008\":1}}],[\"有着超越数字货币的广泛适用性\",{\"1\":{\"95\":1}}],[\"有没有办法让启动程序更优雅美观一些呢\",{\"1\":{\"988\":1}}],[\"有没有什么生产资料一直没有变\",{\"1\":{\"646\":1}}],[\"有利于系统的分层设计\",{\"1\":{\"909\":1}}],[\"有许多交易所因为这样或那样的原因走上了这条道路\",{\"1\":{\"703\":1}}],[\"有许多买卖方\",{\"1\":{\"8\":1}}],[\"有多少老年人会听新歌呢\",{\"1\":{\"771\":1}}],[\"有多大比例的人压根不在乎未来\",{\"1\":{\"680\":1}}],[\"有多线程同时执行命令\",{\"1\":{\"412\":1}}],[\"有远见的人可以看到自己想创造的未来\",{\"1\":{\"674\":1}}],[\"有机会你可以去看看\",{\"1\":{\"660\":1}}],[\"有技能或仔细\",{\"1\":{\"653\":1}}],[\"有能力表达知道什么和我们如何得到它\",{\"1\":{\"653\":1}}],[\"有人学习了一些东西并创造了一些新东西\",{\"1\":{\"649\":1}}],[\"有人决定只愿意在追求梦想职业的过程中投入三年时间\",{\"1\":{\"582\":1}}],[\"有收入的人也越来越少\",{\"1\":{\"648\":1}}],[\"有收入的店员越来越少\",{\"1\":{\"648\":1}}],[\"有缺陷的信息\",{\"0\":{\"642\":1}}],[\"有意义和富有成效\",{\"1\":{\"627\":1}}],[\"有意识成年时间\",{\"1\":{\"571\":1}}],[\"有效的思考者对自己的思维进行约束\",{\"1\":{\"627\":1}}],[\"有效提高索引的查询速度\",{\"1\":{\"353\":1}}],[\"有正确答案没有什么错\",{\"1\":{\"627\":1}}],[\"有大多数的区块链项目在遇到这类事件时都是创始人跑路项目关停\",{\"1\":{\"592\":1}}],[\"有才华的人会以更快的速度提高在某个领域的能力\",{\"1\":{\"581\":1}}],[\"有趣的是\",{\"1\":{\"574\":1}}],[\"有衣穿\",{\"1\":{\"573\":1}}],[\"有足够的空闲时间\",{\"1\":{\"573\":1}}],[\"有足够的音乐\",{\"1\":{\"521\":1}}],[\"有几个古怪的生物\",{\"1\":{\"573\":1}}],[\"有几种来源\",{\"1\":{\"243\":1}}],[\"有几种方法\",{\"1\":{\"239\":1}}],[\"有几种排列方式\",{\"1\":{\"206\":1}}],[\"有很多开源事例证明了这一点\",{\"1\":{\"801\":1}}],[\"有很多死了的产品可以证实这一点\",{\"1\":{\"800\":1}}],[\"有很多应聘者都会的技能可你不会\",{\"1\":{\"792\":1}}],[\"有很多社会科学家和自助作家在这方面有很好的数据\",{\"1\":{\"572\":1}}],[\"有很多东西其实不好统计\",{\"1\":{\"505\":1}}],[\"有的话\",{\"1\":{\"1135\":1}}],[\"有的人宁愿牺牲自己全部的隐私\",{\"1\":{\"710\":1}}],[\"有的人只能日复一日领着薪水过着入不敷出的生活\",{\"1\":{\"551\":1}}],[\"有的时间等等这些品质都被本书总结出一个框架叫做miles框架\",{\"1\":{\"673\":1}}],[\"有的资本\",{\"1\":{\"673\":1}}],[\"有的三个月前才因为新技术的出现而成为可能\",{\"1\":{\"579\":1}}],[\"有的已有\",{\"1\":{\"579\":1}}],[\"有的同学可能会问\",{\"1\":{\"360\":1}}],[\"有一句话被广为流传叫\",{\"1\":{\"666\":1}}],[\"有一个正在执行的写操作\",{\"1\":{\"1143\":1}}],[\"有一个印象就可以了\",{\"1\":{\"1084\":1}}],[\"有一个简单的例子\",{\"1\":{\"739\":1}}],[\"有一个合适的插件接口不是更好吗\",{\"1\":{\"725\":1}}],[\"有一个著名的巴甫洛夫的狗实验\",{\"1\":{\"631\":1}}],[\"有一个2022年有一个报道\",{\"1\":{\"609\":1}}],[\"有一片地区\",{\"1\":{\"609\":1}}],[\"有一篇广为流传的文章\",{\"1\":{\"609\":1}}],[\"有一群5岁的孩子反抗你的意愿\",{\"1\":{\"586\":1}}],[\"有一些常见的占位符可以用于格式化输出\",{\"1\":{\"1173\":1}}],[\"有一些大众所认为的\",{\"1\":{\"653\":1}}],[\"有一些传统的职业\",{\"1\":{\"578\":1}}],[\"有一些人已经将个人网站成为独立网络\",{\"1\":{\"534\":1}}],[\"有一类工具给人的感觉是这样的\",{\"1\":{\"493\":1}}],[\"有墙的花园\",{\"1\":{\"533\":1}}],[\"有个说法是这样的\",{\"1\":{\"788\":1}}],[\"有个纪录片\",{\"1\":{\"531\":1}}],[\"有个聪明人叫塔勒布\",{\"1\":{\"528\":1}}],[\"有点绕口\",{\"1\":{\"525\":1}}],[\"有手就行\",{\"1\":{\"521\":1,\"1216\":1}}],[\"有悖于它的初衷\",{\"1\":{\"521\":1}}],[\"有些对象比如说字符串可能是在堆上的类\",{\"1\":{\"887\":1}}],[\"有些道理就算你知道了明白了想通了\",{\"1\":{\"767\":1}}],[\"有些人不知情\",{\"1\":{\"703\":1}}],[\"有些人触须上可能有一条忠实温顺的小狗\",{\"1\":{\"573\":1}}],[\"有些信息可以引发我们的思考行动\",{\"1\":{\"677\":1}}],[\"有些这句表明由于covid\",{\"1\":{\"648\":1}}],[\"有些是大意的\",{\"1\":{\"628\":1}}],[\"有些抄袭是故意的\",{\"1\":{\"628\":1}}],[\"有些在回顾中看起来相当不明智\",{\"1\":{\"588\":1}}],[\"有些恐惧会让你感觉不断受到攻击\",{\"1\":{\"577\":1}}],[\"有些渴望都会让你感觉非常不快乐\",{\"1\":{\"577\":1}}],[\"有些部分被放逐在地下室的第三层\",{\"1\":{\"576\":1}}],[\"有些话是不能说的\",{\"1\":{\"551\":1}}],[\"有些技术类的书籍只是泛读\",{\"1\":{\"504\":1}}],[\"有些数据的利用率低也会占用缓存\",{\"1\":{\"381\":1}}],[\"有时是唯一的因素\",{\"1\":{\"621\":1}}],[\"有时影响深远\",{\"1\":{\"620\":1}}],[\"有时影响很小\",{\"1\":{\"620\":1}}],[\"有时难免会遭到被取消优先排序的渴望的强烈抗议\",{\"1\":{\"577\":1}}],[\"有时\",{\"1\":{\"575\":1,\"576\":1,\"577\":1,\"705\":1}}],[\"有时甚至在没有通知的情况下关闭\",{\"1\":{\"701\":1}}],[\"有时甚至直接与其他需求相悖\",{\"1\":{\"573\":1}}],[\"有时甚至影响您结婚对象的选择\",{\"1\":{\"571\":1}}],[\"有时候在写代码之前多考虑一下代码的设计是否符合上述原则\",{\"1\":{\"982\":1}}],[\"有时候在一个领域里一个新蹦出来的知识还没怎么理解透彻\",{\"1\":{\"531\":1}}],[\"有时候我们会主动调用\",{\"1\":{\"1135\":1}}],[\"有时候我们期望控制一些mock流程的顺序\",{\"1\":{\"977\":1}}],[\"有时候我们无法用文字表述我们所拥有的知识\",{\"1\":{\"653\":1}}],[\"有时候你可能不太确定调用mock时指定的参数\",{\"1\":{\"977\":1}}],[\"有时候你不得不承认这个世界发展的速度已经超过了我们的想象\",{\"1\":{\"531\":1}}],[\"有时候还得更改原服务类来解决\",{\"1\":{\"904\":1}}],[\"有时候一个概念不清楚\",{\"1\":{\"673\":2}}],[\"有时候也会写写思考文章\",{\"1\":{\"605\":1}}],[\"有时候\",{\"1\":{\"588\":1}}],[\"有时候会奇怪\",{\"1\":{\"55\":1}}],[\"有时在我们想熟悉一个更好用的工具时\",{\"1\":{\"494\":1}}],[\"有编译期就初始化的全局变量\",{\"1\":{\"454\":1}}],[\"有sentinel的配置纪元\",{\"1\":{\"426\":1}}],[\"有其他客户端修改了某个被watch监视的键\",{\"1\":{\"424\":1}}],[\"有减低了大量数据丢失的风险\",{\"1\":{\"413\":1}}],[\"有序集成员按分数值递减\",{\"1\":{\"410\":1}}],[\"有序集合中对指定成员的分数加上增量\",{\"1\":{\"410\":1}}],[\"有数据时\",{\"1\":{\"405\":1}}],[\"有关了\",{\"1\":{\"385\":1}}],[\"有线程\",{\"1\":{\"383\":1}}],[\"有两种思维模式我们需要事先了解\",{\"1\":{\"674\":1}}],[\"有两种情况会导致panic\",{\"1\":{\"447\":1}}],[\"有两种方案\",{\"1\":{\"413\":1}}],[\"有两种开启事务的命令\",{\"1\":{\"362\":1}}],[\"有两个具体操作\",{\"1\":{\"254\":1}}],[\"有两个选择\",{\"1\":{\"236\":1}}],[\"有两个遍历的维度\",{\"1\":{\"235\":1}}],[\"有两个链是人们在构建过程中绕不过去的坎儿\",{\"1\":{\"109\":1}}],[\"有两个用途\",{\"1\":{\"61\":1}}],[\"有动态函数的问题\",{\"1\":{\"358\":1}}],[\"有什么好看的呢\",{\"1\":{\"552\":1}}],[\"有什么优化的方法\",{\"1\":{\"360\":1}}],[\"有什么优化索引的方法\",{\"0\":{\"353\":1}}],[\"有什么区别\",{\"1\":{\"358\":1}}],[\"有什么方式可以避免回表呢\",{\"1\":{\"353\":1}}],[\"有如下三种情况\",{\"1\":{\"267\":1}}],[\"有\",{\"1\":{\"264\":1,\"358\":1,\"424\":1,\"426\":3,\"434\":1,\"627\":1,\"1135\":1}}],[\"有dp\",{\"1\":{\"239\":1,\"243\":1}}],[\"有n件物品和一个最多能背重量为w的背包\",{\"1\":{\"241\":1}}],[\"有n件物品和一个最多能背重量为w\",{\"1\":{\"235\":1}}],[\"有重复元素\",{\"1\":{\"212\":1}}],[\"有更多与现实世界的交互\",{\"1\":{\"188\":1}}],[\"有由于是去中心化\",{\"1\":{\"185\":1}}],[\"有权冻代币从\",{\"1\":{\"134\":1}}],[\"有权对程序账户进行更改的地址\",{\"1\":{\"114\":1}}],[\"有了这两个方法\",{\"1\":{\"1038\":1}}],[\"有了这些选项\",{\"1\":{\"584\":1}}],[\"有了现实生活中的例子打底\",{\"1\":{\"1009\":1}}],[\"有了各种先进的生产知识\",{\"1\":{\"746\":1}}],[\"有了新的机会\",{\"1\":{\"579\":1}}],[\"有了切片就可以这样写\",{\"1\":{\"468\":1}}],[\"有了缓冲池之后\",{\"1\":{\"376\":1}}],[\"有了\",{\"1\":{\"76\":1,\"377\":1}}],[\"有了镜像后\",{\"1\":{\"50\":1}}],[\"有可能导致人身攻击并且不愿倾听他人的观点\",{\"1\":{\"627\":1}}],[\"有可能你是一个异常聪明的人\",{\"1\":{\"575\":1}}],[\"有可能仅仅是取消了某个标签而已\",{\"1\":{\"55\":1}}],[\"有可以直接拿来使用的服务类的镜像\",{\"1\":{\"57\":1}}],[\"有好几个参数可以帮助做到这个事情\",{\"1\":{\"54\":1}}],[\"有氧训练\",{\"1\":{\"4\":1}}],[\"在文档结构体里注入\",{\"1\":{\"1241\":1}}],[\"在文件夹中创建一个main\",{\"1\":{\"510\":1}}],[\"在初始化成功后\",{\"1\":{\"1225\":1}}],[\"在初始化之后也是\",{\"1\":{\"1138\":1}}],[\"在声明值的时候标注类型\",{\"1\":{\"1187\":1}}],[\"在格式化字符串中\",{\"1\":{\"1173\":1}}],[\"在遇到空格时停止读取\",{\"1\":{\"1172\":1}}],[\"在解析完成后\",{\"1\":{\"1163\":1}}],[\"在函数之间传递上下文\",{\"1\":{\"1156\":1}}],[\"在单一粒度的时间里\",{\"1\":{\"1149\":1}}],[\"在单元测试中我们经常需要用到mock功能\",{\"1\":{\"956\":1}}],[\"在获取写锁时会进入自旋或者休眠\",{\"1\":{\"1143\":1}}],[\"在饥饿模式下\",{\"1\":{\"1142\":1}}],[\"在饥饿模式中\",{\"1\":{\"1142\":1}}],[\"在该状态下不能获取锁\",{\"1\":{\"1142\":1}}],[\"在该系统上再运行所需应用进程\",{\"1\":{\"45\":1}}],[\"在正常模式下\",{\"1\":{\"1142\":2}}],[\"在访问同一片内存时不会出现竞争条件\",{\"1\":{\"1141\":1}}],[\"在动态派发一节中介绍\",{\"1\":{\"1139\":1}}],[\"在调用\",{\"1\":{\"1138\":1}}],[\"在调度器初始函数执行的过程中会将\",{\"1\":{\"1134\":1}}],[\"在调度或系统调用时会使用\",{\"1\":{\"1133\":1}}],[\"在发送数据的逻辑执行之前会为当前channel加锁\",{\"1\":{\"1137\":1}}],[\"在很多主流的编程语言中\",{\"1\":{\"1136\":1}}],[\"在很多使用orm工具的场景下\",{\"1\":{\"975\":1}}],[\"在之后\",{\"1\":{\"1133\":1}}],[\"在之前的章节中我们介绍了如何为上面的代码编写单元测试\",{\"1\":{\"980\":1}}],[\"在之前的代码中\",{\"1\":{\"472\":1}}],[\"在之前的例子中\",{\"1\":{\"55\":1}}],[\"在客户端和服务器端都可以自定义拦截器\",{\"1\":{\"1097\":1}}],[\"在客户端调用和服务器端相同的方法\",{\"1\":{\"1066\":1}}],[\"在vscode下同一个目录下多个go\",{\"1\":{\"1075\":1}}],[\"在流式\",{\"1\":{\"1073\":1}}],[\"在当前中间件函数中\",{\"1\":{\"1056\":1}}],[\"在当代文化中\",{\"1\":{\"627\":1}}],[\"在服务器端加密生成token返还给客户端\",{\"1\":{\"1046\":1}}],[\"在服务器端生成对应的session\",{\"1\":{\"1045\":1}}],[\"在线炒股\",{\"1\":{\"1073\":1}}],[\"在线用户很多时需要占用大量资源\",{\"1\":{\"1045\":1}}],[\"在线程上执行\",{\"1\":{\"1135\":1}}],[\"在线程\",{\"1\":{\"386\":1}}],[\"在web应用发展初期至目前依然有很多网站采用cookie\",{\"1\":{\"1045\":1}}],[\"在web应用中\",{\"1\":{\"1044\":1}}],[\"在web开发场景下的单元测试\",{\"1\":{\"972\":1}}],[\"在业界赫赫有名\",{\"1\":{\"1017\":1}}],[\"在计算机编程领域fsm最广泛的应用之一就是流程与行为控制\",{\"1\":{\"1009\":1}}],[\"在应用程序中使用全局变量的方式引入日志库或数据库连接实例等\",{\"1\":{\"981\":1}}],[\"在应用了sentinel的专用代码之后\",{\"1\":{\"426\":1}}],[\"在测试的时候需要通过命令行参数gcflags=\",{\"1\":{\"978\":1}}],[\"在编写单元测试时具体使用哪种mock方式还是要根据实际情况来决定\",{\"1\":{\"976\":1}}],[\"在product\",{\"1\":{\"975\":1}}],[\"在products表中将当前商品的浏览次数+1\",{\"1\":{\"975\":1}}],[\"在pando价格偏移期间\",{\"1\":{\"177\":1}}],[\"在pando市场上是这种情况\",{\"1\":{\"175\":1}}],[\"在quicksort包目录下执行go\",{\"1\":{\"967\":1}}],[\"在包目录下\",{\"1\":{\"966\":1}}],[\"在grpc的上下文中\",{\"1\":{\"1095\":1}}],[\"在greetering服务中加一行\",{\"1\":{\"1072\":1}}],[\"在go程序中使用\",{\"0\":{\"1026\":1}}],[\"在go语言实操使用qmgo摆弄mongodb\",{\"1\":{\"1216\":1}}],[\"在go语言本身是没有构造函数一说\",{\"1\":{\"883\":1}}],[\"在go语言中每个字段都有\",{\"1\":{\"1187\":1}}],[\"在go语言中我们通过https\",{\"1\":{\"1093\":1}}],[\"在go语言中\",{\"1\":{\"862\":1,\"900\":1,\"1166\":1,\"1177\":1}}],[\"在github的readme下有一个一句话值得注意\",{\"1\":{\"956\":1}}],[\"在接着递归就好了\",{\"1\":{\"949\":1}}],[\"在接下来的内容中\",{\"1\":{\"422\":1}}],[\"在排序的时候是需要一个间隔gap\",{\"1\":{\"947\":1}}],[\"在排序数组中查找数字\",{\"0\":{\"325\":1}}],[\"在如此复杂的系统中\",{\"1\":{\"927\":1}}],[\"在如下图中\",{\"1\":{\"235\":1}}],[\"在整个过程中会有不少的子系统发挥作用\",{\"1\":{\"927\":1}}],[\"在整个动规的过程中\",{\"1\":{\"266\":1}}],[\"在抽象和实现中任意一方改变\",{\"1\":{\"909\":1}}],[\"在软件开发中\",{\"1\":{\"894\":1}}],[\"在软件项目后期增加人员会使其更晚\",{\"1\":{\"722\":1}}],[\"在运行时中定义的状态非常多而且复杂\",{\"1\":{\"1132\":1}}],[\"在运行时可以增加和删除对象类型\",{\"1\":{\"889\":1}}],[\"在运行时分为\",{\"1\":{\"60\":1}}],[\"在信息互联网之上还有一层更高的金融互联网\",{\"1\":{\"804\":1}}],[\"在信息时代\",{\"1\":{\"646\":3,\"647\":2,\"686\":2}}],[\"在陌生的地方人的潜意识会比较警惕\",{\"1\":{\"789\":1}}],[\"在资产托管行业有一个指标叫\",{\"1\":{\"754\":1}}],[\"在古老的年代里\",{\"1\":{\"746\":1}}],[\"在古老的没有互联网的时代\",{\"1\":{\"631\":1}}],[\"在刷视频的时间\",{\"1\":{\"739\":1}}],[\"在屏幕上阅读文字的时间\",{\"1\":{\"739\":1}}],[\"在五年后十年后也都会变得很土\",{\"1\":{\"734\":1}}],[\"在他1971年的论文\",{\"1\":{\"722\":1}}],[\"在他们检验并证实任何思想观念之前\",{\"1\":{\"627\":1}}],[\"在什么情况下\",{\"1\":{\"722\":1}}],[\"在什么时候\",{\"1\":{\"505\":1}}],[\"在上述示例中\",{\"1\":{\"1161\":1,\"1162\":1,\"1163\":1}}],[\"在上面的示例中\",{\"1\":{\"1161\":1,\"1163\":2}}],[\"在上一节\",{\"1\":{\"1135\":1}}],[\"在上一节中\",{\"1\":{\"722\":1}}],[\"在上个例子中\",{\"1\":{\"1080\":1}}],[\"在上海我决定长期写作\",{\"1\":{\"605\":1}}],[\"在坚实的\",{\"1\":{\"721\":1}}],[\"在不同的处理器架构上实现方式不一样\",{\"1\":{\"1135\":1}}],[\"在不同的时刻我们调用这个函数都可能会得到不一样的结果\",{\"1\":{\"979\":1}}],[\"在不修改原有代码的情况下\",{\"1\":{\"906\":1}}],[\"在不远的将来都会出现在人们的日常行为中\",{\"1\":{\"717\":1}}],[\"在不触动警报装置的情况下\",{\"1\":{\"249\":1}}],[\"在手机上却无法看到\",{\"1\":{\"710\":1}}],[\"在电脑上可以看到的文档内容\",{\"1\":{\"710\":1}}],[\"在区块链世界待久了\",{\"1\":{\"701\":1}}],[\"在直接交流沟通\",{\"1\":{\"692\":1}}],[\"在独立思考中有一个谬误\",{\"1\":{\"683\":1}}],[\"在选择时尽量去抉择利弊\",{\"1\":{\"680\":1}}],[\"在选举产生出领头sentinel之后\",{\"1\":{\"426\":1}}],[\"在寻找合伙人时\",{\"1\":{\"674\":1}}],[\"在世代传承时\",{\"1\":{\"655\":1}}],[\"在许多情况下\",{\"1\":{\"653\":1}}],[\"在许多职业中\",{\"1\":{\"581\":1}}],[\"在遥远的时代在\",{\"1\":{\"646\":1}}],[\"在时间维度上都是一样的\",{\"1\":{\"646\":1,\"677\":1}}],[\"在农业社会中\",{\"1\":{\"646\":1,\"677\":1}}],[\"在17世纪早期\",{\"1\":{\"643\":1}}],[\"在1990年左右\",{\"1\":{\"532\":1}}],[\"在后面的小节中\",{\"1\":{\"1133\":1}}],[\"在后来被证明是错误的\",{\"1\":{\"643\":1}}],[\"在后台运行而不是直接把执行命令的结果输出在当前宿主机下\",{\"1\":{\"66\":1}}],[\"在后台运行的标准操作包括\",{\"1\":{\"64\":1}}],[\"在或多或少的程度上\",{\"1\":{\"639\":1}}],[\"在体验大多数事情的时候\",{\"1\":{\"639\":1}}],[\"在高中的生物课本上\",{\"1\":{\"631\":1}}],[\"在学界以外\",{\"1\":{\"628\":1}}],[\"在学术界\",{\"1\":{\"628\":1}}],[\"在学习了部分重同步的实现原理之后\",{\"1\":{\"425\":1}}],[\"在因特网上重点搜索15或20分钟就能把几乎所有主题上的大量信息找出来\",{\"1\":{\"627\":1}}],[\"在课堂上学习\",{\"1\":{\"654\":1}}],[\"在课堂上\",{\"1\":{\"627\":1}}],[\"在受到威胁时感到恐惧\",{\"1\":{\"626\":1}}],[\"在英国\",{\"1\":{\"619\":1}}],[\"在美国\",{\"1\":{\"619\":1,\"751\":1}}],[\"在谈论金钱的始终之前\",{\"1\":{\"596\":1}}],[\"在二十岁出头的年纪也没有足够的时间来验证我的观点是否正确\",{\"1\":{\"595\":1}}],[\"在沉思中独自站在那里\",{\"1\":{\"588\":1}}],[\"在某个时刻\",{\"1\":{\"588\":1}}],[\"在某些方面可能看起来像lodash\",{\"1\":{\"1017\":1}}],[\"在某些情形中\",{\"1\":{\"915\":1}}],[\"在某些情况下\",{\"1\":{\"483\":1}}],[\"在某些场景下并不需要每次都重新创建一个完全新对象\",{\"1\":{\"889\":1}}],[\"在某些场景下\",{\"1\":{\"454\":1}}],[\"在平行宇宙中\",{\"1\":{\"587\":1}}],[\"在约会世界中\",{\"1\":{\"585\":1}}],[\"在生活中\",{\"1\":{\"585\":1}}],[\"在生命的最后时刻\",{\"1\":{\"570\":1}}],[\"在提醒自己某个职业将需要数千个小时的社交网络或数十年的成功前的奋斗后\",{\"1\":{\"584\":1}}],[\"在每条线上确定你的成功标记应该放在哪里\",{\"1\":{\"584\":1}}],[\"在每个工作小时内完成的工作量会比一个专注工作的人少\",{\"1\":{\"581\":1}}],[\"在考虑到我们的速度\",{\"1\":{\"583\":1}}],[\"在考虑必要的标头\",{\"1\":{\"116\":1}}],[\"在职业的情况下\",{\"1\":{\"581\":1}}],[\"在评估自己在某条职业道路上的机会时\",{\"1\":{\"580\":1}}],[\"在大多数看法的背后\",{\"1\":{\"578\":1}}],[\"在否认监狱中\",{\"1\":{\"576\":1}}],[\"在你研究它之前不要接受它\",{\"1\":{\"623\":1}}],[\"在你做到这一点之前\",{\"1\":{\"586\":1}}],[\"在你的选择中有两个品牌的一些车\",{\"1\":{\"683\":1}}],[\"在你的一生中\",{\"1\":{\"588\":1}}],[\"在你的班级里\",{\"1\":{\"586\":1}}],[\"在你的心中重新构建一系列职业道路将影响你对其中一些道路的渴望程度\",{\"1\":{\"584\":1}}],[\"在你的童年某个时刻\",{\"1\":{\"576\":1}}],[\"在你的渴望中\",{\"1\":{\"576\":1}}],[\"在你的决策过程中具有最大的影响力\",{\"1\":{\"574\":1}}],[\"在你内心的某个地方\",{\"1\":{\"575\":1}}],[\"在地下室的地下室\",{\"1\":{\"575\":1}}],[\"在特定的情况下\",{\"1\":{\"574\":1}}],[\"在任何一种情况下\",{\"1\":{\"574\":1}}],[\"在任何时间段突然崩溃\",{\"1\":{\"357\":1}}],[\"在观察他们的职业道路并与他们反复讨论这些道路的过程中\",{\"1\":{\"572\":1}}],[\"在成长过程中\",{\"1\":{\"571\":1}}],[\"在自己的项目中集成就可以了\",{\"1\":{\"988\":1}}],[\"在自己的生活中感到广泛存在\",{\"1\":{\"587\":1}}],[\"在自己的生活中也大概思考过这件事两百万次\",{\"1\":{\"571\":1}}],[\"在自己熟知的领域里知晓一切\",{\"1\":{\"531\":1}}],[\"在过去没有互联网的时代里\",{\"1\":{\"734\":1}}],[\"在过去的\",{\"1\":{\"572\":1}}],[\"在过去的十多年里\",{\"1\":{\"534\":1}}],[\"在过去\",{\"1\":{\"571\":1,\"646\":1,\"677\":1,\"751\":1}}],[\"在汹涌的河流中醒来\",{\"1\":{\"570\":1}}],[\"在池塘里\",{\"1\":{\"570\":1}}],[\"在与垄断互联网的斗争中\",{\"1\":{\"534\":1}}],[\"在那个时期\",{\"1\":{\"646\":1}}],[\"在那些时刻感受到满足感\",{\"1\":{\"587\":1}}],[\"在那里他们的声音前所未有的洪亮\",{\"1\":{\"534\":1}}],[\"在那最初的几年里\",{\"1\":{\"532\":1}}],[\"在传统职业中\",{\"1\":{\"580\":1}}],[\"在传统智慧的书架上\",{\"1\":{\"579\":1}}],[\"在传统互联网上仍然可以畅所欲言\",{\"1\":{\"534\":1}}],[\"在传统的关系式数据库中\",{\"1\":{\"424\":1}}],[\"在中国尤其是如此\",{\"1\":{\"533\":1}}],[\"在中国就是微信\",{\"1\":{\"533\":1}}],[\"在概率上来看应该是亿分之一\",{\"1\":{\"528\":1}}],[\"在新的判决下\",{\"1\":{\"528\":1}}],[\"在新元素大于所有现有元素的情况下\",{\"1\":{\"398\":1}}],[\"在新元素小于所有现有元素的情况下\",{\"1\":{\"398\":1}}],[\"在李笑来的\",{\"1\":{\"525\":1}}],[\"在我看来最重要的是生产者和销售者\",{\"1\":{\"792\":1}}],[\"在我看来主要的不同点就在于全面\",{\"1\":{\"525\":1}}],[\"在我上大学期间\",{\"1\":{\"698\":1}}],[\"在我得到更多信息后\",{\"1\":{\"577\":1}}],[\"在我大半生的职业道路上\",{\"1\":{\"572\":1}}],[\"在我们的例子中\",{\"1\":{\"588\":1}}],[\"在我们的情况下\",{\"1\":{\"580\":1}}],[\"在我们的市场营销实训中\",{\"1\":{\"10\":1}}],[\"在我们每个人头脑里\",{\"1\":{\"573\":1}}],[\"在我们被安排的道路上取得成功\",{\"1\":{\"570\":1}}],[\"在我们开始之前\",{\"1\":{\"569\":1}}],[\"在我们开启了慢\",{\"1\":{\"377\":1}}],[\"在我们已有的视角之下\",{\"1\":{\"528\":1}}],[\"在我们熟练一个工具的时候\",{\"1\":{\"494\":1}}],[\"在浏览器中访问\",{\"1\":{\"517\":1}}],[\"在终端启用go\",{\"1\":{\"517\":1}}],[\"在将请求体重新解码为var\",{\"1\":{\"516\":1}}],[\"在mixin生态中被盗的大多数加密资产都是主流加密资产btc\",{\"1\":{\"591\":1}}],[\"在main中copy\",{\"1\":{\"513\":1}}],[\"在mysql启动时\",{\"1\":{\"376\":1}}],[\"在mysql的innodb引擎下\",{\"1\":{\"360\":1}}],[\"在index内容中可以查看包内的函数\",{\"1\":{\"512\":1}}],[\"在写代码之前进行一次构建对于整个编码过程都很重要\",{\"1\":{\"510\":1}}],[\"在太阳能竭尽之前找到可以直接使用恒星能量的方法或者实现可控核聚变就没什么问题\",{\"1\":{\"500\":1}}],[\"在石油用完之前找到太阳能\",{\"1\":{\"500\":1}}],[\"在可遇见的未来更是\",{\"1\":{\"500\":1}}],[\"在度过了不那么舒服的感觉之后\",{\"1\":{\"494\":1}}],[\"在看到了localsent的好处后\",{\"1\":{\"494\":1}}],[\"在看其他情况\",{\"1\":{\"235\":1}}],[\"在说这个工具的优点之前\",{\"1\":{\"494\":1}}],[\"在语言级别\",{\"1\":{\"471\":1}}],[\"在run函数中\",{\"1\":{\"516\":1}}],[\"在rust中使用\",{\"1\":{\"468\":1}}],[\"在redis目前的发布与订阅功能中\",{\"1\":{\"426\":1}}],[\"在redis的主从复制中\",{\"1\":{\"425\":1}}],[\"在redis服务启动的时候会检查在config文件中配置文件下有没有文件\",{\"1\":{\"416\":1}}],[\"在rehash进行期间\",{\"1\":{\"396\":1}}],[\"在多个线程中使用也只被打印了一次\",{\"1\":{\"463\":1}}],[\"在多个事务对这条记录进行读写操作时\",{\"1\":{\"361\":1}}],[\"在程序开发中\",{\"1\":{\"1177\":1}}],[\"在程序中静态变量只有一个实例\",{\"1\":{\"457\":1}}],[\"在程序之间传递数据\",{\"1\":{\"121\":1}}],[\"在最后我们会展示更短的形式\",{\"1\":{\"450\":1}}],[\"在最终容器运行的时候\",{\"1\":{\"46\":1}}],[\"在没有同步到其他节点时\",{\"1\":{\"436\":1}}],[\"在集群的节点数量比较大的情况下\",{\"1\":{\"435\":1}}],[\"在集群中执行命令\",{\"0\":{\"429\":1}}],[\"在进行重新分片期间\",{\"1\":{\"432\":1}}],[\"在对应的接口前加入注释\",{\"1\":{\"977\":1}}],[\"在对类似上述这类业务代码编写单元测试的时候\",{\"1\":{\"973\":1}}],[\"在对\",{\"1\":{\"578\":1}}],[\"在对字符串使用切片语法时需要格外小心\",{\"1\":{\"468\":1}}],[\"在对集群进行重新分片的时候\",{\"1\":{\"432\":2}}],[\"在对数据库中的16384个槽都进行了指派之后\",{\"1\":{\"429\":1}}],[\"在对某个处在\",{\"1\":{\"377\":1}}],[\"在client端呢\",{\"1\":{\"1097\":1}}],[\"在client\",{\"1\":{\"1067\":1,\"1072\":1}}],[\"在cluster\",{\"1\":{\"428\":1}}],[\"在cookie中携带对应的sessionid\",{\"1\":{\"1045\":1}}],[\"在compound借出eth获得12\",{\"1\":{\"163\":1}}],[\"在compound存入获得8\",{\"1\":{\"163\":1}}],[\"在c语言中\",{\"1\":{\"447\":1}}],[\"在刚开始的时候\",{\"1\":{\"427\":1}}],[\"在已下线主服务器属下的所有从服务器里面\",{\"1\":{\"426\":1}}],[\"在默认情况下会挂起当前的\",{\"1\":{\"1137\":1}}],[\"在默认情况下会单独为\",{\"1\":{\"1137\":1}}],[\"在默认情况下\",{\"1\":{\"426\":2,\"1133\":1,\"1142\":1}}],[\"在复制积压缓冲区里面找到从服务器缺少的数据\",{\"1\":{\"425\":1}}],[\"在复杂链表中\",{\"1\":{\"308\":1}}],[\"在列出的从服务器列表的lag一栏中\",{\"1\":{\"425\":1}}],[\"在命令传播阶段\",{\"1\":{\"425\":1}}],[\"在需要进行身份验证的情况下\",{\"1\":{\"425\":1}}],[\"在server端\",{\"1\":{\"1097\":1}}],[\"在server\",{\"1\":{\"1055\":1}}],[\"在slaveof命令执行之后\",{\"1\":{\"425\":1}}],[\"在solana上我们发送交易与网络进行交互\",{\"1\":{\"116\":1}}],[\"在solana上\",{\"1\":{\"112\":1}}],[\"在solana上开发自定义程序时\",{\"1\":{\"112\":1}}],[\"在同步安全点收缩栈\",{\"1\":{\"1132\":1}}],[\"在同步操作完成后\",{\"1\":{\"425\":1}}],[\"在同一个patchconvey里重复mock一个函数会报错\",{\"1\":{\"962\":1}}],[\"在同一个区块内完成借贷和还款\",{\"1\":{\"163\":1}}],[\"在此之上的话题构建中心化交易模型是非常有趣的\",{\"1\":{\"698\":1}}],[\"在此之后\",{\"1\":{\"425\":1}}],[\"在此期间会生成一个插入意向锁\",{\"1\":{\"374\":1}}],[\"在重新考察了关于愤怒的证据后\",{\"1\":{\"653\":1}}],[\"在重新分片过程中\",{\"1\":{\"431\":1}}],[\"在重启服务器的时候也可以加载rdb文件来恢复数据\",{\"1\":{\"416\":1}}],[\"在重做日志组中\",{\"1\":{\"357\":1}}],[\"在载入\",{\"1\":{\"414\":2}}],[\"在还没来得及将命令写入到硬盘时\",{\"1\":{\"413\":1}}],[\"在执行故障转移操作时\",{\"1\":{\"426\":1}}],[\"在执行事务期间不会对事务进行中断\",{\"1\":{\"424\":1}}],[\"在执行完一条写操作命令后\",{\"1\":{\"413\":1}}],[\"在执行快照读\",{\"1\":{\"356\":1}}],[\"在启动的时候\",{\"1\":{\"411\":1}}],[\"在有效期内就是一直可用的\",{\"1\":{\"1047\":1}}],[\"在有效的区块链上达成全球分散共识的机制\",{\"1\":{\"94\":1}}],[\"在有个人叫做托夫勒\",{\"1\":{\"528\":1}}],[\"在有序集合中计算指定字典区间内成员数量\",{\"1\":{\"410\":1}}],[\"在压缩列表中\",{\"1\":{\"399\":1}}],[\"在渐进式rehash执行期间\",{\"1\":{\"396\":1}}],[\"在字典中维持一个索引计数器变量rehashidx\",{\"1\":{\"396\":1}}],[\"在字符串尾部可以使用push\",{\"1\":{\"477\":1}}],[\"在字符串\",{\"1\":{\"322\":1}}],[\"在拼接字符串之前会检查\",{\"1\":{\"393\":1,\"402\":1}}],[\"在数据库中是\",{\"1\":{\"383\":1,\"384\":2,\"386\":1}}],[\"在数组中查找两个数\",{\"1\":{\"332\":1}}],[\"在数组中的两个数字\",{\"1\":{\"323\":1}}],[\"在加载数据页时\",{\"1\":{\"377\":1}}],[\"在插入数据时\",{\"1\":{\"369\":1}}],[\"在创建命令连接之后\",{\"1\":{\"426\":1}}],[\"在创建\",{\"1\":{\"362\":1}}],[\"在创建用户时\",{\"1\":{\"194\":1}}],[\"在早期的\",{\"1\":{\"360\":1}}],[\"在两阶段提交的流程基础上\",{\"1\":{\"360\":1}}],[\"在事务提交的时候\",{\"1\":{\"358\":1}}],[\"在事务执行过程中\",{\"1\":{\"356\":1}}],[\"在备库执行就会被当做多个事务分段自行\",{\"1\":{\"358\":1}}],[\"在完成masterhost属性和masterport属性的设置工作之后\",{\"1\":{\"425\":1}}],[\"在完成一条更新操作后\",{\"1\":{\"358\":1}}],[\"在完全竞争市场中\",{\"1\":{\"10\":1}}],[\"在内存修改该\",{\"1\":{\"357\":1}}],[\"在内部调用另一个\",{\"1\":{\"131\":1}}],[\"在索引\",{\"1\":{\"353\":1}}],[\"在范围0～n\",{\"1\":{\"326\":1}}],[\"在本题中\",{\"1\":{\"291\":1}}],[\"在本例中为\",{\"1\":{\"150\":1}}],[\"在判断回文子串的题目中\",{\"1\":{\"268\":1}}],[\"在确定递推公式时\",{\"1\":{\"267\":1}}],[\"在确定递推公式的时候\",{\"1\":{\"263\":1}}],[\"在定义dp\",{\"1\":{\"263\":1}}],[\"在回看一下dp\",{\"1\":{\"263\":1}}],[\"在原数组里被\",{\"1\":{\"258\":1}}],[\"在满足以下约束条件下\",{\"1\":{\"256\":1}}],[\"在第2种或可能是第3种情况下\",{\"1\":{\"575\":1}}],[\"在第1种情况下\",{\"1\":{\"575\":1}}],[\"在第\",{\"1\":{\"252\":2,\"253\":6,\"254\":4}}],[\"在下句中\",{\"1\":{\"481\":1}}],[\"在下一次发送psync命令时使用\",{\"1\":{\"425\":1}}],[\"在下面的代码中\",{\"1\":{\"975\":1}}],[\"在下面的\",{\"1\":{\"284\":1}}],[\"在下面的讲解中\",{\"1\":{\"235\":1,\"266\":1}}],[\"在下图中标记为\",{\"1\":{\"230\":1}}],[\"在bcdef中再去切割第二段\",{\"1\":{\"213\":1}}],[\"在bcdef中再去选取第二个\",{\"1\":{\"213\":1}}],[\"在betxin中您可以使用mixin支持的36种加密货币进行购买\",{\"1\":{\"37\":1}}],[\"在betxin上\",{\"1\":{\"19\":1,\"34\":1}}],[\"在authoptions中添加provider\",{\"1\":{\"195\":1}}],[\"在aave存入eth获得15\",{\"1\":{\"163\":1}}],[\"在利率为8\",{\"1\":{\"177\":1}}],[\"在市场上卖出获得的资产\",{\"1\":{\"163\":1}}],[\"在dex\",{\"1\":{\"163\":2}}],[\"在借款后偿还时需要支付借款利息\",{\"1\":{\"159\":1}}],[\"在借鉴了b\",{\"1\":{\"95\":1}}],[\"在为抵押品定价时需要牢记以下几点\",{\"1\":{\"150\":1}}],[\"在构建应用程序时\",{\"1\":{\"140\":1}}],[\"在构建镜像的时候\",{\"1\":{\"46\":1}}],[\"在交易成功将帐户余额减少到精确\",{\"1\":{\"125\":1}}],[\"在处理交易时\",{\"1\":{\"121\":1}}],[\"在主观上我的更好的这个思维谬误会扭曲我们的感知\",{\"1\":{\"683\":1}}],[\"在主从服务器命令传播阶段\",{\"1\":{\"413\":1}}],[\"在主从库中是\",{\"1\":{\"386\":1}}],[\"在主库上也要提交这个事务\",{\"1\":{\"360\":1}}],[\"在主动部署或升级程序时存储字节码的临时帐户\",{\"1\":{\"114\":1}}],[\"在主机里使用以下命令可以查看\",{\"1\":{\"74\":1}}],[\"在主机里使用以下命令可以查看指定\",{\"1\":{\"74\":1}}],[\"在操作系统中\",{\"1\":{\"75\":1}}],[\"在一般情况下\",{\"1\":{\"425\":1,\"432\":1,\"1146\":1}}],[\"在一些大字符串的字段作为索引时\",{\"1\":{\"353\":1}}],[\"在一个目录下正常的有多个\",{\"1\":{\"1071\":1}}],[\"在一个模块中进行剧烈的更改或改进\",{\"1\":{\"722\":1}}],[\"在一个职业游戏不断演变和变形的世界中\",{\"1\":{\"581\":1}}],[\"在一个面具下面\",{\"1\":{\"575\":1}}],[\"在一个由\",{\"1\":{\"426\":1}}],[\"在一个配置纪元里面\",{\"1\":{\"426\":1}}],[\"在一个事务内多次查询某个符合查询条件的\",{\"1\":{\"361\":1}}],[\"在一个事务内多次读取同一个数据\",{\"1\":{\"361\":1}}],[\"在一个事务获取到锁时才能进入\",{\"1\":{\"360\":1}}],[\"在一个数组\",{\"1\":{\"331\":1}}],[\"在一个\",{\"1\":{\"276\":1,\"319\":1}}],[\"在一个长度为\",{\"1\":{\"275\":1}}],[\"在一个区块中完成的操作\",{\"1\":{\"163\":1}}],[\"在一个空白目录中\",{\"1\":{\"56\":1}}],[\"在一次请求过后\",{\"1\":{\"1044\":1}}],[\"在一次\",{\"1\":{\"74\":1}}],[\"在用\",{\"1\":{\"74\":1}}],[\"在容器中管理数据主要有两种方式\",{\"1\":{\"74\":1}}],[\"在容器的基础上\",{\"1\":{\"45\":1}}],[\"在使用完缓冲读取器或缓冲写入器后\",{\"1\":{\"1153\":1}}],[\"在使用日志恢复数据时\",{\"1\":{\"413\":1}}],[\"在使用二维数组的时候\",{\"1\":{\"236\":1}}],[\"在使用\",{\"1\":{\"68\":1,\"368\":2,\"413\":2}}],[\"在撰写\",{\"1\":{\"58\":1}}],[\"在\",{\"0\":{\"993\":1},\"1\":{\"57\":1,\"61\":1,\"114\":1,\"126\":1,\"150\":1,\"166\":1,\"193\":1,\"353\":1,\"360\":1,\"361\":1,\"362\":4,\"377\":2,\"388\":2,\"396\":1,\"406\":1,\"410\":1,\"411\":2,\"412\":2,\"413\":1,\"419\":1,\"424\":2,\"425\":1,\"450\":1,\"463\":1,\"577\":1,\"772\":1,\"966\":1,\"1087\":2,\"1088\":1,\"1135\":1,\"1138\":1,\"1144\":1,\"1173\":2}}],[\"在其中定义一个方法\",{\"1\":{\"873\":1}}],[\"在其后任意一次黑天鹅中就会万劫不复\",{\"1\":{\"806\":1}}],[\"在其核心\",{\"1\":{\"574\":1}}],[\"在其它语言中\",{\"1\":{\"473\":1}}],[\"在其他模块中定义\",{\"1\":{\"456\":1}}],[\"在其基础上加一层作为容器运行时的存储层\",{\"1\":{\"55\":1}}],[\"在其上执行这些命令\",{\"1\":{\"58\":1}}],[\"在其上进行定制\",{\"1\":{\"57\":1}}],[\"在其上创建一个当前容器的存储层\",{\"1\":{\"47\":1}}],[\"在其上运行一个完整操作系统\",{\"1\":{\"45\":1}}],[\"在镜像下载和上传过程中镜像是保持着压缩状态的\",{\"1\":{\"51\":1}}],[\"在话题的详情界面中可以看到话题的具体规则\",{\"1\":{\"27\":1}}],[\"在输入框选择数额以及yes\",{\"1\":{\"26\":1}}],[\"在预测达不到预期时也可以选择卖出\",{\"1\":{\"19\":1,\"34\":1}}],[\"在这时会调用sync\",{\"1\":{\"1143\":1}}],[\"在这时整个程序不会执行任何用户\",{\"1\":{\"1134\":1}}],[\"在这其中\",{\"1\":{\"731\":1}}],[\"在这整理博客内容的时候\",{\"1\":{\"660\":2}}],[\"在这两个案例中\",{\"1\":{\"653\":1}}],[\"在这一篇中我们将介绍一个更强大的打桩工具\",{\"1\":{\"978\":1}}],[\"在这一小节\",{\"1\":{\"972\":1}}],[\"在这一切结束时\",{\"1\":{\"575\":1}}],[\"在这一步\",{\"1\":{\"425\":1}}],[\"在这当中当然有自己利益的考量\",{\"1\":{\"533\":1}}],[\"在这篇文章中你可以学到\",{\"1\":{\"509\":1}}],[\"在这篇文章通过160行代码使用go语言编写自己的简单区块链\",{\"1\":{\"509\":1}}],[\"在这些和许多其他的例子中\",{\"1\":{\"653\":1}}],[\"在这些时刻\",{\"1\":{\"588\":1}}],[\"在这些情况下\",{\"1\":{\"352\":1,\"588\":1}}],[\"在这些位置的读写会跳过容器存储层\",{\"1\":{\"47\":1}}],[\"在这种情况下\",{\"1\":{\"252\":1,\"253\":1,\"424\":1,\"425\":1,\"448\":1,\"569\":1,\"575\":1,\"706\":1,\"799\":1,\"1156\":1}}],[\"在这种情况下比的就是谁能活得更久而已\",{\"1\":{\"10\":1}}],[\"在这个示例中\",{\"1\":{\"1163\":1,\"1193\":1}}],[\"在这个状态机中包含着一系列状态和对应的状态转换行为\",{\"1\":{\"1009\":1}}],[\"在这个例子中\",{\"1\":{\"751\":1}}],[\"在这个循环中\",{\"1\":{\"649\":1}}],[\"在这个阶段\",{\"1\":{\"646\":1}}],[\"在这个世界想做出一些事情真的比想象中要难得多\",{\"1\":{\"592\":1}}],[\"在这个圈子里能做项目能做到不跑路已经很少了\",{\"1\":{\"592\":1}}],[\"在这个博客中\",{\"1\":{\"588\":1}}],[\"在这个谱系的左侧\",{\"1\":{\"588\":1}}],[\"在这个基础上\",{\"1\":{\"574\":1}}],[\"在这个基础费用之上\",{\"1\":{\"118\":1}}],[\"在这个触须上\",{\"1\":{\"573\":1}}],[\"在这个时代\",{\"1\":{\"646\":2}}],[\"在这个时代里\",{\"1\":{\"551\":1}}],[\"在这个时候\",{\"1\":{\"627\":1}}],[\"在这个时间点上\",{\"1\":{\"533\":1}}],[\"在这个配置纪元里面就不能再更改\",{\"1\":{\"426\":1}}],[\"在这个序列中\",{\"1\":{\"317\":1}}],[\"在这个机器人中您可以购买您需要的加密货币\",{\"1\":{\"36\":1}}],[\"在这里可以进行自定义类型的解析和处理\",{\"1\":{\"1163\":1}}],[\"在这里你需要下载grpc\",{\"1\":{\"1079\":1}}],[\"在这里我们只想解释现象背后的原因\",{\"1\":{\"1138\":1}}],[\"在这里我们首先会使用\",{\"1\":{\"1137\":1}}],[\"在这里我们先分析http\",{\"1\":{\"1054\":1}}],[\"在这里我们的\",{\"1\":{\"1009\":1}}],[\"在这里我们就使用gomock创建一个mockperson\",{\"1\":{\"977\":1}}],[\"在这里我们指定了最终镜像的名称\",{\"1\":{\"59\":1}}],[\"在这里我就不过多概述了\",{\"1\":{\"758\":1}}],[\"在这里\",{\"1\":{\"575\":1,\"1063\":1,\"1079\":1,\"1188\":1}}],[\"在这里还需要熟知的一点是\",{\"1\":{\"531\":1}}],[\"在这里就得提到shell语言\",{\"1\":{\"525\":1}}],[\"在这里查看经过验证的程序示例\",{\"1\":{\"128\":1}}],[\"在这里您可以根据您的预测进行购买\",{\"1\":{\"19\":1,\"34\":1}}],[\"在各个厂商的各个产品差别度无几的情况下\",{\"1\":{\"10\":1}}],[\"在网上也有人总结了如何在起初获得优势而后建立垄断\",{\"1\":{\"10\":1}}],[\"在2015年左右还是很有很足的市场份额\",{\"1\":{\"9\":1}}],[\"在起初二十手机初的年代\",{\"1\":{\"9\":1}}],[\"在买卖双方类似于完全竞争市场\",{\"1\":{\"8\":1}}],[\"在经济学领域里对市场的划分有四个档次\",{\"1\":{\"8\":1}}],[\"寡头垄断市场中\",{\"1\":{\"8\":1}}],[\"寡头垄断市场\",{\"1\":{\"8\":2}}],[\"恕不能透露\",{\"1\":{\"4\":1}}],[\"每小时的\",{\"1\":{\"1002\":1}}],[\"每小时触发一次\",{\"1\":{\"1002\":1}}],[\"每月的第几天\",{\"1\":{\"1002\":1}}],[\"每家店的人均价\",{\"1\":{\"980\":2}}],[\"每层有比较交换的次数有logn次\",{\"1\":{\"948\":1}}],[\"每篇文章的信息价值量比10000条推文加起来都多\",{\"1\":{\"660\":1}}],[\"每日凌晨\",{\"1\":{\"997\":1}}],[\"每日思考自己的收获\",{\"1\":{\"660\":1}}],[\"每日精读一篇英语原文\",{\"1\":{\"4\":1}}],[\"每根触角都可能出现对财富的渴望\",{\"1\":{\"574\":1}}],[\"每周都要交\",{\"1\":{\"552\":1}}],[\"每条meet\",{\"1\":{\"435\":2}}],[\"每秒\",{\"1\":{\"413\":1,\"422\":1}}],[\"每执行一条写操作命令\",{\"1\":{\"413\":1}}],[\"每种mspan可以分配特定大小的object\",{\"1\":{\"1150\":1}}],[\"每种对象都用到了至少一种我们前面所介绍的数据结构\",{\"1\":{\"400\":1}}],[\"每种物品有无限件\",{\"1\":{\"241\":1}}],[\"每\",{\"1\":{\"395\":1,\"419\":1,\"426\":2,\"428\":1,\"433\":1}}],[\"每隔指定的时间间隔\",{\"1\":{\"1206\":2}}],[\"每隔一秒一起持久化到磁盘\",{\"1\":{\"360\":1}}],[\"每隔4年\",{\"1\":{\"94\":1}}],[\"每当我在家乡小县城时\",{\"1\":{\"698\":1}}],[\"每当我们对一个\",{\"1\":{\"414\":1}}],[\"每当我们要将一个新元素添加到整数集合里面\",{\"1\":{\"398\":1}}],[\"每当你写作以开发思想时\",{\"1\":{\"627\":1}}],[\"每当有其他客户端向某个频道发送消息时\",{\"1\":{\"423\":1}}],[\"每当有其他客户端向被订阅的频道发送消息\",{\"1\":{\"423\":1}}],[\"每当需要从磁盘缓存页面时\",{\"1\":{\"377\":1}}],[\"每当产生一条redo\",{\"1\":{\"357\":1}}],[\"每当执行一个事务就会产生这样的一条或者多条物理日志\",{\"1\":{\"357\":1}}],[\"每当话题有用户选择退款时\",{\"1\":{\"28\":1}}],[\"每段绳子的长度记为\",{\"1\":{\"285\":1,\"286\":1}}],[\"每步\",{\"1\":{\"265\":1}}],[\"每间房内都藏有一定的现金\",{\"1\":{\"249\":1}}],[\"每件商品都有无限个\",{\"1\":{\"241\":1}}],[\"每件物品都有无限个\",{\"1\":{\"241\":1}}],[\"每件物品只能用一次\",{\"1\":{\"235\":1}}],[\"每项债务都有一个加权价格\",{\"1\":{\"150\":1}}],[\"每项债务都有一个经过置信区间调整的市场美元价格\",{\"1\":{\"150\":1}}],[\"每项债务都有一个由其预言机确定的市场美元价格\",{\"1\":{\"150\":1}}],[\"每项资产都有一个加权价格\",{\"1\":{\"150\":1}}],[\"每项资产都有一个经过置信区间调整的市场美元价格\",{\"1\":{\"150\":1}}],[\"每项资产都有一个由其预言机确定的市场美元价格\",{\"1\":{\"150\":1}}],[\"每笔交易都是通过端对端零知识加密只有交易双方才可以看到交易数据\",{\"1\":{\"185\":1}}],[\"每笔交易都有一个可以使用的最大计算单元数\",{\"1\":{\"122\":1}}],[\"每笔交易费用的固定比例\",{\"1\":{\"118\":1}}],[\"每次输出的内容都会加一个换行符\",{\"1\":{\"1167\":1}}],[\"每次都需要重新定义一个客户端再去调用\",{\"1\":{\"1079\":1}}],[\"每次都不满意\",{\"1\":{\"660\":1}}],[\"每次for循环有一个冒泡比较\",{\"1\":{\"945\":1}}],[\"每次刷视频都要事先经过网络下载好\",{\"1\":{\"709\":1}}],[\"每次长假我都会选择认真学习一些知识\",{\"1\":{\"695\":1}}],[\"每次收入增长\",{\"1\":{\"573\":1}}],[\"每次访问变量时\",{\"1\":{\"460\":1}}],[\"每次从数据库访问\",{\"1\":{\"414\":1}}],[\"每次对字典执行添加\",{\"1\":{\"396\":1}}],[\"每次对某条聚簇索引记录进行改动时\",{\"1\":{\"362\":1}}],[\"每次事务提交时都将缓存在\",{\"1\":{\"357\":1}}],[\"每次在事务执行中的select都会生成一个新的readview\",{\"1\":{\"356\":1}}],[\"每次当初始化的时候\",{\"1\":{\"264\":1}}],[\"每次计算dp\",{\"1\":{\"231\":1}}],[\"每次有\",{\"1\":{\"152\":1}}],[\"每次有人还款时一部分资金都会进入到保险金库\",{\"1\":{\"152\":1}}],[\"每次交易最大为1232个字节\",{\"1\":{\"116\":1}}],[\"每次执行的时候都是读取最新的数据\",{\"1\":{\"362\":1}}],[\"每次执行\",{\"1\":{\"55\":1}}],[\"每10分钟进行一次选举\",{\"1\":{\"95\":1}}],[\"每一项选择都是个人价值观的体现\",{\"1\":{\"710\":1}}],[\"每一步都算数\",{\"1\":{\"500\":1}}],[\"每一门语言的错误处理都很重要\",{\"1\":{\"446\":1}}],[\"每一条修改数据的\",{\"1\":{\"358\":1}}],[\"每一条指令构建一层\",{\"1\":{\"56\":1}}],[\"每一列都按照从上到下\",{\"1\":{\"276\":1}}],[\"每一行都按照从左到右\",{\"1\":{\"276\":1}}],[\"每一种解法包含一个不同的\",{\"1\":{\"220\":1}}],[\"每一个central会持有一种特定大小的mspan\",{\"1\":{\"1149\":1}}],[\"每一个线程m都会绑定一个处理器p\",{\"1\":{\"1149\":1}}],[\"每一个内核线程都能够执行多个\",{\"1\":{\"1134\":1}}],[\"每一个里面都要判断状态是不是可以做想做操作\",{\"1\":{\"1010\":1}}],[\"每一个小的变化都会遇到阻力\",{\"1\":{\"771\":1}}],[\"每一个的提交或回滚\",{\"1\":{\"361\":1}}],[\"每一个\",{\"1\":{\"58\":1,\"1132\":1,\"1139\":1,\"1145\":1,\"1146\":1}}],[\"每一个容器运行时\",{\"1\":{\"47\":1}}],[\"每一次修改都会让镜像更加臃肿一次\",{\"1\":{\"55\":1}}],[\"每一层的东西并不会在下一层被删除\",{\"1\":{\"58\":1}}],[\"每一层是在前一层的基础上进行的修改\",{\"1\":{\"55\":1}}],[\"每一层尽量只包含该层需要添加的东西\",{\"1\":{\"46\":1}}],[\"每一层构建完就不会再发生改变\",{\"1\":{\"46\":1}}],[\"每个成员都会被告知任务取消\",{\"1\":{\"1156\":1}}],[\"每个runtime\",{\"1\":{\"1149\":1}}],[\"每个redis服务器\",{\"1\":{\"425\":1}}],[\"每个redis数据库都保存着一个watched\",{\"1\":{\"424\":1}}],[\"每个redis客户端都有自己的事务状态\",{\"1\":{\"424\":1}}],[\"每个内存页分为多级固定大小的空闲列表\",{\"1\":{\"1149\":1}}],[\"每个p都会绑定一个上面所说的mcache\",{\"1\":{\"1149\":1}}],[\"每个span都有一个sizeclass\",{\"1\":{\"1148\":1}}],[\"每个字段都有一个唯一的编号\",{\"1\":{\"1084\":1}}],[\"每个字节包含一个\",{\"1\":{\"117\":1}}],[\"每个后续请求都将包含\",{\"1\":{\"1047\":1}}],[\"每个状态下允许的操作和可能转换的下一个状态都是严格受控的\",{\"1\":{\"1009\":1}}],[\"每个fsm都包含五个要素\",{\"1\":{\"1009\":1}}],[\"每个类都应该只有一个职责\",{\"1\":{\"982\":1}}],[\"每个测试通过后需要通过t\",{\"1\":{\"967\":1}}],[\"每个测试函数必须导入testing包\",{\"1\":{\"967\":1}}],[\"每个分支依赖于该对象的状态时\",{\"1\":{\"848\":1}}],[\"每个处理者收到请求后会根据情况将请求传递给下一个链路的处理者\",{\"1\":{\"812\":1}}],[\"每个时代都有其特定的生产资料\",{\"1\":{\"646\":1}}],[\"每个组成部分都如此\",{\"1\":{\"580\":1}}],[\"每个触角都有其独特的原因\",{\"1\":{\"574\":1}}],[\"每个触都有自己目标\",{\"1\":{\"573\":1}}],[\"每个触须上都包含许多不同的个别需求以及相应的恐惧\",{\"1\":{\"573\":1}}],[\"每个年龄段都在争夺自己的需求\",{\"1\":{\"573\":1}}],[\"每个面都想要并担心不同的事情\",{\"1\":{\"573\":1}}],[\"每个人遇到选择判断\",{\"1\":{\"631\":1}}],[\"每个人对金钱的看法\",{\"1\":{\"614\":1}}],[\"每个人需求章鱼的细节不同\",{\"1\":{\"573\":1}}],[\"每个人的价值观不同\",{\"1\":{\"759\":1}}],[\"每个人的看法都不同\",{\"1\":{\"631\":1}}],[\"每个人的意向性都或多或少被虚拟世界的一切所吸引\",{\"1\":{\"610\":1}}],[\"每个人的心中对气候危机的看法大抵都是不是不重要\",{\"1\":{\"609\":1}}],[\"每个人的生活都会产生深远影响\",{\"1\":{\"571\":1}}],[\"每个人的生活都会以成千上万种方式影响他人\",{\"1\":{\"571\":1}}],[\"每个人的数据不同\",{\"1\":{\"533\":1}}],[\"每个人都应该在这个时间内完成自己的任务\",{\"1\":{\"1156\":1}}],[\"每个人都停止使用马\",{\"1\":{\"773\":1}}],[\"每个人都在解雇和雇佣更便宜的工人\",{\"1\":{\"751\":1}}],[\"每个人都接受了这种二分法\",{\"1\":{\"721\":1}}],[\"每个人都有自己的看法\",{\"1\":{\"631\":1}}],[\"每个人都对ai显现出极大的兴趣\",{\"1\":{\"631\":1}}],[\"每个人都需要自己的解决方式\",{\"1\":{\"554\":1}}],[\"每个人都是价格的接收者\",{\"1\":{\"8\":1}}],[\"每个中心化互联网企业都尽可能让自己的利益最大化必然情况\",{\"1\":{\"533\":1}}],[\"每个包都有overview\",{\"1\":{\"512\":1}}],[\"每个具有投票权的主节点只能投一次票\",{\"1\":{\"433\":1}}],[\"每个模数代表一个相应编号的哈希槽\",{\"1\":{\"413\":1}}],[\"每个键值对都会根据它的\",{\"1\":{\"413\":1}}],[\"每个层之间都有一个指向表尾方向的前进指针\",{\"1\":{\"397\":1}}],[\"每个元素都可以访问其他节点\",{\"1\":{\"397\":1}}],[\"每个dicttype结构保存了一簇用于操作特定类型键值对的函数\",{\"1\":{\"395\":1}}],[\"每个dictentry结构都保存着一个键值对\",{\"1\":{\"395\":1}}],[\"每个链表节点是\",{\"1\":{\"394\":1}}],[\"每个线程在改之前\",{\"1\":{\"383\":1}}],[\"每个语句执行前\",{\"1\":{\"362\":1}}],[\"每个事务都有一个完整的数据空间\",{\"1\":{\"361\":1}}],[\"每个事务提交都会进行两次\",{\"1\":{\"360\":1}}],[\"每个阶段都由协调者和参与者组成\",{\"1\":{\"360\":1}}],[\"每个从库把\",{\"1\":{\"359\":1}}],[\"每个礼物都有一定的价值\",{\"1\":{\"319\":1}}],[\"每个节点都保存着一个clusterstate结构\",{\"1\":{\"427\":1}}],[\"每个节点都会使用clusternode结构来记录自己的状态\",{\"1\":{\"427\":1}}],[\"每个节点都是相互独立的\",{\"1\":{\"427\":1}}],[\"每个节点都有一个公共端点\",{\"1\":{\"137\":1}}],[\"每个节点可以保存一个字节数组或者一个整数值\",{\"1\":{\"399\":1}}],[\"每个节点除了有一个\",{\"1\":{\"308\":1}}],[\"每个月免费3000封电子邮件\",{\"1\":{\"194\":1}}],[\"每个账户的健康状况都以\",{\"1\":{\"150\":1}}],[\"每个集群在整体生态系统中承担不同的任务\",{\"1\":{\"137\":1}}],[\"每个程序都是一个链上账户\",{\"1\":{\"126\":1}}],[\"每个交易\",{\"1\":{\"122\":1}}],[\"每个交易都被分配了一个\",{\"1\":{\"119\":1}}],[\"每个操作消耗的计算单元\",{\"1\":{\"119\":1}}],[\"每个帐户需要\",{\"1\":{\"116\":1}}],[\"每个指令代表一个要处理的具体操作\",{\"1\":{\"116\":1}}],[\"每个容器可以有不同的用户和组\",{\"1\":{\"76\":1}}],[\"每个容器都有自己单独的命名空间\",{\"1\":{\"76\":1}}],[\"每个命名空间中的容器在\",{\"1\":{\"76\":1}}],[\"每个命名空间中的\",{\"1\":{\"76\":1}}],[\"每个\",{\"1\":{\"76\":3,\"357\":1,\"1132\":1,\"1133\":1}}],[\"每个服务器上可以有多个仓库\",{\"1\":{\"73\":1}}],[\"每个镜像都由很多层次构成\",{\"1\":{\"61\":1}}],[\"每个标签对应一个镜像\",{\"1\":{\"48\":1}}],[\"每个仓库可以包含多个\",{\"1\":{\"48\":1}}],[\"每个厂家都陷入一种贷款去获得存活的机会\",{\"1\":{\"10\":1}}],[\"每个厂商都花费了巨额的广告费\",{\"1\":{\"10\":1}}],[\"每个个体都无法左右价格的市场\",{\"1\":{\"8\":1}}],[\"每天都做如此可以显著提高你的生活质量\",{\"1\":{\"789\":1}}],[\"每天都会有越来越多的想法出现在大脑之中\",{\"1\":{\"740\":1}}],[\"每天都会分1一个小时去尝试我愿意尝试的新事物\",{\"1\":{\"731\":1}}],[\"每天做10\",{\"1\":{\"789\":1}}],[\"每天只需1小时\",{\"1\":{\"740\":1}}],[\"每天抽出1小时\",{\"1\":{\"740\":1}}],[\"每天我都会刷二十分钟的x\",{\"1\":{\"731\":1}}],[\"每天的人流量却很多\",{\"1\":{\"660\":1}}],[\"每天多了不少时间去写代码\",{\"1\":{\"552\":1}}],[\"每天日度一日地刷商品这样的操作\",{\"1\":{\"551\":1}}],[\"每天非必要不接触手机\",{\"1\":{\"4\":1}}],[\"每天应该需要1小时\",{\"1\":{\"4\":1}}],[\"每天晚上跟随记忆曲线复习\",{\"1\":{\"4\":1}}],[\"每天早上拍照+吃自己的饭\",{\"1\":{\"4\":1}}],[\"1h30m0s\",{\"1\":{\"1207\":1}}],[\"1h30m\",{\"1\":{\"1161\":1,\"1207\":1}}],[\"1ms\",{\"1\":{\"1142\":2}}],[\"1mb\",{\"1\":{\"51\":2}}],[\"1s\",{\"1\":{\"1001\":1,\"1005\":1}}],[\"1sol\",{\"1\":{\"150\":1}}],[\"1sol=10e9\",{\"1\":{\"111\":1}}],[\"1次\",{\"1\":{\"947\":1}}],[\"1了\",{\"1\":{\"947\":1}}],[\"1以及端口6379保存到服务器状态的masterhost属性和masterport属性里面\",{\"1\":{\"425\":1}}],[\"1命令\",{\"1\":{\"425\":1}}],[\"1时\",{\"1\":{\"395\":1}}],[\"1内的n个数字中有且只有一个数字不在该数组中\",{\"1\":{\"326\":1}}],[\"1之内\",{\"1\":{\"326\":1}}],[\"1中缺失的数字\",{\"0\":{\"326\":1}}],[\"1→3→5→2→1\",{\"1\":{\"319\":1}}],[\"1是多少\",{\"1\":{\"317\":1}}],[\"1一共出现了5次\",{\"1\":{\"316\":1}}],[\"1～12这些整数中包含1\",{\"1\":{\"316\":1}}],[\"1～n\",{\"0\":{\"316\":1}}],[\"1a3\",{\"1\":{\"292\":1}}],[\"1e10\",{\"1\":{\"959\":1}}],[\"1e\",{\"1\":{\"292\":1}}],[\"1e9+7\",{\"1\":{\"286\":1}}],[\"1=1\",{\"1\":{\"287\":2}}],[\"1=1n\",{\"1\":{\"287\":1}}],[\"1=0\",{\"1\":{\"287\":1}}],[\"1=0n\",{\"1\":{\"287\":1}}],[\"1区间\",{\"1\":{\"267\":1}}],[\"1等于\",{\"1\":{\"265\":1}}],[\"1位结尾的字符串word2\",{\"1\":{\"265\":1}}],[\"1为结尾的word1\",{\"1\":{\"266\":1}}],[\"1为结尾的word2的最近编辑距离\",{\"1\":{\"266\":1}}],[\"1为结尾的s\",{\"1\":{\"264\":1}}],[\"1为结尾的s可以随便删除元素\",{\"1\":{\"264\":1}}],[\"1为结尾的字符串word2\",{\"1\":{\"266\":2}}],[\"1为结尾的字符串word1要删除多少个元素\",{\"1\":{\"265\":1}}],[\"1为结尾的字符串word1\",{\"1\":{\"265\":1,\"266\":3}}],[\"1为结尾的字符串t的个数\",{\"1\":{\"264\":1}}],[\"1为结尾的字符串t\",{\"1\":{\"263\":2}}],[\"1为结尾的字符串s\",{\"1\":{\"263\":2}}],[\"1为结尾的nums2\",{\"1\":{\"259\":1}}],[\"1为结尾的nums1\",{\"1\":{\"259\":1}}],[\"1吧\",{\"1\":{\"259\":1}}],[\"1进行比较\",{\"1\":{\"257\":1}}],[\"1的冷静性质\",{\"1\":{\"586\":1}}],[\"1的递增排序数组中的所有数字都是唯一的\",{\"1\":{\"326\":1}}],[\"1的最大值\",{\"1\":{\"257\":1}}],[\"1的各个值\",{\"1\":{\"257\":1}}],[\"1的时候\",{\"1\":{\"177\":1}}],[\"1各个位置的最长升序子序列\",{\"1\":{\"257\":3}}],[\"1天就不持有股票\",{\"1\":{\"252\":1}}],[\"1天就持有股票\",{\"1\":{\"252\":1}}],[\"1房\",{\"1\":{\"248\":2}}],[\"1房一定是不考虑的\",{\"1\":{\"248\":1}}],[\"192\",{\"1\":{\"972\":2}}],[\"19危机导致失业率急剧上升\",{\"1\":{\"648\":1}}],[\"1952\",{\"1\":{\"578\":1}}],[\"1998年有一个很著名的福州ip电话案件\",{\"1\":{\"528\":1}}],[\"19\",{\"0\":{\"291\":1},\"1\":{\"276\":1,\"468\":1,\"1206\":4}}],[\"198\",{\"0\":{\"248\":1}}],[\"19ubuntu1\",{\"1\":{\"90\":1}}],[\"1就是dp\",{\"1\":{\"244\":1}}],[\"1到i为节点组成的二叉搜索树的个数为dp\",{\"1\":{\"232\":1}}],[\"1锚定的美元价格\",{\"1\":{\"187\":1}}],[\"1锚定美元\",{\"1\":{\"175\":1}}],[\"1锚定美元的去中心化稳定币\",{\"1\":{\"173\":1}}],[\"1稳定币\",{\"1\":{\"177\":1}}],[\"1个usdt可兑换超过1个pusd\",{\"1\":{\"175\":1}}],[\"1+start\",{\"1\":{\"249\":1}}],[\"1+2\",{\"1\":{\"150\":1}}],[\"1+5\",{\"1\":{\"150\":1}}],[\"15表示第\",{\"1\":{\"1002\":1}}],[\"155\",{\"1\":{\"486\":1}}],[\"15开始\",{\"1\":{\"176\":1}}],[\"15\",{\"0\":{\"287\":1},\"1\":{\"166\":1,\"235\":1,\"241\":1,\"276\":1,\"279\":3,\"303\":3,\"304\":3,\"305\":3,\"328\":2,\"329\":2,\"332\":1,\"569\":1,\"751\":2,\"855\":1,\"972\":2,\"1002\":1,\"1212\":3}}],[\"150\",{\"1\":{\"117\":2,\"517\":1,\"523\":1,\"1207\":1}}],[\"15k\",{\"1\":{\"26\":2}}],[\"17表示上午\",{\"1\":{\"1002\":1}}],[\"17岁时的隐秘期望\",{\"1\":{\"573\":1}}],[\"1723\",{\"1\":{\"500\":1}}],[\"173\",{\"1\":{\"486\":1}}],[\"174\",{\"1\":{\"474\":1}}],[\"171\",{\"1\":{\"70\":1}}],[\"17\",{\"0\":{\"210\":1,\"289\":1},\"1\":{\"68\":2,\"276\":1,\"468\":1,\"572\":1,\"1002\":2,\"1178\":3,\"1180\":4,\"1181\":1,\"1182\":1}}],[\"130\",{\"1\":{\"1242\":1}}],[\"130k\",{\"1\":{\"26\":1}}],[\"135\",{\"1\":{\"474\":1}}],[\"1388316665850\",{\"1\":{\"428\":1}}],[\"1388316664849\",{\"1\":{\"428\":1}}],[\"13889\",{\"1\":{\"337\":2}}],[\"139\",{\"0\":{\"246\":1}}],[\"131\",{\"0\":{\"213\":1}}],[\"1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3\",{\"1\":{\"55\":1}}],[\"13\",{\"0\":{\"216\":1},\"1\":{\"51\":1,\"276\":1,\"307\":1,\"316\":1,\"523\":1,\"534\":1,\"1181\":1}}],[\"14159\",{\"1\":{\"1173\":1,\"1198\":1,\"1199\":1}}],[\"141\",{\"1\":{\"474\":1}}],[\"1416\",{\"1\":{\"292\":1,\"1199\":1}}],[\"14\",{\"0\":{\"285\":1,\"286\":1},\"1\":{\"51\":1,\"166\":1,\"276\":1,\"292\":1,\"447\":1,\"475\":1,\"660\":1,\"967\":3,\"1124\":1,\"1126\":1,\"1144\":1,\"1173\":1,\"1189\":2,\"1198\":3}}],[\"110k的比特币我都买过\",{\"1\":{\"804\":1}}],[\"11+11+8+8+12+9+9+9+8+14+8+8=115\",{\"1\":{\"543\":1}}],[\"11111\",{\"1\":{\"337\":2}}],[\"11和12\",{\"1\":{\"316\":1}}],[\"115\",{\"0\":{\"264\":1}}],[\"1143\",{\"0\":{\"260\":1}}],[\"11\",{\"0\":{\"283\":1,\"502\":1,\"504\":1},\"1\":{\"51\":1,\"90\":2,\"276\":1,\"287\":1,\"300\":2,\"307\":2,\"317\":1,\"318\":1,\"332\":1,\"468\":1,\"543\":1,\"560\":2,\"566\":1,\"569\":1,\"804\":1,\"960\":2,\"979\":1,\"1126\":1,\"1144\":2}}],[\"1670140800\",{\"1\":{\"1212\":1}}],[\"16进制等\",{\"1\":{\"1198\":1}}],[\"16b=512个object\",{\"1\":{\"1148\":1}}],[\"16bit\",{\"1\":{\"413\":1}}],[\"16k\",{\"1\":{\"804\":1}}],[\"16行\",{\"1\":{\"517\":1}}],[\"165\",{\"1\":{\"474\":2}}],[\"1685277441055\",{\"1\":{\"1212\":1}}],[\"1685277441055316000\",{\"1\":{\"1212\":1}}],[\"1685277441055316\",{\"1\":{\"1212\":1}}],[\"1685277441\",{\"1\":{\"1212\":1}}],[\"168\",{\"1\":{\"474\":1}}],[\"164\",{\"1\":{\"474\":5}}],[\"162\",{\"1\":{\"447\":1}}],[\"16校验和\",{\"1\":{\"429\":1}}],[\"16383语句则用于计算出一个介于0至16383之间的整数作为键key的槽号\",{\"1\":{\"429\":1}}],[\"16383\",{\"1\":{\"428\":1,\"429\":1}}],[\"16384个槽\",{\"1\":{\"428\":1}}],[\"16384\",{\"1\":{\"413\":3,\"428\":3}}],[\"16667\",{\"1\":{\"337\":7}}],[\"16\",{\"0\":{\"288\":1},\"1\":{\"48\":2,\"245\":1,\"276\":1,\"292\":1,\"413\":1,\"468\":1,\"992\":1,\"1127\":1,\"1139\":2,\"1212\":1}}],[\"18版本之后的lodash的工具库\",{\"1\":{\"1017\":1}}],[\"18行\",{\"1\":{\"517\":1}}],[\"186\",{\"1\":{\"486\":2}}],[\"189\",{\"1\":{\"486\":1}}],[\"184\",{\"1\":{\"474\":1,\"486\":1}}],[\"18所示\",{\"1\":{\"425\":1}}],[\"1801\",{\"1\":{\"899\":1}}],[\"180\",{\"1\":{\"317\":1,\"512\":2}}],[\"188\",{\"0\":{\"255\":1}}],[\"181\",{\"1\":{\"54\":1}}],[\"183\",{\"1\":{\"54\":1}}],[\"18\",{\"0\":{\"290\":1},\"1\":{\"26\":1,\"48\":2,\"49\":7,\"50\":4,\"51\":1,\"54\":1,\"64\":2,\"66\":2,\"68\":2,\"69\":1,\"257\":1,\"276\":1,\"447\":1,\"468\":2,\"474\":1,\"480\":1,\"560\":1,\"978\":1,\"979\":3,\"992\":1,\"1002\":1,\"1124\":1,\"1144\":1}}],[\"1\",{\"0\":{\"23\":1,\"26\":1,\"36\":1,\"39\":1,\"156\":1,\"158\":1,\"316\":1,\"632\":1,\"703\":1,\"799\":1,\"1063\":1},\"1\":{\"26\":2,\"51\":1,\"58\":1,\"66\":2,\"90\":30,\"150\":7,\"162\":1,\"163\":4,\"169\":1,\"193\":2,\"208\":3,\"209\":2,\"210\":3,\"211\":1,\"212\":5,\"213\":1,\"214\":2,\"215\":1,\"216\":5,\"217\":3,\"218\":6,\"219\":3,\"226\":3,\"227\":6,\"228\":7,\"229\":12,\"230\":16,\"231\":3,\"232\":7,\"235\":17,\"236\":5,\"237\":1,\"239\":3,\"240\":2,\"241\":1,\"242\":5,\"243\":4,\"244\":6,\"245\":4,\"248\":10,\"249\":6,\"250\":3,\"252\":34,\"253\":21,\"254\":44,\"255\":10,\"256\":2,\"257\":9,\"258\":12,\"259\":29,\"260\":33,\"261\":8,\"262\":10,\"263\":26,\"264\":48,\"265\":56,\"266\":53,\"267\":8,\"268\":16,\"275\":4,\"276\":2,\"277\":3,\"278\":2,\"279\":8,\"280\":8,\"281\":3,\"282\":4,\"283\":1,\"284\":2,\"285\":15,\"286\":7,\"287\":7,\"288\":8,\"289\":4,\"290\":7,\"291\":13,\"292\":1,\"293\":5,\"294\":2,\"295\":1,\"296\":3,\"297\":8,\"298\":6,\"299\":8,\"300\":7,\"301\":7,\"302\":13,\"303\":1,\"304\":1,\"305\":3,\"306\":4,\"307\":3,\"311\":1,\"312\":2,\"313\":11,\"315\":7,\"316\":1,\"317\":5,\"318\":9,\"319\":12,\"320\":5,\"321\":4,\"322\":1,\"323\":7,\"325\":8,\"326\":5,\"327\":7,\"328\":1,\"329\":5,\"330\":10,\"331\":6,\"332\":2,\"333\":1,\"334\":3,\"335\":4,\"336\":17,\"337\":2,\"357\":4,\"358\":1,\"360\":5,\"362\":1,\"369\":1,\"371\":2,\"373\":1,\"377\":2,\"383\":3,\"384\":8,\"386\":9,\"388\":1,\"393\":1,\"395\":14,\"396\":9,\"398\":1,\"399\":1,\"402\":1,\"403\":1,\"405\":1,\"417\":2,\"422\":1,\"423\":1,\"424\":2,\"425\":1,\"426\":8,\"427\":1,\"428\":8,\"429\":2,\"433\":2,\"435\":2,\"436\":3,\"447\":4,\"448\":1,\"457\":2,\"458\":2,\"460\":2,\"468\":2,\"469\":2,\"471\":1,\"473\":1,\"474\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"505\":2,\"514\":1,\"516\":2,\"523\":1,\"543\":2,\"547\":1,\"569\":1,\"575\":1,\"751\":4,\"759\":1,\"767\":1,\"808\":1,\"820\":1,\"838\":1,\"844\":3,\"883\":4,\"944\":1,\"945\":4,\"946\":4,\"947\":6,\"950\":5,\"958\":3,\"960\":4,\"967\":9,\"968\":2,\"970\":1,\"972\":3,\"973\":5,\"975\":8,\"977\":1,\"978\":1,\"979\":6,\"991\":1,\"992\":3,\"997\":6,\"1001\":1,\"1002\":8,\"1003\":3,\"1009\":1,\"1034\":3,\"1035\":1,\"1036\":1,\"1037\":1,\"1055\":16,\"1063\":1,\"1067\":6,\"1072\":6,\"1079\":1,\"1080\":9,\"1084\":4,\"1088\":1,\"1095\":1,\"1098\":1,\"1099\":2,\"1100\":1,\"1119\":1,\"1120\":5,\"1125\":1,\"1127\":2,\"1139\":1,\"1142\":1,\"1144\":1,\"1145\":2,\"1146\":4,\"1163\":1,\"1173\":2,\"1179\":1,\"1187\":1,\"1188\":1,\"1192\":1,\"1193\":1,\"1206\":1,\"1211\":1,\"1212\":1,\"1221\":1,\"1235\":1,\"1238\":1}}],[\"12062\",{\"1\":{\"980\":1}}],[\"12岁时理想化的自我认同\",{\"1\":{\"573\":1}}],[\"12e+5\",{\"1\":{\"292\":1}}],[\"12e\",{\"1\":{\"292\":1}}],[\"123123\",{\"1\":{\"1179\":1}}],[\"123456789123\",{\"1\":{\"1167\":1}}],[\"1234567890\",{\"1\":{\"1047\":1}}],[\"12306\",{\"1\":{\"874\":1}}],[\"123\",{\"0\":{\"254\":1},\"1\":{\"292\":1,\"978\":1,\"1167\":4,\"1168\":2}}],[\"1232\",{\"1\":{\"116\":1}}],[\"12258有5种不同的翻译\",{\"1\":{\"318\":1}}],[\"12258\",{\"1\":{\"318\":1}}],[\"122\",{\"0\":{\"253\":1}}],[\"121\",{\"0\":{\"252\":1}}],[\"1278\",{\"1\":{\"500\":1}}],[\"127\",{\"1\":{\"58\":1,\"90\":3,\"425\":1,\"426\":5,\"428\":6,\"429\":2,\"972\":1,\"1063\":1,\"1067\":1,\"1079\":1,\"1080\":6,\"1095\":1,\"1099\":1}}],[\"127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2fa\",{\"1\":{\"55\":1}}],[\"1280\",{\"1\":{\"116\":1}}],[\"128\",{\"1\":{\"26\":8,\"410\":1}}],[\"12\",{\"0\":{\"284\":1},\"1\":{\"4\":1,\"27\":1,\"49\":1,\"276\":1,\"300\":2,\"316\":1,\"319\":1,\"321\":2,\"523\":1,\"978\":1,\"1002\":1,\"1080\":4,\"1124\":1,\"1126\":2,\"1144\":1,\"1207\":1,\"1212\":6}}],[\"10us\",{\"1\":{\"1135\":2}}],[\"107088\",{\"1\":{\"1063\":1}}],[\"10表示gomaxprocs的值\",{\"1\":{\"970\":1}}],[\"10表示对quicksort函数进行基准测试\",{\"1\":{\"970\":1}}],[\"10后面对未来的世界时还会认为黄金是等价物吗\",{\"1\":{\"534\":1}}],[\"10年毕业会不会更好\",{\"1\":{\"764\":1}}],[\"10年\",{\"1\":{\"534\":1}}],[\"1092\",{\"1\":{\"500\":1}}],[\"10s\",{\"1\":{\"436\":1,\"1161\":1}}],[\"1024\",{\"1\":{\"288\":1,\"1073\":2}}],[\"1035\",{\"0\":{\"261\":1}}],[\"101\",{\"1\":{\"257\":2,\"973\":1}}],[\"1049\",{\"0\":{\"238\":1}}],[\"100ms\",{\"1\":{\"1034\":1}}],[\"10086\",{\"1\":{\"425\":1}}],[\"100~1000\",{\"1\":{\"358\":1,\"360\":1}}],[\"10004\",{\"1\":{\"428\":1}}],[\"10003\",{\"1\":{\"428\":1}}],[\"10002\",{\"1\":{\"428\":1}}],[\"10001\",{\"1\":{\"428\":1}}],[\"1000\",{\"1\":{\"377\":1}}],[\"10000\",{\"1\":{\"288\":1,\"417\":1,\"426\":1,\"428\":1,\"436\":3,\"1134\":2}}],[\"1000000000\",{\"1\":{\"899\":2}}],[\"1000000008\",{\"1\":{\"286\":1}}],[\"1000000007\",{\"1\":{\"281\":1,\"286\":3}}],[\"1000usdt却可以兑换1025个pusd\",{\"1\":{\"177\":1}}],[\"100+nums\",{\"1\":{\"217\":1}}],[\"100\",{\"1\":{\"150\":1,\"159\":1,\"169\":1,\"362\":3,\"458\":1,\"523\":1,\"784\":1,\"969\":2,\"973\":1,\"1034\":1,\"1055\":1,\"1063\":1}}],[\"100k为购买前话题的总数额\",{\"1\":{\"26\":1}}],[\"100k\",{\"1\":{\"26\":1}}],[\"10k\",{\"1\":{\"26\":3}}],[\"10\",{\"0\":{\"281\":1,\"282\":1,\"1285\":1},\"1\":{\"4\":1,\"162\":1,\"163\":1,\"169\":1,\"257\":1,\"274\":1,\"276\":1,\"285\":2,\"288\":1,\"300\":2,\"316\":1,\"317\":2,\"318\":2,\"321\":3,\"325\":2,\"330\":3,\"332\":3,\"360\":3,\"373\":1,\"417\":1,\"426\":1,\"447\":1,\"516\":2,\"523\":2,\"537\":2,\"543\":1,\"560\":1,\"579\":1,\"695\":1,\"751\":4,\"855\":9,\"899\":2,\"959\":7,\"970\":2,\"979\":3,\"1019\":3,\"1034\":3,\"1055\":1,\"1063\":2,\"1067\":1,\"1072\":3,\"1086\":1,\"1124\":1,\"1126\":5,\"1127\":2,\"1135\":1,\"1144\":2,\"1146\":1,\"1187\":2,\"1198\":1,\"1212\":1,\"1221\":1,\"1234\":1,\"1235\":1}}],[\"目光短浅的5岁孩子来管理\",{\"1\":{\"586\":1}}],[\"目\",{\"1\":{\"426\":3}}],[\"目的是使政府更有效地监控公民并禁止公民去参与有关网络自由的事\",{\"1\":{\"533\":1}}],[\"目的是sds可以直接重用c字符串函数库里的函数\",{\"1\":{\"393\":1,\"402\":1}}],[\"目的是为了减少磁盘\",{\"1\":{\"377\":1}}],[\"目的是为了解决可重复读隔离级别下幻读的现象\",{\"1\":{\"372\":1}}],[\"目前桶中数目是否至少为\",{\"1\":{\"1036\":1}}],[\"目前的\",{\"1\":{\"1136\":1}}],[\"目前的大部分已经是\",{\"1\":{\"631\":1}}],[\"目前的优先级高于它\",{\"1\":{\"577\":1}}],[\"目前即使我们在互联网上\",{\"1\":{\"531\":1}}],[\"目前正在执行的脚本的数量\",{\"1\":{\"426\":1}}],[\"目前也有了比较成熟的开源中间件\",{\"1\":{\"385\":1}}],[\"目前有一个好的趋势就是有越来越多的金融机构愿意加入到去中心化领域中来\",{\"1\":{\"188\":1}}],[\"目前有1217万美元\",{\"1\":{\"187\":1}}],[\"目前\",{\"1\":{\"118\":1,\"151\":1,\"647\":1,\"686\":1}}],[\"目前支持的联合文件系统包括\",{\"1\":{\"78\":1}}],[\"目前就职于七牛云\",{\"1\":{\"3\":1}}],[\"目录下\",{\"1\":{\"1067\":1}}],[\"目录下基本用法步骤\",{\"1\":{\"977\":1}}],[\"目录下的\",{\"1\":{\"60\":1}}],[\"目录新建文件\",{\"1\":{\"74\":1}}],[\"目录到容器的\",{\"1\":{\"74\":1}}],[\"目录\",{\"1\":{\"74\":1,\"76\":1}}],[\"目标才需要重建\",{\"1\":{\"1025\":1}}],[\"目标sentinel在接收到sentinel\",{\"1\":{\"426\":1}}],[\"目标sentinel\",{\"1\":{\"426\":1}}],[\"目标和\",{\"0\":{\"239\":1}}],[\"目标7\",{\"1\":{\"4\":1}}],[\"目标6\",{\"1\":{\"4\":1}}],[\"目标4\",{\"1\":{\"4\":1}}],[\"目标\",{\"1\":{\"4\":1,\"1025\":1}}],[\"目标3\",{\"1\":{\"4\":1}}],[\"目标是减脂10公斤\",{\"1\":{\"4\":1}}],[\"目标2\",{\"1\":{\"4\":1}}],[\"目标1\",{\"1\":{\"4\":1}}],[\"k++\",{\"1\":{\"948\":5}}],[\"k+1\",{\"1\":{\"255\":1}}],[\"k是temp的第一个位置\",{\"1\":{\"948\":1}}],[\"kyc\",{\"1\":{\"705\":1}}],[\"kucoin\",{\"1\":{\"704\":1}}],[\"kubernetes\",{\"1\":{\"48\":1,\"994\":1}}],[\"korea\",{\"1\":{\"548\":1}}],[\"khan\",{\"1\":{\"523\":1}}],[\"kipcoin\",{\"1\":{\"704\":1}}],[\"kilometer\",{\"1\":{\"560\":1}}],[\"kilometers\",{\"1\":{\"523\":3}}],[\"kill\",{\"1\":{\"548\":1}}],[\"kinnock\",{\"1\":{\"628\":1}}],[\"kings\",{\"1\":{\"523\":1}}],[\"kind之外的方法都会导致panic\",{\"1\":{\"1191\":1}}],[\"kind你可以理解为字段的底层类型\",{\"1\":{\"1188\":1}}],[\"kindle\",{\"1\":{\"772\":1}}],[\"kinds\",{\"1\":{\"523\":1,\"540\":1}}],[\"kind\",{\"1\":{\"448\":2,\"449\":1,\"523\":2,\"543\":1,\"1139\":1,\"1188\":9,\"1190\":3}}],[\"kit\",{\"1\":{\"3\":1}}],[\"kthlargest\",{\"1\":{\"327\":1}}],[\"k>0\",{\"1\":{\"294\":1}}],[\"k\",{\"1\":{\"208\":13,\"209\":6,\"240\":6,\"255\":6,\"285\":6,\"286\":6,\"294\":6,\"312\":2,\"313\":5,\"327\":6,\"335\":2,\"336\":6,\"890\":2,\"948\":10,\"1093\":4}}],[\"ke\",{\"1\":{\"978\":1}}],[\"kernighan\",{\"1\":{\"827\":6}}],[\"kennedy\",{\"1\":{\"628\":1}}],[\"keep\",{\"1\":{\"537\":1,\"1055\":1}}],[\"keepalive\",{\"1\":{\"193\":1}}],[\"key=>value\",{\"1\":{\"1217\":1}}],[\"key不能以grpc开头\",{\"1\":{\"1093\":1}}],[\"key不存在\",{\"1\":{\"436\":1}}],[\"key以\",{\"1\":{\"1093\":1}}],[\"key是string\",{\"1\":{\"1093\":1}}],[\"keyvalidwebsite\",{\"1\":{\"976\":3}}],[\"keyword\",{\"1\":{\"915\":12}}],[\"key存在则插入失败\",{\"1\":{\"436\":1}}],[\"keys\",{\"0\":{\"701\":1},\"1\":{\"436\":2,\"701\":2}}],[\"keys跳跃表来保存槽和键之间的关系\",{\"1\":{\"430\":1}}],[\"keyslot\",{\"1\":{\"429\":2}}],[\"keyslot<key>命令可以查看一个给定键属于哪个槽\",{\"1\":{\"429\":1}}],[\"keys字典进行检查\",{\"1\":{\"424\":1}}],[\"keys字典\",{\"1\":{\"424\":2}}],[\"key就是所有的set的值\",{\"1\":{\"408\":1}}],[\"keydestructor\",{\"1\":{\"395\":1}}],[\"keydup\",{\"1\":{\"395\":1}}],[\"key2\",{\"1\":{\"395\":1,\"403\":1,\"405\":2,\"409\":6,\"1084\":1}}],[\"key1\",{\"1\":{\"395\":1,\"403\":1,\"405\":2,\"409\":6,\"1084\":1,\"1093\":1,\"1094\":2,\"1095\":2}}],[\"keycompare\",{\"1\":{\"395\":1}}],[\"key\",{\"0\":{\"373\":1,\"420\":1},\"1\":{\"4\":1,\"74\":1,\"152\":1,\"343\":2,\"361\":3,\"362\":4,\"370\":1,\"373\":8,\"374\":1,\"394\":1,\"395\":4,\"403\":49,\"405\":14,\"407\":20,\"409\":9,\"410\":24,\"411\":2,\"413\":2,\"414\":20,\"419\":3,\"420\":1,\"429\":3,\"431\":1,\"436\":8,\"933\":2,\"976\":4,\"1045\":1,\"1047\":1,\"1093\":2,\"1094\":2,\"1095\":2,\"1099\":1,\"1218\":2,\"1227\":2}}],[\"knowledge\",{\"1\":{\"557\":2}}],[\"knows\",{\"1\":{\"523\":1}}],[\"known\",{\"1\":{\"523\":3,\"1086\":1,\"1087\":1,\"1118\":2}}],[\"know\",{\"1\":{\"90\":2,\"523\":4,\"543\":2,\"548\":3,\"563\":2,\"1115\":1}}],[\"kb\",{\"1\":{\"60\":1}}],[\"kr\",{\"1\":{\"4\":1}}],[\"occasionally\",{\"1\":{\"523\":1,\"543\":1,\"560\":1}}],[\"occupies\",{\"1\":{\"543\":1}}],[\"occupied\",{\"1\":{\"523\":1}}],[\"occupy\",{\"1\":{\"519\":1}}],[\"occurred\",{\"1\":{\"523\":1}}],[\"occurs\",{\"1\":{\"468\":2}}],[\"own\",{\"1\":{\"523\":4,\"550\":1,\"563\":1}}],[\"ownership\",{\"1\":{\"447\":2}}],[\"ownership`\",{\"1\":{\"447\":1}}],[\"owner\",{\"1\":{\"111\":1}}],[\"oxygen\",{\"1\":{\"523\":1}}],[\"othertime\",{\"1\":{\"1212\":4}}],[\"otherworldly\",{\"1\":{\"543\":1}}],[\"others\",{\"1\":{\"543\":2,\"547\":1}}],[\"other\",{\"1\":{\"448\":2,\"463\":2,\"523\":2,\"537\":1,\"540\":1,\"543\":2,\"563\":1,\"1118\":1,\"1119\":6,\"1121\":1,\"1122\":1,\"1123\":2,\"1125\":3}}],[\"osstr\",{\"1\":{\"471\":1}}],[\"osstring\",{\"1\":{\"471\":1}}],[\"os\",{\"1\":{\"448\":1,\"449\":2,\"511\":1,\"516\":1,\"1063\":2,\"1067\":6,\"1072\":4,\"1146\":2,\"1153\":2,\"1163\":8,\"1169\":3,\"1172\":5,\"1173\":1,\"1181\":3,\"1182\":1}}],[\"omitted\",{\"1\":{\"447\":1}}],[\"o的限制\",{\"1\":{\"412\":1}}],[\"o很高有什么优化点\",{\"1\":{\"355\":1}}],[\"obvious\",{\"1\":{\"557\":1}}],[\"obviously\",{\"1\":{\"547\":1}}],[\"obsidian\",{\"1\":{\"710\":1}}],[\"observers\",{\"1\":{\"844\":8}}],[\"observer\",{\"1\":{\"844\":12}}],[\"observe\",{\"1\":{\"523\":1}}],[\"obstaclegrid\",{\"1\":{\"230\":12}}],[\"object对象\",{\"1\":{\"1148\":1}}],[\"objectstructure\",{\"1\":{\"867\":5}}],[\"objectively\",{\"1\":{\"426\":1}}],[\"objective\",{\"1\":{\"4\":1}}],[\"obj\",{\"1\":{\"395\":2}}],[\"oauth2\",{\"1\":{\"1099\":1}}],[\"oauth\",{\"0\":{\"195\":1},\"1\":{\"192\":2,\"193\":3,\"195\":4,\"1099\":1}}],[\"oldp\",{\"1\":{\"1135\":2}}],[\"oldblock\",{\"1\":{\"514\":3,\"515\":3}}],[\"old\",{\"1\":{\"152\":2,\"377\":12,\"534\":1,\"537\":1,\"543\":2,\"808\":1}}],[\"out=proto\",{\"1\":{\"1084\":2}}],[\"out=pb\",{\"1\":{\"1084\":2}}],[\"out=\",{\"1\":{\"1067\":3,\"1072\":3,\"1079\":3,\"1084\":2}}],[\"out打开\",{\"1\":{\"969\":1}}],[\"outperformed\",{\"1\":{\"543\":1}}],[\"outputn\",{\"1\":{\"1172\":4}}],[\"outputs\",{\"1\":{\"1119\":1,\"1122\":1,\"1124\":1,\"1127\":2}}],[\"output\",{\"1\":{\"279\":2,\"991\":1,\"1119\":1,\"1120\":3,\"1126\":1,\"1153\":1,\"1169\":2,\"1172\":5,\"1173\":1,\"1181\":1}}],[\"outer\",{\"1\":{\"523\":1}}],[\"outside\",{\"1\":{\"523\":4}}],[\"outstanding\",{\"1\":{\"152\":4}}],[\"outward\",{\"1\":{\"523\":2}}],[\"out\",{\"1\":{\"447\":2,\"523\":2,\"537\":1,\"543\":1,\"547\":2,\"549\":1,\"969\":2,\"1073\":1}}],[\"our\",{\"1\":{\"90\":8,\"523\":9,\"543\":3,\"563\":5,\"975\":1,\"1073\":1,\"1118\":2,\"1119\":1,\"1124\":1}}],[\"okay\",{\"1\":{\"560\":1}}],[\"ok\",{\"1\":{\"152\":10,\"275\":2,\"393\":1,\"402\":1,\"428\":3,\"448\":8,\"449\":2,\"450\":6,\"451\":2,\"505\":1,\"519\":1,\"898\":1,\"899\":1,\"933\":2,\"959\":1,\"967\":2,\"969\":2,\"970\":2,\"972\":1,\"973\":1,\"975\":1,\"976\":3,\"978\":2,\"1010\":2,\"1037\":1,\"1045\":2,\"1055\":8,\"1095\":2,\"1099\":4,\"1123\":1,\"1127\":6,\"1189\":2,\"1192\":4}}],[\"oh\",{\"1\":{\"90\":3,\"523\":1,\"563\":1}}],[\"origlistener\",{\"1\":{\"1055\":2}}],[\"originator\",{\"1\":{\"838\":6}}],[\"original\",{\"1\":{\"519\":1,\"523\":2,\"1124\":1}}],[\"ordinary\",{\"1\":{\"523\":2,\"543\":2}}],[\"orderinfogetter\",{\"1\":{\"980\":4}}],[\"ordering\",{\"1\":{\"458\":6}}],[\"orderstate\",{\"1\":{\"1010\":3}}],[\"orders\",{\"1\":{\"563\":2,\"980\":12}}],[\"order\",{\"1\":{\"351\":1,\"352\":1,\"353\":1,\"523\":3,\"563\":1,\"980\":12,\"1009\":1,\"1010\":20}}],[\"organisms\",{\"1\":{\"523\":1}}],[\"organic\",{\"1\":{\"523\":1}}],[\"org\",{\"1\":{\"523\":1,\"534\":2,\"609\":1,\"1033\":1,\"1055\":1,\"1067\":5,\"1074\":2,\"1086\":1,\"1087\":1,\"1093\":1}}],[\"orm\",{\"1\":{\"191\":1,\"192\":1}}],[\"oraclesetup\",{\"1\":{\"152\":1}}],[\"oracle\",{\"0\":{\"165\":1},\"1\":{\"152\":3}}],[\"or\",{\"0\":{\"1115\":1},\"1\":{\"90\":1,\"152\":6,\"192\":1,\"353\":2,\"425\":1,\"448\":1,\"449\":2,\"463\":2,\"523\":4,\"537\":1,\"543\":4,\"547\":7,\"548\":1,\"557\":1,\"1052\":1,\"1055\":3,\"1119\":2,\"1123\":1,\"1124\":1,\"1126\":2,\"1179\":1}}],[\"often\",{\"1\":{\"543\":4,\"560\":1}}],[\"offcommand\",{\"1\":{\"820\":5}}],[\"off\",{\"1\":{\"523\":1,\"540\":1,\"820\":8,\"838\":1,\"973\":1,\"1055\":1}}],[\"offset是从服务器当前的复制偏移量\",{\"1\":{\"425\":1}}],[\"offset\",{\"1\":{\"403\":4,\"410\":1,\"425\":3,\"426\":1,\"1208\":1,\"1212\":1}}],[\"offer\",{\"0\":{\"318\":1,\"1264\":1},\"1\":{\"759\":1},\"2\":{\"339\":1}}],[\"of\",{\"0\":{\"1118\":1},\"1\":{\"90\":4,\"95\":1,\"447\":2,\"475\":1,\"480\":1,\"519\":2,\"523\":100,\"537\":9,\"540\":7,\"543\":46,\"547\":30,\"548\":6,\"549\":1,\"550\":4,\"557\":3,\"560\":1,\"563\":3,\"969\":2,\"989\":1,\"1002\":2,\"1019\":2,\"1038\":3,\"1055\":3,\"1115\":1,\"1116\":4,\"1117\":2,\"1118\":8,\"1119\":7,\"1120\":5,\"1121\":1,\"1122\":7,\"1123\":2,\"1124\":4,\"1126\":2,\"1127\":2,\"1142\":1,\"1144\":2,\"1179\":1,\"1188\":1}}],[\"oncommand\",{\"1\":{\"820\":5}}],[\"oncecloselistener\",{\"1\":{\"1055\":1}}],[\"oncecell\",{\"0\":{\"463\":1},\"1\":{\"463\":1}}],[\"once\",{\"0\":{\"1145\":1},\"1\":{\"447\":1,\"459\":1,\"460\":1,\"463\":1,\"523\":2,\"547\":2,\"899\":3,\"1116\":2,\"1127\":1,\"1141\":1,\"1145\":8}}],[\"onion\",{\"1\":{\"523\":1}}],[\"onunauthenticated\",{\"1\":{\"199\":1}}],[\"on\",{\"0\":{\"721\":1,\"1127\":1},\"1\":{\"90\":1,\"449\":1,\"516\":1,\"519\":1,\"523\":10,\"540\":3,\"543\":9,\"547\":4,\"548\":2,\"549\":2,\"560\":1,\"563\":4,\"721\":3,\"820\":8,\"838\":2,\"1045\":1,\"1047\":1,\"1054\":1,\"1055\":9,\"1072\":1,\"1079\":1,\"1117\":1,\"1118\":2,\"1120\":2,\"1123\":1,\"1124\":1,\"1125\":2,\"1126\":1,\"1127\":2,\"1135\":1,\"1193\":2}}],[\"onlyvalidargs\",{\"1\":{\"991\":1}}],[\"only\",{\"1\":{\"74\":1,\"414\":1,\"425\":1,\"523\":4,\"537\":2,\"540\":2,\"543\":4,\"547\":3,\"549\":2,\"550\":2,\"557\":1,\"563\":2,\"1055\":1,\"1056\":1,\"1119\":1,\"1126\":10,\"1217\":1}}],[\"oneof\",{\"1\":{\"1084\":2}}],[\"one域名到期了\",{\"1\":{\"602\":1}}],[\"oneself\",{\"1\":{\"523\":1,\"550\":1}}],[\"ones\",{\"1\":{\"523\":2}}],[\"one命令\",{\"1\":{\"425\":1,\"426\":1}}],[\"onenum++\",{\"1\":{\"240\":1}}],[\"onenum\",{\"1\":{\"240\":5}}],[\"onenum个1\",{\"1\":{\"240\":1}}],[\"one\",{\"1\":{\"16\":1,\"152\":2,\"195\":5,\"523\":7,\"537\":1,\"543\":6,\"547\":1,\"563\":2,\"992\":1,\"1053\":1,\"1055\":1,\"1115\":1,\"1121\":2,\"1125\":1,\"1228\":1,\"1229\":4,\"1234\":1,\"1235\":2}}],[\"overrides\",{\"1\":{\"1179\":1}}],[\"overhead\",{\"1\":{\"1118\":2}}],[\"overall\",{\"1\":{\"547\":1}}],[\"overlap\",{\"1\":{\"523\":2,\"1118\":2}}],[\"overlayfs\",{\"1\":{\"61\":1,\"78\":1}}],[\"overflowed\",{\"1\":{\"458\":2}}],[\"over\",{\"1\":{\"90\":1,\"548\":1}}],[\"overview\",{\"1\":{\"17\":1,\"33\":1}}],[\"o\",{\"1\":{\"58\":2,\"90\":4,\"301\":1,\"353\":1,\"357\":1,\"358\":3,\"360\":6,\"399\":2,\"412\":5,\"426\":1,\"428\":1,\"474\":1,\"560\":1,\"838\":19,\"844\":10,\"867\":15,\"875\":2,\"982\":1,\"1010\":19,\"1023\":1,\"1025\":2,\"1026\":1,\"1099\":2,\"1134\":1,\"1135\":2,\"1145\":8,\"1153\":4,\"1169\":3,\"1172\":3,\"1181\":3}}],[\"op则表示每次操作进行了0次内存分配\",{\"1\":{\"970\":1}}],[\"op表示每次操作内存分配了0字节\",{\"1\":{\"970\":1}}],[\"op表示24164910次调用耗时平均值为49\",{\"1\":{\"970\":1}}],[\"op\",{\"1\":{\"899\":6,\"970\":4,\"976\":2}}],[\"opinion\",{\"1\":{\"547\":1,\"563\":1}}],[\"opposition\",{\"1\":{\"540\":1}}],[\"operator\",{\"1\":{\"1239\":4,\"1242\":1}}],[\"operate\",{\"1\":{\"921\":5}}],[\"operations\",{\"1\":{\"543\":1}}],[\"operation\",{\"1\":{\"403\":1,\"543\":3,\"547\":1,\"1126\":1,\"1127\":1}}],[\"operational\",{\"1\":{\"152\":2}}],[\"openfile\",{\"1\":{\"1169\":1,\"1172\":2,\"1181\":1}}],[\"opened\",{\"1\":{\"523\":1}}],[\"opening\",{\"1\":{\"448\":3,\"975\":2}}],[\"openid\",{\"1\":{\"193\":1}}],[\"open返回的是result<t\",{\"1\":{\"448\":1}}],[\"open\",{\"1\":{\"193\":1,\"448\":11,\"449\":2,\"450\":7,\"451\":2,\"537\":1,\"547\":1,\"563\":1,\"605\":1,\"710\":1,\"725\":1,\"975\":1,\"1120\":1,\"1153\":1,\"1225\":1,\"1237\":1}}],[\"openjdk\",{\"1\":{\"57\":1}}],[\"opens\",{\"1\":{\"46\":1,\"47\":1,\"48\":1,\"60\":1,\"260\":1}}],[\"optype\",{\"1\":{\"1242\":2}}],[\"opts\",{\"1\":{\"1097\":4,\"1099\":7,\"1242\":1}}],[\"opt=paths=source\",{\"1\":{\"1067\":3,\"1072\":3,\"1079\":3,\"1084\":5}}],[\"optional\",{\"1\":{\"1084\":2}}],[\"optionally\",{\"1\":{\"1055\":1}}],[\"optionfunc\",{\"1\":{\"875\":7}}],[\"option也可以用\",{\"1\":{\"451\":1}}],[\"option\",{\"1\":{\"448\":1,\"549\":1,\"991\":2,\"1067\":2,\"1072\":2,\"1079\":1,\"1080\":3,\"1084\":3}}],[\"option<\",{\"1\":{\"152\":1,\"461\":2,\"462\":4}}],[\"option<i80f48>\",{\"1\":{\"152\":1}}],[\"options\",{\"1\":{\"74\":1,\"976\":1,\"991\":1,\"1227\":2,\"1237\":3}}],[\"optimistic\",{\"1\":{\"424\":1}}],[\"optimism\",{\"1\":{\"144\":1}}],[\"optimal\",{\"1\":{\"152\":7}}],[\"opt\",{\"1\":{\"60\":1,\"1237\":2}}],[\"ops\",{\"1\":{\"3\":1,\"447\":4}}],[\"我大七牛提供的qmgo最好用了\",{\"1\":{\"1216\":1}}],[\"我大部分时间都在分析自己的职业道路\",{\"1\":{\"572\":1}}],[\"我觉得通过示例来学习time包比较好\",{\"1\":{\"1205\":1}}],[\"我觉得这种消费习惯可能不太符合我的消费习惯\",{\"1\":{\"743\":1}}],[\"我详细介绍了go语言中反射包的使用方法\",{\"1\":{\"1194\":1}}],[\"我给出了一个应用示例\",{\"1\":{\"1194\":1}}],[\"我个人是从\",{\"1\":{\"804\":1}}],[\"我个人感触最深的还是冯晓东在直播中没有任何抱怨情绪\",{\"1\":{\"592\":1}}],[\"我可能会告诉刚上大学的自己\",{\"1\":{\"776\":1}}],[\"我可以在这里说出我选择当前大学的判断依据以及理由\",{\"1\":{\"759\":1}}],[\"我可以任何事情都不用思考\",{\"1\":{\"698\":1}}],[\"我可以相信我想要的\",{\"1\":{\"637\":1}}],[\"我可以看到许多跳跃点\",{\"1\":{\"588\":1}}],[\"我最好不要使用它\",{\"1\":{\"771\":2}}],[\"我父亲仍然用支票支付一切费用\",{\"1\":{\"771\":1}}],[\"我固执地认为没必要纠结这件事情\",{\"1\":{\"764\":1}}],[\"我选择了当前的大学\",{\"1\":{\"759\":1}}],[\"我却要被替换掉\",{\"1\":{\"751\":1}}],[\"我却觉得休息如果只是躺在床上刷一天的手机\",{\"1\":{\"695\":1}}],[\"我连续\",{\"1\":{\"751\":1}}],[\"我买了nike的一双跑鞋nike\",{\"1\":{\"743\":1}}],[\"我建议是选择自己喜欢的事情\",{\"1\":{\"740\":1}}],[\"我说出一句让朋友惊讶不已的结论\",{\"1\":{\"738\":1}}],[\"我感受到比较好的功能\",{\"1\":{\"731\":1}}],[\"我感觉和我认为有时可以交换使用但很混乱\",{\"1\":{\"626\":1}}],[\"我对时间属性感受颇深的就是\",{\"1\":{\"757\":1}}],[\"我对源代码进行了小改动\",{\"1\":{\"725\":1}}],[\"我对过去错误决策的清晰认知\",{\"1\":{\"588\":1}}],[\"我目前没有任何腾讯股票\",{\"1\":{\"714\":1}}],[\"我目前的工作描述是\",{\"1\":{\"579\":1}}],[\"我遇到了一个需要做取舍的问题\",{\"1\":{\"710\":1}}],[\"我之前使用的文档记录方案是notion\",{\"1\":{\"710\":1}}],[\"我之前在知乎上看到老王推荐过李笑来的书\",{\"1\":{\"669\":1}}],[\"我无意去批判这样的行为\",{\"1\":{\"709\":1}}],[\"我失去了我持有的钱\",{\"1\":{\"706\":1}}],[\"我现在重新思考这个问题\",{\"1\":{\"695\":1}}],[\"我开始重新思考这个问题\",{\"1\":{\"695\":1}}],[\"我会介绍一下grpc常见的语法以及常见的包的调用\",{\"1\":{\"1083\":1}}],[\"我会想我怎样才能build一些东西\",{\"1\":{\"739\":1}}],[\"我会直接向他对话\",{\"1\":{\"692\":1}}],[\"我会用很直白的话讲明白\",{\"1\":{\"516\":1}}],[\"我怎么做呢\",{\"1\":{\"692\":1}}],[\"我怎样才能在工作中取得成功\",{\"1\":{\"570\":1}}],[\"我关于为什么要独立思考的理由在现实生活当中是很功利的\",{\"1\":{\"680\":1}}],[\"我有一个天然与绝大多数人不一样的看法\",{\"1\":{\"695\":1}}],[\"我有一个用了挺长时间的方法也推荐给你们\",{\"1\":{\"677\":1}}],[\"我有资格写这个话题吗\",{\"1\":{\"572\":1}}],[\"我过去三年里不断读李笑来的书\",{\"1\":{\"669\":1}}],[\"我过去的一个经验告诉我\",{\"1\":{\"611\":1}}],[\"我总觉得这句话有点以偏概全\",{\"1\":{\"666\":1}}],[\"我应该以内容质量为导向\",{\"1\":{\"660\":1}}],[\"我应该选择哪一条\",{\"1\":{\"570\":1}}],[\"我甚至想自己写一套博客程序出来\",{\"1\":{\"660\":1}}],[\"我甚至怎样才能确定一条道路\",{\"1\":{\"570\":1}}],[\"我需要一个适合自学的地方\",{\"1\":{\"759\":1}}],[\"我需要判断未来相当长一段时间的趋势\",{\"1\":{\"758\":1}}],[\"我需要思考\",{\"1\":{\"660\":1}}],[\"我需要对读过的信息加以整理\",{\"1\":{\"605\":1}}],[\"我每天需要绞尽脑汁去思考\",{\"1\":{\"660\":1}}],[\"我曾经写的文章其实不能够叫做文章\",{\"1\":{\"660\":2}}],[\"我仔细思考了这个问题\",{\"1\":{\"660\":2}}],[\"我仔细想想了大概有三个原因\",{\"1\":{\"592\":1}}],[\"我这里使用了跃迁这个词\",{\"1\":{\"646\":1}}],[\"我这里就用外层for循环遍历a\",{\"1\":{\"259\":1}}],[\"我为什么讲这个例子\",{\"1\":{\"631\":1}}],[\"我比其他人重要\",{\"1\":{\"627\":1}}],[\"我比你相机好一点的情况\",{\"1\":{\"9\":1}}],[\"我成为这样是因为我想成为这样\",{\"1\":{\"618\":1}}],[\"我首先来说说我的定义\",{\"1\":{\"614\":1}}],[\"我后面都会拿出来说一说的\",{\"1\":{\"611\":1}}],[\"我后面会写文章详细说明\",{\"1\":{\"605\":1}}],[\"我今天早上打开窗帘\",{\"1\":{\"609\":1}}],[\"我经常会沿着小县城的环城公路骑行绕圈\",{\"1\":{\"698\":1}}],[\"我经常会冒出各种项目想法\",{\"1\":{\"698\":1}}],[\"我经常和ai对话\",{\"1\":{\"605\":1}}],[\"我经常写到我们的恐惧是多么的不理性\",{\"1\":{\"588\":1}}],[\"我如果不按照我的想法去做那么十年后我一定会懊悔不已\",{\"1\":{\"595\":1}}],[\"我看到不仅仅是一个项目创始人的道歉\",{\"1\":{\"592\":1}}],[\"我学到的\",{\"1\":{\"592\":1}}],[\"我竟然出奇的淡定\",{\"1\":{\"592\":1}}],[\"我所了解的\",{\"0\":{\"591\":1}}],[\"我所读过的书\",{\"1\":{\"500\":1}}],[\"我未来的目标不是避免犯错\",{\"1\":{\"588\":1}}],[\"我从未经历过任何像临终那样的事情\",{\"1\":{\"588\":1}}],[\"我从事律师工作\",{\"1\":{\"571\":1}}],[\"我知道\",{\"1\":{\"586\":1,\"653\":1}}],[\"我知道你想要这些东西\",{\"1\":{\"577\":1}}],[\"我越来越清楚\",{\"1\":{\"586\":1}}],[\"我指的是长期的坚持不懈\",{\"1\":{\"582\":1}}],[\"我指的是所有回溯法的问题都可以抽象为树形结构\",{\"1\":{\"206\":1}}],[\"我喜欢这些有价值有思想能可以让我成长的东西\",{\"1\":{\"689\":1}}],[\"我喜欢把通往\",{\"1\":{\"580\":1}}],[\"我喜欢架子的想法\",{\"1\":{\"577\":1}}],[\"我猜哪怕没有变得更好\",{\"1\":{\"734\":1}}],[\"我猜大多数人都有\",{\"1\":{\"734\":1}}],[\"我猜大概率是不能\",{\"1\":{\"692\":1}}],[\"我猜想\",{\"1\":{\"578\":1}}],[\"我猜我知道这是真的\",{\"1\":{\"575\":1}}],[\"我猜我之所以有这个价值观\",{\"1\":{\"575\":1}}],[\"我保证过段时间\",{\"1\":{\"577\":1}}],[\"我决定其他事情更重要\",{\"1\":{\"577\":1}}],[\"我决定开发一个新的\",{\"1\":{\"521\":1}}],[\"我肯定他们是对的\",{\"1\":{\"575\":1}}],[\"我什么都不懂\",{\"1\":{\"575\":1}}],[\"我何以浪费时间帮助他人\",{\"1\":{\"573\":1}}],[\"我预测我们许多人的需求与恐惧点都很相似\",{\"1\":{\"573\":1}}],[\"我拓宽了对这个话题的看法\",{\"1\":{\"572\":1}}],[\"我一直都很迷茫\",{\"1\":{\"572\":1}}],[\"我一开始接触互联网的时候已经是这种传统互联网的末期阶段\",{\"1\":{\"532\":1}}],[\"我不会使用它\",{\"1\":{\"771\":1}}],[\"我不需要绞尽脑汁用一个完全符合我想法的博客系统\",{\"1\":{\"660\":1}}],[\"我不确定我的观点和想法在未来长达十年二十年的维度上依然正确\",{\"1\":{\"595\":1}}],[\"我不知道有多少人愿意拿自己的职业生涯去赌刮刮卡\",{\"1\":{\"578\":1}}],[\"我不知道你是如何看待职业道路的难度的\",{\"1\":{\"578\":1}}],[\"我不了解您具体情况\",{\"1\":{\"572\":1}}],[\"我不是第一个去火星的\",{\"1\":{\"674\":1}}],[\"我不是奴隶\",{\"1\":{\"552\":1}}],[\"我不是药神\",{\"1\":{\"505\":1}}],[\"我注意到这个区别无处不在\",{\"1\":{\"571\":1}}],[\"我写了go语言常见的包的使用\",{\"1\":{\"660\":1}}],[\"我写了个app可以帮助我入定\",{\"0\":{\"519\":1}}],[\"我写过有关\",{\"1\":{\"571\":1}}],[\"我认为真正放松大脑的一定不是这种活动\",{\"1\":{\"787\":1}}],[\"我认为是\",{\"1\":{\"767\":1}}],[\"我认为可以排到未来两三年最重要的事情\",{\"1\":{\"760\":1}}],[\"我认为可能的情况是\",{\"1\":{\"692\":1}}],[\"我认为上面的话是非常令人绝望的\",{\"1\":{\"746\":1}}],[\"我认为关键的是你可以直接向ai指出他的错误\",{\"1\":{\"692\":1}}],[\"我认为互联网最佳的商业模式\",{\"0\":{\"686\":1}}],[\"我认为他的聪明程度是以亿分之一衡量的\",{\"1\":{\"669\":1}}],[\"我认为而不是我知道\",{\"1\":{\"657\":1}}],[\"我认为在当今的互联网的影响下\",{\"1\":{\"610\":1}}],[\"我认为应该对其他物种也应该重视起气候\",{\"1\":{\"609\":1}}],[\"我认为临终遗憾可能只是你真实的自我在思考你从未能够实现的人生部分\",{\"1\":{\"588\":1}}],[\"我认为这是生活中值得的少数几个主题之一\",{\"1\":{\"588\":1}}],[\"我认为这是一个框架\",{\"1\":{\"572\":1}}],[\"我认为这归结为三个因素\",{\"1\":{\"581\":1}}],[\"我认为这些遗憾很大程度上源于这样一个事实\",{\"1\":{\"570\":1}}],[\"我认为它可以帮助你做出职业决定\",{\"1\":{\"569\":1}}],[\"我是不会在这两个方面有长足进步的\",{\"1\":{\"758\":1}}],[\"我是直接看的英文版的\",{\"1\":{\"669\":1}}],[\"我是从2023\",{\"1\":{\"660\":1}}],[\"我是律师\",{\"1\":{\"571\":1}}],[\"我是谁\",{\"1\":{\"570\":1}}],[\"我是离心\",{\"1\":{\"3\":1}}],[\"我希望这篇文章能对你有所帮助\",{\"1\":{\"828\":1}}],[\"我希望这篇文章能帮助你们按下思维过程的重启键\",{\"1\":{\"569\":1}}],[\"我希望将这个习惯延续下去\",{\"1\":{\"660\":1}}],[\"我希望我早点放弃\",{\"1\":{\"588\":1}}],[\"我希望在某个时刻你能够跳跃起来\",{\"1\":{\"586\":1}}],[\"我希望\",{\"1\":{\"569\":1}}],[\"我去年的大部分时间都在写另一篇更长的文章\",{\"1\":{\"569\":1}}],[\"我积累了很多想法\",{\"1\":{\"569\":1}}],[\"我尝试从时间角度从始至终全方面说一说这个封校到全面开放的全经过\",{\"1\":{\"566\":1}}],[\"我相信不论哪一类人\",{\"1\":{\"572\":1}}],[\"我相信有每个人的一生中总有一些时间点\",{\"1\":{\"566\":1}}],[\"我相信绝大多数人其实是没有考虑过这个问题的\",{\"1\":{\"533\":1}}],[\"我仍然有爱的人\",{\"1\":{\"552\":1}}],[\"我要挣扎\",{\"1\":{\"552\":1}}],[\"我还没有找到合伙人\",{\"1\":{\"674\":1}}],[\"我还不会写商业规划书\",{\"1\":{\"674\":1}}],[\"我还不会写代码\",{\"1\":{\"674\":1}}],[\"我还准备写一个打卡程序\",{\"1\":{\"660\":1}}],[\"我还远远达不到他们的水平\",{\"1\":{\"578\":1}}],[\"我还能看到我十几个最亲密的朋友的故事\",{\"1\":{\"572\":1}}],[\"我还记得我初二时\",{\"1\":{\"551\":1}}],[\"我还是很有资格对这次事件说说自己所了解的事实以及看法\",{\"1\":{\"591\":1}}],[\"我还是建议你采用\",{\"1\":{\"386\":1}}],[\"我还是在名字中加上一个链接\",{\"1\":{\"8\":1}}],[\"我其实也一直在想这个问题\",{\"1\":{\"551\":1}}],[\"我离开微信的三天\",{\"0\":{\"546\":1}}],[\"我举一个很简单的例子\",{\"1\":{\"528\":1}}],[\"我举一个例子\",{\"1\":{\"235\":1}}],[\"我就说说我认为最重要的理由\",{\"1\":{\"680\":1}}],[\"我就开启了我的逃离微信之旅\",{\"1\":{\"551\":1}}],[\"我就\",{\"1\":{\"528\":1}}],[\"我就想让缓存和数据库\",{\"1\":{\"387\":1}}],[\"我数了数也就159行\",{\"1\":{\"517\":1}}],[\"我用160行代码写出了个区块链\",{\"0\":{\"508\":1}}],[\"我也很少去使用这种能提供即时反馈的应用\",{\"1\":{\"631\":1}}],[\"我也认为此次事件对整个mixin生态影响最大的是信心问题\",{\"1\":{\"591\":1}}],[\"我也有一天能成为那样的医生\",{\"1\":{\"578\":1}}],[\"我也有话要说\",{\"1\":{\"502\":1}}],[\"我也选择了删除支付宝\",{\"1\":{\"551\":1}}],[\"我也来尝试给我自己做一个okr\",{\"1\":{\"4\":1}}],[\"我都有记录时间这个习惯\",{\"1\":{\"500\":1}}],[\"我想了想\",{\"1\":{\"776\":1}}],[\"我想通过一个我亲身的案例来说明不使用云\",{\"1\":{\"710\":1}}],[\"我想谈论的的是你如果你真的是一名不想让自己所有数据都上云的人\",{\"1\":{\"709\":1}}],[\"我想说一个最近在一本书\",{\"1\":{\"605\":1}}],[\"我想成为一名著名演员\",{\"1\":{\"580\":1}}],[\"我想大多数人也不知道\",{\"1\":{\"579\":1}}],[\"我想对大部分\",{\"1\":{\"570\":1}}],[\"我想可能有以下几点\",{\"1\":{\"551\":1}}],[\"我想先说说我为什么不想使用企业微信\",{\"1\":{\"494\":1}}],[\"我想聊的更多的是eth\",{\"1\":{\"109\":1}}],[\"我通过一张图来解释数据\",{\"1\":{\"413\":1}}],[\"我下面这条查询语句\",{\"1\":{\"345\":1}}],[\"我推荐resend服务\",{\"1\":{\"194\":1}}],[\"我存入了$100k美金的btc\",{\"1\":{\"164\":1}}],[\"我在这个问题上保持了沉默\",{\"1\":{\"764\":1}}],[\"我在这次事件中损失也巨大\",{\"1\":{\"591\":1}}],[\"我在未来一段时间会继续在工作所需要的技能上持续发展\",{\"1\":{\"761\":1}}],[\"我在尝试过长中选择了arc\",{\"1\":{\"731\":1}}],[\"我在一家名为\",{\"1\":{\"706\":1}}],[\"我在使用chatgpt的写代码\",{\"1\":{\"692\":1}}],[\"我在2021年读了很多书\",{\"1\":{\"810\":1}}],[\"我在2021年的时候搬迁了好几次博客\",{\"1\":{\"660\":1}}],[\"我在2021年做了些什么\",{\"0\":{\"500\":1}}],[\"我在挑选写作主题时总是问自己\",{\"1\":{\"572\":1}}],[\"我在中文世界里没有看不到这些变化\",{\"1\":{\"534\":1}}],[\"我在后面会列出一个清单\",{\"1\":{\"500\":1}}],[\"我在\",{\"1\":{\"169\":1}}],[\"我在用的套利\",{\"1\":{\"153\":1}}],[\"我在翻\",{\"1\":{\"152\":1}}],[\"我发现go程序里使用makefile中写的最好的是李文周的博客\",{\"1\":{\"1026\":1}}],[\"我发现我曾经写的文章很少\",{\"1\":{\"660\":1}}],[\"我发现我的内容大部分是给我自己看的\",{\"1\":{\"660\":2}}],[\"我发现我在金钱的使用上与这个世界上99\",{\"1\":{\"595\":1}}],[\"我发现\",{\"1\":{\"152\":1}}],[\"我们推荐使用下面的更方便的方法初始化连接\",{\"1\":{\"1225\":1}}],[\"我们详细介绍了结构体反射\",{\"1\":{\"1194\":1}}],[\"我们编写了\",{\"1\":{\"1193\":1}}],[\"我们编写了一个hellohandler函数\",{\"1\":{\"972\":1}}],[\"我们告诉\",{\"1\":{\"1163\":1}}],[\"我们定义了一个\",{\"1\":{\"1193\":1}}],[\"我们定义了一个名为\",{\"1\":{\"1163\":1}}],[\"我们定义了这些不同类型的命令行参数\",{\"1\":{\"1161\":1}}],[\"我们定义了四个不同类型的命令行参数\",{\"1\":{\"1161\":1}}],[\"我们定义一个quicksort包\",{\"1\":{\"967\":1}}],[\"我们调用\",{\"1\":{\"1161\":2,\"1163\":1}}],[\"我们调用数据库的\",{\"1\":{\"1088\":1}}],[\"我们能够得出以下结论\",{\"1\":{\"1144\":1}}],[\"我们能够与之联系的真实渴望\",{\"1\":{\"576\":1}}],[\"我们梳理一下从\",{\"1\":{\"1137\":1}}],[\"我们主要关注处理器中的线程和运行队列\",{\"1\":{\"1134\":1}}],[\"我们主要学习了protobuf中的三个最常见的包的使用包括timestamp\",{\"1\":{\"1089\":1}}],[\"我们想先在客户端加一个拦截器\",{\"1\":{\"1097\":1}}],[\"我们新加入一个message\",{\"1\":{\"1088\":1}}],[\"我们新生成的部分只是立即被关进监狱\",{\"1\":{\"576\":1}}],[\"我们本篇文章\",{\"1\":{\"1080\":1}}],[\"我们并没有讲解更多的路径匹配\",{\"1\":{\"1080\":1}}],[\"我们并没有置之不理\",{\"1\":{\"569\":1}}],[\"我们加入gateway的方式就是新起一个goroutine\",{\"1\":{\"1079\":1}}],[\"我们刚刚gin里面的engine\",{\"1\":{\"1055\":1}}],[\"我们刚刚做过了\",{\"1\":{\"268\":1}}],[\"我们怎么开始gin呢\",{\"1\":{\"1050\":1}}],[\"我们怎么对其进行排序\",{\"1\":{\"948\":1}}],[\"我们用过淘宝天猫的都知道\",{\"1\":{\"1009\":1}}],[\"我们用的微信\",{\"1\":{\"592\":1}}],[\"我们日常生活中最常用的就有电商系统的订单系统\",{\"1\":{\"1009\":1}}],[\"我们下面会学习这个cron库的使用\",{\"1\":{\"999\":1}}],[\"我们一般不会用get方法去传递body\",{\"1\":{\"1080\":1}}],[\"我们一共为\",{\"1\":{\"990\":1}}],[\"我们一度看到价格变成了1\",{\"1\":{\"177\":1}}],[\"我们完全可以通过使用依赖注入的方式\",{\"1\":{\"981\":1}}],[\"我们该如何修改代码呢\",{\"1\":{\"981\":1}}],[\"我们该如何为这个函数编写单元测试呢\",{\"1\":{\"979\":1}}],[\"我们实现了一个recordstats函数用来记录用户浏览商品时产生的相关数据\",{\"1\":{\"975\":1}}],[\"我们直接运行这个函数\",{\"1\":{\"972\":1}}],[\"我们以常见的gin框架为例\",{\"1\":{\"972\":1}}],[\"我们以为的事实\",{\"1\":{\"641\":1}}],[\"我们讲了单元测试和基础测试\",{\"1\":{\"971\":1}}],[\"我们为上述的quicksort包提供压测如下\",{\"1\":{\"970\":1}}],[\"我们为什么需要这项新技术呢\",{\"1\":{\"771\":1}}],[\"我们为什么管不住自己\",{\"1\":{\"503\":1,\"669\":1}}],[\"我们上面曾经用过\",{\"1\":{\"961\":1}}],[\"我们上学期间也一定自己亲手做笔记\",{\"1\":{\"660\":1}}],[\"我们选择任意一个数据为pivot\",{\"1\":{\"949\":1}}],[\"我们选择调用\",{\"1\":{\"448\":1}}],[\"我们首先解释了反射的定义和作用\",{\"1\":{\"1194\":1}}],[\"我们首先使用\",{\"1\":{\"1161\":1}}],[\"我们首先改一下刚刚写过的函数\",{\"1\":{\"948\":1}}],[\"我们首先要明白一个关键点就是现金永远都在贬值\",{\"1\":{\"596\":1}}],[\"我们事实上是需要将所有的数都排一遍\",{\"1\":{\"945\":1}}],[\"我们有以下业务逻辑代码\",{\"1\":{\"973\":1}}],[\"我们有一些yaml格式的数据\",{\"1\":{\"905\":1}}],[\"我们有了更多的喘息空间\",{\"1\":{\"570\":1}}],[\"我们平时在go\",{\"1\":{\"814\":1}}],[\"我们平时打的语音电话\",{\"1\":{\"528\":1}}],[\"我们两个人逛了20分钟就结束了\",{\"1\":{\"779\":1}}],[\"我们取\",{\"1\":{\"751\":1}}],[\"我们取得了良好的进展\",{\"1\":{\"575\":1}}],[\"我们面对新事物的心态就尤为重要\",{\"1\":{\"731\":1}}],[\"我们面临着诸多选择和干扰\",{\"1\":{\"646\":1}}],[\"我们面临着大量的信息和知识资源\",{\"1\":{\"646\":1}}],[\"我们过去常常对服务器级操作系统\",{\"1\":{\"721\":1}}],[\"我们人生的每时每刻都会遇到选择\",{\"1\":{\"710\":1}}],[\"我们又该如何积累自己的不公平优势\",{\"1\":{\"674\":1}}],[\"我们受被动学习所制约\",{\"1\":{\"654\":1}}],[\"我们分析问题\",{\"1\":{\"654\":1}}],[\"我们最多只能说\",{\"1\":{\"653\":1}}],[\"我们最终迷失了方向\",{\"1\":{\"588\":1}}],[\"我们最终走上了一条道路\",{\"1\":{\"570\":1}}],[\"我们最终失去了自由的互联网\",{\"1\":{\"533\":1}}],[\"我们原则上可以满足每个人的需求\",{\"1\":{\"649\":1}}],[\"我们当中90\",{\"1\":{\"648\":1}}],[\"我们进入了工业文明时代\",{\"1\":{\"646\":1}}],[\"我们经历了狩猎文明\",{\"1\":{\"646\":1}}],[\"我们经常使用\",{\"1\":{\"1166\":1}}],[\"我们经常使用关联代币账户\",{\"1\":{\"136\":1}}],[\"我们经常可以在c\",{\"1\":{\"1023\":1}}],[\"我们经常会对曾经发生的事情忘记了细节\",{\"1\":{\"641\":1}}],[\"我们经常觉得想做的事情对我们有害\",{\"1\":{\"626\":1}}],[\"我们经常被告知要\",{\"1\":{\"577\":1}}],[\"我们充满信心写满了答案\",{\"1\":{\"640\":1}}],[\"我们视为自己独特视角的看法承受着他人思想和信念的印记\",{\"1\":{\"639\":1}}],[\"我们甚至在尝试过了以后也无法避免这样做\",{\"1\":{\"627\":1}}],[\"我们甚至可以在\",{\"1\":{\"451\":1}}],[\"我们似乎不应该将个性看作是一种与生俱来的东西\",{\"1\":{\"623\":1}}],[\"我们所有人的态度\",{\"1\":{\"623\":1}}],[\"我们所使用的都是来自于\",{\"1\":{\"55\":1}}],[\"我们祖母那一辈人已经将这些文化内化了\",{\"1\":{\"623\":1}}],[\"我们很少会主动去深刻理解当下世界正在发生的事情\",{\"1\":{\"795\":1}}],[\"我们很快就能从中区分出什么是正确的\",{\"1\":{\"620\":1}}],[\"我们很容易想到的方案是\",{\"1\":{\"382\":1}}],[\"我们对于一些观点都有一些属于自己的看法\",{\"1\":{\"614\":1}}],[\"我们每天所接受的信息总是有缺陷的\",{\"1\":{\"642\":1}}],[\"我们每个人都需要时间去适应数字技术对世界的改变\",{\"1\":{\"610\":1}}],[\"我们每个人都似乎又了注意力缺失的情况\",{\"1\":{\"610\":1}}],[\"我们每一个区块中含有index\",{\"1\":{\"512\":1}}],[\"我们拥有可以被传承下来的知识\",{\"1\":{\"609\":1}}],[\"我们开始写对应的逻辑\",{\"1\":{\"1067\":1}}],[\"我们开始\",{\"1\":{\"595\":1}}],[\"我们开始思索\",{\"1\":{\"570\":1}}],[\"我们作为大脑幼儿园教师的内部斗争占据了生活中大约97\",{\"1\":{\"586\":1}}],[\"我们准备抬起头\",{\"1\":{\"584\":1}}],[\"我们往往更多地列举我们已经具备的技能领域\",{\"1\":{\"583\":1}}],[\"我们会依次分析获取写锁和读锁的实现原理\",{\"1\":{\"1143\":1}}],[\"我们会在类型断言中介绍\",{\"1\":{\"1139\":1}}],[\"我们会在文章的最后再来看它\",{\"1\":{\"572\":1}}],[\"我们会直接将数据存储到缓冲区\",{\"1\":{\"1137\":1}}],[\"我们会经常看到\",{\"1\":{\"1133\":1}}],[\"我们会看到一组信念\",{\"1\":{\"578\":1}}],[\"我们会查看\",{\"1\":{\"578\":1}}],[\"我们也不能同时实现两种相同的接口\",{\"1\":{\"1138\":1}}],[\"我们也可以在程序中使用runtime\",{\"1\":{\"1133\":1}}],[\"我们也可以自定义字段\",{\"1\":{\"1047\":1}}],[\"我们也可以使用\",{\"1\":{\"997\":1}}],[\"我们也往往不善于识别该游戏所需要的真正优势\",{\"1\":{\"580\":1}}],[\"我们也希望我们对可能实现的事情的信念能够接近实际可能实现的事情\",{\"1\":{\"578\":1}}],[\"我们也被困在自己熟知的领域之内\",{\"1\":{\"531\":1}}],[\"我们随着时间的推移是如何演变的\",{\"1\":{\"577\":1}}],[\"我们随时可以去看看\",{\"1\":{\"574\":1}}],[\"我们大多数人大多数时间根本不思考\",{\"1\":{\"626\":1}}],[\"我们大多数人甚至不知道我们大脑中的否认监狱的存在\",{\"1\":{\"576\":1}}],[\"我们大多数所谓的逻辑推理\",{\"1\":{\"626\":1}}],[\"我们大多数使用的全局变量都只需在编译时期初始化就可以了\",{\"1\":{\"455\":1}}],[\"我们都可以做到\",{\"1\":{\"1193\":1}}],[\"我们都可以认同\",{\"1\":{\"585\":1}}],[\"我们都会先调用\",{\"1\":{\"1146\":1}}],[\"我们都有这种能力\",{\"1\":{\"574\":1}}],[\"我们都是凭借经验大致估算这个延迟时间\",{\"1\":{\"386\":1}}],[\"我们才能看清楚实际情况\",{\"1\":{\"574\":1}}],[\"我们比那好\",{\"1\":{\"573\":1}}],[\"我们脑海中都住着一个极度执着于他人目光的\",{\"1\":{\"573\":1}}],[\"我们不需要微服务\",{\"0\":{\"723\":1}}],[\"我们不再在您所在地区提供服务\",{\"1\":{\"705\":1}}],[\"我们不必运用我们的心智就可在被羞辱时感到愤怒\",{\"1\":{\"626\":1}}],[\"我们不喜欢令人讨厌的事情\",{\"1\":{\"586\":1}}],[\"我们不仅会根据错误的游戏板块来评估自己的优势\",{\"1\":{\"580\":1}}],[\"我们不说\",{\"1\":{\"571\":1}}],[\"我们不能因为害怕预读失效\",{\"1\":{\"377\":1}}],[\"我们介绍自己时\",{\"1\":{\"571\":1}}],[\"我们无意识地接受这些答案\",{\"1\":{\"639\":1}}],[\"我们无法实验\",{\"1\":{\"571\":1}}],[\"我们无从得知调用者会如何处理这些值\",{\"1\":{\"450\":1}}],[\"我们被灌输每个人要有每个人的想法\",{\"1\":{\"637\":1}}],[\"我们被踢出池塘\",{\"1\":{\"570\":1}}],[\"我们被告知河流的规则\",{\"1\":{\"570\":1}}],[\"我们应该将依赖项解耦出来\",{\"1\":{\"981\":1}}],[\"我们应该如何做呢\",{\"1\":{\"795\":1}}],[\"我们应该把你当前经过重新修订的欲望\",{\"1\":{\"585\":1}}],[\"我们应该游泳的方式以及我们的目标\",{\"1\":{\"570\":1}}],[\"我们应该采用这种方案\",{\"1\":{\"384\":1}}],[\"我们只需要在注册grpc服务的时候加入对应拦截器\",{\"1\":{\"1097\":1}}],[\"我们只需要记住当我们需要遍历map\",{\"1\":{\"1019\":1}}],[\"我们只需要陈述规则\",{\"1\":{\"1011\":1}}],[\"我们只需要考虑现代广告中经常使用名人的推荐口号对公众的影响\",{\"1\":{\"621\":1}}],[\"我们只是感觉着\",{\"1\":{\"626\":1}}],[\"我们只是突然醒来\",{\"1\":{\"570\":1}}],[\"我们只能重新去尝试先过好当下\",{\"1\":{\"609\":1}}],[\"我们只能尽可能地去降低问题出现的概率\",{\"1\":{\"387\":1}}],[\"我们现在可以来看看抽象的\",{\"1\":{\"1009\":1}}],[\"我们现在可以来了解psync命令的完整细节了\",{\"1\":{\"425\":1}}],[\"我们现在拥有的一切没有知识\",{\"1\":{\"648\":1}}],[\"我们现在正在触及另一个这样的点\",{\"1\":{\"648\":1}}],[\"我们现在准备回到我们开始分析之前的地方\",{\"1\":{\"584\":1}}],[\"我们现在的垄断互联网阶段也可能会被看成是传统互联网的另一个分支\",{\"1\":{\"532\":1}}],[\"我们依然生活自己熟知的领域内\",{\"1\":{\"531\":1}}],[\"我们依旧有失效时间来兜底\",{\"1\":{\"387\":1}}],[\"我们中的绝大多数人都生活在已经熟知的领域之内\",{\"1\":{\"531\":1}}],[\"我们看看body的用法\",{\"1\":{\"1080\":1}}],[\"我们看到web服务器已经启动并运行\",{\"1\":{\"517\":1}}],[\"我们看i到j区间是不是回文子串就看aba是不是回文就可以了\",{\"1\":{\"267\":1}}],[\"我们去json包的官网可以看到\",{\"1\":{\"516\":1}}],[\"我们已经习以为常的宏观指导突然从我们身边消失了\",{\"1\":{\"570\":1}}],[\"我们已经完成了构建区块链的大部分工作\",{\"1\":{\"515\":1}}],[\"我们已经成功搭建了一个nextjs项目\",{\"1\":{\"192\":1}}],[\"我们通知直接经验\",{\"1\":{\"654\":1}}],[\"我们通常在上下文代码中存放元数据\",{\"1\":{\"1093\":1}}],[\"我们通常都只需要修改一处代码\",{\"1\":{\"1010\":1}}],[\"我们通常都不想在测试过程中去真正建立网络连接\",{\"1\":{\"971\":1}}],[\"我们通常会通过试错来了解这个世界\",{\"1\":{\"782\":1}}],[\"我们通常认为这是一种糟糕的感觉\",{\"1\":{\"575\":1}}],[\"我们通常将这种情况称为页分裂\",{\"1\":{\"353\":1}}],[\"我们通过为函数传参数的方式传入需要判断的时刻\",{\"1\":{\"979\":1}}],[\"我们通过其他人地告知而被动地获得知识\",{\"1\":{\"654\":1}}],[\"我们通过将之前的块和新的data传递给前面编写的generateblock函数来创建一个新的块\",{\"1\":{\"516\":1}}],[\"我们通过检查index来确保它们像预期的那样递增\",{\"1\":{\"515\":1}}],[\"我们使用docker来安装mongodb\",{\"1\":{\"1219\":1}}],[\"我们使用\",{\"1\":{\"1162\":1,\"1163\":3}}],[\"我们使用指针解引用的方式获取每个命令行参数的值\",{\"1\":{\"1161\":1}}],[\"我们使用monkey库对varys\",{\"1\":{\"978\":1}}],[\"我们使用mux包来帮助我们构建web服务\",{\"1\":{\"516\":1}}],[\"我们使用自己用\",{\"1\":{\"724\":1}}],[\"我们使用一个小小的包装器函数respondwithjson来让我们知道发生了什么\",{\"1\":{\"516\":1}}],[\"我们使用前面创建的isblockvalid函数进行快速检查\",{\"1\":{\"516\":1}}],[\"我们使用单独的msg结构的原因是为了接收json\",{\"1\":{\"516\":1}}],[\"我们使用time包中的now函数来表示创建newblock的时间\",{\"1\":{\"514\":1}}],[\"我们使用web服务替代p2p网络\",{\"1\":{\"509\":1}}],[\"我们到底需要一些什么\",{\"1\":{\"510\":1}}],[\"我们再一个一个来看\",{\"1\":{\"1135\":1}}],[\"我们再节选一些作者认为比较有趣或者重要的字段\",{\"1\":{\"1132\":1}}],[\"我们再在里面创建一个person\",{\"1\":{\"1084\":1}}],[\"我们再次进行编码\",{\"1\":{\"1080\":1}}],[\"我们再来观察一下这个option里面的东西\",{\"1\":{\"1080\":1}}],[\"我们再来学一下grpc的错误处理\",{\"1\":{\"1074\":1}}],[\"我们再来看srv\",{\"1\":{\"1055\":1}}],[\"我们再来看\",{\"1\":{\"384\":1}}],[\"我们再写一个\",{\"1\":{\"967\":1}}],[\"我们再创建一个\",{\"1\":{\"510\":1}}],[\"我们是可以选择利用我们最重要的生产资料时间的\",{\"1\":{\"677\":1}}],[\"我们是可以选择利用我们最重要的生产资料也就是时间的\",{\"1\":{\"646\":1}}],[\"我们是通过主动\",{\"1\":{\"654\":1}}],[\"我们是如何知道的\",{\"0\":{\"654\":1}}],[\"我们是如何陷入贫穷与忙碌的\",{\"1\":{\"503\":1}}],[\"我们是不知道空气中有氧气的\",{\"1\":{\"605\":1}}],[\"我们是胆怯的人\",{\"1\":{\"586\":1}}],[\"我们是要考虑\",{\"1\":{\"373\":1}}],[\"我们索引的字节落在了\",{\"1\":{\"475\":1}}],[\"我们总会期望现实可以一瞬间变得更好\",{\"1\":{\"810\":1}}],[\"我们总说每个人的价值观不一样\",{\"1\":{\"666\":1}}],[\"我们总是期望它的性能表现是\",{\"1\":{\"474\":1}}],[\"我们总结一下从\",{\"1\":{\"1137\":1}}],[\"我们总结一下\",{\"1\":{\"177\":1}}],[\"我们没有选择河流\",{\"1\":{\"570\":1}}],[\"我们没有足够的信息知晓调用者具体会如何尝试\",{\"1\":{\"450\":1}}],[\"我们没有调用\",{\"1\":{\"450\":1}}],[\"我们仍然希望\",{\"1\":{\"448\":1}}],[\"我们真正希望的是对不同的错误原因采取不同的行为\",{\"1\":{\"448\":1}}],[\"我们的服务端是直接拒接请求的\",{\"1\":{\"1099\":1}}],[\"我们的主要目的是先run起来再说\",{\"1\":{\"1084\":1}}],[\"我们的返回结果就是这样\",{\"1\":{\"1072\":1}}],[\"我们的代码就能很容易地写出单元测试代码\",{\"1\":{\"980\":1}}],[\"我们的实现可以采用饿汉和懒汉的方式来实现\",{\"1\":{\"895\":1}}],[\"我们的模块化单体将我们的\",{\"1\":{\"725\":1}}],[\"我们的狩猎采集文明经历了几百万年\",{\"1\":{\"646\":1}}],[\"我们的时间可以用来生产信息时代的生产资料信息\",{\"1\":{\"646\":1,\"677\":1}}],[\"我们的一小时在马斯克那里也是一小时\",{\"1\":{\"646\":1,\"677\":1}}],[\"我们的一小时在巴菲特那里也是一小时\",{\"1\":{\"646\":1,\"677\":1}}],[\"我们的信息可能不准确不完整\",{\"1\":{\"643\":1}}],[\"我们的感知和记忆是不完善的\",{\"1\":{\"643\":1}}],[\"我们的思想和信念可能不可避免地受他人的影响\",{\"1\":{\"643\":1}}],[\"我们的思维模式是更古老的世界\",{\"1\":{\"578\":1}}],[\"我们的想法来源于何处\",{\"0\":{\"639\":1}}],[\"我们的国家已经丧失了它的传统价值观\",{\"1\":{\"626\":1}}],[\"我们的行为都受这些含义的影响\",{\"1\":{\"620\":1}}],[\"我们的某个部分被关进否认监狱是因为别人将其锁在那里\",{\"1\":{\"576\":1}}],[\"我们的意识只是在接触到\",{\"1\":{\"574\":1}}],[\"我们的工作不是思考自己的道路\",{\"1\":{\"570\":1}}],[\"我们的处理程序将为我们填充块的其余部分\",{\"1\":{\"516\":1}}],[\"我们的\",{\"1\":{\"447\":1,\"571\":1,\"577\":1}}],[\"我们的业务应用在修改数据时\",{\"1\":{\"385\":1}}],[\"我们还会调用\",{\"1\":{\"1146\":1}}],[\"我们还还可以通过实现job接口\",{\"1\":{\"1005\":1}}],[\"我们还不了解ta\",{\"1\":{\"978\":1}}],[\"我们还可以为基准测试添加\",{\"1\":{\"970\":1}}],[\"我们还可以mock函数和设置条件\",{\"1\":{\"960\":1}}],[\"我们还可以通过log配置日志输出位置\",{\"1\":{\"1181\":1}}],[\"我们还可以通过匹配error的类型进一步match\",{\"1\":{\"448\":1}}],[\"我们还可以通过panic后的backtrace追踪出错信息\",{\"1\":{\"447\":1}}],[\"我们还需要一次遍历所有的数找到并且做交换怎么办\",{\"1\":{\"944\":1}}],[\"我们还需要了解聚簇索引记录中的两个隐藏列\",{\"1\":{\"362\":1}}],[\"我们还没有掌握它\",{\"1\":{\"637\":1}}],[\"我们还检查以确保我们的prehash确实与前一个块的hash相同\",{\"1\":{\"515\":1}}],[\"我们先初始化一些数据\",{\"1\":{\"1226\":1}}],[\"我们先在这里介绍一下不同的数据结构\",{\"1\":{\"1131\":1}}],[\"我们先说说在metadata包中发送元数据的方法\",{\"1\":{\"1094\":1}}],[\"我们先从这些宏大叙事中跳出来\",{\"1\":{\"646\":1}}],[\"我们先想一想我们想要构建一个区块链\",{\"1\":{\"510\":1}}],[\"我们先来看一下能够通过编译的情况\",{\"1\":{\"1138\":1}}],[\"我们先来看一个不使用懒加载\",{\"1\":{\"461\":1}}],[\"我们先来看listenandserve函数\",{\"1\":{\"1055\":1}}],[\"我们先来一道开胃菜\",{\"1\":{\"467\":1}}],[\"我们先来回忆一下result的枚举类型是什么\",{\"1\":{\"448\":1}}],[\"我们先来说一说rdb持久化的过程\",{\"1\":{\"416\":1}}],[\"我们先来说说预处理阶段做了什么事情\",{\"1\":{\"347\":1}}],[\"我们先讲解panic\",{\"1\":{\"446\":1}}],[\"我们要做的就只有在mock函数里填入希望mock的函数\",{\"1\":{\"958\":1}}],[\"我们要对这类错误立即处理\",{\"1\":{\"446\":1}}],[\"我们要修改一条数据时\",{\"1\":{\"382\":1}}],[\"我们可能经常会看到类似下面的代码\",{\"1\":{\"981\":1}}],[\"我们可能会摆脱对化石燃料的依赖\",{\"1\":{\"648\":1}}],[\"我们可能还像野外的猴狲一样只能吃桃子\",{\"1\":{\"647\":1,\"686\":1}}],[\"我们可能很不擅长准确评估这种比较的任何一方\",{\"1\":{\"578\":1}}],[\"我们可能只需要打印日志提醒用户\",{\"1\":{\"446\":1}}],[\"我们可以选择使用其他成熟的日志库\",{\"1\":{\"1183\":1}}],[\"我们可以获取和处理这些命令行参数\",{\"1\":{\"1163\":1}}],[\"我们可以创建自己的类型\",{\"1\":{\"1163\":2}}],[\"我们可以解析命令行参数并将其赋值给相应的变量\",{\"1\":{\"1162\":1}}],[\"我们可以向\",{\"1\":{\"1144\":1}}],[\"我们可以给path传递name\",{\"1\":{\"1080\":1}}],[\"我们可以这么使用\",{\"1\":{\"1037\":1}}],[\"我们可以设置\",{\"1\":{\"1035\":1}}],[\"我们可以使用\",{\"1\":{\"1161\":1}}],[\"我们可以使用以下方法构造一个限流器对象\",{\"1\":{\"1034\":1}}],[\"我们可以使用go\",{\"1\":{\"969\":1}}],[\"我们可以如何用程序来实现这样的流程呢\",{\"1\":{\"1009\":1}}],[\"我们可以简单理解为\",{\"1\":{\"1009\":1}}],[\"我们可以定义一个结构来实现job接口\",{\"1\":{\"1005\":1}}],[\"我们可以定义任意时间\",{\"1\":{\"1002\":1}}],[\"我们可以为go\",{\"1\":{\"967\":1}}],[\"我们可以进一步使用\",{\"1\":{\"1188\":1}}],[\"我们可以进一步掌握其他知识\",{\"1\":{\"647\":1,\"686\":1}}],[\"我们可以进行写文章\",{\"1\":{\"677\":1}}],[\"我们可以提高工作效率\",{\"1\":{\"646\":1}}],[\"我们可以回到我们的温迪图表\",{\"1\":{\"584\":1}}],[\"我们可以称它为\",{\"1\":{\"572\":1}}],[\"我们可以称这个为容器运行时读写而准备的存储层为\",{\"1\":{\"47\":1}}],[\"我们可以根据地图持有者的特征将他们归为三类\",{\"1\":{\"572\":1}}],[\"我们可以从空中俯瞰我们的人生轨迹\",{\"1\":{\"570\":1}}],[\"我们可以用query路径传递进去\",{\"1\":{\"1080\":1}}],[\"我们可以用一颗星来表示\",{\"1\":{\"580\":1}}],[\"我们可以用一个新的generateblock函数生成一个新的block\",{\"1\":{\"514\":1}}],[\"我们可以用镜像的完整\",{\"1\":{\"55\":1}}],[\"我们可以利用这个文件句柄来进行读写\",{\"1\":{\"448\":1}}],[\"我们可以基于续约的方式设置超时时间\",{\"1\":{\"436\":1}}],[\"我们可以认为消息头本身也是消息的一部分\",{\"1\":{\"435\":1}}],[\"我们可以将其看成接口类型和具体类型的组合\",{\"1\":{\"1139\":1}}],[\"我们可以将这里的调用理解成\",{\"1\":{\"1138\":1}}],[\"我们可以将一个或多个槽指派\",{\"1\":{\"428\":1}}],[\"我们可以将记录中的\",{\"1\":{\"362\":1}}],[\"我们可以让一个从服务器去复制一个主服务器\",{\"1\":{\"425\":1}}],[\"我们可以让写操作只写数据库\",{\"1\":{\"382\":1}}],[\"我们可以得出结论\",{\"1\":{\"385\":1}}],[\"我们可以订阅这个日志\",{\"1\":{\"385\":1}}],[\"我们可以把操作缓存这一步\",{\"1\":{\"385\":1}}],[\"我们可以建立一个联合索引\",{\"1\":{\"353\":1}}],[\"我们可以很好的了解\",{\"1\":{\"341\":1}}],[\"我们可以按以下顺序执行\",{\"1\":{\"302\":1}}],[\"我们可以覆盖prisma\",{\"1\":{\"194\":1}}],[\"我们可以快速搭建一个nextjs项目\",{\"1\":{\"192\":1}}],[\"我们可以看到server\",{\"1\":{\"1055\":1}}],[\"我们可以看到点是如何连接起来带领我们到达现在的\",{\"1\":{\"585\":1}}],[\"我们可以看到命令是这样的\",{\"1\":{\"436\":1}}],[\"我们可以看到相应从服务器最后一次向主服务器发送replconf\",{\"1\":{\"425\":1}}],[\"我们可以看到同样是1\",{\"1\":{\"177\":1}}],[\"我们可以看到之前提及的分层概念\",{\"1\":{\"49\":1}}],[\"我们可以像之前运行\",{\"1\":{\"59\":1}}],[\"我们可以在单元测试中对依赖的api进行mock\",{\"1\":{\"973\":1}}],[\"我们可以在\",{\"1\":{\"50\":1}}],[\"我们可以通过loadlocation设置我们的时间地点\",{\"1\":{\"1208\":1}}],[\"我们可以通过valueof\",{\"1\":{\"1189\":1}}],[\"我们可以通过直接访问自定义类型的变量来获取解析后的值\",{\"1\":{\"1163\":1}}],[\"我们可以通过flag包进一步开发自己的命令行工具和应用程序\",{\"1\":{\"1161\":1}}],[\"我们可以通过下面的例子了解它的使用方法\",{\"1\":{\"1146\":1}}],[\"我们可以通过一个例子理解go\",{\"1\":{\"1138\":1}}],[\"我们可以通过这些方法去对元数据进行一些操作\",{\"1\":{\"1093\":1}}],[\"我们可以通过metadata\",{\"1\":{\"1093\":1}}],[\"我们可以通过如下代码给r添加get方法事件\",{\"1\":{\"1053\":1}}],[\"我们可以通过接口和结构体来实现这个模式\",{\"1\":{\"862\":1}}],[\"我们可以通过利用时间来获取\",{\"1\":{\"677\":1}}],[\"我们可以通过转义的方式\",{\"1\":{\"483\":1}}],[\"我们可以通过box\",{\"1\":{\"461\":1}}],[\"我们可以通过控制以下参数\",{\"1\":{\"360\":1}}],[\"我们可以通过\",{\"1\":{\"48\":2,\"1144\":1}}],[\"我们称发送消息的节点为发送者\",{\"1\":{\"434\":1}}],[\"我们必须将各个独立的节点连接起来\",{\"1\":{\"427\":1}}],[\"我们将参数的索引和值打印出来\",{\"1\":{\"1163\":1}}],[\"我们将命令行参数转换为整数\",{\"1\":{\"1163\":1}}],[\"我们将两个整数相加\",{\"1\":{\"1161\":1}}],[\"我们将要开始学习流式grpc与grpc的错误处理\",{\"1\":{\"1071\":1}}],[\"我们将函数中获取数据的部分抽象为接口类型来优化我们的程序\",{\"1\":{\"980\":1}}],[\"我们将一起学习如何在单元测试中mock\",{\"1\":{\"976\":1}}],[\"我们将时间用在哪些地方最合适呢\",{\"1\":{\"647\":1,\"686\":1}}],[\"我们将使用该请求体来编写新的块\",{\"1\":{\"516\":1}}],[\"我们将会看到一个\",{\"1\":{\"449\":1}}],[\"我们将介绍aof文件重写的实现原理\",{\"1\":{\"422\":1}}],[\"我们将置信区间调整后的市场美元价格乘以\",{\"1\":{\"150\":1}}],[\"我们将置信区间调整后的市场美元价格乘以资产权重\",{\"1\":{\"150\":1}}],[\"我们引入缓存的目的是什么\",{\"1\":{\"387\":1}}],[\"我们项目中一般都会用到消息队列\",{\"1\":{\"385\":1}}],[\"我们\",{\"1\":{\"385\":1}}],[\"我们从环境变量\",{\"1\":{\"1134\":1}}],[\"我们从小学加减乘除\",{\"1\":{\"810\":1}}],[\"我们从表面上接受想法\",{\"1\":{\"620\":1}}],[\"我们从\",{\"1\":{\"383\":1,\"572\":1}}],[\"我们希望我们感知到的渴望能够真实地反映我们的内心世界\",{\"1\":{\"578\":1}}],[\"我们希望得到相应的通知\",{\"1\":{\"516\":1}}],[\"我们希望通过在当前块上再次运行calculatehash函数来再次检查当前块的散列\",{\"1\":{\"515\":1}}],[\"我们希望创建这个文件并返回新文件的句柄\",{\"1\":{\"448\":1}}],[\"我们希望它一直留在buffer\",{\"1\":{\"377\":1}}],[\"我们希望看到在\",{\"1\":{\"54\":1}}],[\"我们查询一条记录的时候\",{\"1\":{\"376\":1}}],[\"我们常见的\",{\"1\":{\"361\":1}}],[\"我们常说的索引数据结构\",{\"1\":{\"341\":1}}],[\"我们把只包含质因子\",{\"1\":{\"321\":1}}],[\"我们把它剪成长度分别为2\",{\"1\":{\"285\":1,\"286\":1}}],[\"我们按照如下规则把它翻译为字符串\",{\"1\":{\"318\":1}}],[\"我们这样就可以给http\",{\"1\":{\"1080\":1}}],[\"我们这样做有点奇怪\",{\"1\":{\"569\":1}}],[\"我们这还是大大简化的版本\",{\"1\":{\"1009\":1}}],[\"我们这时候就可以使用适配器来解决\",{\"1\":{\"904\":1}}],[\"我们这时候只能让\",{\"1\":{\"283\":1}}],[\"我们这个时代是一个半年就有个小技术突破的时代\",{\"1\":{\"674\":1}}],[\"我们这篇文章是想结合过去的互联网再恰当的去讨论关于未来的互联网究竟会是一个怎样的世界\",{\"1\":{\"531\":1}}],[\"我们这里的示例是一元拦截器\",{\"1\":{\"1097\":1}}],[\"我们这里有一个只接受json格式的客户端的代码\",{\"1\":{\"905\":1}}],[\"我们这里有一个助手可以帮助我们\",{\"1\":{\"573\":1}}],[\"我们这里只是随便执行个命令\",{\"1\":{\"50\":1}}],[\"我们这里打算进入bash执行命令并查看返回结果\",{\"1\":{\"50\":1}}],[\"我们这里简要的说明一下上面用到的参数\",{\"1\":{\"50\":1}}],[\"我们得学会用一次for循环去解题\",{\"1\":{\"276\":1}}],[\"我们继续修改proto文件\",{\"1\":{\"1080\":1}}],[\"我们继续使用我们一开始的hello\",{\"1\":{\"1079\":1}}],[\"我们继续深入net\",{\"1\":{\"1055\":1}}],[\"我们继续执行以下命令\",{\"1\":{\"428\":1}}],[\"我们继续来看前面遗留的\",{\"1\":{\"384\":1}}],[\"我们继续\",{\"1\":{\"258\":1,\"521\":1}}],[\"我们来回顾一下\",{\"1\":{\"1084\":1}}],[\"我们来讲解一下这样的方式\",{\"1\":{\"1080\":1}}],[\"我们来演示一下怎么来用grpc\",{\"1\":{\"1079\":1}}],[\"我们来看一个最常见的红绿灯\",{\"1\":{\"1009\":1}}],[\"我们来看看在两阶段提交的不同时刻\",{\"1\":{\"360\":1}}],[\"我们来运行一下试试看\",{\"1\":{\"517\":1}}],[\"我们来分析一下切割\",{\"1\":{\"213\":1}}],[\"我们来引导你来完成它\",{\"1\":{\"36\":1}}],[\"我们熟悉的usdt\",{\"1\":{\"184\":1}}],[\"我们需要做的事情就是明确其定义\",{\"1\":{\"1186\":1}}],[\"我们需要做到下面来帮助我们\",{\"1\":{\"623\":1}}],[\"我们需要限制同一时间能够读写这些变量的线程数量\",{\"1\":{\"1136\":1}}],[\"我们需要使用\",{\"1\":{\"1135\":1}}],[\"我们需要展开介绍\",{\"1\":{\"1132\":1}}],[\"我们需要创建一个包含要更新的字段的\",{\"1\":{\"1088\":1}}],[\"我们需要将\",{\"1\":{\"1088\":1}}],[\"我们需要将过程为导向定义成功\",{\"1\":{\"674\":1}}],[\"我们需要检查请求中是否指定了\",{\"1\":{\"1088\":1}}],[\"我们需要修改一下命令\",{\"1\":{\"1084\":1}}],[\"我们需要在dial\",{\"1\":{\"1097\":1}}],[\"我们需要在grpc服务端程序中定义服务的逻辑\",{\"1\":{\"1066\":1}}],[\"我们需要在需要的时候用正确的角度看待问题\",{\"1\":{\"674\":1}}],[\"我们需要显式地做同步\",{\"1\":{\"1005\":1}}],[\"我们需要显式地指定要生成mock代码的接口\",{\"1\":{\"977\":1}}],[\"我们需要确保这些组件都是可以有保障地可以运行\",{\"1\":{\"967\":1}}],[\"我们需要传入我们需要mock的对象\",{\"1\":{\"960\":1}}],[\"我们需要可能是更多所以gap\",{\"1\":{\"947\":1}}],[\"我们需要劳动保护法\",{\"1\":{\"751\":1}}],[\"我们需要告诉自己可能自己与他人差不多\",{\"1\":{\"683\":1}}],[\"我们需要脚踏实地并且专注梦想\",{\"1\":{\"674\":1}}],[\"我们需要研究自己思维模式\",{\"1\":{\"673\":1}}],[\"我们需要我们的集体注意力去解决\",{\"1\":{\"611\":1}}],[\"我们需要评估以下几个方面\",{\"1\":{\"584\":1}}],[\"我们需要一个好的系统\",{\"1\":{\"577\":1}}],[\"我们需要一个block用来写我们的每一个区块\",{\"1\":{\"512\":1}}],[\"我们需要一些全局变量来简化代码的设计\",{\"1\":{\"454\":1}}],[\"我们需要给区块链提供一个初始的块\",{\"1\":{\"517\":1}}],[\"我们需要给\",{\"1\":{\"437\":1}}],[\"我们需要投入精力去维护\",{\"1\":{\"385\":1}}],[\"我们需要了解两个知识\",{\"1\":{\"362\":1}}],[\"我们需要什么就去阅读什么就ok\",{\"1\":{\"193\":1}}],[\"我们需要避免这种情况的发生\",{\"1\":{\"164\":1}}],[\"我们需要删除所有仓库名为\",{\"1\":{\"55\":1}}],[\"我们知道01背包内嵌的循环是从大到小遍历\",{\"1\":{\"241\":1}}],[\"我们知道市场能否保持稳定完全是复杂变动的\",{\"1\":{\"186\":1}}],[\"我们知道\",{\"1\":{\"75\":1}}],[\"我们知道操作系统分为内核区和用户区\",{\"1\":{\"46\":1}}],[\"我们其实已经看到了这个发送上下文的过程\",{\"1\":{\"60\":1}}],[\"我们之前学到了rpc\",{\"1\":{\"1066\":1}}],[\"我们之前说过\",{\"1\":{\"58\":1}}],[\"我们之前介绍过\",{\"1\":{\"55\":1}}],[\"我们在go语言中创建新的channel时\",{\"1\":{\"1137\":1}}],[\"我们在分布式环境中使用redis的时候\",{\"1\":{\"1104\":1}}],[\"我们在本期教程中\",{\"1\":{\"1089\":1}}],[\"我们在这一节中将分别介绍互斥锁的加锁和解锁过程\",{\"1\":{\"1142\":1}}],[\"我们在这里可以简单梳理和总结一下使用\",{\"1\":{\"1137\":1}}],[\"我们在这个目录下创建一个pb文件\",{\"1\":{\"1084\":1}}],[\"我们在这方面非常糟糕\",{\"1\":{\"586\":1}}],[\"我们在server文件夹下执行go\",{\"1\":{\"1067\":1}}],[\"我们在client和server两个文件夹中分别mod\",{\"1\":{\"1067\":1}}],[\"我们在前面创建的代码的基础上\",{\"1\":{\"992\":1}}],[\"我们在程序设计时践行以下几个原则会帮助我们写出可测试的代码\",{\"1\":{\"982\":1}}],[\"我们在开发中也会经常用到各种数据库\",{\"1\":{\"974\":1}}],[\"我们在上一部分介绍了httptest和gock工具进行网络测试\",{\"1\":{\"974\":1}}],[\"我们在上面看到的\",{\"1\":{\"152\":1}}],[\"我们在mock函数\",{\"1\":{\"960\":1}}],[\"我们在mysql中实现增删改语句的时候\",{\"1\":{\"356\":1}}],[\"我们在主观上越被扭曲我们的独立思考就更低效\",{\"1\":{\"683\":1}}],[\"我们在观察世界之前\",{\"1\":{\"639\":1}}],[\"我们在生理\",{\"1\":{\"639\":1}}],[\"我们在童年时期\",{\"1\":{\"639\":1}}],[\"我们在此函数中使用了strconv包\",{\"1\":{\"514\":1}}],[\"我们在\",{\"1\":{\"55\":1}}],[\"我们就实现了handler接口\",{\"1\":{\"1055\":1}}],[\"我们就可能用想象来填充这些空白\",{\"1\":{\"641\":1}}],[\"我们就可以根据这个proto文件去生成对应的person\",{\"1\":{\"1084\":1}}],[\"我们就可以用它来展示一下上面的流程如何用\",{\"1\":{\"1010\":1}}],[\"我们就可以进行\",{\"1\":{\"980\":1}}],[\"我们就可以模拟这个接口\",{\"1\":{\"977\":1}}],[\"我们就可以把最大的一个数放到最后的一个位置上去\",{\"1\":{\"945\":1}}],[\"我们就可以这样解决\",{\"1\":{\"905\":1}}],[\"我们就可以发起重试\",{\"1\":{\"385\":1}}],[\"我们就可以通过这个日志回到事务发生之前的数据\",{\"1\":{\"356\":1}}],[\"我们就有可能变得过于自信\",{\"1\":{\"588\":1}}],[\"我们就是我们\",{\"1\":{\"578\":1}}],[\"我们就不知道从何处而来\",{\"1\":{\"528\":1}}],[\"我们就不用通过中间件来拉取日志\",{\"1\":{\"385\":1}}],[\"我们就把3个月以来的贷款利息全部都补齐了\",{\"1\":{\"177\":1}}],[\"我们就需要定制这些镜像\",{\"1\":{\"55\":1}}],[\"我们就需要一个集中的存储\",{\"1\":{\"48\":1}}],[\"我们就能够以这个镜像为基础启动并运行一个容器\",{\"1\":{\"50\":1}}],[\"我以手机市场为例来分析各个阶段的市场情况\",{\"1\":{\"9\":1}}],[\"我的工作对技术有一定的要求\",{\"1\":{\"761\":1}}],[\"我的选择是\",{\"1\":{\"731\":1}}],[\"我的更好\",{\"1\":{\"683\":1}}],[\"我的手机\",{\"1\":{\"683\":1}}],[\"我的手机里一直没有抖音这个应用\",{\"1\":{\"631\":1}}],[\"我的鞋\",{\"1\":{\"683\":1}}],[\"我的书单\",{\"0\":{\"669\":1}}],[\"我的观点比其他任何人的都好\",{\"1\":{\"627\":1}}],[\"我的老师在我的作文成绩上故意给我打低分\",{\"1\":{\"626\":1}}],[\"我的判断应该是人类迈向知识时代的关键二十年\",{\"1\":{\"605\":1}}],[\"我的betxin\",{\"1\":{\"602\":1}}],[\"我的财务观点\",{\"0\":{\"595\":1}}],[\"我的心理似乎支持这一点\",{\"1\":{\"588\":1}}],[\"我的职业道路经历了很多转折\",{\"1\":{\"572\":1}}],[\"我的道路有哪些选择\",{\"1\":{\"570\":1}}],[\"我的祖祖辈辈\",{\"1\":{\"552\":1}}],[\"我的家人如何联系到我\",{\"1\":{\"551\":1}}],[\"我的思考是\",{\"1\":{\"551\":1}}],[\"我的朋友们似乎都和我一样\",{\"1\":{\"572\":1}}],[\"我的朋友们\",{\"0\":{\"7\":1}}],[\"我的okr任务\",{\"0\":{\"4\":1}}],[\"崇尚逻辑思考\",{\"1\":{\"3\":1}}],[\"lmsgprefix\",{\"1\":{\"1179\":1}}],[\"lmicroseconds\",{\"1\":{\"1179\":1,\"1181\":1}}],[\"ldate\",{\"1\":{\"1179\":3,\"1181\":1}}],[\"ldap\",{\"1\":{\"193\":1}}],[\"lname\",{\"1\":{\"1242\":1}}],[\"ln\",{\"1\":{\"1055\":4,\"1178\":1}}],[\"lg\",{\"1\":{\"981\":2}}],[\"l关闭go语言的内联优化\",{\"1\":{\"978\":1}}],[\"lying\",{\"1\":{\"523\":1}}],[\"lucas\",{\"1\":{\"1241\":2}}],[\"lucky\",{\"1\":{\"523\":1}}],[\"luck\",{\"1\":{\"90\":1}}],[\"lutc\",{\"1\":{\"1179\":1}}],[\"luminous\",{\"1\":{\"523\":1}}],[\"lua脚本的原子性\",{\"1\":{\"1106\":1}}],[\"lua脚本\",{\"0\":{\"1104\":1},\"1\":{\"1104\":1}}],[\"lua\",{\"1\":{\"437\":1}}],[\"lte\",{\"1\":{\"1242\":2}}],[\"lte=130\",{\"1\":{\"1242\":1}}],[\"ltime\",{\"1\":{\"1179\":4}}],[\"ltrim\",{\"1\":{\"405\":1}}],[\"ltv1\",{\"1\":{\"150\":1}}],[\"ltv\",{\"1\":{\"150\":1}}],[\"llongfile\",{\"1\":{\"1179\":2,\"1181\":1}}],[\"ll\",{\"1\":{\"1073\":1}}],[\"llap\",{\"1\":{\"557\":2}}],[\"llen\",{\"1\":{\"405\":1}}],[\"llvm\",{\"1\":{\"129\":2}}],[\"llvm编译器基础设施\",{\"1\":{\"129\":1}}],[\"lpop\",{\"1\":{\"405\":1}}],[\"lpushx\",{\"1\":{\"405\":1}}],[\"lpush\",{\"1\":{\"405\":1,\"424\":1}}],[\"lrange\",{\"1\":{\"405\":1}}],[\"lrem\",{\"1\":{\"405\":1}}],[\"lru\",{\"1\":{\"377\":16}}],[\"lrloseumgh\",{\"1\":{\"335\":1}}],[\"lh\",{\"1\":{\"329\":2}}],[\"l++\",{\"1\":{\"305\":1,\"335\":1}}],[\"l2=l2\",{\"1\":{\"296\":1}}],[\"l2==nil\",{\"1\":{\"296\":1}}],[\"l2\",{\"1\":{\"296\":11}}],[\"l1==nil\",{\"1\":{\"296\":1}}],[\"l1\",{\"1\":{\"296\":16}}],[\"l\",{\"1\":{\"258\":5,\"305\":4,\"318\":1,\"326\":7,\"335\":4,\"722\":1,\"959\":2,\"960\":1,\"961\":1,\"967\":1,\"978\":1,\"982\":1,\"1055\":12,\"1063\":2,\"1067\":3,\"1146\":7,\"1208\":1}}],[\"legal\",{\"1\":{\"1124\":1}}],[\"legacy\",{\"1\":{\"138\":1}}],[\"ledger\",{\"1\":{\"927\":6}}],[\"led\",{\"1\":{\"523\":1}}],[\"lessons\",{\"1\":{\"543\":1}}],[\"less\",{\"1\":{\"523\":2,\"543\":1,\"547\":1}}],[\"level层\",{\"1\":{\"397\":1}}],[\"level\",{\"1\":{\"397\":2,\"523\":1}}],[\"levelorder\",{\"1\":{\"303\":1,\"304\":1,\"305\":1}}],[\"lefth\",{\"1\":{\"328\":2}}],[\"left向右移动\",{\"1\":{\"300\":1}}],[\"left++\",{\"1\":{\"300\":1}}],[\"left+1\",{\"1\":{\"279\":4}}],[\"left列的从下到上遍历\",{\"1\":{\"300\":1}}],[\"left>right\",{\"1\":{\"300\":1}}],[\"leftleft\",{\"1\":{\"283\":4}}],[\"left\",{\"1\":{\"250\":1,\"279\":2,\"297\":6,\"298\":3,\"299\":12,\"300\":2,\"303\":2,\"304\":2,\"305\":2,\"307\":7,\"326\":7,\"327\":1,\"328\":1,\"329\":3,\"523\":1,\"543\":3,\"557\":1}}],[\"leetcode\",{\"0\":{\"1262\":1,\"1263\":1},\"2\":{\"222\":1,\"270\":1,\"273\":1,\"339\":1}}],[\"leaving\",{\"0\":{\"548\":1}}],[\"leave\",{\"0\":{\"550\":1},\"1\":{\"547\":1,\"563\":1}}],[\"lead\",{\"1\":{\"523\":1}}],[\"leaders\",{\"1\":{\"523\":1,\"543\":4}}],[\"leader\",{\"1\":{\"426\":1,\"543\":1}}],[\"least\",{\"1\":{\"519\":1,\"523\":1,\"537\":2,\"560\":1,\"1053\":1}}],[\"leak来解决\",{\"1\":{\"462\":1}}],[\"leak方法\",{\"1\":{\"461\":1}}],[\"leak的例子\",{\"1\":{\"461\":1}}],[\"leak将局部变量分配道堆上\",{\"1\":{\"461\":1}}],[\"leak可以用于全局变量\",{\"1\":{\"461\":1}}],[\"leak\",{\"0\":{\"461\":1},\"1\":{\"461\":1,\"462\":1}}],[\"leaf超额抵押铸造产生的可以抵押资产包括btc\",{\"1\":{\"187\":1}}],[\"leaf超额抵押产生的\",{\"1\":{\"173\":1}}],[\"leaf铸币利率的提升会让大家的还款意愿提升\",{\"1\":{\"176\":1}}],[\"leaf铸币利率从8\",{\"1\":{\"176\":1}}],[\"leaf贷出来的pusd用户会进一步在swap中将pusd转换为其他稳定币\",{\"1\":{\"176\":1}}],[\"leaf贷款得来的pusd的成本会大幅升高\",{\"1\":{\"176\":1}}],[\"leaf中的pusd时\",{\"1\":{\"176\":1}}],[\"leaf的利息给补齐了\",{\"1\":{\"177\":1}}],[\"leaf的贷款利息\",{\"1\":{\"177\":1}}],[\"leaf的总抵押目前有4556万美元\",{\"1\":{\"174\":1}}],[\"leaf的官网\",{\"1\":{\"174\":1}}],[\"leaf\",{\"1\":{\"174\":1}}],[\"learned\",{\"1\":{\"543\":1}}],[\"learnt\",{\"1\":{\"537\":1}}],[\"learning\",{\"1\":{\"479\":4,\"548\":1,\"563\":1,\"1127\":1},\"2\":{\"778\":1}}],[\"learn\",{\"1\":{\"90\":1,\"537\":1,\"543\":3,\"557\":1,\"977\":6},\"2\":{\"526\":1,\"527\":1}}],[\"lethal\",{\"1\":{\"523\":1}}],[\"letter\",{\"1\":{\"210\":3}}],[\"lettercombinations\",{\"1\":{\"210\":1}}],[\"let\",{\"1\":{\"90\":4,\"152\":21,\"447\":1,\"448\":5,\"449\":2,\"450\":3,\"451\":3,\"458\":2,\"459\":1,\"460\":2,\"461\":1,\"462\":1,\"463\":4,\"467\":1,\"468\":19,\"469\":2,\"470\":2,\"472\":1,\"473\":5,\"475\":2,\"477\":1,\"478\":1,\"479\":5,\"480\":6,\"481\":12,\"482\":3,\"483\":7,\"519\":3,\"547\":2,\"1055\":1,\"1116\":2,\"1117\":2,\"1118\":4,\"1119\":2,\"1122\":1,\"1124\":1,\"1127\":1}}],[\"len则分别保存了channel参数的长度和message参数的长度\",{\"1\":{\"435\":1}}],[\"lenb++\",{\"1\":{\"324\":1}}],[\"lenb\",{\"1\":{\"324\":4}}],[\"lena++\",{\"1\":{\"324\":1}}],[\"lena\",{\"1\":{\"324\":4}}],[\"lengthoflongestsubstring\",{\"1\":{\"320\":1}}],[\"lengthoflis\",{\"1\":{\"257\":1}}],[\"length==0\",{\"1\":{\"252\":1}}],[\"length\",{\"1\":{\"252\":3,\"303\":2,\"304\":2,\"305\":2,\"336\":2,\"397\":1,\"398\":1}}],[\"lendingpoolbankaccrueinterestevent\",{\"1\":{\"152\":2}}],[\"lending\",{\"1\":{\"152\":3}}],[\"lend\",{\"0\":{\"158\":1},\"1\":{\"150\":1,\"152\":3,\"157\":1},\"2\":{\"146\":1,\"155\":1,\"168\":1}}],[\"len\",{\"1\":{\"90\":7,\"208\":8,\"209\":2,\"210\":5,\"211\":3,\"212\":7,\"213\":4,\"214\":4,\"215\":3,\"216\":6,\"217\":6,\"218\":6,\"219\":6,\"228\":3,\"230\":8,\"236\":1,\"237\":1,\"238\":2,\"239\":2,\"242\":1,\"244\":1,\"246\":3,\"249\":5,\"253\":4,\"254\":2,\"255\":4,\"257\":4,\"258\":4,\"259\":4,\"260\":6,\"261\":2,\"262\":2,\"263\":7,\"264\":2,\"265\":6,\"266\":2,\"267\":4,\"268\":1,\"275\":1,\"276\":2,\"277\":2,\"279\":2,\"280\":7,\"283\":1,\"284\":3,\"291\":2,\"293\":2,\"300\":3,\"301\":7,\"302\":4,\"303\":2,\"304\":2,\"305\":4,\"307\":3,\"311\":4,\"312\":2,\"313\":5,\"318\":1,\"319\":4,\"320\":1,\"323\":1,\"325\":4,\"326\":2,\"332\":1,\"334\":2,\"335\":2,\"336\":4,\"393\":2,\"394\":1,\"402\":2,\"427\":1,\"435\":3,\"447\":2,\"468\":6,\"516\":1,\"814\":2,\"827\":1,\"838\":1,\"944\":3,\"945\":3,\"946\":1,\"947\":3,\"948\":4,\"967\":1,\"980\":2,\"1019\":1,\"1053\":1,\"1055\":2,\"1056\":1,\"1093\":1,\"1099\":1,\"1135\":1,\"1193\":1}}],[\"lxc\",{\"1\":{\"76\":2}}],[\"lo库本身支持的方法有许多\",{\"1\":{\"1019\":1}}],[\"lodash则是一个一致性\",{\"1\":{\"1017\":1}}],[\"lo是基于go1\",{\"1\":{\"1017\":1}}],[\"loop\",{\"1\":{\"1127\":4}}],[\"loops\",{\"0\":{\"1127\":1}}],[\"looplab\",{\"1\":{\"1010\":2}}],[\"look\",{\"1\":{\"1118\":1}}],[\"looked\",{\"1\":{\"523\":1}}],[\"looking\",{\"1\":{\"523\":2}}],[\"looks\",{\"1\":{\"90\":1,\"523\":1}}],[\"lots\",{\"1\":{\"1116\":2,\"1117\":2}}],[\"lot\",{\"1\":{\"537\":1,\"548\":2}}],[\"lost\",{\"1\":{\"557\":2}}],[\"lose\",{\"1\":{\"547\":2}}],[\"loses\",{\"1\":{\"523\":1}}],[\"loss\",{\"1\":{\"152\":3}}],[\"lover\",{\"1\":{\"523\":1}}],[\"love\",{\"1\":{\"523\":4,\"548\":3,\"557\":1}}],[\"lonely\",{\"1\":{\"523\":2}}],[\"longer\",{\"1\":{\"483\":2,\"523\":1,\"540\":2,\"543\":3,\"989\":1}}],[\"longestpalindromesubseq\",{\"1\":{\"268\":1}}],[\"longestcommonsubsequence\",{\"1\":{\"260\":1,\"261\":1}}],[\"long\",{\"1\":{\"394\":1,\"395\":3,\"397\":2,\"483\":2,\"523\":2,\"543\":2,\"547\":3,\"560\":1,\"563\":1,\"991\":1,\"992\":2,\"993\":1,\"1055\":1,\"1067\":2},\"2\":{\"562\":1}}],[\"long>\",{\"1\":{\"264\":1}}],[\"long>>\",{\"1\":{\"264\":1}}],[\"loc\",{\"1\":{\"1212\":5}}],[\"location\",{\"0\":{\"1208\":1},\"1\":{\"523\":2,\"673\":1,\"997\":2,\"1080\":6,\"1205\":1,\"1208\":8,\"1212\":5,\"1213\":1}}],[\"localtime\",{\"1\":{\"1212\":3}}],[\"localaddr\",{\"1\":{\"1055\":1}}],[\"localaddrcontextkey\",{\"1\":{\"1055\":1}}],[\"localsend\",{\"1\":{\"494\":1}}],[\"localsent\",{\"0\":{\"494\":1},\"1\":{\"494\":1}}],[\"localsent这个工具就是如此\",{\"1\":{\"493\":1}}],[\"localsent推荐\",{\"0\":{\"493\":1}}],[\"localhost\",{\"1\":{\"192\":4,\"1045\":1,\"1047\":1,\"1193\":2,\"1225\":2}}],[\"local\",{\"1\":{\"74\":4,\"991\":2,\"1179\":3,\"1212\":3}}],[\"locker\",{\"1\":{\"1146\":2}}],[\"locks\",{\"1\":{\"1123\":1}}],[\"locking\",{\"1\":{\"424\":1}}],[\"lock\",{\"0\":{\"371\":1,\"372\":1,\"373\":1},\"1\":{\"361\":3,\"362\":4,\"364\":1,\"366\":2,\"368\":3,\"369\":4,\"370\":6,\"371\":1,\"372\":1,\"373\":10,\"374\":1,\"436\":7,\"459\":1,\"460\":1,\"516\":1,\"517\":1,\"673\":1,\"1137\":1,\"1142\":4,\"1143\":3,\"1144\":4,\"1145\":1,\"1146\":3}}],[\"lo++\",{\"1\":{\"332\":1}}],[\"lo+hi\",{\"1\":{\"325\":1}}],[\"lo\",{\"0\":{\"1017\":1},\"1\":{\"325\":3,\"332\":4,\"1017\":1,\"1018\":4,\"1019\":4,\"1132\":1}}],[\"low\",{\"1\":{\"252\":4,\"283\":6,\"1118\":1}}],[\"loadint64\",{\"1\":{\"1146\":1}}],[\"loaduint32\",{\"1\":{\"1145\":1}}],[\"loadlocationfromtzdata\",{\"1\":{\"1208\":1}}],[\"loadlocation\",{\"1\":{\"1001\":1,\"1205\":1,\"1208\":4,\"1212\":1}}],[\"loadconffromfile\",{\"1\":{\"981\":3}}],[\"load\",{\"1\":{\"395\":1,\"458\":2,\"517\":1,\"1135\":2,\"1208\":2}}],[\"loaded\",{\"1\":{\"120\":1}}],[\"loan\",{\"0\":{\"163\":1},\"1\":{\"563\":1}}],[\"log标准库\",{\"1\":{\"1180\":1}}],[\"log包下有一些类型可以让我们自行配置\",{\"1\":{\"1179\":1}}],[\"loginhandler\",{\"1\":{\"1045\":2,\"1047\":2}}],[\"login\",{\"1\":{\"1045\":3,\"1047\":1}}],[\"logic\",{\"1\":{\"939\":1}}],[\"log实例\",{\"1\":{\"981\":1}}],[\"logrus\",{\"1\":{\"981\":2}}],[\"logf\",{\"1\":{\"967\":1,\"1055\":3}}],[\"logfile\",{\"1\":{\"1181\":2}}],[\"logfile1\",{\"1\":{\"357\":1}}],[\"logfile0\",{\"1\":{\"357\":1}}],[\"logger实例\",{\"1\":{\"1181\":1}}],[\"logger类型配置日志\",{\"0\":{\"1179\":1}}],[\"logger2\",{\"1\":{\"463\":2}}],[\"logger\",{\"1\":{\"463\":20,\"972\":1,\"981\":5,\"997\":2,\"1050\":1,\"1051\":2,\"1052\":1,\"1179\":1,\"1181\":2,\"1182\":4}}],[\"logn\",{\"1\":{\"397\":1,\"948\":1,\"950\":1}}],[\"log文件\",{\"1\":{\"357\":1,\"360\":1}}],[\"log保留在redo\",{\"1\":{\"357\":1}}],[\"log什么时候刷盘\",{\"1\":{\"357\":1}}],[\"log时会先写到redo\",{\"1\":{\"357\":1}}],[\"log也有自己的redo\",{\"1\":{\"357\":1}}],[\"log也不是直接写入磁盘的\",{\"1\":{\"357\":1}}],[\"log在磁盘中是顺序写\",{\"1\":{\"357\":1}}],[\"log写到磁盘\",{\"1\":{\"357\":1}}],[\"log来恢复数据\",{\"1\":{\"357\":1}}],[\"log是在数据被修改后\",{\"1\":{\"357\":1}}],[\"log是如何刷盘的\",{\"1\":{\"356\":1}}],[\"log格式都有一个roll\",{\"1\":{\"356\":1}}],[\"logouthandler\",{\"1\":{\"1045\":2}}],[\"logout\",{\"1\":{\"563\":1,\"1045\":1}}],[\"logo\",{\"1\":{\"195\":1}}],[\"log\",{\"0\":{\"356\":1,\"357\":1,\"1177\":1},\"1\":{\"152\":4,\"355\":10,\"356\":13,\"357\":48,\"358\":11,\"360\":40,\"361\":2,\"377\":4,\"446\":1,\"463\":4,\"511\":1,\"516\":3,\"517\":2,\"547\":1,\"981\":3,\"1047\":2,\"1063\":5,\"1067\":7,\"1072\":9,\"1073\":7,\"1079\":4,\"1095\":5,\"1099\":2,\"1177\":2,\"1178\":4,\"1180\":6,\"1181\":11,\"1182\":2,\"1183\":1},\"2\":{\"1062\":1,\"1114\":1}}],[\"logs\",{\"1\":{\"66\":1,\"105\":1}}],[\"lvm\",{\"1\":{\"61\":1}}],[\"lstdflags\",{\"1\":{\"1179\":1,\"1181\":1,\"1182\":1}}],[\"lshortfile\",{\"1\":{\"1179\":1}}],[\"lset\",{\"1\":{\"405\":1}}],[\"lson\",{\"1\":{\"313\":4,\"950\":4}}],[\"ls\",{\"1\":{\"51\":3,\"53\":1,\"54\":6,\"55\":5,\"66\":1,\"68\":3,\"69\":1,\"70\":1,\"72\":1,\"74\":1,\"967\":1,\"991\":2}}],[\"layout\",{\"1\":{\"1212\":4}}],[\"layer\",{\"1\":{\"523\":1,\"956\":1}}],[\"layered\",{\"1\":{\"78\":1}}],[\"lang\",{\"1\":{\"563\":1}}],[\"languages\",{\"1\":{\"1067\":1,\"1118\":1,\"1123\":1}}],[\"language\",{\"1\":{\"3\":1,\"90\":1,\"827\":6,\"1115\":1,\"1118\":1}}],[\"land\",{\"1\":{\"548\":1}}],[\"large\",{\"1\":{\"523\":4,\"547\":3,\"1055\":1}}],[\"larger\",{\"1\":{\"523\":5}}],[\"largest\",{\"1\":{\"313\":9,\"523\":1,\"950\":9}}],[\"law\",{\"1\":{\"523\":3,\"563\":1}}],[\"later\",{\"1\":{\"468\":1,\"523\":2,\"537\":2,\"547\":1,\"557\":1,\"560\":1,\"1118\":1}}],[\"latest\",{\"1\":{\"48\":2,\"51\":2,\"54\":2,\"68\":2,\"192\":1,\"957\":1,\"989\":1}}],[\"lazy\",{\"0\":{\"460\":1},\"1\":{\"460\":9,\"463\":3,\"560\":1}}],[\"lazyfree\",{\"1\":{\"411\":1}}],[\"lag\",{\"1\":{\"425\":1}}],[\"lag两个选项可以防止主服务器在不安全的情况下执行写命令\",{\"1\":{\"425\":1}}],[\"lag的值应该在0秒或者1之间跳动\",{\"1\":{\"425\":1}}],[\"lambda\",{\"1\":{\"193\":1}}],[\"lamport\",{\"1\":{\"124\":1,\"125\":1}}],[\"lamports的静态值\",{\"1\":{\"118\":1}}],[\"lamports\",{\"1\":{\"111\":2}}],[\"lastname\",{\"1\":{\"1242\":1}}],[\"lastsave属性是一个unix时间戳\",{\"1\":{\"417\":1}}],[\"laststoneweightii\",{\"1\":{\"238\":1}}],[\"last\",{\"1\":{\"152\":2,\"523\":1,\"540\":1,\"549\":1,\"1120\":1,\"1137\":1}}],[\"labs的solana可验证构建cli使用户能够独立地验证链上程序与发布的源代码\",{\"1\":{\"128\":1}}],[\"labels\",{\"1\":{\"74\":1}}],[\"liwenzhou\",{\"1\":{\"1098\":1,\"1194\":1}}],[\"lim\",{\"1\":{\"1035\":2,\"1036\":2,\"1037\":4}}],[\"limiter\",{\"1\":{\"1034\":3,\"1035\":2,\"1036\":2,\"1037\":2,\"1038\":1}}],[\"limited\",{\"1\":{\"459\":1}}],[\"limit\",{\"0\":{\"1232\":1},\"1\":{\"152\":3,\"410\":2,\"523\":1,\"1034\":4,\"1038\":1,\"1222\":1,\"1232\":2}}],[\"license\",{\"1\":{\"989\":2}}],[\"lixv\",{\"1\":{\"1019\":2}}],[\"lixvyang\",{\"1\":{\"3\":1,\"1011\":1}}],[\"lixinage\",{\"1\":{\"1172\":2}}],[\"lixinsss\",{\"1\":{\"1080\":1}}],[\"lixin顺利传递给了name参数\",{\"1\":{\"1080\":1}}],[\"lixin\",{\"1\":{\"967\":3,\"972\":2,\"976\":3,\"977\":7,\"978\":4,\"989\":1,\"1005\":1,\"1072\":1,\"1079\":1,\"1080\":12,\"1088\":1,\"1094\":1,\"1095\":4,\"1100\":1,\"1168\":2,\"1169\":2,\"1171\":4,\"1172\":1,\"1173\":3,\"1181\":1,\"1188\":2}}],[\"liquid\",{\"1\":{\"704\":1}}],[\"liquidate\",{\"0\":{\"162\":1},\"1\":{\"150\":1,\"157\":1}}],[\"li\",{\"1\":{\"543\":1}}],[\"liu\",{\"1\":{\"537\":1}}],[\"lies\",{\"1\":{\"523\":1}}],[\"lightweight\",{\"1\":{\"1119\":1}}],[\"light\",{\"1\":{\"523\":12}}],[\"living\",{\"1\":{\"523\":2,\"543\":1,\"547\":1,\"563\":1}}],[\"lives\",{\"1\":{\"543\":1,\"547\":1,\"563\":1}}],[\"live\",{\"1\":{\"61\":1,\"523\":1,\"543\":2,\"547\":3,\"548\":1}}],[\"lifetime\",{\"1\":{\"560\":1}}],[\"life\",{\"1\":{\"523\":20,\"543\":8,\"547\":2,\"563\":1,\"1055\":1}}],[\"literal\",{\"1\":{\"1138\":1}}],[\"literals\",{\"1\":{\"483\":1}}],[\"little\",{\"1\":{\"523\":2,\"537\":1,\"560\":1}}],[\"linear\",{\"1\":{\"537\":3}}],[\"line\",{\"1\":{\"523\":1,\"560\":1,\"1119\":2,\"1122\":1,\"1124\":7,\"1125\":1,\"1126\":5,\"1127\":1,\"1153\":2,\"1172\":2,\"1179\":3}}],[\"linebreak\",{\"1\":{\"483\":1}}],[\"lines\",{\"1\":{\"483\":1,\"989\":1}}],[\"link属性对应的是clusterlink结构\",{\"1\":{\"427\":1}}],[\"link\",{\"1\":{\"426\":1,\"427\":1}}],[\"lindex\",{\"1\":{\"405\":1}}],[\"linsert\",{\"1\":{\"405\":1}}],[\"linux\",{\"1\":{\"57\":1,\"68\":2,\"74\":1,\"75\":2,\"76\":2,\"77\":2,\"494\":1,\"997\":2,\"1067\":2},\"2\":{\"91\":1}}],[\"liability\",{\"1\":{\"152\":9}}],[\"liabilities\",{\"1\":{\"150\":1,\"152\":3}}],[\"likely\",{\"1\":{\"543\":2,\"547\":2,\"989\":1}}],[\"like\",{\"1\":{\"90\":1,\"192\":6,\"353\":2,\"478\":2,\"479\":6,\"519\":1,\"523\":12,\"537\":2,\"543\":6,\"1120\":1}}],[\"libcore\",{\"1\":{\"449\":1}}],[\"libc6\",{\"1\":{\"58\":2}}],[\"libsql\",{\"1\":{\"192\":1}}],[\"lib\",{\"1\":{\"58\":1,\"74\":2}}],[\"library\",{\"1\":{\"49\":5,\"447\":7,\"548\":1,\"557\":1,\"989\":1}}],[\"list然后重新调度\",{\"1\":{\"1135\":1}}],[\"listpack\",{\"1\":{\"406\":1,\"410\":1}}],[\"list的内部实现是双向链表或者压缩列表\",{\"1\":{\"404\":1}}],[\"listnode\",{\"1\":{\"278\":4,\"290\":3,\"294\":5,\"295\":5,\"296\":7,\"324\":3,\"394\":6}}],[\"listener\",{\"1\":{\"1055\":5}}],[\"listens\",{\"1\":{\"1055\":1}}],[\"listenandserve其实就是完成了两个工作\",{\"1\":{\"1055\":1}}],[\"listenandserve函数\",{\"1\":{\"1055\":1}}],[\"listenandserve函数实现监听与服务功能\",{\"1\":{\"1055\":1}}],[\"listenandserve方法底层我们就知道了gin的核心的监听和服务\",{\"1\":{\"1054\":1}}],[\"listenandserve方法\",{\"0\":{\"1055\":1},\"1\":{\"1054\":1}}],[\"listenandserve服务监听我们的engine\",{\"1\":{\"1054\":1}}],[\"listenandserve\",{\"1\":{\"516\":1,\"1045\":1,\"1047\":1,\"1054\":1,\"1055\":5,\"1073\":1,\"1079\":1,\"1193\":1}}],[\"listening\",{\"1\":{\"425\":1,\"516\":1,\"543\":2,\"1054\":1,\"1117\":2,\"1193\":2}}],[\"listen\",{\"1\":{\"90\":5,\"543\":1,\"1055\":3,\"1063\":2,\"1067\":1,\"1073\":1,\"1146\":5}}],[\"lists\",{\"1\":{\"58\":1}}],[\"list\",{\"0\":{\"404\":1},\"1\":{\"23\":5,\"376\":1,\"394\":2,\"400\":1,\"404\":5,\"420\":2,\"426\":1,\"976\":1,\"1135\":1}}],[\"gte=0\",{\"1\":{\"1242\":1}}],[\"gt\",{\"1\":{\"1239\":1}}],[\"gfree\",{\"1\":{\"1135\":3}}],[\"gfput\",{\"1\":{\"1135\":2}}],[\"gp\",{\"1\":{\"1135\":3}}],[\"gpreempted\",{\"1\":{\"1132\":2}}],[\"gpreempted`\",{\"1\":{\"1132\":1}}],[\"g0\",{\"1\":{\"1133\":10,\"1135\":1}}],[\"g0是持有调度栈的goroutine\",{\"1\":{\"1133\":1}}],[\"gscan\",{\"1\":{\"1132\":1}}],[\"gsyscall\",{\"1\":{\"1132\":2,\"1135\":1}}],[\"g来表示\",{\"1\":{\"1132\":1}}],[\"gmp\",{\"0\":{\"1131\":1},\"1\":{\"1135\":1}}],[\"guess\",{\"1\":{\"1119\":1}}],[\"guintptr\",{\"1\":{\"1132\":1,\"1134\":2}}],[\"gui\",{\"1\":{\"721\":2}}],[\"guides\",{\"1\":{\"1084\":1}}],[\"guide\",{\"1\":{\"547\":1}}],[\"guitar\",{\"1\":{\"543\":1}}],[\"gwaiting通过\",{\"1\":{\"1135\":1}}],[\"gwaiting\",{\"1\":{\"1132\":2,\"1135\":4}}],[\"gwserver\",{\"1\":{\"1079\":2}}],[\"gwmux\",{\"1\":{\"1079\":3}}],[\"gw\",{\"1\":{\"1079\":1}}],[\"g\",{\"0\":{\"1132\":1},\"1\":{\"1005\":2,\"1131\":1,\"1132\":7,\"1133\":4,\"1135\":15}}],[\"gcdata\",{\"1\":{\"1139\":1}}],[\"gcopystack\",{\"1\":{\"1132\":1}}],[\"gc\",{\"1\":{\"1132\":2,\"1135\":4}}],[\"gcflags=\",{\"1\":{\"959\":2,\"960\":1,\"961\":1,\"978\":1}}],[\"gcp\",{\"1\":{\"772\":1}}],[\"gcc\",{\"1\":{\"58\":2,\"90\":8}}],[\"gdead\",{\"1\":{\"1132\":1,\"1135\":2}}],[\"gdac\",{\"1\":{\"704\":1}}],[\"gdp增长由消费者举债提供资金\",{\"1\":{\"648\":1}}],[\"gdp继续增长而家庭收入保持不变\",{\"1\":{\"648\":1}}],[\"globrunqputbatch方法\",{\"1\":{\"1135\":1}}],[\"globrunqget方法\",{\"1\":{\"1135\":1}}],[\"global\",{\"1\":{\"458\":3,\"463\":6,\"464\":1,\"1052\":1}}],[\"gloomy\",{\"1\":{\"523\":1}}],[\"glorious\",{\"1\":{\"523\":1}}],[\"glamorous\",{\"1\":{\"523\":1}}],[\"gidle\",{\"1\":{\"1132\":1}}],[\"gin和grpc\",{\"1\":{\"1101\":1}}],[\"gin在设计上将中间件与业务逻辑都抽象为gin\",{\"1\":{\"1057\":1}}],[\"gin在性能上针对http\",{\"1\":{\"1057\":1}}],[\"gin在gin\",{\"1\":{\"1055\":1}}],[\"gin通过实现go语言提供的接口快捷地接入go的内置库功能\",{\"1\":{\"1057\":1}}],[\"gin框架的拦截器呢\",{\"1\":{\"1100\":1}}],[\"gin框架是是目前go\",{\"1\":{\"1060\":1}}],[\"gin框架是一款高性能的go\",{\"1\":{\"1050\":1}}],[\"gin框架中使用zerolog日志库\",{\"0\":{\"1060\":1}}],[\"gin框架实质上实现的网络通信层以上的框架搭建\",{\"1\":{\"1057\":1}}],[\"gin的context\",{\"1\":{\"1056\":1}}],[\"gin的中间件与业务逻辑函数实质上都是gin\",{\"1\":{\"1056\":1}}],[\"gin的最底层的监听服务其实是通过go语言官方的net\",{\"1\":{\"1055\":1}}],[\"gin的default函数\",{\"0\":{\"1051\":1}}],[\"gin里面还有一颗路由树\",{\"1\":{\"1053\":1}}],[\"gin\",{\"0\":{\"1050\":1,\"1292\":1},\"1\":{\"972\":17,\"1050\":3,\"1053\":1,\"1054\":2,\"1055\":1,\"1100\":7},\"2\":{\"987\":1,\"1007\":1,\"1040\":1,\"1059\":1,\"1062\":1}}],[\"girl\",{\"1\":{\"549\":1}}],[\"giving\",{\"1\":{\"523\":2}}],[\"gives\",{\"1\":{\"543\":1}}],[\"given\",{\"1\":{\"523\":1,\"1055\":1}}],[\"give\",{\"1\":{\"519\":1,\"557\":1,\"563\":2}}],[\"gitaly\",{\"1\":{\"724\":1}}],[\"gitlab\",{\"1\":{\"721\":3,\"724\":2}}],[\"git\",{\"1\":{\"78\":1,\"192\":1,\"724\":1,\"988\":2}}],[\"gitignore\",{\"1\":{\"60\":1}}],[\"github等等\",{\"1\":{\"525\":1}}],[\"github上的优秀代码仓库\",{\"1\":{\"504\":1}}],[\"github上还有各个语言的讨论区\",{\"1\":{\"494\":1}}],[\"githubprovider\",{\"1\":{\"192\":2}}],[\"github\",{\"1\":{\"3\":1,\"48\":1,\"191\":1,\"192\":7,\"195\":1,\"509\":3,\"511\":3,\"956\":1,\"957\":1,\"958\":2,\"959\":3,\"960\":2,\"972\":2,\"973\":1,\"975\":2,\"976\":4,\"977\":3,\"981\":1,\"988\":2,\"989\":1,\"992\":1,\"1000\":1,\"1001\":1,\"1005\":1,\"1010\":2,\"1011\":1,\"1017\":1,\"1018\":3,\"1019\":1,\"1045\":1,\"1047\":1,\"1052\":1,\"1054\":1,\"1056\":1,\"1067\":1,\"1073\":1,\"1079\":2,\"1100\":1,\"1181\":1,\"1223\":2,\"1225\":1,\"1245\":1}}],[\"geeks\",{\"1\":{\"1118\":1}}],[\"geek\",{\"1\":{\"549\":1}}],[\"ge\",{\"1\":{\"547\":1}}],[\"gemini\",{\"1\":{\"534\":2}}],[\"gen\",{\"1\":{\"1067\":2,\"1078\":2,\"1079\":1}}],[\"gender\",{\"1\":{\"874\":13,\"875\":4,\"1084\":4,\"1088\":4}}],[\"genius\",{\"1\":{\"547\":1}}],[\"genghis\",{\"1\":{\"523\":1}}],[\"generations\",{\"1\":{\"547\":1,\"548\":1}}],[\"generation\",{\"1\":{\"547\":1}}],[\"generate使用gomock\",{\"1\":{\"977\":1}}],[\"generated\",{\"1\":{\"523\":1}}],[\"generateblock\",{\"1\":{\"514\":1,\"516\":1}}],[\"generateblock的作用是初始化每一个区块\",{\"1\":{\"511\":1}}],[\"generate\",{\"1\":{\"458\":2,\"977\":2,\"989\":1}}],[\"generally\",{\"1\":{\"523\":1}}],[\"genes\",{\"1\":{\"523\":1}}],[\"genesisblock是最重要的主要功能部分\",{\"1\":{\"517\":1}}],[\"genesisblock\",{\"1\":{\"517\":5}}],[\"germany\",{\"1\":{\"523\":1}}],[\"getmsg\",{\"1\":{\"1067\":1,\"1072\":3,\"1074\":1,\"1095\":1}}],[\"getmemento\",{\"1\":{\"838\":3}}],[\"getpid\",{\"1\":{\"1063\":1,\"1067\":4,\"1072\":1}}],[\"getvalue\",{\"1\":{\"1055\":2}}],[\"getdonechan\",{\"1\":{\"1055\":1}}],[\"getter\",{\"1\":{\"980\":5}}],[\"getting\",{\"1\":{\"523\":1}}],[\"getorders\",{\"1\":{\"980\":6}}],[\"getaveragepriceperstore\",{\"1\":{\"980\":8}}],[\"getresultbyapi\",{\"1\":{\"973\":3}}],[\"getrange\",{\"1\":{\"403\":1}}],[\"getflyweight\",{\"1\":{\"933\":1}}],[\"getinfo\",{\"1\":{\"978\":6}}],[\"getinfobyuid进行打桩\",{\"1\":{\"978\":1}}],[\"getinfobyuid\",{\"1\":{\"978\":3}}],[\"getinstanceonce\",{\"1\":{\"899\":5}}],[\"getinstance\",{\"1\":{\"898\":2,\"899\":4}}],[\"getintersectionnode\",{\"1\":{\"324\":1}}],[\"getname\",{\"1\":{\"867\":6,\"915\":1,\"1067\":1,\"1072\":2,\"1095\":1}}],[\"getbook\",{\"1\":{\"827\":4}}],[\"getbit\",{\"1\":{\"403\":1}}],[\"getsucceeded\",{\"1\":{\"1237\":2}}],[\"getstate\",{\"1\":{\"844\":3}}],[\"getsize\",{\"1\":{\"827\":5}}],[\"getset\",{\"1\":{\"403\":1}}],[\"getserversession\",{\"1\":{\"199\":1}}],[\"getenv\",{\"1\":{\"516\":1}}],[\"get和post我们的data值\",{\"1\":{\"511\":1}}],[\"getkeysinslot<slot><count>命令\",{\"1\":{\"431\":1}}],[\"getkthfromend\",{\"1\":{\"294\":2}}],[\"gethigh\",{\"1\":{\"329\":5}}],[\"getleastnumbers\",{\"1\":{\"313\":1}}],[\"get\",{\"0\":{\"1253\":1},\"1\":{\"58\":5,\"152\":2,\"403\":1,\"436\":1,\"460\":2,\"463\":2,\"509\":3,\"516\":1,\"523\":1,\"540\":1,\"957\":1,\"975\":1,\"976\":3,\"977\":1,\"978\":1,\"980\":2,\"988\":1,\"1000\":1,\"1018\":2,\"1045\":3,\"1050\":1,\"1053\":3,\"1055\":2,\"1080\":2,\"1093\":1,\"1100\":1,\"1119\":1,\"1188\":1,\"1193\":6,\"1223\":1,\"1245\":1}}],[\"gateway服务\",{\"1\":{\"1079\":1}}],[\"gateway插件器创建对应的pb\",{\"1\":{\"1079\":1}}],[\"gateway的作用了\",{\"1\":{\"1079\":1}}],[\"gateway呢\",{\"1\":{\"1078\":1}}],[\"gateway是protoc的一个插件\",{\"1\":{\"1078\":1}}],[\"gateway教程与transcoding\",{\"0\":{\"1078\":1}}],[\"gateway\",{\"1\":{\"1067\":2,\"1072\":2,\"1079\":9,\"1080\":1}}],[\"gathered\",{\"1\":{\"523\":1}}],[\"gathering\",{\"1\":{\"523\":1}}],[\"gamma\",{\"1\":{\"827\":3}}],[\"game\",{\"1\":{\"537\":1,\"861\":8}}],[\"games\",{\"1\":{\"537\":1,\"543\":3,\"557\":1}}],[\"gameplay\",{\"1\":{\"519\":1}}],[\"galileo\",{\"1\":{\"643\":1}}],[\"galaxy\",{\"1\":{\"523\":9}}],[\"gave\",{\"1\":{\"523\":1,\"537\":1,\"560\":1}}],[\"gadget\",{\"1\":{\"523\":1}}],[\"gap\",{\"0\":{\"372\":1},\"1\":{\"370\":2,\"372\":1,\"373\":1,\"947\":16}}],[\"gas\",{\"1\":{\"523\":2}}],[\"gas是什么样子也说不准\",{\"1\":{\"109\":1}}],[\"gas非常便宜\",{\"1\":{\"109\":1}}],[\"gb\",{\"1\":{\"357\":1}}],[\"grunning\",{\"1\":{\"1132\":2,\"1135\":9}}],[\"grunnable将\",{\"1\":{\"1135\":1}}],[\"grunnable放入本地队列\",{\"1\":{\"1135\":1}}],[\"grunnable通过\",{\"1\":{\"1135\":1}}],[\"grunnable\",{\"1\":{\"1132\":2,\"1135\":6,\"1137\":1}}],[\"grpc拦截器和gin的拦截器对比\",{\"0\":{\"1100\":1}}],[\"grpc服务ip端口的时候\",{\"1\":{\"1097\":1}}],[\"grpc请求分为直接请求和流式请求\",{\"1\":{\"1097\":1}}],[\"grpc可以在rpc的client\",{\"1\":{\"1096\":1}}],[\"grpc里规定可以存放二进制数据\",{\"1\":{\"1093\":1}}],[\"grpc元数据处理与加密认证和拦截中间件\",{\"0\":{\"1092\":1}}],[\"grpc导入别的包去使用\",{\"0\":{\"1085\":1}}],[\"grpc基础语法教程\",{\"0\":{\"1084\":1}}],[\"grpc语法和常见包的使用\",{\"0\":{\"1083\":1}}],[\"grpc插件\",{\"1\":{\"1078\":1}}],[\"grpc自己定义了一些常见的错误码\",{\"1\":{\"1074\":1}}],[\"grpc对比websocket\",{\"0\":{\"1073\":1},\"1\":{\"1075\":1}}],[\"grpc的加密处理\",{\"1\":{\"1101\":1}}],[\"grpc的加密处理中间件\",{\"0\":{\"1099\":1}}],[\"grpc的方法\",{\"1\":{\"1074\":1}}],[\"grpc的错误处理\",{\"0\":{\"1074\":1},\"1\":{\"1075\":1}}],[\"grpc的底层就是http\",{\"1\":{\"1072\":1}}],[\"grpc的使用\",{\"1\":{\"660\":1}}],[\"grpc只是定义类型和远程服务带有的参数和返回类型\",{\"1\":{\"1066\":1}}],[\"grpc与rpc一样\",{\"1\":{\"1066\":1}}],[\"grpc是google开源的现代高性能rpc框架\",{\"1\":{\"1066\":1}}],[\"grpc下载以及入门grpc\",{\"0\":{\"1066\":1}}],[\"grpc\",{\"0\":{\"1078\":1,\"1293\":1},\"1\":{\"1067\":17,\"1072\":4,\"1073\":6,\"1074\":2,\"1078\":3,\"1079\":15,\"1084\":3,\"1089\":1,\"1093\":1,\"1095\":10,\"1097\":6,\"1098\":1,\"1099\":14},\"2\":{\"1065\":1,\"1070\":1,\"1077\":1,\"1082\":1,\"1091\":1,\"1103\":1}}],[\"grpc教程\",{\"0\":{\"1063\":1,\"1066\":1,\"1071\":1,\"1078\":1,\"1083\":1,\"1092\":1}}],[\"great\",{\"1\":{\"543\":1,\"560\":1}}],[\"green\",{\"1\":{\"523\":1,\"547\":1,\"1120\":1}}],[\"greeter是这样\",{\"1\":{\"1079\":1}}],[\"greetering\",{\"1\":{\"1067\":2,\"1072\":5,\"1074\":1,\"1079\":1,\"1080\":3}}],[\"greet\",{\"1\":{\"467\":3}}],[\"greeting\",{\"1\":{\"448\":10,\"449\":2}}],[\"grouting\",{\"1\":{\"1135\":1}}],[\"ground\",{\"1\":{\"523\":1}}],[\"group的形式去写\",{\"1\":{\"968\":1}}],[\"groupeventheader\",{\"1\":{\"152\":2}}],[\"group\",{\"1\":{\"152\":11,\"351\":1,\"352\":1,\"357\":1,\"360\":3,\"547\":2,\"1052\":5,\"1053\":7,\"1239\":1}}],[\"groupstage\",{\"1\":{\"1236\":2,\"1239\":2}}],[\"groups\",{\"1\":{\"75\":1,\"547\":1}}],[\"groping\",{\"1\":{\"523\":1}}],[\"grows\",{\"1\":{\"547\":1}}],[\"growing\",{\"1\":{\"523\":2}}],[\"grow\",{\"1\":{\"523\":1,\"540\":1}}],[\"grid\",{\"1\":{\"319\":13}}],[\"grafana等云服务产品\",{\"1\":{\"1030\":1}}],[\"graduate\",{\"2\":{\"763\":1}}],[\"gradually\",{\"1\":{\"523\":3}}],[\"grade\",{\"1\":{\"543\":3,\"547\":1}}],[\"grass\",{\"1\":{\"523\":1}}],[\"grasslands\",{\"1\":{\"523\":1}}],[\"grateful\",{\"1\":{\"523\":1}}],[\"gravitation\",{\"1\":{\"523\":1}}],[\"gravity\",{\"1\":{\"523\":3}}],[\"gravatar\",{\"1\":{\"194\":1}}],[\"graph\",{\"2\":{\"273\":1}}],[\"ghi\",{\"1\":{\"210\":1}}],[\"ghost\",{\"1\":{\"143\":1}}],[\"ghcr\",{\"1\":{\"48\":1}}],[\"gz\",{\"1\":{\"58\":7}}],[\"go操作mongo最便捷的方式\",{\"0\":{\"1216\":1}}],[\"gobencode\",{\"1\":{\"1212\":1}}],[\"gobdecode\",{\"1\":{\"1212\":1}}],[\"gobuf\",{\"1\":{\"1132\":4}}],[\"go1\",{\"1\":{\"1204\":1}}],[\"go内存管理的基本单元是mspan\",{\"1\":{\"1150\":1}}],[\"go程序启动时会向操作系统申请一大块内存\",{\"1\":{\"1150\":1}}],[\"go没法使用工作线程的本地缓存mcache和全局中心缓存mcentral上管理超过32kb的内存申请\",{\"1\":{\"1149\":1}}],[\"go还为每一个mspan的种类维护着一个mcentral\",{\"1\":{\"1149\":1}}],[\"go还额外提供一个\",{\"1\":{\"969\":1}}],[\"go会从一个叫做mcache的本地内存缓存里分配内存\",{\"1\":{\"1149\":1}}],[\"go与操作系统之间的内存申请和释放都是以page为单位的\",{\"1\":{\"1148\":1}}],[\"go原生支持多协程\",{\"1\":{\"1141\":1}}],[\"go同步原句与锁\",{\"0\":{\"1141\":1}}],[\"goyield\",{\"1\":{\"1135\":2}}],[\"gostring\",{\"1\":{\"1212\":1}}],[\"goschedimpl\",{\"1\":{\"1135\":1}}],[\"gosched\",{\"1\":{\"1135\":3}}],[\"gossip\",{\"1\":{\"435\":2}}],[\"goexit1\",{\"1\":{\"1135\":1}}],[\"goexit\",{\"1\":{\"1135\":2}}],[\"goexit0\",{\"1\":{\"1135\":2}}],[\"goes\",{\"1\":{\"523\":1}}],[\"gogo\",{\"1\":{\"1135\":2}}],[\"gomaxprocs\",{\"1\":{\"1134\":4}}],[\"gomaxprocs来修改\",{\"1\":{\"1133\":1}}],[\"gomock是go官方提供的一款mock工具\",{\"1\":{\"977\":1}}],[\"gomock\",{\"0\":{\"953\":1,\"977\":1},\"1\":{\"977\":15}}],[\"goid\",{\"1\":{\"1132\":1}}],[\"going\",{\"1\":{\"523\":2,\"1055\":1,\"1122\":2,\"1124\":6}}],[\"go后者是生成\",{\"1\":{\"1078\":1}}],[\"go和protoc\",{\"1\":{\"1078\":1}}],[\"go代码就可以得到以下结果\",{\"1\":{\"1072\":1}}],[\"go代码\",{\"1\":{\"1072\":1}}],[\"go就可以输出\",{\"1\":{\"1067\":1}}],[\"go就变化了\",{\"1\":{\"990\":1}}],[\"go在client文件夹下执行go\",{\"1\":{\"1067\":1}}],[\"gopher\",{\"1\":{\"1200\":2}}],[\"goparkunlock\",{\"1\":{\"1137\":2,\"1146\":1}}],[\"gopark\",{\"1\":{\"1135\":1,\"1137\":1}}],[\"gopath\",{\"1\":{\"1067\":1}}],[\"gopkg\",{\"1\":{\"973\":1}}],[\"go了\",{\"1\":{\"989\":1}}],[\"go函数\",{\"1\":{\"977\":1}}],[\"go中加入\",{\"1\":{\"1072\":1}}],[\"go中实现streamhello函数\",{\"1\":{\"1072\":1}}],[\"go中实现了servehttp函数\",{\"1\":{\"1055\":1}}],[\"go中\",{\"1\":{\"977\":1,\"1056\":1}}],[\"gock\",{\"0\":{\"973\":1},\"1\":{\"973\":5}}],[\"goconvey\",{\"1\":{\"958\":1,\"959\":1,\"960\":1}}],[\"gonic\",{\"1\":{\"972\":1,\"1054\":1,\"1100\":1}}],[\"go提供内置功能来检查你的代码覆盖率\",{\"1\":{\"969\":1}}],[\"go$\",{\"1\":{\"967\":1}}],[\"go测试文件\",{\"1\":{\"967\":1}}],[\"go的内存管理是借鉴了tcmalloc\",{\"1\":{\"1147\":1}}],[\"go的代码\",{\"1\":{\"1072\":1}}],[\"go的文件go\",{\"1\":{\"966\":1}}],[\"go的底层\",{\"1\":{\"660\":1}}],[\"go通过接口实现松耦合的代理关系\",{\"1\":{\"940\":1}}],[\"goarch=amd64\",{\"1\":{\"1023\":1,\"1026\":1}}],[\"goarch\",{\"1\":{\"899\":1,\"970\":2}}],[\"gox\",{\"1\":{\"704\":1}}],[\"go语言底层原理\",{\"0\":{\"1296\":1}}],[\"go语言操作mongo\",{\"0\":{\"1220\":1}}],[\"go语言操作redis\",{\"0\":{\"1108\":1}}],[\"go语言提供了反射包\",{\"1\":{\"1186\":1}}],[\"go语言将其划分成了tiny对象\",{\"1\":{\"1150\":1}}],[\"go语言调度模型里面\",{\"1\":{\"1149\":1}}],[\"go语言使用runtime\",{\"1\":{\"1138\":1}}],[\"go语言创建管道使用make关键词\",{\"1\":{\"1137\":1}}],[\"go语言最常见的也是经常被人提及的设计模式是\",{\"1\":{\"1136\":1}}],[\"go语言的sync\",{\"1\":{\"1142\":1}}],[\"go语言的channel在运行时使用runtime\",{\"1\":{\"1137\":1}}],[\"go语言的\",{\"1\":{\"1135\":1}}],[\"go语言的插件\",{\"1\":{\"1067\":1}}],[\"go语言下的protobuf\",{\"1\":{\"1067\":1}}],[\"go语言原生rpc原理\",{\"0\":{\"1063\":1}}],[\"go语言中使用redis\",{\"0\":{\"1104\":1}}],[\"go语言中常量会内联优化\",{\"1\":{\"959\":1}}],[\"go语言中实现建造者模式的主要步骤\",{\"1\":{\"873\":1}}],[\"go语言通过结构体的组合和方法来支持灵活的原型模式实现\",{\"1\":{\"891\":1}}],[\"go语言更推荐使用函数选项模式\",{\"1\":{\"873\":1}}],[\"go语言可以很容易地实现迭代器模式\",{\"1\":{\"828\":1}}],[\"go语言可以很容易地实现命令模式\",{\"1\":{\"821\":1}}],[\"go语言程序设计\",{\"1\":{\"670\":1}}],[\"go语言深度剖析\",{\"1\":{\"504\":1}}],[\"gotool\",{\"1\":{\"1026\":4}}],[\"got\",{\"1\":{\"557\":1,\"563\":2,\"967\":9,\"968\":3,\"976\":2,\"979\":3,\"980\":4,\"1072\":1}}],[\"go编程实战\",{\"1\":{\"552\":1}}],[\"goready\",{\"1\":{\"1135\":1,\"1137\":1}}],[\"goreleaser\",{\"0\":{\"1014\":1,\"1027\":1},\"1\":{\"1014\":1,\"1027\":1},\"2\":{\"1016\":1,\"1022\":1}}],[\"goroutine有执行的机会\",{\"1\":{\"1135\":1}}],[\"goroutine的id\",{\"1\":{\"1132\":1}}],[\"goroutine的状态\",{\"1\":{\"1132\":1}}],[\"goroutine还包含了另外三个与抢占密切相关的字段\",{\"1\":{\"1132\":1}}],[\"goroutine在go语言运行时使用私有结构体runtime\",{\"1\":{\"1132\":1}}],[\"goroutine只存在于go语言的运行时\",{\"1\":{\"1132\":1}}],[\"goroutines\",{\"0\":{\"1119\":1,\"1120\":1},\"1\":{\"1055\":1,\"1119\":8,\"1121\":1,\"1123\":1,\"1125\":1}}],[\"goroutine\",{\"0\":{\"1135\":1},\"1\":{\"956\":1,\"1005\":1,\"1055\":2,\"1118\":1,\"1119\":20,\"1120\":3,\"1123\":2,\"1124\":15,\"1125\":6,\"1126\":3,\"1131\":1,\"1132\":12,\"1133\":4,\"1134\":6,\"1135\":22,\"1136\":4,\"1137\":21,\"1141\":1,\"1142\":17,\"1143\":9,\"1144\":8,\"1145\":1,\"1146\":14}}],[\"gorgeously\",{\"1\":{\"543\":1}}],[\"gorilla\",{\"1\":{\"509\":1,\"511\":1,\"1045\":1,\"1073\":1}}],[\"godailylib\",{\"1\":{\"1005\":1}}],[\"godfather\",{\"1\":{\"540\":1}}],[\"god\",{\"1\":{\"523\":1}}],[\"godotenv\",{\"1\":{\"509\":1,\"511\":1,\"517\":1}}],[\"gold\",{\"1\":{\"523\":2}}],[\"golden\",{\"1\":{\"523\":5}}],[\"golang代码实现\",{\"1\":{\"1045\":1}}],[\"golang也有不少fsm的第三方实现\",{\"1\":{\"1010\":1}}],[\"golang笔记\",{\"2\":{\"85\":1}}],[\"golang\",{\"0\":{\"84\":1},\"1\":{\"3\":1,\"57\":1,\"977\":3,\"1010\":1,\"1033\":1,\"1038\":2,\"1055\":1,\"1067\":5,\"1074\":2,\"1086\":1,\"1087\":1,\"1093\":1,\"1140\":2},\"2\":{\"817\":1,\"823\":1,\"830\":1,\"836\":1,\"841\":1,\"847\":1,\"852\":1,\"858\":1,\"864\":1,\"870\":1,\"878\":1,\"886\":1,\"893\":1,\"902\":1,\"908\":1,\"913\":1,\"918\":1,\"924\":1,\"930\":1,\"936\":1,\"942\":1,\"952\":1,\"955\":1,\"964\":1,\"984\":1,\"987\":1,\"996\":1,\"1007\":1,\"1013\":1,\"1016\":1,\"1022\":1,\"1029\":1,\"1032\":1,\"1040\":1,\"1043\":1,\"1049\":1,\"1059\":1,\"1062\":1,\"1065\":1,\"1070\":1,\"1077\":1,\"1082\":1,\"1091\":1,\"1103\":1,\"1111\":1,\"1114\":1,\"1128\":1,\"1129\":1,\"1152\":1,\"1155\":1,\"1158\":1,\"1165\":1,\"1176\":1,\"1185\":1,\"1196\":1,\"1203\":1,\"1215\":1,\"1244\":1,\"1247\":1}}],[\"go文件和相关的命令行的作用\",{\"1\":{\"1089\":1}}],[\"go文件以及生成对应的\",{\"1\":{\"1089\":1}}],[\"go文件去对照proto文件看一下\",{\"1\":{\"1084\":1}}],[\"go文件是在当前目录下的proto目录\",{\"1\":{\"1084\":1}}],[\"go文件中有三种类型的函数\",{\"1\":{\"966\":1}}],[\"go文件中构建\",{\"1\":{\"510\":1}}],[\"go文件\",{\"1\":{\"510\":1,\"1067\":1,\"1078\":1,\"1079\":1,\"1084\":1}}],[\"go项目开发上手指南\",{\"1\":{\"504\":1}}],[\"goos=linux\",{\"1\":{\"1023\":1,\"1026\":1}}],[\"goos\",{\"1\":{\"899\":1,\"970\":2}}],[\"goodbye\",{\"1\":{\"523\":1}}],[\"good\",{\"1\":{\"90\":1,\"333\":2,\"519\":1,\"523\":1,\"537\":1,\"547\":1}}],[\"googleapis\",{\"1\":{\"1079\":2}}],[\"google等\",{\"1\":{\"533\":1}}],[\"google\",{\"1\":{\"48\":2,\"77\":1,\"1067\":6,\"1074\":2,\"1079\":4,\"1080\":3,\"1086\":2,\"1087\":3,\"1088\":3,\"1093\":1}}],[\"go\",{\"0\":{\"965\":1,\"975\":1,\"1008\":1,\"1112\":1,\"1130\":1,\"1153\":1,\"1156\":1,\"1159\":1,\"1166\":1,\"1177\":1,\"1186\":1,\"1197\":1,\"1200\":1,\"1204\":1},\"1\":{\"57\":2,\"90\":1,\"446\":2,\"504\":1,\"505\":1,\"509\":5,\"511\":1,\"517\":2,\"519\":1,\"523\":2,\"543\":6,\"547\":2,\"548\":1,\"549\":2,\"557\":1,\"563\":1,\"724\":1,\"827\":3,\"899\":1,\"905\":6,\"910\":7,\"915\":4,\"957\":1,\"959\":6,\"960\":3,\"961\":2,\"966\":2,\"967\":12,\"969\":6,\"970\":4,\"972\":5,\"973\":4,\"975\":6,\"976\":8,\"977\":16,\"978\":7,\"981\":1,\"988\":3,\"989\":14,\"990\":3,\"992\":3,\"997\":2,\"1000\":1,\"1003\":1,\"1005\":1,\"1010\":2,\"1011\":1,\"1018\":1,\"1019\":2,\"1023\":1,\"1025\":1,\"1026\":8,\"1038\":1,\"1047\":2,\"1054\":1,\"1055\":2,\"1063\":3,\"1067\":28,\"1071\":1,\"1072\":14,\"1073\":1,\"1074\":3,\"1078\":1,\"1079\":17,\"1080\":1,\"1084\":14,\"1087\":1,\"1089\":1,\"1093\":1,\"1095\":2,\"1098\":1,\"1099\":2,\"1115\":2,\"1118\":3,\"1119\":4,\"1120\":2,\"1124\":8,\"1125\":1,\"1126\":3,\"1127\":2,\"1132\":1,\"1133\":1,\"1134\":2,\"1135\":1,\"1136\":4,\"1138\":10,\"1139\":6,\"1140\":1,\"1141\":1,\"1142\":2,\"1144\":4,\"1146\":6,\"1153\":1,\"1160\":1,\"1161\":4,\"1162\":2,\"1163\":6,\"1173\":1,\"1179\":2,\"1181\":2,\"1188\":1,\"1194\":1,\"1198\":2,\"1200\":4,\"1204\":2,\"1211\":1,\"1221\":1,\"1223\":1,\"1245\":2}}],[\"c3\",{\"1\":{\"1231\":1}}],[\"cc\",{\"1\":{\"1055\":3,\"1097\":2,\"1099\":2}}],[\"cyhone\",{\"1\":{\"1038\":3}}],[\"cycles\",{\"1\":{\"1118\":1}}],[\"cycle\",{\"1\":{\"523\":1}}],[\"cgo\",{\"1\":{\"1023\":1,\"1026\":1,\"1133\":1}}],[\"cgroups\",{\"1\":{\"75\":1}}],[\"cmdtimes\",{\"1\":{\"991\":1,\"992\":5}}],[\"cmd目录下就可以加一个echo文件\",{\"1\":{\"989\":1}}],[\"cmdname\",{\"1\":{\"988\":1}}],[\"cmd\",{\"1\":{\"731\":2,\"988\":1,\"989\":2,\"990\":1,\"992\":3,\"993\":5,\"1067\":2,\"1135\":2}}],[\"cm\",{\"1\":{\"523\":1}}],[\"circle\",{\"0\":{\"550\":1}}],[\"circle发布的usdc\",{\"1\":{\"182\":1}}],[\"civilization\",{\"1\":{\"523\":2}}],[\"civilized\",{\"1\":{\"523\":1}}],[\"cigar\",{\"1\":{\"523\":1}}],[\"certs\",{\"1\":{\"1099\":5}}],[\"certain\",{\"1\":{\"543\":1,\"547\":1}}],[\"celsius\",{\"1\":{\"523\":1}}],[\"cells\",{\"1\":{\"523\":2,\"543\":5}}],[\"cell\",{\"1\":{\"459\":1,\"463\":2,\"523\":3}}],[\"cell`\",{\"1\":{\"459\":1}}],[\"century\",{\"1\":{\"523\":1}}],[\"centuries\",{\"1\":{\"523\":1}}],[\"central\",{\"1\":{\"523\":1}}],[\"center\",{\"1\":{\"523\":8}}],[\"centos\",{\"1\":{\"57\":1}}],[\"ctrl\",{\"1\":{\"977\":8}}],[\"ctx\",{\"1\":{\"976\":4,\"1010\":3,\"1035\":3,\"1055\":10,\"1067\":3,\"1094\":3,\"1095\":10,\"1097\":3,\"1099\":5,\"1100\":5,\"1225\":4,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":2,\"1235\":1,\"1237\":1,\"1238\":1,\"1240\":2,\"1242\":1}}],[\"ctime\",{\"1\":{\"427\":2}}],[\"ctfexchange\",{\"1\":{\"169\":4}}],[\"cnt++\",{\"1\":{\"325\":2}}],[\"cnt\",{\"1\":{\"323\":4,\"325\":2}}],[\"cnb的yes份额\",{\"1\":{\"26\":1}}],[\"cnb简介\",{\"1\":{\"21\":1}}],[\"cnb\",{\"1\":{\"3\":1,\"16\":1,\"26\":10}}],[\"cba\",{\"1\":{\"311\":1}}],[\"cbdc也在做稳定币\",{\"1\":{\"188\":1}}],[\"c+1\",{\"1\":{\"284\":1}}],[\"c++项目中看到makefie\",{\"1\":{\"1023\":1}}],[\"c++\",{\"1\":{\"109\":1,\"321\":1,\"1217\":1}}],[\"cqueue\",{\"1\":{\"280\":6}}],[\"cfg\",{\"1\":{\"152\":5}}],[\"crt\",{\"1\":{\"1099\":2}}],[\"cross\",{\"1\":{\"1055\":1}}],[\"cron会创建一个新的\",{\"1\":{\"1005\":1}}],[\"cron库使用起来非常简单\",{\"1\":{\"1001\":1}}],[\"cron\",{\"0\":{\"999\":1},\"1\":{\"999\":1,\"1000\":1,\"1001\":6,\"1005\":3}}],[\"crontab是\",{\"1\":{\"997\":1}}],[\"crontab\",{\"1\":{\"997\":1}}],[\"cron定时任务\",{\"0\":{\"997\":1}}],[\"credsconfigured\",{\"1\":{\"1099\":3}}],[\"creds\",{\"1\":{\"1099\":3}}],[\"credentials\",{\"1\":{\"1067\":1,\"1099\":2}}],[\"credit\",{\"1\":{\"927\":1}}],[\"creditbalance\",{\"1\":{\"927\":1}}],[\"creatures\",{\"1\":{\"547\":1,\"549\":1}}],[\"creational\",{\"0\":{\"1283\":1}}],[\"creativity\",{\"1\":{\"547\":1}}],[\"creative\",{\"1\":{\"543\":1}}],[\"creating\",{\"1\":{\"448\":1,\"523\":2,\"972\":1,\"1055\":1,\"1119\":1}}],[\"creators\",{\"1\":{\"523\":1}}],[\"creator\",{\"1\":{\"362\":1}}],[\"createtimeat\",{\"1\":{\"1241\":4}}],[\"createat\",{\"1\":{\"1241\":1,\"1242\":3}}],[\"createindexes\",{\"1\":{\"1227\":1}}],[\"createoneindex\",{\"1\":{\"1227\":1}}],[\"create|os\",{\"1\":{\"1169\":1,\"1172\":1,\"1181\":1}}],[\"createproduct\",{\"1\":{\"883\":3}}],[\"creatememento\",{\"1\":{\"838\":4}}],[\"creates\",{\"1\":{\"523\":1}}],[\"createuser\",{\"1\":{\"194\":1}}],[\"creater\",{\"1\":{\"166\":1}}],[\"create\",{\"1\":{\"74\":1,\"90\":3,\"192\":1,\"194\":1,\"413\":1,\"448\":1,\"516\":1,\"523\":3,\"927\":1,\"989\":1,\"1010\":4,\"1011\":2,\"1047\":1,\"1119\":1,\"1124\":1,\"1126\":2,\"1153\":1,\"1173\":1,\"1219\":1}}],[\"createdat\",{\"1\":{\"1087\":1}}],[\"created\",{\"1\":{\"51\":1,\"54\":1,\"55\":1,\"68\":2,\"69\":1,\"70\":1,\"463\":3,\"523\":1,\"927\":1,\"989\":1,\"1010\":3,\"1055\":1,\"1125\":1,\"1126\":1}}],[\"critical\",{\"1\":{\"547\":2}}],[\"crumbling\",{\"1\":{\"523\":1}}],[\"crud\",{\"1\":{\"367\":3}}],[\"cryptsy\",{\"1\":{\"704\":1}}],[\"cryptocurrency\",{\"1\":{\"537\":1,\"540\":1,\"557\":1}}],[\"crypto\",{\"0\":{\"1256\":1},\"1\":{\"511\":1,\"704\":1},\"2\":{\"146\":1,\"155\":1,\"168\":1,\"171\":1,\"179\":1,\"190\":1,\"594\":1,\"601\":1,\"604\":1,\"697\":1}}],[\"crystallization\",{\"1\":{\"523\":1}}],[\"craftsman\",{\"1\":{\"547\":1}}],[\"crabs\",{\"1\":{\"543\":1}}],[\"cradle\",{\"1\":{\"523\":2}}],[\"crates\",{\"1\":{\"459\":2,\"487\":1}}],[\"crate的代码\",{\"1\":{\"447\":1}}],[\"crate\",{\"1\":{\"447\":1,\"459\":1}}],[\"crashed\",{\"1\":{\"523\":1}}],[\"crash\",{\"1\":{\"357\":1,\"358\":3}}],[\"crc16\",{\"1\":{\"413\":1,\"429\":1}}],[\"customfieldsbuilder\",{\"1\":{\"1241\":1}}],[\"customfields\",{\"1\":{\"1241\":1}}],[\"custom=42\",{\"1\":{\"1163\":1}}],[\"custom\",{\"1\":{\"1163\":6,\"1241\":1}}],[\"customtype\",{\"1\":{\"1163\":13}}],[\"customprismaadapterfornextauth\",{\"1\":{\"194\":2}}],[\"cute\",{\"1\":{\"523\":1}}],[\"cuttingrope\",{\"1\":{\"285\":1,\"286\":1}}],[\"curg\",{\"1\":{\"1133\":1}}],[\"curg是当前线程上运行的用户goroutine\",{\"1\":{\"1133\":1}}],[\"curreq\",{\"1\":{\"1055\":2}}],[\"currentepoch\",{\"1\":{\"427\":1,\"435\":1}}],[\"current\",{\"1\":{\"152\":3,\"426\":1,\"458\":3,\"543\":1,\"547\":2,\"563\":1,\"849\":5,\"1010\":5,\"1242\":1}}],[\"curl\",{\"1\":{\"972\":1,\"1079\":1,\"1080\":6}}],[\"cursor\",{\"1\":{\"407\":1,\"409\":1,\"410\":1,\"731\":1,\"1222\":1}}],[\"curbed\",{\"1\":{\"540\":1}}],[\"curb\",{\"1\":{\"324\":4}}],[\"cura\",{\"1\":{\"324\":4}}],[\"cur\",{\"1\":{\"152\":1,\"278\":6,\"290\":7,\"294\":12,\"295\":6,\"296\":7,\"308\":14}}],[\"curve\",{\"1\":{\"152\":1}}],[\"cu\",{\"1\":{\"122\":1}}],[\"cpi\",{\"0\":{\"131\":1},\"1\":{\"121\":2,\"122\":1,\"131\":3}}],[\"cpu\",{\"1\":{\"75\":2,\"77\":1,\"412\":3,\"414\":1,\"1135\":2,\"1142\":3}}],[\"cainiao\",{\"1\":{\"563\":1}}],[\"campus\",{\"1\":{\"547\":1,\"549\":1}}],[\"came\",{\"1\":{\"523\":3,\"543\":1}}],[\"capable\",{\"1\":{\"1116\":1}}],[\"capability\",{\"1\":{\"1116\":1}}],[\"capsules\",{\"1\":{\"534\":1}}],[\"capital\",{\"1\":{\"483\":1}}],[\"ca\",{\"1\":{\"534\":3}}],[\"cause\",{\"1\":{\"523\":1}}],[\"cas\",{\"1\":{\"1142\":1}}],[\"casgstatus\",{\"1\":{\"1135\":1}}],[\"cash\",{\"1\":{\"537\":1}}],[\"case\",{\"1\":{\"523\":1,\"883\":2,\"972\":6,\"975\":1,\"979\":4,\"997\":1,\"1011\":1,\"1055\":4,\"1074\":2,\"1088\":2,\"1117\":2,\"1118\":4,\"1188\":3,\"1193\":2,\"1206\":1,\"1237\":2}}],[\"cas标识没有被打开\",{\"1\":{\"424\":1}}],[\"cas标识已经被打开\",{\"1\":{\"424\":1}}],[\"cas标识来决定是否执行事务\",{\"1\":{\"424\":1}}],[\"cas标识打开\",{\"1\":{\"424\":1}}],[\"card\",{\"1\":{\"977\":1}}],[\"carol\",{\"1\":{\"653\":1}}],[\"carbohydrates\",{\"1\":{\"563\":1}}],[\"cars\",{\"1\":{\"563\":1}}],[\"carter\",{\"1\":{\"543\":1}}],[\"caring\",{\"1\":{\"543\":1}}],[\"carrier\",{\"1\":{\"523\":1}}],[\"caretaker\",{\"1\":{\"838\":4}}],[\"careers\",{\"2\":{\"589\":1}}],[\"career\",{\"1\":{\"569\":1}}],[\"care\",{\"1\":{\"523\":1,\"540\":2,\"751\":1,\"1115\":1}}],[\"cargo\",{\"1\":{\"447\":3,\"448\":1}}],[\"caculatehash\",{\"1\":{\"514\":2,\"515\":1,\"517\":1}}],[\"caculatehash的作用是为每一个区块计算hash码\",{\"1\":{\"511\":1}}],[\"cache\",{\"0\":{\"1267\":1},\"1\":{\"343\":1,\"357\":2,\"358\":11,\"360\":5,\"1147\":1}}],[\"cab\",{\"1\":{\"311\":1}}],[\"calmness\",{\"1\":{\"543\":1}}],[\"calling\",{\"1\":{\"1056\":1}}],[\"callchannel\",{\"1\":{\"820\":3}}],[\"calloption\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"calloff\",{\"1\":{\"820\":3}}],[\"callon\",{\"1\":{\"820\":3}}],[\"calls\",{\"1\":{\"459\":1,\"1055\":1}}],[\"call\",{\"1\":{\"425\":1,\"436\":2,\"447\":1,\"540\":1,\"547\":1,\"563\":1,\"1055\":2,\"1063\":2,\"1119\":3,\"1124\":2,\"1135\":1,\"1144\":2}}],[\"callbackurl=$\",{\"1\":{\"199\":2}}],[\"callbacks\",{\"1\":{\"194\":1,\"200\":1,\"1010\":1}}],[\"callbacks部分\",{\"1\":{\"193\":1}}],[\"callback\",{\"1\":{\"192\":3,\"1238\":2}}],[\"called\",{\"1\":{\"192\":1,\"449\":1,\"483\":1,\"523\":5,\"540\":1,\"1117\":1,\"1240\":2}}],[\"calldata合memory的区别是如果最终不想改变变量名\",{\"1\":{\"105\":1}}],[\"calldata\",{\"1\":{\"105\":1}}],[\"calcage方法时会返回18\",{\"1\":{\"978\":1}}],[\"calcage\",{\"1\":{\"978\":4}}],[\"calculateabsolutepath\",{\"1\":{\"1053\":1}}],[\"calculate\",{\"1\":{\"543\":1}}],[\"calc\",{\"1\":{\"152\":4}}],[\"canset\",{\"1\":{\"1190\":1}}],[\"canspin\",{\"1\":{\"1142\":1}}],[\"canwritecontinue\",{\"1\":{\"1055\":1}}],[\"cancelctx\",{\"1\":{\"1055\":5}}],[\"cancel\",{\"1\":{\"1010\":8,\"1037\":1,\"1067\":2}}],[\"cancelling\",{\"1\":{\"1010\":4}}],[\"cannot\",{\"1\":{\"468\":1,\"473\":1,\"523\":2,\"537\":2,\"543\":2,\"547\":2,\"1055\":1,\"1126\":1,\"1138\":1}}],[\"canal\",{\"1\":{\"385\":3}}],[\"canfind\",{\"1\":{\"284\":7}}],[\"canpartition\",{\"1\":{\"237\":1}}],[\"candidates\",{\"1\":{\"211\":8,\"212\":24}}],[\"can\",{\"1\":{\"90\":2,\"425\":1,\"483\":2,\"519\":1,\"523\":19,\"537\":7,\"540\":1,\"543\":22,\"547\":17,\"548\":2,\"549\":1,\"550\":1,\"557\":3,\"563\":7,\"1010\":6,\"1053\":1,\"1055\":3,\"1118\":2,\"1119\":2,\"1121\":2,\"1126\":1,\"1127\":2,\"1242\":2}}],[\"cat\",{\"1\":{\"70\":1,\"1138\":18}}],[\"clarity\",{\"1\":{\"1073\":1,\"1123\":1}}],[\"claims\",{\"1\":{\"1047\":8}}],[\"classic\",{\"1\":{\"1116\":1}}],[\"class\",{\"1\":{\"537\":1,\"540\":1,\"1225\":2}}],[\"clumsy\",{\"1\":{\"523\":1}}],[\"clustermsg\",{\"1\":{\"435\":2}}],[\"clustermsgdatapublish结构表示\",{\"1\":{\"435\":1}}],[\"clustermsgdatapublish\",{\"1\":{\"435\":3}}],[\"clustermsgdatafail结构表示\",{\"1\":{\"435\":1}}],[\"clustermsgdatafail\",{\"1\":{\"435\":2}}],[\"clustermsgdatagossip\",{\"1\":{\"435\":2}}],[\"clustermsgdatagossip结构组成\",{\"1\":{\"435\":1}}],[\"clustermsgdatagossip结构\",{\"1\":{\"435\":2}}],[\"clustermsgdata\",{\"1\":{\"435\":4}}],[\"clustersetslot<slot>node<target\",{\"1\":{\"431\":1}}],[\"clusterstate结构的migrating\",{\"1\":{\"432\":1}}],[\"clusterstate结构的importing\",{\"1\":{\"432\":1}}],[\"clusterstate结构中的slots数组记录了集群中所有16384个槽的指派信息\",{\"1\":{\"428\":1}}],[\"clusterstate\",{\"1\":{\"427\":2,\"428\":3}}],[\"clusterlink的socket是连接集群节点的\",{\"1\":{\"427\":1}}],[\"clusterlink\",{\"1\":{\"427\":3}}],[\"clusternode结构的slots属性和numslot属性记录了节点负责处理哪些槽\",{\"1\":{\"428\":1}}],[\"clusternode结构保存了一个节点的当前状态\",{\"1\":{\"427\":1}}],[\"clusternode\",{\"1\":{\"427\":3,\"428\":2,\"433\":1}}],[\"cluster\",{\"1\":{\"413\":6,\"427\":2,\"428\":7,\"429\":2,\"431\":1,\"432\":4,\"433\":1,\"435\":4}}],[\"closing\",{\"0\":{\"1127\":1},\"1\":{\"1055\":1}}],[\"closeandrecv\",{\"1\":{\"1072\":1}}],[\"closewriteandwait\",{\"1\":{\"1055\":2}}],[\"closeidleconns\",{\"1\":{\"1055\":1}}],[\"closes\",{\"1\":{\"1055\":1}}],[\"closedrequestbodyearly\",{\"1\":{\"1055\":1}}],[\"closed\",{\"1\":{\"1010\":3,\"1127\":7,\"1137\":1}}],[\"closer\",{\"1\":{\"523\":2}}],[\"close\",{\"1\":{\"90\":6,\"516\":1,\"523\":1,\"975\":3,\"976\":1,\"980\":2,\"1010\":2,\"1055\":7,\"1063\":1,\"1067\":2,\"1095\":1,\"1127\":3,\"1153\":1,\"1173\":1,\"1225\":1}}],[\"clone\",{\"1\":{\"890\":1}}],[\"clock\",{\"1\":{\"560\":1,\"1212\":1}}],[\"cloud\",{\"1\":{\"547\":1}}],[\"cloudless\",{\"1\":{\"523\":1}}],[\"clouds\",{\"1\":{\"523\":1}}],[\"clear\",{\"1\":{\"468\":2,\"480\":8,\"1045\":1}}],[\"cleanup\",{\"1\":{\"1072\":1}}],[\"cleanpath\",{\"1\":{\"1055\":1}}],[\"clean\",{\"1\":{\"377\":1,\"1026\":3}}],[\"cli命令\",{\"1\":{\"989\":1}}],[\"cli\",{\"1\":{\"988\":1,\"989\":4,\"1225\":2,\"1227\":2,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":2,\"1235\":1,\"1236\":1,\"1237\":1,\"1238\":3,\"1239\":1,\"1240\":1,\"1241\":3}}],[\"click\",{\"1\":{\"519\":1,\"548\":1,\"977\":1}}],[\"cli客户端\",{\"1\":{\"432\":1}}],[\"cli客户端在接收到moved错误时\",{\"1\":{\"429\":1}}],[\"cli在接到ask错误时也不会打印错误\",{\"1\":{\"432\":1}}],[\"climbstairs\",{\"1\":{\"227\":1,\"243\":1}}],[\"clientconn\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"client和server\",{\"1\":{\"1067\":1}}],[\"client调用的是server下的服务\",{\"1\":{\"1063\":1}}],[\"client客户端组件\",{\"1\":{\"199\":1}}],[\"clientsecret\",{\"1\":{\"192\":1,\"195\":1}}],[\"clientid\",{\"1\":{\"192\":1,\"195\":1}}],[\"client\",{\"1\":{\"90\":20,\"152\":4,\"192\":10,\"195\":8,\"422\":1,\"425\":1,\"905\":7,\"976\":1,\"1055\":2,\"1063\":5,\"1067\":13,\"1072\":8,\"1073\":1,\"1074\":1,\"1079\":1,\"1095\":2,\"1099\":1,\"1225\":2,\"1237\":1}}],[\"clnt\",{\"1\":{\"90\":22}}],[\"ch04\",{\"1\":{\"1140\":1}}],[\"chnl\",{\"1\":{\"1126\":4,\"1127\":6}}],[\"ch\",{\"1\":{\"972\":2,\"1125\":5,\"1127\":9,\"1137\":2,\"1146\":3}}],[\"chromium\",{\"1\":{\"731\":1}}],[\"chroot\",{\"1\":{\"76\":2}}],[\"cheng\",{\"1\":{\"1067\":2}}],[\"chess\",{\"1\":{\"861\":9}}],[\"chef\",{\"1\":{\"543\":1}}],[\"cheating\",{\"1\":{\"543\":1}}],[\"checker\",{\"1\":{\"1146\":1}}],[\"checked\",{\"1\":{\"152\":14}}],[\"checkorigin\",{\"1\":{\"1073\":1}}],[\"checkout\",{\"1\":{\"988\":2}}],[\"checkconnerrorwriter\",{\"1\":{\"1055\":1}}],[\"checkcode\",{\"1\":{\"927\":2}}],[\"checkget\",{\"1\":{\"976\":2}}],[\"checkaccount\",{\"1\":{\"927\":2}}],[\"check\",{\"1\":{\"357\":1,\"418\":2,\"447\":1,\"1045\":1,\"1047\":2,\"1054\":1,\"1127\":1}}],[\"checkpoint\",{\"1\":{\"357\":6}}],[\"checkint\",{\"1\":{\"214\":2}}],[\"chong\",{\"1\":{\"689\":1}}],[\"choice\",{\"1\":{\"537\":1}}],[\"choose\",{\"1\":{\"537\":2,\"543\":3,\"547\":5,\"557\":1}}],[\"chinese\",{\"0\":{\"551\":1},\"1\":{\"560\":1}}],[\"china\",{\"1\":{\"534\":1,\"547\":1,\"1001\":1}}],[\"children\",{\"1\":{\"523\":1,\"543\":1}}],[\"chain\",{\"1\":{\"1052\":1,\"1056\":1,\"1237\":1}}],[\"chainlink\",{\"1\":{\"165\":1}}],[\"chaplin\",{\"1\":{\"643\":1}}],[\"challenge\",{\"1\":{\"560\":1}}],[\"chatgpt\",{\"1\":{\"772\":1}}],[\"chat\",{\"1\":{\"547\":4,\"563\":1}}],[\"chatting\",{\"1\":{\"547\":1}}],[\"chaotic\",{\"1\":{\"523\":2}}],[\"chanrecv\",{\"1\":{\"1137\":1}}],[\"chanbuf\",{\"1\":{\"1137\":1}}],[\"chansend\",{\"1\":{\"1137\":2}}],[\"chan<\",{\"1\":{\"1126\":6}}],[\"chan\",{\"0\":{\"1136\":1},\"1\":{\"972\":1,\"1072\":1,\"1122\":5,\"1124\":4,\"1125\":2,\"1126\":2,\"1127\":4,\"1135\":1,\"1146\":1,\"1188\":1,\"1206\":2}}],[\"chance\",{\"1\":{\"543\":1,\"1119\":1}}],[\"channel元素的个数\",{\"1\":{\"1137\":1}}],[\"channelcommand\",{\"1\":{\"820\":5}}],[\"channel\",{\"0\":{\"1121\":1,\"1123\":1,\"1124\":1},\"1\":{\"423\":3,\"435\":2,\"820\":19,\"1122\":11,\"1123\":7,\"1124\":9,\"1125\":6,\"1126\":11,\"1127\":13,\"1132\":1,\"1135\":1,\"1136\":5,\"1137\":34}}],[\"channels\",{\"0\":{\"1122\":1,\"1126\":1,\"1127\":2},\"1\":{\"423\":1,\"540\":1,\"1119\":2,\"1121\":2,\"1122\":1,\"1123\":2,\"1124\":1,\"1125\":1,\"1126\":4}}],[\"channels字典里面\",{\"1\":{\"423\":1}}],[\"changed\",{\"1\":{\"523\":1,\"547\":1}}],[\"changestate\",{\"1\":{\"1011\":2}}],[\"changes\",{\"1\":{\"152\":1,\"192\":1,\"417\":1,\"523\":1}}],[\"change\",{\"1\":{\"90\":2,\"242\":1,\"547\":1,\"560\":1}}],[\"charlie\",{\"1\":{\"643\":1}}],[\"charged\",{\"1\":{\"557\":1}}],[\"charset=utf\",{\"1\":{\"1055\":1}}],[\"chars\",{\"1\":{\"485\":2}}],[\"characteristic\",{\"1\":{\"543\":1}}],[\"character\",{\"1\":{\"483\":3}}],[\"char\",{\"1\":{\"90\":11,\"393\":1,\"402\":1,\"426\":3,\"427\":2,\"428\":1,\"435\":6,\"475\":1}}],[\"cst\",{\"1\":{\"1206\":4,\"1208\":1,\"1212\":4}}],[\"csp\",{\"1\":{\"1136\":2}}],[\"csstr\",{\"1\":{\"471\":1}}],[\"csstring\",{\"1\":{\"471\":1}}],[\"css\",{\"1\":{\"192\":1}}],[\"cs\",{\"1\":{\"90\":1}}],[\"cdmfund\",{\"1\":{\"609\":1}}],[\"cdefgab\",{\"1\":{\"335\":2}}],[\"cdn等服务经过精密的计算以目前能想到最快的速度传输到你的设备上\",{\"1\":{\"709\":1}}],[\"cdn\",{\"1\":{\"271\":1}}],[\"cd\",{\"1\":{\"56\":1,\"61\":1}}],[\"c8299583700a\",{\"1\":{\"49\":1}}],[\"copies\",{\"1\":{\"1144\":3}}],[\"copychecker\",{\"1\":{\"1146\":2}}],[\"copylock\",{\"1\":{\"1144\":1}}],[\"copyrandomlist\",{\"1\":{\"308\":2}}],[\"copyright\",{\"1\":{\"90\":1}}],[\"copying\",{\"1\":{\"90\":1}}],[\"copy\",{\"1\":{\"60\":5,\"208\":2,\"209\":1,\"211\":1,\"212\":2,\"213\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"307\":1,\"311\":1,\"446\":1,\"948\":1,\"1093\":1}}],[\"coding\",{\"1\":{\"1055\":1}}],[\"code的产品\",{\"1\":{\"710\":1}}],[\"codes\",{\"1\":{\"519\":1,\"1074\":2,\"1088\":1,\"1099\":2}}],[\"codepoint\",{\"1\":{\"483\":2}}],[\"code\",{\"1\":{\"90\":3,\"105\":1,\"169\":1,\"195\":3,\"448\":1,\"449\":2,\"514\":1,\"516\":2,\"523\":1,\"525\":1,\"547\":1,\"548\":2,\"549\":1,\"560\":1,\"563\":2,\"898\":5,\"927\":2,\"972\":2,\"989\":2,\"1052\":1,\"1055\":7,\"1118\":1,\"1119\":4,\"1122\":2,\"1124\":3}}],[\"cobrademo\",{\"1\":{\"992\":2,\"993\":1}}],[\"cobra是go的一个cli框架\",{\"1\":{\"988\":1}}],[\"cobra\",{\"0\":{\"988\":1},\"1\":{\"988\":4,\"989\":13,\"990\":5,\"991\":3,\"992\":7,\"993\":9,\"994\":2},\"2\":{\"996\":1}}],[\"cobweb\",{\"1\":{\"523\":1}}],[\"coffee\",{\"1\":{\"560\":1,\"563\":2}}],[\"coverprofile=c\",{\"1\":{\"969\":1}}],[\"coverprofile参数\",{\"1\":{\"969\":1}}],[\"coverage\",{\"1\":{\"969\":2}}],[\"cover来查看测试覆盖率\",{\"1\":{\"969\":1}}],[\"cover\",{\"1\":{\"543\":2,\"969\":4}}],[\"correct\",{\"1\":{\"547\":1}}],[\"corresponds\",{\"1\":{\"543\":1}}],[\"corrupt\",{\"1\":{\"523\":1}}],[\"cordial\",{\"1\":{\"523\":1}}],[\"cores\",{\"1\":{\"1118\":2}}],[\"core\",{\"1\":{\"152\":1,\"447\":12,\"523\":3,\"547\":1,\"725\":1,\"1118\":2}}],[\"cowards\",{\"1\":{\"523\":1}}],[\"cosmic\",{\"1\":{\"523\":1}}],[\"cost\",{\"1\":{\"228\":11,\"537\":1,\"1119\":1}}],[\"column\",{\"1\":{\"1218\":1}}],[\"color\",{\"1\":{\"1120\":2}}],[\"colorful\",{\"1\":{\"523\":1}}],[\"cold\",{\"1\":{\"523\":2,\"560\":1}}],[\"coll即可\",{\"1\":{\"1225\":1}}],[\"coll\",{\"1\":{\"1225\":2,\"1237\":2}}],[\"colleagues\",{\"1\":{\"833\":4}}],[\"colleagueb\",{\"1\":{\"833\":7}}],[\"colleaguea\",{\"1\":{\"833\":7}}],[\"colleague\",{\"1\":{\"833\":13}}],[\"college\",{\"1\":{\"537\":1,\"548\":1,\"560\":1}}],[\"collection\",{\"1\":{\"563\":1,\"1019\":5,\"1218\":1,\"1225\":3,\"1231\":1}}],[\"collections\",{\"1\":{\"460\":1}}],[\"collect\",{\"1\":{\"563\":2}}],[\"collected\",{\"1\":{\"152\":16}}],[\"collapse\",{\"1\":{\"523\":3}}],[\"collide\",{\"1\":{\"523\":1}}],[\"collision\",{\"1\":{\"523\":2}}],[\"cook\",{\"1\":{\"543\":1}}],[\"cookie\",{\"0\":{\"1044\":1,\"1045\":1},\"1\":{\"193\":3,\"1045\":1,\"1047\":4}}],[\"cooling\",{\"1\":{\"523\":1}}],[\"courtyard\",{\"1\":{\"543\":1}}],[\"courage\",{\"1\":{\"537\":2}}],[\"courses\",{\"1\":{\"549\":1}}],[\"course\",{\"1\":{\"464\":1,\"537\":1,\"543\":3,\"547\":4,\"563\":1}}],[\"could\",{\"1\":{\"519\":1,\"547\":1,\"563\":1,\"1055\":1}}],[\"count=3\",{\"1\":{\"1161\":1,\"1162\":1}}],[\"count++\",{\"1\":{\"1100\":1}}],[\"countsections\",{\"1\":{\"1053\":1}}],[\"countsubstrings\",{\"1\":{\"267\":1}}],[\"countparams\",{\"1\":{\"1053\":1}}],[\"counting\",{\"1\":{\"543\":1}}],[\"countless\",{\"1\":{\"523\":1,\"540\":1,\"547\":1}}],[\"counter\",{\"1\":{\"458\":3,\"1144\":1}}],[\"count\",{\"0\":{\"1233\":1},\"1\":{\"307\":8,\"317\":4,\"360\":1,\"405\":2,\"407\":2,\"409\":3,\"410\":3,\"435\":1,\"543\":1,\"992\":1,\"1019\":3,\"1100\":2,\"1161\":8,\"1162\":6,\"1222\":1,\"1233\":2}}],[\"coinbene\",{\"1\":{\"704\":1}}],[\"coinbase\",{\"1\":{\"36\":1}}],[\"coinrail\",{\"1\":{\"704\":1}}],[\"coincheck\",{\"1\":{\"704\":1}}],[\"coinchange\",{\"1\":{\"244\":1}}],[\"coincidence\",{\"1\":{\"523\":1,\"547\":1}}],[\"coins\",{\"0\":{\"701\":1},\"1\":{\"242\":6,\"244\":12,\"701\":2},\"2\":{\"708\":1}}],[\"coin\",{\"1\":{\"180\":1}}],[\"congratulations\",{\"1\":{\"1127\":1}}],[\"connreader\",{\"1\":{\"1055\":1}}],[\"conncontext\",{\"1\":{\"1055\":2}}],[\"connctx\",{\"1\":{\"1055\":6}}],[\"conn\",{\"1\":{\"1055\":12,\"1067\":3,\"1073\":4,\"1079\":2,\"1095\":3,\"1099\":1}}],[\"connectionreturned\",{\"1\":{\"1237\":2}}],[\"connectionstate\",{\"1\":{\"1055\":2}}],[\"connections\",{\"1\":{\"1055\":6,\"1073\":1}}],[\"connection\",{\"1\":{\"975\":2,\"1055\":3,\"1073\":2}}],[\"connected\",{\"1\":{\"428\":3,\"1073\":1}}],[\"connect\",{\"1\":{\"90\":7,\"193\":1,\"425\":1,\"1055\":1}}],[\"connect等钱包\",{\"1\":{\"36\":1}}],[\"convey\",{\"1\":{\"958\":1,\"959\":1,\"960\":1}}],[\"convert\",{\"1\":{\"1074\":2,\"1126\":1}}],[\"convert方法读取对应的错误\",{\"1\":{\"1074\":1}}],[\"converts\",{\"1\":{\"905\":2,\"1126\":1}}],[\"conversion\",{\"1\":{\"467\":1,\"1126\":1}}],[\"convinced\",{\"1\":{\"523\":1}}],[\"cond\",{\"0\":{\"1146\":1},\"1\":{\"1141\":1,\"1146\":15}}],[\"condition\",{\"1\":{\"1141\":1}}],[\"conditional\",{\"1\":{\"1123\":1}}],[\"conditions\",{\"1\":{\"90\":1,\"563\":1}}],[\"condense\",{\"1\":{\"523\":1}}],[\"concurrently\",{\"1\":{\"1119\":2}}],[\"concurrent\",{\"1\":{\"1115\":1,\"1118\":2}}],[\"concurrency\",{\"0\":{\"1115\":1,\"1116\":1,\"1117\":1,\"1118\":1},\"1\":{\"1115\":2,\"1116\":2,\"1117\":1,\"1118\":5},\"2\":{\"1129\":1}}],[\"concretedecoratora\",{\"1\":{\"921\":3}}],[\"concretecomponent\",{\"1\":{\"921\":2}}],[\"concretefactory\",{\"1\":{\"883\":3}}],[\"concreteproduct2\",{\"1\":{\"883\":3}}],[\"concreteproduct1\",{\"1\":{\"883\":3}}],[\"concrete\",{\"1\":{\"883\":3}}],[\"concretevisitorb\",{\"1\":{\"867\":8}}],[\"concretevisitora\",{\"1\":{\"867\":8}}],[\"concreteelementb\",{\"1\":{\"867\":7}}],[\"concreteelementa\",{\"1\":{\"867\":7}}],[\"concretestateb\",{\"1\":{\"849\":3}}],[\"concretestatea\",{\"1\":{\"849\":4}}],[\"concretesubject\",{\"1\":{\"844\":7}}],[\"concreteobserverb\",{\"1\":{\"844\":6}}],[\"concreteobservera\",{\"1\":{\"844\":6}}],[\"concretemediator\",{\"1\":{\"833\":4}}],[\"concentrate\",{\"1\":{\"543\":2}}],[\"concerned\",{\"1\":{\"543\":1}}],[\"concept\",{\"1\":{\"543\":2,\"1124\":1}}],[\"conclusive\",{\"1\":{\"523\":1}}],[\"concise\",{\"1\":{\"519\":1,\"1122\":1}}],[\"concatenate\",{\"0\":{\"481\":1}}],[\"consumption\",{\"2\":{\"745\":1}}],[\"consequences\",{\"1\":{\"547\":1}}],[\"considering\",{\"1\":{\"547\":1}}],[\"considers\",{\"1\":{\"523\":1}}],[\"consider\",{\"1\":{\"459\":1,\"547\":1,\"1116\":1,\"1125\":1}}],[\"consistent\",{\"1\":{\"362\":2}}],[\"consistency\",{\"0\":{\"1267\":1},\"1\":{\"361\":1,\"424\":1},\"2\":{\"390\":1,\"507\":1}}],[\"constitute\",{\"1\":{\"543\":1,\"547\":1}}],[\"constant\",{\"1\":{\"459\":1,\"547\":1}}],[\"constructor\",{\"1\":{\"280\":1,\"301\":1}}],[\"const\",{\"1\":{\"90\":1,\"194\":3,\"195\":1,\"199\":3,\"200\":1,\"395\":5,\"456\":1,\"458\":1,\"874\":2,\"959\":1,\"976\":1,\"1010\":1,\"1055\":3,\"1179\":1,\"1188\":1}}],[\"conforms\",{\"1\":{\"1055\":1}}],[\"confirm\",{\"1\":{\"1010\":2}}],[\"configured\",{\"1\":{\"1055\":2}}],[\"configuration\",{\"1\":{\"426\":1,\"1055\":1}}],[\"configs\",{\"1\":{\"1050\":1}}],[\"config>\",{\"1\":{\"461\":2,\"462\":4}}],[\"configepoch\",{\"1\":{\"427\":1,\"435\":1}}],[\"config\",{\"1\":{\"152\":3,\"199\":1,\"200\":2,\"426\":1,\"461\":10,\"462\":10,\"874\":7,\"981\":10,\"1055\":1,\"1225\":2,\"1237\":1}}],[\"conf\",{\"1\":{\"981\":2}}],[\"confused\",{\"1\":{\"90\":1}}],[\"continuation\",{\"1\":{\"1135\":1}}],[\"continuous\",{\"1\":{\"523\":2}}],[\"continuously\",{\"1\":{\"523\":3}}],[\"continued\",{\"1\":{\"523\":1}}],[\"continue\",{\"1\":{\"212\":2,\"213\":1,\"214\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"230\":2,\"311\":1,\"519\":1,\"563\":1,\"761\":1,\"1055\":4,\"1127\":1,\"1193\":1}}],[\"contains\",{\"1\":{\"978\":2,\"989\":1}}],[\"contain\",{\"1\":{\"540\":1}}],[\"containing\",{\"1\":{\"523\":1}}],[\"container\",{\"1\":{\"47\":1,\"48\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":4,\"69\":2,\"71\":2,\"72\":2,\"75\":2}}],[\"contact\",{\"1\":{\"523\":2,\"547\":1,\"549\":1}}],[\"contribution\",{\"1\":{\"547\":1}}],[\"contrary\",{\"1\":{\"519\":1}}],[\"controlled\",{\"1\":{\"547\":1}}],[\"control\",{\"1\":{\"75\":1,\"543\":1,\"1009\":1,\"1010\":1,\"1056\":1,\"1119\":3,\"1123\":1,\"1124\":1}}],[\"contentlength\",{\"1\":{\"1055\":1}}],[\"contents数组的真正类型取决于encoding属性的值\",{\"1\":{\"398\":1}}],[\"contents数组是整数集合的底层实现\",{\"1\":{\"398\":1}}],[\"contents\",{\"1\":{\"398\":1,\"548\":1}}],[\"content\",{\"1\":{\"195\":1,\"516\":1,\"1080\":2,\"1084\":2,\"1088\":1}}],[\"context包详解\",{\"0\":{\"1156\":1}}],[\"context\",{\"0\":{\"60\":1},\"1\":{\"60\":2,\"195\":2,\"849\":12,\"855\":4,\"972\":1,\"976\":2,\"1010\":17,\"1035\":6,\"1050\":1,\"1055\":9,\"1056\":2,\"1067\":6,\"1072\":2,\"1079\":2,\"1094\":1,\"1095\":2,\"1097\":4,\"1099\":4,\"1100\":2,\"1118\":1,\"1156\":7,\"1225\":2,\"1227\":2,\"1236\":1,\"1238\":2,\"1239\":1,\"1240\":5,\"1241\":3,\"1242\":2}}],[\"comfort\",{\"1\":{\"543\":1,\"560\":1}}],[\"coming\",{\"1\":{\"537\":1}}],[\"coma\",{\"1\":{\"523\":1}}],[\"comes\",{\"1\":{\"547\":1,\"1126\":1}}],[\"comet本质上也是轮询\",{\"1\":{\"1073\":1}}],[\"comet\",{\"1\":{\"523\":1}}],[\"come\",{\"1\":{\"523\":2,\"543\":1}}],[\"combinationsum2\",{\"1\":{\"212\":2}}],[\"combinationsum\",{\"1\":{\"211\":1}}],[\"combinationsum3\",{\"1\":{\"209\":1}}],[\"combinehandlers\",{\"1\":{\"1053\":1}}],[\"combined\",{\"1\":{\"523\":2}}],[\"combines\",{\"1\":{\"523\":1}}],[\"combine\",{\"1\":{\"208\":1,\"523\":1}}],[\"common\",{\"0\":{\"1290\":1},\"1\":{\"1119\":1,\"1123\":1}}],[\"communicated\",{\"1\":{\"1118\":1}}],[\"communicate\",{\"1\":{\"1118\":1,\"1121\":1,\"1123\":1}}],[\"communication\",{\"1\":{\"76\":1,\"563\":1,\"1118\":3}}],[\"commnad\",{\"0\":{\"993\":1}}],[\"commands\",{\"1\":{\"988\":1}}],[\"command\",{\"0\":{\"991\":1},\"1\":{\"68\":2,\"69\":1,\"818\":1,\"820\":9,\"821\":1,\"988\":2,\"990\":2,\"991\":7,\"992\":5,\"993\":9,\"1025\":2,\"1072\":1}}],[\"committed\",{\"1\":{\"361\":1}}],[\"commit可以控制redo\",{\"1\":{\"357\":1}}],[\"commit可以得知\",{\"1\":{\"56\":1}}],[\"commit可以在镜像运行成容器的时候对容器进行修改\",{\"1\":{\"55\":1}}],[\"commit命令将容器的存储层保存到镜像层再commit一下定制新的镜像\",{\"1\":{\"55\":1}}],[\"commit\",{\"1\":{\"55\":6,\"58\":1,\"357\":1,\"360\":21,\"371\":1,\"975\":1}}],[\"compare\",{\"1\":{\"1212\":1}}],[\"compareandswapint32\",{\"1\":{\"1142\":1}}],[\"compared\",{\"1\":{\"543\":1,\"1119\":1}}],[\"company\",{\"1\":{\"563\":1}}],[\"companies\",{\"1\":{\"547\":2}}],[\"comprehension\",{\"1\":{\"537\":1}}],[\"compressing\",{\"1\":{\"523\":1}}],[\"complex128\",{\"1\":{\"1188\":1}}],[\"complex64\",{\"1\":{\"1188\":1}}],[\"completing\",{\"1\":{\"1127\":1}}],[\"completely\",{\"1\":{\"523\":1}}],[\"completed\",{\"1\":{\"519\":1}}],[\"complete\",{\"1\":{\"49\":3,\"90\":1,\"547\":1,\"1118\":1,\"1124\":1}}],[\"complain\",{\"1\":{\"1126\":1}}],[\"complicated\",{\"1\":{\"523\":1}}],[\"composite\",{\"1\":{\"915\":2}}],[\"composed\",{\"1\":{\"523\":1}}],[\"components\",{\"1\":{\"915\":4,\"1118\":5}}],[\"components=1\",{\"1\":{\"58\":2}}],[\"component\",{\"1\":{\"915\":4,\"921\":2,\"1118\":4}}],[\"compiling\",{\"1\":{\"447\":2,\"448\":1}}],[\"compiler\",{\"1\":{\"1126\":1}}],[\"compile\",{\"1\":{\"90\":1,\"1135\":2}}],[\"computers\",{\"1\":{\"547\":2}}],[\"computer\",{\"1\":{\"543\":1,\"910\":2}}],[\"compute\",{\"1\":{\"90\":1,\"152\":2}}],[\"com\",{\"1\":{\"3\":2,\"27\":1,\"55\":1,\"144\":1,\"194\":3,\"509\":3,\"511\":3,\"523\":2,\"569\":3,\"956\":1,\"957\":1,\"958\":2,\"959\":3,\"960\":2,\"972\":2,\"973\":5,\"975\":2,\"976\":8,\"977\":4,\"980\":2,\"981\":1,\"988\":2,\"989\":1,\"992\":1,\"1000\":1,\"1001\":1,\"1010\":2,\"1011\":1,\"1017\":1,\"1018\":3,\"1019\":1,\"1038\":3,\"1045\":1,\"1047\":1,\"1054\":1,\"1067\":1,\"1073\":1,\"1079\":2,\"1086\":1,\"1098\":1,\"1100\":1,\"1135\":1,\"1181\":1,\"1194\":1,\"1223\":2,\"1225\":1,\"1245\":1}}],[\"c\",{\"0\":{\"1253\":1,\"1254\":1},\"1\":{\"26\":2,\"58\":6,\"60\":1,\"66\":2,\"75\":1,\"90\":16,\"109\":1,\"131\":1,\"169\":8,\"284\":14,\"291\":2,\"321\":2,\"424\":1,\"426\":3,\"435\":1,\"461\":2,\"462\":2,\"485\":2,\"820\":7,\"827\":3,\"833\":15,\"838\":12,\"849\":9,\"855\":10,\"861\":5,\"883\":2,\"905\":4,\"915\":2,\"921\":1,\"958\":6,\"960\":6,\"972\":4,\"997\":1,\"1001\":4,\"1005\":3,\"1050\":2,\"1055\":84,\"1056\":8,\"1072\":1,\"1095\":2,\"1120\":3,\"1137\":1,\"1138\":9,\"1146\":11,\"1163\":4,\"1173\":4,\"1179\":1,\"1191\":2,\"1211\":1},\"2\":{\"91\":1}}],[\"c用户的获利情况如下\",{\"1\":{\"26\":2}}],[\"p中窃取g\",{\"1\":{\"1135\":1}}],[\"p的本地协程队列\",{\"1\":{\"1135\":1}}],[\"pd\",{\"1\":{\"1135\":2}}],[\"pdead\",{\"1\":{\"1134\":1}}],[\"pdas\",{\"1\":{\"121\":1}}],[\"pgcstop\",{\"1\":{\"1134\":1}}],[\"pkg\",{\"1\":{\"899\":1,\"970\":2,\"1054\":1,\"1074\":1,\"1093\":1,\"1204\":1}}],[\"pb\",{\"1\":{\"899\":6,\"1067\":6,\"1078\":2,\"1079\":8,\"1084\":17,\"1088\":5,\"1089\":2,\"1095\":4}}],[\"pyramid\",{\"1\":{\"547\":1}}],[\"pyrimidines\",{\"1\":{\"523\":1}}],[\"pyth\",{\"1\":{\"153\":4,\"165\":1}}],[\"python\",{\"1\":{\"57\":1,\"1073\":1}}],[\"pleasure\",{\"1\":{\"543\":1,\"557\":1,\"563\":1}}],[\"please\",{\"1\":{\"519\":1,\"563\":1,\"1054\":1,\"1120\":1}}],[\"plain\",{\"1\":{\"1055\":1,\"1080\":1}}],[\"plaintext\",{\"1\":{\"1055\":1}}],[\"places\",{\"1\":{\"563\":1}}],[\"place\",{\"1\":{\"523\":2,\"563\":1,\"1052\":1}}],[\"planets\",{\"1\":{\"523\":1}}],[\"planet\",{\"1\":{\"523\":8}}],[\"planning\",{\"1\":{\"519\":1}}],[\"playground\",{\"1\":{\"560\":1,\"1242\":2,\"1245\":1}}],[\"playing\",{\"1\":{\"543\":1,\"861\":1}}],[\"play\",{\"1\":{\"519\":1,\"537\":1,\"543\":2,\"557\":1,\"861\":3,\"1019\":2}}],[\"plateau\",{\"1\":{\"152\":6}}],[\"peek\",{\"1\":{\"1055\":1}}],[\"peel\",{\"1\":{\"523\":1}}],[\"pending\",{\"1\":{\"1056\":1}}],[\"pen\",{\"1\":{\"543\":1}}],[\"people\",{\"1\":{\"519\":2,\"523\":2,\"540\":4,\"543\":5,\"547\":11,\"548\":2,\"549\":1,\"550\":1,\"563\":2}}],[\"perfectly\",{\"1\":{\"1124\":1}}],[\"perrpccredentials\",{\"1\":{\"1099\":1}}],[\"perrpccredscalloption\",{\"1\":{\"1099\":1}}],[\"perplexity\",{\"1\":{\"772\":1}}],[\"pervasive\",{\"1\":{\"563\":1}}],[\"perception\",{\"1\":{\"557\":1}}],[\"persistentpostrun\",{\"1\":{\"993\":3}}],[\"persistentprerun\",{\"1\":{\"993\":3}}],[\"persistentflags\",{\"1\":{\"991\":1}}],[\"persistent\",{\"1\":{\"991\":3}}],[\"persevere\",{\"1\":{\"563\":1}}],[\"persuaded\",{\"1\":{\"537\":1}}],[\"perspective\",{\"1\":{\"523\":1}}],[\"person2\",{\"1\":{\"977\":1}}],[\"person1\",{\"1\":{\"977\":1}}],[\"personconfig\",{\"1\":{\"874\":2}}],[\"personal\",{\"1\":{\"540\":2,\"563\":4}}],[\"person\",{\"1\":{\"523\":1,\"543\":5,\"547\":3,\"563\":1,\"874\":7,\"875\":6,\"890\":6,\"977\":20,\"1019\":4,\"1084\":24,\"1088\":5,\"1116\":4,\"1117\":2,\"1188\":4,\"1190\":2,\"1191\":1,\"1192\":5}}],[\"perhaps\",{\"1\":{\"523\":1,\"548\":1}}],[\"per\",{\"1\":{\"523\":1,\"1055\":1}}],[\"period\",{\"1\":{\"426\":1,\"523\":4}}],[\"permutation\",{\"1\":{\"311\":1}}],[\"permuteunique\",{\"1\":{\"219\":1}}],[\"permute\",{\"1\":{\"218\":1}}],[\"p2\",{\"1\":{\"480\":3}}],[\"p1\",{\"1\":{\"480\":3}}],[\"px\",{\"1\":{\"436\":3,\"437\":1}}],[\"ptrtothis\",{\"1\":{\"1139\":1}}],[\"ptrdata\",{\"1\":{\"1139\":1}}],[\"ptr\",{\"1\":{\"394\":3,\"400\":1,\"1135\":1,\"1188\":1,\"1190\":1}}],[\"pclone\",{\"1\":{\"890\":4}}],[\"pc\",{\"1\":{\"377\":1,\"1132\":2,\"1135\":1}}],[\"physical\",{\"1\":{\"560\":1}}],[\"physiologically\",{\"1\":{\"543\":1}}],[\"phony用来定义伪目标\",{\"1\":{\"1026\":1}}],[\"phony\",{\"1\":{\"1026\":1}}],[\"phone\",{\"1\":{\"537\":5,\"547\":3,\"548\":2,\"560\":2,\"563\":4,\"874\":8,\"875\":3}}],[\"photon\",{\"1\":{\"523\":1}}],[\"phase\",{\"1\":{\"523\":1}}],[\"phantom\",{\"1\":{\"361\":1}}],[\"php\",{\"1\":{\"57\":1,\"60\":1,\"721\":1}}],[\"pi\",{\"1\":{\"1173\":4,\"1198\":2}}],[\"pipeline\",{\"1\":{\"1236\":1,\"1239\":1}}],[\"pipelining\",{\"1\":{\"1055\":2}}],[\"pipe\",{\"1\":{\"1121\":1}}],[\"pipes\",{\"1\":{\"1121\":1}}],[\"picostocks\",{\"1\":{\"704\":1}}],[\"pickle\",{\"1\":{\"704\":1}}],[\"picking\",{\"1\":{\"569\":1}}],[\"pick\",{\"1\":{\"563\":1}}],[\"picked\",{\"1\":{\"548\":1}}],[\"picture\",{\"1\":{\"543\":2}}],[\"pinduoduo\",{\"1\":{\"537\":1}}],[\"ping和pong消息的正文\",{\"1\":{\"435\":1}}],[\"ping\",{\"1\":{\"435\":9}}],[\"ping消息\",{\"1\":{\"434\":1}}],[\"piled\",{\"1\":{\"523\":1}}],[\"pivot\",{\"1\":{\"216\":2,\"405\":2,\"949\":2,\"967\":2}}],[\"pidle\",{\"1\":{\"1134\":1}}],[\"pid\",{\"1\":{\"75\":2,\"76\":6}}],[\"pqrs\",{\"1\":{\"210\":1}}],[\"pnpm\",{\"1\":{\"192\":2}}],[\"png\",{\"1\":{\"174\":1,\"195\":1,\"709\":1,\"734\":1,\"1009\":2,\"1045\":1,\"1046\":1}}],[\"pfail\",{\"1\":{\"433\":2}}],[\"pf\",{\"1\":{\"90\":4}}],[\"poor\",{\"1\":{\"563\":1}}],[\"poolevent\",{\"1\":{\"1237\":1}}],[\"poolmonitor\",{\"1\":{\"1237\":3}}],[\"pool对象其实就是sync\",{\"1\":{\"1055\":1}}],[\"pool空间不够的时候\",{\"1\":{\"377\":1}}],[\"pool大小是有限的\",{\"1\":{\"377\":1}}],[\"pool除了能提高读性能\",{\"1\":{\"377\":1}}],[\"pool是一片连续的内存空间\",{\"1\":{\"377\":1}}],[\"pool是啥\",{\"1\":{\"340\":1}}],[\"pool的最前面\",{\"1\":{\"376\":1}}],[\"pool中取出来一个上下文对象\",{\"1\":{\"1055\":1}}],[\"pool中时\",{\"1\":{\"377\":2}}],[\"pool中将该被修改的页面标记为脏页\",{\"1\":{\"377\":1}}],[\"pool中的缓存页\",{\"1\":{\"376\":1}}],[\"pool中除了缓存索引页和数据页\",{\"1\":{\"376\":1}}],[\"pool中\",{\"1\":{\"376\":2,\"377\":1}}],[\"pool中所存在的页\",{\"1\":{\"376\":1}}],[\"pool申请一片连续的内存空间\",{\"1\":{\"376\":1}}],[\"pool默认128mb\",{\"1\":{\"376\":1}}],[\"pool读取\",{\"1\":{\"376\":1}}],[\"pool可以提升性能\",{\"1\":{\"376\":1}}],[\"pool里的脏页刷新到磁盘里\",{\"1\":{\"357\":1}}],[\"pool\",{\"0\":{\"354\":1,\"375\":1,\"376\":1,\"377\":1},\"1\":{\"166\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":2,\"376\":5,\"377\":16,\"933\":2,\"1055\":4}}],[\"poloniex\",{\"1\":{\"704\":1}}],[\"policymakers\",{\"1\":{\"563\":1}}],[\"politics\",{\"1\":{\"540\":1}}],[\"politicians\",{\"1\":{\"523\":1}}],[\"polyphenols\",{\"1\":{\"543\":1}}],[\"polymarket\",{\"0\":{\"169\":1},\"1\":{\"169\":2}}],[\"polygon\",{\"1\":{\"144\":1}}],[\"potential\",{\"1\":{\"523\":1}}],[\"potiner指针可以将这些\",{\"1\":{\"356\":1}}],[\"potiner指针和一个trx\",{\"1\":{\"356\":1}}],[\"pong三种消息实现\",{\"1\":{\"435\":1}}],[\"pong消息时\",{\"1\":{\"435\":1}}],[\"pong消息的实现\",{\"1\":{\"435\":1}}],[\"pong消息的正文\",{\"1\":{\"435\":1}}],[\"pong消息都包含两个\",{\"1\":{\"435\":2}}],[\"pong消息\",{\"1\":{\"434\":1}}],[\"pong\",{\"1\":{\"425\":2,\"435\":1}}],[\"posix\",{\"1\":{\"988\":1}}],[\"possible\",{\"1\":{\"537\":1,\"547\":1,\"1126\":2}}],[\"pos\",{\"1\":{\"357\":5}}],[\"posts\",{\"0\":{\"1248\":1},\"1\":{\"1098\":1,\"1194\":1}}],[\"post路径为\",{\"1\":{\"1080\":1}}],[\"postrun\",{\"1\":{\"993\":3}}],[\"post提供的数据\",{\"1\":{\"973\":1}}],[\"post请求可以使用curl和postman工具进行调试\",{\"1\":{\"516\":1}}],[\"post请求的请求体\",{\"1\":{\"516\":1}}],[\"post\",{\"1\":{\"193\":1,\"195\":1,\"516\":1,\"534\":3,\"972\":6,\"973\":6,\"1047\":1,\"1079\":2,\"1080\":2,\"1193\":7}}],[\"postgres\",{\"1\":{\"193\":1}}],[\"postgresql\",{\"1\":{\"3\":1,\"724\":1}}],[\"popup\",{\"1\":{\"1118\":1}}],[\"popular\",{\"1\":{\"540\":1,\"563\":1}}],[\"poppies\",{\"1\":{\"523\":1}}],[\"popped\",{\"1\":{\"302\":4}}],[\"pop\",{\"1\":{\"301\":3,\"302\":5,\"336\":2,\"480\":10,\"543\":1}}],[\"powers\",{\"1\":{\"547\":1}}],[\"power\",{\"1\":{\"523\":1}}],[\"pow\",{\"1\":{\"288\":1}}],[\"pow工作证明机制\",{\"1\":{\"94\":1}}],[\"portion\",{\"1\":{\"1120\":4}}],[\"port><key\",{\"1\":{\"431\":1}}],[\"port>\",{\"1\":{\"426\":2}}],[\"port=8080\",{\"1\":{\"510\":1}}],[\"port=\",{\"1\":{\"194\":1}}],[\"port=htons\",{\"1\":{\"90\":2}}],[\"portal申请一个oauth2\",{\"1\":{\"192\":1}}],[\"port\",{\"1\":{\"90\":3,\"194\":2,\"425\":1,\"426\":3,\"427\":1,\"435\":1,\"516\":2,\"1055\":2}}],[\"ports\",{\"1\":{\"68\":2,\"69\":1}}],[\"pointing\",{\"1\":{\"1126\":1}}],[\"points\",{\"1\":{\"1118\":2}}],[\"pointer\",{\"1\":{\"356\":1,\"362\":1,\"1137\":1,\"1138\":1,\"1139\":4,\"1188\":1}}],[\"point\",{\"0\":{\"1118\":1},\"1\":{\"76\":1,\"357\":1,\"523\":1,\"543\":1,\"547\":3,\"1118\":1,\"1126\":1}}],[\"psyscall并解除\",{\"1\":{\"1135\":1}}],[\"psyscall\",{\"1\":{\"1134\":1,\"1135\":1}}],[\"psync命令的调用方法有两种\",{\"1\":{\"425\":1}}],[\"psync命令的实现\",{\"1\":{\"425\":1}}],[\"psync命令的部分重同步模式解决了旧版复制功能在处理断线后重复制时出现的低效情况\",{\"1\":{\"425\":1}}],[\"psync命令有完整重同步和部分重同步两种模式\",{\"1\":{\"425\":1}}],[\"psubscribe等命令组成\",{\"1\":{\"423\":1}}],[\"psetex\",{\"1\":{\"403\":1}}],[\"pseudo\",{\"1\":{\"64\":1}}],[\"ps\",{\"1\":{\"65\":1,\"374\":1,\"1186\":1}}],[\"pause\",{\"1\":{\"1142\":1}}],[\"paused\",{\"1\":{\"152\":1}}],[\"paid\",{\"1\":{\"704\":1,\"1010\":9}}],[\"painful\",{\"1\":{\"560\":1}}],[\"pain\",{\"1\":{\"560\":1}}],[\"pairs\",{\"1\":{\"1093\":1,\"1094\":1,\"1095\":3}}],[\"pairs去创建一个md\",{\"1\":{\"1093\":1}}],[\"pairs部分都保存了一个或以上数量的键值对\",{\"1\":{\"420\":1}}],[\"pairs部分\",{\"0\":{\"420\":1}}],[\"pairs部分的长度也会有所不同\",{\"1\":{\"419\":1}}],[\"pairs部分保存了数据库中的所有键值对数据\",{\"1\":{\"419\":1}}],[\"pairs三个部分\",{\"1\":{\"419\":1}}],[\"paper\",{\"1\":{\"557\":1}}],[\"paypal\",{\"1\":{\"614\":1}}],[\"payment\",{\"1\":{\"547\":4,\"550\":1,\"1010\":2}}],[\"pay\",{\"1\":{\"547\":1,\"549\":1,\"1010\":7}}],[\"payload表示一个\",{\"1\":{\"1047\":1}}],[\"payload负载\",{\"1\":{\"1047\":1}}],[\"payload\",{\"1\":{\"516\":2,\"1047\":1}}],[\"palm\",{\"1\":{\"543\":2}}],[\"past\",{\"1\":{\"519\":1,\"523\":1,\"547\":1,\"557\":2,\"560\":1,\"563\":1}}],[\"paste以下代码\",{\"1\":{\"513\":1}}],[\"pascal\",{\"1\":{\"467\":1}}],[\"passes\",{\"1\":{\"1144\":1}}],[\"passed\",{\"1\":{\"523\":1,\"543\":1,\"1126\":1}}],[\"passive\",{\"1\":{\"547\":1,\"550\":1}}],[\"passing\",{\"1\":{\"523\":1}}],[\"passable\",{\"1\":{\"523\":1}}],[\"password\",{\"1\":{\"194\":1,\"1047\":5}}],[\"password=\",{\"1\":{\"194\":1}}],[\"pass\",{\"1\":{\"194\":1,\"899\":1,\"959\":2,\"967\":4,\"969\":2,\"970\":2,\"972\":4,\"973\":2,\"975\":3,\"976\":2,\"978\":4,\"1124\":1}}],[\"panting\",{\"1\":{\"543\":1}}],[\"panicln\",{\"1\":{\"1178\":2}}],[\"panicf\",{\"1\":{\"1178\":2}}],[\"panicking\",{\"1\":{\"447\":5}}],[\"panicked\",{\"1\":{\"447\":3,\"448\":1,\"449\":2,\"475\":1}}],[\"panic`\",{\"1\":{\"447\":2}}],[\"panic顾名思义就是直译就是恐慌的意思\",{\"1\":{\"447\":1}}],[\"panic\",{\"0\":{\"447\":1},\"1\":{\"447\":15,\"448\":7,\"449\":2,\"450\":2,\"458\":2,\"975\":2,\"976\":1,\"1053\":1,\"1055\":3,\"1125\":3,\"1132\":5,\"1169\":1,\"1178\":2,\"1181\":1,\"1225\":1}}],[\"pando的各种协议\",{\"1\":{\"185\":1}}],[\"pando\",{\"1\":{\"174\":2,\"176\":3}}],[\"paxos\",{\"1\":{\"387\":1}}],[\"patchinstancemethod\",{\"1\":{\"978\":1}}],[\"patch等库需要我们禁止内联\",{\"1\":{\"961\":1}}],[\"patchconvey\",{\"1\":{\"958\":1,\"959\":4,\"960\":2}}],[\"patch\",{\"1\":{\"956\":2,\"978\":1}}],[\"patriotic\",{\"1\":{\"548\":1}}],[\"patriotism\",{\"1\":{\"548\":1}}],[\"patiently\",{\"1\":{\"523\":1}}],[\"pattern结构\",{\"1\":{\"423\":1}}],[\"pattern\",{\"1\":{\"407\":1,\"409\":1,\"410\":1,\"423\":1,\"818\":1,\"824\":1}}],[\"patterns属性是一个链表\",{\"1\":{\"423\":1}}],[\"patterns属性里面\",{\"1\":{\"423\":1}}],[\"patterns\",{\"1\":{\"523\":1,\"827\":3},\"2\":{\"205\":1,\"817\":1,\"823\":1,\"830\":1,\"836\":1,\"841\":1,\"847\":1,\"852\":1,\"858\":1,\"864\":1,\"870\":1,\"878\":1,\"886\":1,\"893\":1,\"902\":1,\"908\":1,\"913\":1,\"918\":1,\"924\":1,\"930\":1,\"936\":1,\"942\":1}}],[\"paths\",{\"1\":{\"1088\":4}}],[\"pathsum\",{\"1\":{\"307\":1}}],[\"path=pb是pb\",{\"1\":{\"1084\":1}}],[\"path=pb的意思是\",{\"1\":{\"1084\":1}}],[\"path=pb\",{\"1\":{\"1084\":3}}],[\"path=\",{\"1\":{\"1067\":1,\"1084\":2}}],[\"path\",{\"1\":{\"208\":23,\"209\":9,\"211\":9,\"212\":18,\"213\":9,\"214\":9,\"307\":19,\"311\":8,\"523\":1,\"1053\":8,\"1055\":1,\"1080\":1,\"1088\":5,\"1193\":2}}],[\"pathname\",{\"1\":{\"200\":1}}],[\"parsing\",{\"1\":{\"1197\":1}}],[\"parseinlocation\",{\"1\":{\"1212\":1}}],[\"parseint\",{\"1\":{\"1198\":1}}],[\"parseerror\",{\"0\":{\"1210\":1},\"1\":{\"1210\":5}}],[\"parsedtime\",{\"1\":{\"1212\":2}}],[\"parsed\",{\"1\":{\"1207\":2,\"1212\":2}}],[\"parseduration\",{\"1\":{\"1004\":1,\"1207\":3}}],[\"parseuint\",{\"1\":{\"1198\":1}}],[\"parsefloat\",{\"1\":{\"1198\":4}}],[\"parsebool\",{\"1\":{\"1198\":1}}],[\"parsewithclaims\",{\"1\":{\"1047\":1}}],[\"parse\",{\"1\":{\"978\":1,\"1161\":4,\"1162\":2,\"1163\":2,\"1198\":1,\"1205\":2,\"1210\":3,\"1212\":3,\"1213\":2}}],[\"park\",{\"1\":{\"1135\":1}}],[\"parnas给出了模块化系统的以下\",{\"1\":{\"722\":1}}],[\"parts\",{\"1\":{\"1193\":3}}],[\"part2\",{\"1\":{\"1140\":1}}],[\"part\",{\"1\":{\"1118\":1}}],[\"party\",{\"1\":{\"548\":1}}],[\"particles\",{\"1\":{\"523\":3}}],[\"particularly\",{\"1\":{\"523\":1}}],[\"particular\",{\"1\":{\"90\":1}}],[\"partition\",{\"1\":{\"213\":1,\"949\":1,\"967\":7}}],[\"parents\",{\"1\":{\"523\":1}}],[\"parameter\",{\"1\":{\"1124\":2,\"1126\":2}}],[\"parameters\",{\"1\":{\"1055\":1}}],[\"param\",{\"1\":{\"972\":5}}],[\"paramscount\",{\"1\":{\"1053\":3}}],[\"params\",{\"1\":{\"195\":2,\"1055\":4}}],[\"parasites\",{\"1\":{\"523\":1}}],[\"parallelism\",{\"0\":{\"1115\":1,\"1117\":1,\"1118\":1},\"1\":{\"1115\":1,\"1117\":2,\"1118\":3}}],[\"parallel\",{\"1\":{\"426\":2,\"543\":3,\"1018\":1,\"1055\":1,\"1115\":1,\"1118\":3}}],[\"paration\",{\"1\":{\"216\":2}}],[\"package的作用\",{\"1\":{\"1089\":1}}],[\"package=mocks\",{\"1\":{\"977\":3}}],[\"package\",{\"1\":{\"60\":5,\"511\":1,\"512\":1,\"814\":1,\"838\":1,\"861\":1,\"874\":1,\"890\":1,\"899\":1,\"910\":1,\"915\":1,\"959\":1,\"960\":1,\"967\":1,\"972\":2,\"973\":2,\"975\":2,\"976\":2,\"977\":2,\"981\":1,\"992\":1,\"993\":1,\"1001\":1,\"1010\":2,\"1011\":1,\"1045\":1,\"1047\":1,\"1063\":3,\"1067\":6,\"1072\":4,\"1073\":1,\"1084\":11,\"1100\":1,\"1119\":2,\"1120\":1,\"1122\":1,\"1124\":2,\"1125\":1,\"1126\":2,\"1127\":2,\"1138\":2,\"1161\":2,\"1162\":1,\"1163\":2,\"1188\":2,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1}}],[\"pages上的应用\",{\"1\":{\"698\":1}}],[\"page\",{\"1\":{\"17\":1,\"33\":1,\"199\":2,\"357\":2,\"358\":1,\"360\":4,\"377\":3,\"1073\":1,\"1118\":2,\"1148\":1}}],[\"p\",{\"0\":{\"1134\":1},\"1\":{\"55\":1,\"58\":2,\"74\":3,\"291\":10,\"569\":1,\"874\":13,\"875\":9,\"890\":3,\"910\":6,\"939\":2,\"972\":3,\"973\":2,\"977\":11,\"980\":6,\"1019\":1,\"1073\":2,\"1084\":1,\"1131\":1,\"1132\":1,\"1134\":4,\"1135\":33,\"1142\":1,\"1173\":1,\"1188\":2,\"1190\":3,\"1192\":5,\"1219\":2}}],[\"prunning\",{\"1\":{\"1134\":1,\"1135\":1}}],[\"prune\",{\"1\":{\"52\":1,\"72\":1,\"74\":1}}],[\"prsdigg\",{\"1\":{\"557\":1}}],[\"prec\",{\"1\":{\"1199\":2}}],[\"prefix>2023\",{\"1\":{\"1182\":1}}],[\"prefix>\",{\"1\":{\"1182\":1}}],[\"prefixdemo\",{\"1\":{\"1180\":1}}],[\"prefix函数可以让我们的到前缀是什么\",{\"1\":{\"1180\":1}}],[\"prefix\",{\"1\":{\"1179\":1,\"1180\":3,\"1181\":1}}],[\"preference\",{\"1\":{\"523\":1}}],[\"preemptpark\",{\"1\":{\"1135\":1}}],[\"preemptshrink\",{\"1\":{\"1132\":1}}],[\"preemptstop\",{\"1\":{\"1132\":1}}],[\"preempt\",{\"1\":{\"1132\":1}}],[\"prerequisites\",{\"1\":{\"1025\":2}}],[\"prerun\",{\"1\":{\"993\":3}}],[\"present\",{\"1\":{\"1124\":1}}],[\"press\",{\"1\":{\"548\":1}}],[\"pressure\",{\"1\":{\"523\":1}}],[\"president\",{\"1\":{\"543\":1}}],[\"predict\",{\"1\":{\"537\":1}}],[\"prehash记录上个块所构建哈希码\",{\"1\":{\"512\":1}}],[\"prehhash\",{\"1\":{\"512\":1}}],[\"prelude\",{\"1\":{\"448\":1}}],[\"prevents\",{\"1\":{\"1055\":1}}],[\"prevent\",{\"1\":{\"1055\":1,\"1124\":1}}],[\"prevblock\",{\"1\":{\"516\":3}}],[\"prevhash是从前一个块的hash复制过来的\",{\"1\":{\"514\":1}}],[\"prevhash\",{\"1\":{\"513\":1,\"514\":2,\"515\":1}}],[\"previous\",{\"1\":{\"426\":1}}],[\"prevlen\",{\"1\":{\"399\":2}}],[\"prev\",{\"1\":{\"394\":1}}],[\"prepare\",{\"1\":{\"360\":13}}],[\"pre相当与虚拟头节点\",{\"1\":{\"295\":1}}],[\"preorder\",{\"1\":{\"279\":7}}],[\"pre\",{\"1\":{\"278\":4,\"294\":4,\"295\":4}}],[\"primary\",{\"1\":{\"1218\":2}}],[\"primitives\",{\"1\":{\"1141\":1}}],[\"primitive\",{\"1\":{\"523\":4}}],[\"price=9\",{\"1\":{\"1161\":1}}],[\"price\",{\"1\":{\"537\":1,\"557\":1,\"980\":4,\"1161\":8}}],[\"prices\",{\"1\":{\"252\":19,\"253\":8,\"254\":19,\"255\":10}}],[\"priority\",{\"1\":{\"426\":1}}],[\"privacy\",{\"1\":{\"534\":2,\"547\":6,\"563\":2},\"2\":{\"541\":1,\"542\":1,\"555\":1,\"556\":1}}],[\"private\",{\"1\":{\"105\":1,\"563\":1}}],[\"privdata\",{\"1\":{\"395\":6}}],[\"printdemo\",{\"1\":{\"1178\":1}}],[\"prints\",{\"1\":{\"1124\":1}}],[\"printed\",{\"1\":{\"1119\":1,\"1120\":2,\"1124\":3}}],[\"printer\",{\"1\":{\"910\":18}}],[\"printing\",{\"1\":{\"910\":5}}],[\"print\",{\"0\":{\"1167\":1},\"1\":{\"482\":1,\"910\":13,\"992\":2,\"1073\":1,\"1124\":2,\"1126\":1,\"1138\":3,\"1166\":1,\"1167\":5,\"1178\":9,\"1180\":7}}],[\"println\",{\"1\":{\"212\":1,\"244\":1,\"245\":1,\"318\":1,\"326\":1,\"456\":1,\"458\":1,\"459\":1,\"460\":3,\"461\":2,\"462\":2,\"463\":2,\"467\":1,\"468\":3,\"472\":1,\"477\":2,\"478\":2,\"480\":1,\"481\":2,\"482\":1,\"483\":7,\"485\":1,\"486\":1,\"516\":1,\"814\":1,\"820\":2,\"827\":2,\"833\":2,\"838\":1,\"844\":3,\"849\":2,\"855\":3,\"861\":3,\"867\":4,\"883\":1,\"905\":4,\"910\":8,\"921\":1,\"927\":4,\"958\":3,\"959\":2,\"960\":3,\"990\":1,\"992\":4,\"1001\":1,\"1005\":1,\"1010\":15,\"1011\":2,\"1019\":2,\"1045\":1,\"1047\":1,\"1063\":3,\"1067\":3,\"1072\":7,\"1073\":6,\"1074\":4,\"1079\":1,\"1095\":4,\"1097\":1,\"1099\":1,\"1100\":1,\"1119\":4,\"1120\":1,\"1122\":1,\"1124\":6,\"1126\":2,\"1127\":2,\"1138\":5,\"1144\":2,\"1146\":1,\"1153\":4,\"1161\":5,\"1162\":2,\"1163\":1,\"1166\":1,\"1167\":4,\"1168\":1,\"1172\":1,\"1173\":2,\"1178\":3,\"1180\":2,\"1181\":2,\"1182\":1,\"1188\":7,\"1189\":6,\"1191\":5,\"1192\":5,\"1193\":3,\"1198\":7,\"1199\":2,\"1200\":4,\"1206\":4,\"1207\":10,\"1208\":6,\"1209\":1,\"1210\":1,\"1211\":2,\"1212\":24,\"1237\":2,\"1240\":2}}],[\"printfile\",{\"1\":{\"910\":5}}],[\"printf\",{\"1\":{\"90\":6,\"820\":1,\"827\":2,\"915\":2,\"977\":1,\"993\":5,\"1063\":2,\"1072\":3,\"1074\":3,\"1097\":1,\"1099\":2,\"1120\":2,\"1122\":1,\"1163\":1,\"1167\":4,\"1170\":1,\"1171\":2,\"1172\":3,\"1173\":5,\"1178\":3,\"1180\":1,\"1188\":1,\"1190\":1,\"1192\":4}}],[\"prismaadapter\",{\"1\":{\"194\":2}}],[\"prisma\",{\"1\":{\"3\":1,\"191\":1,\"192\":1,\"194\":6}}],[\"prog\",{\"1\":{\"1144\":3}}],[\"progresses\",{\"1\":{\"523\":1}}],[\"progress\",{\"1\":{\"395\":1,\"547\":2,\"557\":1}}],[\"programs\",{\"1\":{\"1118\":1}}],[\"programming\",{\"1\":{\"90\":1,\"224\":1,\"543\":1,\"548\":1,\"557\":2,\"827\":6,\"1084\":1,\"1118\":2,\"1123\":1},\"2\":{\"270\":1}}],[\"programing\",{\"1\":{\"90\":2}}],[\"program\",{\"0\":{\"90\":1,\"1124\":1,\"1251\":1,\"1253\":1},\"1\":{\"90\":2,\"152\":2,\"990\":2,\"993\":1,\"1119\":3,\"1120\":5,\"1124\":7,\"1125\":5,\"1126\":4,\"1127\":2},\"2\":{\"498\":1}}],[\"proxies\",{\"1\":{\"1054\":2}}],[\"proxy\",{\"1\":{\"48\":1,\"939\":3}}],[\"prometheus\",{\"0\":{\"1030\":1},\"2\":{\"1032\":1}}],[\"promotional\",{\"1\":{\"519\":1}}],[\"profit\",{\"1\":{\"563\":1}}],[\"profitability\",{\"1\":{\"540\":2}}],[\"profile\",{\"1\":{\"195\":7}}],[\"property\",{\"1\":{\"1123\":1}}],[\"properties\",{\"1\":{\"1119\":1}}],[\"proportion\",{\"1\":{\"547\":1}}],[\"proposes\",{\"1\":{\"534\":1}}],[\"propagating\",{\"1\":{\"450\":1}}],[\"propagation\",{\"1\":{\"74\":1}}],[\"providing\",{\"1\":{\"992\":1}}],[\"provided\",{\"1\":{\"523\":1}}],[\"providers\",{\"1\":{\"192\":2,\"194\":1,\"195\":1}}],[\"provider\",{\"1\":{\"192\":4,\"193\":1}}],[\"prove\",{\"1\":{\"523\":1}}],[\"prologue\",{\"1\":{\"523\":1}}],[\"productid\",{\"1\":{\"975\":2}}],[\"production\",{\"1\":{\"972\":1}}],[\"products\",{\"1\":{\"523\":2,\"547\":1,\"883\":1,\"975\":3}}],[\"product\",{\"1\":{\"523\":2,\"563\":1,\"883\":13,\"975\":6}}],[\"producer\",{\"1\":{\"1127\":4},\"2\":{\"742\":1}}],[\"produced\",{\"1\":{\"523\":6}}],[\"produce\",{\"1\":{\"523\":5}}],[\"produces\",{\"1\":{\"523\":1}}],[\"probably\",{\"1\":{\"543\":1}}],[\"probablefail\",{\"1\":{\"433\":1}}],[\"problems\",{\"1\":{\"537\":1,\"550\":1,\"557\":1}}],[\"problem\",{\"1\":{\"448\":4,\"537\":3,\"543\":1,\"547\":7,\"550\":1,\"563\":1}}],[\"protect\",{\"1\":{\"547\":1}}],[\"protection\",{\"1\":{\"547\":2}}],[\"protected\",{\"1\":{\"200\":1}}],[\"proteins\",{\"1\":{\"523\":2}}],[\"proto演示一下\",{\"1\":{\"1084\":1}}],[\"proto去引入person\",{\"1\":{\"1084\":1}}],[\"proto3\",{\"1\":{\"1067\":2,\"1072\":2,\"1084\":3}}],[\"proto文件来做示例\",{\"1\":{\"1079\":1}}],[\"proto文件夹下创建一个hello\",{\"1\":{\"1067\":2}}],[\"proto文件生成对应语言的文件\",{\"1\":{\"1067\":1}}],[\"proto文件\",{\"1\":{\"1067\":2,\"1072\":2}}],[\"protoc文件加入到$gopath\",{\"1\":{\"1067\":1}}],[\"protoc下的\",{\"1\":{\"1067\":1}}],[\"protoc\",{\"1\":{\"1067\":6,\"1072\":1,\"1079\":2,\"1080\":2,\"1084\":4}}],[\"protocol\",{\"1\":{\"152\":9,\"533\":1,\"534\":1}}],[\"protobuf编程的几个步骤\",{\"1\":{\"1067\":1}}],[\"protobuf\",{\"1\":{\"1067\":2,\"1084\":2,\"1086\":2,\"1087\":4,\"1088\":4}}],[\"protoatleast\",{\"1\":{\"1055\":1}}],[\"proto\",{\"1\":{\"890\":7,\"1055\":3,\"1067\":27,\"1072\":14,\"1074\":1,\"1079\":5,\"1080\":1,\"1084\":18,\"1088\":1}}],[\"prototype\",{\"1\":{\"890\":1}}],[\"proton\",{\"1\":{\"523\":1}}],[\"projects\",{\"1\":{\"447\":2,\"448\":1}}],[\"project\",{\"1\":{\"192\":1,\"193\":1,\"449\":2}}],[\"procyield\",{\"1\":{\"1142\":1}}],[\"procresize\",{\"1\":{\"1134\":1}}],[\"procedure\",{\"1\":{\"1063\":1}}],[\"proceed\",{\"1\":{\"1047\":1}}],[\"processes\",{\"1\":{\"1118\":1}}],[\"processor\",{\"1\":{\"1118\":3}}],[\"process\",{\"1\":{\"523\":2,\"547\":1,\"1055\":1}}],[\"proc\",{\"1\":{\"76\":2}}],[\"practice\",{\"1\":{\"55\":1,\"548\":1,\"1127\":1}}],[\"put\",{\"1\":{\"543\":2,\"1055\":1}}],[\"pupil\",{\"1\":{\"523\":1}}],[\"push到远程仓库\",{\"1\":{\"525\":1}}],[\"pushed\",{\"1\":{\"302\":4}}],[\"push\",{\"0\":{\"477\":1},\"1\":{\"301\":5,\"302\":5,\"336\":3,\"460\":1,\"477\":6}}],[\"pusd可以通过在quill中购买文章\",{\"1\":{\"188\":1}}],[\"pusd未来规划和稳定币领域的未来发展情况\",{\"0\":{\"188\":1}}],[\"pusd和mixin的去中心化金融的发展是密不可分的\",{\"1\":{\"187\":1}}],[\"pusd通过mtg去中心化管理\",{\"1\":{\"187\":1}}],[\"pusd属于去中心化稳定币\",{\"1\":{\"187\":1}}],[\"pusd介绍和当前发展状况\",{\"0\":{\"187\":1}}],[\"pusd都是属于这类\",{\"1\":{\"185\":1}}],[\"pusd套利\",{\"0\":{\"180\":1}}],[\"pusd的总供应就是leaf的总供应1217万美元\",{\"1\":{\"174\":1}}],[\"pusd是1\",{\"1\":{\"187\":1}}],[\"pusd是mixin上1\",{\"1\":{\"173\":1}}],[\"pusd是什么\",{\"0\":{\"173\":1}}],[\"pusd\",{\"1\":{\"36\":1}}],[\"pubsub客户端可以通过这个命令来查看频道或者模式的相关信息\",{\"1\":{\"423\":1}}],[\"pubsub\",{\"1\":{\"423\":4}}],[\"pubkey\",{\"1\":{\"152\":2}}],[\"pub\",{\"1\":{\"152\":25}}],[\"publicerr\",{\"1\":{\"1055\":2}}],[\"public\",{\"1\":{\"105\":1,\"563\":2}}],[\"published\",{\"1\":{\"537\":1}}],[\"publish消息的实现\",{\"1\":{\"435\":1}}],[\"publish消息的正文由cluster\",{\"1\":{\"435\":1}}],[\"publish消息的正文\",{\"1\":{\"435\":1}}],[\"publish消息\",{\"1\":{\"434\":1}}],[\"publish\",{\"1\":{\"23\":1,\"426\":1,\"434\":1,\"435\":3,\"557\":1}}],[\"purines\",{\"1\":{\"523\":1}}],[\"purple\",{\"1\":{\"523\":1}}],[\"purposefully\",{\"1\":{\"1055\":1}}],[\"purpose\",{\"1\":{\"90\":1}}],[\"purely\",{\"1\":{\"523\":1}}],[\"pure\",{\"1\":{\"105\":1,\"557\":1}}],[\"purge\",{\"1\":{\"58\":1}}],[\"purchase\",{\"1\":{\"26\":1}}],[\"pulling\",{\"1\":{\"49\":1}}],[\"pull\",{\"1\":{\"49\":7,\"52\":2,\"55\":1,\"1219\":1}}],[\"pull命令\",{\"1\":{\"49\":1}}],[\"m=+0\",{\"1\":{\"1212\":1}}],[\"m=+8\",{\"1\":{\"1206\":1}}],[\"m=+7200\",{\"1\":{\"1212\":1}}],[\"m=+7\",{\"1\":{\"1206\":1}}],[\"m=+6\",{\"1\":{\"1206\":1}}],[\"m=+5\",{\"1\":{\"1206\":1}}],[\"mheap是go内存管理的三大组件\",{\"1\":{\"1150\":1}}],[\"mheap\",{\"1\":{\"1149\":1}}],[\"mheap里的arena区域是真正的堆区\",{\"1\":{\"1149\":1}}],[\"mheap中含有所有规格的mcentral所以当一个mcache从mcentral申请mspan时\",{\"1\":{\"1149\":1}}],[\"mheap主要用于大对象的分配以及管理未分割的mspan\",{\"1\":{\"1149\":1}}],[\"mheap会向操作系统申请新内存\",{\"1\":{\"1149\":1}}],[\"mcache管理本地缓存\",{\"1\":{\"1150\":1}}],[\"mcache\",{\"1\":{\"1150\":1}}],[\"mcentral提供全局span供mcache使用\",{\"1\":{\"1150\":1}}],[\"mcentral\",{\"1\":{\"1150\":1}}],[\"mcentral是sizeclass相同的span会以链表的形式组织在一起\",{\"1\":{\"1149\":1}}],[\"mcentral里维护着两个双向链表\",{\"1\":{\"1149\":1}}],[\"mcentral被所有的工作线程共同享有\",{\"1\":{\"1149\":1}}],[\"mcfi\",{\"1\":{\"318\":1}}],[\"m0\",{\"1\":{\"1133\":5}}],[\"m是操作系统的线程\",{\"1\":{\"1133\":1}}],[\"m是当前goroutine抢占的线程\",{\"1\":{\"1132\":1}}],[\"mv\",{\"1\":{\"989\":1}}],[\"mvcc\",{\"1\":{\"355\":1,\"356\":4,\"361\":2,\"362\":5,\"364\":1,\"368\":1}}],[\"mt\",{\"1\":{\"704\":1}}],[\"mtu\",{\"1\":{\"116\":1}}],[\"md\",{\"1\":{\"1093\":11,\"1094\":3,\"1095\":10,\"1099\":2}}],[\"mdn\",{\"1\":{\"504\":1}}],[\"mdl\",{\"1\":{\"365\":1,\"367\":13}}],[\"mget\",{\"1\":{\"403\":1}}],[\"msec\",{\"1\":{\"1212\":1}}],[\"msetnx\",{\"1\":{\"403\":1}}],[\"mset\",{\"1\":{\"403\":1}}],[\"mstart1\",{\"1\":{\"1135\":1}}],[\"mstime\",{\"1\":{\"426\":4,\"427\":2}}],[\"ms和ms\",{\"1\":{\"420\":1}}],[\"ms\",{\"1\":{\"377\":1,\"1120\":4}}],[\"msg=message\",{\"1\":{\"1080\":2}}],[\"msg消息结构之后\",{\"1\":{\"516\":1}}],[\"msg\",{\"1\":{\"121\":1,\"393\":1,\"402\":1,\"429\":1,\"435\":1,\"446\":1,\"516\":3,\"898\":2,\"972\":4,\"1067\":5,\"1072\":25,\"1080\":11,\"1095\":1}}],[\"mzi\",{\"1\":{\"318\":1}}],[\"m++\",{\"1\":{\"948\":1}}],[\"m+n\",{\"1\":{\"265\":1}}],[\"m+1\",{\"1\":{\"240\":1,\"264\":1,\"265\":2,\"266\":1,\"291\":1}}],[\"m个台阶\",{\"1\":{\"243\":1}}],[\"mno\",{\"1\":{\"210\":1}}],[\"mnt\",{\"1\":{\"76\":2}}],[\"m\",{\"0\":{\"1133\":1},\"1\":{\"152\":1,\"229\":5,\"230\":1,\"240\":3,\"243\":1,\"264\":4,\"265\":6,\"266\":4,\"275\":3,\"276\":3,\"284\":5,\"285\":4,\"286\":4,\"291\":3,\"308\":7,\"312\":3,\"319\":3,\"320\":4,\"325\":3,\"336\":20,\"362\":6,\"460\":5,\"483\":1,\"543\":1,\"557\":1,\"827\":3,\"833\":9,\"838\":4,\"910\":4,\"948\":3,\"960\":5,\"977\":1,\"980\":1,\"1011\":10,\"1084\":2,\"1099\":2,\"1131\":1,\"1132\":4,\"1133\":6,\"1134\":3,\"1135\":12,\"1145\":3,\"1207\":2,\"1209\":1,\"1229\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":6,\"1235\":2,\"1236\":1,\"1239\":1,\"1241\":1}}],[\"mrgnloop\",{\"1\":{\"151\":1}}],[\"mrgnlend\",{\"1\":{\"151\":1}}],[\"muintptr\",{\"1\":{\"1134\":1}}],[\"much\",{\"1\":{\"537\":1,\"543\":1,\"547\":1,\"563\":2}}],[\"musical\",{\"1\":{\"543\":1}}],[\"musician\",{\"1\":{\"543\":1}}],[\"music\",{\"1\":{\"519\":2,\"543\":4,\"557\":1,\"1117\":2},\"2\":{\"522\":1}}],[\"must\",{\"1\":{\"90\":1,\"523\":5,\"547\":1,\"548\":2,\"563\":1,\"1053\":2,\"1115\":1,\"1242\":3}}],[\"muxrouter\",{\"1\":{\"516\":4}}],[\"mux用于处理web服务的包\",{\"1\":{\"509\":1}}],[\"mux\",{\"1\":{\"509\":1,\"511\":1,\"516\":1}}],[\"mutable\",{\"1\":{\"468\":2}}],[\"mutexwaitershift\",{\"1\":{\"1142\":1}}],[\"mutexwoken\",{\"1\":{\"1142\":2}}],[\"mutexwoken和mutexstarving\",{\"1\":{\"1142\":1}}],[\"mutexstarving\",{\"1\":{\"1142\":2}}],[\"mutexlocked\",{\"1\":{\"1142\":3}}],[\"mutex由两个字段state\",{\"1\":{\"1142\":1}}],[\"mutex<string>\",{\"1\":{\"459\":1,\"460\":1}}],[\"mutex\",{\"0\":{\"1142\":1},\"1\":{\"360\":1,\"459\":2,\"460\":2,\"513\":2,\"516\":2,\"517\":2,\"1137\":1,\"1141\":1,\"1142\":10,\"1143\":4,\"1145\":2,\"1146\":2}}],[\"mut\",{\"1\":{\"152\":2,\"450\":3,\"451\":5,\"457\":1,\"460\":2,\"461\":5,\"462\":7,\"468\":1,\"477\":2,\"478\":1,\"479\":1,\"480\":4,\"481\":2}}],[\"muloperation\",{\"1\":{\"855\":3}}],[\"mul\",{\"1\":{\"152\":4}}],[\"multiplied\",{\"1\":{\"523\":1}}],[\"multiple\",{\"0\":{\"1120\":1},\"1\":{\"483\":1,\"519\":1,\"543\":1,\"989\":1,\"992\":1,\"1055\":1,\"1118\":1,\"1231\":1}}],[\"multi四个命令以外的其他命令\",{\"1\":{\"424\":1}}],[\"multi四个命令的其中一个\",{\"1\":{\"424\":1}}],[\"multi标识来完成的client\",{\"1\":{\"424\":1}}],[\"multi事务开始\",{\"1\":{\"424\":1}}],[\"multi\",{\"1\":{\"78\":1,\"424\":1,\"426\":1,\"523\":1,\"1118\":1}}],[\"mock框架\",{\"0\":{\"1287\":1}}],[\"mock获取订单数据的方法\",{\"1\":{\"980\":1}}],[\"mockdoer\",{\"1\":{\"977\":1}}],[\"mockgen\",{\"1\":{\"977\":3}}],[\"mocks\",{\"1\":{\"977\":7}}],[\"mockperson\",{\"1\":{\"977\":12}}],[\"mock执行指定sql语句时的返回结果\",{\"1\":{\"975\":1}}],[\"mock一个redis\",{\"1\":{\"976\":1}}],[\"mock一个\",{\"1\":{\"975\":1}}],[\"mock一个响应记录器\",{\"1\":{\"972\":1}}],[\"mock一个http请求\",{\"1\":{\"972\":1}}],[\"mocktimes\",{\"1\":{\"960\":2}}],[\"mocka\",{\"1\":{\"960\":3}}],[\"mock变量\",{\"0\":{\"959\":1},\"1\":{\"958\":2}}],[\"mockvalue\",{\"1\":{\"958\":2,\"959\":6}}],[\"mock方法\",{\"1\":{\"958\":2,\"959\":1,\"960\":1}}],[\"mock函数\",{\"0\":{\"960\":1},\"1\":{\"958\":2,\"960\":1}}],[\"mock可以理解为构建一个替换的功能\",{\"1\":{\"956\":1}}],[\"mock在单元测试中非常重要\",{\"1\":{\"956\":1}}],[\"mockey不像gomock一样会模拟整个接口来进行单测\",{\"1\":{\"958\":1}}],[\"mockey支持的功能如下\",{\"1\":{\"956\":1}}],[\"mockey其实是通过在运行时重写函数指令实现的monkey\",{\"1\":{\"956\":1}}],[\"mockey\",{\"0\":{\"956\":1},\"1\":{\"956\":1,\"957\":1,\"958\":1,\"959\":1,\"960\":1},\"2\":{\"964\":1}}],[\"mock\",{\"1\":{\"956\":5,\"958\":4,\"960\":8,\"973\":2,\"975\":12,\"976\":1,\"977\":8,\"980\":7,\"981\":3},\"2\":{\"955\":1}}],[\"mobile\",{\"1\":{\"547\":1}}],[\"mobcoin发行的eusd就属于这类\",{\"1\":{\"185\":1}}],[\"mouth\",{\"1\":{\"547\":2}}],[\"mountpoint\",{\"1\":{\"74\":1}}],[\"mount\",{\"1\":{\"74\":7,\"76\":1}}],[\"mounts\",{\"1\":{\"74\":3,\"76\":1}}],[\"movies\",{\"1\":{\"543\":1,\"563\":1}}],[\"move\",{\"1\":{\"523\":1,\"898\":2,\"1124\":1,\"1179\":1}}],[\"movement\",{\"1\":{\"523\":1,\"543\":1}}],[\"moved\",{\"1\":{\"429\":1,\"523\":1,\"537\":1}}],[\"moved错误\",{\"1\":{\"429\":1}}],[\"mother\",{\"1\":{\"540\":1,\"547\":1}}],[\"mohammed\",{\"1\":{\"523\":1}}],[\"moon\",{\"1\":{\"523\":1}}],[\"morning\",{\"1\":{\"537\":1,\"560\":3,\"563\":1,\"1116\":1}}],[\"more\",{\"1\":{\"523\":9,\"537\":1,\"543\":5,\"547\":2,\"548\":2,\"549\":1,\"992\":1,\"1118\":2,\"1123\":1,\"1127\":1,\"1237\":1,\"1242\":1}}],[\"morpho\",{\"1\":{\"156\":1}}],[\"molecules\",{\"1\":{\"523\":3}}],[\"moments\",{\"1\":{\"547\":1}}],[\"moment\",{\"1\":{\"523\":5,\"557\":1,\"563\":1}}],[\"most\",{\"1\":{\"523\":7,\"537\":2,\"543\":2,\"547\":8,\"548\":1,\"557\":3,\"563\":4}}],[\"modify\",{\"1\":{\"1124\":1}}],[\"mod文件解决\",{\"1\":{\"1075\":1}}],[\"mod\",{\"1\":{\"281\":2,\"447\":1,\"967\":1,\"977\":2,\"989\":4,\"1067\":5,\"1071\":1,\"1079\":2,\"1223\":1}}],[\"module\",{\"1\":{\"194\":1}}],[\"mode=release\",{\"1\":{\"972\":1}}],[\"modern\",{\"1\":{\"523\":1}}],[\"model\",{\"1\":{\"90\":1}}],[\"mode\",{\"1\":{\"74\":1,\"368\":1,\"369\":4,\"370\":1,\"972\":2,\"1055\":1}}],[\"monkey基本上能满足我们在单元测试中打桩的任何需求\",{\"1\":{\"978\":1}}],[\"monkey不是线程安全的\",{\"1\":{\"978\":1}}],[\"monkey不支持内联函数\",{\"1\":{\"978\":1}}],[\"monkey库很强大\",{\"1\":{\"978\":1}}],[\"monkey是一个go单元测试中十分常用的打桩工具\",{\"1\":{\"978\":1}}],[\"monkey\",{\"1\":{\"956\":1,\"978\":6}}],[\"monopoly\",{\"1\":{\"547\":1,\"563\":1}}],[\"money\",{\"1\":{\"537\":3,\"560\":1,\"563\":1,\"673\":1,\"927\":2}}],[\"money和hashcash等之前的几个发明后\",{\"1\":{\"95\":1}}],[\"month类型\",{\"1\":{\"1209\":1}}],[\"monthly\",{\"1\":{\"563\":1,\"1003\":1}}],[\"month\",{\"0\":{\"1209\":1},\"1\":{\"523\":1,\"722\":1,\"997\":2,\"1002\":2,\"1209\":5,\"1212\":9}}],[\"months\",{\"1\":{\"51\":2,\"537\":1,\"543\":1,\"557\":3,\"1212\":1}}],[\"monitored\",{\"1\":{\"563\":1}}],[\"monitor\",{\"1\":{\"426\":5,\"547\":1}}],[\"mongosh\",{\"1\":{\"1219\":1}}],[\"mongo术语\",{\"1\":{\"1218\":1}}],[\"mongo\",{\"1\":{\"52\":3,\"54\":1,\"57\":1,\"1219\":3},\"2\":{\"499\":1,\"1244\":1}}],[\"mongodb安装以及简单上手\",{\"0\":{\"1219\":1}}],[\"mongodb自动将\",{\"1\":{\"1218\":1}}],[\"mongodb不支持\",{\"1\":{\"1218\":1}}],[\"mongodb\",{\"0\":{\"497\":1,\"1237\":1},\"1\":{\"3\":1,\"193\":1,\"1217\":4,\"1219\":6,\"1221\":1,\"1225\":2}}],[\"myid\",{\"1\":{\"1241\":4}}],[\"myisam\",{\"1\":{\"341\":1,\"350\":1,\"358\":2,\"370\":1}}],[\"myfloat64\",{\"1\":{\"1188\":3}}],[\"myfunc\",{\"1\":{\"978\":2}}],[\"mymessagedetails\",{\"1\":{\"1086\":1}}],[\"myhandler\",{\"1\":{\"516\":2}}],[\"mythical\",{\"1\":{\"722\":1}}],[\"myth\",{\"1\":{\"460\":1}}],[\"myslots\",{\"1\":{\"435\":1}}],[\"myself\",{\"1\":{\"427\":1,\"428\":1,\"433\":2}}],[\"mysql等常见的组件\",{\"1\":{\"1219\":1}}],[\"mysql和redis单测\",{\"0\":{\"974\":1}}],[\"mysql必知必会\",{\"1\":{\"504\":1,\"552\":1}}],[\"mysql有哪些锁\",{\"1\":{\"363\":1}}],[\"mysql使用了内部xa事务\",{\"1\":{\"360\":1}}],[\"mysql内部会同时维护binlog日志与innodb的redo\",{\"1\":{\"360\":1}}],[\"mysql提供一个\",{\"1\":{\"358\":1}}],[\"mysql正常关机\",{\"1\":{\"357\":1}}],[\"mysql会判断autocommit参数来决定是否默认开启事务\",{\"1\":{\"356\":1}}],[\"mysql磁盘i\",{\"1\":{\"355\":1}}],[\"mysql\",{\"0\":{\"340\":1,\"1266\":1},\"1\":{\"3\":1,\"57\":1,\"193\":1,\"341\":2,\"343\":3,\"345\":3,\"349\":1,\"350\":2,\"352\":1,\"353\":1,\"356\":2,\"357\":7,\"358\":7,\"359\":7,\"360\":13,\"361\":7,\"362\":4,\"365\":1,\"371\":2,\"374\":1,\"377\":10,\"385\":3,\"548\":1,\"975\":1},\"2\":{\"379\":1}}],[\"myqueue\",{\"1\":{\"336\":8}}],[\"mypow\",{\"1\":{\"288\":1}}],[\"my\",{\"1\":{\"74\":9,\"467\":3,\"479\":4,\"523\":9,\"537\":9,\"540\":3,\"543\":6,\"547\":7,\"548\":4,\"550\":1,\"557\":10,\"560\":4,\"563\":19,\"1192\":1}}],[\"mynginx\",{\"1\":{\"56\":2}}],[\"mkdir\",{\"1\":{\"56\":1,\"58\":2}}],[\"micro\",{\"1\":{\"1212\":2}}],[\"microseconds\",{\"1\":{\"1207\":4}}],[\"microsecond\",{\"1\":{\"1179\":1}}],[\"microorganisms\",{\"1\":{\"523\":1}}],[\"mitigate\",{\"1\":{\"1055\":1}}],[\"mieles会提供这方面的指导\",{\"1\":{\"673\":1}}],[\"might\",{\"1\":{\"547\":1,\"1055\":3,\"1117\":1,\"1118\":4}}],[\"migrating\",{\"1\":{\"432\":3}}],[\"migrating命令的实现\",{\"1\":{\"432\":1}}],[\"migrate\",{\"1\":{\"431\":1}}],[\"missing\",{\"1\":{\"523\":1,\"1099\":1}}],[\"missingnumber\",{\"1\":{\"326\":1}}],[\"miracle\",{\"1\":{\"523\":1}}],[\"mirrortree\",{\"1\":{\"298\":1}}],[\"mirror\",{\"1\":{\"55\":1}}],[\"milli\",{\"1\":{\"1212\":2}}],[\"millisecond\",{\"1\":{\"1034\":1,\"1055\":1,\"1119\":2,\"1120\":3}}],[\"milliseconds10毫秒的从服务器\",{\"1\":{\"426\":2}}],[\"milliseconds选项指定了判断主服务器下线所需的时间\",{\"1\":{\"426\":1}}],[\"milliseconds选项另一个需要注意的地方是\",{\"1\":{\"426\":1}}],[\"milliseconds选项的值也可能不同\",{\"1\":{\"426\":1}}],[\"milliseconds选项的值\",{\"1\":{\"426\":1}}],[\"milliseconds选项的值为50000毫秒\",{\"1\":{\"426\":1}}],[\"milliseconds选项设定的值\",{\"1\":{\"426\":1}}],[\"milliseconds\",{\"1\":{\"403\":1,\"426\":3,\"1120\":1,\"1207\":4}}],[\"millions\",{\"1\":{\"523\":1}}],[\"million\",{\"1\":{\"523\":3}}],[\"milkomeda\",{\"1\":{\"523\":1}}],[\"milky\",{\"1\":{\"523\":7}}],[\"mixed\",{\"1\":{\"358\":2}}],[\"mixinnetwork\",{\"1\":{\"1181\":1}}],[\"mixin团队拿自己的钱弥补了一些损失\",{\"1\":{\"592\":1}}],[\"mixin是我用过最好用的区块链产品没有之一\",{\"1\":{\"592\":1}}],[\"mixin也会被盗\",{\"1\":{\"591\":1}}],[\"mixinid\",{\"1\":{\"557\":1}}],[\"mixin登录用户的所有信息都可以通过这个provider获取到\",{\"1\":{\"195\":1}}],[\"mixin第三方登录\",{\"1\":{\"191\":1}}],[\"mixin\",{\"0\":{\"591\":1},\"1\":{\"23\":1,\"195\":12,\"547\":1,\"557\":3,\"591\":2,\"592\":2,\"1181\":1},\"2\":{\"594\":1,\"601\":1,\"604\":1,\"697\":1}}],[\"middewarea与middlewareb\",{\"1\":{\"1056\":1}}],[\"middle\",{\"2\":{\"730\":1}}],[\"middle+1middle+1\",{\"1\":{\"283\":1}}],[\"middlemiddle\",{\"1\":{\"283\":9}}],[\"middlewarea函数继续执行至函数返回\",{\"1\":{\"1056\":1}}],[\"middlewarea执行到c\",{\"1\":{\"1056\":1}}],[\"middlewareb继续执行至函数返回\",{\"1\":{\"1056\":1}}],[\"middlewareb执行到c\",{\"1\":{\"1056\":1}}],[\"middleware\",{\"1\":{\"199\":1,\"200\":3,\"972\":1,\"1051\":1,\"1052\":8,\"1056\":1,\"1242\":1}}],[\"middleware中控制的不区分客户端\",{\"1\":{\"199\":1}}],[\"midnight\",{\"1\":{\"1003\":1}}],[\"mid−1\",{\"1\":{\"326\":2}}],[\"mid+1\",{\"1\":{\"326\":3,\"948\":3}}],[\"mid\",{\"1\":{\"283\":5,\"323\":8,\"326\":9,\"948\":10}}],[\"minimumnargs\",{\"1\":{\"991\":2,\"992\":2}}],[\"minimal\",{\"1\":{\"519\":1}}],[\"miniredis基本上支持绝大多数的redis命令\",{\"1\":{\"976\":1}}],[\"miniredis是一个纯go实现的用于单元测试的redis\",{\"1\":{\"976\":1}}],[\"miniredis\",{\"0\":{\"976\":1},\"1\":{\"976\":3}}],[\"minpos\",{\"1\":{\"944\":1}}],[\"minposition\",{\"1\":{\"944\":7}}],[\"mind\",{\"1\":{\"519\":1,\"543\":2}}],[\"mindistance\",{\"1\":{\"265\":1}}],[\"minarr\",{\"1\":{\"301\":15}}],[\"minarray\",{\"1\":{\"283\":1}}],[\"minstack\",{\"1\":{\"301\":17}}],[\"mincostclimbingstairs\",{\"1\":{\"228\":1}}],[\"min\",{\"1\":{\"228\":3,\"244\":3,\"245\":2,\"252\":2,\"265\":3,\"266\":3,\"301\":5,\"321\":3,\"362\":3,\"410\":7,\"991\":2,\"1212\":2}}],[\"mintpal\",{\"1\":{\"704\":1}}],[\"mintue\",{\"1\":{\"563\":1}}],[\"mint账户\",{\"0\":{\"134\":1}}],[\"mintto\",{\"1\":{\"133\":1}}],[\"mint\",{\"1\":{\"94\":1,\"152\":4}}],[\"minutes\",{\"1\":{\"560\":1,\"1002\":1,\"1207\":4}}],[\"minute\",{\"1\":{\"70\":1,\"523\":1,\"1047\":1,\"1207\":1,\"1212\":4}}],[\"mb\",{\"1\":{\"54\":2,\"55\":1,\"70\":1}}],[\"mail\",{\"1\":{\"1242\":1}}],[\"maintain\",{\"1\":{\"523\":3}}],[\"maint\",{\"1\":{\"152\":2}}],[\"main\",{\"1\":{\"90\":3,\"447\":18,\"448\":6,\"449\":5,\"456\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":2,\"461\":2,\"462\":2,\"463\":1,\"467\":1,\"468\":2,\"472\":1,\"475\":2,\"477\":1,\"478\":1,\"480\":4,\"481\":2,\"482\":1,\"483\":2,\"511\":1,\"517\":3,\"814\":2,\"820\":1,\"827\":1,\"833\":1,\"838\":2,\"844\":1,\"849\":1,\"855\":1,\"861\":3,\"867\":1,\"883\":1,\"905\":2,\"910\":3,\"915\":3,\"959\":4,\"960\":1,\"967\":1,\"972\":2,\"973\":2,\"975\":3,\"976\":2,\"981\":2,\"989\":4,\"990\":2,\"992\":1,\"1001\":2,\"1005\":1,\"1010\":4,\"1011\":3,\"1023\":1,\"1025\":4,\"1045\":2,\"1047\":2,\"1050\":1,\"1063\":6,\"1067\":4,\"1073\":2,\"1079\":2,\"1095\":1,\"1100\":2,\"1119\":15,\"1120\":6,\"1122\":2,\"1124\":15,\"1125\":5,\"1126\":6,\"1127\":4,\"1138\":8,\"1146\":2,\"1161\":6,\"1162\":3,\"1163\":8,\"1188\":6,\"1189\":2,\"1190\":2,\"1191\":2,\"1192\":4,\"1193\":2,\"1198\":4,\"1206\":2,\"1207\":2,\"1208\":2,\"1209\":2,\"1210\":2,\"1211\":2,\"1212\":2}}],[\"malloc的简称\",{\"1\":{\"1147\":1}}],[\"mall\",{\"1\":{\"549\":1}}],[\"making\",{\"1\":{\"547\":1}}],[\"make命令默认会查找名为makefile或makefile的文件来获取构建规则然后执行对应的规则\",{\"1\":{\"1024\":1}}],[\"make简介\",{\"0\":{\"1024\":1}}],[\"makefile\",{\"0\":{\"1026\":1},\"2\":{\"1029\":1}}],[\"makefile定义一系列规则\",{\"1\":{\"1025\":1}}],[\"makefile简介\",{\"0\":{\"1025\":1}}],[\"makefile是一个非常重要的项目自动化管理工具\",{\"1\":{\"1023\":1}}],[\"makefile在go程序中的应用\",{\"0\":{\"1023\":1}}],[\"makeentry\",{\"1\":{\"927\":2}}],[\"makeup\",{\"1\":{\"543\":1}}],[\"makes\",{\"1\":{\"523\":2,\"543\":1,\"547\":1,\"550\":1}}],[\"makemuxrouter\",{\"1\":{\"516\":2}}],[\"makemuxrouter启用web服务\",{\"1\":{\"511\":1}}],[\"makerdao发布的dai\",{\"1\":{\"182\":1}}],[\"makerorder\",{\"1\":{\"169\":1}}],[\"maker\",{\"1\":{\"169\":1}}],[\"make\",{\"1\":{\"58\":6,\"208\":2,\"209\":1,\"210\":1,\"211\":1,\"212\":3,\"213\":1,\"215\":1,\"216\":3,\"217\":1,\"218\":3,\"219\":3,\"226\":1,\"227\":1,\"228\":1,\"229\":2,\"230\":2,\"231\":1,\"232\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":2,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":2,\"249\":1,\"253\":2,\"255\":2,\"257\":1,\"258\":1,\"259\":2,\"260\":2,\"262\":1,\"263\":2,\"264\":2,\"265\":4,\"266\":2,\"267\":2,\"268\":2,\"275\":1,\"277\":1,\"278\":1,\"280\":2,\"281\":1,\"282\":1,\"284\":2,\"285\":1,\"291\":2,\"302\":1,\"303\":2,\"304\":2,\"305\":2,\"307\":1,\"308\":1,\"311\":2,\"312\":1,\"318\":1,\"320\":1,\"321\":1,\"325\":1,\"331\":1,\"336\":2,\"523\":10,\"537\":1,\"540\":1,\"543\":6,\"548\":1,\"557\":1,\"563\":6,\"827\":1,\"890\":1,\"948\":2,\"972\":1,\"975\":1,\"1011\":1,\"1019\":1,\"1026\":5,\"1055\":1,\"1072\":1,\"1088\":1,\"1122\":3,\"1123\":1,\"1124\":2,\"1125\":1,\"1126\":2,\"1127\":2,\"1137\":2,\"1146\":1,\"1153\":1}}],[\"major\",{\"1\":{\"537\":1}}],[\"majorityelement\",{\"1\":{\"312\":1}}],[\"maccomputer\",{\"1\":{\"910\":5}}],[\"machine\",{\"1\":{\"547\":1,\"1008\":1}}],[\"mac\",{\"1\":{\"523\":1,\"910\":8}}],[\"macos\",{\"1\":{\"494\":1}}],[\"magic\",{\"1\":{\"523\":1}}],[\"magical\",{\"1\":{\"523\":1}}],[\"mask字段去更新对应的字段信息\",{\"1\":{\"1088\":1}}],[\"mask值去更新对应的字段呢\",{\"1\":{\"1088\":1}}],[\"mask\",{\"0\":{\"1088\":1},\"1\":{\"1088\":7,\"1089\":1}}],[\"masses\",{\"1\":{\"563\":1}}],[\"mass\",{\"1\":{\"523\":3}}],[\"mastery\",{\"1\":{\"808\":1}}],[\"master标识\",{\"1\":{\"433\":1}}],[\"master\",{\"1\":{\"426\":18,\"428\":3,\"433\":1,\"1079\":1,\"1181\":1}}],[\"masters\",{\"1\":{\"426\":1,\"523\":1}}],[\"made\",{\"1\":{\"523\":1,\"543\":1,\"560\":2}}],[\"may\",{\"1\":{\"523\":2,\"543\":2,\"547\":4,\"1055\":2,\"1207\":1,\"1209\":1,\"1212\":3}}],[\"maybe\",{\"1\":{\"519\":1,\"523\":2,\"543\":2,\"547\":1}}],[\"mapindex\",{\"1\":{\"1191\":1}}],[\"map中不存在的键\",{\"1\":{\"1191\":2}}],[\"map中存的是\",{\"1\":{\"308\":1}}],[\"maps\",{\"1\":{\"1122\":1}}],[\"map<string\",{\"1\":{\"1084\":1}}],[\"map\",{\"1\":{\"210\":2,\"246\":1,\"275\":1,\"308\":1,\"312\":1,\"320\":1,\"325\":1,\"890\":3,\"898\":1,\"933\":1,\"972\":1,\"973\":4,\"1084\":2,\"1088\":2,\"1093\":3,\"1094\":1,\"1095\":3,\"1188\":2,\"1191\":2,\"1242\":1}}],[\"mapper\",{\"1\":{\"78\":1}}],[\"material\",{\"1\":{\"523\":3}}],[\"materials\",{\"1\":{\"519\":1,\"523\":5}}],[\"matter\",{\"1\":{\"523\":6,\"547\":1,\"550\":1}}],[\"matrix\",{\"1\":{\"276\":6,\"300\":10}}],[\"matchstage\",{\"1\":{\"1236\":2,\"1239\":2}}],[\"matchstring\",{\"1\":{\"1053\":1}}],[\"matched\",{\"1\":{\"1053\":2}}],[\"matcher\",{\"1\":{\"199\":1,\"200\":1}}],[\"matchpersons\",{\"1\":{\"1019\":4}}],[\"matchtype\",{\"1\":{\"973\":2}}],[\"match三个属性为节点值设置类型特定函数\",{\"1\":{\"394\":1}}],[\"match\",{\"1\":{\"394\":1,\"407\":1,\"409\":1,\"410\":1,\"448\":8,\"449\":2,\"450\":5,\"451\":2,\"1239\":1}}],[\"matchorders\",{\"1\":{\"169\":1}}],[\"mathlifeman\",{\"0\":{\"808\":1},\"1\":{\"808\":1}}],[\"math\",{\"1\":{\"152\":6,\"194\":2,\"244\":3,\"245\":2,\"252\":1}}],[\"max=2\",{\"1\":{\"1242\":1}}],[\"maxmcount\",{\"1\":{\"1134\":1}}],[\"maxcallsendmsgsize\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"maxparams\",{\"1\":{\"1053\":3}}],[\"maxprofit\",{\"1\":{\"252\":2,\"253\":1,\"254\":1,\"255\":1}}],[\"maximumnargs\",{\"1\":{\"991\":1}}],[\"maxintset\",{\"1\":{\"408\":1}}],[\"maxint32\",{\"1\":{\"244\":3,\"245\":2,\"252\":1}}],[\"maxheaderbytes\",{\"1\":{\"516\":1}}],[\"maxsections\",{\"1\":{\"1053\":2}}],[\"maxslidingwindow\",{\"1\":{\"336\":1}}],[\"maxsubarray\",{\"1\":{\"262\":1,\"315\":1}}],[\"maxdepth\",{\"1\":{\"328\":3}}],[\"maxvalue\",{\"1\":{\"319\":1}}],[\"max\",{\"1\":{\"152\":7,\"231\":6,\"235\":4,\"236\":5,\"237\":2,\"238\":1,\"240\":3,\"241\":2,\"248\":4,\"249\":4,\"250\":4,\"252\":6,\"253\":2,\"254\":4,\"255\":2,\"257\":4,\"259\":1,\"260\":3,\"262\":3,\"265\":1,\"268\":4,\"285\":3,\"315\":4,\"319\":2,\"320\":2,\"328\":2,\"329\":2,\"362\":3,\"404\":2,\"406\":2,\"410\":7,\"425\":1,\"456\":3,\"458\":4,\"959\":15,\"991\":2,\"1055\":3}}],[\"maroon\",{\"1\":{\"1120\":1}}],[\"mark\",{\"1\":{\"1055\":1}}],[\"markflagrequired\",{\"1\":{\"991\":1}}],[\"marketing\",{\"1\":{\"563\":1}}],[\"market\",{\"1\":{\"23\":1,\"540\":1,\"543\":2}}],[\"marshaltext\",{\"1\":{\"1212\":1}}],[\"marshaljson\",{\"1\":{\"1212\":1}}],[\"marshalbinary\",{\"1\":{\"1212\":1}}],[\"marshal\",{\"1\":{\"973\":1}}],[\"marshalindent函数可以应用缩进来格式化输出\",{\"1\":{\"516\":1}}],[\"marshalindent\",{\"1\":{\"516\":2}}],[\"martin\",{\"1\":{\"827\":3}}],[\"married\",{\"1\":{\"523\":1}}],[\"march\",{\"1\":{\"523\":1}}],[\"mariadb\",{\"1\":{\"193\":1}}],[\"marginfi后\",{\"1\":{\"153\":1}}],[\"marginfiresult<\",{\"1\":{\"152\":1}}],[\"marginfi是以group形式管理多个bank的\",{\"1\":{\"152\":1}}],[\"marginfi的清算条件非常保守\",{\"1\":{\"150\":1}}],[\"marginfi的很多影子都有借鉴\",{\"1\":{\"148\":1}}],[\"marginfi采用统一抵押池方式\",{\"1\":{\"150\":1}}],[\"marginfi中\",{\"1\":{\"150\":1}}],[\"marginfi\",{\"0\":{\"147\":1,\"148\":1,\"149\":1},\"1\":{\"147\":1,\"148\":2,\"149\":1,\"150\":8,\"151\":2,\"152\":6,\"153\":1,\"156\":1},\"2\":{\"155\":1}}],[\"manual\",{\"1\":{\"547\":1,\"548\":1}}],[\"manufacturing\",{\"1\":{\"523\":1}}],[\"man\",{\"1\":{\"537\":1,\"540\":2,\"722\":1,\"1084\":1}}],[\"mankind\",{\"1\":{\"523\":1,\"547\":1}}],[\"many\",{\"1\":{\"523\":2,\"543\":3,\"547\":1,\"548\":1,\"550\":1,\"557\":1,\"563\":1}}],[\"manipulate\",{\"1\":{\"90\":1}}],[\"management``management标签不同\",{\"1\":{\"51\":1}}],[\"management\",{\"1\":{\"51\":3,\"1052\":1}}],[\"meow\",{\"1\":{\"1138\":2}}],[\"meituan\",{\"1\":{\"563\":1}}],[\"men\",{\"1\":{\"874\":2}}],[\"mental\",{\"1\":{\"547\":1}}],[\"menu\",{\"0\":{\"17\":1,\"33\":1}}],[\"melody\",{\"1\":{\"543\":1}}],[\"melt\",{\"1\":{\"523\":1}}],[\"mediocrity\",{\"1\":{\"547\":1}}],[\"medical\",{\"1\":{\"540\":1}}],[\"mediator\",{\"1\":{\"833\":17}}],[\"media\",{\"1\":{\"540\":1,\"543\":1}}],[\"meditate\",{\"1\":{\"519\":1}}],[\"metadata\",{\"1\":{\"1093\":11,\"1094\":5,\"1095\":12,\"1099\":2}}],[\"metabolism\",{\"1\":{\"543\":1}}],[\"metabolized\",{\"1\":{\"543\":1}}],[\"met\",{\"1\":{\"547\":1,\"975\":1}}],[\"meteor\",{\"1\":{\"523\":1}}],[\"meteors\",{\"1\":{\"523\":1}}],[\"methodpost\",{\"1\":{\"1193\":1}}],[\"methodget\",{\"1\":{\"1193\":1}}],[\"methodname\",{\"1\":{\"1193\":7}}],[\"methodbyname\",{\"1\":{\"1191\":1,\"1192\":1,\"1193\":1}}],[\"method对应的处理树\",{\"1\":{\"1055\":1}}],[\"methodtree\",{\"1\":{\"1053\":2}}],[\"methods\",{\"1\":{\"516\":2,\"537\":1,\"1119\":2,\"1192\":1}}],[\"method\",{\"1\":{\"195\":1,\"467\":1,\"547\":2,\"975\":1,\"978\":2,\"1047\":1,\"1053\":11,\"1055\":4,\"1097\":3,\"1099\":3,\"1138\":2,\"1192\":8,\"1193\":7,\"1194\":1}}],[\"meaningful\",{\"1\":{\"548\":1}}],[\"meaning\",{\"1\":{\"543\":1}}],[\"meaningless\",{\"1\":{\"523\":1,\"563\":1}}],[\"mean\",{\"1\":{\"540\":1,\"547\":1,\"1123\":1}}],[\"means\",{\"1\":{\"483\":1,\"547\":3,\"550\":1,\"1124\":1,\"1127\":1}}],[\"meets\",{\"1\":{\"537\":1}}],[\"meet消息\",{\"1\":{\"434\":1}}],[\"meet命令时\",{\"1\":{\"434\":1}}],[\"meet命令给定的ip地址和端口号\",{\"1\":{\"427\":1}}],[\"meet命令\",{\"1\":{\"427\":1}}],[\"meet命令的实现\",{\"1\":{\"427\":1}}],[\"meet命令可以让node节点与ip和port所指定的节点握手\",{\"1\":{\"427\":1}}],[\"meet\",{\"1\":{\"413\":1,\"427\":1,\"435\":3,\"547\":1,\"563\":1}}],[\"merges\",{\"1\":{\"1120\":1}}],[\"mergesort\",{\"1\":{\"323\":4,\"948\":3}}],[\"merge\",{\"1\":{\"948\":2}}],[\"mergetwolists\",{\"1\":{\"296\":2}}],[\"merchantability\",{\"1\":{\"90\":1}}],[\"me\",{\"1\":{\"195\":1,\"519\":6,\"523\":4,\"537\":4,\"540\":1,\"543\":1,\"547\":2,\"548\":2,\"557\":3,\"560\":3,\"563\":7,\"1140\":1}}],[\"mem\",{\"1\":{\"480\":1}}],[\"members\",{\"1\":{\"563\":1}}],[\"member\",{\"1\":{\"409\":4,\"410\":6,\"547\":1}}],[\"member2\",{\"1\":{\"409\":2,\"410\":1}}],[\"member1\",{\"1\":{\"409\":2,\"410\":1}}],[\"mementos\",{\"1\":{\"838\":5}}],[\"memento\",{\"1\":{\"838\":7}}],[\"meme\",{\"1\":{\"151\":1}}],[\"memory等多个存储引擎\",{\"1\":{\"341\":1}}],[\"memory\",{\"1\":{\"105\":1,\"350\":1}}],[\"memset\",{\"1\":{\"90\":5}}],[\"messagetype\",{\"1\":{\"1073\":2}}],[\"messages\",{\"1\":{\"1073\":1}}],[\"message就是我们所需要的定义组成区块链的每个块的结构\",{\"1\":{\"511\":1}}],[\"message\",{\"1\":{\"90\":33,\"116\":1,\"423\":1,\"427\":2,\"434\":1,\"435\":2,\"448\":1,\"449\":2,\"463\":8,\"513\":1,\"516\":1,\"563\":1,\"833\":13,\"1055\":1,\"1067\":4,\"1072\":5,\"1073\":2,\"1080\":7,\"1084\":2,\"1088\":1,\"1094\":1,\"1095\":1,\"1179\":1}}],[\"message主页面的搜索框中搜索\",{\"1\":{\"36\":1}}],[\"messenger各个社群还能够正常聊天的原因\",{\"1\":{\"592\":1}}],[\"messenger本质上就是一个e2ee端对端加密的聊天软件\",{\"1\":{\"592\":1}}],[\"messenger\",{\"1\":{\"23\":1}}],[\"d4\",{\"1\":{\"1231\":1,\"1234\":1}}],[\"ds\",{\"1\":{\"1074\":2}}],[\"dst\",{\"1\":{\"1010\":7,\"1199\":12}}],[\"d=\",{\"1\":{\"1063\":2}}],[\"d=identicon\",{\"1\":{\"194\":1}}],[\"d+\",{\"1\":{\"1063\":2}}],[\"dgrijalva\",{\"1\":{\"1047\":1}}],[\"d岁了\",{\"1\":{\"978\":1}}],[\"dmitry\",{\"1\":{\"721\":1}}],[\"dmitriy\",{\"1\":{\"721\":1}}],[\"dhh\",{\"1\":{\"721\":1}}],[\"dwarf\",{\"1\":{\"523\":2}}],[\"dying\",{\"1\":{\"523\":1}}],[\"dynamic\",{\"1\":{\"224\":1},\"2\":{\"270\":1}}],[\"dl\",{\"1\":{\"505\":1}}],[\"db对象\",{\"1\":{\"975\":1}}],[\"dbg\",{\"1\":{\"479\":3,\"480\":6}}],[\"db\",{\"1\":{\"418\":3,\"419\":2,\"975\":12,\"1088\":2,\"1219\":1,\"1225\":3}}],[\"db原有的createuser方法\",{\"1\":{\"194\":1}}],[\"draveness\",{\"1\":{\"1140\":1}}],[\"drawn\",{\"1\":{\"523\":1}}],[\"dreamer\",{\"1\":{\"547\":1}}],[\"drinking\",{\"1\":{\"543\":1}}],[\"drifted\",{\"1\":{\"543\":1}}],[\"driver的第一选择\",{\"1\":{\"1220\":1}}],[\"driver\",{\"1\":{\"74\":3,\"975\":1}}],[\"dropg\",{\"1\":{\"1135\":2}}],[\"dropped\",{\"1\":{\"523\":1}}],[\"drop\",{\"1\":{\"364\":1}}],[\"duck\",{\"1\":{\"1138\":6}}],[\"due\",{\"1\":{\"523\":1,\"543\":1,\"1055\":1}}],[\"dust\",{\"1\":{\"523\":3}}],[\"duration表示一段时间间隔\",{\"1\":{\"1207\":1}}],[\"duration\",{\"0\":{\"1207\":1},\"1\":{\"1055\":1,\"1161\":1,\"1205\":1,\"1206\":3,\"1207\":39,\"1211\":2,\"1212\":4,\"1213\":1}}],[\"durability\",{\"1\":{\"361\":1}}],[\"during\",{\"1\":{\"519\":1,\"523\":3,\"548\":1,\"1116\":1,\"1124\":1}}],[\"dump方便我们打印结构体到调试窗口\",{\"1\":{\"516\":1}}],[\"dump\",{\"1\":{\"516\":1,\"517\":1}}],[\"dummy\",{\"1\":{\"294\":3,\"1047\":1}}],[\"dummyhead\",{\"1\":{\"290\":4}}],[\"dup\",{\"1\":{\"394\":1}}],[\"dpr\",{\"1\":{\"250\":4}}],[\"dpl\",{\"1\":{\"250\":4}}],[\"dp数组如下图所示意的\",{\"1\":{\"266\":1}}],[\"dp数组如何初始化\",{\"1\":{\"224\":1,\"235\":1,\"240\":1,\"242\":1,\"243\":1,\"248\":1,\"252\":1,\"258\":1,\"259\":1,\"260\":1,\"262\":1,\"263\":1,\"265\":1,\"266\":1,\"267\":1}}],[\"dp数组在推导的时候一定是取价值最大的数\",{\"1\":{\"236\":1}}],[\"dp\",{\"1\":{\"224\":1,\"226\":7,\"227\":9,\"228\":6,\"229\":15,\"230\":12,\"231\":15,\"232\":14,\"235\":22,\"236\":24,\"237\":9,\"238\":5,\"239\":8,\"240\":18,\"241\":6,\"242\":10,\"243\":16,\"244\":19,\"245\":9,\"246\":5,\"248\":13,\"249\":6,\"250\":3,\"252\":26,\"253\":12,\"254\":44,\"255\":11,\"257\":17,\"258\":8,\"259\":17,\"260\":20,\"261\":8,\"262\":12,\"263\":14,\"264\":37,\"265\":41,\"266\":41,\"267\":12,\"268\":20,\"281\":6,\"282\":7,\"285\":7,\"291\":15,\"318\":10,\"321\":10}}],[\"dialcontext\",{\"1\":{\"1079\":1}}],[\"dialing\",{\"1\":{\"1063\":1}}],[\"dialhttp\",{\"1\":{\"1063\":1}}],[\"dial\",{\"1\":{\"1055\":1,\"1067\":1,\"1079\":1,\"1095\":1,\"1099\":1}}],[\"dick\",{\"1\":{\"560\":1}}],[\"dicttype\",{\"1\":{\"395\":3}}],[\"dict\",{\"1\":{\"395\":2,\"414\":1,\"426\":1,\"427\":1}}],[\"dictentry\",{\"1\":{\"395\":4}}],[\"dictht\",{\"1\":{\"395\":3}}],[\"diligent\",{\"1\":{\"547\":1}}],[\"dim\",{\"1\":{\"523\":3}}],[\"didn\",{\"1\":{\"523\":1,\"537\":1}}],[\"did\",{\"1\":{\"523\":3,\"560\":2,\"563\":1,\"1037\":1,\"1119\":2}}],[\"dies\",{\"1\":{\"523\":1}}],[\"die\",{\"1\":{\"523\":3}}],[\"director通过builder接口与不同的具体建造者交互\",{\"1\":{\"873\":1}}],[\"directory\",{\"1\":{\"193\":1,\"448\":1,\"449\":2,\"991\":1}}],[\"directly\",{\"1\":{\"547\":1}}],[\"direction\",{\"1\":{\"523\":1,\"543\":1}}],[\"dirty计数器的值就增加多少\",{\"1\":{\"417\":1}}],[\"dirty计数器记录距离上一次成功执行save命令或者bgsave命令之后\",{\"1\":{\"417\":1}}],[\"dirty\",{\"1\":{\"361\":1,\"377\":1,\"424\":4}}],[\"digit++\",{\"1\":{\"317\":1}}],[\"digitnum\",{\"1\":{\"317\":5}}],[\"digit\",{\"1\":{\"317\":5}}],[\"digitsmap\",{\"1\":{\"210\":5}}],[\"digits\",{\"1\":{\"210\":7}}],[\"digests\",{\"1\":{\"55\":1}}],[\"digest\",{\"1\":{\"49\":1,\"55\":1}}],[\"dishes\",{\"1\":{\"543\":1}}],[\"disposal\",{\"1\":{\"543\":1}}],[\"display\",{\"1\":{\"447\":2,\"448\":1,\"475\":1,\"557\":1,\"1045\":1}}],[\"distinct\",{\"1\":{\"1222\":1}}],[\"distinguish\",{\"1\":{\"523\":1}}],[\"distance\",{\"1\":{\"523\":1}}],[\"distorted\",{\"1\":{\"523\":1}}],[\"disintegrate\",{\"1\":{\"523\":1}}],[\"disappeared\",{\"1\":{\"523\":3}}],[\"disappear\",{\"1\":{\"523\":2}}],[\"discussed\",{\"1\":{\"1126\":1}}],[\"discussing\",{\"1\":{\"1115\":1}}],[\"discuss\",{\"1\":{\"543\":1,\"547\":1,\"1119\":1}}],[\"discover\",{\"1\":{\"543\":1}}],[\"discovered\",{\"1\":{\"523\":3,\"543\":1}}],[\"discord\",{\"1\":{\"192\":3}}],[\"discard\",{\"1\":{\"424\":3}}],[\"disk\",{\"1\":{\"61\":1}}],[\"divcall\",{\"1\":{\"1063\":2}}],[\"dividing\",{\"1\":{\"560\":1}}],[\"div\",{\"1\":{\"152\":3}}],[\"dit\",{\"1\":{\"68\":2}}],[\"difference\",{\"1\":{\"543\":1}}],[\"different\",{\"0\":{\"1117\":1},\"1\":{\"537\":1,\"543\":2,\"548\":1,\"550\":2,\"1115\":1,\"1117\":1,\"1118\":4}}],[\"difficulties\",{\"1\":{\"557\":1}}],[\"difficult\",{\"1\":{\"90\":1,\"543\":2}}],[\"diff\",{\"1\":{\"55\":1}}],[\"d\",{\"1\":{\"55\":1,\"66\":6,\"68\":1,\"74\":3,\"266\":2,\"284\":1,\"435\":1,\"820\":1,\"905\":2,\"921\":2,\"972\":1,\"982\":1,\"1055\":12,\"1063\":2,\"1067\":1,\"1072\":2,\"1074\":5,\"1120\":3,\"1138\":2,\"1163\":2,\"1167\":2,\"1168\":1,\"1169\":1,\"1171\":3,\"1173\":9,\"1179\":2,\"1188\":1,\"1206\":3,\"1207\":12,\"1211\":2,\"1212\":3,\"1219\":3,\"1236\":5,\"1238\":2,\"1239\":5}}],[\"dfs\",{\"1\":{\"327\":5}}],[\"df\",{\"1\":{\"51\":1}}],[\"daily\",{\"1\":{\"1003\":1}}],[\"darjun\",{\"1\":{\"1005\":1}}],[\"darwin\",{\"1\":{\"899\":1,\"970\":2}}],[\"darkness\",{\"1\":{\"523\":1}}],[\"dark\",{\"1\":{\"523\":3,\"543\":1}}],[\"david\",{\"1\":{\"721\":1,\"722\":1}}],[\"davecgh\",{\"1\":{\"509\":1,\"511\":1}}],[\"damage\",{\"1\":{\"523\":1}}],[\"danger\",{\"1\":{\"540\":1}}],[\"dangerous\",{\"1\":{\"523\":1}}],[\"dangling\",{\"1\":{\"52\":1}}],[\"dawn\",{\"1\":{\"523\":1}}],[\"day\",{\"1\":{\"523\":2,\"540\":2,\"543\":5,\"547\":5,\"548\":2,\"560\":2,\"563\":1,\"997\":2,\"1002\":2,\"1212\":6}}],[\"days\",{\"1\":{\"51\":3,\"54\":2,\"519\":1,\"523\":1,\"537\":1,\"543\":1,\"547\":1,\"548\":2,\"549\":2,\"557\":1,\"560\":2,\"563\":1,\"1212\":1}}],[\"dazzling\",{\"1\":{\"523\":1}}],[\"date\",{\"1\":{\"429\":1,\"979\":3,\"997\":2,\"1179\":1,\"1205\":1,\"1207\":1,\"1208\":1,\"1212\":11,\"1213\":1}}],[\"datastruct\",{\"0\":{\"1269\":1}}],[\"dataqsiz\",{\"1\":{\"1137\":1}}],[\"dataformat\",{\"1\":{\"905\":2}}],[\"data和prevhash连接起来\",{\"1\":{\"514\":1}}],[\"data就是我们要传递的数据\",{\"1\":{\"512\":1}}],[\"data属性指向联合cluster\",{\"1\":{\"435\":1}}],[\"database\",{\"1\":{\"192\":2,\"193\":1,\"414\":1,\"563\":1,\"975\":3,\"1218\":3,\"1225\":4,\"1237\":2}}],[\"databases部分\",{\"0\":{\"419\":1}}],[\"databases部分包含着0或多个数据库以及其中的数据\",{\"1\":{\"418\":1}}],[\"databases\",{\"1\":{\"3\":1,\"418\":2}}],[\"data\",{\"1\":{\"74\":2,\"111\":1,\"120\":1,\"194\":10,\"195\":6,\"199\":1,\"301\":1,\"399\":1,\"434\":1,\"435\":3,\"510\":1,\"512\":1,\"513\":2,\"514\":4,\"516\":1,\"517\":1,\"547\":5,\"905\":3,\"975\":2,\"1045\":1,\"1072\":4,\"1080\":2,\"1088\":1,\"1121\":1,\"1122\":1,\"1123\":5,\"1124\":9,\"1125\":5,\"1126\":3,\"1127\":3,\"1139\":3,\"1153\":3,\"1208\":1,\"1212\":4,\"1219\":1}}],[\"dashboard\",{\"1\":{\"199\":1,\"200\":1}}],[\"dao可以通过储备金产生被动收入来增加财务可持续性\",{\"1\":{\"151\":1}}],[\"dao财库管理\",{\"1\":{\"151\":1}}],[\"dapp\",{\"1\":{\"122\":1}}],[\"daemon\",{\"1\":{\"60\":1,\"75\":1}}],[\"doslow\",{\"1\":{\"1145\":3}}],[\"dospin\",{\"1\":{\"1142\":1}}],[\"dosomething\",{\"1\":{\"977\":1}}],[\"dosomethingwithredis\",{\"1\":{\"976\":2}}],[\"dokeepalives\",{\"1\":{\"1055\":1}}],[\"doe\",{\"1\":{\"1045\":1,\"1047\":1}}],[\"does\",{\"1\":{\"523\":2,\"547\":3,\"1055\":1,\"1119\":1,\"1123\":1,\"1124\":1,\"1125\":1,\"1138\":1}}],[\"doesn\",{\"1\":{\"523\":3,\"540\":1,\"1123\":1}}],[\"dog\",{\"1\":{\"975\":2}}],[\"dooperation\",{\"1\":{\"855\":5}}],[\"dormitory\",{\"1\":{\"557\":1}}],[\"dopamine\",{\"1\":{\"543\":1}}],[\"dominates\",{\"1\":{\"540\":1}}],[\"domain\",{\"1\":{\"76\":1,\"194\":1}}],[\"dollars\",{\"1\":{\"537\":1}}],[\"dotransaction\",{\"1\":{\"1238\":1}}],[\"dots\",{\"1\":{\"523\":2}}],[\"dot\",{\"1\":{\"523\":5}}],[\"dotenv\",{\"1\":{\"191\":1}}],[\"donovan\",{\"1\":{\"827\":3}}],[\"dong\",{\"1\":{\"547\":1}}],[\"don\",{\"1\":{\"483\":1,\"523\":2,\"537\":3,\"540\":2,\"543\":4,\"547\":3,\"548\":1,\"563\":2,\"1054\":1,\"1055\":1}}],[\"done\",{\"1\":{\"66\":2,\"543\":2,\"549\":1,\"1010\":3,\"1019\":1,\"1063\":1,\"1118\":1,\"1124\":22,\"1144\":3,\"1145\":7}}],[\"doing\",{\"1\":{\"483\":1,\"543\":2,\"547\":2,\"1117\":2}}],[\"downstairs\",{\"1\":{\"563\":1}}],[\"down标识打开\",{\"1\":{\"426\":1}}],[\"down标识\",{\"1\":{\"426\":1}}],[\"down\",{\"1\":{\"426\":17,\"543\":1,\"808\":1}}],[\"downloading\",{\"1\":{\"1118\":6}}],[\"downloader\",{\"1\":{\"1118\":1}}],[\"downloaded\",{\"1\":{\"49\":1}}],[\"download\",{\"1\":{\"58\":2,\"519\":1}}],[\"double\",{\"1\":{\"397\":1,\"483\":1}}],[\"doc\",{\"1\":{\"1242\":1}}],[\"docs\",{\"1\":{\"1067\":1,\"1140\":1}}],[\"document\",{\"1\":{\"169\":2,\"1218\":1,\"1228\":1,\"1229\":1}}],[\"docker中的名称是\",{\"1\":{\"1219\":1}}],[\"docker可以很方便地启动mongodb\",{\"1\":{\"1219\":1}}],[\"docker启动redis\",{\"0\":{\"1105\":1}}],[\"docker0\",{\"1\":{\"76\":1}}],[\"dockerignore\",{\"1\":{\"60\":1}}],[\"dockerfile\",{\"0\":{\"56\":1},\"1\":{\"56\":6,\"57\":1,\"58\":5,\"59\":2,\"60\":14}}],[\"docker镜像是一个特殊的文件系统\",{\"1\":{\"46\":1}}],[\"docker\",{\"0\":{\"45\":1,\"81\":1,\"1252\":1},\"1\":{\"3\":1,\"45\":5,\"46\":1,\"47\":2,\"48\":7,\"49\":12,\"50\":3,\"51\":9,\"52\":4,\"53\":2,\"54\":6,\"55\":23,\"56\":1,\"57\":2,\"58\":3,\"59\":2,\"60\":26,\"61\":3,\"62\":1,\"63\":1,\"64\":5,\"65\":1,\"66\":6,\"67\":1,\"68\":12,\"69\":3,\"70\":3,\"71\":3,\"72\":2,\"73\":2,\"74\":21,\"75\":3,\"76\":4,\"78\":4,\"81\":1,\"193\":1,\"994\":2,\"1219\":5},\"2\":{\"80\":1,\"83\":1}}],[\"do\",{\"1\":{\"66\":2,\"509\":1,\"514\":1,\"537\":2,\"543\":11,\"547\":2,\"548\":1,\"563\":2,\"751\":1,\"808\":1,\"899\":1,\"977\":1,\"1118\":1,\"1119\":1,\"1145\":2,\"1242\":3}}],[\"deductmoneyfromwallet\",{\"1\":{\"927\":1}}],[\"demo\",{\"0\":{\"992\":1},\"1\":{\"899\":2,\"959\":1,\"967\":3,\"969\":3,\"970\":2,\"972\":3,\"973\":1,\"975\":1,\"976\":1,\"978\":2,\"989\":5,\"990\":3,\"992\":1,\"993\":3,\"1178\":1}}],[\"denotes\",{\"1\":{\"1126\":1}}],[\"dennis\",{\"1\":{\"827\":3}}],[\"density\",{\"1\":{\"523\":5}}],[\"detach\",{\"1\":{\"844\":2}}],[\"details\",{\"1\":{\"447\":1,\"1054\":1,\"1055\":1,\"1074\":2,\"1086\":3}}],[\"detail\",{\"1\":{\"23\":2}}],[\"determines\",{\"1\":{\"547\":1}}],[\"deal\",{\"1\":{\"1116\":2}}],[\"death\",{\"1\":{\"523\":1,\"543\":1}}],[\"deadlock\",{\"0\":{\"1125\":1},\"1\":{\"1125\":3}}],[\"deadline\",{\"1\":{\"1035\":1}}],[\"dead\",{\"1\":{\"523\":1,\"543\":1}}],[\"degrees\",{\"1\":{\"523\":2}}],[\"deployed\",{\"1\":{\"1055\":1}}],[\"deployment\",{\"2\":{\"499\":1}}],[\"deprived\",{\"1\":{\"547\":1}}],[\"depends\",{\"1\":{\"543\":1}}],[\"depth\",{\"1\":{\"543\":3}}],[\"depths\",{\"1\":{\"523\":1}}],[\"depicts\",{\"1\":{\"1120\":1}}],[\"depicting\",{\"1\":{\"523\":1}}],[\"depict\",{\"1\":{\"523\":1}}],[\"deposit\",{\"1\":{\"152\":2}}],[\"deribit\",{\"1\":{\"704\":1}}],[\"derive\",{\"1\":{\"461\":2,\"462\":2,\"463\":1}}],[\"dereference\",{\"1\":{\"1138\":1}}],[\"deref\",{\"1\":{\"472\":1}}],[\"declaration\",{\"1\":{\"1122\":1}}],[\"declaring\",{\"0\":{\"1122\":1}}],[\"declares\",{\"1\":{\"1122\":1}}],[\"declare\",{\"1\":{\"194\":1,\"548\":1}}],[\"dec\",{\"1\":{\"1002\":1}}],[\"decorator\",{\"1\":{\"919\":1,\"921\":1}}],[\"decode\",{\"1\":{\"516\":1,\"980\":2}}],[\"decoder\",{\"1\":{\"516\":2}}],[\"decameron\",{\"1\":{\"548\":1}}],[\"decide\",{\"1\":{\"537\":1}}],[\"decided\",{\"1\":{\"519\":1,\"560\":1}}],[\"decrement\",{\"1\":{\"403\":2}}],[\"decrby\",{\"1\":{\"403\":1}}],[\"decr\",{\"1\":{\"403\":1}}],[\"defer\",{\"1\":{\"516\":1,\"973\":1,\"975\":4,\"976\":1,\"980\":2,\"1054\":1,\"1055\":4,\"1063\":1,\"1067\":3,\"1095\":1,\"1132\":4,\"1145\":2,\"1225\":1}}],[\"def\",{\"1\":{\"210\":1,\"429\":1}}],[\"defaultfield\",{\"1\":{\"1241\":2}}],[\"default404body\",{\"1\":{\"1055\":1}}],[\"default405body\",{\"1\":{\"1055\":1}}],[\"defaultservemux\",{\"1\":{\"1055\":1}}],[\"defaultsession\",{\"1\":{\"194\":1}}],[\"defaultphone\",{\"1\":{\"874\":3}}],[\"defaultgender\",{\"1\":{\"874\":3}}],[\"defaultage\",{\"1\":{\"874\":3}}],[\"default\",{\"1\":{\"194\":1,\"199\":1,\"200\":1,\"972\":1,\"975\":1,\"1050\":2,\"1051\":2,\"1055\":2,\"1074\":2,\"1088\":1,\"1100\":1,\"1123\":3,\"1188\":1,\"1193\":1}}],[\"defi\",{\"1\":{\"704\":1}}],[\"define\",{\"1\":{\"1073\":2,\"1122\":3}}],[\"defines\",{\"1\":{\"1055\":1,\"1122\":1}}],[\"defined\",{\"1\":{\"512\":1,\"1055\":1,\"1122\":1}}],[\"definitely\",{\"1\":{\"523\":1}}],[\"defi交易所的流动性池\",{\"1\":{\"151\":1}}],[\"defi乐高之借贷协议\",{\"0\":{\"143\":1,\"147\":1,\"156\":1}}],[\"dex价差套利\",{\"1\":{\"163\":1}}],[\"delim\",{\"1\":{\"1172\":1}}],[\"delimiter\",{\"1\":{\"483\":2}}],[\"deliver\",{\"1\":{\"1010\":4}}],[\"delivering\",{\"1\":{\"1010\":6}}],[\"delivery\",{\"1\":{\"563\":2}}],[\"delicate\",{\"1\":{\"523\":1}}],[\"del\",{\"1\":{\"411\":2,\"414\":3,\"424\":1,\"436\":1}}],[\"delay\",{\"1\":{\"360\":2,\"1037\":2}}],[\"delta\",{\"1\":{\"152\":7}}],[\"deletenode\",{\"1\":{\"290\":1}}],[\"deletehead\",{\"1\":{\"280\":6}}],[\"delete\",{\"0\":{\"480\":1},\"1\":{\"55\":1,\"320\":1,\"362\":2,\"364\":1,\"396\":1,\"547\":3,\"551\":1,\"1093\":1}}],[\"deleted\",{\"1\":{\"55\":8}}],[\"debitbalance\",{\"1\":{\"927\":1}}],[\"debit\",{\"1\":{\"927\":2}}],[\"debian\",{\"1\":{\"57\":1,\"58\":2}}],[\"debugprint\",{\"1\":{\"1054\":2}}],[\"debugprinterror\",{\"1\":{\"1054\":1}}],[\"debugprintroute\",{\"1\":{\"1053\":1}}],[\"debugprintwarningdefault\",{\"1\":{\"1051\":1}}],[\"debuginfo\",{\"1\":{\"447\":3,\"448\":1}}],[\"debug\",{\"1\":{\"152\":6,\"447\":3,\"448\":1,\"461\":2,\"462\":2,\"463\":1,\"972\":4}}],[\"desperation\",{\"1\":{\"537\":1}}],[\"description\",{\"1\":{\"989\":1,\"1074\":1}}],[\"descriptor\",{\"1\":{\"90\":4}}],[\"describe\",{\"1\":{\"523\":1}}],[\"desert\",{\"1\":{\"523\":2}}],[\"destroyed\",{\"1\":{\"563\":1}}],[\"destroyers\",{\"1\":{\"523\":1}}],[\"destined\",{\"1\":{\"560\":1}}],[\"destination=mocks\",{\"1\":{\"977\":1}}],[\"destination\",{\"1\":{\"74\":1,\"405\":3,\"409\":8,\"410\":2,\"977\":2,\"1181\":1}}],[\"destkey\",{\"1\":{\"403\":1}}],[\"design\",{\"1\":{\"519\":1,\"827\":3,\"899\":2},\"2\":{\"205\":1,\"817\":1,\"823\":1,\"830\":1,\"836\":1,\"841\":1,\"847\":1,\"852\":1,\"858\":1,\"864\":1,\"870\":1,\"878\":1,\"886\":1,\"893\":1,\"902\":1,\"908\":1,\"913\":1,\"918\":1,\"924\":1,\"930\":1,\"936\":1,\"942\":1}}],[\"devops\",{\"1\":{\"723\":1}}],[\"developing\",{\"1\":{\"523\":1,\"557\":1}}],[\"develop\",{\"1\":{\"519\":1},\"2\":{\"558\":1,\"559\":1,\"564\":1}}],[\"development\",{\"1\":{\"519\":1}}],[\"developer\",{\"1\":{\"192\":2}}],[\"dev是运行不起来的\",{\"1\":{\"192\":1}}],[\"device\",{\"1\":{\"78\":1,\"543\":1,\"563\":1}}],[\"dev\",{\"1\":{\"58\":2,\"68\":1,\"447\":3,\"448\":1,\"1019\":1,\"1054\":1,\"1074\":1,\"1084\":1,\"1093\":1,\"1204\":1}}],[\"deepequal与x不相等的值\",{\"1\":{\"977\":1}}],[\"deepequal与x相等的值gomock\",{\"1\":{\"977\":1}}],[\"deepequal\",{\"1\":{\"967\":2,\"968\":1}}],[\"deep是部署在github\",{\"1\":{\"698\":1}}],[\"deep可以帮助我沉浸其中\",{\"1\":{\"521\":1}}],[\"deep\",{\"1\":{\"3\":1,\"519\":2,\"521\":1,\"523\":3,\"537\":1,\"698\":1}}],[\"tcmalloc是thread\",{\"1\":{\"1147\":1}}],[\"tcp套接字描述符\",{\"1\":{\"427\":1}}],[\"tcp\",{\"0\":{\"90\":1,\"1253\":1},\"1\":{\"4\":1,\"90\":1,\"342\":1,\"1055\":5,\"1063\":2,\"1067\":1}}],[\"tflag\",{\"1\":{\"1139\":2}}],[\"tying\",{\"1\":{\"1116\":1}}],[\"typ\",{\"1\":{\"1047\":1}}],[\"typing\",{\"1\":{\"523\":1}}],[\"type类型\",{\"1\":{\"1189\":1}}],[\"type类型记录了对象的类型\",{\"1\":{\"400\":1}}],[\"type和reflect\",{\"1\":{\"1187\":1,\"1194\":2}}],[\"typevar\",{\"1\":{\"1163\":3}}],[\"typealg\",{\"1\":{\"1139\":1}}],[\"typedmemmove\",{\"1\":{\"1137\":1}}],[\"typedef\",{\"1\":{\"394\":2,\"395\":4,\"397\":2,\"398\":1,\"400\":1,\"426\":2,\"427\":2,\"428\":1,\"435\":3}}],[\"typeurl\",{\"1\":{\"1086\":1}}],[\"types\",{\"1\":{\"1086\":1,\"1087\":1}}],[\"typescript\",{\"1\":{\"3\":2,\"192\":2}}],[\"typeof和reflect\",{\"1\":{\"1194\":1}}],[\"typeof函数用于获取变量的类型信息\",{\"1\":{\"1194\":1}}],[\"typeof函数来实现\",{\"1\":{\"1188\":1}}],[\"typeof的示例\",{\"1\":{\"1188\":1}}],[\"typeoff\",{\"1\":{\"1139\":1}}],[\"typeof\",{\"1\":{\"978\":1,\"1188\":8,\"1192\":1,\"1193\":1}}],[\"type记录了value的类型\",{\"1\":{\"420\":1}}],[\"type属性是一个指向dicttype结构的指针\",{\"1\":{\"395\":1}}],[\"type属性和privdata属性是针对不同类型的键值对\",{\"1\":{\"395\":1}}],[\"type=bind\",{\"1\":{\"74\":2}}],[\"type\",{\"0\":{\"1188\":1},\"1\":{\"74\":1,\"195\":3,\"280\":1,\"301\":1,\"336\":1,\"395\":1,\"400\":1,\"420\":9,\"433\":3,\"435\":1,\"513\":2,\"516\":1,\"814\":4,\"820\":6,\"827\":5,\"833\":5,\"838\":3,\"844\":5,\"849\":4,\"855\":5,\"861\":2,\"867\":7,\"874\":3,\"875\":1,\"883\":5,\"890\":1,\"898\":2,\"899\":1,\"905\":5,\"910\":6,\"915\":3,\"921\":3,\"927\":1,\"933\":2,\"939\":3,\"958\":1,\"960\":1,\"968\":1,\"972\":1,\"973\":2,\"977\":3,\"978\":1,\"980\":4,\"981\":4,\"1005\":2,\"1010\":2,\"1011\":2,\"1019\":1,\"1047\":1,\"1052\":1,\"1055\":2,\"1063\":5,\"1067\":1,\"1074\":3,\"1080\":2,\"1093\":2,\"1097\":1,\"1122\":7,\"1126\":1,\"1127\":1,\"1132\":5,\"1133\":1,\"1134\":1,\"1137\":3,\"1138\":7,\"1139\":15,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":2,\"1163\":2,\"1188\":16,\"1189\":2,\"1190\":1,\"1191\":1,\"1192\":15,\"1193\":1,\"1208\":1,\"1226\":1,\"1237\":1,\"1240\":1,\"1241\":2,\"1242\":1}}],[\"tl\",{\"1\":{\"1055\":2}}],[\"tlsnextproto\",{\"1\":{\"1055\":1}}],[\"tlsstate\",{\"1\":{\"1055\":3}}],[\"tlsrecordheaderlookslikehttp\",{\"1\":{\"1055\":1}}],[\"tlsconn\",{\"1\":{\"1055\":5}}],[\"tls\",{\"1\":{\"494\":1,\"1055\":8}}],[\"t=3\",{\"1\":{\"992\":1}}],[\"tx\",{\"1\":{\"975\":5}}],[\"txt文件来保存所有的日志信息\",{\"1\":{\"1181\":1}}],[\"txt\",{\"1\":{\"74\":2,\"448\":5,\"449\":5,\"450\":1,\"451\":3,\"1153\":2,\"1169\":2,\"1172\":5,\"1173\":1,\"1181\":1}}],[\"tt\",{\"1\":{\"968\":5,\"972\":4,\"979\":5,\"980\":8}}],[\"tty\",{\"1\":{\"64\":1}}],[\"t对象可以保存每个测试的详细信息\",{\"1\":{\"967\":1}}],[\"tvreceiver\",{\"1\":{\"820\":13}}],[\"tv\",{\"1\":{\"563\":2,\"820\":11}}],[\"twitter\",{\"1\":{\"731\":2,\"740\":1}}],[\"twitter上cz对此事件发表评论\",{\"1\":{\"592\":1}}],[\"twice\",{\"1\":{\"547\":2}}],[\"two\",{\"1\":{\"543\":1,\"560\":1,\"992\":1,\"1118\":2,\"1119\":1}}],[\"twosum\",{\"1\":{\"332\":1}}],[\"t类型的值\",{\"1\":{\"398\":1}}],[\"t类型的数组\",{\"1\":{\"398\":1}}],[\"t的整数值\",{\"1\":{\"398\":1}}],[\"t或者int64\",{\"1\":{\"398\":1}}],[\"t如果把当前元素t\",{\"1\":{\"263\":1}}],[\"t中找到了一个字符在s中也出现了\",{\"1\":{\"263\":1}}],[\"t2+1\",{\"1\":{\"261\":1}}],[\"t2\",{\"1\":{\"261\":2,\"362\":1}}],[\"t1+1\",{\"1\":{\"261\":1}}],[\"t1\",{\"1\":{\"261\":3,\"362\":1,\"437\":3}}],[\"tmparr\",{\"1\":{\"304\":5,\"305\":5}}],[\"tmpk\",{\"1\":{\"210\":2}}],[\"tmpstring\",{\"1\":{\"210\":9}}],[\"tmp\",{\"1\":{\"208\":6,\"209\":3,\"211\":3,\"212\":6,\"215\":3,\"217\":3,\"218\":3,\"219\":3,\"277\":7,\"307\":3,\"323\":10}}],[\"tells\",{\"1\":{\"1120\":1}}],[\"technologically\",{\"1\":{\"770\":1}}],[\"technical\",{\"0\":{\"1118\":1},\"1\":{\"548\":1,\"1118\":1}}],[\"techrights\",{\"1\":{\"534\":1}}],[\"teenagers\",{\"1\":{\"547\":1}}],[\"teenager\",{\"1\":{\"547\":1}}],[\"terminated\",{\"1\":{\"1119\":2,\"1120\":3}}],[\"terminates\",{\"1\":{\"1119\":1}}],[\"termism\",{\"2\":{\"562\":1}}],[\"term\",{\"1\":{\"540\":1,\"547\":2}}],[\"teach\",{\"1\":{\"547\":1}}],[\"teacher\",{\"1\":{\"537\":2,\"563\":1}}],[\"teachers\",{\"1\":{\"523\":1}}],[\"tears\",{\"1\":{\"537\":1}}],[\"teaspoon\",{\"1\":{\"523\":1}}],[\"tencent\",{\"1\":{\"547\":1}}],[\"ten\",{\"1\":{\"523\":1,\"537\":4,\"543\":5}}],[\"ted部分演讲\",{\"1\":{\"505\":1}}],[\"temporary\",{\"1\":{\"1055\":1}}],[\"tempdelay\",{\"1\":{\"1055\":9}}],[\"temperatures\",{\"1\":{\"523\":1}}],[\"temperature\",{\"1\":{\"523\":6}}],[\"temp\",{\"1\":{\"216\":3,\"311\":3,\"318\":3,\"948\":13}}],[\"tempstring\",{\"1\":{\"214\":2}}],[\"text2\",{\"1\":{\"260\":12,\"261\":2,\"265\":2}}],[\"text1\",{\"1\":{\"260\":11,\"261\":3,\"265\":2}}],[\"text\",{\"1\":{\"195\":1,\"543\":1,\"1055\":3,\"1080\":1,\"1084\":3,\"1119\":1,\"1124\":1,\"1153\":3}}],[\"testprefix\",{\"1\":{\"1180\":6}}],[\"testhookserverserve\",{\"1\":{\"1055\":1}}],[\"test目录下的所有程序移动到当前目录下\",{\"1\":{\"989\":1}}],[\"testgetaveragepriceperstore\",{\"1\":{\"980\":1}}],[\"testgetresultbyapi\",{\"1\":{\"973\":3}}],[\"testuser\",{\"1\":{\"978\":3}}],[\"testmyfunc\",{\"1\":{\"978\":3}}],[\"testmockxxx\",{\"1\":{\"958\":2,\"959\":3}}],[\"testdosomethingwithredis\",{\"1\":{\"976\":3}}],[\"teststruct\",{\"1\":{\"1138\":3}}],[\"teststudent\",{\"1\":{\"977\":7}}],[\"testshouldrollbackstatupdatesonfailure\",{\"1\":{\"975\":4}}],[\"testshouldupdatestats\",{\"1\":{\"975\":4}}],[\"tests\",{\"1\":{\"968\":2,\"972\":2,\"979\":2,\"980\":2}}],[\"test命令添加\",{\"1\":{\"967\":1}}],[\"test命令是按照一定约定和组织测试代码的驱动二进制程序\",{\"1\":{\"966\":1}}],[\"test测试的部分\",{\"1\":{\"966\":1}}],[\"testxxx\",{\"1\":{\"960\":2}}],[\"testok2\",{\"1\":{\"959\":3}}],[\"testok1\",{\"1\":{\"959\":3}}],[\"testify\",{\"1\":{\"959\":1,\"972\":1,\"973\":1}}],[\"testing\",{\"1\":{\"899\":5,\"958\":2,\"959\":2,\"960\":2,\"967\":4,\"968\":2,\"970\":3,\"972\":3,\"973\":2,\"975\":3,\"976\":2,\"977\":3,\"978\":2,\"979\":2,\"980\":2}}],[\"test数据\",{\"1\":{\"510\":1}}],[\"test1\",{\"1\":{\"260\":1}}],[\"test\",{\"1\":{\"69\":1,\"70\":2,\"192\":1,\"362\":2,\"371\":2,\"899\":1,\"956\":1,\"959\":2,\"960\":2,\"961\":1,\"966\":3,\"967\":21,\"968\":2,\"969\":3,\"970\":2,\"972\":9,\"973\":2,\"975\":1,\"976\":2,\"977\":4,\"978\":4,\"979\":1,\"980\":1,\"989\":4,\"1138\":3,\"1178\":6,\"1180\":6,\"1181\":4,\"1182\":2}}],[\"tsr\",{\"1\":{\"1055\":1}}],[\"ts=\",{\"1\":{\"997\":1}}],[\"ts64\",{\"1\":{\"395\":1}}],[\"ts\",{\"1\":{\"192\":1,\"194\":1,\"997\":2}}],[\"ts文件中\",{\"1\":{\"192\":1}}],[\"t3\",{\"1\":{\"191\":1,\"192\":1,\"362\":1}}],[\"turnoff\",{\"1\":{\"820\":4}}],[\"turnon\",{\"1\":{\"820\":4}}],[\"turn\",{\"1\":{\"547\":1,\"820\":2}}],[\"turned\",{\"1\":{\"523\":1}}],[\"turning\",{\"1\":{\"523\":1,\"543\":1}}],[\"turbulence\",{\"1\":{\"523\":1}}],[\"tuple\",{\"1\":{\"459\":2}}],[\"tu64\",{\"1\":{\"395\":1}}],[\"tuv\",{\"1\":{\"210\":1}}],[\"tusd等\",{\"1\":{\"185\":1}}],[\"tutor\",{\"1\":{\"90\":1}}],[\"tutorial\",{\"1\":{\"90\":1,\"1011\":1,\"1127\":1},\"2\":{\"79\":1,\"82\":1,\"85\":1,\"204\":1,\"221\":1,\"269\":1,\"272\":1,\"338\":1,\"378\":1,\"389\":1,\"441\":1,\"816\":1,\"822\":1,\"829\":1,\"835\":1,\"840\":1,\"846\":1,\"851\":1,\"857\":1,\"863\":1,\"869\":1,\"877\":1,\"885\":1,\"892\":1,\"901\":1,\"907\":1,\"912\":1,\"917\":1,\"923\":1,\"929\":1,\"935\":1,\"941\":1,\"951\":1,\"954\":1,\"963\":1,\"983\":1,\"986\":1,\"995\":1,\"1006\":1,\"1012\":1,\"1015\":1,\"1021\":1,\"1028\":1,\"1031\":1,\"1039\":1,\"1042\":1,\"1048\":1,\"1058\":1,\"1061\":1,\"1064\":1,\"1069\":1,\"1076\":1,\"1081\":1,\"1090\":1,\"1102\":1,\"1110\":1,\"1113\":1,\"1151\":1,\"1154\":1,\"1157\":1,\"1164\":1,\"1175\":1,\"1184\":1,\"1195\":1,\"1202\":1,\"1214\":1,\"1243\":1,\"1246\":1}}],[\"those\",{\"1\":{\"547\":1,\"548\":1}}],[\"though\",{\"1\":{\"563\":1}}],[\"thought\",{\"1\":{\"537\":1,\"543\":1,\"548\":1,\"563\":1,\"1119\":1,\"1121\":1}}],[\"thousands\",{\"1\":{\"523\":3,\"1119\":1}}],[\"through\",{\"1\":{\"523\":7,\"543\":1,\"547\":2,\"549\":1,\"1052\":1}}],[\"threatened\",{\"1\":{\"563\":1}}],[\"threads\",{\"1\":{\"523\":1,\"1118\":1,\"1119\":1}}],[\"thread\",{\"1\":{\"447\":3,\"448\":1,\"449\":2,\"463\":4,\"475\":1,\"1119\":1}}],[\"three\",{\"1\":{\"519\":1,\"523\":2,\"537\":1,\"543\":1,\"547\":1,\"549\":1,\"557\":1,\"560\":1,\"563\":1,\"1120\":1}}],[\"thanks\",{\"1\":{\"537\":2}}],[\"than\",{\"1\":{\"523\":5,\"537\":1,\"543\":7,\"547\":2,\"548\":1,\"549\":1,\"1179\":1,\"1242\":2}}],[\"that\",{\"1\":{\"90\":1,\"519\":1,\"523\":33,\"537\":3,\"540\":3,\"543\":19,\"547\":16,\"548\":2,\"549\":2,\"550\":1,\"557\":4,\"560\":1,\"563\":14,\"975\":1,\"989\":2,\"1055\":2,\"1073\":1,\"1116\":1,\"1117\":2,\"1118\":3,\"1119\":1,\"1120\":1,\"1122\":2,\"1123\":3,\"1124\":2,\"1125\":2,\"1126\":3,\"1127\":2,\"1188\":1}}],[\"theory\",{\"1\":{\"543\":1}}],[\"them\",{\"1\":{\"523\":1,\"537\":1,\"543\":1,\"547\":3,\"563\":2,\"1055\":3,\"1118\":2,\"1126\":1}}],[\"themselves\",{\"1\":{\"523\":1}}],[\"their\",{\"1\":{\"523\":1,\"547\":1,\"550\":1,\"563\":2,\"1055\":3,\"1118\":2,\"1119\":2}}],[\"thermodynamics\",{\"1\":{\"523\":2}}],[\"therefore\",{\"1\":{\"523\":4}}],[\"there\",{\"1\":{\"90\":2,\"483\":1,\"523\":5,\"540\":2,\"543\":3,\"547\":8,\"548\":1,\"975\":3,\"1053\":1,\"1119\":1}}],[\"these\",{\"1\":{\"523\":5,\"547\":5,\"548\":1,\"550\":1,\"563\":2,\"1055\":1,\"1118\":1}}],[\"they\",{\"1\":{\"523\":13,\"543\":2,\"547\":1,\"548\":1,\"563\":6,\"1055\":5}}],[\"then\",{\"1\":{\"195\":1,\"436\":1,\"483\":1,\"523\":4,\"537\":1,\"543\":5,\"547\":1,\"548\":1,\"1026\":1,\"1055\":2,\"1116\":1,\"1118\":1,\"1119\":2,\"1124\":3,\"1125\":3,\"1127\":1}}],[\"the\",{\"0\":{\"549\":1,\"550\":1},\"1\":{\"90\":3,\"192\":1,\"333\":2,\"334\":2,\"447\":4,\"448\":4,\"459\":1,\"460\":2,\"468\":2,\"473\":1,\"483\":1,\"512\":1,\"519\":7,\"523\":254,\"534\":1,\"537\":28,\"540\":13,\"543\":70,\"547\":53,\"548\":16,\"549\":5,\"557\":9,\"560\":11,\"563\":18,\"722\":1,\"808\":2,\"820\":3,\"827\":6,\"883\":3,\"956\":1,\"972\":1,\"976\":1,\"989\":1,\"992\":4,\"993\":1,\"1019\":3,\"1045\":5,\"1050\":1,\"1051\":1,\"1052\":5,\"1055\":29,\"1056\":3,\"1116\":4,\"1117\":6,\"1118\":22,\"1119\":22,\"1120\":24,\"1121\":1,\"1122\":7,\"1123\":5,\"1124\":26,\"1125\":7,\"1126\":15,\"1127\":18,\"1135\":2,\"1179\":10,\"1181\":2,\"1188\":2,\"1237\":1}}],[\"thicker\",{\"1\":{\"523\":1}}],[\"thinner\",{\"1\":{\"523\":2}}],[\"thinging\",{\"2\":{\"527\":1,\"536\":1}}],[\"thing\",{\"1\":{\"523\":3,\"537\":1,\"547\":1,\"560\":1,\"563\":4}}],[\"things\",{\"1\":{\"523\":3,\"543\":3,\"547\":8,\"548\":3,\"557\":1,\"563\":4,\"992\":1,\"1116\":2,\"1117\":2}}],[\"thinks\",{\"1\":{\"523\":1}}],[\"think\",{\"1\":{\"519\":1,\"523\":1,\"543\":3,\"547\":5,\"563\":2,\"1055\":1}}],[\"thinking\",{\"0\":{\"1272\":1,\"1274\":1,\"1276\":1,\"1278\":1,\"1280\":1},\"1\":{\"537\":1,\"547\":5,\"631\":1},\"2\":{\"5\":1,\"6\":1,\"14\":1,\"15\":1,\"495\":1,\"529\":1,\"530\":1,\"535\":1,\"567\":1,\"568\":1,\"589\":1,\"590\":1,\"593\":1,\"594\":1,\"600\":1,\"601\":1,\"603\":1,\"604\":1,\"606\":1,\"607\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"624\":1,\"625\":1,\"629\":1,\"630\":1,\"635\":1,\"636\":1,\"644\":1,\"645\":1,\"650\":1,\"651\":1,\"658\":1,\"659\":1,\"661\":1,\"662\":1,\"664\":1,\"665\":1,\"667\":1,\"668\":1,\"671\":1,\"672\":1,\"675\":1,\"676\":1,\"678\":1,\"679\":1,\"681\":1,\"682\":1,\"684\":1,\"685\":1,\"687\":1,\"688\":1,\"690\":1,\"691\":1,\"693\":1,\"694\":1,\"696\":1,\"697\":1,\"699\":1,\"700\":1,\"707\":1,\"712\":1,\"713\":1,\"715\":1,\"716\":1,\"719\":1,\"720\":1,\"726\":1,\"727\":1,\"729\":1,\"732\":1,\"733\":1,\"736\":1,\"737\":1,\"741\":1,\"744\":1,\"749\":1,\"750\":1,\"752\":1,\"753\":1,\"755\":1,\"756\":1,\"762\":1,\"765\":1,\"766\":1,\"768\":1,\"769\":1,\"774\":1,\"775\":1,\"777\":1,\"805\":1,\"807\":1,\"809\":1,\"811\":1}}],[\"third\",{\"1\":{\"519\":1,\"523\":1,\"543\":3,\"1120\":1}}],[\"this\",{\"1\":{\"90\":5,\"280\":19,\"301\":25,\"449\":2,\"459\":1,\"467\":1,\"519\":1,\"523\":40,\"537\":8,\"540\":1,\"543\":14,\"547\":15,\"548\":1,\"550\":2,\"557\":3,\"560\":2,\"563\":5,\"989\":1,\"1052\":1,\"1054\":1,\"1055\":4,\"1072\":12,\"1073\":2,\"1080\":2,\"1094\":1,\"1095\":1,\"1100\":1,\"1116\":1,\"1117\":3,\"1118\":13,\"1119\":7,\"1120\":3,\"1122\":1,\"1123\":3,\"1124\":11,\"1125\":3,\"1126\":4,\"1127\":2}}],[\"tiny分配的第一步是尝试利用分配过前一个元素的空间达到节省内存的目的\",{\"1\":{\"1150\":1}}],[\"tiny对象会被放入class为2的span中\",{\"1\":{\"1150\":1}}],[\"tiny\",{\"1\":{\"1119\":1}}],[\"ties\",{\"1\":{\"1116\":1}}],[\"tier\",{\"1\":{\"152\":1}}],[\"tidy\",{\"1\":{\"1067\":1}}],[\"tide\",{\"1\":{\"519\":3,\"521\":2}}],[\"tim\",{\"1\":{\"569\":1}}],[\"time类型是time包下最常使用到的类型\",{\"1\":{\"1212\":1}}],[\"time类型\",{\"0\":{\"1212\":1}}],[\"timeinnewyork\",{\"1\":{\"1208\":1}}],[\"timeinshanghai被转换为纽约时区\",{\"1\":{\"1208\":1}}],[\"timeinshanghai\",{\"1\":{\"1208\":1}}],[\"time包下的内容比较多\",{\"1\":{\"1205\":1}}],[\"time官方包的顺序编写\",{\"1\":{\"1204\":1}}],[\"timer类似\",{\"1\":{\"1004\":1}}],[\"timer\",{\"1\":{\"997\":3,\"1205\":2,\"1213\":1}}],[\"timesareequal\",{\"1\":{\"1208\":2}}],[\"times\",{\"1\":{\"523\":6,\"540\":1,\"543\":1,\"563\":1,\"960\":2,\"977\":1,\"992\":8,\"1019\":5,\"1118\":2}}],[\"timestampproto\",{\"1\":{\"1087\":2}}],[\"timestamppb\",{\"1\":{\"1087\":2}}],[\"timestamp包\",{\"0\":{\"1087\":1}}],[\"timestamp是时间戳\",{\"1\":{\"512\":1}}],[\"timestamp\",{\"1\":{\"152\":3,\"512\":1,\"513\":1,\"514\":2,\"1087\":4}}],[\"timeout\",{\"1\":{\"405\":3,\"425\":1,\"426\":2,\"1035\":1}}],[\"time\",{\"0\":{\"1033\":1,\"1204\":1},\"1\":{\"76\":1,\"152\":5,\"377\":1,\"417\":1,\"426\":2,\"511\":1,\"514\":1,\"516\":2,\"517\":1,\"519\":2,\"523\":11,\"537\":2,\"540\":1,\"543\":29,\"547\":5,\"548\":2,\"549\":2,\"557\":7,\"560\":1,\"563\":2,\"976\":4,\"978\":2,\"979\":11,\"997\":8,\"1001\":2,\"1005\":2,\"1033\":1,\"1034\":1,\"1036\":3,\"1037\":4,\"1047\":4,\"1055\":9,\"1063\":3,\"1067\":2,\"1087\":1,\"1097\":5,\"1099\":5,\"1117\":3,\"1118\":3,\"1119\":3,\"1120\":8,\"1124\":5,\"1146\":2,\"1179\":4,\"1204\":2,\"1205\":2,\"1206\":9,\"1207\":15,\"1208\":8,\"1209\":2,\"1210\":3,\"1211\":5,\"1212\":94,\"1213\":2,\"1241\":2,\"1242\":3},\"2\":{\"544\":1,\"545\":1}}],[\"title\",{\"1\":{\"537\":1}}],[\"ticker主要是一个定时器\",{\"1\":{\"1211\":1}}],[\"ticker\",{\"0\":{\"1211\":1},\"1\":{\"1205\":2,\"1206\":2,\"1211\":9,\"1213\":1}}],[\"ticket\",{\"1\":{\"1146\":1}}],[\"tick\",{\"1\":{\"1001\":1,\"1135\":2,\"1206\":11,\"1211\":3}}],[\"tic\",{\"1\":{\"481\":1}}],[\"tilt\",{\"1\":{\"426\":2}}],[\"tiga\",{\"1\":{\"36\":1}}],[\"t\",{\"1\":{\"59\":2,\"60\":2,\"64\":2,\"68\":3,\"90\":3,\"213\":3,\"263\":13,\"264\":16,\"362\":2,\"366\":3,\"371\":2,\"398\":7,\"417\":1,\"426\":6,\"427\":4,\"435\":9,\"447\":2,\"448\":4,\"450\":1,\"483\":1,\"517\":2,\"523\":6,\"537\":6,\"540\":3,\"543\":4,\"547\":7,\"548\":2,\"549\":1,\"563\":3,\"731\":1,\"958\":3,\"959\":7,\"960\":4,\"967\":13,\"968\":6,\"972\":8,\"973\":5,\"975\":10,\"976\":6,\"977\":11,\"978\":8,\"979\":6,\"980\":7,\"992\":1,\"1019\":11,\"1054\":1,\"1055\":7,\"1122\":3,\"1123\":1,\"1173\":2,\"1188\":6,\"1189\":2,\"1192\":7,\"1207\":5,\"1211\":2,\"1212\":45,\"1242\":2}}],[\"t是终端操作\",{\"1\":{\"50\":1}}],[\"ta是我们的朋友\",{\"1\":{\"978\":1}}],[\"tab\",{\"1\":{\"731\":1,\"1025\":1,\"1120\":1,\"1139\":2}}],[\"table属性是一个数组\",{\"1\":{\"395\":1}}],[\"tables\",{\"1\":{\"364\":2,\"366\":3,\"368\":2}}],[\"table\",{\"1\":{\"224\":1,\"232\":1,\"240\":1,\"260\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"364\":2,\"395\":1,\"1218\":2}}],[\"taxation\",{\"2\":{\"730\":1}}],[\"tavris\",{\"1\":{\"653\":1}}],[\"tangible\",{\"1\":{\"563\":1}}],[\"taobao\",{\"1\":{\"547\":1,\"563\":1}}],[\"talking\",{\"1\":{\"547\":1}}],[\"talk\",{\"1\":{\"547\":3}}],[\"taleb\",{\"1\":{\"537\":6,\"563\":1}}],[\"taking\",{\"1\":{\"540\":1,\"563\":1}}],[\"taken\",{\"1\":{\"1115\":1}}],[\"take\",{\"1\":{\"543\":2}}],[\"takes\",{\"1\":{\"523\":1,\"543\":1}}],[\"takerorder\",{\"1\":{\"169\":1}}],[\"taker\",{\"1\":{\"169\":1}}],[\"taiyuan\",{\"1\":{\"523\":1}}],[\"tail\",{\"1\":{\"394\":1,\"397\":1,\"1135\":1,\"1146\":1}}],[\"tailwind\",{\"1\":{\"192\":1}}],[\"tailwindcss等等依赖服务\",{\"1\":{\"191\":1}}],[\"tailwindcss\",{\"1\":{\"3\":1}}],[\"tac\",{\"1\":{\"481\":1}}],[\"targets\",{\"1\":{\"1025\":1}}],[\"targetsum\",{\"1\":{\"307\":4}}],[\"target为5\",{\"1\":{\"276\":1}}],[\"target+1\",{\"1\":{\"237\":1,\"238\":1}}],[\"target\",{\"1\":{\"211\":6,\"212\":12,\"237\":4,\"238\":3,\"239\":3,\"276\":5,\"279\":2,\"325\":10,\"332\":5,\"447\":3,\"448\":1,\"1025\":1}}],[\"target=\",{\"1\":{\"74\":3}}],[\"tar\",{\"1\":{\"58\":9,\"69\":1,\"70\":1}}],[\"tag为createat\",{\"1\":{\"1241\":1}}],[\"tags都基于plugin的方式实现\",{\"1\":{\"1242\":1}}],[\"tags\",{\"0\":{\"1242\":1},\"1\":{\"1222\":1}}],[\"tag\",{\"1\":{\"48\":1,\"51\":1,\"54\":1,\"55\":1,\"70\":1,\"1188\":4}}],[\"tremors\",{\"1\":{\"523\":1}}],[\"trees以找出当前请求的http\",{\"1\":{\"1055\":1}}],[\"trees\",{\"1\":{\"1053\":6,\"1055\":2}}],[\"tree\",{\"1\":{\"523\":2,\"989\":1,\"1011\":1,\"1055\":5,\"1079\":1}}],[\"treenode\",{\"1\":{\"250\":2,\"279\":2,\"297\":4,\"298\":4,\"299\":3,\"303\":2,\"304\":2,\"305\":2,\"307\":2,\"327\":3,\"328\":1,\"329\":2}}],[\"trigger\",{\"1\":{\"1011\":3}}],[\"trinos\",{\"1\":{\"523\":1}}],[\"trib都向源节点发送一个migrate<target\",{\"1\":{\"431\":1}}],[\"trib向源节点发送cluster\",{\"1\":{\"431\":1}}],[\"trib\",{\"1\":{\"431\":2}}],[\"trib对集群的单个槽slot进行重新分片的步骤如下\",{\"1\":{\"431\":1}}],[\"trib则通过向源节点和目标节点发送命令来进行重新分片操作\",{\"1\":{\"431\":1}}],[\"trib负责执行的\",{\"1\":{\"431\":1}}],[\"trimprefix\",{\"1\":{\"1099\":1}}],[\"trim\",{\"1\":{\"405\":1}}],[\"trimright\",{\"1\":{\"334\":1}}],[\"trx\",{\"1\":{\"356\":2,\"357\":2,\"360\":3,\"362\":16}}],[\"tract\",{\"1\":{\"560\":1}}],[\"tracklistener\",{\"1\":{\"1055\":2}}],[\"track\",{\"1\":{\"215\":9,\"216\":9,\"218\":9,\"219\":9}}],[\"trailer\",{\"1\":{\"1095\":11}}],[\"trained\",{\"1\":{\"543\":1}}],[\"trait\",{\"1\":{\"457\":1,\"473\":1}}],[\"tragedies\",{\"1\":{\"540\":1}}],[\"traps\",{\"1\":{\"523\":1}}],[\"traverse\",{\"1\":{\"298\":5,\"299\":5,\"307\":4,\"523\":1}}],[\"traversal\",{\"1\":{\"250\":4}}],[\"traveled\",{\"1\":{\"547\":1}}],[\"travel\",{\"1\":{\"90\":1,\"523\":1}}],[\"transported\",{\"1\":{\"1122\":1}}],[\"transport\",{\"1\":{\"1122\":1}}],[\"transparent\",{\"1\":{\"523\":1,\"563\":1}}],[\"transcoding\",{\"0\":{\"1080\":1},\"1\":{\"1080\":1}}],[\"transcation由以下组成\",{\"1\":{\"116\":1}}],[\"trans\",{\"1\":{\"1011\":5}}],[\"transitions\",{\"1\":{\"1011\":11}}],[\"transition\",{\"1\":{\"1009\":2,\"1011\":7}}],[\"translate\",{\"2\":{\"590\":1}}],[\"translatenum\",{\"1\":{\"318\":1}}],[\"transmutation\",{\"1\":{\"523\":1}}],[\"transaction\",{\"1\":{\"358\":1,\"362\":4,\"370\":1,\"424\":1,\"563\":1}}],[\"transfer\",{\"1\":{\"133\":1,\"547\":1,\"1055\":3}}],[\"trade\",{\"1\":{\"27\":1,\"706\":1}}],[\"trying\",{\"1\":{\"543\":1}}],[\"try\",{\"1\":{\"90\":1,\"152\":1,\"467\":1,\"523\":1,\"543\":7,\"1126\":1}}],[\"trust\",{\"1\":{\"1054\":1}}],[\"trusted\",{\"1\":{\"1054\":1}}],[\"trusting\",{\"1\":{\"71\":2}}],[\"truly\",{\"1\":{\"543\":1}}],[\"truncate\",{\"1\":{\"480\":9,\"1207\":1,\"1212\":1}}],[\"true\",{\"1\":{\"66\":2,\"74\":1,\"114\":1,\"199\":1,\"200\":1,\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"217\":1,\"218\":2,\"219\":1,\"246\":3,\"263\":1,\"267\":4,\"276\":2,\"284\":6,\"291\":3,\"297\":4,\"299\":4,\"302\":1,\"306\":2,\"311\":1,\"329\":3,\"515\":1,\"523\":1,\"973\":1,\"976\":1,\"1010\":1,\"1036\":1,\"1045\":1,\"1047\":1,\"1055\":2,\"1073\":1,\"1088\":1,\"1099\":1,\"1124\":2,\"1127\":11,\"1138\":2,\"1142\":1,\"1161\":2,\"1162\":1,\"1173\":2,\"1189\":2,\"1191\":1,\"1199\":2,\"1212\":1}}],[\"trpc\",{\"1\":{\"3\":1,\"192\":1}}],[\"tolower\",{\"1\":{\"1193\":1}}],[\"told\",{\"1\":{\"523\":1,\"563\":2}}],[\"tostate\",{\"1\":{\"1011\":4}}],[\"tostring\",{\"1\":{\"194\":2}}],[\"toml\",{\"1\":{\"981\":1}}],[\"tomorrow\",{\"1\":{\"557\":1}}],[\"tomcat\",{\"1\":{\"57\":1}}],[\"towards\",{\"1\":{\"523\":2}}],[\"tough\",{\"1\":{\"523\":1}}],[\"touchwatchkey\",{\"1\":{\"424\":1}}],[\"touchwatchkey函数对watched\",{\"1\":{\"424\":1}}],[\"touch\",{\"1\":{\"56\":1,\"74\":2,\"90\":2}}],[\"ton\",{\"1\":{\"523\":1}}],[\"together\",{\"1\":{\"523\":1}}],[\"today\",{\"1\":{\"523\":1,\"557\":2,\"560\":1}}],[\"todo\",{\"1\":{\"291\":1,\"309\":1,\"310\":1,\"314\":1,\"316\":1,\"323\":1,\"330\":1,\"976\":1}}],[\"tool\",{\"0\":{\"1271\":1},\"1\":{\"969\":2,\"989\":1},\"2\":{\"1016\":1,\"1022\":1}}],[\"tools\",{\"1\":{\"560\":1,\"1144\":1}}],[\"took\",{\"1\":{\"523\":1,\"548\":1,\"560\":1}}],[\"too\",{\"1\":{\"483\":1,\"523\":1,\"547\":1,\"1055\":1}}],[\"toe\",{\"1\":{\"481\":1}}],[\"totlen\",{\"1\":{\"435\":1}}],[\"totally\",{\"1\":{\"563\":1}}],[\"total\",{\"1\":{\"152\":18,\"537\":1,\"543\":2,\"959\":1,\"967\":1,\"1236\":1,\"1239\":1}}],[\"to数组记录了当前节点正在迁移至其他节点的槽\",{\"1\":{\"432\":1}}],[\"token也失效了\",{\"1\":{\"1047\":1}}],[\"token来刷新获取到新的access\",{\"1\":{\"1047\":1}}],[\"token由于过期而失效时\",{\"1\":{\"1047\":1}}],[\"token的有效期会比较短\",{\"1\":{\"1047\":1}}],[\"token存在的有效期时间会比较长\",{\"1\":{\"1047\":1}}],[\"token是用来访问接口资源的token\",{\"1\":{\"1047\":1}}],[\"token签发后\",{\"1\":{\"1047\":1}}],[\"token就像这样\",{\"1\":{\"1047\":1}}],[\"tokenstring\",{\"1\":{\"1047\":4}}],[\"tokens\",{\"1\":{\"195\":1}}],[\"token配置\",{\"0\":{\"194\":1}}],[\"token\",{\"0\":{\"1046\":1},\"1\":{\"191\":1,\"194\":8,\"195\":5,\"200\":3,\"557\":1,\"1033\":6,\"1034\":13,\"1035\":3,\"1036\":2,\"1037\":2,\"1038\":3,\"1046\":1,\"1047\":15,\"1099\":8}}],[\"top10\",{\"2\":{\"952\":1}}],[\"top>bottom\",{\"1\":{\"300\":1}}],[\"top>>>>>>>>>\",{\"1\":{\"21\":1,\"37\":1,\"39\":1,\"40\":1,\"41\":1}}],[\"top往下移动\",{\"1\":{\"300\":1}}],[\"top行遍历完了\",{\"1\":{\"300\":1}}],[\"top行的从左到右遍历\",{\"1\":{\"300\":1}}],[\"top++\",{\"1\":{\"300\":1}}],[\"top\",{\"0\":{\"1285\":1},\"1\":{\"65\":1,\"300\":2,\"301\":2,\"547\":1,\"808\":1,\"1120\":1}}],[\"topic\",{\"1\":{\"23\":12,\"26\":1}}],[\"to\",{\"0\":{\"549\":1,\"550\":1},\"1\":{\"21\":1,\"37\":1,\"39\":1,\"40\":1,\"41\":1,\"60\":1,\"90\":16,\"152\":2,\"192\":6,\"425\":1,\"430\":1,\"432\":2,\"447\":2,\"448\":1,\"450\":6,\"451\":5,\"459\":1,\"461\":4,\"462\":4,\"463\":3,\"467\":2,\"472\":1,\"475\":1,\"519\":9,\"523\":62,\"537\":12,\"540\":6,\"543\":42,\"547\":23,\"548\":7,\"549\":6,\"550\":1,\"557\":4,\"560\":5,\"563\":24,\"770\":1,\"808\":1,\"820\":1,\"905\":2,\"927\":1,\"958\":2,\"959\":4,\"972\":1,\"989\":2,\"991\":1,\"992\":4,\"993\":1,\"1011\":5,\"1037\":3,\"1052\":2,\"1054\":1,\"1055\":17,\"1073\":4,\"1079\":2,\"1115\":1,\"1116\":2,\"1117\":3,\"1118\":4,\"1119\":18,\"1120\":1,\"1121\":2,\"1122\":7,\"1123\":5,\"1124\":15,\"1125\":4,\"1126\":8,\"1127\":6,\"1144\":1,\"1179\":1,\"1208\":2}}],[\"fprintln\",{\"1\":{\"1169\":2}}],[\"fprint\",{\"0\":{\"1169\":1},\"1\":{\"1169\":2}}],[\"fprintf\",{\"1\":{\"1045\":1,\"1047\":1,\"1055\":4,\"1073\":1,\"1169\":2,\"1173\":3}}],[\"fputc\",{\"1\":{\"90\":2}}],[\"fputs\",{\"1\":{\"90\":2}}],[\"ftx\",{\"1\":{\"703\":1,\"704\":1,\"705\":1}}],[\"f去直接搜索sha256\",{\"1\":{\"512\":1}}],[\"fc\",{\"1\":{\"448\":2}}],[\"f六个节点的集群里\",{\"1\":{\"435\":1}}],[\"fd\",{\"1\":{\"427\":1}}],[\"flyweightfactory\",{\"1\":{\"933\":2}}],[\"flyweight\",{\"1\":{\"931\":1,\"933\":4}}],[\"flexcoin\",{\"1\":{\"704\":1}}],[\"flip\",{\"1\":{\"547\":1}}],[\"float\",{\"1\":{\"1189\":2,\"1194\":1}}],[\"float32\",{\"1\":{\"1188\":1}}],[\"float64\",{\"1\":{\"288\":3,\"1034\":1,\"1161\":7,\"1188\":4,\"1192\":2,\"1199\":1,\"1207\":3}}],[\"flows\",{\"1\":{\"1121\":1}}],[\"flow\",{\"1\":{\"523\":1,\"1009\":1,\"1010\":1,\"1056\":1}}],[\"flushappendonlyfile函数的行为由服务器配置的appendfsync选项的值来决定\",{\"1\":{\"422\":1}}],[\"flushall\",{\"1\":{\"411\":1}}],[\"flushdb\",{\"1\":{\"411\":1,\"424\":1}}],[\"flush\",{\"1\":{\"357\":2,\"360\":4,\"377\":3,\"1153\":2}}],[\"flame\",{\"1\":{\"523\":1}}],[\"flames\",{\"1\":{\"523\":3}}],[\"flag不仅仅支持直接类型的形式解析\",{\"1\":{\"1162\":1}}],[\"flags中的属性\",{\"1\":{\"433\":1}}],[\"flags\",{\"0\":{\"991\":1},\"1\":{\"424\":1,\"426\":1,\"427\":1,\"435\":1,\"988\":2,\"991\":5,\"992\":1,\"1179\":1}}],[\"flag\",{\"0\":{\"1159\":1},\"1\":{\"330\":3,\"988\":1,\"1084\":1,\"1088\":2,\"1160\":2,\"1161\":31,\"1162\":6,\"1163\":16,\"1179\":1}}],[\"flash\",{\"0\":{\"163\":1},\"1\":{\"547\":1}}],[\"fmt\",{\"0\":{\"1166\":1},\"1\":{\"212\":1,\"244\":1,\"245\":1,\"318\":1,\"326\":1,\"447\":1,\"814\":2,\"820\":3,\"827\":4,\"833\":2,\"838\":2,\"844\":3,\"849\":2,\"855\":3,\"861\":4,\"867\":4,\"883\":1,\"905\":4,\"910\":9,\"915\":2,\"921\":1,\"927\":4,\"958\":4,\"959\":1,\"960\":4,\"972\":2,\"975\":2,\"977\":1,\"978\":3,\"990\":1,\"992\":5,\"993\":5,\"1001\":2,\"1005\":1,\"1010\":16,\"1011\":3,\"1019\":2,\"1026\":2,\"1045\":3,\"1047\":3,\"1055\":4,\"1063\":7,\"1067\":5,\"1072\":13,\"1073\":5,\"1074\":7,\"1088\":1,\"1095\":4,\"1097\":2,\"1099\":3,\"1100\":2,\"1119\":6,\"1120\":4,\"1122\":3,\"1124\":8,\"1126\":4,\"1127\":4,\"1138\":4,\"1144\":2,\"1146\":1,\"1153\":4,\"1161\":7,\"1162\":3,\"1163\":4,\"1166\":3,\"1167\":6,\"1168\":4,\"1169\":2,\"1170\":1,\"1171\":4,\"1172\":6,\"1173\":10,\"1174\":1,\"1181\":1,\"1188\":10,\"1189\":7,\"1190\":2,\"1191\":6,\"1192\":10,\"1193\":4,\"1198\":11,\"1199\":4,\"1200\":4,\"1206\":5,\"1207\":11,\"1208\":7,\"1209\":2,\"1210\":2,\"1211\":3,\"1212\":25,\"1237\":2,\"1240\":2}}],[\"fname\",{\"1\":{\"1242\":1}}],[\"fnonce\",{\"1\":{\"447\":1}}],[\"fn\",{\"1\":{\"152\":4,\"447\":2,\"448\":3,\"449\":2,\"450\":1,\"451\":3,\"456\":1,\"457\":1,\"458\":3,\"459\":1,\"460\":2,\"461\":2,\"462\":4,\"463\":3,\"467\":2,\"468\":3,\"472\":2,\"477\":1,\"478\":1,\"480\":4,\"481\":3,\"482\":1,\"483\":2,\"1055\":6}}],[\"fashioned\",{\"1\":{\"543\":1}}],[\"fastforward\",{\"1\":{\"976\":2}}],[\"faster\",{\"1\":{\"523\":1,\"543\":1,\"1118\":2}}],[\"fast\",{\"1\":{\"324\":9,\"523\":1}}],[\"fair\",{\"1\":{\"557\":1}}],[\"faint\",{\"1\":{\"523\":1}}],[\"failed\",{\"1\":{\"1055\":1,\"1072\":1,\"1079\":2,\"1099\":1,\"1208\":2}}],[\"failure\",{\"1\":{\"1055\":1,\"1074\":2}}],[\"failurereport\",{\"1\":{\"433\":1}}],[\"fail消息的实现\",{\"1\":{\"435\":1}}],[\"fail消息的正文由cluster\",{\"1\":{\"435\":1}}],[\"fail消息的正文\",{\"1\":{\"435\":1}}],[\"fail消息\",{\"1\":{\"434\":1}}],[\"fail\",{\"1\":{\"433\":1,\"435\":2,\"967\":3}}],[\"failover\",{\"1\":{\"426\":2,\"433\":3}}],[\"fantasize\",{\"1\":{\"523\":1}}],[\"falling\",{\"1\":{\"523\":1}}],[\"fall\",{\"1\":{\"523\":4}}],[\"falsefalse\",{\"1\":{\"297\":1}}],[\"false\",{\"1\":{\"200\":1,\"212\":1,\"213\":1,\"214\":2,\"216\":2,\"218\":1,\"219\":3,\"237\":1,\"276\":2,\"284\":6,\"291\":1,\"297\":4,\"299\":4,\"302\":1,\"306\":2,\"311\":1,\"329\":2,\"515\":3,\"523\":1,\"976\":3,\"980\":1,\"991\":1,\"1010\":5,\"1036\":1,\"1045\":1,\"1055\":3,\"1099\":1,\"1127\":2,\"1138\":2,\"1161\":3,\"1162\":1,\"1191\":4,\"1212\":2}}],[\"facade\",{\"1\":{\"925\":1}}],[\"facing\",{\"1\":{\"543\":1}}],[\"fact\",{\"1\":{\"523\":1,\"537\":1,\"547\":1}}],[\"factory\",{\"1\":{\"458\":6,\"523\":1,\"883\":6}}],[\"factor\",{\"0\":{\"164\":1},\"1\":{\"150\":2,\"159\":1,\"395\":1,\"1125\":1}}],[\"facebook\",{\"1\":{\"533\":1,\"534\":1}}],[\"face\",{\"1\":{\"523\":2,\"543\":2}}],[\"farmers\",{\"1\":{\"523\":1}}],[\"far\",{\"1\":{\"523\":3,\"543\":1,\"547\":1,\"1126\":1}}],[\"fatalln\",{\"1\":{\"1079\":3,\"1178\":2}}],[\"fatalf\",{\"1\":{\"975\":2,\"976\":1,\"1072\":1,\"1178\":2}}],[\"fatal\",{\"1\":{\"516\":2,\"517\":2,\"967\":2,\"976\":2,\"978\":2,\"1047\":1,\"1063\":3,\"1067\":4,\"1072\":5,\"1073\":1,\"1095\":4,\"1099\":2,\"1125\":1,\"1178\":2}}],[\"favorite\",{\"1\":{\"479\":4}}],[\"favicon\",{\"1\":{\"195\":1}}],[\"fake\",{\"1\":{\"422\":1}}],[\"family\",{\"1\":{\"90\":4,\"523\":1,\"540\":2,\"547\":2}}],[\"fuck\",{\"1\":{\"808\":1}}],[\"fulcrum\",{\"1\":{\"704\":1}}],[\"fullpath\",{\"1\":{\"1053\":2,\"1055\":2}}],[\"full\",{\"1\":{\"195\":1,\"523\":4,\"1179\":1}}],[\"fullstack\",{\"1\":{\"3\":1,\"191\":1}}],[\"furture\",{\"1\":{\"563\":1}}],[\"fun\",{\"1\":{\"1139\":4}}],[\"funk使用反射\",{\"1\":{\"1017\":1}}],[\"funk包进行编码\",{\"1\":{\"1017\":1}}],[\"funnel\",{\"1\":{\"808\":1}}],[\"funny\",{\"1\":{\"563\":2}}],[\"funcval\",{\"1\":{\"1135\":1}}],[\"funcfunc\",{\"1\":{\"517\":1}}],[\"functions\",{\"1\":{\"459\":1,\"1009\":1,\"1119\":3}}],[\"function\",{\"1\":{\"90\":1,\"194\":1,\"200\":1,\"447\":2,\"467\":1,\"547\":1,\"956\":1,\"1119\":1,\"1124\":2,\"1126\":1}}],[\"func\",{\"1\":{\"90\":1,\"206\":1,\"208\":3,\"209\":2,\"210\":2,\"211\":2,\"212\":4,\"213\":3,\"214\":3,\"215\":2,\"216\":5,\"217\":2,\"218\":2,\"219\":2,\"226\":1,\"227\":1,\"228\":2,\"229\":1,\"230\":1,\"231\":2,\"232\":1,\"237\":1,\"238\":1,\"239\":2,\"240\":1,\"242\":1,\"243\":1,\"244\":2,\"245\":2,\"246\":1,\"249\":3,\"250\":3,\"252\":4,\"253\":1,\"254\":1,\"255\":1,\"257\":2,\"258\":1,\"259\":1,\"260\":1,\"261\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"267\":1,\"268\":2,\"275\":2,\"276\":1,\"277\":1,\"278\":2,\"279\":2,\"280\":3,\"281\":1,\"282\":1,\"283\":1,\"284\":3,\"285\":2,\"286\":1,\"287\":1,\"288\":1,\"290\":1,\"291\":1,\"293\":1,\"294\":2,\"295\":2,\"296\":2,\"297\":3,\"298\":3,\"299\":3,\"300\":1,\"301\":5,\"302\":1,\"303\":1,\"304\":1,\"305\":2,\"307\":2,\"308\":1,\"311\":2,\"312\":1,\"313\":3,\"315\":1,\"317\":1,\"318\":1,\"319\":2,\"320\":2,\"321\":2,\"322\":1,\"323\":2,\"324\":1,\"325\":2,\"326\":1,\"327\":3,\"328\":2,\"329\":4,\"330\":1,\"331\":1,\"332\":1,\"334\":1,\"335\":2,\"336\":7,\"514\":2,\"515\":1,\"516\":4,\"517\":1,\"814\":5,\"820\":15,\"827\":12,\"833\":9,\"838\":6,\"844\":8,\"849\":5,\"855\":6,\"861\":4,\"867\":12,\"874\":5,\"875\":8,\"883\":4,\"890\":2,\"898\":2,\"899\":6,\"905\":5,\"910\":7,\"915\":5,\"921\":2,\"927\":3,\"933\":1,\"939\":2,\"948\":2,\"949\":1,\"950\":1,\"958\":4,\"959\":6,\"960\":8,\"967\":6,\"968\":2,\"970\":2,\"972\":5,\"973\":2,\"975\":5,\"976\":2,\"977\":6,\"978\":9,\"979\":4,\"980\":6,\"981\":8,\"990\":1,\"992\":3,\"993\":5,\"997\":1,\"1001\":2,\"1005\":2,\"1010\":15,\"1011\":8,\"1019\":10,\"1035\":2,\"1036\":2,\"1037\":2,\"1045\":4,\"1047\":4,\"1050\":2,\"1051\":1,\"1052\":2,\"1053\":3,\"1054\":2,\"1055\":7,\"1056\":1,\"1063\":6,\"1067\":3,\"1072\":7,\"1073\":6,\"1074\":1,\"1079\":1,\"1088\":1,\"1093\":6,\"1095\":1,\"1097\":2,\"1099\":3,\"1100\":3,\"1119\":4,\"1120\":3,\"1122\":1,\"1124\":4,\"1125\":1,\"1126\":4,\"1127\":4,\"1135\":1,\"1138\":8,\"1139\":1,\"1145\":4,\"1146\":3,\"1161\":2,\"1162\":1,\"1163\":4,\"1167\":3,\"1168\":3,\"1169\":3,\"1171\":3,\"1172\":4,\"1173\":3,\"1178\":10,\"1179\":2,\"1180\":3,\"1181\":2,\"1182\":1,\"1188\":3,\"1189\":1,\"1190\":1,\"1191\":3,\"1192\":4,\"1193\":6,\"1198\":4,\"1199\":2,\"1200\":4,\"1206\":4,\"1207\":14,\"1208\":5,\"1209\":2,\"1210\":2,\"1211\":5,\"1212\":53,\"1225\":1,\"1237\":1,\"1238\":1,\"1240\":2,\"1241\":1,\"1242\":1}}],[\"future\",{\"1\":{\"543\":3,\"547\":1,\"563\":1},\"2\":{\"565\":1}}],[\"fused\",{\"1\":{\"523\":1}}],[\"fuse\",{\"1\":{\"523\":1}}],[\"fusion\",{\"1\":{\"523\":11}}],[\"followed\",{\"1\":{\"1124\":1}}],[\"following\",{\"1\":{\"547\":1,\"1120\":1,\"1125\":1}}],[\"folder2\",{\"1\":{\"915\":7}}],[\"folder1\",{\"1\":{\"915\":5}}],[\"folder\",{\"1\":{\"915\":9}}],[\"fowler\",{\"1\":{\"827\":3}}],[\"font\",{\"1\":{\"731\":1}}],[\"four\",{\"1\":{\"523\":1}}],[\"found\",{\"1\":{\"467\":1,\"547\":1,\"563\":1}}],[\"foundation\",{\"1\":{\"90\":1,\"1140\":1}}],[\"focus\",{\"1\":{\"519\":1}}],[\"food\",{\"1\":{\"977\":4}}],[\"foo`成功mock\",{\"1\":{\"958\":1}}],[\"foo\",{\"1\":{\"460\":1,\"958\":10,\"960\":12,\"1005\":3}}],[\"foreach进行\",{\"1\":{\"1019\":1}}],[\"foreach\",{\"1\":{\"1019\":3}}],[\"foreign\",{\"1\":{\"563\":1}}],[\"forever\",{\"1\":{\"523\":1}}],[\"forged\",{\"1\":{\"537\":1}}],[\"forgot\",{\"1\":{\"90\":1}}],[\"fortunately\",{\"1\":{\"523\":1}}],[\"forced\",{\"1\":{\"549\":1}}],[\"force\",{\"1\":{\"523\":4}}],[\"forces\",{\"1\":{\"523\":1}}],[\"forward\",{\"1\":{\"397\":1}}],[\"formvalue\",{\"1\":{\"1047\":2}}],[\"former\",{\"1\":{\"543\":1}}],[\"formed\",{\"1\":{\"523\":3}}],[\"forms\",{\"1\":{\"523\":1}}],[\"forming\",{\"1\":{\"523\":2}}],[\"form\",{\"1\":{\"345\":1,\"523\":3,\"547\":1,\"1055\":1,\"1127\":1}}],[\"formatted\",{\"1\":{\"1212\":2}}],[\"formatting\",{\"1\":{\"1197\":1}}],[\"formatuint\",{\"1\":{\"1198\":1}}],[\"formatfloat\",{\"1\":{\"1198\":4}}],[\"formatbool\",{\"1\":{\"1198\":1}}],[\"formatint\",{\"1\":{\"1019\":1,\"1198\":3}}],[\"format\",{\"0\":{\"482\":1},\"1\":{\"75\":1,\"482\":3,\"905\":4,\"1055\":1,\"1097\":2,\"1099\":2,\"1167\":1,\"1168\":1,\"1169\":1,\"1171\":3,\"1172\":1,\"1173\":1,\"1178\":3,\"1198\":1,\"1205\":1,\"1212\":2,\"1213\":1,\"1242\":1}}],[\"for\",{\"0\":{\"550\":1,\"1127\":1},\"1\":{\"49\":1,\"90\":3,\"192\":2,\"206\":1,\"208\":2,\"209\":1,\"210\":1,\"211\":1,\"212\":2,\"213\":2,\"214\":1,\"215\":1,\"216\":2,\"217\":1,\"218\":1,\"219\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":5,\"230\":5,\"231\":2,\"232\":2,\"235\":4,\"236\":2,\"237\":3,\"238\":3,\"239\":3,\"240\":5,\"241\":4,\"242\":2,\"243\":2,\"244\":3,\"245\":3,\"246\":3,\"249\":1,\"252\":3,\"253\":2,\"254\":2,\"255\":4,\"257\":4,\"258\":2,\"259\":5,\"260\":3,\"261\":3,\"262\":1,\"263\":3,\"264\":7,\"265\":10,\"266\":7,\"267\":3,\"268\":3,\"275\":3,\"276\":1,\"277\":2,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":3,\"285\":2,\"286\":1,\"287\":1,\"288\":1,\"290\":1,\"291\":4,\"293\":1,\"294\":4,\"295\":1,\"296\":1,\"300\":5,\"302\":2,\"303\":2,\"304\":2,\"305\":4,\"308\":2,\"311\":1,\"312\":2,\"313\":2,\"315\":1,\"317\":1,\"318\":1,\"319\":4,\"320\":2,\"321\":1,\"322\":2,\"323\":4,\"324\":4,\"325\":4,\"326\":1,\"330\":3,\"331\":3,\"332\":1,\"334\":3,\"335\":1,\"336\":3,\"361\":2,\"362\":5,\"368\":1,\"370\":1,\"371\":1,\"447\":2,\"458\":1,\"460\":2,\"473\":1,\"485\":1,\"486\":1,\"514\":1,\"519\":4,\"523\":12,\"537\":7,\"540\":1,\"543\":9,\"547\":6,\"548\":4,\"549\":2,\"550\":1,\"557\":7,\"560\":2,\"563\":2,\"814\":4,\"827\":2,\"833\":1,\"844\":2,\"867\":2,\"875\":1,\"883\":2,\"890\":1,\"899\":2,\"910\":6,\"915\":8,\"944\":3,\"945\":3,\"946\":2,\"947\":7,\"948\":7,\"949\":1,\"950\":2,\"967\":1,\"968\":1,\"970\":1,\"972\":1,\"979\":1,\"980\":3,\"989\":2,\"992\":1,\"997\":1,\"1011\":1,\"1019\":3,\"1052\":3,\"1054\":1,\"1055\":10,\"1056\":1,\"1072\":8,\"1073\":3,\"1074\":3,\"1088\":1,\"1099\":1,\"1118\":7,\"1119\":5,\"1120\":3,\"1124\":4,\"1127\":9,\"1143\":1,\"1146\":2,\"1153\":2,\"1163\":1,\"1179\":1,\"1181\":1,\"1188\":1,\"1192\":2,\"1193\":5,\"1206\":1,\"1211\":1}}],[\"fi\",{\"1\":{\"1026\":1}}],[\"fix\",{\"1\":{\"563\":2,\"1119\":1}}],[\"fixedzone\",{\"1\":{\"1208\":3}}],[\"fixed\",{\"1\":{\"152\":15,\"425\":1,\"1208\":1}}],[\"five\",{\"1\":{\"548\":1}}],[\"fight\",{\"1\":{\"547\":1}}],[\"fist\",{\"1\":{\"543\":1}}],[\"fish\",{\"1\":{\"523\":1}}],[\"fifty\",{\"1\":{\"523\":1}}],[\"fifo\",{\"1\":{\"425\":1,\"1136\":1}}],[\"fips\",{\"1\":{\"512\":1}}],[\"field的值\",{\"1\":{\"1241\":1}}],[\"fieldbyname\",{\"1\":{\"1190\":2,\"1191\":1,\"1192\":1}}],[\"fieldalign\",{\"1\":{\"1139\":1}}],[\"fieldmaskpb\",{\"1\":{\"1088\":1}}],[\"fieldmask\",{\"1\":{\"1088\":9}}],[\"fieldviolation\",{\"1\":{\"1074\":1}}],[\"fieldviolations\",{\"1\":{\"1074\":1}}],[\"fields\",{\"1\":{\"1055\":1,\"1088\":4,\"1192\":2,\"1241\":3}}],[\"field2\",{\"1\":{\"407\":3}}],[\"field1\",{\"1\":{\"407\":3}}],[\"field\",{\"0\":{\"1088\":1},\"1\":{\"407\":9,\"543\":1,\"1074\":1,\"1088\":2,\"1089\":1,\"1188\":6,\"1192\":8,\"1194\":1,\"1241\":4}}],[\"final\",{\"1\":{\"1009\":1,\"1120\":1,\"1179\":1}}],[\"finally\",{\"1\":{\"523\":4}}],[\"finance\",{\"1\":{\"704\":2}}],[\"finest\",{\"1\":{\"523\":1}}],[\"finite\",{\"1\":{\"523\":1,\"1008\":1}}],[\"finishrequest\",{\"1\":{\"1055\":1}}],[\"finished\",{\"1\":{\"447\":3,\"448\":1,\"523\":1,\"537\":1,\"543\":1,\"560\":1}}],[\"finish\",{\"1\":{\"230\":1,\"1119\":4}}],[\"findrunnable\",{\"1\":{\"1135\":1}}],[\"findrepeatnumber\",{\"1\":{\"275\":2}}],[\"findtransmatching\",{\"1\":{\"1011\":2}}],[\"findtargetsumways\",{\"1\":{\"239\":1}}],[\"find\",{\"1\":{\"396\":1,\"543\":1,\"563\":1,\"1055\":2,\"1229\":2,\"1232\":2,\"1233\":1,\"1235\":1}}],[\"findnthdigit\",{\"1\":{\"317\":1}}],[\"findnumberin2darray\",{\"1\":{\"276\":1}}],[\"findindex\",{\"1\":{\"279\":2}}],[\"findlength\",{\"1\":{\"259\":1}}],[\"findlengthoflcis\",{\"1\":{\"258\":1}}],[\"findmaxform\",{\"1\":{\"240\":1}}],[\"findsubsequences\",{\"1\":{\"217\":1}}],[\"findunique\",{\"1\":{\"194\":1}}],[\"fib\",{\"1\":{\"226\":1,\"281\":1}}],[\"fitness\",{\"1\":{\"90\":1}}],[\"firstname\",{\"1\":{\"1242\":1}}],[\"firstuniqchar\",{\"1\":{\"322\":1}}],[\"first\",{\"1\":{\"90\":3,\"468\":6,\"519\":1,\"523\":1,\"543\":4,\"547\":3,\"557\":2,\"563\":1,\"710\":1,\"977\":2,\"1115\":2,\"1120\":1,\"1124\":1,\"1137\":1}}],[\"fill\",{\"1\":{\"547\":1}}],[\"fills\",{\"1\":{\"523\":1}}],[\"filled\",{\"1\":{\"523\":2}}],[\"filed\",{\"1\":{\"1218\":1}}],[\"fileobj\",{\"1\":{\"1169\":2}}],[\"files\",{\"1\":{\"989\":1,\"1026\":1,\"1052\":1,\"1118\":1}}],[\"filesystem\",{\"1\":{\"78\":1}}],[\"filename\",{\"1\":{\"981\":1}}],[\"file3\",{\"1\":{\"915\":4}}],[\"file2\",{\"1\":{\"915\":4}}],[\"file1\",{\"1\":{\"915\":4}}],[\"file\",{\"1\":{\"74\":1,\"75\":1,\"90\":5,\"357\":2,\"414\":1,\"447\":2,\"448\":38,\"449\":8,\"450\":19,\"451\":9,\"915\":11,\"991\":2,\"1118\":3,\"1153\":5,\"1172\":4,\"1173\":3,\"1179\":2}}],[\"filter\",{\"1\":{\"54\":1}}],[\"fearful\",{\"1\":{\"563\":1}}],[\"feature\",{\"1\":{\"152\":6,\"463\":1,\"523\":1,\"563\":1}}],[\"fell\",{\"1\":{\"523\":1}}],[\"few\",{\"0\":{\"550\":1},\"1\":{\"519\":1,\"537\":1,\"540\":1,\"547\":2,\"548\":1,\"549\":1,\"557\":1,\"563\":1}}],[\"fetch\",{\"1\":{\"195\":1,\"458\":2,\"988\":1}}],[\"fee吧\",{\"1\":{\"800\":1}}],[\"feedback\",{\"1\":{\"519\":1}}],[\"feeling\",{\"1\":{\"557\":1}}],[\"feelings\",{\"1\":{\"548\":1}}],[\"feel\",{\"1\":{\"519\":1,\"523\":2,\"547\":1,\"557\":1,\"560\":2}}],[\"fees\",{\"1\":{\"152\":18}}],[\"fee\",{\"1\":{\"152\":32}}],[\"fee支持组级别的费用\",{\"1\":{\"152\":1}}],[\"fedora\",{\"1\":{\"57\":1}}],[\"feb5d9fea6a5\",{\"1\":{\"51\":1}}],[\"f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86d\",{\"1\":{\"55\":1}}],[\"f\",{\"1\":{\"54\":2,\"60\":1,\"71\":1,\"284\":1,\"731\":1,\"883\":1,\"905\":1,\"915\":10,\"933\":2,\"1009\":1,\"1026\":1,\"1037\":1,\"1145\":4,\"1172\":4,\"1173\":3,\"1189\":2,\"1198\":1,\"1199\":3}}],[\"f42f6d9c3578\",{\"1\":{\"51\":3}}],[\"fscanf\",{\"1\":{\"1172\":2}}],[\"fscanln\",{\"1\":{\"1172\":2}}],[\"fscan\",{\"0\":{\"1172\":1},\"1\":{\"1172\":5}}],[\"fsm3\",{\"1\":{\"1009\":1}}],[\"fsm\",{\"1\":{\"1009\":2,\"1010\":14,\"1011\":10},\"2\":{\"1013\":1}}],[\"fsync\",{\"1\":{\"358\":5,\"360\":3}}],[\"fs\",{\"1\":{\"46\":1,\"51\":1,\"58\":1,\"61\":2,\"448\":4,\"449\":2,\"450\":1,\"451\":6}}],[\"fragility\",{\"1\":{\"548\":2}}],[\"framework\",{\"1\":{\"3\":2,\"191\":1}}],[\"fred\",{\"1\":{\"722\":1}}],[\"freshly\",{\"1\":{\"1055\":1}}],[\"fresh\",{\"1\":{\"560\":1}}],[\"freshman\",{\"1\":{\"547\":2}}],[\"freedom\",{\"1\":{\"540\":1,\"547\":2}}],[\"freely\",{\"1\":{\"523\":1}}],[\"free链表节点是一个个控制块\",{\"1\":{\"377\":1}}],[\"free链表上也有控制块\",{\"1\":{\"377\":1}}],[\"free\",{\"1\":{\"90\":2,\"376\":1,\"377\":2,\"393\":1,\"394\":2,\"402\":1,\"519\":1,\"523\":1,\"534\":1,\"547\":1}}],[\"fruit\",{\"1\":{\"547\":1}}],[\"fri表示周一\",{\"1\":{\"1002\":1}}],[\"friends\",{\"0\":{\"550\":1},\"1\":{\"547\":2}}],[\"frightening\",{\"1\":{\"523\":1}}],[\"frost\",{\"1\":{\"523\":2}}],[\"front\",{\"1\":{\"336\":4,\"523\":1}}],[\"frontend\",{\"0\":{\"1261\":1},\"1\":{\"3\":1},\"2\":{\"201\":1}}],[\"fromincomingcontext\",{\"1\":{\"1094\":1,\"1095\":1,\"1099\":1}}],[\"fromstate\",{\"1\":{\"1011\":5}}],[\"from数组记录了当前节点正在从其他节点导入的槽\",{\"1\":{\"432\":1}}],[\"from=333\",{\"1\":{\"977\":1}}],[\"from=\",{\"1\":{\"194\":1}}],[\"from指定基础镜像\",{\"0\":{\"57\":1}}],[\"from\",{\"0\":{\"1117\":1,\"1123\":1},\"1\":{\"49\":1,\"56\":2,\"57\":4,\"58\":2,\"90\":3,\"152\":4,\"192\":1,\"194\":3,\"199\":1,\"345\":1,\"362\":2,\"371\":1,\"432\":3,\"450\":1,\"451\":3,\"459\":2,\"460\":1,\"468\":5,\"472\":2,\"473\":3,\"477\":1,\"478\":1,\"479\":2,\"480\":4,\"481\":7,\"482\":1,\"523\":17,\"537\":2,\"540\":1,\"543\":2,\"547\":2,\"550\":1,\"563\":4,\"927\":1,\"991\":1,\"1011\":4,\"1055\":4,\"1072\":1,\"1115\":1,\"1118\":3,\"1119\":1,\"1121\":3,\"1123\":3,\"1124\":5,\"1125\":2,\"1126\":3,\"1127\":6,\"1179\":1}}],[\"rdwr|os\",{\"1\":{\"1181\":1}}],[\"rdwr\",{\"1\":{\"1172\":2}}],[\"rdb的文件结构\",{\"1\":{\"418\":1}}],[\"rdb文件中的每个key\",{\"1\":{\"420\":1}}],[\"rdb文件的最开头是redis部分\",{\"1\":{\"418\":1}}],[\"rdb文件的结构\",{\"0\":{\"418\":1}}],[\"rdb文件的创建与载入\",{\"0\":{\"416\":1}}],[\"rdb文件载入时服务器会一直阻塞直到载入完成为止\",{\"1\":{\"416\":1}}],[\"rdb\",{\"1\":{\"413\":14,\"414\":13,\"419\":1,\"420\":9,\"976\":6}}],[\"rlock\",{\"1\":{\"1143\":2}}],[\"rlt\",{\"1\":{\"252\":4}}],[\"rna\",{\"1\":{\"523\":1}}],[\"rs\",{\"1\":{\"447\":15,\"448\":2,\"449\":2,\"464\":1,\"468\":1,\"475\":1}}],[\"rson\",{\"1\":{\"313\":4,\"950\":4}}],[\"rcvbuf\",{\"1\":{\"427\":1}}],[\"rbd\",{\"1\":{\"413\":1}}],[\"rpath\",{\"1\":{\"1055\":7}}],[\"rpoplpush\",{\"1\":{\"405\":3}}],[\"rpop\",{\"1\":{\"405\":1}}],[\"rpushx\",{\"1\":{\"405\":1}}],[\"rpush\",{\"1\":{\"405\":1}}],[\"rpc是全称叫remote\",{\"1\":{\"1063\":1}}],[\"rpc请求\",{\"1\":{\"137\":1}}],[\"rpc\",{\"0\":{\"137\":1},\"1\":{\"1010\":1,\"1063\":6,\"1067\":2,\"1072\":6,\"1079\":1,\"1080\":3,\"1097\":1,\"1099\":2,\"1144\":1}}],[\"rh\",{\"1\":{\"329\":2}}],[\"rhead\",{\"1\":{\"278\":5}}],[\"rk++\",{\"1\":{\"320\":1}}],[\"rk+1\",{\"1\":{\"320\":3}}],[\"rk\",{\"1\":{\"320\":2}}],[\"r+1\",{\"1\":{\"284\":1}}],[\"ritchie\",{\"1\":{\"827\":3}}],[\"river\",{\"1\":{\"543\":1}}],[\"richard\",{\"1\":{\"827\":3}}],[\"rich\",{\"1\":{\"537\":1}}],[\"risman\",{\"1\":{\"653\":1}}],[\"rises\",{\"1\":{\"547\":1}}],[\"rise\",{\"1\":{\"523\":1}}],[\"risktier\",{\"1\":{\"152\":1}}],[\"risk\",{\"1\":{\"152\":1,\"1055\":1}}],[\"ripples\",{\"1\":{\"523\":1}}],[\"rights\",{\"1\":{\"547\":5}}],[\"righth\",{\"1\":{\"328\":2}}],[\"right向左移动\",{\"1\":{\"300\":1}}],[\"right列遍历完了\",{\"1\":{\"300\":1}}],[\"right列的从上到下遍历\",{\"1\":{\"300\":1}}],[\"right>=left\",{\"1\":{\"300\":1}}],[\"rightright\",{\"1\":{\"283\":7}}],[\"right\",{\"1\":{\"250\":1,\"279\":1,\"297\":6,\"298\":3,\"299\":12,\"300\":3,\"303\":2,\"304\":2,\"305\":2,\"307\":7,\"326\":6,\"327\":1,\"328\":1,\"329\":3,\"519\":1,\"543\":1,\"547\":1,\"548\":1,\"563\":1,\"1052\":1}}],[\"r=pg`\",{\"1\":{\"194\":1}}],[\"round\",{\"1\":{\"1207\":1,\"1212\":1}}],[\"routine\",{\"1\":{\"1124\":4}}],[\"route\",{\"1\":{\"200\":1,\"1055\":1}}],[\"routergroup是当前的路由\",{\"1\":{\"1052\":1}}],[\"routergroup\",{\"1\":{\"1052\":3,\"1053\":3}}],[\"router\",{\"1\":{\"192\":1,\"972\":3,\"1052\":1}}],[\"room\",{\"1\":{\"543\":1}}],[\"rootcmd\",{\"1\":{\"990\":2,\"991\":4,\"992\":1,\"993\":6}}],[\"root==nil\",{\"1\":{\"304\":1,\"305\":1}}],[\"root\",{\"1\":{\"46\":1,\"47\":1,\"68\":2,\"250\":7,\"279\":2,\"298\":4,\"299\":6,\"303\":2,\"304\":2,\"305\":2,\"307\":7,\"327\":4,\"328\":4,\"329\":10,\"975\":1,\"989\":2,\"990\":1,\"1053\":14,\"1055\":6}}],[\"root文件系统\",{\"1\":{\"46\":1}}],[\"rotation\",{\"1\":{\"543\":1}}],[\"rotate\",{\"1\":{\"543\":1}}],[\"roads\",{\"1\":{\"547\":1}}],[\"road\",{\"1\":{\"540\":1,\"543\":1}}],[\"rock\",{\"1\":{\"523\":1}}],[\"row\",{\"1\":{\"358\":5,\"1218\":1}}],[\"rollback\",{\"1\":{\"356\":1,\"424\":1,\"975\":1}}],[\"roll\",{\"1\":{\"356\":1,\"362\":1,\"540\":1}}],[\"role\",{\"1\":{\"194\":1,\"200\":1}}],[\"rorse\",{\"1\":{\"266\":2}}],[\"rose\",{\"1\":{\"266\":2,\"523\":1,\"915\":6}}],[\"ros\",{\"1\":{\"266\":2}}],[\"robfig\",{\"0\":{\"999\":1},\"1\":{\"999\":1,\"1000\":1,\"1001\":1}}],[\"robert\",{\"1\":{\"628\":1}}],[\"robot\",{\"1\":{\"557\":1}}],[\"robbers\",{\"1\":{\"523\":1}}],[\"robj\",{\"1\":{\"400\":1}}],[\"robrange\",{\"1\":{\"249\":3}}],[\"rob\",{\"1\":{\"249\":1,\"250\":1}}],[\"ro\",{\"1\":{\"74\":1}}],[\"rwmutex\",{\"0\":{\"1143\":1},\"1\":{\"1141\":1,\"1143\":13}}],[\"rwc\",{\"1\":{\"1055\":17}}],[\"rw\",{\"1\":{\"74\":1,\"967\":3,\"1055\":3}}],[\"ralph\",{\"1\":{\"827\":3}}],[\"ravaged\",{\"1\":{\"560\":1}}],[\"racing\",{\"1\":{\"543\":1}}],[\"race\",{\"1\":{\"543\":1,\"1141\":1}}],[\"rails\",{\"0\":{\"721\":1},\"1\":{\"721\":6,\"724\":2,\"725\":1}}],[\"raise\",{\"1\":{\"543\":2}}],[\"raid\",{\"1\":{\"61\":1}}],[\"rare\",{\"1\":{\"537\":1}}],[\"rays\",{\"1\":{\"523\":1}}],[\"radius\",{\"1\":{\"523\":2}}],[\"radiation\",{\"1\":{\"523\":1}}],[\"rage\",{\"1\":{\"523\":1}}],[\"rapidly\",{\"1\":{\"523\":4}}],[\"rawpath\",{\"1\":{\"1055\":2}}],[\"raw\",{\"1\":{\"483\":2,\"523\":1}}],[\"raw或者embstr\",{\"1\":{\"402\":1}}],[\"raft\",{\"1\":{\"387\":1}}],[\"rabbit\",{\"1\":{\"264\":2}}],[\"rabbitmq\",{\"1\":{\"51\":3}}],[\"rabbbit\",{\"1\":{\"264\":4}}],[\"ran\",{\"1\":{\"560\":1}}],[\"rangeargs\",{\"1\":{\"991\":1}}],[\"range序列语法时\",{\"1\":{\"468\":1}}],[\"range\",{\"0\":{\"1127\":1},\"1\":{\"229\":1,\"230\":1,\"237\":1,\"240\":3,\"246\":1,\"252\":1,\"253\":1,\"255\":1,\"257\":1,\"259\":1,\"260\":1,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"277\":1,\"279\":1,\"284\":1,\"291\":1,\"302\":1,\"312\":1,\"330\":2,\"331\":1,\"479\":6,\"814\":2,\"833\":1,\"844\":2,\"867\":2,\"875\":1,\"890\":1,\"915\":1,\"968\":1,\"972\":1,\"979\":1,\"980\":3,\"1011\":1,\"1019\":2,\"1055\":1,\"1074\":2,\"1088\":1,\"1099\":1,\"1127\":4,\"1163\":2,\"1206\":1,\"1211\":1}}],[\"randomness\",{\"1\":{\"523\":1}}],[\"randomly\",{\"1\":{\"523\":1}}],[\"random\",{\"1\":{\"194\":2,\"308\":3}}],[\"rand\",{\"1\":{\"192\":1}}],[\"rather\",{\"1\":{\"1179\":1}}],[\"ratio\",{\"1\":{\"152\":4}}],[\"ratelimit\",{\"1\":{\"1038\":1}}],[\"rate的介绍和使用\",{\"0\":{\"1033\":1}}],[\"rate`\",{\"1\":{\"152\":6}}],[\"rate\",{\"1\":{\"152\":35,\"540\":2,\"1033\":1,\"1038\":2}}],[\"r\",{\"0\":{\"1054\":1},\"1\":{\"58\":1,\"258\":5,\"266\":2,\"284\":12,\"305\":5,\"326\":4,\"335\":5,\"479\":1,\"483\":4,\"516\":8,\"939\":1,\"967\":6,\"972\":4,\"1034\":1,\"1037\":3,\"1045\":11,\"1047\":6,\"1050\":3,\"1053\":1,\"1054\":1,\"1055\":11,\"1073\":4,\"1095\":1,\"1100\":4,\"1172\":3,\"1193\":6,\"1200\":6}}],[\"rfc3339\",{\"1\":{\"1097\":1,\"1099\":1}}],[\"rfc\",{\"1\":{\"1047\":1,\"1055\":2}}],[\"rf\",{\"1\":{\"58\":1}}],[\"rm是容器退出后自动删除容器\",{\"1\":{\"50\":1}}],[\"rm\",{\"1\":{\"50\":3,\"55\":7,\"58\":3,\"71\":2,\"74\":2,\"1026\":1}}],[\"rugpull\",{\"1\":{\"701\":1}}],[\"rush\",{\"1\":{\"704\":1}}],[\"rushed\",{\"1\":{\"543\":1}}],[\"rushes\",{\"1\":{\"523\":1}}],[\"rust会自动解引用为\",{\"1\":{\"481\":1}}],[\"rust语言中字符串相当于新手练级中相当大的一个boss了\",{\"1\":{\"467\":1}}],[\"rust有很多方式创建一个全局变量\",{\"1\":{\"464\":1}}],[\"rust要求必须使用unsafe的语法块才能访问和修改static变量\",{\"1\":{\"457\":1}}],[\"rustc\",{\"1\":{\"447\":7}}],[\"rust的错误处理可谓是集百家之长\",{\"1\":{\"446\":1}}],[\"rust错误处理\",{\"0\":{\"446\":1}}],[\"rust基础学习\",{\"0\":{\"443\":1}}],[\"rust都可以编写\",{\"1\":{\"109\":1}}],[\"rust\",{\"0\":{\"86\":1,\"454\":1,\"467\":1,\"490\":1},\"1\":{\"3\":1,\"126\":1,\"446\":1,\"447\":10,\"448\":1,\"450\":2,\"451\":1,\"459\":1,\"460\":1,\"463\":1,\"471\":4,\"473\":1,\"474\":3,\"477\":3,\"478\":3,\"479\":14,\"480\":2,\"481\":4,\"482\":2},\"2\":{\"87\":1,\"444\":1,\"445\":1,\"452\":1,\"453\":1,\"465\":1,\"466\":1,\"488\":1,\"489\":1,\"491\":1,\"492\":1}}],[\"rubbed\",{\"1\":{\"523\":1}}],[\"rubs\",{\"1\":{\"523\":1}}],[\"ruby\",{\"0\":{\"721\":1},\"1\":{\"57\":1,\"721\":3}}],[\"rune\",{\"1\":{\"1200\":9}}],[\"runlockslow\",{\"1\":{\"1143\":2}}],[\"runlock\",{\"1\":{\"1143\":2}}],[\"runnext\",{\"1\":{\"1134\":2,\"1137\":2}}],[\"running\",{\"1\":{\"425\":1,\"426\":1,\"447\":3,\"448\":1,\"523\":1,\"560\":1,\"972\":1,\"1011\":2,\"1055\":1,\"1116\":3,\"1118\":2,\"1119\":2}}],[\"runqempty\",{\"1\":{\"1135\":1}}],[\"runqgrab\",{\"1\":{\"1135\":1}}],[\"runqget\",{\"1\":{\"1135\":2}}],[\"runqsteal\",{\"1\":{\"1135\":1}}],[\"runqput\",{\"1\":{\"1135\":2}}],[\"runq\",{\"1\":{\"1134\":2,\"1135\":2}}],[\"runqtail\",{\"1\":{\"1134\":2}}],[\"runqhead\",{\"1\":{\"1134\":2}}],[\"runhooks\",{\"1\":{\"1055\":4}}],[\"run函数里面是这样的\",{\"1\":{\"1054\":1}}],[\"run启动gin\",{\"1\":{\"1050\":1}}],[\"run=user\",{\"1\":{\"978\":1}}],[\"run=sort\",{\"1\":{\"967\":1}}],[\"run=testmyfunc\",{\"1\":{\"978\":1}}],[\"run=testmockxxx\",{\"1\":{\"959\":2}}],[\"run=testdosomethingwithredis\",{\"1\":{\"976\":1}}],[\"run=testshould\",{\"1\":{\"975\":1}}],[\"run=testgetresultbyapi\",{\"1\":{\"973\":1}}],[\"run=testxxx\",{\"1\":{\"961\":1}}],[\"run=test\",{\"1\":{\"960\":1,\"972\":1}}],[\"runtime\",{\"1\":{\"956\":1,\"1055\":1,\"1079\":1,\"1125\":2,\"1132\":3,\"1133\":2,\"1134\":4,\"1135\":7,\"1137\":21,\"1139\":11,\"1142\":8,\"1143\":4,\"1144\":3,\"1146\":5}}],[\"runparallel\",{\"1\":{\"899\":2}}],[\"runid参数的值和源sentinel的运行id一致\",{\"1\":{\"426\":1}}],[\"runid参数\",{\"1\":{\"426\":1}}],[\"runid参\",{\"1\":{\"426\":1}}],[\"runid>\",{\"1\":{\"426\":1}}],[\"runid\",{\"1\":{\"426\":1}}],[\"run\",{\"0\":{\"58\":1,\"1054\":1},\"1\":{\"50\":2,\"55\":2,\"56\":2,\"58\":20,\"60\":1,\"64\":4,\"66\":3,\"68\":2,\"74\":5,\"90\":2,\"192\":1,\"425\":2,\"426\":1,\"447\":6,\"448\":2,\"475\":1,\"516\":2,\"517\":2,\"560\":1,\"743\":2,\"814\":2,\"959\":1,\"967\":3,\"968\":1,\"972\":5,\"973\":1,\"975\":2,\"976\":2,\"978\":2,\"979\":1,\"980\":1,\"988\":2,\"989\":2,\"990\":4,\"991\":1,\"992\":3,\"993\":4,\"1005\":2,\"1010\":1,\"1025\":2,\"1026\":4,\"1050\":2,\"1054\":1,\"1055\":2,\"1067\":2,\"1100\":1,\"1118\":3,\"1119\":7,\"1120\":1,\"1126\":1,\"1138\":1,\"1146\":1,\"1161\":2,\"1162\":1,\"1163\":2,\"1219\":2},\"2\":{\"561\":1,\"562\":1}}],[\"rules\",{\"0\":{\"16\":1},\"2\":{\"30\":1,\"44\":1}}],[\"reentersyscall\",{\"1\":{\"1135\":1}}],[\"render\",{\"1\":{\"1118\":1}}],[\"rendering\",{\"1\":{\"1118\":4}}],[\"rent\",{\"1\":{\"111\":1}}],[\"retrying\",{\"1\":{\"1055\":1}}],[\"ret\",{\"1\":{\"973\":3,\"978\":4,\"1132\":2}}],[\"returnobj\",{\"1\":{\"1052\":1,\"1053\":1}}],[\"returns\",{\"1\":{\"1051\":1,\"1055\":3,\"1067\":2,\"1072\":6,\"1079\":1,\"1080\":3,\"1119\":2}}],[\"returning\",{\"1\":{\"1010\":3,\"1019\":1}}],[\"returned\",{\"0\":{\"549\":1},\"1\":{\"1055\":4,\"1119\":1}}],[\"return\",{\"1\":{\"90\":4,\"152\":2,\"194\":6,\"195\":2,\"200\":3,\"206\":1,\"208\":2,\"209\":3,\"210\":3,\"211\":3,\"212\":5,\"213\":3,\"214\":4,\"215\":1,\"216\":3,\"217\":1,\"218\":1,\"219\":1,\"226\":2,\"227\":2,\"228\":3,\"229\":1,\"230\":1,\"231\":3,\"232\":1,\"237\":2,\"238\":1,\"239\":7,\"240\":1,\"242\":1,\"243\":1,\"244\":4,\"245\":4,\"246\":1,\"249\":6,\"250\":5,\"252\":7,\"253\":1,\"254\":1,\"255\":2,\"257\":3,\"258\":2,\"259\":1,\"260\":1,\"261\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":3,\"275\":4,\"276\":2,\"277\":1,\"278\":2,\"279\":4,\"280\":3,\"281\":2,\"282\":2,\"283\":1,\"284\":7,\"285\":3,\"286\":3,\"287\":1,\"288\":2,\"290\":1,\"291\":1,\"293\":1,\"294\":2,\"295\":3,\"296\":4,\"297\":7,\"298\":2,\"299\":6,\"300\":2,\"301\":3,\"302\":1,\"303\":1,\"304\":2,\"305\":2,\"307\":5,\"308\":2,\"311\":2,\"312\":2,\"313\":1,\"315\":1,\"317\":1,\"318\":2,\"319\":4,\"320\":3,\"321\":3,\"322\":2,\"323\":3,\"324\":1,\"325\":5,\"326\":1,\"327\":3,\"328\":4,\"329\":10,\"330\":1,\"331\":1,\"332\":2,\"334\":1,\"335\":1,\"336\":5,\"429\":1,\"436\":2,\"446\":1,\"450\":3,\"451\":1,\"514\":2,\"515\":4,\"516\":4,\"523\":2,\"540\":2,\"543\":1,\"549\":2,\"814\":7,\"820\":5,\"827\":11,\"838\":3,\"844\":1,\"855\":4,\"867\":2,\"874\":1,\"875\":4,\"883\":5,\"890\":2,\"898\":2,\"899\":1,\"915\":1,\"927\":8,\"933\":2,\"948\":1,\"949\":1,\"958\":6,\"960\":11,\"967\":3,\"972\":2,\"973\":3,\"975\":4,\"976\":4,\"977\":4,\"978\":8,\"979\":6,\"980\":12,\"981\":4,\"1010\":13,\"1011\":8,\"1019\":3,\"1037\":1,\"1045\":1,\"1047\":9,\"1051\":1,\"1052\":2,\"1053\":2,\"1054\":1,\"1055\":26,\"1063\":3,\"1067\":2,\"1072\":8,\"1073\":3,\"1074\":4,\"1088\":3,\"1095\":1,\"1097\":1,\"1099\":6,\"1119\":1,\"1138\":1,\"1163\":3,\"1170\":1,\"1172\":1,\"1173\":1,\"1198\":2,\"1208\":2,\"1238\":3,\"1240\":2,\"1241\":1}}],[\"rewriting\",{\"1\":{\"956\":1}}],[\"rewrite\",{\"1\":{\"422\":1,\"1124\":1,\"1127\":1}}],[\"revoke\",{\"1\":{\"1045\":1}}],[\"revolution\",{\"1\":{\"569\":1}}],[\"revolutionize\",{\"1\":{\"563\":1}}],[\"reveal\",{\"1\":{\"563\":1}}],[\"reverseleftwords\",{\"1\":{\"335\":1}}],[\"reverselist\",{\"1\":{\"278\":2,\"295\":3}}],[\"reversewords\",{\"1\":{\"334\":1}}],[\"reversepairs\",{\"1\":{\"323\":1}}],[\"reverseprint\",{\"1\":{\"278\":1}}],[\"reverse\",{\"1\":{\"305\":2,\"335\":4}}],[\"rebuild405handlers\",{\"1\":{\"1052\":1}}],[\"rebuild404handlers\",{\"1\":{\"1052\":1}}],[\"rebirth\",{\"1\":{\"543\":1}}],[\"rebellion\",{\"1\":{\"523\":1}}],[\"reread\",{\"1\":{\"537\":1}}],[\"remain\",{\"1\":{\"1055\":1}}],[\"remaining\",{\"1\":{\"547\":1}}],[\"remembered\",{\"1\":{\"548\":1}}],[\"remember\",{\"1\":{\"523\":1,\"547\":1,\"1037\":1}}],[\"remoteaddr\",{\"1\":{\"1055\":4}}],[\"remote\",{\"1\":{\"60\":1}}],[\"removeextraslash\",{\"1\":{\"1055\":1}}],[\"remove\",{\"1\":{\"58\":1,\"480\":15,\"523\":1,\"867\":1,\"1230\":1}}],[\"regenletter\",{\"1\":{\"1053\":1}}],[\"registerhttphandlers\",{\"1\":{\"1193\":3}}],[\"registergreeteringhandler\",{\"1\":{\"1079\":1}}],[\"registergreeteringserver\",{\"1\":{\"1067\":1}}],[\"registeronhiteof\",{\"1\":{\"1055\":1}}],[\"register\",{\"1\":{\"833\":4,\"1063\":2,\"1079\":1,\"1242\":1}}],[\"registry\",{\"1\":{\"48\":10,\"49\":1,\"64\":1,\"73\":1}}],[\"regretful\",{\"1\":{\"537\":1}}],[\"regarded\",{\"1\":{\"523\":2}}],[\"refresh\",{\"1\":{\"1047\":1}}],[\"refreshing\",{\"1\":{\"547\":1}}],[\"refactoring\",{\"1\":{\"827\":3}}],[\"reflect的value类型就是go中每个字段的值信息\",{\"1\":{\"1189\":1}}],[\"reflect的两个主要类型是reflect\",{\"1\":{\"1187\":1}}],[\"reflect标准库源码\",{\"1\":{\"1188\":1}}],[\"reflecttype\",{\"1\":{\"1188\":3}}],[\"reflected\",{\"1\":{\"547\":1}}],[\"reflect\",{\"0\":{\"1186\":1},\"1\":{\"547\":2,\"967\":3,\"968\":1,\"978\":1,\"1186\":1,\"1188\":9,\"1189\":8,\"1190\":5,\"1191\":7,\"1192\":3,\"1193\":3,\"1194\":4}}],[\"reflection\",{\"1\":{\"547\":1,\"1017\":1}}],[\"refer\",{\"1\":{\"537\":1,\"547\":1}}],[\"refers\",{\"1\":{\"537\":1}}],[\"ref\",{\"1\":{\"460\":3}}],[\"rehash指的是重新计算键的哈希值和索引值\",{\"1\":{\"395\":1}}],[\"rehash\",{\"1\":{\"395\":1,\"396\":2}}],[\"rehashing\",{\"1\":{\"395\":1}}],[\"rehashidx\",{\"1\":{\"395\":2}}],[\"rehash索引\",{\"1\":{\"395\":1}}],[\"re\",{\"1\":{\"286\":6,\"523\":1,\"543\":1,\"548\":1,\"1055\":11}}],[\"reqparam\",{\"1\":{\"973\":3}}],[\"reqchain\",{\"1\":{\"814\":4}}],[\"req\",{\"1\":{\"200\":2,\"972\":2,\"1055\":14,\"1067\":2,\"1088\":9,\"1097\":3,\"1099\":4}}],[\"require\",{\"1\":{\"1073\":1}}],[\"requires\",{\"1\":{\"537\":1,\"547\":1}}],[\"required\",{\"1\":{\"199\":1,\"991\":1,\"1242\":1}}],[\"requested\",{\"1\":{\"1118\":1}}],[\"requestbodylimithit\",{\"1\":{\"1055\":1}}],[\"requestbodyremains\",{\"1\":{\"1055\":1}}],[\"requests\",{\"1\":{\"1055\":3}}],[\"request消息\",{\"1\":{\"433\":1}}],[\"request\",{\"1\":{\"195\":1,\"457\":3,\"458\":4,\"516\":4,\"849\":4,\"910\":6,\"939\":5,\"1045\":3,\"1047\":2,\"1052\":1,\"1055\":14,\"1067\":2,\"1072\":2,\"1073\":3,\"1074\":1,\"1193\":8}}],[\"repeated\",{\"1\":{\"1084\":2}}],[\"repeatable\",{\"1\":{\"361\":2}}],[\"repaired\",{\"1\":{\"537\":1}}],[\"repay\",{\"0\":{\"161\":1},\"1\":{\"150\":1,\"152\":1,\"157\":1}}],[\"represented\",{\"1\":{\"1120\":1}}],[\"represent\",{\"1\":{\"1120\":1}}],[\"represents\",{\"1\":{\"992\":1,\"1120\":3,\"1188\":2}}],[\"repr\",{\"1\":{\"449\":1}}],[\"reports链表里面\",{\"1\":{\"433\":1}}],[\"repository\",{\"1\":{\"48\":1,\"51\":1,\"54\":1,\"55\":1,\"70\":1,\"73\":1,\"192\":1}}],[\"replied\",{\"1\":{\"1055\":1}}],[\"replies\",{\"1\":{\"1055\":2}}],[\"replica\",{\"2\":{\"499\":1}}],[\"replicate\",{\"1\":{\"433\":1}}],[\"replication命令的lag值\",{\"1\":{\"425\":1}}],[\"replication命令\",{\"1\":{\"425\":1}}],[\"replication\",{\"1\":{\"425\":2}}],[\"replycall\",{\"1\":{\"1063\":2}}],[\"reply2\",{\"1\":{\"1063\":3}}],[\"reply\",{\"1\":{\"973\":2,\"1055\":2,\"1063\":7,\"1072\":1,\"1073\":4,\"1097\":4,\"1099\":4}}],[\"replaceone\",{\"1\":{\"1241\":1,\"1242\":1}}],[\"replaced\",{\"1\":{\"543\":2}}],[\"replacen方法接受三个参数\",{\"1\":{\"479\":1}}],[\"replacen\",{\"1\":{\"479\":5}}],[\"replace方法可用于string和\",{\"1\":{\"479\":1}}],[\"replace\",{\"0\":{\"479\":1},\"1\":{\"479\":16,\"519\":1,\"547\":1}}],[\"replacespace\",{\"1\":{\"277\":1}}],[\"repl\",{\"1\":{\"426\":1}}],[\"replconf\",{\"1\":{\"425\":1}}],[\"recharge\",{\"1\":{\"563\":1}}],[\"receiving\",{\"0\":{\"1123\":1},\"1\":{\"1124\":1,\"1125\":2,\"1127\":1}}],[\"receives\",{\"1\":{\"1055\":1,\"1123\":2,\"1124\":3,\"1127\":1}}],[\"receivers\",{\"1\":{\"1127\":2}}],[\"receiver\",{\"1\":{\"434\":1,\"820\":15,\"1138\":1}}],[\"received\",{\"1\":{\"90\":1,\"833\":4,\"1010\":6,\"1072\":1,\"1121\":1,\"1124\":2,\"1126\":1,\"1127\":24}}],[\"receive\",{\"1\":{\"90\":1,\"516\":1,\"563\":1,\"833\":4,\"1010\":3,\"1125\":1,\"1126\":4,\"1127\":1}}],[\"recent\",{\"1\":{\"563\":1}}],[\"recently\",{\"1\":{\"557\":1,\"563\":1}}],[\"reclaimthenet\",{\"1\":{\"534\":1}}],[\"recvq\",{\"1\":{\"1137\":3}}],[\"recvx\",{\"1\":{\"1137\":3}}],[\"recv\",{\"1\":{\"457\":3,\"458\":4,\"1072\":4,\"1074\":1,\"1137\":1}}],[\"recommend\",{\"1\":{\"1054\":1}}],[\"recommended\",{\"1\":{\"563\":1}}],[\"recompile\",{\"1\":{\"90\":1}}],[\"recover\",{\"1\":{\"1055\":1}}],[\"recovery\",{\"1\":{\"972\":1,\"1051\":2}}],[\"recovered\",{\"1\":{\"560\":1}}],[\"recoverable\",{\"1\":{\"446\":1}}],[\"recognize\",{\"1\":{\"543\":1}}],[\"reconnected\",{\"1\":{\"537\":1}}],[\"recordheader\",{\"1\":{\"1055\":1}}],[\"recordheadererror\",{\"1\":{\"1055\":1}}],[\"recordstats\",{\"1\":{\"975\":5}}],[\"recorded\",{\"1\":{\"557\":1,\"563\":1}}],[\"record\",{\"0\":{\"371\":1},\"1\":{\"370\":2,\"371\":1,\"373\":1,\"514\":2},\"2\":{\"438\":1}}],[\"recue\",{\"1\":{\"297\":5}}],[\"recursively\",{\"1\":{\"915\":3}}],[\"recur\",{\"1\":{\"297\":3}}],[\"reasons\",{\"1\":{\"547\":1}}],[\"reason\",{\"1\":{\"537\":1,\"547\":1}}],[\"realsubject\",{\"1\":{\"939\":2}}],[\"realized\",{\"1\":{\"956\":1}}],[\"realize\",{\"1\":{\"543\":1,\"547\":1}}],[\"realizing\",{\"1\":{\"543\":1}}],[\"reality\",{\"1\":{\"523\":1}}],[\"real\",{\"1\":{\"537\":1,\"540\":1,\"543\":1,\"547\":1,\"557\":1,\"939\":1,\"1118\":1}}],[\"really\",{\"1\":{\"537\":1,\"543\":1,\"547\":1}}],[\"realm\",{\"1\":{\"523\":1}}],[\"reached\",{\"1\":{\"523\":1,\"547\":1}}],[\"reaches\",{\"1\":{\"523\":3}}],[\"reach\",{\"1\":{\"523\":2}}],[\"reactions\",{\"1\":{\"523\":1}}],[\"reaction\",{\"1\":{\"523\":2}}],[\"reactjs\",{\"1\":{\"3\":1}}],[\"readywithtime\",{\"1\":{\"1146\":1}}],[\"ready\",{\"1\":{\"1135\":1}}],[\"readstring\",{\"1\":{\"1153\":1,\"1172\":4}}],[\"reads\",{\"1\":{\"1123\":1}}],[\"readbuffersize\",{\"1\":{\"1073\":1}}],[\"readcloser\",{\"1\":{\"1055\":1}}],[\"readerwait\",{\"1\":{\"1143\":3}}],[\"readercount\",{\"1\":{\"1143\":5}}],[\"readersem\",{\"1\":{\"1143\":2}}],[\"reader\",{\"1\":{\"1055\":1,\"1073\":3,\"1153\":8,\"1172\":11}}],[\"readrequest\",{\"1\":{\"1055\":1}}],[\"readmessage\",{\"1\":{\"1073\":1}}],[\"readme\",{\"1\":{\"1054\":1}}],[\"readall\",{\"1\":{\"973\":1}}],[\"reading\",{\"1\":{\"537\":4,\"543\":2,\"1127\":1}}],[\"readtimeout\",{\"1\":{\"516\":1,\"1055\":1}}],[\"readview\",{\"1\":{\"356\":2}}],[\"readwrite\",{\"1\":{\"78\":1}}],[\"read\",{\"1\":{\"74\":1,\"90\":8,\"195\":1,\"356\":3,\"361\":6,\"362\":24,\"364\":4,\"366\":1,\"368\":1,\"450\":7,\"451\":10,\"537\":1,\"543\":1,\"547\":1,\"548\":3,\"991\":1,\"1055\":4,\"1073\":2,\"1123\":3,\"1126\":1,\"1127\":1,\"1153\":2}}],[\"readonly\",{\"1\":{\"74\":4,\"78\":1}}],[\"resgiter\",{\"1\":{\"563\":1}}],[\"resolution\",{\"1\":{\"1179\":1}}],[\"resolveaddress\",{\"1\":{\"1054\":1}}],[\"resolved\",{\"1\":{\"547\":1}}],[\"resources\",{\"1\":{\"540\":1}}],[\"residual\",{\"1\":{\"523\":1}}],[\"res=\",{\"1\":{\"287\":1}}],[\"res=append\",{\"1\":{\"213\":1,\"300\":4}}],[\"res++\",{\"1\":{\"267\":2,\"287\":1}}],[\"res\",{\"1\":{\"208\":11,\"209\":7,\"210\":7,\"211\":7,\"212\":14,\"213\":6,\"214\":7,\"215\":7,\"216\":7,\"217\":7,\"218\":7,\"219\":7,\"257\":4,\"259\":4,\"262\":4,\"267\":2,\"278\":4,\"287\":5,\"288\":3,\"300\":6,\"303\":4,\"304\":5,\"305\":7,\"307\":9,\"311\":7,\"322\":3,\"327\":3,\"331\":4,\"334\":3,\"336\":6,\"973\":4,\"980\":6,\"1019\":2,\"1072\":6}}],[\"respmap\",{\"1\":{\"898\":2}}],[\"respiratory\",{\"1\":{\"560\":1}}],[\"responsible\",{\"1\":{\"1118\":2}}],[\"responses\",{\"1\":{\"1055\":1}}],[\"responsewriter\",{\"1\":{\"516\":3,\"1045\":3,\"1047\":2,\"1055\":1,\"1073\":2,\"1193\":4}}],[\"response\",{\"1\":{\"195\":4,\"516\":2,\"1047\":1,\"1055\":2,\"1067\":2,\"1072\":2}}],[\"respond\",{\"1\":{\"1055\":2}}],[\"responding\",{\"1\":{\"1055\":1}}],[\"respondwithjson\",{\"1\":{\"516\":3}}],[\"resp\",{\"1\":{\"195\":2,\"898\":3,\"972\":3,\"973\":2,\"1055\":1,\"1067\":2,\"1088\":1,\"1095\":2,\"1097\":1}}],[\"reset\",{\"1\":{\"1055\":2,\"1211\":1}}],[\"reservation\",{\"1\":{\"1037\":3}}],[\"reserved\",{\"1\":{\"1084\":3}}],[\"reserven\",{\"0\":{\"1037\":1},\"1\":{\"1037\":3}}],[\"reserve\",{\"0\":{\"1037\":1},\"1\":{\"1037\":4}}],[\"resembled\",{\"1\":{\"523\":1}}],[\"resend\",{\"1\":{\"194\":2}}],[\"resend官网有针对nextjs接入的例子非常方便\",{\"1\":{\"194\":1}}],[\"resent\",{\"1\":{\"191\":1,\"192\":1}}],[\"research\",{\"0\":{\"169\":1},\"1\":{\"543\":1,\"804\":1}}],[\"restful\",{\"1\":{\"1078\":1}}],[\"restorememento\",{\"1\":{\"838\":3}}],[\"restoreipaddresses\",{\"1\":{\"214\":1}}],[\"restrain\",{\"1\":{\"523\":1}}],[\"rest\",{\"1\":{\"60\":1,\"494\":1,\"537\":1,\"557\":2,\"723\":1}}],[\"results\",{\"0\":{\"548\":1},\"1\":{\"560\":1,\"1019\":1}}],[\"result如果\",{\"1\":{\"450\":1}}],[\"result<string\",{\"1\":{\"450\":2,\"451\":3}}],[\"result<t\",{\"0\":{\"448\":1},\"1\":{\"448\":1,\"449\":1,\"450\":1}}],[\"result就是统计回文子串的数量\",{\"1\":{\"267\":1}}],[\"result++\",{\"1\":{\"267\":2}}],[\"result\",{\"1\":{\"4\":1,\"90\":1,\"258\":4,\"259\":2,\"448\":11,\"449\":3,\"450\":4,\"451\":2,\"481\":5,\"523\":1,\"543\":1,\"548\":1,\"973\":3,\"976\":1,\"1019\":3,\"1118\":2,\"1173\":2,\"1228\":1,\"1231\":1,\"1234\":1,\"1238\":1}}],[\"religions\",{\"1\":{\"523\":1}}],[\"religion\",{\"1\":{\"523\":1}}],[\"relying\",{\"1\":{\"523\":1}}],[\"relations\",{\"1\":{\"1242\":3}}],[\"relative是最常见的一种输出文件的方式\",{\"1\":{\"1084\":1}}],[\"relative\",{\"1\":{\"1067\":3,\"1072\":3,\"1079\":3,\"1084\":4}}],[\"relativepath\",{\"1\":{\"1053\":4}}],[\"related\",{\"1\":{\"23\":2}}],[\"relay\",{\"1\":{\"833\":4}}],[\"relaxed\",{\"1\":{\"458\":4}}],[\"releasemode\",{\"1\":{\"972\":1}}],[\"released\",{\"1\":{\"523\":2,\"557\":1}}],[\"release\",{\"1\":{\"523\":3,\"972\":1}}],[\"releases\",{\"1\":{\"58\":2,\"1067\":1}}],[\"relection\",{\"1\":{\"433\":1}}],[\"redeclared\",{\"1\":{\"1138\":1}}],[\"redmik30\",{\"1\":{\"560\":1}}],[\"redlock\",{\"1\":{\"437\":4}}],[\"redolog\",{\"1\":{\"360\":2}}],[\"redo\",{\"0\":{\"357\":1},\"1\":{\"355\":3,\"356\":3,\"357\":38,\"358\":11,\"360\":36,\"361\":1,\"377\":3}}],[\"redirectfixedpath\",{\"1\":{\"1055\":3}}],[\"redirecttrailingslash\",{\"1\":{\"1055\":2}}],[\"redirect\",{\"1\":{\"199\":2,\"429\":1,\"1045\":3}}],[\"redis中lua脚本的debug\",{\"0\":{\"1107\":1}}],[\"redis中从服务器对主服务器的复制可以分为以下两种情况\",{\"1\":{\"425\":1}}],[\"redis环境可以使用在本地下载的\",{\"1\":{\"1104\":1}}],[\"redis库为例\",{\"1\":{\"976\":1}}],[\"redis操作\",{\"1\":{\"976\":1}}],[\"redis在日常开发中也会经常用到\",{\"1\":{\"976\":1}}],[\"redis笔记\",{\"0\":{\"440\":1}}],[\"redis本身可以被多个客户端访问\",{\"1\":{\"436\":1}}],[\"redis是如何实现分布式锁的\",{\"1\":{\"436\":1}}],[\"redis是内存型数据库\",{\"1\":{\"416\":1}}],[\"redis分布式锁问题\",{\"0\":{\"436\":1}}],[\"redis提供了进行重新分片所需的所有命令\",{\"1\":{\"431\":1}}],[\"redis提供了aof文件重写\",{\"1\":{\"422\":1}}],[\"redis集群中的各个节点通过gossip协议来交换各自关于不同节点的状态信息\",{\"1\":{\"435\":1}}],[\"redis集群中的节点分为主节点\",{\"1\":{\"433\":1}}],[\"redis集群的重新分片操作其实是由edis的集群管理软件redis\",{\"1\":{\"431\":1}}],[\"redis集群的重新分片操作可以将任意数量已经指派给某个节点的槽指派给另一个节点\",{\"1\":{\"431\":1}}],[\"redis集群通过分片的形式来保存redis数据库中的键值对\",{\"1\":{\"428\":1}}],[\"redis集群是redis提供的分布式数据库方案\",{\"1\":{\"427\":1}}],[\"redisclient的socket是连接客户端的\",{\"1\":{\"427\":1}}],[\"redisclient和clusterlink结构都有自己的socket描述符\",{\"1\":{\"427\":1}}],[\"redisis\",{\"1\":{\"425\":1}}],[\"redisinsight\",{\"1\":{\"51\":1}}],[\"redis从2\",{\"1\":{\"425\":1}}],[\"redis并没有为事务提供任何额外的持久化功能\",{\"1\":{\"424\":1}}],[\"redis通过谨慎的错误检测和简单的设计来保证事务的一致性\",{\"1\":{\"424\":1}}],[\"redis通过multi\",{\"1\":{\"424\":1}}],[\"redis事务的执行时错误通常都是编程错误产生的\",{\"1\":{\"424\":1}}],[\"redis不支持事务回滚机制\",{\"1\":{\"424\":1}}],[\"redis将所有的订阅关系都发那个到了redisserver类下的pubsub\",{\"1\":{\"423\":1}}],[\"redis发布订阅功能是由publish\",{\"1\":{\"423\":1}}],[\"redis读取aof文件并还原数据库状态的详细步骤如下\",{\"1\":{\"422\":1}}],[\"redis服务器在启动时会根据cluster\",{\"1\":{\"427\":1}}],[\"redis服务器可以创建一个新的aof文件来替代现有的aof文件\",{\"1\":{\"422\":1}}],[\"redis服务器进程其实就是一个事件循环\",{\"1\":{\"422\":1}}],[\"redis服务器周期性操作函数servercron默认每隔100毫秒就执行一次\",{\"1\":{\"417\":1}}],[\"redis还提供aof持久化\",{\"1\":{\"421\":1}}],[\"redis没有加载rdb文件的命令\",{\"1\":{\"416\":1}}],[\"redis持久化\",{\"0\":{\"413\":1}}],[\"redis单线程指的是在接受客户端请求\",{\"1\":{\"411\":1}}],[\"redis线程模型\",{\"0\":{\"411\":1}}],[\"redisobject\",{\"1\":{\"400\":1}}],[\"redis的相关操作\",{\"1\":{\"976\":1}}],[\"redis的set命令有个nx参数可以实现在key不存在时插入\",{\"1\":{\"436\":1}}],[\"redis的min\",{\"1\":{\"425\":1}}],[\"redis的复制分为同步和命令传播两个操作\",{\"1\":{\"425\":1}}],[\"redis的作者在事务功能的文档中解释说\",{\"1\":{\"424\":1}}],[\"redis的事务总是以串行的方式运行的\",{\"1\":{\"424\":1}}],[\"redis的事务和传统的关系型数据库事务的最大区别在于\",{\"1\":{\"424\":1}}],[\"redis的事务是具有原子性的\",{\"1\":{\"424\":1}}],[\"redis的rdb持久化过程\",{\"0\":{\"415\":1}}],[\"redis的总对象类型是\",{\"1\":{\"400\":1}}],[\"redis的字典用哈希表来实现\",{\"1\":{\"395\":1}}],[\"redis针对前面所说的类型建立了一个对象系统\",{\"1\":{\"400\":1}}],[\"redis就会使用整数集合作为集合键的底层实现\",{\"1\":{\"398\":1}}],[\"redis就会使用链表作为列表键的底层实现\",{\"1\":{\"394\":1}}],[\"redis只在两个地方用到了跳跃表\",{\"1\":{\"397\":1}}],[\"redis会为用途不同的字典设置不同的类型特定函数\",{\"1\":{\"395\":1}}],[\"redis会新增一个键值对\",{\"1\":{\"393\":1,\"402\":1}}],[\"redislabs\",{\"1\":{\"51\":1}}],[\"redis\",{\"0\":{\"391\":1,\"412\":1,\"414\":1,\"437\":1,\"1268\":1,\"1294\":1},\"1\":{\"3\":1,\"54\":1,\"55\":5,\"57\":1,\"58\":19,\"400\":1,\"404\":3,\"406\":3,\"408\":2,\"410\":3,\"411\":9,\"412\":14,\"413\":39,\"414\":15,\"418\":2,\"420\":9,\"424\":2,\"426\":2,\"427\":2,\"431\":5,\"435\":4,\"436\":12,\"437\":9,\"976\":11,\"1106\":1,\"1219\":1},\"2\":{\"390\":1,\"439\":1,\"442\":1,\"507\":1,\"1111\":1}}],[\"reduceonly\",{\"1\":{\"152\":1}}],[\"red\",{\"1\":{\"48\":1,\"523\":3}}],[\"nmethod\",{\"1\":{\"1192\":1}}],[\"nmethods\",{\"1\":{\"1192\":1}}],[\"nmspinning\",{\"1\":{\"1135\":1}}],[\"nfield\",{\"1\":{\"1192\":1}}],[\"nft持有者无需出售其宝贵的数字资产即可释放流动性\",{\"1\":{\"151\":1}}],[\"nft\",{\"1\":{\"132\":1,\"804\":1}}],[\"nft等概念大火\",{\"1\":{\"109\":1}}],[\"npidle\",{\"1\":{\"1135\":1}}],[\"nconnection\",{\"1\":{\"1055\":1}}],[\"ncontent\",{\"1\":{\"1055\":1}}],[\"nclient\",{\"1\":{\"1055\":1}}],[\"nbf\",{\"1\":{\"1047\":1}}],[\"nyc\",{\"1\":{\"1001\":2}}],[\"n的值是系统根据实际情况去调整的\",{\"1\":{\"970\":1}}],[\"n次\",{\"1\":{\"970\":1}}],[\"nlogn\",{\"1\":{\"950\":1}}],[\"n^2\",{\"1\":{\"944\":1}}],[\"nsec\",{\"1\":{\"1212\":2}}],[\"ns\",{\"1\":{\"899\":2,\"970\":4}}],[\"ni\",{\"1\":{\"827\":7}}],[\"nicholas\",{\"1\":{\"563\":1}}],[\"nine\",{\"1\":{\"557\":1}}],[\"night\",{\"1\":{\"537\":1}}],[\"nitrogen\",{\"1\":{\"523\":1}}],[\"nil值\",{\"1\":{\"1191\":1}}],[\"nilornot\",{\"1\":{\"1138\":3}}],[\"nil\",{\"1\":{\"250\":1,\"278\":2,\"279\":1,\"290\":1,\"294\":2,\"295\":4,\"296\":4,\"297\":4,\"298\":2,\"299\":9,\"300\":1,\"303\":2,\"304\":2,\"305\":2,\"307\":7,\"308\":4,\"324\":2,\"327\":1,\"328\":1,\"329\":2,\"332\":1,\"446\":2,\"514\":1,\"516\":4,\"517\":1,\"814\":4,\"827\":1,\"838\":1,\"883\":1,\"927\":7,\"972\":2,\"973\":2,\"975\":12,\"976\":4,\"977\":1,\"978\":4,\"980\":14,\"1010\":4,\"1011\":4,\"1045\":1,\"1047\":5,\"1053\":2,\"1055\":24,\"1063\":7,\"1067\":5,\"1072\":12,\"1073\":5,\"1074\":3,\"1079\":2,\"1088\":2,\"1095\":5,\"1099\":5,\"1122\":5,\"1138\":6,\"1153\":2,\"1163\":2,\"1169\":1,\"1172\":1,\"1173\":1,\"1181\":1,\"1191\":3,\"1193\":1,\"1198\":2,\"1208\":2,\"1210\":1,\"1225\":1,\"1238\":6,\"1240\":2}}],[\"nx\",{\"1\":{\"436\":3,\"437\":1}}],[\"n个骰子的点数\",{\"0\":{\"337\":1}}],[\"n个数按一定规则全排列\",{\"1\":{\"206\":1}}],[\"n个数里面按一定规则找出k个数的集合\",{\"1\":{\"206\":1}}],[\"n5\",{\"1\":{\"321\":3}}],[\"n3\",{\"1\":{\"321\":3}}],[\"n2\",{\"1\":{\"321\":3}}],[\"nthuglynumber\",{\"1\":{\"321\":1}}],[\"nname\",{\"1\":{\"1169\":1}}],[\"nn碗是为那些对你来说非常重要的渴望准备的\",{\"1\":{\"577\":1}}],[\"nn\",{\"1\":{\"287\":2,\"577\":4,\"1095\":1}}],[\"n=0\",{\"1\":{\"287\":1}}],[\"n=n\",{\"1\":{\"286\":1}}],[\"n==3\",{\"1\":{\"286\":1}}],[\"n==2\",{\"1\":{\"286\":1}}],[\"n>1\",{\"1\":{\"358\":1}}],[\"n>1并且m>1\",{\"1\":{\"285\":1,\"286\":1}}],[\"n>count\",{\"1\":{\"317\":1}}],[\"n>4\",{\"1\":{\"286\":1}}],[\"n都是整数\",{\"1\":{\"285\":1,\"286\":1}}],[\"n+1\",{\"1\":{\"226\":1,\"227\":1,\"231\":1,\"232\":1,\"240\":1,\"243\":1,\"245\":1,\"264\":1,\"265\":2,\"266\":1,\"281\":1,\"282\":1,\"285\":1,\"291\":1,\"311\":1,\"318\":2}}],[\"n×n\",{\"1\":{\"220\":1}}],[\"n叉树\",{\"1\":{\"206\":1}}],[\"n皇后\",{\"0\":{\"220\":1},\"1\":{\"206\":1}}],[\"nano\",{\"1\":{\"1212\":2}}],[\"nanosecond\",{\"1\":{\"1212\":4}}],[\"nanoseconds\",{\"1\":{\"1207\":4}}],[\"nage\",{\"1\":{\"1169\":1}}],[\"nassim\",{\"1\":{\"563\":1}}],[\"nature\",{\"1\":{\"547\":1}}],[\"natural\",{\"1\":{\"547\":1}}],[\"national\",{\"1\":{\"543\":1}}],[\"napoleon\",{\"1\":{\"523\":1}}],[\"naked\",{\"1\":{\"523\":1}}],[\"navi\",{\"1\":{\"166\":1}}],[\"name的方法\",{\"1\":{\"1193\":1}}],[\"namefield\",{\"1\":{\"1190\":4}}],[\"name返回都是空\",{\"1\":{\"1188\":1}}],[\"name=john\",{\"1\":{\"1161\":1}}],[\"name=names\",{\"1\":{\"1080\":1}}],[\"nameoff\",{\"1\":{\"1139\":1}}],[\"name为\",{\"1\":{\"1080\":1}}],[\"name或者传递query参数\",{\"1\":{\"1080\":1}}],[\"nameiterator\",{\"1\":{\"827\":9}}],[\"namelen\",{\"1\":{\"427\":1,\"435\":3}}],[\"name>0<timeout>命令\",{\"1\":{\"431\":1}}],[\"name>\",{\"1\":{\"426\":4}}],[\"namespaces\",{\"1\":{\"75\":1}}],[\"names\",{\"1\":{\"68\":2,\"69\":1,\"459\":2,\"460\":2,\"1055\":1,\"1080\":3}}],[\"name\",{\"1\":{\"55\":1,\"74\":6,\"76\":1,\"194\":2,\"195\":4,\"424\":1,\"426\":1,\"427\":1,\"431\":1,\"435\":1,\"467\":5,\"483\":2,\"523\":1,\"827\":18,\"867\":6,\"874\":6,\"875\":3,\"883\":4,\"890\":6,\"915\":10,\"967\":1,\"968\":4,\"970\":1,\"972\":9,\"977\":9,\"978\":7,\"979\":5,\"980\":3,\"991\":5,\"1010\":7,\"1019\":3,\"1045\":10,\"1047\":2,\"1067\":3,\"1072\":5,\"1079\":1,\"1080\":7,\"1084\":2,\"1088\":6,\"1094\":1,\"1095\":5,\"1161\":12,\"1168\":2,\"1169\":3,\"1171\":12,\"1173\":9,\"1179\":2,\"1188\":15,\"1190\":4,\"1191\":1,\"1192\":23,\"1193\":5,\"1208\":3,\"1212\":1,\"1219\":2,\"1226\":3,\"1227\":1,\"1229\":2,\"1231\":6,\"1234\":1,\"1240\":3,\"1241\":6}}],[\"nucleus\",{\"1\":{\"523\":2}}],[\"nuclei\",{\"1\":{\"523\":2}}],[\"nuclear\",{\"1\":{\"523\":8}}],[\"null\",{\"1\":{\"279\":2,\"280\":2,\"299\":4,\"303\":2,\"304\":2,\"305\":2,\"307\":3,\"308\":1,\"327\":3,\"328\":2,\"329\":4,\"432\":2,\"435\":1}}],[\"nummethod\",{\"1\":{\"1192\":1,\"1193\":1}}],[\"numfield\",{\"1\":{\"1188\":1,\"1192\":1}}],[\"num2=20\",{\"1\":{\"1161\":1}}],[\"num2\",{\"1\":{\"855\":9,\"1161\":4}}],[\"num1=10\",{\"1\":{\"1161\":1}}],[\"num1\",{\"1\":{\"855\":9,\"1161\":4}}],[\"numpat子命令用于返回服务器当前被订阅模式的数量\",{\"1\":{\"423\":1}}],[\"numkeys\",{\"1\":{\"410\":1}}],[\"number>\",{\"1\":{\"425\":1}}],[\"number部分之后\",{\"1\":{\"419\":1}}],[\"number保存着一个数据库号码\",{\"1\":{\"419\":1}}],[\"number\",{\"1\":{\"321\":1,\"419\":1,\"429\":1,\"543\":1,\"563\":1,\"1084\":1,\"1179\":2}}],[\"numbers\",{\"1\":{\"283\":7,\"1120\":3}}],[\"numbersnumbers\",{\"1\":{\"283\":1}}],[\"numways\",{\"1\":{\"282\":1}}],[\"numdistinct\",{\"1\":{\"264\":1}}],[\"numtrees\",{\"1\":{\"232\":1}}],[\"numslots\",{\"1\":{\"428\":1}}],[\"numsub\",{\"1\":{\"423\":1}}],[\"numstr\",{\"1\":{\"317\":2}}],[\"nums2\",{\"1\":{\"249\":2,\"259\":6}}],[\"nums1\",{\"1\":{\"249\":2,\"259\":6}}],[\"numsquares\",{\"1\":{\"245\":1}}],[\"nums\",{\"1\":{\"215\":6,\"216\":29,\"217\":8,\"218\":9,\"219\":13,\"237\":5,\"239\":8,\"248\":9,\"249\":13,\"257\":9,\"258\":12,\"259\":1,\"262\":14,\"275\":18,\"293\":13,\"305\":6,\"312\":4,\"315\":9,\"323\":13,\"325\":15,\"326\":6,\"330\":6,\"331\":5,\"332\":8,\"336\":7}}],[\"num\",{\"1\":{\"152\":2,\"237\":2,\"293\":1,\"317\":2,\"318\":3,\"330\":6,\"331\":3,\"410\":1,\"980\":4,\"1163\":2,\"1188\":2,\"1198\":8}}],[\"nuxtjs\",{\"1\":{\"3\":1}}],[\"n收集的保险费\",{\"1\":{\"152\":1}}],[\"n收集的费用\",{\"1\":{\"152\":1}}],[\"n债务份额价值\",{\"1\":{\"152\":1}}],[\"n\",{\"1\":{\"90\":11,\"208\":10,\"209\":5,\"220\":5,\"226\":5,\"227\":4,\"229\":5,\"230\":1,\"231\":4,\"232\":5,\"240\":3,\"243\":3,\"245\":8,\"264\":4,\"265\":6,\"266\":4,\"275\":1,\"276\":3,\"281\":5,\"282\":6,\"284\":5,\"285\":4,\"286\":3,\"287\":14,\"288\":12,\"289\":3,\"291\":4,\"311\":3,\"313\":5,\"315\":1,\"316\":3,\"317\":7,\"318\":2,\"319\":3,\"320\":3,\"321\":6,\"330\":1,\"335\":3,\"337\":1,\"358\":1,\"360\":2,\"393\":1,\"397\":1,\"399\":1,\"402\":1,\"423\":1,\"428\":2,\"437\":2,\"820\":1,\"827\":2,\"915\":2,\"948\":2,\"950\":8,\"959\":2,\"960\":1,\"961\":1,\"970\":1,\"977\":1,\"978\":1,\"980\":6,\"991\":5,\"993\":5,\"1019\":1,\"1035\":2,\"1036\":3,\"1037\":1,\"1054\":2,\"1055\":5,\"1063\":2,\"1074\":3,\"1095\":1,\"1097\":1,\"1099\":2,\"1143\":1,\"1153\":3,\"1163\":1,\"1167\":4,\"1169\":3,\"1171\":3,\"1172\":3,\"1173\":8,\"1188\":1,\"1192\":4}}],[\"nginx\",{\"1\":{\"48\":1,\"54\":1,\"55\":2,\"56\":3,\"57\":2,\"58\":1,\"59\":5,\"60\":2,\"74\":14}}],[\"negotiatedprotocol\",{\"1\":{\"1055\":1}}],[\"negative\",{\"1\":{\"523\":2}}],[\"ne\",{\"1\":{\"1055\":2}}],[\"neil\",{\"1\":{\"628\":1}}],[\"neijuan\",{\"1\":{\"540\":2}}],[\"needed\",{\"1\":{\"989\":1}}],[\"need\",{\"1\":{\"547\":3,\"548\":1,\"563\":3,\"972\":2,\"1055\":1,\"1073\":1,\"1115\":1,\"1119\":1,\"1124\":1}}],[\"needs\",{\"1\":{\"519\":2,\"523\":1,\"550\":1,\"563\":1}}],[\"necessarily\",{\"1\":{\"543\":1}}],[\"necessary\",{\"1\":{\"523\":1,\"543\":1,\"549\":1}}],[\"necklace\",{\"1\":{\"523\":1}}],[\"never\",{\"1\":{\"523\":2,\"543\":2,\"1055\":1}}],[\"nebulae\",{\"1\":{\"523\":1}}],[\"nebula\",{\"1\":{\"523\":3}}],[\"neutron\",{\"1\":{\"523\":2}}],[\"neutrinos\",{\"1\":{\"523\":1}}],[\"network受攻击后\",{\"1\":{\"592\":1}}],[\"network网络规模去年几乎翻了两倍\",{\"1\":{\"534\":1}}],[\"network\",{\"0\":{\"90\":1},\"1\":{\"90\":6,\"523\":3,\"592\":1,\"704\":1,\"1055\":1},\"2\":{\"92\":1,\"536\":1}}],[\"net\",{\"1\":{\"76\":4,\"511\":1,\"972\":4,\"973\":1,\"1045\":1,\"1047\":1,\"1055\":10,\"1063\":5,\"1067\":2,\"1073\":1,\"1193\":1}}],[\"newyork\",{\"1\":{\"1208\":2}}],[\"newlogger\",{\"1\":{\"1182\":1}}],[\"newlimiter\",{\"1\":{\"1034\":2}}],[\"newproc1\",{\"1\":{\"1135\":2}}],[\"newproc\",{\"1\":{\"1135\":2}}],[\"newperson2\",{\"1\":{\"875\":1}}],[\"newperson\",{\"1\":{\"874\":1,\"890\":1}}],[\"newgreeteringclient\",{\"1\":{\"1067\":1,\"1095\":1}}],[\"newwriter\",{\"1\":{\"1153\":2}}],[\"newwithclaims\",{\"1\":{\"1047\":1}}],[\"newwallet\",{\"1\":{\"927\":1}}],[\"newwalletfacade\",{\"1\":{\"927\":1}}],[\"newfsm\",{\"1\":{\"1010\":1}}],[\"newmockperson\",{\"1\":{\"977\":4}}],[\"newmyqueue\",{\"1\":{\"336\":2}}],[\"newcustom\",{\"1\":{\"1241\":1}}],[\"newcredentials\",{\"1\":{\"1067\":1,\"1079\":1,\"1095\":1}}],[\"newcond\",{\"1\":{\"1146\":1}}],[\"newconn\",{\"1\":{\"1055\":1}}],[\"newcontroller\",{\"1\":{\"977\":4}}],[\"newcookiestore\",{\"1\":{\"1045\":1}}],[\"newclienttlsfromfile\",{\"1\":{\"1099\":1}}],[\"newclient\",{\"1\":{\"976\":1,\"1225\":1}}],[\"newchannelcommand\",{\"1\":{\"820\":3}}],[\"newresult\",{\"1\":{\"975\":3}}],[\"newrecorder\",{\"1\":{\"972\":1}}],[\"newreader\",{\"1\":{\"972\":1,\"1153\":3,\"1172\":3}}],[\"newrequest\",{\"1\":{\"972\":1}}],[\"newrouter\",{\"1\":{\"516\":1}}],[\"newapp\",{\"1\":{\"981\":2}}],[\"newaccount\",{\"1\":{\"927\":1}}],[\"newauthoriterator\",{\"1\":{\"827\":3}}],[\"newnameiterator\",{\"1\":{\"827\":3}}],[\"newbufiowritersize\",{\"1\":{\"1055\":1}}],[\"newbufioreader\",{\"1\":{\"1055\":1}}],[\"newbuffer\",{\"1\":{\"973\":1}}],[\"newbookshelf\",{\"1\":{\"827\":3}}],[\"newbook\",{\"1\":{\"827\":6}}],[\"newblock\",{\"1\":{\"514\":8,\"515\":5,\"516\":4}}],[\"newinvoker\",{\"1\":{\"820\":3}}],[\"newoauthaccess\",{\"1\":{\"1099\":1}}],[\"newoutgoingcontext\",{\"1\":{\"1094\":1,\"1095\":1}}],[\"newoutgoingcontext这个方法会覆盖之前crtx中的metadata\",{\"1\":{\"1094\":1}}],[\"neworder\",{\"1\":{\"1010\":1}}],[\"newoffcommand\",{\"1\":{\"820\":3}}],[\"newoncommand\",{\"1\":{\"820\":3}}],[\"newticker\",{\"1\":{\"1211\":3}}],[\"newtimer\",{\"1\":{\"997\":1}}],[\"newtvreceiver\",{\"1\":{\"820\":3}}],[\"newton\",{\"1\":{\"71\":2,\"523\":1}}],[\"newscanner\",{\"1\":{\"1153\":2}}],[\"newstatemachine\",{\"1\":{\"1011\":2}}],[\"newservemux\",{\"1\":{\"1079\":1}}],[\"newservertlsfromfile\",{\"1\":{\"1099\":1}}],[\"newserver\",{\"1\":{\"981\":4,\"1067\":1,\"1097\":1,\"1099\":1}}],[\"newsecuritycode\",{\"1\":{\"927\":1}}],[\"news\",{\"1\":{\"540\":1}}],[\"newdecoder\",{\"1\":{\"516\":1,\"980\":2}}],[\"newer\",{\"1\":{\"49\":1}}],[\"new\",{\"1\":{\"46\":1,\"47\":1,\"48\":1,\"60\":1,\"74\":2,\"90\":1,\"152\":2,\"260\":1,\"290\":1,\"301\":1,\"450\":1,\"451\":2,\"458\":3,\"459\":2,\"460\":2,\"461\":1,\"462\":1,\"463\":1,\"479\":6,\"514\":1,\"519\":1,\"523\":4,\"533\":1,\"534\":1,\"537\":2,\"543\":5,\"563\":1,\"814\":3,\"958\":2,\"973\":2,\"975\":2,\"981\":1,\"1001\":3,\"1005\":1,\"1011\":3,\"1051\":1,\"1053\":2,\"1055\":3,\"1063\":2,\"1073\":1,\"1074\":1,\"1087\":1,\"1093\":2,\"1094\":1,\"1095\":3,\"1119\":1,\"1120\":1,\"1181\":1,\"1182\":1,\"1208\":3,\"1212\":1}}],[\"next函数起到的作用是\",{\"1\":{\"1056\":1}}],[\"next函数\",{\"1\":{\"1056\":1}}],[\"nextprotos\",{\"1\":{\"1055\":1}}],[\"next==0\",{\"1\":{\"1135\":1}}],[\"next=\",{\"1\":{\"997\":1}}],[\"next=mergetwolists\",{\"1\":{\"296\":1}}],[\"next是一个指针\",{\"1\":{\"395\":1}}],[\"nexturl\",{\"1\":{\"200\":1}}],[\"next\",{\"0\":{\"373\":1},\"1\":{\"191\":1,\"192\":4,\"193\":1,\"194\":3,\"199\":1,\"278\":5,\"290\":8,\"294\":8,\"295\":8,\"296\":9,\"308\":5,\"324\":5,\"361\":3,\"362\":4,\"370\":1,\"373\":8,\"374\":1,\"394\":1,\"395\":1,\"458\":3,\"537\":1,\"547\":1,\"549\":1,\"721\":1,\"827\":7,\"828\":1,\"899\":2,\"997\":17,\"1055\":2,\"1056\":6,\"1119\":2,\"1124\":1,\"1135\":1},\"2\":{\"202\":1}}],[\"nextauthoptions\",{\"1\":{\"193\":1}}],[\"nextauth\",{\"0\":{\"191\":1},\"1\":{\"3\":1,\"191\":3,\"192\":4,\"193\":2,\"196\":1,\"197\":1}}],[\"nextjs是目前最流行的\",{\"1\":{\"191\":1}}],[\"nextjs\",{\"0\":{\"1260\":1},\"1\":{\"3\":2,\"191\":3},\"2\":{\"201\":1,\"202\":1}}],[\"nocopy\",{\"1\":{\"1144\":6,\"1146\":3}}],[\"noargs\",{\"1\":{\"991\":1}}],[\"noinline告诉编译器自己取消内联优化\",{\"1\":{\"961\":1}}],[\"noinline\",{\"1\":{\"959\":2,\"960\":2}}],[\"noise\",{\"2\":{\"522\":1}}],[\"noew\",{\"1\":{\"563\":1}}],[\"north\",{\"1\":{\"548\":1}}],[\"northwest\",{\"1\":{\"543\":1}}],[\"normally\",{\"1\":{\"563\":1}}],[\"normal\",{\"1\":{\"169\":1,\"523\":1,\"543\":1,\"547\":1}}],[\"novels\",{\"1\":{\"543\":1}}],[\"november\",{\"1\":{\"523\":1,\"540\":1}}],[\"nosql\",{\"1\":{\"1217\":2}}],[\"nosense\",{\"1\":{\"563\":1}}],[\"nosave\",{\"1\":{\"425\":1}}],[\"nostalgic\",{\"1\":{\"68\":1}}],[\"no意思分别为\",{\"1\":{\"422\":1}}],[\"nonitored\",{\"1\":{\"563\":1}}],[\"non\",{\"1\":{\"361\":1,\"1055\":2,\"1138\":1}}],[\"nonempty表示里面还有空闲的mspan等待分配\",{\"1\":{\"1149\":1}}],[\"none\",{\"1\":{\"52\":2,\"127\":1,\"152\":2,\"461\":2,\"462\":2,\"975\":1}}],[\"now=\",{\"1\":{\"997\":1}}],[\"now进行打桩\",{\"1\":{\"979\":1}}],[\"nowadays\",{\"1\":{\"540\":1}}],[\"nowtime\",{\"1\":{\"514\":2}}],[\"now\",{\"1\":{\"90\":1,\"358\":1,\"514\":1,\"517\":1,\"523\":1,\"540\":1,\"543\":2,\"547\":1,\"557\":3,\"560\":2,\"563\":1,\"975\":1,\"978\":1,\"979\":6,\"997\":10,\"1036\":2,\"1037\":2,\"1047\":1,\"1055\":3,\"1087\":3,\"1097\":2,\"1099\":2,\"1116\":1,\"1118\":1,\"1119\":3,\"1123\":1,\"1124\":1,\"1126\":1,\"1135\":1,\"1205\":1,\"1212\":26,\"1213\":1}}],[\"nothing\",{\"1\":{\"563\":1,\"1123\":1}}],[\"nothingness\",{\"1\":{\"523\":2}}],[\"notifylistnotifyone\",{\"1\":{\"1146\":1}}],[\"notifylistwait\",{\"1\":{\"1146\":1}}],[\"notifylistadd\",{\"1\":{\"1146\":1}}],[\"notifylist\",{\"1\":{\"1146\":3}}],[\"notify\",{\"1\":{\"844\":3,\"1072\":1,\"1127\":1,\"1146\":6}}],[\"notification\",{\"1\":{\"927\":6}}],[\"notifications\",{\"1\":{\"547\":1}}],[\"notified\",{\"1\":{\"547\":1}}],[\"notice\",{\"1\":{\"523\":1}}],[\"notfound\",{\"1\":{\"448\":2,\"449\":1}}],[\"notequal\",{\"1\":{\"967\":1}}],[\"note\",{\"0\":{\"1270\":1},\"1\":{\"447\":4,\"448\":1,\"459\":1,\"475\":1,\"543\":1}}],[\"notes\",{\"0\":{\"1265\":1},\"2\":{\"97\":1,\"100\":1,\"103\":1,\"106\":1,\"141\":1,\"145\":1,\"154\":1,\"167\":1,\"170\":1,\"178\":1,\"189\":1}}],[\"not\",{\"0\":{\"701\":2},\"1\":{\"90\":1,\"152\":4,\"395\":1,\"473\":1,\"475\":1,\"523\":13,\"540\":2,\"543\":10,\"547\":9,\"548\":2,\"549\":2,\"550\":1,\"557\":1,\"563\":5,\"701\":3,\"770\":1,\"975\":3,\"976\":1,\"977\":2,\"1037\":1,\"1047\":1,\"1053\":2,\"1054\":1,\"1055\":5,\"1115\":1,\"1118\":2,\"1119\":3,\"1122\":1,\"1124\":2,\"1125\":1,\"1126\":2,\"1138\":1,\"1188\":1,\"1193\":3,\"1217\":1}}],[\"nodename\",{\"1\":{\"435\":1}}],[\"nodes字典中找到主节点c所对应的clusternode结构\",{\"1\":{\"433\":1}}],[\"nodes字典中找到node\",{\"1\":{\"433\":1}}],[\"nodes字典中的所有clusternode结构\",{\"1\":{\"428\":1}}],[\"nodes字典中查找节点b对应的clusternode结构\",{\"1\":{\"428\":1}}],[\"nodes字典里面\",{\"1\":{\"427\":2}}],[\"nodes\",{\"1\":{\"427\":1,\"428\":2}}],[\"nodevalue\",{\"1\":{\"279\":3}}],[\"node\",{\"1\":{\"55\":3,\"57\":1,\"295\":2,\"298\":11,\"303\":6,\"304\":6,\"305\":6,\"307\":15,\"308\":5,\"327\":5,\"427\":2,\"433\":2,\"435\":1,\"1053\":3}}],[\"no总数额\",{\"1\":{\"26\":1}}],[\"no来模拟话题结算时我们的最终获利情况\",{\"1\":{\"26\":1}}],[\"no份额\",{\"1\":{\"26\":2}}],[\"no\",{\"1\":{\"26\":1,\"27\":1,\"90\":1,\"169\":2,\"360\":1,\"413\":1,\"425\":1,\"426\":1,\"448\":1,\"449\":2,\"483\":1,\"523\":4,\"540\":2,\"543\":1,\"547\":1,\"548\":1,\"550\":1,\"738\":1,\"1095\":1,\"1119\":2,\"1122\":1,\"1124\":4,\"1125\":2,\"1126\":5,\"1127\":2}}],[\"a1\",{\"1\":{\"1231\":3}}],[\"a2\",{\"1\":{\"1140\":1}}],[\"a256gcm\",{\"1\":{\"193\":1}}],[\"azure\",{\"1\":{\"772\":1}}],[\"ai产生的内容可以使用区块链证明产权\",{\"1\":{\"800\":1}}],[\"ai是需要区块链的\",{\"1\":{\"800\":1}}],[\"ai处理\",{\"1\":{\"731\":1}}],[\"ai广告学\",{\"1\":{\"634\":1}}],[\"ai只能给个模糊的答案\",{\"1\":{\"631\":1}}],[\"ai真的一点点都不擅长\",{\"1\":{\"631\":1}}],[\"ai真的爱莫能助\",{\"1\":{\"631\":1}}],[\"ai擅长的是有逻辑的问题\",{\"1\":{\"631\":1}}],[\"ai的发展也彻底改变了人们的生活\",{\"1\":{\"764\":1}}],[\"ai的回答就是自己的回答\",{\"1\":{\"631\":1}}],[\"ai的思考就是自己的思考\",{\"1\":{\"631\":1}}],[\"ai时代的自我思想变得尤其重要\",{\"1\":{\"605\":1}}],[\"ai时代的信息一定比过去的产生速度快很多\",{\"1\":{\"605\":1}}],[\"ai并不是万能的\",{\"1\":{\"605\":1}}],[\"ai能够从事的写作仅仅只能写出让人认为很普遍的文字\",{\"1\":{\"605\":1}}],[\"ai\",{\"1\":{\"605\":1,\"731\":1,\"772\":2,\"804\":2,\"827\":7}}],[\"air重加载go程序\",{\"0\":{\"985\":1}}],[\"air\",{\"1\":{\"523\":1,\"560\":2},\"2\":{\"987\":1,\"1007\":1,\"1040\":1}}],[\"average\",{\"1\":{\"543\":1}}],[\"avatar\",{\"1\":{\"194\":1,\"195\":1}}],[\"avalanche等\",{\"1\":{\"144\":1}}],[\"a>\",{\"1\":{\"447\":1}}],[\"a的命令连接\",{\"1\":{\"426\":1}}],[\"aof重写\",{\"1\":{\"422\":1}}],[\"aof的载入与数据还原\",{\"1\":{\"422\":1}}],[\"aof文件重写并不需要对现有的aof文件进行任何读取\",{\"1\":{\"422\":1}}],[\"aof文件重写\",{\"1\":{\"422\":1}}],[\"aof文件中的内容会越来越多\",{\"1\":{\"422\":1}}],[\"aof文件所保存的数据库状态就会被完整地还原出来\",{\"1\":{\"422\":1}}],[\"aof文件包含了重建数据库所需的所有写命令\",{\"1\":{\"422\":1}}],[\"aof文件的写入\",{\"1\":{\"422\":1}}],[\"aof文件结构\",{\"0\":{\"421\":1}}],[\"aof持久化功能的实现可以分为命令追加\",{\"1\":{\"422\":1}}],[\"aof持久化的实现\",{\"0\":{\"422\":1}}],[\"aof持久化是通过保存redis服务器所执行的写命令来记录数据库状态的\",{\"1\":{\"421\":1}}],[\"aof\",{\"1\":{\"411\":2,\"413\":29,\"414\":13}}],[\"ahead\",{\"1\":{\"377\":1}}],[\"ahbgdc\",{\"1\":{\"263\":1}}],[\"a++\",{\"1\":{\"321\":1}}],[\"a为nil\",{\"1\":{\"297\":1}}],[\"a中有出现和b相同的结构和节点值\",{\"1\":{\"297\":1}}],[\"aab\",{\"1\":{\"291\":2}}],[\"aa\",{\"1\":{\"291\":3,\"297\":7}}],[\"aaa\",{\"1\":{\"291\":1}}],[\"aave\",{\"0\":{\"143\":1,\"144\":1},\"1\":{\"143\":1,\"144\":4,\"150\":1,\"156\":1}}],[\"aec\",{\"1\":{\"260\":2,\"263\":1,\"264\":1}}],[\"awake\",{\"1\":{\"1124\":2}}],[\"awakened\",{\"1\":{\"547\":1}}],[\"away\",{\"1\":{\"523\":2,\"543\":1}}],[\"await\",{\"1\":{\"194\":1,\"195\":1}}],[\"aws\",{\"1\":{\"193\":1,\"772\":1}}],[\"asleep\",{\"1\":{\"1125\":1}}],[\"asia\",{\"1\":{\"1001\":1,\"1208\":2}}],[\"ascent\",{\"1\":{\"540\":1}}],[\"ascii\",{\"1\":{\"483\":1,\"1200\":2}}],[\"astral\",{\"1\":{\"523\":1}}],[\"as\",{\"1\":{\"447\":2,\"468\":2,\"472\":1,\"480\":1,\"512\":1,\"523\":15,\"537\":3,\"543\":4,\"547\":7,\"560\":1,\"563\":1,\"1019\":1,\"1055\":4,\"1118\":4,\"1119\":1,\"1120\":2,\"1121\":1,\"1122\":1,\"1124\":2,\"1126\":3,\"1138\":1}}],[\"ask\",{\"1\":{\"537\":1,\"547\":1}}],[\"asking\",{\"1\":{\"537\":1}}],[\"asking标识\",{\"1\":{\"432\":1}}],[\"asking命令\",{\"1\":{\"432\":1}}],[\"ask错误\",{\"0\":{\"432\":1},\"1\":{\"432\":1}}],[\"associated\",{\"1\":{\"1122\":1}}],[\"assumes\",{\"1\":{\"1179\":1}}],[\"assume\",{\"1\":{\"1055\":1,\"1117\":1,\"1118\":1}}],[\"assignment\",{\"1\":{\"1138\":1,\"1144\":1}}],[\"assigned\",{\"1\":{\"1055\":1}}],[\"assign\",{\"1\":{\"428\":1}}],[\"assert1\",{\"1\":{\"1053\":3}}],[\"assertions\",{\"1\":{\"959\":1}}],[\"assert\",{\"1\":{\"152\":4,\"457\":1,\"469\":1,\"481\":1,\"959\":2,\"972\":4,\"973\":4}}],[\"assets\",{\"1\":{\"152\":3}}],[\"asset\",{\"1\":{\"150\":1,\"152\":18}}],[\"async\",{\"1\":{\"194\":3,\"195\":1,\"411\":2}}],[\"ac\",{\"1\":{\"1140\":1}}],[\"acquiresudog\",{\"1\":{\"1137\":1}}],[\"achieve\",{\"1\":{\"1118\":1}}],[\"across\",{\"1\":{\"523\":1}}],[\"act\",{\"1\":{\"1037\":2}}],[\"action\",{\"1\":{\"557\":1}}],[\"active\",{\"1\":{\"193\":1,\"1055\":3}}],[\"actually\",{\"1\":{\"523\":1,\"547\":2,\"563\":1,\"1117\":1}}],[\"acids\",{\"1\":{\"523\":2}}],[\"ack消息\",{\"1\":{\"433\":2}}],[\"ack命令时\",{\"1\":{\"425\":1}}],[\"ack命令距离现在过了多少秒\",{\"1\":{\"425\":1}}],[\"ack命令\",{\"1\":{\"425\":1}}],[\"ack命令来检查两者之间的网络连接是否正常\",{\"1\":{\"425\":1}}],[\"ack命令对于主从服务器有三个作用\",{\"1\":{\"425\":1}}],[\"acb\",{\"1\":{\"311\":1}}],[\"ace\",{\"1\":{\"260\":4,\"263\":1,\"264\":1}}],[\"accordingly\",{\"1\":{\"1188\":2}}],[\"accompanied\",{\"1\":{\"560\":1}}],[\"accountid\",{\"1\":{\"927\":8}}],[\"account\",{\"1\":{\"543\":1,\"563\":2,\"927\":7}}],[\"accounts\",{\"1\":{\"120\":1}}],[\"accused\",{\"1\":{\"547\":1}}],[\"accumulate\",{\"1\":{\"523\":1}}],[\"accidentally\",{\"1\":{\"523\":1,\"537\":1}}],[\"accesstoken\",{\"1\":{\"1099\":1}}],[\"access\",{\"1\":{\"195\":2}}],[\"accepts\",{\"1\":{\"1055\":1}}],[\"accepted\",{\"1\":{\"1055\":1}}],[\"accept\",{\"1\":{\"90\":2,\"425\":1,\"543\":1,\"867\":7,\"1055\":4}}],[\"accrual\",{\"1\":{\"152\":1}}],[\"accrue\",{\"1\":{\"152\":1}}],[\"america\",{\"1\":{\"1208\":2,\"1212\":1}}],[\"ame\",{\"1\":{\"1172\":2}}],[\"amine\",{\"1\":{\"543\":1}}],[\"amino\",{\"1\":{\"523\":2}}],[\"am\",{\"1\":{\"333\":2,\"334\":2,\"523\":6,\"537\":2,\"548\":3,\"550\":1,\"560\":1,\"563\":1,\"833\":4}}],[\"amazing\",{\"1\":{\"192\":1,\"523\":2,\"560\":1}}],[\"amount+1\",{\"1\":{\"242\":1,\"244\":1}}],[\"amount`\",{\"1\":{\"152\":2}}],[\"amount\",{\"1\":{\"152\":4,\"242\":3,\"244\":5,\"927\":6}}],[\"a以1980\",{\"1\":{\"163\":1}}],[\"aggregate\",{\"0\":{\"1236\":1},\"1\":{\"1236\":1,\"1239\":2}}],[\"aggregates\",{\"1\":{\"523\":1}}],[\"agree\",{\"1\":{\"563\":2}}],[\"agreement\",{\"1\":{\"523\":1}}],[\"against\",{\"1\":{\"543\":3}}],[\"again\",{\"1\":{\"523\":3,\"1116\":1}}],[\"agefield\",{\"1\":{\"1190\":4}}],[\"age=12\",{\"1\":{\"1080\":5}}],[\"ageur\",{\"1\":{\"182\":1}}],[\"age\",{\"1\":{\"152\":1,\"424\":1,\"540\":1,\"547\":1,\"874\":8,\"875\":3,\"978\":3,\"1019\":2,\"1080\":3,\"1084\":3,\"1088\":1,\"1094\":1,\"1095\":3,\"1168\":2,\"1169\":1,\"1171\":12,\"1173\":9,\"1188\":2,\"1190\":4,\"1191\":1,\"1192\":5,\"1226\":3,\"1230\":1,\"1231\":6,\"1232\":1,\"1233\":1,\"1234\":3,\"1235\":2,\"1240\":3,\"1241\":6,\"1242\":3}}],[\"ago\",{\"1\":{\"51\":6,\"54\":2,\"55\":1,\"68\":2,\"69\":2,\"70\":1,\"519\":1,\"523\":2,\"547\":1,\"560\":2}}],[\"analysis\",{\"1\":{\"1038\":1,\"1144\":1}}],[\"analisys\",{\"1\":{\"1038\":1}}],[\"ancestors\",{\"1\":{\"548\":1}}],[\"anchor提供了内置的可验证构建支持\",{\"1\":{\"128\":1}}],[\"anchor中对可验证构建的支持\",{\"1\":{\"128\":1}}],[\"anchor框架\",{\"1\":{\"126\":1}}],[\"anti\",{\"1\":{\"548\":2}}],[\"anxious\",{\"1\":{\"540\":1}}],[\"anxiety\",{\"1\":{\"537\":2}}],[\"angers\",{\"1\":{\"523\":1}}],[\"another\",{\"1\":{\"523\":1,\"543\":2,\"547\":1,\"563\":1,\"1055\":2,\"1121\":1}}],[\"annually\",{\"1\":{\"1003\":1}}],[\"annotations\",{\"1\":{\"1079\":2}}],[\"annoying\",{\"1\":{\"547\":1}}],[\"announce\",{\"1\":{\"523\":1}}],[\"annihilating\",{\"1\":{\"547\":1}}],[\"annihilation\",{\"1\":{\"523\":1,\"547\":1}}],[\"ane\",{\"1\":{\"519\":1}}],[\"an\",{\"1\":{\"449\":1,\"523\":7,\"537\":1,\"543\":2,\"547\":3,\"972\":1,\"975\":3,\"1019\":1,\"1051\":1,\"1055\":4,\"1073\":1,\"1116\":1,\"1118\":1,\"1122\":1,\"1127\":2,\"1188\":1}}],[\"answer\",{\"1\":{\"523\":1,\"547\":1,\"1055\":1}}],[\"ans\",{\"1\":{\"320\":4}}],[\"andromeda\",{\"1\":{\"523\":2}}],[\"android\",{\"1\":{\"494\":1}}],[\"and\",{\"0\":{\"1117\":1,\"1118\":1,\"1123\":1,\"1127\":1},\"1\":{\"90\":2,\"192\":1,\"459\":1,\"483\":3,\"512\":1,\"513\":1,\"519\":2,\"523\":109,\"537\":9,\"540\":2,\"543\":26,\"547\":16,\"548\":10,\"549\":3,\"550\":2,\"560\":5,\"563\":12,\"673\":3,\"808\":1,\"827\":9,\"972\":1,\"989\":2,\"992\":1,\"1009\":1,\"1010\":1,\"1026\":1,\"1045\":2,\"1047\":1,\"1051\":1,\"1054\":1,\"1055\":10,\"1073\":1,\"1115\":2,\"1116\":2,\"1117\":2,\"1118\":9,\"1119\":5,\"1120\":6,\"1121\":1,\"1122\":3,\"1123\":2,\"1124\":7,\"1125\":1,\"1126\":2,\"1127\":1,\"1179\":2,\"1232\":1,\"1241\":2,\"1242\":1}}],[\"anypb\",{\"1\":{\"1086\":2}}],[\"any包\",{\"0\":{\"1086\":1}}],[\"anytype是一个主打local\",{\"1\":{\"710\":1}}],[\"anytype等\",{\"1\":{\"710\":1}}],[\"anything\",{\"1\":{\"523\":1,\"992\":1,\"1242\":1}}],[\"anymore\",{\"1\":{\"543\":1,\"547\":1,\"976\":1}}],[\"anyone\",{\"1\":{\"543\":1}}],[\"any\",{\"1\":{\"90\":2,\"195\":1,\"519\":1,\"543\":1,\"977\":1,\"1019\":3,\"1055\":2,\"1086\":2,\"1089\":1,\"1119\":2,\"1122\":1,\"1124\":1}}],[\"anyswap就是做了这件事\",{\"1\":{\"739\":1}}],[\"anyswap也是这样的想法\",{\"1\":{\"698\":1}}],[\"anyswap\",{\"1\":{\"3\":1,\"108\":1,\"698\":1}}],[\"africa\",{\"1\":{\"523\":1}}],[\"afterinsert\",{\"1\":{\"1240\":1}}],[\"aftertime\",{\"1\":{\"1212\":2}}],[\"after\",{\"0\":{\"548\":1},\"1\":{\"405\":1,\"426\":12,\"523\":2,\"537\":1,\"543\":2,\"547\":1,\"548\":1,\"560\":1,\"563\":1,\"977\":1,\"1010\":1,\"1055\":2,\"1119\":3,\"1120\":2,\"1124\":2,\"1206\":6,\"1212\":6,\"1240\":1}}],[\"af\",{\"1\":{\"90\":4}}],[\"attacker\",{\"1\":{\"1055\":1}}],[\"attaches\",{\"1\":{\"1052\":1}}],[\"attached\",{\"1\":{\"972\":1,\"1051\":1,\"1052\":1}}],[\"attach\",{\"1\":{\"68\":4,\"844\":4}}],[\"attain\",{\"1\":{\"808\":1}}],[\"attention\",{\"1\":{\"543\":2,\"547\":1}}],[\"attract\",{\"1\":{\"540\":1}}],[\"atof\",{\"1\":{\"1198\":1}}],[\"atoms\",{\"1\":{\"523\":4}}],[\"atom\",{\"1\":{\"523\":1}}],[\"atomicstatus\",{\"1\":{\"1132\":2}}],[\"atomicusize\",{\"1\":{\"458\":6}}],[\"atomic\",{\"1\":{\"458\":2,\"523\":3,\"1135\":1,\"1142\":2,\"1143\":4,\"1145\":2,\"1146\":2}}],[\"atomicity\",{\"1\":{\"361\":1,\"424\":1}}],[\"atoken\",{\"1\":{\"150\":1}}],[\"atoi\",{\"1\":{\"90\":4,\"214\":1,\"1163\":1,\"1198\":3}}],[\"at\",{\"1\":{\"90\":1,\"357\":2,\"360\":3,\"447\":12,\"448\":1,\"449\":2,\"475\":1,\"519\":2,\"523\":11,\"537\":3,\"543\":5,\"548\":1,\"557\":1,\"560\":3,\"563\":1,\"956\":1,\"989\":1,\"1047\":1,\"1053\":1,\"1116\":2,\"1117\":3,\"1118\":3,\"1120\":1,\"1125\":1}}],[\"alphabets\",{\"1\":{\"1120\":3}}],[\"alpine\",{\"1\":{\"55\":2,\"57\":1,\"74\":3}}],[\"alan\",{\"1\":{\"827\":3}}],[\"alway\",{\"1\":{\"563\":1}}],[\"always\",{\"1\":{\"413\":1,\"519\":1,\"537\":2,\"543\":1,\"547\":3,\"548\":1,\"549\":1,\"560\":2,\"1055\":2,\"1118\":2}}],[\"alice\",{\"1\":{\"1190\":1,\"1240\":1}}],[\"alicebob\",{\"1\":{\"976\":2}}],[\"align\",{\"1\":{\"1139\":1}}],[\"alives\",{\"1\":{\"1055\":1}}],[\"alibaba\",{\"1\":{\"547\":1}}],[\"alipay\",{\"1\":{\"547\":2}}],[\"alias\",{\"1\":{\"192\":1}}],[\"alg\",{\"1\":{\"1047\":1}}],[\"algebra\",{\"1\":{\"537\":3}}],[\"algorithms\",{\"1\":{\"512\":1}}],[\"although\",{\"1\":{\"523\":1,\"537\":4,\"540\":1,\"547\":2,\"548\":1,\"549\":2,\"557\":2,\"563\":1}}],[\"alternately\",{\"1\":{\"523\":1}}],[\"alter\",{\"1\":{\"364\":1}}],[\"already\",{\"1\":{\"523\":1,\"972\":1,\"1051\":1}}],[\"alone\",{\"1\":{\"523\":1,\"540\":1}}],[\"also\",{\"1\":{\"468\":1,\"523\":5,\"543\":3,\"547\":2,\"550\":1,\"1117\":1,\"1122\":2,\"1126\":1}}],[\"almost\",{\"1\":{\"90\":1,\"534\":1,\"547\":1,\"548\":1,\"549\":2,\"550\":1}}],[\"allp\",{\"1\":{\"1135\":2}}],[\"allnoroute\",{\"1\":{\"1055\":1}}],[\"allnomethod\",{\"1\":{\"1055\":1}}],[\"allowed\",{\"1\":{\"1037\":1,\"1122\":2,\"1126\":1,\"1193\":3}}],[\"allown\",{\"0\":{\"1036\":1},\"1\":{\"1036\":3}}],[\"allow\",{\"0\":{\"1036\":1},\"1\":{\"1036\":2}}],[\"allocs\",{\"1\":{\"899\":2,\"970\":2}}],[\"alloc\",{\"1\":{\"447\":1}}],[\"all=\",{\"1\":{\"959\":2,\"960\":1,\"961\":1}}],[\"all\",{\"1\":{\"90\":4,\"152\":1,\"519\":3,\"523\":20,\"540\":1,\"543\":3,\"547\":1,\"548\":1,\"557\":1,\"560\":1,\"563\":3,\"975\":1,\"977\":1,\"992\":1,\"1026\":2,\"1054\":2,\"1055\":1,\"1115\":1,\"1119\":1,\"1120\":1,\"1125\":1,\"1126\":2,\"1232\":2,\"1236\":1,\"1239\":1}}],[\"arbitraryargs\",{\"1\":{\"991\":1}}],[\"arbitrum\",{\"1\":{\"144\":1}}],[\"arc浏览器内置ai助手\",{\"1\":{\"731\":1}}],[\"arc\",{\"0\":{\"731\":1},\"1\":{\"731\":2}}],[\"architecture\",{\"1\":{\"537\":1}}],[\"archives\",{\"2\":{\"1\":1,\"2\":1}}],[\"artificial\",{\"1\":{\"563\":1,\"569\":1}}],[\"article\",{\"1\":{\"557\":1}}],[\"articles\",{\"1\":{\"543\":1,\"1038\":3}}],[\"arm64\",{\"1\":{\"899\":1,\"970\":2}}],[\"arm\",{\"1\":{\"543\":4}}],[\"around\",{\"1\":{\"523\":3,\"547\":1}}],[\"arrow\",{\"1\":{\"1126\":1}}],[\"array\",{\"1\":{\"1019\":1,\"1188\":1}}],[\"arrangement\",{\"1\":{\"523\":1}}],[\"arranged\",{\"1\":{\"523\":1}}],[\"arr\",{\"1\":{\"313\":24,\"944\":12,\"945\":16,\"946\":7,\"947\":21,\"948\":23,\"949\":13,\"950\":16,\"967\":19}}],[\"arg3\",{\"1\":{\"1163\":3}}],[\"arg2\",{\"1\":{\"1163\":3}}],[\"arg1\",{\"1\":{\"1163\":3}}],[\"argument\",{\"1\":{\"1019\":1}}],[\"arguments\",{\"1\":{\"467\":1,\"991\":3}}],[\"arg\",{\"1\":{\"979\":5,\"988\":2,\"1163\":2}}],[\"args就可以解决\",{\"1\":{\"1163\":1}}],[\"args\",{\"1\":{\"968\":8,\"980\":7,\"988\":1,\"990\":1,\"991\":1,\"992\":7,\"993\":15,\"1011\":5,\"1063\":18,\"1163\":10}}],[\"argv\",{\"1\":{\"90\":12,\"436\":1}}],[\"argc\",{\"1\":{\"90\":6}}],[\"area\",{\"1\":{\"1118\":1}}],[\"aren\",{\"1\":{\"1055\":1}}],[\"arena是一个二维数组\",{\"1\":{\"1149\":1}}],[\"arena\",{\"1\":{\"151\":1}}],[\"are\",{\"0\":{\"1119\":1,\"1121\":1},\"1\":{\"90\":4,\"277\":1,\"447\":1,\"459\":1,\"467\":1,\"483\":1,\"519\":1,\"523\":21,\"537\":1,\"540\":1,\"543\":11,\"547\":14,\"548\":2,\"549\":2,\"550\":1,\"563\":7,\"992\":1,\"1055\":2,\"1118\":3,\"1119\":3,\"1122\":1,\"1123\":4,\"1124\":1,\"1125\":1,\"1126\":1,\"1127\":1}}],[\"abide\",{\"1\":{\"563\":1}}],[\"abilityis\",{\"1\":{\"557\":1}}],[\"ability\",{\"1\":{\"537\":1,\"547\":1,\"1127\":1}}],[\"ablity\",{\"1\":{\"557\":1}}],[\"able\",{\"1\":{\"78\":1,\"523\":1,\"1055\":1,\"1116\":1,\"1119\":1,\"1120\":1}}],[\"abundance\",{\"1\":{\"523\":1}}],[\"abort\",{\"1\":{\"1100\":1}}],[\"aborted\",{\"1\":{\"1074\":1}}],[\"above\",{\"1\":{\"519\":1,\"543\":2,\"1120\":1,\"1122\":1,\"1124\":3,\"1125\":1,\"1126\":2,\"1127\":2}}],[\"about\",{\"1\":{\"70\":1,\"435\":1,\"519\":1,\"523\":3,\"537\":1,\"540\":1,\"543\":7,\"547\":8,\"548\":2,\"751\":1}}],[\"abaccdeff\",{\"1\":{\"322\":1}}],[\"abaca\",{\"1\":{\"291\":1}}],[\"ab\",{\"1\":{\"291\":1}}],[\"absolutepath\",{\"1\":{\"1053\":2}}],[\"absorb\",{\"1\":{\"523\":1}}],[\"abs\",{\"1\":{\"239\":3,\"329\":2,\"1207\":1}}],[\"abcabcbb\",{\"1\":{\"320\":1}}],[\"abcced\",{\"1\":{\"284\":2}}],[\"abcdefg\",{\"1\":{\"335\":2}}],[\"abcde\",{\"1\":{\"260\":5,\"263\":1,\"264\":1}}],[\"abc\",{\"1\":{\"210\":1,\"263\":1,\"311\":2,\"320\":1,\"1191\":4,\"1238\":1}}],[\"adqssw5c\",{\"1\":{\"1047\":1}}],[\"ads\",{\"1\":{\"563\":2}}],[\"adult\",{\"1\":{\"547\":1}}],[\"advertising\",{\"1\":{\"563\":2}}],[\"advertisements\",{\"1\":{\"547\":3}}],[\"advantages\",{\"1\":{\"519\":1}}],[\"advances\",{\"1\":{\"523\":1}}],[\"advance\",{\"1\":{\"464\":1}}],[\"advanced\",{\"1\":{\"78\":1}}],[\"adjustable\",{\"1\":{\"540\":1}}],[\"ad\",{\"1\":{\"266\":2,\"563\":1}}],[\"admin\",{\"1\":{\"200\":4,\"1047\":2}}],[\"adapters\",{\"1\":{\"194\":1}}],[\"adapter\",{\"1\":{\"194\":6,\"905\":2}}],[\"added\",{\"1\":{\"1212\":2}}],[\"addeddate\",{\"1\":{\"1212\":2}}],[\"adddate\",{\"1\":{\"1205\":1,\"1212\":2,\"1213\":1}}],[\"adds\",{\"1\":{\"1052\":1}}],[\"addslots命令执行完毕之后\",{\"1\":{\"428\":1}}],[\"addslots命令接受一个或多个槽作为参数\",{\"1\":{\"428\":1}}],[\"addslots命令的实现\",{\"1\":{\"428\":1}}],[\"addslots命令\",{\"1\":{\"428\":1}}],[\"addslots\",{\"1\":{\"413\":1,\"428\":4}}],[\"addjob\",{\"1\":{\"1005\":1}}],[\"addfunc之外\",{\"1\":{\"1005\":1}}],[\"addfunc\",{\"1\":{\"1001\":2,\"1002\":1}}],[\"addcommand\",{\"1\":{\"992\":2}}],[\"addmoneytowallet\",{\"1\":{\"927\":1}}],[\"addoperation\",{\"1\":{\"855\":3}}],[\"addbook\",{\"1\":{\"827\":6}}],[\"addhandler\",{\"1\":{\"814\":3}}],[\"addint32\",{\"1\":{\"1142\":1,\"1143\":4}}],[\"addicted\",{\"1\":{\"563\":1}}],[\"addictions\",{\"1\":{\"563\":1}}],[\"addictive\",{\"1\":{\"543\":1}}],[\"additional\",{\"1\":{\"939\":1,\"1127\":1}}],[\"addition\",{\"1\":{\"547\":1}}],[\"addroute\",{\"1\":{\"1053\":5}}],[\"addr命令之后\",{\"1\":{\"426\":1}}],[\"addr命令回复\",{\"1\":{\"426\":1}}],[\"addr命令\",{\"1\":{\"426\":3}}],[\"address\",{\"1\":{\"90\":1,\"105\":1,\"424\":1,\"563\":1,\"1054\":3,\"1055\":3}}],[\"addr\",{\"1\":{\"90\":60,\"426\":3,\"516\":1,\"976\":2,\"1054\":2,\"1055\":13,\"1079\":1}}],[\"add\",{\"1\":{\"60\":1,\"152\":5,\"458\":2,\"481\":4,\"563\":1,\"867\":3,\"915\":5,\"927\":1,\"988\":1,\"989\":1,\"997\":2,\"1019\":1,\"1047\":1,\"1055\":3,\"1063\":6,\"1119\":1,\"1123\":1,\"1144\":7,\"1205\":1,\"1212\":2,\"1213\":1}}],[\"apart\",{\"1\":{\"523\":1}}],[\"apk\",{\"1\":{\"519\":1}}],[\"april\",{\"1\":{\"569\":1}}],[\"apr`\",{\"1\":{\"152\":1}}],[\"apr``insurance\",{\"1\":{\"152\":1}}],[\"apr\",{\"1\":{\"152\":22}}],[\"apy>12\",{\"1\":{\"156\":1}}],[\"apy\",{\"1\":{\"151\":1}}],[\"appname\",{\"1\":{\"988\":2}}],[\"apps\",{\"1\":{\"563\":1}}],[\"apps申请一个github\",{\"1\":{\"192\":1}}],[\"apple\",{\"1\":{\"977\":4}}],[\"apply\",{\"1\":{\"563\":1}}],[\"applications\",{\"1\":{\"989\":1,\"1119\":1}}],[\"application\",{\"1\":{\"193\":1,\"195\":1,\"516\":1,\"543\":1,\"973\":1,\"989\":3,\"1080\":1}}],[\"appropriateness\",{\"1\":{\"547\":1}}],[\"appeared\",{\"1\":{\"523\":4}}],[\"appear\",{\"1\":{\"523\":2,\"563\":1}}],[\"appears\",{\"1\":{\"523\":2}}],[\"appendxxx\",{\"0\":{\"1199\":1},\"1\":{\"1199\":2}}],[\"appendformat\",{\"1\":{\"1212\":1}}],[\"appendfloat\",{\"1\":{\"1198\":1,\"1199\":4}}],[\"appendfsync选项有always\",{\"1\":{\"422\":1}}],[\"appendint\",{\"1\":{\"1198\":1}}],[\"appendbool\",{\"1\":{\"1198\":1,\"1199\":4}}],[\"appendtooutgoingcontext\",{\"1\":{\"1094\":1,\"1095\":1}}],[\"appendtail\",{\"1\":{\"280\":3}}],[\"append\",{\"1\":{\"208\":4,\"209\":2,\"210\":1,\"211\":2,\"212\":4,\"213\":1,\"214\":2,\"215\":2,\"216\":2,\"217\":2,\"218\":2,\"219\":2,\"278\":1,\"280\":2,\"301\":3,\"302\":1,\"303\":4,\"304\":5,\"305\":5,\"307\":4,\"311\":2,\"323\":4,\"336\":3,\"403\":2,\"414\":1,\"422\":1,\"481\":2,\"516\":1,\"517\":1,\"814\":1,\"827\":1,\"833\":1,\"838\":1,\"844\":2,\"867\":2,\"915\":1,\"1011\":2,\"1019\":1,\"1052\":1,\"1053\":2,\"1093\":1,\"1097\":1,\"1099\":2,\"1169\":1,\"1181\":1,\"1198\":1}}],[\"app全部代码\",{\"1\":{\"521\":1}}],[\"app的client\",{\"1\":{\"192\":1}}],[\"app的文档\",{\"1\":{\"192\":1}}],[\"app项目\",{\"0\":{\"192\":1}}],[\"app快速搭建项目\",{\"1\":{\"192\":1}}],[\"app快速搭建项目后\",{\"1\":{\"191\":1}}],[\"app快速搭建nextjs项目\",{\"1\":{\"191\":1}}],[\"app会自动帮你安装这些依赖\",{\"1\":{\"191\":1}}],[\"app可以帮助你节省这些时间\",{\"1\":{\"191\":1}}],[\"app是一个nextjs的脚手架\",{\"1\":{\"191\":1}}],[\"app\",{\"1\":{\"60\":3,\"192\":3,\"519\":4,\"521\":2,\"548\":1,\"563\":1,\"975\":1,\"976\":1,\"981\":15,\"988\":3}}],[\"api转换成grpc\",{\"1\":{\"1078\":1}}],[\"api类型\",{\"1\":{\"980\":1}}],[\"api返回结果\",{\"1\":{\"973\":1}}],[\"api请求参数\",{\"1\":{\"973\":1}}],[\"api路由\",{\"1\":{\"191\":1}}],[\"api\",{\"1\":{\"60\":3,\"131\":3,\"192\":1,\"195\":3,\"393\":1,\"402\":1,\"494\":1,\"973\":2,\"980\":3,\"1078\":1,\"1079\":7,\"1080\":15,\"1156\":1}}],[\"apt\",{\"1\":{\"58\":7}}],[\"audienct\",{\"1\":{\"1047\":1}}],[\"aud\",{\"1\":{\"1047\":1}}],[\"aug\",{\"1\":{\"967\":3}}],[\"authenticated\",{\"1\":{\"1045\":4,\"1047\":1}}],[\"authentication\",{\"1\":{\"192\":1,\"1045\":2,\"1099\":1},\"2\":{\"202\":1}}],[\"authoriterator\",{\"1\":{\"827\":9}}],[\"authorized返回\",{\"1\":{\"200\":1}}],[\"authorized\",{\"1\":{\"200\":2}}],[\"authorize\",{\"1\":{\"195\":1}}],[\"authorization\",{\"1\":{\"195\":1,\"814\":4,\"1099\":4}}],[\"author\",{\"1\":{\"827\":18}}],[\"authoptions\",{\"1\":{\"194\":1,\"199\":1}}],[\"auth\",{\"1\":{\"191\":1,\"192\":6,\"194\":5,\"199\":1,\"433\":3,\"1045\":2},\"2\":{\"202\":1}}],[\"autoid\",{\"1\":{\"1098\":1}}],[\"autoinc\",{\"1\":{\"369\":4}}],[\"automatically\",{\"1\":{\"523\":2,\"1127\":1}}],[\"autocommit\",{\"1\":{\"370\":1}}],[\"auto\",{\"0\":{\"369\":1},\"1\":{\"58\":1,\"365\":1,\"369\":12}}],[\"aufs\",{\"1\":{\"58\":1,\"78\":4}}],[\"a购入了\",{\"1\":{\"26\":1}}],[\"a\",{\"0\":{\"550\":1,\"1118\":1,\"1123\":1},\"1\":{\"26\":5,\"53\":1,\"69\":1,\"70\":1,\"72\":1,\"90\":7,\"150\":1,\"169\":16,\"192\":1,\"228\":3,\"231\":3,\"239\":4,\"244\":3,\"245\":3,\"249\":3,\"250\":3,\"252\":6,\"257\":6,\"259\":2,\"266\":2,\"268\":3,\"284\":2,\"285\":3,\"291\":8,\"297\":21,\"318\":1,\"319\":3,\"321\":5,\"322\":2,\"328\":3,\"329\":7,\"333\":4,\"334\":2,\"360\":3,\"362\":4,\"374\":4,\"383\":5,\"384\":5,\"386\":7,\"425\":1,\"426\":1,\"436\":2,\"447\":3,\"448\":1,\"461\":6,\"462\":6,\"467\":1,\"468\":2,\"469\":2,\"475\":2,\"483\":1,\"505\":1,\"514\":1,\"519\":2,\"523\":63,\"534\":1,\"537\":8,\"540\":4,\"543\":24,\"547\":28,\"548\":4,\"549\":4,\"550\":1,\"557\":5,\"560\":9,\"563\":12,\"574\":1,\"580\":2,\"773\":1,\"808\":3,\"814\":5,\"827\":6,\"833\":5,\"844\":2,\"849\":3,\"867\":2,\"910\":5,\"958\":10,\"960\":20,\"972\":2,\"975\":2,\"980\":1,\"981\":5,\"989\":4,\"992\":2,\"1052\":2,\"1054\":1,\"1055\":11,\"1063\":14,\"1073\":4,\"1080\":2,\"1100\":1,\"1115\":2,\"1116\":2,\"1118\":8,\"1119\":8,\"1120\":4,\"1121\":1,\"1122\":16,\"1123\":7,\"1124\":5,\"1125\":5,\"1126\":8,\"1127\":7,\"1167\":3,\"1168\":3,\"1169\":3,\"1171\":4,\"1172\":3,\"1173\":6,\"1179\":1,\"1187\":3,\"1188\":8,\"1191\":4}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
