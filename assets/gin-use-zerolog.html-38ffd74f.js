import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as k,b as s,f as r,d as a,a as t,w as d,e as c}from"./app-eb0ff571.js";const v={},m={class:"hint-container tip"};function g(b,n){const e=p("RouterLink"),o=p("HopeIcon"),u=p("BiliBili");return l(),k("div",null,[n[7]||(n[7]=s("p",null,"gin框架是是目前Go Web领域中最受欢迎的框架，凭借其简单易用性使我们可以迅速构建Web应用。",-1)),n[8]||(n[8]=s("p",null,"但是gin框架内部的日志中间件不支持持久化日志，本文就来使用zerolog来写一个gin的中间件，来介绍在gin的项目中如何配置和使用zerolog并日志归档。",-1)),r(" more "),n[9]||(n[9]=s("h1",{id:"gin框架中使用zerolog日志库",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#gin框架中使用zerolog日志库","aria-hidden":"true"},"#"),a(" gin框架中使用zerolog日志库")],-1)),s("p",null,[t(e,{to:"/posts/program/golang/%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6%E5%B7%A5%E5%85%B7/zerolog/zerolog.html"},{default:d(()=>n[0]||(n[0]=[a("Zerolog日志库介绍")])),_:1})]),s("p",null,[n[1]||(n[1]=a("本文章已录制B站视频")),t(o,{icon:"fa6-brands:bilibili",color:"#23ADE5"}),n[2]||(n[2]=a("🚀🚀🚀 :"))]),t(u,{bvid:"BV1RB4y1f7YY"}),n[10]||(n[10]=c(`<p>我们在基于gin开发应用时，经常会使用专业的日志库来记录项目中的日志，比如<code>zap</code>、<code>logrus</code>等</p><p>但其实gin框架本身自带一个默认中间件<code>gin.Logger()</code></p><h3 id="gin默认中间件" tabindex="-1"><a class="header-anchor" href="#gin默认中间件" aria-hidden="true">#</a> gin默认中间件</h3><p>首先我们先来看一个最简单的gin项目:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
      <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Lixin&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>gin.Default()</code>源码:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>Engine <span class="token punctuation">{</span>
	<span class="token function">debugPrintWARNINGDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	engine <span class="token operator">:=</span> <span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	engine<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> engine
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到在我们使用gin.Default时，默认使用了<code>Logger(), Recovery()</code>两个中间件，Logger是将日志输出到标准输出(也就是输出到默认终端)，Recovery()是在程序panic的时恢复服务并返回500响应。</p><h2 id="基于zerolog的logger和recovey中间件" tabindex="-1"><a class="header-anchor" href="#基于zerolog的logger和recovey中间件" aria-hidden="true">#</a> 基于zerolog的Logger和Recovey中间件</h2><p>实际上我们可以参照gin框架自带的<code>Logger</code>和<code>Recovery</code>中间件实现(非常简单)，使用我们的日志库来接收gin框架自身的日志输出。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">GinLogger</span><span class="token punctuation">(</span>logger zerolog<span class="token punctuation">.</span>Logger<span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		path <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path
		query <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery
		cost <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span>
		<span class="token keyword">defer</span> logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;method&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">ClientIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;user-agent&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">UserAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Errors<span class="token punctuation">.</span><span class="token function">ByType</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>ErrorTypePrivate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Dur</span><span class="token punctuation">(</span><span class="token string">&quot;cost&quot;</span><span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// GinRecovery recovers possible project panic</span>
<span class="token keyword">func</span> <span class="token function">GinRecovery</span><span class="token punctuation">(</span>logger zerolog<span class="token punctuation">.</span>Logger<span class="token punctuation">,</span> stack <span class="token builtin">bool</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	zerolog<span class="token punctuation">.</span>ErrorStackMarshaler <span class="token operator">=</span> pkgerrors<span class="token punctuation">.</span>MarshalStack
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token comment">// Check for a broken connection, as it is not really a</span>
				<span class="token comment">// condition that warrants a panic stack trace.</span>
				<span class="token keyword">var</span> brokenPipe <span class="token builtin">bool</span>
				<span class="token keyword">if</span> ne<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>net<span class="token punctuation">.</span>OpError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
					<span class="token keyword">if</span> se<span class="token punctuation">,</span> ok <span class="token operator">:=</span> ne<span class="token punctuation">.</span>Err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>os<span class="token punctuation">.</span>SyscallError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
						<span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span>se<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;broken pipe&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span>se<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;connection reset by peer&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							brokenPipe <span class="token operator">=</span> <span class="token boolean">true</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>

				httpRequest<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> httputil<span class="token punctuation">.</span><span class="token function">DumpRequest</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> brokenPipe <span class="token punctuation">{</span>
					logger<span class="token punctuation">.</span>
						<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Any</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

					<span class="token comment">// If the connection is dead, we can&#39;t write a status to it.</span>
					c<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// nolint: errcheck</span>
					c<span class="token punctuation">.</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>

				<span class="token keyword">if</span> stack <span class="token punctuation">{</span>
					errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>debug<span class="token punctuation">.</span><span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					logger<span class="token punctuation">.</span>
						<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Err</span><span class="token punctuation">(</span>errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>debug<span class="token punctuation">.</span><span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;[Recovery from panic]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					logger<span class="token punctuation">.</span>
						<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;[Recovery from panic]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Any</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)),s("div",m,[n[6]||(n[6]=s("p",{class:"hint-container-title"},"提示",-1)),s("p",null,[n[3]||(n[3]=a("如果你不想自己实现一遍，也可以用我已经封装好的库 ")),t(o,{icon:"launch"}),n[4]||(n[4]=a()),n[5]||(n[5]=s("a",{href:"ginzero"},"https://github.com/LixvYang/ginzero",-1))])]),n[11]||(n[11]=c(`<p>不过其实，在我们真实的企业级项目中，应该给每个日志加上一个可追踪的xid，方便我们查看代码流程是否正确以及查找问题:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/rs/xid&quot;</span>

<span class="token keyword">func</span> <span class="token function">GinXid</span><span class="token punctuation">(</span>logger zerolog<span class="token punctuation">.</span>Logger<span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		xid <span class="token operator">:=</span> xid<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		logger<span class="token punctuation">.</span><span class="token function">UpdateContext</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>c zerolog<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> zerolog<span class="token punctuation">.</span>Context <span class="token punctuation">{</span>
			<span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;xid&quot;</span><span class="token punctuation">,</span> xid<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">&quot;xid&quot;</span><span class="token punctuation">,</span> xid<span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;logger&quot;</span><span class="token punctuation">,</span> logger<span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着在我们开发我们的gin接口时，就可以通过下述代码来获取我们的zlog了:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>zlog <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MustGet</span><span class="token punctuation">(</span><span class="token string">&quot;logger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>Logger<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="在真实gin项目中使用zerolog" tabindex="-1"><a class="header-anchor" href="#在真实gin项目中使用zerolog" aria-hidden="true">#</a> 在真实gin项目中使用zerolog</h2><p>想要在我们的真实生产环境中使用，我们还需要再加上日志切割、日志备份功能，这样就可以做到一个可以在真实生产环境中使用的日志了，我们可以使用lumberjack库帮助我们实现日志备份的功能。</p><p>下面我们就来完成日志初始化和日志备份的功能，来完善我们在gin框架下使用zerolog的功能。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Configuration for logging</span>
<span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// Enable console logging</span>
	ConsoleLoggingEnabled <span class="token builtin">bool</span>
	<span class="token comment">// EncodeLogsAsJson makes the log framework log JSON</span>
	EncodeLogsAsJson <span class="token builtin">bool</span>
	<span class="token comment">// FileLoggingEnabled makes the framework log to a file</span>
	<span class="token comment">// the fields below can be skipped if this value is false!</span>
	FileLoggingEnabled <span class="token builtin">bool</span>
	<span class="token comment">// Directory to log to to when filelogging is enabled</span>
	Directory <span class="token builtin">string</span>
	<span class="token comment">// Filename is the name of the logfile which will be placed inside the directory</span>
	Filename <span class="token builtin">string</span>
	<span class="token comment">// MaxSize the max size in MB of the logfile before it&#39;s rolled</span>
	MaxSize <span class="token builtin">int</span>
	<span class="token comment">// MaxBackups the max number of rolled files to keep</span>
	MaxBackups <span class="token builtin">int</span>
	<span class="token comment">// MaxAge the max age in days to keep a logfile</span>
	MaxAge <span class="token builtin">int</span>
	<span class="token comment">// Level the zerolog Level</span>
	Level <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> Lg zerolog<span class="token punctuation">.</span>Logger

<span class="token comment">// Configure sets up the logging framework</span>
<span class="token comment">//</span>
<span class="token comment">// In production, the container logs will be collected and file logging should be disabled. However,</span>
<span class="token comment">// during development it&#39;s nicer to see logs as text and optionally write to a file when debugging</span>
<span class="token comment">// problems in the containerized pipeline</span>
<span class="token comment">//</span>
<span class="token comment">// The output log file will be located at /var/log/service-xyz/service-xyz.log and</span>
<span class="token comment">// will be rolled according to configuration set.</span>
<span class="token keyword">func</span> <span class="token function">InitLogger</span><span class="token punctuation">(</span>config Config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	zerolog<span class="token punctuation">.</span>ErrorStackMarshaler <span class="token operator">=</span> pkgerrors<span class="token punctuation">.</span>MarshalStack
	zerolog<span class="token punctuation">.</span>TimeFieldFormat <span class="token operator">=</span> time<span class="token punctuation">.</span>RFC3339Nano

	<span class="token keyword">var</span> logLevel <span class="token operator">=</span> zerolog<span class="token punctuation">.</span><span class="token function">Level</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Level<span class="token punctuation">)</span>
	<span class="token keyword">if</span> config<span class="token punctuation">.</span>Level <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> config<span class="token punctuation">.</span>Level <span class="token operator">&gt;</span> <span class="token number">7</span> <span class="token punctuation">{</span>
		logLevel <span class="token operator">=</span> zerolog<span class="token punctuation">.</span>InfoLevel <span class="token comment">// default to INFO</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> writers <span class="token punctuation">[</span><span class="token punctuation">]</span>io<span class="token punctuation">.</span>Writer

	<span class="token keyword">if</span> config<span class="token punctuation">.</span>ConsoleLoggingEnabled <span class="token punctuation">{</span>
		writers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>writers<span class="token punctuation">,</span> zerolog<span class="token punctuation">.</span>ConsoleWriter<span class="token punctuation">{</span>
			Out<span class="token punctuation">:</span>        os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span>
			TimeFormat<span class="token punctuation">:</span> time<span class="token punctuation">.</span>RFC3339<span class="token punctuation">,</span>
			FieldsExclude<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
				<span class="token string">&quot;user_agent&quot;</span><span class="token punctuation">,</span>
				<span class="token string">&quot;git_revision&quot;</span><span class="token punctuation">,</span>
				<span class="token string">&quot;go_version&quot;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> config<span class="token punctuation">.</span>FileLoggingEnabled <span class="token punctuation">{</span>
		writers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>writers<span class="token punctuation">,</span> <span class="token function">newRollingFile</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	mw <span class="token operator">:=</span> io<span class="token punctuation">.</span><span class="token function">MultiWriter</span><span class="token punctuation">(</span>writers<span class="token operator">...</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> gitRevision <span class="token builtin">string</span>

	buildInfo<span class="token punctuation">,</span> ok <span class="token operator">:=</span> debug<span class="token punctuation">.</span><span class="token function">ReadBuildInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> ok <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> buildInfo<span class="token punctuation">.</span>Settings <span class="token punctuation">{</span>
			<span class="token keyword">if</span> v<span class="token punctuation">.</span>Key <span class="token operator">==</span> <span class="token string">&quot;vcs.revision&quot;</span> <span class="token punctuation">{</span>
				gitRevision <span class="token operator">=</span> v<span class="token punctuation">.</span>Value
				<span class="token keyword">break</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	Lg <span class="token operator">=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>mw<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Level</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span><span class="token function">Level</span><span class="token punctuation">(</span>logLevel<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;git_revision&quot;</span><span class="token punctuation">,</span> gitRevision<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;go_version&quot;</span><span class="token punctuation">,</span> buildInfo<span class="token punctuation">.</span>GoVersion<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	Lg<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Bool</span><span class="token punctuation">(</span><span class="token string">&quot;fileLogging&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>FileLoggingEnabled<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Bool</span><span class="token punctuation">(</span><span class="token string">&quot;jsonLogOutput&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>EncodeLogsAsJson<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;logDirectory&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>Directory<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;fileName&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;maxSizeMB&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>MaxSize<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;maxBackups&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>MaxBackups<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;maxAgeInDays&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>MaxAge<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;logging configured&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">newRollingFile</span><span class="token punctuation">(</span>config Config<span class="token punctuation">)</span> io<span class="token punctuation">.</span>Writer <span class="token punctuation">{</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">MkdirAll</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Directory<span class="token punctuation">,</span> <span class="token number">0744</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		Lg<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>Directory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;can&#39;t create log directory&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>lumberjack<span class="token punctuation">.</span>Logger<span class="token punctuation">{</span>
		Filename<span class="token punctuation">:</span>   path<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Directory<span class="token punctuation">,</span> config<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span><span class="token punctuation">,</span>
		MaxBackups<span class="token punctuation">:</span> config<span class="token punctuation">.</span>MaxBackups<span class="token punctuation">,</span> <span class="token comment">// files</span>
		MaxSize<span class="token punctuation">:</span>    config<span class="token punctuation">.</span>MaxSize<span class="token punctuation">,</span>    <span class="token comment">// megabytes</span>
		MaxAge<span class="token punctuation">:</span>     config<span class="token punctuation">.</span>MaxAge<span class="token punctuation">,</span>     <span class="token comment">// days</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">GinLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		path <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path
		query <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery
		cost <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span>
		<span class="token keyword">defer</span> Lg<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;method&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">ClientIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;user-agent&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">UserAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Errors<span class="token punctuation">.</span><span class="token function">ByType</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>ErrorTypePrivate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Dur</span><span class="token punctuation">(</span><span class="token string">&quot;cost&quot;</span><span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// GinRecovery recovers possible project panic</span>
<span class="token keyword">func</span> <span class="token function">GinRecovery</span><span class="token punctuation">(</span>stack <span class="token builtin">bool</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	zerolog<span class="token punctuation">.</span>ErrorStackMarshaler <span class="token operator">=</span> pkgerrors<span class="token punctuation">.</span>MarshalStack
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token comment">// Check for a broken connection, as it is not really a</span>
				<span class="token comment">// condition that warrants a panic stack trace.</span>
				<span class="token keyword">var</span> brokenPipe <span class="token builtin">bool</span>
				<span class="token keyword">if</span> ne<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>net<span class="token punctuation">.</span>OpError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
					<span class="token keyword">if</span> se<span class="token punctuation">,</span> ok <span class="token operator">:=</span> ne<span class="token punctuation">.</span>Err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>os<span class="token punctuation">.</span>SyscallError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
						<span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span>se<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;broken pipe&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span>se<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;connection reset by peer&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							brokenPipe <span class="token operator">=</span> <span class="token boolean">true</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>

				httpRequest<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> httputil<span class="token punctuation">.</span><span class="token function">DumpRequest</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> brokenPipe <span class="token punctuation">{</span>
					Lg<span class="token punctuation">.</span>
						<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Any</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

					<span class="token comment">// If the connection is dead, we can&#39;t write a status to it.</span>
					c<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// nolint: errcheck</span>
					c<span class="token punctuation">.</span><span class="token function">Abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>

				<span class="token keyword">if</span> stack <span class="token punctuation">{</span>
					errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>debug<span class="token punctuation">.</span><span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					Lg<span class="token punctuation">.</span>
						<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Err</span><span class="token punctuation">(</span>errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>debug<span class="token punctuation">.</span><span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;[Recovery from panic]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					Lg<span class="token punctuation">.</span>
						<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;[Recovery from panic]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Any</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有代码我将上传到github仓库中。</p>`,9))])}const y=i(v,[["render",g],["__file","gin-use-zerolog.html.vue"]]);export{y as default};
