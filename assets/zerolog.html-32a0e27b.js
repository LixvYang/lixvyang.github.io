import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as k,c as r,b as s,d as a,a as t,f as d,e,w as g}from"./app-eb0ff571.js";const v="/assets/images/program/zlog/zlog1.png",m="/assets/images/program/zlog/zlog2.png",q="/assets/images/program/zlog/zerolog_mixin_demo.jpg",b={},f={href:"https://github.com/rs/zerolog",target:"_blank",rel:"noopener noreferrer"},h={class:"hint-container tip"},w={href:"https://developers.mixin.one/",target:"_blank",rel:"noopener noreferrer"};function x(z,n){const o=p("ExternalLinkIcon"),c=p("HopeIcon"),u=p("BiliBili"),i=p("RouterLink");return k(),r("div",null,[s("p",null,[s("a",f,[n[0]||(n[0]=a("Zerolog")),t(o)]),n[1]||(n[1]=a("是一个高性能、零分配的Go日志库。它在记录日志的时候不需要在堆上分配内存，所以也不需要垃圾回收，可以以完全零分配的方式使用。"))]),d(" more "),s("p",null,[n[2]||(n[2]=a("本文章视频已上传至B站")),t(c,{icon:"fa6-brands:bilibili",color:"#23ADE5"}),n[3]||(n[3]=a("🚀🚀🚀 :"))]),t(u,{bvid:"BV1T94y1h7SB"}),n[8]||(n[8]=e(`<h1 id="go-语言使用zerolog日志库" tabindex="-1"><a class="header-anchor" href="#go-语言使用zerolog日志库" aria-hidden="true">#</a> Go 语言使用zerolog日志库</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>zerolog可以通过以下命令安装到你的Go项目中:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">go</span> get <span class="token operator">-</span>u github<span class="token punctuation">.</span>com<span class="token operator">/</span>rs<span class="token operator">/</span>zerolog<span class="token operator">/</span>log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="入门" tabindex="-1"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h2><p>该库提供了一个预配置的全局可用的记录器，你可以通过软件包(zerolog/log)导入并在当前项目中使用。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;github.com/rs/zerolog/log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Zerolog&quot;</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;来自全局Zerolog配置器&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上程序可以将JSON格式的数据输出到控制台:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T14:39:44+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Hello Zerolog&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T14:39:44+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;来自全局Zerolog配置器&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志级别" tabindex="-1"><a class="header-anchor" href="#日志级别" aria-hidden="true">#</a> 日志级别</h2><p>日志级别有以下几种，优先级逐渐提高:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Level <span class="token builtin">int8</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span>
    <span class="token comment">// TRACE （-1）：用于跟踪代码执行路径</span>
	TraceLevel Level <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token comment">// DEBUG （0）：对程序故障排除有用的消息</span>
	DebugLevel Level <span class="token operator">=</span> <span class="token boolean">iota</span>
    <span class="token comment">// INFO （1）：描述应用正常运行的消息</span>
	InfoLevel
    <span class="token comment">// WARNING （2）：用于记录可能需要稍后检查的事件</span>
	WarnLevel
    <span class="token comment">// ERROR （3）：特定操作的错误消息</span>
	ErrorLevel
    <span class="token comment">// FATAL （4）：应用程序无法恢复的严重错误。 os.Exit(1) 在记录消息后调用</span>
	FatalLevel
    <span class="token comment">// PANIC （5）：与 类似 FATAL ，但 panic() 改为调用</span>
	PanicLevel
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，全局配置器的最低级别是<code>Trace</code>，但是你可以通过调用<code>zerolog</code>包提供的<code>SetGlobalLevel()</code>函数来设置打印日志的最低级别</p><p>如果我们设置最低级别是zerolog.ErrorLevel,那么Trace、Debug、Info、Warn级别的日志就不会打印了:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;github.com/rs/zerolog&quot;</span>
	<span class="token string">&quot;github.com/rs/zerolog/log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	zerolog<span class="token punctuation">.</span><span class="token function">SetGlobalLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>ErrorLevel<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Zerolog&quot;</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;来自全局Zerolog配置器&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T14:44:52+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;来自全局Zerolog配置器&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="zerolog-api" tabindex="-1"><a class="header-anchor" href="#zerolog-api" aria-hidden="true">#</a> Zerolog API</h2><p>Zerolog提供了一个简单的结构化的日志记录API，以便于我们使用。Logger类型表示写入某个<code>io.Writer</code>，全局记录器<code>zerolog/log</code>默认的接口为<code>os.Stderr</code>,你可以使用<code>zerolog.New()</code>方法来创建一个新的自定义的Logger：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;os&quot;</span>

	<span class="token string">&quot;github.com/rs/zerolog&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Hello new logger&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Hello new logger&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>类似的我们可以通过在初始化时指定对应的级别来设置可打印日志的最低级别,如果我们初始化logger成这样，那么就不会打印对应的信息了:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>	logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Level</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>InfoLevel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="将日志中加上对应信息" tabindex="-1"><a class="header-anchor" href="#将日志中加上对应信息" aria-hidden="true">#</a> 将日志中加上对应信息</h3><p>当我们使用log加上对应的级别<code>Info()</code>、<code>Debug()</code>时，返回级别其实是<code>zerolog.Event</code>,Event提供了一些方法可以让我们为我们的信息添加进入一些<code>键值对</code>对，以便日志条目包含足够的数据。比如，在记录服务器上的资源创建时，可以包括用户ID或客户端信息（如 IP 地址，设备信息），以便以后通过此类属性轻松过滤日志。 比如当查询日志时可以通过<code>grep</code>命令去过滤信息。</p><p>该Event类型的大多数方法都返回指向的Event指针，这样方便我们使用函数式编程方式将所有必要的上下文添加到Event。之后我们必须调用<code>Msgf()</code>、<code>MsgFunc()</code>、<code>Send()</code>来完成Event的打印. 通常，我们使用方法 Msg()用于通过向日志条目添加 message 字段来关闭Event。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;login!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;lixin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;login!&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果想要省略<code>message</code>字段,那么可以通过<code>Msg(&quot;&quot;)</code>或者<code>Send()</code>:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;lixin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;lixin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>请注意，必须在最后调用一个事件调用关闭方法(Send/Msg/MsgFunc)， zerolog.Event以便记录相应的条目。如果未使用这些方法，则不会记录日志。</p></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出为空</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>除此之外，一次Event，一次Msg/Send，防止出现日志意外情况:</p></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span>
	event <span class="token operator">:=</span> logger<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	event<span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">)</span>
	event<span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这也是函数链式编程的好处，如果你可以使用链式编程，那么上述的问题就不会发生。</p><h2 id="配置日志记录器的全局信息" tabindex="-1"><a class="header-anchor" href="#配置日志记录器的全局信息" aria-hidden="true">#</a> 配置日志记录器的全局信息</h2><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在上一节中，我们了解了如何使用 zerolog.Event 类型上的方法向日志中添加相关属性信息。</p><p>我们这一部分将更进一步，向你展示如何将属性数据信息添加到自身Logger，以确保此类数据包含在全局记录器生成的所有后续日志中。</p></div><p>我们可以使用返回Context的With()方法。可以让我们通过类似于 zerolog.Event 类型上的字段方法以键值对的形式向记录器添加其他属性。然后，在将必要的数据添加到上下文后，必须调用该方法 Logger() 以返回具有更新了上下文的新 Logger 对象，比如添加Timestamp()的Logger对象:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span>
		<span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span>
		<span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span>
		<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:08:46+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;lixin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:08:46+08:00&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码段将该<code>time</code>字段添加到生成<code>logger</code>的所有记录中，因为所有日志记录都应包含时间戳。你还可以将文件和行号添加到所有日志条目(添加Caller)，如下所示：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span>
		<span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Caller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span>
		<span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span>
		<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:12:21+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;caller&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;/Users/lixin/code/demo_zlog/main.go:19&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;lixin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:12:21+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;caller&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;/Users/lixin/code/demo_zlog/main.go:24&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>又由于方法Logger()返回一个全新的Logger，所以你可以使用该方法With()实现子记录器，这些记录器使用相关元数据注释特定范围内的所有日志Logger，以将它们与其他记录区分开来。下面是一个示例：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> logger <span class="token operator">=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mainLogger <span class="token operator">:=</span> logger<span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mainLogger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;main logger&quot;</span><span class="token punctuation">)</span>

	<span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	authLogger <span class="token operator">:=</span> logger<span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	authLogger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;auth logger&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	userLogger <span class="token operator">:=</span> logger<span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	userLogger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;user logger&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:18:58+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;main logger&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:18:58+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;auth logger&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:18:58+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;user logger&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了<code>With</code>方式添加属性信息外，还有<code>UpdateContext()</code>方法:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">UpdateContext</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>c zerolog<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> zerolog<span class="token punctuation">.</span>Context <span class="token punctuation">{</span>
		<span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lixin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;info message&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;lixin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T16:22:05+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info message&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="美化你的日志信息" tabindex="-1"><a class="header-anchor" href="#美化你的日志信息" aria-hidden="true">#</a> 美化你的日志信息</h2><p>在开发环境中，我们可能想要gin框架那样简单美观的日志信息，这样就可以轻松发现各种异常事件，zerolog提供了一个控制台编写器类型，用于解析原始JSON条目，并将其以彩色格式输出。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>	buildInfo<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> debug<span class="token punctuation">.</span><span class="token function">ReadBuildInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	cpuProfile <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">NumCPU</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	numGoroutine <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">NumGoroutine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>ConsoleWriter<span class="token punctuation">{</span>Out<span class="token punctuation">:</span> os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> TimeFormat<span class="token punctuation">:</span> time<span class="token punctuation">.</span>RFC1123<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Level</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>TraceLevel<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Caller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;pid&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">Getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;go_version&quot;</span><span class="token punctuation">,</span> buildInfo<span class="token punctuation">.</span>GoVersion<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;cpu_num&quot;</span><span class="token punctuation">,</span> cpuProfile<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;goroutine_num&quot;</span><span class="token punctuation">,</span> numGoroutine<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;trace message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;debug message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;info message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;warn message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;error message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>FatalLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;fatal message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>PanicLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;panic message&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST TRC main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">28</span> <span class="token operator">&gt;</span> trace message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST DBG main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">29</span> <span class="token operator">&gt;</span> debug message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST INF main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">30</span> <span class="token operator">&gt;</span> info message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST WRN main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">31</span> <span class="token operator">&gt;</span> warn message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST ERR main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">32</span> <span class="token operator">&gt;</span> <span class="token builtin">error</span> message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST FTL main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">33</span> <span class="token operator">&gt;</span> fatal message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
Mon<span class="token punctuation">,</span> <span class="token number">11</span> Sep <span class="token number">2023</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">35</span> CST PNC main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">34</span> <span class="token operator">&gt;</span> <span class="token builtin">panic</span> message cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">10562</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="zlog1.png" tabindex="0" loading="lazy"><figcaption>zlog1.png</figcaption></figure><p>还可以使用 ConsoleWriter 类型上提供的选项来自定义输出的外观和格式：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    buildInfo<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> debug<span class="token punctuation">.</span><span class="token function">ReadBuildInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	cpuProfile <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">NumCPU</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	numGoroutine <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">NumGoroutine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>ConsoleWriter<span class="token punctuation">{</span>
		Out<span class="token punctuation">:</span>        os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span>
		TimeFormat<span class="token punctuation">:</span> time<span class="token punctuation">.</span>RFC3339<span class="token punctuation">,</span>
		FormatLevel<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> strings<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;[%s]&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		FormatMessage<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;| %s |&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		FormatCaller<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> filepath<span class="token punctuation">.</span><span class="token function">Base</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		PartsExclude<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
			zerolog<span class="token punctuation">.</span>TimestampFieldName<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Level</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>TraceLevel<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Caller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;pid&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">Getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Str</span><span class="token punctuation">(</span><span class="token string">&quot;go_version&quot;</span><span class="token punctuation">,</span> buildInfo<span class="token punctuation">.</span>GoVersion<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;cpu_num&quot;</span><span class="token punctuation">,</span> cpuProfile<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;goroutine_num&quot;</span><span class="token punctuation">,</span> numGoroutine<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;trace message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;debug message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;info message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;warn message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;error message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>FatalLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;fatal message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>PanicLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;panic message&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span>TRACE<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">46</span> <span class="token operator">|</span> trace message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
<span class="token punctuation">[</span>DEBUG<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">47</span> <span class="token operator">|</span> debug message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">48</span> <span class="token operator">|</span> info message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
<span class="token punctuation">[</span>WARN<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">49</span> <span class="token operator">|</span> warn message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
<span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">50</span> <span class="token operator">|</span> <span class="token builtin">error</span> message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
<span class="token punctuation">[</span>FATAL<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">51</span> <span class="token operator">|</span> fatal message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
<span class="token punctuation">[</span>PANIC<span class="token punctuation">]</span> main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">52</span> <span class="token operator">|</span> <span class="token builtin">panic</span> message <span class="token operator">|</span> cpu_num<span class="token operator">=</span><span class="token number">10</span> go_version<span class="token operator">=</span>go1<span class="token punctuation">.</span><span class="token number">19.12</span> goroutine_num<span class="token operator">=</span><span class="token number">1</span> pid<span class="token operator">=</span><span class="token number">11202</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+`" alt="zlog2.png" tabindex="0" loading="lazy"><figcaption>zlog2.png</figcaption></figure><p>不要在生产环境中使用， ConsoleWriter会影响日志记录速度。提供它只是为了帮助在开发应用程序时更易于阅读日志。你可以判断配置是否是开发环境来判断是否启用 ConsoleWriter 输出：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> output io<span class="token punctuation">.</span>Writer <span class="token operator">=</span> zerolog<span class="token punctuation">.</span>ConsoleWriter<span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token keyword">if</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;GO_ENV&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&quot;development&quot;</span> <span class="token punctuation">{</span>
  output <span class="token operator">=</span> os<span class="token punctuation">.</span>Stderr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="zerolog的流控采样" tabindex="-1"><a class="header-anchor" href="#zerolog的流控采样" aria-hidden="true">#</a> Zerolog的流控采样</h2><p>采样(Sampling)是一种故意放弃重复日志条目的技术,这样只保留并处理其中的一部分,而不牺牲从日志信息。这对于高访问量应用程序产生大量记录很有用,如果保存每个记录,则会导致过度的存储和处理成本,这可能不是理想的。采样(Simpling)解决这个问题,通过防止相同的日志每秒记录数百或数千次,从而防止资源被无必要地耗尽。它能避免因保存每一条重复日志而导致的存储和计算成本过高的问题。</p><p>以下是使用 Zerolog 对日志进行采样的最基本方法：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    log <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">Sample</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>zerolog<span class="token punctuation">.</span>BasicSampler<span class="token punctuation">{</span>N<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;%d message :&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此配置的BasicSampler Logger使得每个日志在五次中仅记录一次。这在for循环中演示，其中INFO消息通常会记录十次，但由于采样，它只记录两次：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:00:28+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;1 message&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:00:28+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;6 message&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Zerolog提供了其他更复杂的采样器。例如， BurstSampler 可用于限制在一定时间内记录的日志数：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>l <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Sample</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>zerolog<span class="token punctuation">.</span>BurstSampler<span class="token punctuation">{</span>
			Burst<span class="token punctuation">:</span>  <span class="token number">3</span><span class="token punctuation">,</span>
			Period<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">5</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token number">9</span> <span class="token punctuation">{</span>
			time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		l<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;a message from the gods: %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		l<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;warn message: %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		l<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;error message: %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，配置 BurstSampler 限制每秒 Logger 生成三个的日志。本来会在指定范围内记录的所有其他记录都将被丢弃。上面的 for 循环应该记录 30 条消息而不进行采样，但由于上面的配置，它只记录了9条消息：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:26+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 1&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:26+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn message: 1&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:26+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 1&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:27+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 5&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:27+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn message: 5&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:27+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 5&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:28+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 9&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:28+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn message: 9&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:03:28+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 9&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你还可以只将采样应用于特定级别，如下所示：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   	burstSampler <span class="token operator">:=</span> <span class="token operator">&amp;</span>zerolog<span class="token punctuation">.</span>BurstSampler<span class="token punctuation">{</span>
		Burst<span class="token punctuation">:</span>  <span class="token number">3</span><span class="token punctuation">,</span>
		Period<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	l <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Sample</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>LevelSampler<span class="token punctuation">{</span>
			WarnSampler<span class="token punctuation">:</span> burstSampler<span class="token punctuation">,</span>
			InfoSampler<span class="token punctuation">:</span> burstSampler<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">5</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token number">9</span> <span class="token punctuation">{</span>
			time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		l<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;a message from the gods: %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		l<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;warn message: %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		l<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msgf</span><span class="token punctuation">(</span><span class="token string">&quot;error message: %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，将仅对 和 WARN 日志 INFO 进行采样，而其他日志将照常记录，从而生成以下输出：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 1&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn message: 1&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 1&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 2&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 2&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 3&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:30+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 4&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 5&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn message: 5&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 5&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 6&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 6&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 7&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:31+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 8&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:32+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 9&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:32+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;warn message: 9&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:32+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 9&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:32+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;a message from the gods: 10&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-23T21:07:32+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error message: 10&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="zerolog钩子🪝" tabindex="-1"><a class="header-anchor" href="#zerolog钩子🪝" aria-hidden="true">#</a> Zerolog钩子🪝</h2><p>Zerolog 提供了一种通过 Hook 接口挂接到日志记录过程的方法，该接口定义如下：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Hook <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token comment">// Run runs the hook with the event.</span>
    <span class="token function">Run</span><span class="token punctuation">(</span>e <span class="token operator">*</span>zerolog<span class="token punctuation">.</span>Event<span class="token punctuation">,</span> level zerolog<span class="token punctuation">.</span>Level<span class="token punctuation">,</span> message <span class="token builtin">string</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在具体类型上实现Hook接口时，可以使用该方法 Logger.Hook()将其应用于Logger以便在每次记录日志时执行其Run()方法。然后，你可以根据事件的日志级别或其他一些条件运行不同的操作。</p><p>比如你可以记录一下系统发生 PANIC 时，发送报警信息到Mixin/企业微信等。</p><p>下面我演示一下，当日志打印PANIC时，Mixin机器人将发送报警信息到我的Mixin账号上:</p>`,93)),s("div",h,[n[6]||(n[6]=s("p",{class:"hint-container-title"},"提示",-1)),s("p",null,[s("a",w,[n[4]||(n[4]=a("Mixin")),t(o)]),n[5]||(n[5]=a("类似微信，我们操控Mixin机器人类似于,操控小程序一样..."))])]),n[9]||(n[9]=e(`<p>下面是将记录当发生 FATAL 级别的日志时，将具体的报警信息发送到我的Mixin账号的示例：</p><p>我当前目录下的文件结构:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├── config.json // 存放mixin机器人的配置信息
├── go.mod 		
├── go.sum	
├── main.go		
└── uid.txt		// 我自己账号的uid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// config.json 后续我会改掉</span>
<span class="token comment">// 可以通过在mixin上注册机器人自动获得</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;client_id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;30aad5a5-e5f3-4824-9409-c2ff4152724e&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;session_id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;dc54f7c0-0640-49c3-aa4d-f5d3fe79c65c&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;private_key&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;VDdoIRQAuSqZwNq5wau6QlIU3EWZTkaUNhdxRlpe-VpZZgn-i24uaJcU5sNSGzcD9NjJS53TMYk0rsODVTQTUQ&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;pin_token&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Szi3c7Dy7hVZAbnJN1NWAtNcDe6SS2aJd5NO-bYI5Xw&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>
	<span class="token string">&quot;encoding/base64&quot;</span>
	<span class="token string">&quot;encoding/json&quot;</span>
	<span class="token string">&quot;io/ioutil&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token string">&quot;sync&quot;</span>
	<span class="token string">&quot;time&quot;</span>

	<span class="token string">&quot;github.com/fox-one/mixin-sdk-go&quot;</span>
	<span class="token string">&quot;github.com/rs/zerolog&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> <span class="token punctuation">(</span>
	logger   zerolog<span class="token punctuation">.</span>Logger
	MixinCli <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>mixin<span class="token punctuation">.</span>Client<span class="token punctuation">)</span>
	wg       sync<span class="token punctuation">.</span>WaitGroup
	uid      <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">&quot;uid&quot;</span><span class="token punctuation">)</span>
	store    mixin<span class="token punctuation">.</span>Keystore
<span class="token punctuation">)</span>

<span class="token keyword">type</span> MixinPanicHook <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>MixinPanicHook<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span>
	e <span class="token operator">*</span>zerolog<span class="token punctuation">.</span>Event<span class="token punctuation">,</span>
	level zerolog<span class="token punctuation">.</span>Level<span class="token punctuation">,</span>
	message <span class="token builtin">string</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> level <span class="token operator">&gt;=</span> zerolog<span class="token punctuation">.</span>PanicLevel <span class="token punctuation">{</span>
		wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token boolean">_</span> <span class="token operator">=</span> <span class="token function">notify</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
			wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">notify</span><span class="token punctuation">(</span>msg <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token comment">// Send to Mixin / 企业微信 / Telegram</span>
	ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">return</span> <span class="token function">SendPanicMsg</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> msg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	content<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;uid.txt&quot;</span><span class="token punctuation">)</span>
	uid <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
	logger <span class="token operator">=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Level</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>TraceLevel<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Hook</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>MixinPanicHook<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;error message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>FatalLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;fatal message&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>PanicLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;系统发生了Panic消息😭...&quot;</span><span class="token punctuation">)</span>

	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Open the keystore file</span>
	f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;./config.json&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Panicln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Read the keystore file as json into mixin.Keystore, which is a go struct</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Panicln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	MixinCli<span class="token punctuation">,</span> err <span class="token operator">=</span> mixin<span class="token punctuation">.</span><span class="token function">NewFromKeystore</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>store<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;init mixin client error.&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">SendPanicMsg</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> msg <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> MixinCli<span class="token punctuation">.</span><span class="token function">SendMessage</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>mixin<span class="token punctuation">.</span>MessageRequest<span class="token punctuation">{</span>
		MessageID<span class="token punctuation">:</span>      mixin<span class="token punctuation">.</span><span class="token function">RandomTraceID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		ConversationID<span class="token punctuation">:</span> mixin<span class="token punctuation">.</span><span class="token function">UniqueConversationID</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>ClientID<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">,</span>
		RecipientID<span class="token punctuation">:</span>    uid<span class="token punctuation">,</span>
		Category<span class="token punctuation">:</span>       mixin<span class="token punctuation">.</span>MessageCategoryPlainText<span class="token punctuation">,</span>
		Data<span class="token punctuation">:</span>           msg<span class="token punctuation">,</span>
		DataBase64<span class="token punctuation">:</span>     base64<span class="token punctuation">.</span>RawURLEncoding<span class="token punctuation">.</span><span class="token function">EncodeToString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当运行以上main.go程序，就会给我自己的mixin账号报警:</p><figure><img src="`+q+`" alt="zlog-mixin.png" tabindex="0" loading="lazy"><figcaption>zlog-mixin.png</figcaption></figure><p>上面的程序创建了一个 MixinPanicHook 实现接口的类型 zerolog.Hook。它的方法检查正在记录的消息的级别，如果它Run()的级别和 PANIC 一样严重，则将其发送到我的mixin账号。如果你运行该程序，你还观察到每条日志消息都打印到控制台。</p><h2 id="zerolog错误处理" tabindex="-1"><a class="header-anchor" href="#zerolog错误处理" aria-hidden="true">#</a> Zerolog错误处理</h2><p>错误处理是确保快速检测和修复错误的最重要的事情之一，因此日志记录框架必须配备齐全才能令人满意地执行此操作。Zerolog提供了一些帮助程序来记录错误，我们将在本节中演示这些程序。</p><p>使用Zerolog记录错误的最简单方法是在ERROR级别记录并在Err()生成的zerolog.Event, 这会向日志条目添加一个 error 属性，其中包含相关错误的详细信息：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">Err</span><span class="token punctuation">(</span>errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;err happened&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;err happened&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:25:44+08:00&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你可以通过更改以下 zerolog.ErrorFieldName 值将错误的字段名称更改为其他值：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>zerolog<span class="token punctuation">.</span>ErrorFieldName <span class="token operator">=</span> <span class="token string">&quot;错误信息&quot;</span>
logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">Err</span><span class="token punctuation">(</span>errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;err happened&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
	<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;错误信息&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;err happened&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:26:40+08:00&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>虽然上面的输出提供了有关所发生错误的详细信息，但它没有显示导致错误的代码执行路径，这对于调试问题至关重要。你可以通过 Event 上 Stack() 的方法在错误日志中包含堆栈跟踪来解决此问题，但在它生效之前，必须分配给 zerolog.ErrorStackMarshaler 可以从错误中提取堆栈跟踪的函数。你可以将 pkg/errors 与 zerolog/pkgerrors 帮助程序结合使用，以将堆栈跟踪添加到错误日志中，如下所示：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;github.com/pkg/errors&quot;</span>
	<span class="token string">&quot;github.com/rs/zerolog/pkgerrors&quot;</span>

	<span class="token string">&quot;github.com/rs/zerolog&quot;</span>
	<span class="token string">&quot;github.com/rs/zerolog/log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	zerolog<span class="token punctuation">.</span>ErrorStackMarshaler <span class="token operator">=</span> pkgerrors<span class="token punctuation">.</span>MarshalStack
	log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span>errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;seems we have an error here&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;stack&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;func&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;line&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;main.go&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;func&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;line&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;250&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;proc.go&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;func&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;goexit&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;line&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;1172&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;asm_arm64.s&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;seems we have an error here&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:54:28+08:00&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意这里引入的包是<code>&quot;github.com/pkg/errors&quot;</code>不是<code>&quot;errors&quot;</code>,这里是个坑。</p></div><p>还可以使用FATAL或者PANIC级别记录应用程序无法恢复的特别严重的错误。注意，在FATAL级别记录会导致程序立即退出，PANIC 级别在记录消息后将调用panic()。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	err <span class="token operator">:=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;failed to connect to database&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;something fatal happened!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;fatal&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;failed to connect to database&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:43:26+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;something fatal happened!&quot;</span><span class="token punctuation">}</span>
exit status <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要在不分别调用 os.Exit(1) 和 panic() 的情况下记录 FATAL 或 PANIC 级别消息，则必须使用如下所示 WithLevel() 的方法：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	err <span class="token operator">:=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;failed to connect to database&quot;</span><span class="token punctuation">)</span>
	logger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>zerolog<span class="token punctuation">.</span>FatalLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;something fatal happened!&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序不会立即退出，但仍会在适当的级别记录事件：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;fatal&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;failed to connect to database&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:44:25+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;something fatal happened!&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="持久化日志" tabindex="-1"><a class="header-anchor" href="#持久化日志" aria-hidden="true">#</a> 持久化日志</h2><p>使用 Zerolog 存入文件的选项与使用标准库日志包时几乎相同。由于可以将 io.Writer 实现接口的类型传递给 zerolog.New() 方法，因此只要使用适当的权限打开文件，任何 os.File 实例都将按预期工作。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;os&quot;</span>

	<span class="token string">&quot;github.com/rs/zerolog&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	file<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span>
		<span class="token string">&quot;zlog.log&quot;</span><span class="token punctuation">,</span>
		os<span class="token punctuation">.</span>O_APPEND<span class="token operator">|</span>os<span class="token punctuation">.</span>O_CREATE<span class="token operator">|</span>os<span class="token punctuation">.</span>O_WRONLY<span class="token punctuation">,</span>
		<span class="token number">0664</span><span class="token punctuation">,</span>
	<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">defer</span> file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger <span class="token operator">:=</span> zerolog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Msg</span><span class="token punctuation">(</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看日志:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>➜  demo_zlog <span class="token keyword">go</span> run main<span class="token punctuation">.</span><span class="token keyword">go</span>
➜  demo_zlog cat zlog<span class="token punctuation">.</span>log   
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-09-11T17:45:51+08:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;Info message&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gin框架中zerolog的应用" tabindex="-1"><a class="header-anchor" href="#gin框架中zerolog的应用" aria-hidden="true">#</a> Gin框架中zerolog的应用</h2>`,37)),s("p",null,[t(i,{to:"/posts/program/golang/%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6%E5%B7%A5%E5%85%B7/gin/gin-use-zerolog.html"},{default:g(()=>n[7]||(n[7]=[a("gin框架中使用zerolog日志库")])),_:1})])])}const y=l(b,[["render",x],["__file","zerolog.html.vue"]]);export{y as default};
