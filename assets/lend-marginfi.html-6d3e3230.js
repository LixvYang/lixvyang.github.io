import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as i,b as s,f as u,e,d as a,a as p}from"./app-eb0ff571.js";const r="/assets/images/crypto/marginfi-lend.png",k={},d={href:"https://marginfi.com/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://app.marginfi.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.marginfi.com/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://app.marginfi.com/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.thearena.trade/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://app.marginfi.com/looper",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/mrgnlabs/marginfi-v2/tree/main/programs/marginfi",target:"_blank",rel:"noopener noreferrer"};function y(w,n){const t=c("ExternalLinkIcon");return l(),i("div",null,[n[14]||(n[14]=s("p",null,"MarginFi 协议是Solana生态最知名成熟的借贷协议之一，其借贷模型很多参考了Solend(这位是Solana上最古老的借贷协议)，本文涉及对MarginFi源代码的解析。",-1)),n[15]||(n[15]=s("p",null,"本来想写ETH生态的AAVE，但对MarginFi最熟悉，就先写这个了。",-1)),u(" more "),n[16]||(n[16]=e('<h1 id="defi乐高之借贷协议-2-marginfi" tabindex="-1"><a class="header-anchor" href="#defi乐高之借贷协议-2-marginfi" aria-hidden="true">#</a> Defi乐高之借贷协议(2)--MarginFi</h1><h2 id="marginfi-vs-solend" tabindex="-1"><a class="header-anchor" href="#marginfi-vs-solend" aria-hidden="true">#</a> MarginFi VS Solend</h2><p>Marginfi 是一个开源的流动性借贷协议, Marginfi的很多影子都有借鉴 Solend。</p><p>由于 SoLend 和 SUI 生态的 SuiLend 是同一个团队在做，同时其团队重心已经在Sui生态倾斜，SoLend 已经没什么开发了，所以要在 Solana上 学习和使用借贷协议应该优先考虑正在活跃开发的 Marginfi，但如果你是有巨量资金并有安全考虑则应该使用 SoLend。</p><h2 id="marginfi-介绍" tabindex="-1"><a class="header-anchor" href="#marginfi-介绍" aria-hidden="true">#</a> MarginFi 介绍</h2>',5)),s("p",null,[s("a",d,[n[0]||(n[0]=a("MarginFi")),p(t)]),n[2]||(n[2]=a(" 是Solana生态上的去中心化借贷协议，利用Solana的高吞吐量和低费用提供了非常流畅的借贷体验,借贷")),s("a",m,[n[1]||(n[1]=a("Lend官网")),p(t)]),n[3]||(n[3]=a("。"))]),n[17]||(n[17]=s("figure",null,[s("img",{src:r,alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1)),s("p",null,[s("a",v,[n[4]||(n[4]=a("介绍文档")),p(t)]),n[5]||(n[5]=a("中有介绍其的核心机制，是Marginfi协议最全的资料，要想更深入就只能去翻源代码了。"))]),n[18]||(n[18]=e(`<h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>一个Solana地址支持多个账户, 你可以在自己的一个Solana地址初始化多个借贷账户只要支付租金就可以了。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>Lend</li></ol><p>在 Marginfi 中，用户存入资产后不会获得独立的代币凭证（区别于 AAVE 的 aToken），而是在协议内部记录用户的存款份额。</p><p>比如我存入了 1SOl 到 MarginFi中，那么在 MarginFi 协议中会有对应的 Share 份额记录，协议内部为每个Share进行维护当我 Withdraw 时会连本带息将所有的资金都拿回(内部处理没有这么简单，但这是最简单的表述方式)。</p><ol start="2"><li>Borrow</li></ol><p>只要你有足够的可作为抵押的抵押品，那么你可以借出其他的资产(不能同时lend/borrow同一个资产)</p><p>MarginFi采用统一抵押池方式，不同于AAVE的资产隔离，这种方式反而更方便(仅需要对某些隔离代币进行单独设置即可达到AAVE的隔离效果)，好处:</p><ul><li>所有存入的资产共同作为借款的抵押品</li><li>用户可以借出任何支持的资产，只要总体健康因子保持在安全范围内</li><li>只有单一的可变利率模式，没有固定利率选项（简化设计）</li></ul><ol><li>Withdraw</li></ol><p>没什么特殊讲的，连本带息拿回即可，需要保证账户健康因子处于健康状态。</p><ol start="4"><li>Repay</li></ol><p>Marginfi 支持部分或全部偿还借款。由于 Solana 的低交易费用，用户可以更频繁地进行小额偿还，提高健康因子。</p><ol start="5"><li>Health Factor</li></ol><p>每个账户的健康状况都以 health factor 表示。账户健康因子是一个单一值，概括了投资组合的健康状况。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>A = 1 - liabilities(weight) / asset(weight)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>帐户运行状况通常在 0% 到 100% 之间，但从技术上讲可以低至 -∞。当您的账户健康状况达到 0% 或以下时，您将面临清算风险。</p><p>下面对上面的公式进行概念介绍(用官网的介绍):</p><p>当你在 marginfi 上借出资产时，在为抵押品定价时需要牢记以下几点：</p><ul><li>每项资产都有一个由其预言机确定的市场美元价格。</li><li>每项资产都有一个经过置信区间调整的市场美元价格，由价格预言机 95% 置信区间的下限决定。</li><li>每项资产都有一个加权价格，即置信区间调整后的市场美元价格乘以资产的存款权重。</li></ul><p>以下是一个例子：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>假设价格预言机提供的 SOL 市场美元价格为 25 美元。

价格预言机的 95% 置信区间为 +/- 1 美元，即 24-26 美元。此置信区间的下限为 24 美元，因此置信区间调整后的市场美元价格为 24 美元。
假设 marginfi 上的 SOL 资产权重为 90%。我们将置信区间调整后的市场美元价格乘以资产权重，即 24 美元 * 90%。

经过所有调整后，SOL 作为抵押品的价格为 24 * 0.9 = 21.60 美元。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与资产类似，marginfi 上的债务也进行调整：</p><ul><li>每项债务都有一个由其预言机确定的市场美元价格。该市场美元价格与给定代币出借时的市场美元价格相同。</li><li>每项债务都有一个经过置信区间调整的市场美元价格，由价格预言机 95% 置信区间的上限决定。</li><li>每项债务都有一个加权价格，即置信区间调整后的市场美元价格乘以债务的借入权重。</li></ul><p>以下是一个例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>假设价格预言机提供的 SOL 市场美元价格为 25 美元。

价格预言机的 95% 置信区间为 +/- 1 美元，即 24-26 美元。此置信区间的上限为 26 美元，因此置信区间调整后的市场美元价格为 26 美元。
假设 marginfi 上的 SOL LTV 为 80%。我们将置信区间调整后的市场美元价格乘以 1/LTV1 。在本例中为 1/0.80=1.25。

经过所有调整后，SOL 的债务价格为 26*1.25 = 32.50 美元。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>Liquidate</li></ol><p>协议的清算非常重要，这是在极端行情下协议仍能安全运行的必要条件。</p><p>MarginFi的清算条件非常保守，当账户面临清算时，借款人将承担 5% 的清算罚款(5%的罚款从抵押品中扣除)，由清算人（2.5%）和 Marginfi 协议的保险基金（2.5%）平分。协议采用部分清算方式，仅清算将账户健康因子恢复到 1 所需的最小金额的资产,比起AAVE的激进50%清算已经相当保守了。</p><p>最终结果是:</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>借款人失去抵押品 (1+5%)
清算人: 支付债务，获得抵押品(1+2.5%)
协议方: 获取抵押品(2.5%)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然还有一种最坏的情况,即银行发生有个坏账账户无人清算且保险基金无法全部偿还，那么可能会启动最差的坏账程序，让损失平摊在所有存款人上，相当于是所有存款人来平均支付坏账，后面会有代码分析。</p><h2 id="玩法" tabindex="-1"><a class="header-anchor" href="#玩法" aria-hidden="true">#</a> 玩法</h2><p>总的来说 Marginfi 支持相当多的玩法，官网列出的有:</p><ol><li><p>收益聚合器<br> 描述：创建一个平台，自动将用户资金在各种借贷协议之间转移，以最大化他们的年化收益率(APY)。<br> 好处：用户无需手动跟踪和转移资金，就能从其加密资产获得尽可能高的回报。</p></li><li><p>去中心化稳定币<br> 描述：开发一个稳定币系统，通过超额抵押的加密贷款来维持价格稳定。<br> 好处：用户可以通过抵押他们的加密资产借出稳定币，提供稳定的交换媒介，同时保持他们的加密投资不变。</p></li><li><p>杠杆交易平台<br> 描述：构建一个允许用户借入资金以增加交易仓位规模的平台，从而实现更高的潜在回报。<br> 好处：交易者可以通过杠杆借款放大收益，而贷款人则可以从提供的资金中赚取利息。</p></li><li><p>自动化投资顾问<br> 描述：设计一个人工智能驱动的投资顾问，使用借贷策略优化用户投资组合。<br> 好处：用户获得个性化的投资建议，利用借贷平衡风险和回报。</p></li><li><p>DeFi交易所的流动性池<br> 描述：创建为去中心化交易所提供即时贷款的流动性池，促进平滑快速的交易。<br> 好处：流动性提供者从资金中赚取利息，而交易者则受益于改善的市场流动性和减少的滑点。</p></li><li><p>加密货币储蓄账户<br> 描述：提供储蓄账户，用户可以存入加密资产赚取稳定的利率。<br> 好处：用户可以享受与传统银行储蓄账户类似的安全可预测的加密资产回报。</p></li><li><p>闪电贷套利机器人<br> 描述：开发使用闪电贷款利用多个交易所之间价格差异的机器人，通过套利赚取利润。<br> 好处：套利机器人可以迅速利用市场低效率，提供稳定回报。</p></li><li><p>抵押NFT贷款<br> 描述：允许用户以NFT作为抵押品进行借款。<br> 好处：NFT持有者无需出售其宝贵的数字资产即可释放流动性。</p></li><li><p>去中心化保险平台<br> 描述：创建通过借出资金赚取利息来覆盖潜在索赔的保险平台。<br> 好处：保险池通过借贷增加资金，确保为所有成员提供足够的保障。</p></li><li><p>DAO财库管理<br> 描述：使DAO能够通过出借闲置资金赚取利息，更有效地管理其财库。<br> 好处：DAO可以通过储备金产生被动收入来增加财务可持续性。</p></li></ol><p>目前 MarginFi 团队已经做了杠杆交易的产品做多做空的产品:</p>`,36)),s("ul",null,[s("li",null,[s("a",b,[n[6]||(n[6]=a("MrgnLend")),p(t)]),n[7]||(n[7]=a(" 核心产品所有代币的借贷."))]),s("li",null,[s("a",_,[n[8]||(n[8]=a("Arena")),p(t)]),n[9]||(n[9]=a(" 主要是杠杆交易 Meme 币."))]),s("li",null,[s("a",f,[n[10]||(n[10]=a("MrgnLoop")),p(t)]),n[11]||(n[11]=a(" 多次套利协议."))])]),n[19]||(n[19]=s("h2",{id:"核心代码交互",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#核心代码交互","aria-hidden":"true"},"#"),a(" 核心代码交互")],-1)),s("p",null,[n[13]||(n[13]=a("这里涉及分析 MarginFi 的核心代码大概3000行左右 ")),s("a",g,[n[12]||(n[12]=a("Marginfi Core")),p(t)])]),n[20]||(n[20]=e(`<p>我在翻 MarginFi 协议的代码过程中，我发现 MarginFi 协议支持非常多的参数，例如一个代币对应的银行可配置是否为隔离银行(不支持作为抵押品)，支持设置银行的Weight与LTV、 Max Supply、Max Borrow和各种Fee等等。</p><p>MarginFi是以Group形式管理多个Bank的，一个Bank管理一个代币。</p><p>你可以理解为: 一个Group可以管理多个银行对应代币的借贷行为，支持设置Group Fee支持组级别的费用,我们在上面看到的 Lend 界面其实就是一个 Group 下面对应的所有 Bank。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>其实不同组可以创建相同的银行代币，比如如果我想为Mixin生态的代币也建立一个Mixin Group，那么我可以在自己的组内创建Solana代币的银行，创建XIN代币的银行等等。</p><p>你可以看下核心代码中支持的设置，一个 Bank 对应的就是一个代币:</p></div><p>创建银行的可配置项非常多:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token comment">/// 创建银行配置</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">BankConfigCompact</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> asset_weight_init<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span>  <span class="token comment">// 初始资产权重</span>
    <span class="token keyword">pub</span> asset_weight_maint<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span> <span class="token comment">// 维护资产权重</span>

    <span class="token keyword">pub</span> liability_weight_init<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span> <span class="token comment">// 初始债务权重</span>
    <span class="token keyword">pub</span> liability_weight_maint<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span> <span class="token comment">// 维护债务权重</span>

    <span class="token keyword">pub</span> deposit_limit<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span> <span class="token comment">// 存款限额</span>
    <span class="token keyword">pub</span> borrow_limit<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span> <span class="token comment">// 借款限额</span>
  
    <span class="token keyword">pub</span> interest_rate_config<span class="token punctuation">:</span> <span class="token class-name">InterestRateConfigCompact</span><span class="token punctuation">,</span> <span class="token comment">// 利率配置</span>
    <span class="token keyword">pub</span> operational_state<span class="token punctuation">:</span> <span class="token class-name">BankOperationalState</span><span class="token punctuation">,</span>         <span class="token comment">// 银行操作状态 Paused,Operational,ReduceOnly</span>

    <span class="token keyword">pub</span> oracle_setup<span class="token punctuation">:</span> <span class="token class-name">OracleSetup</span><span class="token punctuation">,</span> <span class="token comment">// 预言机设置</span>
    <span class="token keyword">pub</span> oracle_key<span class="token punctuation">:</span> <span class="token class-name">Pubkey</span><span class="token punctuation">,</span>        <span class="token comment">// 预言机密钥</span>
    <span class="token keyword">pub</span> risk_tier<span class="token punctuation">:</span> <span class="token class-name">RiskTier</span><span class="token punctuation">,</span> <span class="token comment">// 风险等级 是否是隔离资产</span>
    <span class="token keyword">pub</span> total_asset_value_init_limit<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span> <span class="token comment">// 初始化保证金要求的资产价值限额（以美元计）</span>
    <span class="token keyword">pub</span> oracle_max_age<span class="token punctuation">:</span> <span class="token keyword">u16</span><span class="token punctuation">,</span> <span class="token comment">// 预言机价格数据的最大有效时间（秒）</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">InterestRateConfig</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> optimal_utilization_rate<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span> <span class="token comment">// 最优利用率</span>
    <span class="token keyword">pub</span> plateau_interest_rate<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span>    <span class="token comment">// 平台利率</span>
    <span class="token keyword">pub</span> max_interest_rate<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span>        <span class="token comment">// 最大利率</span>
    <span class="token keyword">pub</span> insurance_fee_fixed_apr<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span> <span class="token comment">// 固定年利率的保险费</span>
    <span class="token keyword">pub</span> insurance_ir_fee<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span>        <span class="token comment">// 保险利率费用</span>
    <span class="token keyword">pub</span> protocol_fixed_fee_apr<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span>  <span class="token comment">// 固定年利率的协议费用</span>
    <span class="token keyword">pub</span> protocol_ir_fee<span class="token punctuation">:</span> <span class="token class-name">WrappedI80F48</span><span class="token punctuation">,</span>         <span class="token comment">// 协议利率费用</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token comment">/// 利用率计算采用 分段线性利率函数。</span>
<span class="token comment">/// 参数 ur 是 资金利用率 borrow/lend </span>
<span class="token comment">/// 当利用率接近 \`optimal_utilization_rate\` 时，曲线接近 \`plateau_interest_rate\`，</span>
<span class="token comment">/// 一旦利用率超过 \`optimal_utilization_rate\`，曲线接近 \`max_interest_rate\`。</span>
<span class="token keyword">fn</span> <span class="token function-definition function">interest_rate_curve</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> ur<span class="token punctuation">:</span> <span class="token constant">I80F48</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token constant">I80F48</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> optimal_ur <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>optimal_utilization_rate<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> plateau_ir <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>plateau_interest_rate<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> max_ir<span class="token punctuation">:</span> <span class="token constant">I80F48</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>max_interest_rate<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> ur <span class="token operator">&lt;=</span> optimal_ur <span class="token punctuation">{</span>
        ur<span class="token punctuation">.</span><span class="token function">checked_div</span><span class="token punctuation">(</span>optimal_ur<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span>plateau_ir<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>ur <span class="token operator">-</span> optimal_ur<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">checked_div</span><span class="token punctuation">(</span><span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ONE</span> <span class="token operator">-</span> optimal_ur<span class="token punctuation">)</span><span class="token operator">?</span>
            <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span>max_ir <span class="token operator">-</span> plateau_ir<span class="token punctuation">)</span><span class="token operator">?</span>
            <span class="token punctuation">.</span><span class="token function">checked_add</span><span class="token punctuation">(</span>plateau_ir<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token comment">/// 返回借款人和存款人的利率。</span>
<span class="token comment">/// 利率以年利率（APR）表示（0-）。</span>
<span class="token comment">///</span>
<span class="token comment">/// utilization_ratio 利用率，表示已使用的资源占总资源的比例</span>
<span class="token comment">/// 返回 (\`lending_rate\`, \`borrowing_rate\`, \`group_fees_apr\`\`insurance_fees_apr\`)</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">calc_interest_rate</span><span class="token punctuation">(</span>
    <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span>
    utilization_ratio<span class="token punctuation">:</span> <span class="token constant">I80F48</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token constant">I80F48</span><span class="token punctuation">,</span> <span class="token constant">I80F48</span><span class="token punctuation">,</span> <span class="token constant">I80F48</span><span class="token punctuation">,</span> <span class="token constant">I80F48</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> protocol_ir_fee <span class="token operator">=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>protocol_ir_fee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> insurance_ir_fee <span class="token operator">=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>insurance_ir_fee<span class="token punctuation">)</span>
    <span class="token keyword">let</span> protocol_fixed_fee_apr <span class="token operator">=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>selprotocol_fixed_fee_apr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> insurance_fee_fixed_apr <span class="token operator">=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>selinsurance_fee_fixed_apr<span class="token punctuation">)</span>
    <span class="token comment">// 计算总的利率费用和总的固定年利率费用</span>
    <span class="token keyword">let</span> rate_fee <span class="token operator">=</span> protocol_ir_fee <span class="token operator">+</span> insurance_ir_fee<span class="token punctuation">;</span>
    <span class="token keyword">let</span> total_fixed_fee_apr <span class="token operator">=</span> protocol_fixed_fee_apr insurance_fee_fixed_apr
    <span class="token comment">// 计算基础利率</span>
    <span class="token keyword">let</span> base_rate <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">interest_rate_cur</span><span class="token punctuation">(</span>utilization_ratio<span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token comment">// 根据利用率调整存款利率，使借款人和存款人之间的支付对称化</span>
    <span class="token keyword">let</span> lending_rate <span class="token operator">=</span> base_rate<span class="token punctuation">.</span><span class="token function">checked_m</span><span class="token punctuation">(</span>utilization_ratio<span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token macro property">debug!</span><span class="token punctuation">(</span><span class="token string">&quot;base_rate: {:?}&quot;</span><span class="token punctuation">,</span> base_rate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">debug!</span><span class="token punctuation">(</span><span class="token string">&quot;rate_fee: {:?}&quot;</span><span class="token punctuation">,</span> rate_fee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">debug!</span><span class="token punctuation">(</span><span class="token string">&quot;total_fixed_fee_apr: {:?}&quot;</span><span class="token punctuation">,</span> total_fixed_fee_apr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 根据费用调整借款利率</span>
    <span class="token comment">// borrowing_rate = base_rate + base_rate * rate_fee total_fixed_fee_apr</span>
    <span class="token keyword">let</span> borrowing_rate <span class="token operator">=</span> base_rate
        <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span><span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ONE</span><span class="token punctuation">.</span><span class="token function">checked_add</span><span class="token punctuation">(</span>rate_fee<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">?</span>
        <span class="token punctuation">.</span><span class="token function">checked_add</span><span class="token punctuation">(</span>total_fixed_fee_apr<span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token comment">// 计算组费用的年利率</span>
    <span class="token keyword">let</span> group_fees_apr <span class="token operator">=</span> <span class="token function">calc_fee_rate</span><span class="token punctuation">(</span>
        base_rate<span class="token punctuation">,</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>protocol_ir_fee<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>protocol_fixed_fee_apr<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token comment">// 计算保险费用的年利率</span>
    <span class="token keyword">let</span> insurance_fees_apr <span class="token operator">=</span> <span class="token function">calc_fee_rate</span><span class="token punctuation">(</span>
        base_rate<span class="token punctuation">,</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>insurance_ir_fee<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>insurance_fee_fixed_apr<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token operator">?</span>
    <span class="token comment">// 确保所有利率均为非负值</span>
    <span class="token macro property">assert!</span><span class="token punctuation">(</span>lending_rate <span class="token operator">&gt;=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ZERO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">assert!</span><span class="token punctuation">(</span>borrowing_rate <span class="token operator">&gt;=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ZERO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">assert!</span><span class="token punctuation">(</span>group_fees_apr <span class="token operator">&gt;=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ZERO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">assert!</span><span class="token punctuation">(</span>insurance_fees_apr <span class="token operator">&gt;=</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ZERO</span><span class="token punctuation">)</span>
    <span class="token comment">// 返回计算出的利率</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>
        lending_rate<span class="token punctuation">,</span>
        borrowing_rate<span class="token punctuation">,</span>
        group_fees_apr<span class="token punctuation">,</span>
        insurance_fees_apr<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码可以看到lend 和 borrow 之间的利息差主要是支付给了协议组方和保险库等等.</p><p>保险费是在无人清算时使用的，每次有人还款时一部分资金都会进入到保险金库，后面如果某个用户的健康不足且无人清算的情况下，可以使用保险金库进行清算。</p><p>利率计算代码:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token comment">/// 每次有 Lend/Borrow/Repay/Withdraw/... 行为时都会计算利息:</span>
<span class="token comment">/// 核心逻辑就是计算上次行为距今有多久,然后根据时间、利用率计算利息，并将利息存到保险账户、银行账户、费用账户，然后更新每个份额的价值。</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">accrue_interest</span><span class="token punctuation">(</span>
    <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span>
    current_timestamp<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
    <span class="token attribute attr-name">#[cfg(not(feature = <span class="token string">&quot;client&quot;</span>))]</span> bank<span class="token punctuation">:</span> <span class="token class-name">Pubkey</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">MarginfiResult</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[cfg(all(not(feature = <span class="token string">&quot;client&quot;</span>), feature = <span class="token string">&quot;debug&quot;</span>))]</span>
    <span class="token namespace">solana_program<span class="token punctuation">::</span>log<span class="token punctuation">::</span></span><span class="token function">sol_log_compute_units</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 计算时间差</span>
    <span class="token keyword">let</span> time_delta<span class="token punctuation">:</span> <span class="token keyword">u64</span> <span class="token operator">=</span> <span class="token punctuation">(</span>current_timestamp <span class="token operator">-</span> <span class="token keyword">self</span><span class="token punctuation">.</span>last_update<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 如果时间差为0，直接返回</span>
    <span class="token keyword">if</span> time_delta <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 获取总资产和总债务</span>
    <span class="token keyword">let</span> total_assets <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">get_asset_amount</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>total_asset_shares<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> total_liabilities <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">get_liability_amount</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>total_liability_shares<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token comment">// 更新最后更新时间</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span>last_update <span class="token operator">=</span> current_timestamp<span class="token punctuation">;</span>

    <span class="token comment">// 如果总资产或总债务为0，记录事件并返回</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>total_assets <span class="token operator">==</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>total_liabilities <span class="token operator">==</span> <span class="token constant">I80F48</span><span class="token punctuation">::</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token attribute attr-name">#[cfg(not(feature = <span class="token string">&quot;client&quot;</span>))]</span>
        <span class="token macro property">emit!</span><span class="token punctuation">(</span><span class="token class-name">LendingPoolBankAccrueInterestEvent</span> <span class="token punctuation">{</span>
            header<span class="token punctuation">:</span> <span class="token class-name">GroupEventHeader</span> <span class="token punctuation">{</span>
                marginfi_group<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span>group<span class="token punctuation">,</span>
                signer<span class="token punctuation">:</span> <span class="token class-name">None</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            bank<span class="token punctuation">,</span>
            mint<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span>
            delta<span class="token punctuation">:</span> time_delta<span class="token punctuation">,</span>
            fees_collected<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span>
            insurance_collected<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 计算利率累积状态变化</span>
    <span class="token keyword">let</span> <span class="token punctuation">(</span>asset_share_value<span class="token punctuation">,</span> liability_share_value<span class="token punctuation">,</span> fees_collected<span class="token punctuation">,</span> insurance_collected<span class="token punctuation">)</span> <span class="token operator">=</span>
        <span class="token function">calc_interest_rate_accrual_state_changes</span><span class="token punctuation">(</span>
            time_delta<span class="token punctuation">,</span>
            total_assets<span class="token punctuation">,</span>
            total_liabilities<span class="token punctuation">,</span>
            <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>interest_rate_config<span class="token punctuation">,</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span>asset_share_value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span>liability_share_value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token macro property">math_error!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

    <span class="token macro property">debug!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;存款份额价值: {}\\n债务份额价值: {}\\n收集的费用: {}\\n收集的保险费: {}&quot;</span><span class="token punctuation">,</span>
        asset_share_value<span class="token punctuation">,</span> liability_share_value<span class="token punctuation">,</span> fees_collected<span class="token punctuation">,</span> insurance_collected
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 更新资产和债务份额价值</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span>asset_share_value <span class="token operator">=</span> asset_share_value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span>liability_share_value <span class="token operator">=</span> liability_share_value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 更新收集的费用</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span>collected_group_fees_outstanding <span class="token operator">=</span> <span class="token punctuation">{</span>
        fees_collected
            <span class="token punctuation">.</span><span class="token function">checked_add</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>collected_group_fees_outstanding<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token macro property">math_error!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
            <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// 更新收集的保险费</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span>collected_insurance_fees_outstanding <span class="token operator">=</span> <span class="token punctuation">{</span>
        insurance_collected
            <span class="token punctuation">.</span><span class="token function">checked_add</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>collected_insurance_fees_outstanding<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token macro property">math_error!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
            <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token attribute attr-name">#[cfg(not(feature = <span class="token string">&quot;client&quot;</span>))]</span>
    <span class="token punctuation">{</span>
        <span class="token attribute attr-name">#[cfg(feature = <span class="token string">&quot;debug&quot;</span>)]</span>
        <span class="token namespace">solana_program<span class="token punctuation">::</span>log<span class="token punctuation">::</span></span><span class="token function">sol_log_compute_units</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 记录利率累积事件</span>
        <span class="token macro property">emit!</span><span class="token punctuation">(</span><span class="token class-name">LendingPoolBankAccrueInterestEvent</span> <span class="token punctuation">{</span>
            header<span class="token punctuation">:</span> <span class="token class-name">GroupEventHeader</span> <span class="token punctuation">{</span>
                marginfi_group<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span>group<span class="token punctuation">,</span>
                signer<span class="token punctuation">:</span> <span class="token class-name">None</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            bank<span class="token punctuation">,</span>
            mint<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span>
            delta<span class="token punctuation">:</span> time_delta<span class="token punctuation">,</span>
            fees_collected<span class="token punctuation">:</span> fees_collected<span class="token punctuation">.</span><span class="token function">to_num</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">f64</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            insurance_collected<span class="token punctuation">:</span> insurance_collected<span class="token punctuation">.</span><span class="token function">to_num</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">f64</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最差情况下的坏账处理，让所有存款人支付损失,其实是将每个人的份额减少:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token comment">/// 将 \`loss_amount\` 的损失在所有存款人之间分摊，</span>
<span class="token comment">/// \`total_deposit_shares\` 保持不变，但存款的总价值减少 \`loss_amount\`；</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">socialize_loss</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> loss_amount<span class="token punctuation">:</span> <span class="token constant">I80F48</span><span class="token punctuation">)</span><span class="token punctuation">-&gt;</span><span class="token class-name">MarginfiResult</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> total_asset_shares<span class="token punctuation">:</span> <span class="token constant">I80F48</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">total_asset_sharesint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> old_asset_share_value<span class="token punctuation">:</span> <span class="token constant">I80F48</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">asset_share_valueint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> new_share_value <span class="token operator">=</span> total_asset_shares
        <span class="token comment">// 旧的资产份额价值乘以总资产份额</span>
        <span class="token punctuation">.</span><span class="token function">checked_mul</span><span class="token punctuation">(</span>old_asset_share_value<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token macro property">math_error!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
        <span class="token comment">// 减去损失金额</span>
        <span class="token punctuation">.</span><span class="token function">checked_sub</span><span class="token punctuation">(</span>loss_amount<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token macro property">math_error!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span>
        <span class="token comment">// 除以总资产份额</span>
        <span class="token punctuation">.</span><span class="token function">checked_div</span><span class="token punctuation">(</span>total_asset_shares<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token macro property">math_error!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token comment">// 更新资产份额价值</span>
    <span class="token keyword">self</span><span class="token punctuation">.</span>asset_share_value <span class="token operator">=</span> new_share_value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h3><p>Marginfi 其实是相当灵活的协议,支持的参数非常多已经稳定运行两年多算是 Solend 的平替,用起来也相当方便,也有很多简单的套利机会.</p><p>我在用的套利,可能有安全风险:</p><blockquote><p>将 Sol 流动性质押获得 JitoSOL,将 JitoSOL 存入 MarginFI后,借 Pyth,再用 Pyth 去 Pyth 官网质押,可以获取5.5%左右 Pyth 本位的利差.</p></blockquote>`,18))])}const F=o(k,[["render",y],["__file","lend-marginfi.html.vue"]]);export{F as default};
