import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as u,c as i,b as s,d as a,f as l,e as o,a as p}from"./app-c1334058.js";const r={},k={href:"https://github.com/mongodb/mongo-go-driver",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/go-mgo/mgo",target:"_blank",rel:"noopener noreferrer"},m={href:"http://github.com/qiniu/qmgo",target:"_blank",rel:"noopener noreferrer"},g={id:"事务",tabindex:"-1"},v={href:"https://github.com/qiniu/qmgo/wiki/Transactions",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/qiniu/qmgo/wiki/Hooks--(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/qiniu/qmgo/blob/master/field_test.go",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/qiniu/qmgo/wiki/Automatically-update-fields",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/go-playground/validator",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/go-playground/validator#usage-and-documentation",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/qiniu/qmgo/blob/master/middleware/middleware_test.go%5D",target:"_blank",rel:"noopener noreferrer"};function w(A,n){const t=c("ExternalLinkIcon");return u(),i("div",null,[n[26]||(n[26]=s("p",null,[a("我大七牛提供的"),s("code",null,"qmgo"),a("最好用了...")],-1)),l(" more "),n[27]||(n[27]=o(`<h1 id="go操作mongo最便捷的方式" tabindex="-1"><a class="header-anchor" href="#go操作mongo最便捷的方式" aria-hidden="true">#</a> Go操作Mongo最便捷的方式</h1><p>本篇文章分为三个部分:</p><ol><li>介绍MongoDB</li><li>使用Docker启动MongoDB(有手就行,没手让AI帮忙也行)</li><li>在Go语言实操使用Qmgo摆弄MongoDB</li></ol><h2 id="介绍mongodb" tabindex="-1"><a class="header-anchor" href="#介绍mongodb" aria-hidden="true">#</a> 介绍MongoDB</h2><p>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案，MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p><p>NoSQL(NoSQL = Not Only SQL )，意即&quot;不仅仅是SQL&quot;。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><h3 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念" aria-hidden="true">#</a> 相关概念</h3><table><thead><tr><th>SQL术语/概念</th><th>Mongo术语/概念</th><th>解释/说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表/集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行/文档</td></tr><tr><td>column</td><td>filed</td><td>数据字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td>database</td><td>表连接,MongoDB不支持</td></tr><tr><td>primary key</td><td>primary key</td><td>主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><h3 id="mongodb安装以及简单上手" tabindex="-1"><a class="header-anchor" href="#mongodb安装以及简单上手" aria-hidden="true">#</a> MongoDB安装以及简单上手</h3><p>我们使用Docker来安装MongoDB，Docker可以很方便地启动MongoDB、Redis、MySQL等常见的组件，用起来很简单:</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当然首先你得确保你已经启动了Docker</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取Mongo6.0版本镜像</span>
<span class="token function">docker</span> pull mongo:6.0

<span class="token comment"># 启动运行mongo </span>
<span class="token comment"># docker中的名称是 mongodb</span>
<span class="token comment"># 自己主机端口号是27017 容器内对应的端口号也是27017</span>
<span class="token comment"># -d 是设置容器以守护进程方式运行</span>
<span class="token comment"># 想使用volumn持久化的话可以代替使用下面的两个命令</span>
<span class="token comment"># docker create volumn mongodb</span>
<span class="token comment"># docker run -p 27017:27017 --name mongodb -v mongodb:/data/db -d mongo</span>
<span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">27017</span>:27017 <span class="token parameter variable">--name</span> mongodb <span class="token parameter variable">-d</span> mongo

<span class="token comment"># 紧接着就可以通过以下命令行进入了mongo了</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mongodb mongosh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="go语言操作mongo" tabindex="-1"><a class="header-anchor" href="#go语言操作mongo" aria-hidden="true">#</a> Go语言操作Mongo</h2>`,14)),s("p",null,[n[2]||(n[2]=s("code",null,"Qmgo",-1)),n[3]||(n[3]=a("是一款Go语言的")),n[4]||(n[4]=s("code",null,"MongoDB",-1)),n[5]||(n[5]=a("驱动器，它基于官方提供的")),s("a",k,[n[0]||(n[0]=a("Mongo官方驱动器")),p(t)]),n[6]||(n[6]=a("开发实现，同时使用了更简便易懂的接口设计，比如参考了")),s("a",d,[n[1]||(n[1]=a("mgo")),p(t)]),n[7]||(n[7]=a("的链式调用。"))]),n[28]||(n[28]=o('<ul><li><p>Qmgo让您以更优雅的姿势使用MongoDB的新特性。</p></li><li><p>Qmgo是从mgo迁移到新MongoDB driver的第一选择，对代码的改动影响最小。</p></li></ul><h3 id="要求" tabindex="-1"><a class="header-anchor" href="#要求" aria-hidden="true">#</a> 要求</h3><ul><li>Go 1.10 及以上。</li><li>MongoDB 2.6 及以上。</li></ul><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h3><ul><li>文档的增删改查, 均支持官方driver支持的所有options</li><li>Sort、limit、count、select、distinct</li><li>事务</li><li>Hooks</li><li>自动化更新的默认和定制fields</li><li>预定义操作符</li><li>聚合Aggregate、索引操作、cursor</li><li>validation tags 基于tag的字段验证</li><li>可自定义插件化编程</li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>',6)),s("p",null,[n[9]||(n[9]=a("推荐方式是使用go mod，通过在源码中import ")),s("a",m,[n[8]||(n[8]=a("github.com/qiniu/qmgo")),p(t)]),n[10]||(n[10]=a(" 来自动安装依赖。"))]),n[29]||(n[29]=o(`<p>当然，通过下面方式同样可行：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">go</span> get github<span class="token punctuation">.</span>com<span class="token operator">/</span>qiniu<span class="token operator">/</span>qmgo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><h4 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h4><p><code>import</code>并新建连接</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span><span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>

    <span class="token string">&quot;github.com/qiniu/qmgo&quot;</span>
<span class="token punctuation">)</span>

ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
client<span class="token punctuation">,</span> err <span class="token operator">:=</span> qmgo<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>qmgo<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>Uri<span class="token punctuation">:</span> <span class="token string">&quot;mongodb://localhost:27017&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Database</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">)</span>
coll <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Collection</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的连接是指向固定的 database 和 collection，我们推荐使用下面的更方便的方法初始化连接，后续操作都基于cli而不用再关心 database 和 collection:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>cli<span class="token punctuation">,</span> err <span class="token operator">:=</span> qmgo<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>qmgo<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>Uri<span class="token punctuation">:</span> <span class="token string">&quot;mongodb://localhost:27017&quot;</span><span class="token punctuation">,</span> Database<span class="token punctuation">:</span> <span class="token string">&quot;class&quot;</span><span class="token punctuation">,</span> Coll<span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>后面都会基于cli来举例，如果你使用第一种传统的方式进行初始化，根据上下文，将cli替换成client、db 或 coll即可</p></div><p>在初始化成功后，请defer来关闭连接:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h4><p>做操作前，我们先初始化一些数据：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">type</span> UserInfo <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name   <span class="token builtin">string</span> <span class="token string">\`bson:&quot;name&quot;\`</span>
    Age    <span class="token builtin">uint16</span> <span class="token string">\`bson:&quot;age&quot;\`</span>
    Weight <span class="token builtin">uint32</span> <span class="token string">\`bson:&quot;weight&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> userInfo <span class="token operator">=</span> UserInfo<span class="token punctuation">{</span>
    Name<span class="token punctuation">:</span>   <span class="token string">&quot;xm&quot;</span><span class="token punctuation">,</span>
    Age<span class="token punctuation">:</span>    <span class="token number">7</span><span class="token punctuation">,</span>
    Weight<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建索引-1" tabindex="-1"><a class="header-anchor" href="#创建索引-1" aria-hidden="true">#</a> 创建索引</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>cli<span class="token punctuation">.</span><span class="token function">CreateOneIndex</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>IndexModel<span class="token punctuation">{</span>Key<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
cli<span class="token punctuation">.</span><span class="token function">CreateIndexes</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>options<span class="token punctuation">.</span>IndexModel<span class="token punctuation">{</span><span class="token punctuation">{</span>Key<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;id2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="插入一个文档" tabindex="-1"><a class="header-anchor" href="#插入一个文档" aria-hidden="true">#</a> 插入一个文档</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// insert one document</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">InsertOne</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查找一个文档" tabindex="-1"><a class="header-anchor" href="#查找一个文档" aria-hidden="true">#</a> 查找一个文档</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    <span class="token comment">// find one document</span>
  one <span class="token operator">:=</span> UserInfo<span class="token punctuation">{</span><span class="token punctuation">}</span>
  err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> userInfo<span class="token punctuation">.</span>Name<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">One</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>one<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除文档" tabindex="-1"><a class="header-anchor" href="#删除文档" aria-hidden="true">#</a> 删除文档</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="插入多条数据" tabindex="-1"><a class="header-anchor" href="#插入多条数据" aria-hidden="true">#</a> 插入多条数据</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// multiple insert</span>
<span class="token keyword">var</span> userInfos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>UserInfo<span class="token punctuation">{</span>
    UserInfo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;a1&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> Weight<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    UserInfo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;b2&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> Weight<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    UserInfo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;c3&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> Weight<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    UserInfo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;d4&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> Weight<span class="token punctuation">:</span> <span class="token number">35</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    UserInfo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;a1&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> Weight<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    UserInfo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;a1&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> Weight<span class="token punctuation">:</span> <span class="token number">45</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
result<span class="token punctuation">,</span> err <span class="token operator">=</span> cli<span class="token punctuation">.</span>Collection<span class="token punctuation">.</span><span class="token function">InsertMany</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> userInfos<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="批量查找sort和limit" tabindex="-1"><a class="header-anchor" href="#批量查找sort和limit" aria-hidden="true">#</a> 批量查找<code>Sort</code>和<code>Limit</code></h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// find all 、sort and limit</span>
batch <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>UserInfo<span class="token punctuation">{</span><span class="token punctuation">}</span>
cli<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span><span class="token string">&quot;weight&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">All</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>batch<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="count" tabindex="-1"><a class="header-anchor" href="#count" aria-hidden="true">#</a> Count</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>count<span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> Update</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// UpdateOne one</span>
err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">UpdateOne</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;d4&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;$set&quot;</span><span class="token punctuation">:</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// UpdateAll</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">UpdateAll</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;$set&quot;</span><span class="token punctuation">:</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> Select</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">One</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>one<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="aggregate" tabindex="-1"><a class="header-anchor" href="#aggregate" aria-hidden="true">#</a> Aggregate</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>matchStage <span class="token operator">:=</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;$match&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>bson<span class="token punctuation">.</span>E<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;weight&quot;</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;$gt&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
groupStage <span class="token operator">:=</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;$group&quot;</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;$sum&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$age&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> showsWithInfo <span class="token punctuation">[</span><span class="token punctuation">]</span>bson<span class="token punctuation">.</span>M
err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">Aggregate</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Pipeline<span class="token punctuation">{</span>matchStage<span class="token punctuation">,</span> groupStage<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">All</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>showsWithInfo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="建立连接时支持所有-mongodb-的options" tabindex="-1"><a class="header-anchor" href="#建立连接时支持所有-mongodb-的options" aria-hidden="true">#</a> 建立连接时支持所有 mongoDB 的Options</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>poolMonitor <span class="token operator">:=</span> <span class="token operator">&amp;</span>event<span class="token punctuation">.</span>PoolMonitor<span class="token punctuation">{</span>
    Event<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>evt <span class="token operator">*</span>event<span class="token punctuation">.</span>PoolEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> evt<span class="token punctuation">.</span>Type <span class="token punctuation">{</span>
        <span class="token keyword">case</span> event<span class="token punctuation">.</span>GetSucceeded<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;GetSucceeded&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">case</span> event<span class="token punctuation">.</span>ConnectionReturned<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;ConnectionReturned&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

opt <span class="token operator">:=</span> options<span class="token punctuation">.</span><span class="token function">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetPoolMonitor</span><span class="token punctuation">(</span>poolMonitor<span class="token punctuation">)</span>  <span class="token comment">// more options use the chain options.</span>
cli<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">Open</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Config<span class="token punctuation">{</span>Uri<span class="token punctuation">:</span> URI<span class="token punctuation">,</span> Database<span class="token punctuation">:</span> DATABASE<span class="token punctuation">,</span> Coll<span class="token punctuation">:</span> COLL<span class="token punctuation">}</span><span class="token punctuation">,</span> opt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36)),s("h4",g,[n[12]||(n[12]=s("a",{class:"header-anchor",href:"#事务","aria-hidden":"true"},"#",-1)),n[13]||(n[13]=a()),s("a",v,[n[11]||(n[11]=a("事务")),p(t)])]),n[30]||(n[30]=o(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>callback <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>sessCtx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 重要：确保事务中的每一个操作，都使用传入的sessCtx参数</span>
    <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">InsertOne</span><span class="token punctuation">(</span>sessCtx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token function">int32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">InsertOne</span><span class="token punctuation">(</span>sessCtx<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;xyz&quot;</span><span class="token punctuation">,</span> <span class="token function">int32</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
result<span class="token punctuation">,</span> err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">DoTransaction</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="预定义操作符" tabindex="-1"><a class="header-anchor" href="#预定义操作符" aria-hidden="true">#</a> 预定义操作符</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// aggregate</span>
matchStage <span class="token operator">:=</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span>operator<span class="token punctuation">.</span>Match<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>bson<span class="token punctuation">.</span>E<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;weight&quot;</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span>operator<span class="token punctuation">.</span>Gt<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
groupStage <span class="token operator">:=</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span>operator<span class="token punctuation">.</span>Group<span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;$name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>D<span class="token punctuation">{</span><span class="token punctuation">{</span>operator<span class="token punctuation">.</span>Sum<span class="token punctuation">,</span> <span class="token string">&quot;$age&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> showsWithInfo <span class="token punctuation">[</span><span class="token punctuation">]</span>bson<span class="token punctuation">.</span>M
err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">Aggregate</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Pipeline<span class="token punctuation">{</span>matchStage<span class="token punctuation">,</span> groupStage<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">All</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>showsWithInfo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks" aria-hidden="true">#</a> Hooks</h4>`,4)),s("p",null,[n[15]||(n[15]=a("Qmgo 灵活的 ")),s("a",b,[n[14]||(n[14]=a("hooks")),p(t)]),n[16]||(n[16]=a(":"))]),n[31]||(n[31]=o(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name         <span class="token builtin">string</span>    <span class="token string">\`bson:&quot;name&quot;\`</span>
    Age          <span class="token builtin">int</span>       <span class="token string">\`bson:&quot;age&quot;\`</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">BeforeInsert</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;before insert called&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">AfterInsert</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;after insert called&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

u <span class="token operator">:=</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span>
<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">InsertOne</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自动化更新fields" tabindex="-1"><a class="header-anchor" href="#自动化更新fields" aria-hidden="true">#</a> 自动化更新fields</h4><p>Qmgo支持2种方式来自动化更新特定的字段</p><ul><li>默认 fields</li></ul><p>在文档结构体里注入 <code>field.DefaultField</code>, <code>Qmgo</code> 会自动在更新和插入操作时更新 <code>createAt</code>、<code>updateAt</code> and <code>_id</code> field的值.</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    field<span class="token punctuation">.</span>DefaultField <span class="token string">\`bson:&quot;,inline&quot;\`</span>
    
    Name <span class="token builtin">string</span> <span class="token string">\`bson:&quot;name&quot;\`</span>
    Age  <span class="token builtin">int</span>    <span class="token string">\`bson:&quot;age&quot;\`</span>
<span class="token punctuation">}</span>

u <span class="token operator">:=</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;Lucas&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span>
<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">InsertOne</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">)</span>
<span class="token comment">// tag为createAt、updateAt 和 _id 的字段会自动更新插入</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Custom fields</li></ul><p>可以自定义field名, Qmgo 会自动在更新和插入操作时更新他们.</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name <span class="token builtin">string</span> <span class="token string">\`bson:&quot;name&quot;\`</span>
    Age  <span class="token builtin">int</span>    <span class="token string">\`bson:&quot;age&quot;\`</span>

    MyId         <span class="token builtin">string</span>    <span class="token string">\`bson:&quot;myId&quot;\`</span>
    CreateTimeAt time<span class="token punctuation">.</span>Time <span class="token string">\`bson:&quot;createTimeAt&quot;\`</span>
    UpdateTimeAt <span class="token builtin">int64</span>     <span class="token string">\`bson:&quot;updateTimeAt&quot;\`</span>
<span class="token punctuation">}</span>
<span class="token comment">// 指定自定义field的field名</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">CustomFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> field<span class="token punctuation">.</span>CustomFieldsBuilder <span class="token punctuation">{</span>
    <span class="token keyword">return</span> field<span class="token punctuation">.</span><span class="token function">NewCustom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetCreateAt</span><span class="token punctuation">(</span><span class="token string">&quot;CreateTimeAt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetUpdateAt</span><span class="token punctuation">(</span><span class="token string">&quot;UpdateTimeAt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetId</span><span class="token punctuation">(</span><span class="token string">&quot;MyId&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

u <span class="token operator">:=</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;Lucas&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span>
<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">InsertOne</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">)</span>
<span class="token comment">// CreateTimeAt、UpdateTimeAt and MyId 会自动更新并插入DB </span>

<span class="token comment">// 假设Id和ui已经初始化</span>
err <span class="token operator">=</span> cli<span class="token punctuation">.</span><span class="token function">ReplaceOne</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bson<span class="token punctuation">.</span>M<span class="token punctuation">{</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">:</span> Id<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ui<span class="token punctuation">)</span>
<span class="token comment">// UpdateTimeAt 会被自动更新</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),s("p",null,[s("a",h,[n[17]||(n[17]=a("例子介绍")),p(t)])]),s("p",null,[s("a",f,[n[18]||(n[18]=a("自动化 fields 详情介绍")),p(t)])]),n[32]||(n[32]=s("h4",{id:"validation-tags-基于tag的字段验证",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#validation-tags-基于tag的字段验证","aria-hidden":"true"},"#"),a(),s("code",null,"Validation tags"),a(" 基于tag的字段验证")],-1)),s("p",null,[n[20]||(n[20]=a("功能基于")),s("a",q,[n[19]||(n[19]=a("go-playground/validator")),p(t)]),n[21]||(n[21]=a("实现。"))]),s("p",null,[n[23]||(n[23]=a("所以Qmgo支持所有")),s("a",x,[n[22]||(n[22]=a("go-playground/validator 的struct验证规则")),p(t)]),n[24]||(n[24]=a("，比如："))]),n[33]||(n[33]=o('<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n    FirstName <span class="token builtin">string</span>            <span class="token string">`bson:&quot;fname&quot;`</span>\n    LastName  <span class="token builtin">string</span>            <span class="token string">`bson:&quot;lname&quot;`</span>\n    Age       <span class="token builtin">uint8</span>             <span class="token string">`bson:&quot;age&quot; validate:&quot;gte=0,lte=130&quot; `</span>    <span class="token comment">// Age must in [0,130]</span>\n    Email     <span class="token builtin">string</span>            <span class="token string">`bson:&quot;e-mail&quot; validate:&quot;required,email&quot;`</span> <span class="token comment">//  Email can&#39;t be empty string, and must has email format</span>\n    CreateAt  time<span class="token punctuation">.</span>Time         <span class="token string">`bson:&quot;createAt&quot; validate:&quot;lte&quot;`</span>          <span class="token comment">// CreateAt must lte than current time</span>\n    Relations <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">`bson:&quot;relations&quot; validate:&quot;max=2&quot;`</span>       <span class="token comment">// Relations can&#39;t has more than 2 elements</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本功能只对以下API有效： <code>InsertOne</code>、<code>InsertyMany</code>、<code>Upsert</code>、<code>UpsertId</code>、<code>ReplaceOne</code></p><p>插件化编程</p><p>实现以下方法</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Do</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> doc <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> opType operator<span class="token punctuation">.</span>OpType<span class="token punctuation">,</span> opts <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span><span class="token punctuation">{</span>\n  <span class="token comment">// do anything</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用middleware包的Register方法，注入Do Qmgo会在支持的操作执行前后调用Do</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>middleware<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>Do<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',7)),s("p",null,[s("a",y,[n[25]||(n[25]=a("Example")),p(t)])]),n[34]||(n[34]=s("p",null,"Qmgo的hook、自动更新field和validation tags都基于plugin的方式实现",-1))])}const I=e(r,[["render",w],["__file","qmgo.html.vue"]]);export{I as default};
